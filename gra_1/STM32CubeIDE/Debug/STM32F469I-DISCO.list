
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001efa0  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003e5c  0801f160  0801f160  0002f160  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  08022fbc  08022fbc  00032fbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08022fd4  08022fd4  009751dc  2**0
                  CONTENTS
  5 .ARM          00000008  08022fd4  08022fd4  00032fd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08022fdc  08022fdc  009751dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08022fdc  08022fdc  00032fdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08022ff4  08022ff4  00032ff4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08022ffc  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000d4dc  20000140  0802313c  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002004  2000d61c  0802313c  0004d61c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  009751dc  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 009232b8  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00001ee0  909232b8  909232b8  009732b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000044  90925198  90925198  00975198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00051f5c  00000000  00000000  0097520c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000bde8b  00000000  00000000  009c7168  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00016518  00000000  00000000  00a84ff3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002c30  00000000  00000000  00a9b510  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0012ec91  00000000  00000000  00a9e140  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00004df8  00000000  00000000  00bccdd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000274a1  00000000  00000000  00bd1bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003967b  00000000  00000000  00bf9071  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00c326ec  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000081f0  00000000  00000000  00c327bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801f148 	.word	0x0801f148

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801f148 	.word	0x0801f148

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 ffb7 	bl	8004540 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01d fd53 	bl	801e07c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff85 	bl	80014e4 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	08022ffc 	.word	0x08022ffc
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000d61c 	.word	0x2000d61c

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf5 	b.w	80011e4 <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be65 	b.w	80012c8 <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f003 bb05 	b.w	8003c10 <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f003 bb3c 	b.w	8003c84 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01d fc99 	bl	801df8a <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01d fc58 	bl	801df8a <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01d fc50 	bl	801df8a <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f003 fe73 	bl	80043e4 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2124      	movs	r1, #36	; 0x24
 8000716:	f01d fc67 	bl	801dfe8 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801f1ec 	.word	0x0801f1ec
 8000724:	0801f1ff 	.word	0x0801f1ff
 8000728:	0801f229 	.word	0x0801f229

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 fe8b 	bl	8004454 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	b110      	cbz	r0, 8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000762:	2801      	cmp	r0, #1
 8000764:	d009      	beq.n	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000766:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000768:	4b08      	ldr	r3, [pc, #32]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800076a:	4809      	ldr	r0, [pc, #36]	; (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	f005 b819 	b.w	80057ac <HAL_GPIO_WritePin>
 800077a:	4b04      	ldr	r3, [pc, #16]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800077c:	4805      	ldr	r0, [pc, #20]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2110      	movs	r1, #16
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800078a:	bf00      	nop
 800078c:	20000164 	.word	0x20000164
 8000790:	40021800 	.word	0x40021800
 8000794:	40020c00 	.word	0x40020c00

08000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000798:	b110      	cbz	r0, 80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079a:	2801      	cmp	r0, #1
 800079c:	d009      	beq.n	80007b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800079e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a0:	4b08      	ldr	r3, [pc, #32]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a2:	4809      	ldr	r0, [pc, #36]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 80007a4:	681a      	ldr	r2, [r3, #0]
 80007a6:	3a00      	subs	r2, #0
 80007a8:	bf18      	it	ne
 80007aa:	2201      	movne	r2, #1
 80007ac:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007ae:	f004 bffd 	b.w	80057ac <HAL_GPIO_WritePin>
 80007b2:	4b04      	ldr	r3, [pc, #16]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b4:	4805      	ldr	r0, [pc, #20]	; (80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007b6:	685a      	ldr	r2, [r3, #4]
 80007b8:	3a00      	subs	r2, #0
 80007ba:	bf18      	it	ne
 80007bc:	2201      	movne	r2, #1
 80007be:	2110      	movs	r1, #16
 80007c0:	e7f5      	b.n	80007ae <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007c2:	bf00      	nop
 80007c4:	20000164 	.word	0x20000164
 80007c8:	40021800 	.word	0x40021800
 80007cc:	40020c00 	.word	0x40020c00

080007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007d0:	b110      	cbz	r0, 80007d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007d2:	2801      	cmp	r0, #1
 80007d4:	d004      	beq.n	80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d8:	4803      	ldr	r0, [pc, #12]	; (80007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007da:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007dc:	f004 bfeb 	b.w	80057b6 <HAL_GPIO_TogglePin>
 80007e0:	4802      	ldr	r0, [pc, #8]	; (80007ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007e2:	2110      	movs	r1, #16
 80007e4:	e7fa      	b.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007e6:	bf00      	nop
 80007e8:	40021800 	.word	0x40021800
 80007ec:	40020c00 	.word	0x40020c00

080007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007f2:	b130      	cbz	r0, 8000802 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007f4:	2801      	cmp	r0, #1
 80007f6:	d009      	beq.n	800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007f8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007fa:	1e43      	subs	r3, r0, #1
 80007fc:	4258      	negs	r0, r3
 80007fe:	4158      	adcs	r0, r3
 8000800:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	4804      	ldr	r0, [pc, #16]	; (8000814 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 8000804:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000806:	f004 ffcb 	bl	80057a0 <HAL_GPIO_ReadPin>
        break;
 800080a:	e7f6      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080c:	4802      	ldr	r0, [pc, #8]	; (8000818 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 800080e:	2110      	movs	r1, #16
 8000810:	e7f9      	b.n	8000806 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000812:	bf00      	nop
 8000814:	40021800 	.word	0x40021800
 8000818:	40020c00 	.word	0x40020c00

0800081c <_ZN8touchgfx4GPIO4initEv>:
{
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4d08      	ldr	r5, [pc, #32]	; (8000840 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000820:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000822:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000824:	b2e0      	uxtb	r0, r4
 8000826:	f7ff ffe3 	bl	80007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800082a:	b118      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000830:	bf18      	it	ne
 8000832:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000834:	3401      	adds	r4, #1
 8000836:	2c05      	cmp	r4, #5
 8000838:	f105 0504 	add.w	r5, r5, #4
 800083c:	d1f2      	bne.n	8000824 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800083e:	bd70      	pop	{r4, r5, r6, pc}
 8000840:	20000164 	.word	0x20000164

08000844 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000844:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000846:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800084a:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 800084e:	4770      	bx	lr

08000850 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000850:	2000      	movs	r0, #0
 8000852:	4770      	bx	lr

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {

    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {

    }
 8000872:	4770      	bx	lr

08000874 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000874:	4b01      	ldr	r3, [pc, #4]	; (800087c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8000876:	6818      	ldr	r0, [r3, #0]
 8000878:	4770      	bx	lr
 800087a:	bf00      	nop
 800087c:	20000174 	.word	0x20000174

08000880 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000880:	4770      	bx	lr
	...

08000884 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000884:	6803      	ldr	r3, [r0, #0]
{
 8000886:	4604      	mov	r4, r0
 8000888:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800088a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800088c:	4798      	blx	r3
    enableInterrupts();
 800088e:	6823      	ldr	r3, [r4, #0]
 8000890:	4620      	mov	r0, r4
 8000892:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000894:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000896:	f000 fa35 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800089a:	6823      	ldr	r3, [r4, #0]
 800089c:	4620      	mov	r0, r4
 800089e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008a0:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008a2:	2100      	movs	r1, #0
 80008a4:	4806      	ldr	r0, [pc, #24]	; (80008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008a6:	9100      	str	r1, [sp, #0]
 80008a8:	2329      	movs	r3, #41	; 0x29
 80008aa:	2215      	movs	r2, #21
 80008ac:	f004 fd65 	bl	800537a <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008b0:	f000 fa28 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008b4:	6823      	ldr	r3, [r4, #0]
 80008b6:	4620      	mov	r0, r4
 80008b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008ba:	4798      	blx	r3
    for (;;)
 80008bc:	e7f8      	b.n	80008b0 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008be:	bf00      	nop
 80008c0:	20004174 	.word	0x20004174

080008c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c4:	b510      	push	{r4, lr}
 80008c6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008c8:	f00a f81c 	bl	800a904 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008cc:	6823      	ldr	r3, [r4, #0]
 80008ce:	4620      	mov	r0, r4
 80008d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80008d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008d8:	4718      	bx	r3

080008da <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008da:	f000 bd76 	b.w	80013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008de <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008de:	f000 bd75 	b.w	80013cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008e2 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80008e2:	f009 bbb6 	b.w	800a052 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080008e6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008e6:	f000 bd5f 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ea <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ea:	f000 bd65 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008ee <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008ee:	f000 bd6f 	b.w	80013d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080008f4 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80008f4:	4b02      	ldr	r3, [pc, #8]	; (8000900 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80008fa:	f009 ba95 	b.w	8009e28 <_ZN8touchgfx3HAL10beginFrameEv>
 80008fe:	bf00      	nop
 8000900:	20000014 	.word	0x20000014

08000904 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000904:	b510      	push	{r4, lr}
 8000906:	4604      	mov	r4, r0
    HAL::endFrame();
 8000908:	f009 fa9a 	bl	8009e40 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800090c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000910:	b113      	cbz	r3, 8000918 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000912:	4b02      	ldr	r3, [pc, #8]	; (800091c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000914:	2201      	movs	r2, #1
 8000916:	701a      	strb	r2, [r3, #0]
    }
}
 8000918:	bd10      	pop	{r4, pc}
 800091a:	bf00      	nop
 800091c:	20000014 	.word	0x20000014

08000920 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000920:	f009 ba6a 	b.w	8009df8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000924 <_ZN11TouchGFXHALD0Ev>:
 8000924:	b510      	push	{r4, lr}
 8000926:	217c      	movs	r1, #124	; 0x7c
 8000928:	4604      	mov	r4, r0
 800092a:	f01d fb2e 	bl	801df8a <_ZdlPvj>
 800092e:	4620      	mov	r0, r4
 8000930:	bd10      	pop	{r4, pc}

08000932 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000932:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000936:	b11b      	cbz	r3, 8000940 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000938:	6840      	ldr	r0, [r0, #4]
 800093a:	6803      	ldr	r3, [r0, #0]
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	4718      	bx	r3
    }
 8000940:	4618      	mov	r0, r3
 8000942:	4770      	bx	lr

08000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000944:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000946:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800094a:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800094e:	4b10      	ldr	r3, [pc, #64]	; (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000950:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000952:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000954:	d00d      	beq.n	8000972 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 8000956:	b95a      	cbnz	r2, 8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000958:	4a0e      	ldr	r2, [pc, #56]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 800095a:	490f      	ldr	r1, [pc, #60]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800095c:	480f      	ldr	r0, [pc, #60]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800095e:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000960:	4d0f      	ldr	r5, [pc, #60]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000962:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000964:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 8000966:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000968:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800096a:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 800096c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800096e:	701a      	strb	r2, [r3, #0]
    }
 8000970:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000972:	2a00      	cmp	r2, #0
 8000974:	d0fc      	beq.n	8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8000976:	4809      	ldr	r0, [pc, #36]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 8000978:	4a07      	ldr	r2, [pc, #28]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 800097a:	8801      	ldrh	r1, [r0, #0]
 800097c:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800097e:	4a05      	ldr	r2, [pc, #20]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000980:	4d07      	ldr	r5, [pc, #28]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000982:	8814      	ldrh	r4, [r2, #0]
 8000984:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8000986:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8000988:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800098a:	2200      	movs	r2, #0
 800098c:	e7ef      	b.n	800096e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 800098e:	bf00      	nop
 8000990:	2000d350 	.word	0x2000d350
 8000994:	2000d34c 	.word	0x2000d34c
 8000998:	2000d352 	.word	0x2000d352
 800099c:	2000d34e 	.word	0x2000d34e
 80009a0:	2000d354 	.word	0x2000d354

080009a4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009a4:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009a6:	4c0c      	ldr	r4, [pc, #48]	; (80009d8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009a8:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009aa:	b931      	cbnz	r1, 80009ba <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009ac:	4b0b      	ldr	r3, [pc, #44]	; (80009dc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009ae:	4a0c      	ldr	r2, [pc, #48]	; (80009e0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009b0:	480c      	ldr	r0, [pc, #48]	; (80009e4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009b2:	f240 216b 	movw	r1, #619	; 0x26b
 80009b6:	f01d fb17 	bl	801dfe8 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ba:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009be:	3a00      	subs	r2, #0
 80009c0:	4909      	ldr	r1, [pc, #36]	; (80009e8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009c2:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009c4:	bf18      	it	ne
 80009c6:	2201      	movne	r2, #1
 80009c8:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009ca:	3b00      	subs	r3, #0
 80009cc:	4a07      	ldr	r2, [pc, #28]	; (80009ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009ce:	bf18      	it	ne
 80009d0:	2301      	movne	r3, #1
 80009d2:	7013      	strb	r3, [r2, #0]
}
 80009d4:	bd10      	pop	{r4, pc}
 80009d6:	bf00      	nop
 80009d8:	20000174 	.word	0x20000174
 80009dc:	0801f290 	.word	0x0801f290
 80009e0:	0801f2c8 	.word	0x0801f2c8
 80009e4:	0801f316 	.word	0x0801f316
 80009e8:	2000d356 	.word	0x2000d356
 80009ec:	2000d357 	.word	0x2000d357

080009f0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80009f0:	b538      	push	{r3, r4, r5, lr}
 80009f2:	4604      	mov	r4, r0
    mcuInstr.init();
 80009f4:	4d09      	ldr	r5, [pc, #36]	; (8000a1c <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80009f6:	f7ff ff11 	bl	800081c <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80009fa:	4620      	mov	r0, r4
 80009fc:	f000 fcf4 	bl	80013e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000a00:	2300      	movs	r3, #0
 8000a02:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8000a06:	4628      	mov	r0, r5
 8000a08:	f7ff fe04 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8000a12:	4b03      	ldr	r3, [pc, #12]	; (8000a20 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000a14:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000a16:	6163      	str	r3, [r4, #20]
}
 8000a18:	bd38      	pop	{r3, r4, r5, pc}
 8000a1a:	bf00      	nop
 8000a1c:	20000180 	.word	0x20000180
 8000a20:	2000017c 	.word	0x2000017c

08000a24 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a24:	2801      	cmp	r0, #1
    {
 8000a26:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a28:	d80a      	bhi.n	8000a40 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a2a:	784b      	ldrb	r3, [r1, #1]
 8000a2c:	9300      	str	r3, [sp, #0]
 8000a2e:	780b      	ldrb	r3, [r1, #0]
 8000a30:	4808      	ldr	r0, [pc, #32]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a32:	2215      	movs	r2, #21
 8000a34:	2100      	movs	r1, #0
 8000a36:	f004 fca0 	bl	800537a <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a3a:	b003      	add	sp, #12
 8000a3c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a40:	9101      	str	r1, [sp, #4]
 8000a42:	5c0b      	ldrb	r3, [r1, r0]
 8000a44:	9300      	str	r3, [sp, #0]
 8000a46:	2239      	movs	r2, #57	; 0x39
 8000a48:	4603      	mov	r3, r0
 8000a4a:	2100      	movs	r1, #0
 8000a4c:	4801      	ldr	r0, [pc, #4]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a4e:	f004 fca5 	bl	800539c <HAL_DSI_LongWrite>
    }
 8000a52:	e7f2      	b.n	8000a3a <DSI_IO_WriteCmd+0x16>
 8000a54:	20004174 	.word	0x20004174

08000a58 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a58:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a5a:	4a0b      	ldr	r2, [pc, #44]	; (8000a88 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5c:	4c0b      	ldr	r4, [pc, #44]	; (8000a8c <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a5e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a60:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a62:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a64:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a66:	9201      	str	r2, [sp, #4]
 8000a68:	2244      	movs	r2, #68	; 0x44
 8000a6a:	9200      	str	r2, [sp, #0]
 8000a6c:	2100      	movs	r1, #0
 8000a6e:	2239      	movs	r2, #57	; 0x39
 8000a70:	4620      	mov	r0, r4
 8000a72:	f004 fc93 	bl	800539c <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a76:	2100      	movs	r1, #0
 8000a78:	9100      	str	r1, [sp, #0]
 8000a7a:	2335      	movs	r3, #53	; 0x35
 8000a7c:	462a      	mov	r2, r5
 8000a7e:	4620      	mov	r0, r4
 8000a80:	f004 fc7b 	bl	800537a <HAL_DSI_ShortWrite>
    }
 8000a84:	b003      	add	sp, #12
 8000a86:	bd30      	pop	{r4, r5, pc}
 8000a88:	2000018c 	.word	0x2000018c
 8000a8c:	20004174 	.word	0x20004174

08000a90 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a90:	b507      	push	{r0, r1, r2, lr}
 8000a92:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a94:	f7ff ffe0 	bl	8000a58 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a98:	9801      	ldr	r0, [sp, #4]
}
 8000a9a:	b003      	add	sp, #12
 8000a9c:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000aa0:	f000 bc92 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000aa4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000aa4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000aa6:	4b07      	ldr	r3, [pc, #28]	; (8000ac4 <LCD_SetUpdateRegion+0x20>)
 8000aa8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aac:	232a      	movs	r3, #42	; 0x2a
 8000aae:	9001      	str	r0, [sp, #4]
 8000ab0:	9300      	str	r3, [sp, #0]
 8000ab2:	2239      	movs	r2, #57	; 0x39
 8000ab4:	2304      	movs	r3, #4
 8000ab6:	2100      	movs	r1, #0
 8000ab8:	4803      	ldr	r0, [pc, #12]	; (8000ac8 <LCD_SetUpdateRegion+0x24>)
 8000aba:	f004 fc6f 	bl	800539c <HAL_DSI_LongWrite>
    }
 8000abe:	b003      	add	sp, #12
 8000ac0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ac4:	20000004 	.word	0x20000004
 8000ac8:	20004174 	.word	0x20004174

08000acc <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000acc:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ace:	4d15      	ldr	r5, [pc, #84]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ad0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ad2:	2000      	movs	r0, #0
 8000ad4:	f7ff fe44 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000ad8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ada:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ade:	3301      	adds	r3, #1
 8000ae0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ae4:	f000 f902 	bl	8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000ae8:	4b0f      	ldr	r3, [pc, #60]	; (8000b28 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000aea:	6828      	ldr	r0, [r5, #0]
 8000aec:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000aee:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000af0:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000af4:	b123      	cbz	r3, 8000b00 <HAL_DSI_TearingEffectCallback+0x34>
 8000af6:	4d0d      	ldr	r5, [pc, #52]	; (8000b2c <HAL_DSI_TearingEffectCallback+0x60>)
 8000af8:	782b      	ldrb	r3, [r5, #0]
 8000afa:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000afe:	b123      	cbz	r3, 8000b0a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b04:	2000      	movs	r0, #0
 8000b06:	f7ff be47 	b.w	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b0a:	f009 fefb 	bl	800a904 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b0e:	4b08      	ldr	r3, [pc, #32]	; (8000b30 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b10:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b12:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b14:	f7ff ffc6 	bl	8000aa4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b18:	4620      	mov	r0, r4
 8000b1a:	f004 fc1e 	bl	800535a <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b1e:	2301      	movs	r3, #1
 8000b20:	702b      	strb	r3, [r5, #0]
    }
 8000b22:	bd70      	pop	{r4, r5, r6, pc}
 8000b24:	2000d358 	.word	0x2000d358
 8000b28:	20000014 	.word	0x20000014
 8000b2c:	2000018e 	.word	0x2000018e
 8000b30:	20000178 	.word	0x20000178

08000b34 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b34:	4b33      	ldr	r3, [pc, #204]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b36:	681a      	ldr	r2, [r3, #0]
 8000b38:	3201      	adds	r2, #1
    {
 8000b3a:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000b3c:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b3e:	4b32      	ldr	r3, [pc, #200]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b40:	4c32      	ldr	r4, [pc, #200]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b42:	6819      	ldr	r1, [r3, #0]
 8000b44:	4b32      	ldr	r3, [pc, #200]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000b46:	2a03      	cmp	r2, #3
    {
 8000b48:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000b4a:	dc2e      	bgt.n	8000baa <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000b50:	f020 0008 	bic.w	r0, r0, #8
 8000b54:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b58:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000b5c:	fb00 1102 	mla	r1, r0, r2, r1
 8000b60:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b64:	bf0c      	ite	eq
 8000b66:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b68:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b6a:	3302      	adds	r3, #2
 8000b6c:	4928      	ldr	r1, [pc, #160]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b6e:	041b      	lsls	r3, r3, #16
 8000b70:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b74:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b76:	4b27      	ldr	r3, [pc, #156]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000b78:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b7a:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b7e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b82:	4b25      	ldr	r3, [pc, #148]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000b84:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b88:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000b8a:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b8c:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b8e:	f7ff ff89 	bl	8000aa4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b92:	4a1e      	ldr	r2, [pc, #120]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b94:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b98:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b9c:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b9e:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000ba2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000ba6:	f004 bbd8 	b.w	800535a <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000baa:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000bae:	f022 0208 	bic.w	r2, r2, #8
 8000bb2:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bb6:	4a19      	ldr	r2, [pc, #100]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bb8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bbc:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bbe:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000bc2:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bc4:	4a16      	ldr	r2, [pc, #88]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bc6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bca:	4a13      	ldr	r2, [pc, #76]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bcc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bd0:	2201      	movs	r2, #1
 8000bd2:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	f7ff ff65 	bl	8000aa4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bda:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bde:	f043 0308 	orr.w	r3, r3, #8
 8000be2:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000be6:	2000      	movs	r0, #0
 8000be8:	f7ff fdd6 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bec:	4b0d      	ldr	r3, [pc, #52]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bf2:	4b0d      	ldr	r3, [pc, #52]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000bf4:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bf6:	b120      	cbz	r0, 8000c02 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000bf8:	6803      	ldr	r3, [r0, #0]
    }
 8000bfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000bfe:	699b      	ldr	r3, [r3, #24]
 8000c00:	4718      	bx	r3
 8000c02:	bd70      	pop	{r4, r5, r6, pc}
 8000c04:	20000178 	.word	0x20000178
 8000c08:	20000174 	.word	0x20000174
 8000c0c:	40016c00 	.word	0x40016c00
 8000c10:	40016800 	.word	0x40016800
 8000c14:	00ca01e3 	.word	0x00ca01e3
 8000c18:	06800193 	.word	0x06800193
 8000c1c:	00ca01e2 	.word	0x00ca01e2
 8000c20:	00ca0003 	.word	0x00ca0003
 8000c24:	2000018e 	.word	0x2000018e
 8000c28:	2000d358 	.word	0x2000d358

08000c2c <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c2c:	b508      	push	{r3, lr}
        return instance;
 8000c2e:	4b04      	ldr	r3, [pc, #16]	; (8000c40 <IdleTaskHook+0x14>)
 8000c30:	4601      	mov	r1, r0
 8000c32:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c34:	b101      	cbz	r1, 8000c38 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c36:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c38:	f009 fe7e 	bl	800a938 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c3c:	2001      	movs	r0, #1
 8000c3e:	bd08      	pop	{r3, pc}
 8000c40:	2000d358 	.word	0x2000d358

08000c44 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c44:	4b05      	ldr	r3, [pc, #20]	; (8000c5c <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c46:	4806      	ldr	r0, [pc, #24]	; (8000c60 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	605a      	str	r2, [r3, #4]
 8000c4c:	609a      	str	r2, [r3, #8]
 8000c4e:	4a05      	ldr	r2, [pc, #20]	; (8000c64 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c50:	601a      	str	r2, [r3, #0]
 8000c52:	4b05      	ldr	r3, [pc, #20]	; (8000c68 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c54:	6003      	str	r3, [r0, #0]
        init();
 8000c56:	f7ff bd13 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000c5a:	bf00      	nop
 8000c5c:	20000180 	.word	0x20000180
 8000c60:	2000017c 	.word	0x2000017c
 8000c64:	0801f1b0 	.word	0x0801f1b0
 8000c68:	0801f1d8 	.word	0x0801f1d8

08000c6c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c6c:	2101      	movs	r1, #1
{
 8000c6e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c70:	2200      	movs	r2, #0
 8000c72:	4608      	mov	r0, r1
 8000c74:	f006 fd98 	bl	80077a8 <osSemaphoreNew>
 8000c78:	4b0a      	ldr	r3, [pc, #40]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c7a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c7c:	b928      	cbnz	r0, 8000c8a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c7e:	4b0a      	ldr	r3, [pc, #40]	; (8000ca8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c80:	4a0a      	ldr	r2, [pc, #40]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c82:	2125      	movs	r1, #37	; 0x25

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	480a      	ldr	r0, [pc, #40]	; (8000cb0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c86:	f01d f9af 	bl	801dfe8 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2104      	movs	r1, #4
 8000c8e:	2001      	movs	r0, #1
 8000c90:	f006 fe50 	bl	8007934 <osMessageQueueNew>
 8000c94:	4b07      	ldr	r3, [pc, #28]	; (8000cb4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c96:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c98:	b918      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c9a:	4b07      	ldr	r3, [pc, #28]	; (8000cb8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c9c:	4a03      	ldr	r2, [pc, #12]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9e:	2129      	movs	r1, #41	; 0x29
 8000ca0:	e7f0      	b.n	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ca2:	bd08      	pop	{r3, pc}
 8000ca4:	20000194 	.word	0x20000194
 8000ca8:	0801f418 	.word	0x0801f418
 8000cac:	0801f461 	.word	0x0801f461
 8000cb0:	0801f490 	.word	0x0801f490
 8000cb4:	20000190 	.word	0x20000190
 8000cb8:	0801f4de 	.word	0x0801f4de

08000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cbc:	4b02      	ldr	r3, [pc, #8]	; (8000cc8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cbe:	f04f 31ff 	mov.w	r1, #4294967295
 8000cc2:	6818      	ldr	r0, [r3, #0]
 8000cc4:	f006 bdc6 	b.w	8007854 <osSemaphoreAcquire>
 8000cc8:	20000194 	.word	0x20000194

08000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ccc:	4b01      	ldr	r3, [pc, #4]	; (8000cd4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cce:	6818      	ldr	r0, [r3, #0]
 8000cd0:	f006 bdfa 	b.w	80078c8 <osSemaphoreRelease>
 8000cd4:	20000194 	.word	0x20000194

08000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cd8:	4b02      	ldr	r3, [pc, #8]	; (8000ce4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cda:	2100      	movs	r1, #0
 8000cdc:	6818      	ldr	r0, [r3, #0]
 8000cde:	f006 bdb9 	b.w	8007854 <osSemaphoreAcquire>
 8000ce2:	bf00      	nop
 8000ce4:	20000194 	.word	0x20000194

08000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ce8:	f7ff bff0 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cec:	4803      	ldr	r0, [pc, #12]	; (8000cfc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cee:	4904      	ldr	r1, [pc, #16]	; (8000d00 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cf0:	6800      	ldr	r0, [r0, #0]
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	f006 be63 	b.w	80079c0 <osMessageQueuePut>
 8000cfa:	bf00      	nop
 8000cfc:	20000190 	.word	0x20000190
 8000d00:	20000018 	.word	0x20000018

08000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d04:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d06:	4c08      	ldr	r4, [pc, #32]	; (8000d28 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d08:	2300      	movs	r3, #0
 8000d0a:	461a      	mov	r2, r3
 8000d0c:	a901      	add	r1, sp, #4
 8000d0e:	6820      	ldr	r0, [r4, #0]
 8000d10:	f006 fe98 	bl	8007a44 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d14:	6820      	ldr	r0, [r4, #0]
 8000d16:	f04f 33ff 	mov.w	r3, #4294967295
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	a901      	add	r1, sp, #4
 8000d1e:	f006 fe91 	bl	8007a44 <osMessageQueueGet>
}
 8000d22:	b002      	add	sp, #8
 8000d24:	bd10      	pop	{r4, pc}
 8000d26:	bf00      	nop
 8000d28:	20000190 	.word	0x20000190

08000d2c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d2c:	6803      	ldr	r3, [r0, #0]
 8000d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d30:	4718      	bx	r3

08000d32 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000d32:	2000      	movs	r0, #0
 8000d34:	4770      	bx	lr

08000d36 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d36:	6803      	ldr	r3, [r0, #0]
 8000d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d3a:	4718      	bx	r3

08000d3c <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d3c:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000d40:	4770      	bx	lr
	...

08000d44 <_ZN10STM32F4DMA10initializeEv>:
{
 8000d44:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000d46:	4c07      	ldr	r4, [pc, #28]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000d48:	4b07      	ldr	r3, [pc, #28]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000d4a:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000d4c:	4620      	mov	r0, r4
 8000d4e:	f003 fe01 	bl	8004954 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b06      	ldr	r3, [pc, #24]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000d54:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000d56:	4b06      	ldr	r3, [pc, #24]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000d58:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5a:	4b06      	ldr	r3, [pc, #24]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000d5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d60:	609a      	str	r2, [r3, #8]
}
 8000d62:	bd10      	pop	{r4, pc}
 8000d64:	20004134 	.word	0x20004134
 8000d68:	4002b000 	.word	0x4002b000
 8000d6c:	08000ddd 	.word	0x08000ddd
 8000d70:	08000d79 	.word	0x08000d79
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <DMA2D_XferErrorCallback>:
    {
 8000d78:	b508      	push	{r3, lr}
        assert(0);
 8000d7a:	4a03      	ldr	r2, [pc, #12]	; (8000d88 <DMA2D_XferErrorCallback+0x10>)
 8000d7c:	4b03      	ldr	r3, [pc, #12]	; (8000d8c <DMA2D_XferErrorCallback+0x14>)
 8000d7e:	4804      	ldr	r0, [pc, #16]	; (8000d90 <DMA2D_XferErrorCallback+0x18>)
 8000d80:	2136      	movs	r1, #54	; 0x36
 8000d82:	f01d f931 	bl	801dfe8 <__assert_func>
 8000d86:	bf00      	nop
 8000d88:	0801f520 	.word	0x0801f520
 8000d8c:	080225c2 	.word	0x080225c2
 8000d90:	0801f553 	.word	0x0801f553

08000d94 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000d94:	4b08      	ldr	r3, [pc, #32]	; (8000db8 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000d96:	b510      	push	{r4, lr}
 8000d98:	6003      	str	r3, [r0, #0]
 8000d9a:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000d9c:	4807      	ldr	r0, [pc, #28]	; (8000dbc <_ZN10STM32F4DMAD1Ev+0x28>)
 8000d9e:	f003 fea3 	bl	8004ae8 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000da2:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000da4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000da8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000dac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000db0:	f3bf 8f6f 	isb	sy
}
 8000db4:	4620      	mov	r0, r4
 8000db6:	bd10      	pop	{r4, pc}
 8000db8:	0801f5a8 	.word	0x0801f5a8
 8000dbc:	20004134 	.word	0x20004134
 8000dc0:	e000e100 	.word	0xe000e100

08000dc4 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000dc4:	b510      	push	{r4, lr}
 8000dc6:	4604      	mov	r4, r0
}
 8000dc8:	f7ff ffe4 	bl	8000d94 <_ZN10STM32F4DMAD1Ev>
 8000dcc:	4620      	mov	r0, r4
 8000dce:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000dd2:	f01d f8da 	bl	801df8a <_ZdlPvj>
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	bd10      	pop	{r4, pc}
	...

08000ddc <DMA2D_XferCpltCallback>:
 8000ddc:	4b02      	ldr	r3, [pc, #8]	; (8000de8 <DMA2D_XferCpltCallback+0xc>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000de2:	6803      	ldr	r3, [r0, #0]
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	4718      	bx	r3
 8000de8:	2000d358 	.word	0x2000d358

08000dec <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000dec:	4b04      	ldr	r3, [pc, #16]	; (8000e00 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000df4:	b10a      	cbz	r2, 8000dfa <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000df6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000df8:	b900      	cbnz	r0, 8000dfc <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000dfa:	6898      	ldr	r0, [r3, #8]
    }
 8000dfc:	4770      	bx	lr
 8000dfe:	bf00      	nop
 8000e00:	2000d358 	.word	0x2000d358

08000e04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000e08:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0a:	2d20      	cmp	r5, #32
{
 8000e0c:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0e:	f000 809c 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000e12:	2d40      	cmp	r5, #64	; 0x40
 8000e14:	f000 8099 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e18:	1f2a      	subs	r2, r5, #4
 8000e1a:	4256      	negs	r6, r2
 8000e1c:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000e1e:	2d80      	cmp	r5, #128	; 0x80
 8000e20:	f000 8095 	beq.w	8000f4e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14a>
 8000e24:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000e28:	425d      	negs	r5, r3
 8000e2a:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e2c:	f7ff ffde 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000e30:	6803      	ldr	r3, [r0, #0]
 8000e32:	69db      	ldr	r3, [r3, #28]
 8000e34:	4798      	blx	r3

    switch (blitOp.operation)
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	2b80      	cmp	r3, #128	; 0x80
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e3a:	4684      	mov	ip, r0
    switch (blitOp.operation)
 8000e3c:	f000 8096 	beq.w	8000f6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
 8000e40:	f200 8087 	bhi.w	8000f52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
 8000e44:	2b20      	cmp	r3, #32
 8000e46:	f000 8093 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e4a:	2b40      	cmp	r3, #64	; 0x40
 8000e4c:	f000 8090 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e50:	2b04      	cmp	r3, #4
 8000e52:	f000 8084 	beq.w	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000e56:	f1bc 0f10 	cmp.w	ip, #16
 8000e5a:	bf0c      	ite	eq
 8000e5c:	2102      	moveq	r1, #2
 8000e5e:	2101      	movne	r1, #1
 8000e60:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e62:	4b4a      	ldr	r3, [pc, #296]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e64:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e68:	f8d3 e000 	ldr.w	lr, [r3]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e6c:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e6e:	f8de 9000 	ldr.w	r9, [lr]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e72:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e74:	f1bc 0f10 	cmp.w	ip, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e78:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e7c:	bf0c      	ite	eq
 8000e7e:	2002      	moveq	r0, #2
 8000e80:	2001      	movne	r0, #1
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e82:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e86:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e8a:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e8c:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e8e:	f8ce 2000 	str.w	r2, [lr]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e92:	f8de 2034 	ldr.w	r2, [lr, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000e96:	62d9      	str	r1, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e98:	f022 0207 	bic.w	r2, r2, #7
 8000e9c:	4302      	orrs	r2, r0
 8000e9e:	f8ce 2034 	str.w	r2, [lr, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000ea2:	f8de 2040 	ldr.w	r2, [lr, #64]	; 0x40
 8000ea6:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000eaa:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000eae:	433a      	orrs	r2, r7
 8000eb0:	f8ce 2040 	str.w	r2, [lr, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000eb4:	8aa2      	ldrh	r2, [r4, #20]
 8000eb6:	eba2 0208 	sub.w	r2, r2, r8
 8000eba:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000ebc:	b906      	cbnz	r6, 8000ec0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000ebe:	b38d      	cbz	r5, 8000f24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
    {
        if (blitOp.alpha < 255)
 8000ec0:	7f22      	ldrb	r2, [r4, #28]
 8000ec2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000ec4:	bf15      	itete	ne
 8000ec6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ec8:	2100      	moveq	r1, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000eca:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ece:	6319      	streq	r1, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000ed0:	b315      	cbz	r5, 8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        {
            if (bitDepth == 16)
 8000ed2:	f1bc 0f10 	cmp.w	ip, #16
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ed6:	69a1      	ldr	r1, [r4, #24]
 8000ed8:	ea4f 6e02 	mov.w	lr, r2, lsl #24
 8000edc:	d14a      	bne.n	8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ede:	f04f 081f 	mov.w	r8, #31
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000ee2:	ea01 0208 	and.w	r2, r1, r8
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ee6:	f3c1 2cc4 	ubfx	ip, r1, #11, #5
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000eea:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000eee:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ef2:	ea42 020e 	orr.w	r2, r2, lr
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ef6:	ebcc 2c0c 	rsb	ip, ip, ip, lsl #8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000efa:	f3c1 1145 	ubfx	r1, r1, #5, #6
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000efe:	fbbc fcf8 	udiv	ip, ip, r8
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f02:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000f06:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000f0a:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000f0e:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f12:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000f16:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f18:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000f1c:	2100      	movs	r1, #0
 8000f1e:	481b      	ldr	r0, [pc, #108]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f20:	f003 fea2 	bl	8004c68 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000f24:	4819      	ldr	r0, [pc, #100]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f26:	2101      	movs	r1, #1
 8000f28:	f003 fe9e 	bl	8004c68 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 8000f2c:	8a23      	ldrh	r3, [r4, #16]
 8000f2e:	8a62      	ldrh	r2, [r4, #18]
 8000f30:	b906      	cbnz	r6, 8000f34 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
 8000f32:	b31d      	cbz	r5, 8000f7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000f34:	e9cd 3200 	strd	r3, r2, [sp]
 8000f38:	68e3      	ldr	r3, [r4, #12]
 8000f3a:	6861      	ldr	r1, [r4, #4]
 8000f3c:	4813      	ldr	r0, [pc, #76]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f3e:	461a      	mov	r2, r3
 8000f40:	f003 fd52 	bl	80049e8 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000f44:	b003      	add	sp, #12
 8000f46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000f4a:	2601      	movs	r6, #1
 8000f4c:	e76a      	b.n	8000e24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000f4e:	2501      	movs	r5, #1
 8000f50:	e76c      	b.n	8000e2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000f52:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000f56:	f47f af7e 	bne.w	8000e56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x52>
 8000f5a:	2109      	movs	r1, #9
 8000f5c:	e003      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f5e:	2810      	cmp	r0, #16
 8000f60:	bf0c      	ite	eq
 8000f62:	2102      	moveq	r1, #2
 8000f64:	2101      	movne	r1, #1
    switch (blitOp.operation)
 8000f66:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000f6a:	e77a      	b.n	8000e62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5e>
        dma2dColorMode = CM_A4;
 8000f6c:	210a      	movs	r1, #10
 8000f6e:	e7fa      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = CM_ARGB8888;
 8000f70:	2100      	movs	r1, #0
 8000f72:	e7f8      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000f74:	ea4e 0101 	orr.w	r1, lr, r1
 8000f78:	6359      	str	r1, [r3, #52]	; 0x34
 8000f7a:	e7cd      	b.n	8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000f7c:	9200      	str	r2, [sp, #0]
 8000f7e:	6861      	ldr	r1, [r4, #4]
 8000f80:	68e2      	ldr	r2, [r4, #12]
 8000f82:	4802      	ldr	r0, [pc, #8]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f84:	f003 fd12 	bl	80049ac <HAL_DMA2D_Start_IT>
}
 8000f88:	e7dc      	b.n	8000f44 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000f8a:	bf00      	nop
 8000f8c:	20004134 	.word	0x20004134

08000f90 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000f92:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000f94:	f7ff ff2a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000f98:	6803      	ldr	r3, [r0, #0]
 8000f9a:	69db      	ldr	r3, [r3, #28]
 8000f9c:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f9e:	2810      	cmp	r0, #16
 8000fa0:	69ab      	ldr	r3, [r5, #24]
 8000fa2:	7f29      	ldrb	r1, [r5, #28]
 8000fa4:	d167      	bne.n	8001076 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000fa6:	f003 021f 	and.w	r2, r3, #31
 8000faa:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000fae:	201f      	movs	r0, #31
 8000fb0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fb4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fb8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fbc:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fc0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fc4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fc8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fcc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000fd0:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000fd2:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fd4:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fd8:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000fdc:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000fde:	4828      	ldr	r0, [pc, #160]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe0:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fe2:	6802      	ldr	r2, [r0, #0]
        dma2dTransferMode = DMA2D_R2M;
 8000fe4:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe6:	8a2b      	ldrh	r3, [r5, #16]
 8000fe8:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fec:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fee:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000ff0:	bf0c      	ite	eq
 8000ff2:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000ff6:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ffa:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000ffe:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001000:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001004:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001006:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001008:	f023 0307 	bic.w	r3, r3, #7
 800100c:	430b      	orrs	r3, r1
 800100e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001010:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001012:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001016:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800101a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800101c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001020:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001022:	d11c      	bne.n	800105e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001024:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001026:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800102a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800102c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001030:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8001032:	2100      	movs	r1, #0
 8001034:	f003 fe18 	bl	8004c68 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001038:	2101      	movs	r1, #1
 800103a:	4811      	ldr	r0, [pc, #68]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800103c:	f003 fe14 	bl	8004c68 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001040:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001044:	8a2a      	ldrh	r2, [r5, #16]
 8001046:	8a69      	ldrh	r1, [r5, #18]
 8001048:	d10d      	bne.n	8001066 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800104a:	68eb      	ldr	r3, [r5, #12]
 800104c:	480c      	ldr	r0, [pc, #48]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800104e:	e9cd 2100 	strd	r2, r1, [sp]
 8001052:	461a      	mov	r2, r3
 8001054:	4619      	mov	r1, r3
 8001056:	f003 fcc7 	bl	80049e8 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800105a:	b003      	add	sp, #12
 800105c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800105e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8001060:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8001062:	6283      	str	r3, [r0, #40]	; 0x28
 8001064:	e7e8      	b.n	8001038 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001066:	9100      	str	r1, [sp, #0]
 8001068:	4613      	mov	r3, r2
 800106a:	4621      	mov	r1, r4
 800106c:	68ea      	ldr	r2, [r5, #12]
 800106e:	4804      	ldr	r0, [pc, #16]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 8001070:	f003 fc9c 	bl	80049ac <HAL_DMA2D_Start_IT>
}
 8001074:	e7f1      	b.n	800105a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001076:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800107a:	2101      	movs	r1, #1
 800107c:	e7ae      	b.n	8000fdc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 800107e:	bf00      	nop
 8001080:	20004134 	.word	0x20004134

08001084 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001088:	4625      	mov	r5, r4
 800108a:	4b0a      	ldr	r3, [pc, #40]	; (80010b4 <_ZN10STM32F4DMAC1Ev+0x30>)
 800108c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800108e:	2600      	movs	r6, #0
 8001090:	6060      	str	r0, [r4, #4]
 8001092:	7226      	strb	r6, [r4, #8]
 8001094:	7266      	strb	r6, [r4, #9]
 8001096:	f845 3b20 	str.w	r3, [r5], #32
 800109a:	2260      	movs	r2, #96	; 0x60
 800109c:	4629      	mov	r1, r5
 800109e:	f009 fd79 	bl	800ab94 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80010a2:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
        : color(0)
 80010a6:	61ae      	str	r6, [r5, #24]
 80010a8:	3520      	adds	r5, #32
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	d1fb      	bne.n	80010a6 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80010ae:	4620      	mov	r0, r4
 80010b0:	bd70      	pop	{r4, r5, r6, pc}
 80010b2:	bf00      	nop
 80010b4:	0801f5a8 	.word	0x0801f5a8

080010b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010b8:	2001      	movs	r0, #1
 80010ba:	4770      	bx	lr

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010bc:	2038      	movs	r0, #56	; 0x38
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010c0:	2338      	movs	r3, #56	; 0x38
 80010c2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c6:	3008      	adds	r0, #8
 80010c8:	4770      	bx	lr

080010ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010ca:	2338      	movs	r3, #56	; 0x38
 80010cc:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d0:	3008      	adds	r0, #8
 80010d2:	4770      	bx	lr

080010d4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010d4:	2001      	movs	r0, #1
 80010d6:	4770      	bx	lr

080010d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d8:	f243 00a0 	movw	r0, #12448	; 0x30a0
 80010dc:	4770      	bx	lr

080010de <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010de:	f243 03a0 	movw	r3, #12448	; 0x30a0
 80010e2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010e6:	3008      	adds	r0, #8
 80010e8:	4770      	bx	lr

080010ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f243 03a0 	movw	r3, #12448	; 0x30a0
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010f6:	2001      	movs	r0, #1
 80010f8:	4770      	bx	lr

080010fa <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010fa:	2010      	movs	r0, #16
 80010fc:	4770      	bx	lr

080010fe <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010fe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001102:	3008      	adds	r0, #8
 8001104:	4770      	bx	lr

08001106 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001106:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110a:	3008      	adds	r0, #8
 800110c:	4770      	bx	lr

0800110e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800110e:	4608      	mov	r0, r1
 8001110:	f001 ba98 	b.w	8002644 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f008 fc82 	bl	8009a24 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	0801f660 	.word	0x0801f660

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	2140      	movs	r1, #64	; 0x40
 8001134:	f01c ff29 	bl	801df8a <_ZdlPvj>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}

0800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800113c:	b510      	push	{r4, lr}
 800113e:	4b03      	ldr	r3, [pc, #12]	; (800114c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001140:	6003      	str	r3, [r0, #0]
 8001142:	4604      	mov	r4, r0
 8001144:	f008 fc6e 	bl	8009a24 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001148:	4620      	mov	r0, r4
 800114a:	bd10      	pop	{r4, pc}
 800114c:	0801f62c 	.word	0x0801f62c

08001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001150:	b510      	push	{r4, lr}
 8001152:	4604      	mov	r4, r0
 8001154:	f7ff fff2 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001158:	4620      	mov	r0, r4
 800115a:	f243 01a8 	movw	r1, #12456	; 0x30a8
 800115e:	f01c ff14 	bl	801df8a <_ZdlPvj>
 8001162:	4620      	mov	r0, r4
 8001164:	bd10      	pop	{r4, pc}
	...

08001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001168:	b510      	push	{r4, lr}
 800116a:	4b03      	ldr	r3, [pc, #12]	; (8001178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f008 fc58 	bl	8009a24 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001174:	4620      	mov	r0, r4
 8001176:	bd10      	pop	{r4, pc}
 8001178:	0801f5f8 	.word	0x0801f5f8

0800117c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800117c:	b510      	push	{r4, lr}
 800117e:	4604      	mov	r4, r0
 8001180:	f7ff fff2 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001184:	4620      	mov	r0, r4
 8001186:	2118      	movs	r1, #24
 8001188:	f01c feff 	bl	801df8a <_ZdlPvj>
 800118c:	4620      	mov	r0, r4
 800118e:	bd10      	pop	{r4, pc}

08001190 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001190:	b510      	push	{r4, lr}
 8001192:	4b09      	ldr	r3, [pc, #36]	; (80011b8 <_ZN12FrontendHeapD1Ev+0x28>)
 8001194:	6003      	str	r3, [r0, #0]
 8001196:	4604      	mov	r4, r0
 8001198:	f500 5043 	add.w	r0, r0, #12480	; 0x30c0
 800119c:	3014      	adds	r0, #20
 800119e:	f7ff ffb9 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE0EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80011a2:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011a6:	f7ff ffc9 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011aa:	f104 0014 	add.w	r0, r4, #20
 80011ae:	f7ff ffdb 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b2:	4620      	mov	r0, r4
 80011b4:	bd10      	pop	{r4, pc}
 80011b6:	bf00      	nop
 80011b8:	0801f694 	.word	0x0801f694

080011bc <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011bc:	b508      	push	{r3, lr}
 80011be:	4802      	ldr	r0, [pc, #8]	; (80011c8 <__tcf_0+0xc>)
 80011c0:	f7ff ffe6 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011c4:	bd08      	pop	{r3, pc}
 80011c6:	bf00      	nop
 80011c8:	2000019c 	.word	0x2000019c

080011cc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011cc:	b510      	push	{r4, lr}
 80011ce:	4604      	mov	r4, r0
 80011d0:	f7ff ffde 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011d4:	4620      	mov	r0, r4
 80011d6:	f243 2170 	movw	r1, #12912	; 0x3270
 80011da:	f01c fed6 	bl	801df8a <_ZdlPvj>
 80011de:	4620      	mov	r0, r4
 80011e0:	bd10      	pop	{r4, pc}
	...

080011e4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011e8:	f000 ff26 	bl	8002038 <_ZN14BitmapDatabase11getInstanceEv>
 80011ec:	4605      	mov	r5, r0
 80011ee:	f000 ff27 	bl	8002040 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011f2:	2400      	movs	r4, #0
 80011f4:	4601      	mov	r1, r0
 80011f6:	4623      	mov	r3, r4
 80011f8:	4628      	mov	r0, r5
 80011fa:	4622      	mov	r2, r4
 80011fc:	9400      	str	r4, [sp, #0]
 80011fe:	f00f fc99 	bl	8010b34 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001202:	4b26      	ldr	r3, [pc, #152]	; (800129c <touchgfx_init+0xb8>)
 8001204:	4a26      	ldr	r2, [pc, #152]	; (80012a0 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001206:	4d27      	ldr	r5, [pc, #156]	; (80012a4 <touchgfx_init+0xc0>)
 8001208:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800120a:	4620      	mov	r0, r4
 800120c:	f002 f8e0 	bl	80033d0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001210:	4825      	ldr	r0, [pc, #148]	; (80012a8 <touchgfx_init+0xc4>)
 8001212:	f00f fbd1 	bl	80109b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001216:	782b      	ldrb	r3, [r5, #0]
 8001218:	f3bf 8f5b 	dmb	ish
 800121c:	07db      	lsls	r3, r3, #31
 800121e:	d437      	bmi.n	8001290 <touchgfx_init+0xac>
 8001220:	4628      	mov	r0, r5
 8001222:	f01c feb4 	bl	801df8e <__cxa_guard_acquire>
 8001226:	b398      	cbz	r0, 8001290 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001228:	4c20      	ldr	r4, [pc, #128]	; (80012ac <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800122a:	4b21      	ldr	r3, [pc, #132]	; (80012b0 <touchgfx_init+0xcc>)
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	f104 0014 	add.w	r0, r4, #20
 8001232:	f500 5743 	add.w	r7, r0, #12480	; 0x30c0
 8001236:	f107 0644 	add.w	r6, r7, #68	; 0x44
 800123a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800123e:	6060      	str	r0, [r4, #4]
 8001240:	f8c4 8008 	str.w	r8, [r4, #8]
 8001244:	60e7      	str	r7, [r4, #12]
 8001246:	6126      	str	r6, [r4, #16]
 8001248:	f008 fbee 	bl	8009a28 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124c:	4b19      	ldr	r3, [pc, #100]	; (80012b4 <touchgfx_init+0xd0>)
 800124e:	6163      	str	r3, [r4, #20]
 8001250:	4640      	mov	r0, r8
 8001252:	f008 fbe9 	bl	8009a28 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001256:	4b18      	ldr	r3, [pc, #96]	; (80012b8 <touchgfx_init+0xd4>)
 8001258:	62e3      	str	r3, [r4, #44]	; 0x2c
 800125a:	4638      	mov	r0, r7
 800125c:	f008 fbe4 	bl	8009a28 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001260:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8001264:	4a15      	ldr	r2, [pc, #84]	; (80012bc <touchgfx_init+0xd8>)
 8001266:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
 800126a:	f503 708a 	add.w	r0, r3, #276	; 0x114
 800126e:	f002 f92f 	bl	80034d0 <_ZN5ModelC1Ev>
 8001272:	4622      	mov	r2, r4
 8001274:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8001278:	4630      	mov	r0, r6
 800127a:	f002 f91f 	bl	80034bc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800127e:	4630      	mov	r0, r6
 8001280:	f001 f9e0 	bl	8002644 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001284:	480e      	ldr	r0, [pc, #56]	; (80012c0 <touchgfx_init+0xdc>)
 8001286:	f01c fecd 	bl	801e024 <atexit>
 800128a:	4628      	mov	r0, r5
 800128c:	f01c fe8b 	bl	801dfa6 <__cxa_guard_release>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8001290:	480c      	ldr	r0, [pc, #48]	; (80012c4 <touchgfx_init+0xe0>)
}
 8001292:	b002      	add	sp, #8
 8001294:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001298:	f7ff bbaa 	b.w	80009f0 <_ZN11TouchGFXHAL10initializeEv>
 800129c:	2000d3d4 	.word	0x2000d3d4
 80012a0:	200040ac 	.word	0x200040ac
 80012a4:	20000198 	.word	0x20000198
 80012a8:	2000001c 	.word	0x2000001c
 80012ac:	2000019c 	.word	0x2000019c
 80012b0:	0801f694 	.word	0x0801f694
 80012b4:	0801f5f8 	.word	0x0801f5f8
 80012b8:	0801f62c 	.word	0x0801f62c
 80012bc:	0801f660 	.word	0x0801f660
 80012c0:	080011bd 	.word	0x080011bd
 80012c4:	20004030 	.word	0x20004030

080012c8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012c8:	4801      	ldr	r0, [pc, #4]	; (80012d0 <touchgfx_taskEntry+0x8>)
 80012ca:	f7ff badb 	b.w	8000884 <_ZN11TouchGFXHAL9taskEntryEv>
 80012ce:	bf00      	nop
 80012d0:	20004030 	.word	0x20004030

080012d4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d4:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012d6:	4c24      	ldr	r4, [pc, #144]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012d8:	4e24      	ldr	r6, [pc, #144]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012da:	4b25      	ldr	r3, [pc, #148]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012dc:	4d25      	ldr	r5, [pc, #148]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012de:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012e0:	4630      	mov	r0, r6
 80012e2:	f7ff fecf 	bl	8001084 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012e6:	4628      	mov	r0, r5
 80012e8:	f012 fcb0 	bl	8013c4c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderVariant(HARDWARE)
 80012ec:	4b22      	ldr	r3, [pc, #136]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012ee:	4823      	ldr	r0, [pc, #140]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012f0:	60dc      	str	r4, [r3, #12]
 80012f2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012f6:	f8a3 1048 	strh.w	r1, [r3, #72]	; 0x48
 80012fa:	f8a3 1076 	strh.w	r1, [r3, #118]	; 0x76
 80012fe:	2101      	movs	r1, #1
 8001300:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001304:	491e      	ldr	r1, [pc, #120]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 8001306:	4c1f      	ldr	r4, [pc, #124]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 8001308:	600b      	str	r3, [r1, #0]
          lastRenderVariant(HARDWARE)
 800130a:	2200      	movs	r2, #0
        DISPLAY_WIDTH = width;
 800130c:	491e      	ldr	r1, [pc, #120]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 800130e:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderVariant(HARDWARE)
 8001310:	e9c3 0219 	strd	r0, r2, [r3, #100]	; 0x64
        DISPLAY_WIDTH = width;
 8001314:	f44f 7050 	mov.w	r0, #832	; 0x340
 8001318:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 800131a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800131e:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001320:	4c1a      	ldr	r4, [pc, #104]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          lastRenderVariant(HARDWARE)
 8001322:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
        DISPLAY_ROTATION = rotate0;
 8001326:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001328:	4c19      	ldr	r4, [pc, #100]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
 800132a:	655a      	str	r2, [r3, #84]	; 0x54
          lastRenderVariant(HARDWARE)
 800132c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001330:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001334:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001338:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 800133c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001340:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 8001344:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
 8001348:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800134c:	671a      	str	r2, [r3, #112]	; 0x70
 800134e:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001352:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001356:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001358:	480e      	ldr	r0, [pc, #56]	; (8001394 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800135a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800135e:	4a0e      	ldr	r2, [pc, #56]	; (8001398 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001360:	8001      	strh	r1, [r0, #0]
 8001362:	601a      	str	r2, [r3, #0]
}
 8001364:	bd70      	pop	{r4, r5, r6, pc}
 8001366:	bf00      	nop
 8001368:	2000340c 	.word	0x2000340c
 800136c:	20003410 	.word	0x20003410
 8001370:	0801f280 	.word	0x0801f280
 8001374:	200040b0 	.word	0x200040b0
 8001378:	20004030 	.word	0x20004030
 800137c:	01000001 	.word	0x01000001
 8001380:	2000d358 	.word	0x2000d358
 8001384:	2000d34e 	.word	0x2000d34e
 8001388:	2000d34c 	.word	0x2000d34c
 800138c:	2000d350 	.word	0x2000d350
 8001390:	2000d352 	.word	0x2000d352
 8001394:	2000d354 	.word	0x2000d354
 8001398:	0801f364 	.word	0x0801f364

0800139c <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 800139c:	4801      	ldr	r0, [pc, #4]	; (80013a4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800139e:	f7ff bcf9 	b.w	8000d94 <_ZN10STM32F4DMAD1Ev>
 80013a2:	bf00      	nop
 80013a4:	20003410 	.word	0x20003410

080013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a8:	4b02      	ldr	r3, [pc, #8]	; (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013aa:	2290      	movs	r2, #144	; 0x90
 80013ac:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b8:	4b02      	ldr	r3, [pc, #8]	; (80013c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013ba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013be:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013c0:	4770      	bx	lr
 80013c2:	bf00      	nop
 80013c4:	e000e100 	.word	0xe000e100

080013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c8:	4770      	bx	lr

080013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013cc:	f008 bd1a 	b.w	8009e04 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013d0:	4b04      	ldr	r3, [pc, #16]	; (80013e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013d2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013d6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013da:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013de:	f3bf 8f6f 	isb	sy
}
 80013e2:	4770      	bx	lr
 80013e4:	e000e100 	.word	0xe000e100

080013e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013e8:	b538      	push	{r3, r4, r5, lr}
 80013ea:	4604      	mov	r4, r0
    HAL::initialize();
 80013ec:	f009 f802 	bl	800a3f4 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013f0:	6823      	ldr	r3, [r4, #0]
 80013f2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80013f4:	f00c fdca 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 80013f8:	4601      	mov	r1, r0
 80013fa:	4620      	mov	r0, r4
 80013fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013fe:	6823      	ldr	r3, [r4, #0]
 8001400:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 8001402:	2300      	movs	r3, #0
 8001404:	461a      	mov	r2, r3
 8001406:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800140a:	4620      	mov	r0, r4
 800140c:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 800140e:	2301      	movs	r3, #1
 8001410:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001414:	bd38      	pop	{r3, r4, r5, pc}
	...

08001418 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001418:	4901      	ldr	r1, [pc, #4]	; (8001420 <vApplicationIdleHook+0x8>)
 800141a:	2000      	movs	r0, #0
 800141c:	f007 be26 	b.w	800906c <vTaskSetApplicationTaskTag>
 8001420:	08000c2d 	.word	0x08000c2d

08001424 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001428:	b0a4      	sub	sp, #144	; 0x90
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800142a:	2210      	movs	r2, #16
 800142c:	2100      	movs	r1, #0
 800142e:	a80a      	add	r0, sp, #40	; 0x28
 8001430:	f01c fe66 	bl	801e100 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001434:	2214      	movs	r2, #20
 8001436:	2100      	movs	r1, #0
 8001438:	a803      	add	r0, sp, #12
 800143a:	f01c fe61 	bl	801e100 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800143e:	2100      	movs	r1, #0
 8001440:	223c      	movs	r2, #60	; 0x3c
 8001442:	a815      	add	r0, sp, #84	; 0x54
 8001444:	f01c fe5c 	bl	801e100 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001448:	2400      	movs	r4, #0
 800144a:	4b24      	ldr	r3, [pc, #144]	; (80014dc <SystemClock_Config+0xb8>)
 800144c:	9401      	str	r4, [sp, #4]
 800144e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001450:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001454:	641a      	str	r2, [r3, #64]	; 0x40
 8001456:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001458:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800145c:	9301      	str	r3, [sp, #4]
 800145e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001460:	4b1f      	ldr	r3, [pc, #124]	; (80014e0 <SystemClock_Config+0xbc>)
 8001462:	9402      	str	r4, [sp, #8]
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800146a:	601a      	str	r2, [r3, #0]
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001472:	9302      	str	r3, [sp, #8]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001474:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001476:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001478:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800147c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001480:	2502      	movs	r5, #2
 8001482:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001486:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 360;
 800148a:	f04f 0808 	mov.w	r8, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 6;
 800148e:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001490:	f44f 77b4 	mov.w	r7, #360	; 0x168
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001494:	2606      	movs	r6, #6
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001496:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001498:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLN = 360;
 800149c:	e9cd 8710 	strd	r8, r7, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014a0:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a2:	f005 fd29 	bl	8006ef8 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a6:	f004 ff83 	bl	80063b0 <HAL_PWREx_EnableOverDrive>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014aa:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014ac:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b0:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b8:	e9cd 1306 	strd	r1, r3, [sp, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	a803      	add	r0, sp, #12
 80014be:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014c0:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c2:	f005 faed 	bl	8006aa0 <HAL_RCC_ClockConfig>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014c6:	a815      	add	r0, sp, #84	; 0x54
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80014c8:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 80014cc:	9719      	str	r7, [sp, #100]	; 0x64
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80014ce:	961c      	str	r6, [sp, #112]	; 0x70
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80014d0:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014d2:	f005 fbaf 	bl	8006c34 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80014d6:	b024      	add	sp, #144	; 0x90
 80014d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014dc:	40023800 	.word	0x40023800
 80014e0:	40007000 	.word	0x40007000

080014e4 <main>:
{
 80014e4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014e8:	b0bd      	sub	sp, #244	; 0xf4
  HAL_Init();
 80014ea:	f003 f837 	bl	800455c <HAL_Init>
  SystemClock_Config();
 80014ee:	f7ff ff99 	bl	8001424 <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014f2:	2214      	movs	r2, #20
 80014f4:	2100      	movs	r1, #0
 80014f6:	a82f      	add	r0, sp, #188	; 0xbc

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014fa:	f01c fe01 	bl	801e100 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014fe:	4bc8      	ldr	r3, [pc, #800]	; (8001820 <main+0x33c>)
 8001500:	9402      	str	r4, [sp, #8]
 8001502:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOJ_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001504:	48c7      	ldr	r0, [pc, #796]	; (8001824 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001506:	f042 0210 	orr.w	r2, r2, #16
 800150a:	631a      	str	r2, [r3, #48]	; 0x30
 800150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150e:	f002 0210 	and.w	r2, r2, #16
 8001512:	9202      	str	r2, [sp, #8]
 8001514:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001516:	9403      	str	r4, [sp, #12]
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f042 0202 	orr.w	r2, r2, #2
 800151e:	631a      	str	r2, [r3, #48]	; 0x30
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f002 0202 	and.w	r2, r2, #2
 8001526:	9203      	str	r2, [sp, #12]
 8001528:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800152a:	9404      	str	r4, [sp, #16]
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001532:	631a      	str	r2, [r3, #48]	; 0x30
 8001534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001536:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800153a:	9204      	str	r2, [sp, #16]
 800153c:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9405      	str	r4, [sp, #20]
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f042 0208 	orr.w	r2, r2, #8
 8001546:	631a      	str	r2, [r3, #48]	; 0x30
 8001548:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154a:	f002 0208 	and.w	r2, r2, #8
 800154e:	9205      	str	r2, [sp, #20]
 8001550:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001552:	9406      	str	r4, [sp, #24]
 8001554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001556:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800155a:	631a      	str	r2, [r3, #48]	; 0x30
 800155c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001562:	9206      	str	r2, [sp, #24]
 8001564:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001566:	9407      	str	r4, [sp, #28]
 8001568:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156a:	f042 0220 	orr.w	r2, r2, #32
 800156e:	631a      	str	r2, [r3, #48]	; 0x30
 8001570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001572:	f002 0220 	and.w	r2, r2, #32
 8001576:	9207      	str	r2, [sp, #28]
 8001578:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800157a:	9408      	str	r4, [sp, #32]
 800157c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001582:	631a      	str	r2, [r3, #48]	; 0x30
 8001584:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001586:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800158a:	9208      	str	r2, [sp, #32]
 800158c:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800158e:	9409      	str	r4, [sp, #36]	; 0x24
 8001590:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001592:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001596:	631a      	str	r2, [r3, #48]	; 0x30
 8001598:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800159e:	9209      	str	r2, [sp, #36]	; 0x24
 80015a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015a2:	940a      	str	r4, [sp, #40]	; 0x28
 80015a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a6:	f042 0204 	orr.w	r2, r2, #4
 80015aa:	631a      	str	r2, [r3, #48]	; 0x30
 80015ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ae:	f002 0204 	and.w	r2, r2, #4
 80015b2:	920a      	str	r2, [sp, #40]	; 0x28
 80015b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015b6:	940b      	str	r4, [sp, #44]	; 0x2c
 80015b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015be:	631a      	str	r2, [r3, #48]	; 0x30
 80015c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80015c6:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015c8:	2201      	movs	r2, #1
 80015ca:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015ce:	f004 f8ed 	bl	80057ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015d2:	4895      	ldr	r0, [pc, #596]	; (8001828 <main+0x344>)
 80015d4:	4622      	mov	r2, r4
 80015d6:	2110      	movs	r1, #16
 80015d8:	f004 f8e8 	bl	80057ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015dc:	4893      	ldr	r0, [pc, #588]	; (800182c <main+0x348>)
 80015de:	4622      	mov	r2, r4
 80015e0:	2140      	movs	r1, #64	; 0x40
 80015e2:	f004 f8e3 	bl	80057ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015e6:	4622      	mov	r2, r4
 80015e8:	4891      	ldr	r0, [pc, #580]	; (8001830 <main+0x34c>)
 80015ea:	2180      	movs	r1, #128	; 0x80
 80015ec:	f004 f8de 	bl	80057ac <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015f0:	2611      	movs	r6, #17
 80015f2:	2308      	movs	r3, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015f4:	488b      	ldr	r0, [pc, #556]	; (8001824 <main+0x340>)
 80015f6:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : RENDER_TIME_Pin */
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f8:	2701      	movs	r7, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015fa:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015fe:	e9cd 362f 	strd	r3, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001602:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001606:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800160a:	f003 ff3f 	bl	800548c <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800160e:	4886      	ldr	r0, [pc, #536]	; (8001828 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001610:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001612:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001614:	e9cd a72f 	strd	sl, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001618:	f8cd 80c8 	str.w	r8, [sp, #200]	; 0xc8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800161c:	f003 ff36 	bl	800548c <HAL_GPIO_Init>

  /*Configure GPIO pin : VSYNC_FREQ_Pin */
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8001620:	2340      	movs	r3, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001622:	4882      	ldr	r0, [pc, #520]	; (800182c <main+0x348>)
 8001624:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : PH7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001626:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001628:	e9cd 372f 	strd	r3, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800162c:	e9cd 4831 	strd	r4, r8, [sp, #196]	; 0xc4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001630:	f003 ff2c 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001634:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001636:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001638:	487d      	ldr	r0, [pc, #500]	; (8001830 <main+0x34c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800163a:	9332      	str	r3, [sp, #200]	; 0xc8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800163c:	e9cd 562f 	strd	r5, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001640:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001642:	f003 ff23 	bl	800548c <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001646:	487b      	ldr	r0, [pc, #492]	; (8001834 <main+0x350>)
  hdma2d.Instance = DMA2D;
 8001648:	4e7b      	ldr	r6, [pc, #492]	; (8001838 <main+0x354>)
  hcrc.Instance = CRC;
 800164a:	4b7c      	ldr	r3, [pc, #496]	; (800183c <main+0x358>)
 800164c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800164e:	f003 f82b 	bl	80046a8 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001652:	4b7b      	ldr	r3, [pc, #492]	; (8001840 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001654:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001658:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800165c:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800165e:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001662:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001666:	f003 f975 	bl	8004954 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800166a:	4639      	mov	r1, r7
 800166c:	4630      	mov	r0, r6
 800166e:	f003 fafb 	bl	8004c68 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001672:	4629      	mov	r1, r5
 8001674:	4622      	mov	r2, r4
 8001676:	486e      	ldr	r0, [pc, #440]	; (8001830 <main+0x34c>)
  hdsi.Instance = DSI;
 8001678:	4e72      	ldr	r6, [pc, #456]	; (8001844 <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800167a:	f004 f897 	bl	80057ac <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800167e:	2014      	movs	r0, #20
 8001680:	f002 ff98 	bl	80045b4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001684:	4629      	mov	r1, r5
 8001686:	463a      	mov	r2, r7
 8001688:	4869      	ldr	r0, [pc, #420]	; (8001830 <main+0x34c>)
 800168a:	f004 f88f 	bl	80057ac <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800168e:	200a      	movs	r0, #10
 8001690:	f002 ff90 	bl	80045b4 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001694:	2224      	movs	r2, #36	; 0x24
 8001696:	4621      	mov	r1, r4
 8001698:	a815      	add	r0, sp, #84	; 0x54
  DSI_PLLInitTypeDef PLLInit = {0};
 800169a:	940e      	str	r4, [sp, #56]	; 0x38
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800169c:	f01c fd30 	bl	801e100 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016a0:	2218      	movs	r2, #24
 80016a2:	4621      	mov	r1, r4
 80016a4:	a80f      	add	r0, sp, #60	; 0x3c
 80016a6:	f01c fd2b 	bl	801e100 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016aa:	2234      	movs	r2, #52	; 0x34
 80016ac:	4621      	mov	r1, r4
 80016ae:	a82f      	add	r0, sp, #188	; 0xbc
 80016b0:	f01c fd26 	bl	801e100 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016b4:	222c      	movs	r2, #44	; 0x2c
 80016b6:	4621      	mov	r1, r4
 80016b8:	a822      	add	r0, sp, #136	; 0x88
 80016ba:	f01c fd21 	bl	801e100 <memset>
  hdsi.Instance = DSI;
 80016be:	4b62      	ldr	r3, [pc, #392]	; (8001848 <main+0x364>)
  hdsi.Init.TXEscapeCkdiv = 4;
 80016c0:	2504      	movs	r5, #4
  PLLInit.PLLNDIV = 125;
 80016c2:	227d      	movs	r2, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016c4:	a90c      	add	r1, sp, #48	; 0x30
 80016c6:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016c8:	e9c6 3400 	strd	r3, r4, [r6]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016cc:	e9cd 280c 	strd	r2, r8, [sp, #48]	; 0x30
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016d0:	e9c6 5702 	strd	r5, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016d4:	f003 fb90 	bl	8004df8 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016d8:	a915      	add	r1, sp, #84	; 0x54
 80016da:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016dc:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016e0:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016e4:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016e8:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016ec:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ee:	f003 fdab 	bl	8005248 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016f2:	231c      	movs	r3, #28
 80016f4:	2221      	movs	r2, #33	; 0x21
 80016f6:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016fa:	210f      	movs	r1, #15
 80016fc:	2219      	movs	r2, #25
 80016fe:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001702:	4630      	mov	r0, r6
 8001704:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 8001706:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800170a:	f003 fd60 	bl	80051ce <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 800170e:	4629      	mov	r1, r5
 8001710:	4630      	mov	r0, r6
 8001712:	f003 fd4b 	bl	80051ac <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001716:	f242 7110 	movw	r1, #10000	; 0x2710
 800171a:	4630      	mov	r0, r6
 800171c:	f003 fe9f 	bl	800545e <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001720:	4621      	mov	r1, r4
 8001722:	4630      	mov	r0, r6
 8001724:	f003 fb05 	bl	8004d32 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001728:	f44f 7080 	mov.w	r0, #256	; 0x100
 800172c:	f44f 7200 	mov.w	r2, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001730:	f44f 6980 	mov.w	r9, #1024	; 0x400
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001734:	e9cd 022f 	strd	r0, r2, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001738:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800173c:	e9cd 9231 	strd	r9, r2, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001740:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001744:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001748:	e9cd 2133 	strd	r2, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800174c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001750:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001754:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001758:	e9cd 3135 	strd	r3, r1, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800175c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8001760:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001764:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001768:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800176c:	e9cd e139 	strd	lr, r1, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001770:	4630      	mov	r0, r6
 8001772:	a92f      	add	r1, sp, #188	; 0xbc
  CmdCfg.CommandSize = 200;
 8001774:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001778:	f8cd 80ec 	str.w	r8, [sp, #236]	; 0xec
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800177c:	f003 fce2 	bl	8005144 <HAL_DSI_ConfigCommand>
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001780:	a922      	add	r1, sp, #136	; 0x88
 8001782:	4630      	mov	r0, r6
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001784:	e9cd 4526 	strd	r4, r5, [sp, #152]	; 0x98
  CmdCfg.ColorCoding = DSI_RGB565;
 8001788:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800178c:	e9cd ba24 	strd	fp, sl, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001790:	e9cd 8428 	strd	r8, r4, [sp, #160]	; 0xa0
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001794:	e9cd 442a 	strd	r4, r4, [sp, #168]	; 0xa8
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001798:	972c      	str	r7, [sp, #176]	; 0xb0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800179a:	f003 fc61 	bl	8005060 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 800179e:	4621      	mov	r1, r4
 80017a0:	4630      	mov	r0, r6
 80017a2:	f003 fc4c 	bl	800503e <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017a6:	4829      	ldr	r0, [pc, #164]	; (800184c <main+0x368>)
 80017a8:	4929      	ldr	r1, [pc, #164]	; (8001850 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017aa:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017ac:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017b0:	2340      	movs	r3, #64	; 0x40
 80017b2:	2120      	movs	r1, #32
 80017b4:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017b8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017bc:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017c0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017c4:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017c8:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.WriteRecoveryTime = 3;
 80017cc:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017ce:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017d0:	a92f      	add	r1, sp, #188	; 0xbc
  SdramTiming.RPDelay = 2;
 80017d2:	e9cd 3833 	strd	r3, r8, [sp, #204]	; 0xcc
  SdramTiming.SelfRefreshTime = 4;
 80017d6:	e9cd 2530 	strd	r2, r5, [sp, #192]	; 0xc0
  SdramTiming.RowCycleDelay = 7;
 80017da:	9232      	str	r2, [sp, #200]	; 0xc8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017dc:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017e0:	f8cd 80bc 	str.w	r8, [sp, #188]	; 0xbc
  SdramTiming.RCDDelay = 2;
 80017e4:	f8cd 80d4 	str.w	r8, [sp, #212]	; 0xd4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e8:	f005 fd10 	bl	800720c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017ec:	f002 fde4 	bl	80043b8 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017f0:	f002 fd94 	bl	800431c <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017f4:	2234      	movs	r2, #52	; 0x34
 80017f6:	4621      	mov	r1, r4
 80017f8:	a815      	add	r0, sp, #84	; 0x54
 80017fa:	f01c fc81 	bl	801e100 <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80017fe:	2234      	movs	r2, #52	; 0x34
 8001800:	4621      	mov	r1, r4
 8001802:	a822      	add	r0, sp, #136	; 0x88
  hltdc.Instance = LTDC;
 8001804:	4d13      	ldr	r5, [pc, #76]	; (8001854 <main+0x370>)
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 8001806:	f01c fc7b 	bl	801e100 <memset>
  hltdc.Instance = LTDC;
 800180a:	4b13      	ldr	r3, [pc, #76]	; (8001858 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 800180c:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800180e:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001812:	22ca      	movs	r2, #202	; 0xca
 8001814:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001818:	e9c5 2309 	strd	r2, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 800181c:	21cb      	movs	r1, #203	; 0xcb
 800181e:	e01d      	b.n	800185c <main+0x378>
 8001820:	40023800 	.word	0x40023800
 8001824:	40022800 	.word	0x40022800
 8001828:	40020c00 	.word	0x40020c00
 800182c:	40021800 	.word	0x40021800
 8001830:	40021c00 	.word	0x40021c00
 8001834:	2000412c 	.word	0x2000412c
 8001838:	20004134 	.word	0x20004134
 800183c:	40023000 	.word	0x40023000
 8001840:	4002b000 	.word	0x4002b000
 8001844:	20004174 	.word	0x20004174
 8001848:	40016c00 	.word	0x40016c00
 800184c:	200042d8 	.word	0x200042d8
 8001850:	a0000140 	.word	0xa0000140
 8001854:	200041e4 	.word	0x200041e4
 8001858:	40016800 	.word	0x40016800
 800185c:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001860:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 8001862:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001866:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 800186a:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 800186e:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001872:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001876:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800187a:	f004 fc63 	bl	8006144 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800187e:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowY1 = 480;
 8001880:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001884:	e9cd 341a 	strd	r3, r4, [sp, #104]	; 0x68
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001888:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800188c:	2305      	movs	r3, #5
 800188e:	e9cd 311d 	strd	r3, r1, [sp, #116]	; 0x74
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001892:	e9cd 2818 	strd	r2, r8, [sp, #96]	; 0x60
  pLayerCfg.ImageHeight = 480;
 8001896:	e9cd b21f 	strd	fp, r2, [sp, #124]	; 0x7c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800189a:	a915      	add	r1, sp, #84	; 0x54
 800189c:	4622      	mov	r2, r4
 800189e:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 200;
 80018a0:	e9cd 4b15 	strd	r4, fp, [sp, #84]	; 0x54
  pLayerCfg.WindowY0 = 0;
 80018a4:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018a6:	f8cd 9070 	str.w	r9, [sp, #112]	; 0x70
  pLayerCfg.Backcolor.Blue = 0;
 80018aa:	f8ad 4084 	strh.w	r4, [sp, #132]	; 0x84
  pLayerCfg.Backcolor.Red = 0;
 80018ae:	f88d 4086 	strb.w	r4, [sp, #134]	; 0x86
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018b2:	f004 fd13 	bl	80062dc <HAL_LTDC_ConfigLayer>
  pLayerCfg1.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018b6:	2305      	movs	r3, #5
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018b8:	a922      	add	r1, sp, #136	; 0x88
 80018ba:	463a      	mov	r2, r7
 80018bc:	4628      	mov	r0, r5
  pLayerCfg1.FBStartAdress = 0;
 80018be:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8
  pLayerCfg1.WindowX1 = 0;
 80018c2:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  pLayerCfg1.WindowY1 = 0;
 80018c6:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  pLayerCfg1.Alpha = 0;
 80018ca:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018ce:	e9cd 4928 	strd	r4, r9, [sp, #160]	; 0xa0
  pLayerCfg1.ImageHeight = 0;
 80018d2:	e9cd 442c 	strd	r4, r4, [sp, #176]	; 0xb0
  pLayerCfg1.Backcolor.Blue = 0;
 80018d6:	f8ad 40b8 	strh.w	r4, [sp, #184]	; 0xb8
  pLayerCfg1.Backcolor.Red = 0;
 80018da:	f88d 40ba 	strb.w	r4, [sp, #186]	; 0xba
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018de:	f004 fcfd 	bl	80062dc <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018e2:	682a      	ldr	r2, [r5, #0]
 80018e4:	6993      	ldr	r3, [r2, #24]
 80018e6:	f023 0301 	bic.w	r3, r3, #1
 80018ea:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018ec:	4630      	mov	r0, r6
 80018ee:	f003 fd11 	bl	8005314 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018f2:	4639      	mov	r1, r7
 80018f4:	4640      	mov	r0, r8
 80018f6:	f001 fed5 	bl	80036a4 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018fa:	2328      	movs	r3, #40	; 0x28
 80018fc:	2215      	movs	r2, #21
 80018fe:	4621      	mov	r1, r4
 8001900:	9400      	str	r4, [sp, #0]
 8001902:	4630      	mov	r0, r6
 8001904:	f003 fd39 	bl	800537a <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001908:	a92f      	add	r1, sp, #188	; 0xbc
 800190a:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800190c:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001910:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001914:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001918:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800191c:	e9cd 4437 	strd	r4, r4, [sp, #220]	; 0xdc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001920:	9439      	str	r4, [sp, #228]	; 0xe4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001922:	f003 fc0f 	bl	8005144 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001926:	f44f 7148 	mov.w	r1, #800	; 0x320
 800192a:	4622      	mov	r2, r4
 800192c:	4628      	mov	r0, r5
 800192e:	f004 fd03 	bl	8006338 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001932:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8001934:	481c      	ldr	r0, [pc, #112]	; (80019a8 <main+0x4c4>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001936:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001938:	4d1c      	ldr	r5, [pc, #112]	; (80019ac <main+0x4c8>)
  __HAL_LTDC_ENABLE(&hltdc);
 800193a:	433b      	orrs	r3, r7
 800193c:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800193e:	4b1c      	ldr	r3, [pc, #112]	; (80019b0 <main+0x4cc>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001940:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 8001942:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 8001946:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8001948:	e9c0 3904 	strd	r3, r9, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800194c:	e9c0 7a02 	strd	r7, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001950:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001954:	f004 fe3a 	bl	80065cc <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8001958:	f002 fba6 	bl	80040a8 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 800195c:	f002 fada 	bl	8003f14 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001960:	f002 fa50 	bl	8003e04 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001964:	4813      	ldr	r0, [pc, #76]	; (80019b4 <main+0x4d0>)
 8001966:	4b14      	ldr	r3, [pc, #80]	; (80019b8 <main+0x4d4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001968:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800196a:	e9c5 0300 	strd	r0, r3, [r5]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800196e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001972:	4628      	mov	r0, r5
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001974:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001978:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800197c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001980:	f004 f8fc 	bl	8005b7c <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001984:	4628      	mov	r0, r5
 8001986:	f004 f9a1 	bl	8005ccc <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800198a:	f7fe fe34 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 800198e:	f005 fe7b 	bl	8007688 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001992:	4a0a      	ldr	r2, [pc, #40]	; (80019bc <main+0x4d8>)
 8001994:	480a      	ldr	r0, [pc, #40]	; (80019c0 <main+0x4dc>)
 8001996:	4621      	mov	r1, r4
 8001998:	f005 feb0 	bl	80076fc <osThreadNew>
 800199c:	4b09      	ldr	r3, [pc, #36]	; (80019c4 <main+0x4e0>)
 800199e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019a0:	f005 fe8c 	bl	80076bc <osKernelStart>
  while (1)
 80019a4:	e7fe      	b.n	80019a4 <main+0x4c0>
 80019a6:	bf00      	nop
 80019a8:	2000428c 	.word	0x2000428c
 80019ac:	20004190 	.word	0x20004190
 80019b0:	a0001000 	.word	0xa0001000
 80019b4:	40005400 	.word	0x40005400
 80019b8:	00061a80 	.word	0x00061a80
 80019bc:	0801f6b0 	.word	0x0801f6b0
 80019c0:	080005fb 	.word	0x080005fb
 80019c4:	20004128 	.word	0x20004128

080019c8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019c8:	6802      	ldr	r2, [r0, #0]
 80019ca:	4b03      	ldr	r3, [pc, #12]	; (80019d8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019cc:	429a      	cmp	r2, r3
 80019ce:	d101      	bne.n	80019d4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019d0:	f002 bdde 	b.w	8004590 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	40001000 	.word	0x40001000

080019dc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019dc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019de:	4b0e      	ldr	r3, [pc, #56]	; (8001a18 <HAL_MspInit+0x3c>)
 80019e0:	2200      	movs	r2, #0
 80019e2:	9200      	str	r2, [sp, #0]
 80019e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019e6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ea:	6459      	str	r1, [r3, #68]	; 0x44
 80019ec:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ee:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019f2:	9100      	str	r1, [sp, #0]
 80019f4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019f6:	9201      	str	r2, [sp, #4]
 80019f8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019fa:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019fe:	6419      	str	r1, [r3, #64]	; 0x40
 8001a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a02:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a06:	9301      	str	r3, [sp, #4]
 8001a08:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0a:	210f      	movs	r1, #15
 8001a0c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a10:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a12:	f002 bdf5 	b.w	8004600 <HAL_NVIC_SetPriority>
 8001a16:	bf00      	nop
 8001a18:	40023800 	.word	0x40023800

08001a1c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a1c:	6802      	ldr	r2, [r0, #0]
 8001a1e:	4b09      	ldr	r3, [pc, #36]	; (8001a44 <HAL_CRC_MspInit+0x28>)
 8001a20:	429a      	cmp	r2, r3
{
 8001a22:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a24:	d10b      	bne.n	8001a3e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a26:	2300      	movs	r3, #0
 8001a28:	9301      	str	r3, [sp, #4]
 8001a2a:	4b07      	ldr	r3, [pc, #28]	; (8001a48 <HAL_CRC_MspInit+0x2c>)
 8001a2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a2e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a32:	631a      	str	r2, [r3, #48]	; 0x30
 8001a34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a36:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a3a:	9301      	str	r3, [sp, #4]
 8001a3c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a3e:	b002      	add	sp, #8
 8001a40:	4770      	bx	lr
 8001a42:	bf00      	nop
 8001a44:	40023000 	.word	0x40023000
 8001a48:	40023800 	.word	0x40023800

08001a4c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a4c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a4e:	4b0f      	ldr	r3, [pc, #60]	; (8001a8c <HAL_DMA2D_MspInit+0x40>)
 8001a50:	6802      	ldr	r2, [r0, #0]
 8001a52:	429a      	cmp	r2, r3
 8001a54:	d116      	bne.n	8001a84 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a56:	2200      	movs	r2, #0
 8001a58:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a5c:	9201      	str	r2, [sp, #4]
 8001a5e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a60:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a64:	6319      	str	r1, [r3, #48]	; 0x30
 8001a66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a6c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a6e:	2105      	movs	r1, #5
 8001a70:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a72:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a74:	f002 fdc4 	bl	8004600 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a78:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a7a:	b003      	add	sp, #12
 8001a7c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a80:	f002 bdf0 	b.w	8004664 <HAL_NVIC_EnableIRQ>
}
 8001a84:	b003      	add	sp, #12
 8001a86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a8a:	bf00      	nop
 8001a8c:	4002b000 	.word	0x4002b000

08001a90 <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001a90:	6802      	ldr	r2, [r0, #0]
 8001a92:	4b06      	ldr	r3, [pc, #24]	; (8001aac <HAL_DMA2D_MspDeInit+0x1c>)
 8001a94:	429a      	cmp	r2, r3
 8001a96:	d107      	bne.n	8001aa8 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001a98:	4a05      	ldr	r2, [pc, #20]	; (8001ab0 <HAL_DMA2D_MspDeInit+0x20>)
 8001a9a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a9c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001aa0:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001aa2:	205a      	movs	r0, #90	; 0x5a
 8001aa4:	f002 bdec 	b.w	8004680 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001aa8:	4770      	bx	lr
 8001aaa:	bf00      	nop
 8001aac:	4002b000 	.word	0x4002b000
 8001ab0:	40023800 	.word	0x40023800

08001ab4 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001ab4:	b510      	push	{r4, lr}
 8001ab6:	4604      	mov	r4, r0
 8001ab8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aba:	2214      	movs	r2, #20
 8001abc:	2100      	movs	r1, #0
 8001abe:	a803      	add	r0, sp, #12
 8001ac0:	f01c fb1e 	bl	801e100 <memset>
  if(hdsi->Instance==DSI)
 8001ac4:	6822      	ldr	r2, [r4, #0]
 8001ac6:	4b17      	ldr	r3, [pc, #92]	; (8001b24 <HAL_DSI_MspInit+0x70>)
 8001ac8:	429a      	cmp	r2, r3
 8001aca:	d128      	bne.n	8001b1e <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001acc:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001ad0:	2400      	movs	r4, #0
 8001ad2:	9401      	str	r4, [sp, #4]
 8001ad4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ad6:	4814      	ldr	r0, [pc, #80]	; (8001b28 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ad8:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001adc:	645a      	str	r2, [r3, #68]	; 0x44
 8001ade:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ae0:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001ae4:	9201      	str	r2, [sp, #4]
 8001ae6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001ae8:	9402      	str	r4, [sp, #8]
 8001aea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001af0:	631a      	str	r2, [r3, #48]	; 0x30
 8001af2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001af4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001af8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afa:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001afc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afe:	2302      	movs	r3, #2
 8001b00:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b04:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b06:	230d      	movs	r3, #13
 8001b08:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b0a:	f003 fcbf 	bl	800548c <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b0e:	205c      	movs	r0, #92	; 0x5c
 8001b10:	4622      	mov	r2, r4
 8001b12:	2105      	movs	r1, #5
 8001b14:	f002 fd74 	bl	8004600 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b18:	205c      	movs	r0, #92	; 0x5c
 8001b1a:	f002 fda3 	bl	8004664 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b1e:	b008      	add	sp, #32
 8001b20:	bd10      	pop	{r4, pc}
 8001b22:	bf00      	nop
 8001b24:	40016c00 	.word	0x40016c00
 8001b28:	40022400 	.word	0x40022400

08001b2c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b2c:	b530      	push	{r4, r5, lr}
 8001b2e:	4604      	mov	r4, r0
 8001b30:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b32:	2214      	movs	r2, #20
 8001b34:	2100      	movs	r1, #0
 8001b36:	a803      	add	r0, sp, #12
 8001b38:	f01c fae2 	bl	801e100 <memset>
  if(hi2c->Instance==I2C1)
 8001b3c:	6822      	ldr	r2, [r4, #0]
 8001b3e:	4b1a      	ldr	r3, [pc, #104]	; (8001ba8 <HAL_I2C_MspInit+0x7c>)
 8001b40:	429a      	cmp	r2, r3
 8001b42:	d12f      	bne.n	8001ba4 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b44:	4c19      	ldr	r4, [pc, #100]	; (8001bac <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b46:	481a      	ldr	r0, [pc, #104]	; (8001bb0 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b48:	2500      	movs	r5, #0
 8001b4a:	9501      	str	r5, [sp, #4]
 8001b4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b4e:	f043 0302 	orr.w	r3, r3, #2
 8001b52:	6323      	str	r3, [r4, #48]	; 0x30
 8001b54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b56:	f003 0302 	and.w	r3, r3, #2
 8001b5a:	9301      	str	r3, [sp, #4]
 8001b5c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b5e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b62:	2312      	movs	r3, #18
 8001b64:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b68:	2101      	movs	r1, #1
 8001b6a:	2303      	movs	r3, #3
 8001b6c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b70:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b72:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b74:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b76:	f003 fc89 	bl	800548c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b7a:	9502      	str	r5, [sp, #8]
 8001b7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b7e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b82:	6423      	str	r3, [r4, #64]	; 0x40
 8001b84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b86:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b8a:	9302      	str	r3, [sp, #8]
 8001b8c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b8e:	6a23      	ldr	r3, [r4, #32]
 8001b90:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b94:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b96:	6a23      	ldr	r3, [r4, #32]
 8001b98:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b9c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b9e:	2064      	movs	r0, #100	; 0x64
 8001ba0:	f002 fd08 	bl	80045b4 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001ba4:	b009      	add	sp, #36	; 0x24
 8001ba6:	bd30      	pop	{r4, r5, pc}
 8001ba8:	40005400 	.word	0x40005400
 8001bac:	40023800 	.word	0x40023800
 8001bb0:	40020400 	.word	0x40020400

08001bb4 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bb4:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bb6:	6802      	ldr	r2, [r0, #0]
 8001bb8:	4b0a      	ldr	r3, [pc, #40]	; (8001be4 <HAL_I2C_MspDeInit+0x30>)
 8001bba:	429a      	cmp	r2, r3
 8001bbc:	d110      	bne.n	8001be0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bbe:	4a0a      	ldr	r2, [pc, #40]	; (8001be8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bc0:	480a      	ldr	r0, [pc, #40]	; (8001bec <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bc2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001bc4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bc8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bca:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bce:	f003 fd45 	bl	800565c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bd6:	4805      	ldr	r0, [pc, #20]	; (8001bec <HAL_I2C_MspDeInit+0x38>)
 8001bd8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bdc:	f003 bd3e 	b.w	800565c <HAL_GPIO_DeInit>
}
 8001be0:	bd08      	pop	{r3, pc}
 8001be2:	bf00      	nop
 8001be4:	40005400 	.word	0x40005400
 8001be8:	40023800 	.word	0x40023800
 8001bec:	40020400 	.word	0x40020400

08001bf0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bf0:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 8001bf2:	4b0f      	ldr	r3, [pc, #60]	; (8001c30 <HAL_LTDC_MspInit+0x40>)
 8001bf4:	6802      	ldr	r2, [r0, #0]
 8001bf6:	429a      	cmp	r2, r3
 8001bf8:	d116      	bne.n	8001c28 <HAL_LTDC_MspInit+0x38>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bfa:	2200      	movs	r2, #0
 8001bfc:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c00:	9201      	str	r2, [sp, #4]
 8001c02:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c04:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c08:	6459      	str	r1, [r3, #68]	; 0x44
 8001c0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c0c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c10:	9301      	str	r3, [sp, #4]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c12:	2105      	movs	r1, #5
 8001c14:	2058      	movs	r0, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c16:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c18:	f002 fcf2 	bl	8004600 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c1c:	2058      	movs	r0, #88	; 0x58
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c1e:	b003      	add	sp, #12
 8001c20:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c24:	f002 bd1e 	b.w	8004664 <HAL_NVIC_EnableIRQ>
}
 8001c28:	b003      	add	sp, #12
 8001c2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c2e:	bf00      	nop
 8001c30:	40016800 	.word	0x40016800

08001c34 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c36:	4604      	mov	r4, r0
 8001c38:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3a:	2214      	movs	r2, #20
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	a803      	add	r0, sp, #12
 8001c40:	f01c fa5e 	bl	801e100 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c44:	6822      	ldr	r2, [r4, #0]
 8001c46:	4b24      	ldr	r3, [pc, #144]	; (8001cd8 <HAL_QSPI_MspInit+0xa4>)
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	d142      	bne.n	8001cd2 <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c4c:	4b23      	ldr	r3, [pc, #140]	; (8001cdc <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c4e:	4824      	ldr	r0, [pc, #144]	; (8001ce0 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c50:	2400      	movs	r4, #0
 8001c52:	9400      	str	r4, [sp, #0]
 8001c54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c56:	f042 0202 	orr.w	r2, r2, #2
 8001c5a:	639a      	str	r2, [r3, #56]	; 0x38
 8001c5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c5e:	f002 0202 	and.w	r2, r2, #2
 8001c62:	9200      	str	r2, [sp, #0]
 8001c64:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c66:	9401      	str	r4, [sp, #4]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0202 	orr.w	r2, r2, #2
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0202 	and.w	r2, r2, #2
 8001c76:	9201      	str	r2, [sp, #4]
 8001c78:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c7a:	9402      	str	r4, [sp, #8]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0220 	orr.w	r2, r2, #32
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c86:	f003 0320 	and.w	r3, r3, #32
 8001c8a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c8e:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c90:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c92:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c96:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c9c:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ca0:	f003 fbf4 	bl	800548c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001ca4:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cac:	480d      	ldr	r0, [pc, #52]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cae:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cb2:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb4:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	f003 fbe8 	bl	800548c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cbc:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc0:	4808      	ldr	r0, [pc, #32]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc2:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc6:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cca:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cce:	f003 fbdd 	bl	800548c <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cd2:	b009      	add	sp, #36	; 0x24
 8001cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cd6:	bf00      	nop
 8001cd8:	a0001000 	.word	0xa0001000
 8001cdc:	40023800 	.word	0x40023800
 8001ce0:	40020400 	.word	0x40020400
 8001ce4:	40021400 	.word	0x40021400

08001ce8 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ce8:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001cea:	6802      	ldr	r2, [r0, #0]
 8001cec:	4b09      	ldr	r3, [pc, #36]	; (8001d14 <HAL_QSPI_MspDeInit+0x2c>)
 8001cee:	429a      	cmp	r2, r3
 8001cf0:	d10f      	bne.n	8001d12 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf2:	4a09      	ldr	r2, [pc, #36]	; (8001d18 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cf4:	4809      	ldr	r0, [pc, #36]	; (8001d1c <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf6:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cf8:	f023 0302 	bic.w	r3, r3, #2
 8001cfc:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cfe:	2140      	movs	r1, #64	; 0x40
 8001d00:	f003 fcac 	bl	800565c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d08:	4805      	ldr	r0, [pc, #20]	; (8001d20 <HAL_QSPI_MspDeInit+0x38>)
 8001d0a:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d0e:	f003 bca5 	b.w	800565c <HAL_GPIO_DeInit>
}
 8001d12:	bd08      	pop	{r3, pc}
 8001d14:	a0001000 	.word	0xa0001000
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40020400 	.word	0x40020400
 8001d20:	40021400 	.word	0x40021400

08001d24 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d26:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d28:	2300      	movs	r3, #0
 8001d2a:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d2c:	4b30      	ldr	r3, [pc, #192]	; (8001df0 <HAL_SDRAM_MspInit+0xcc>)
 8001d2e:	681c      	ldr	r4, [r3, #0]
 8001d30:	2c00      	cmp	r4, #0
 8001d32:	d15a      	bne.n	8001dea <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d34:	2201      	movs	r2, #1
 8001d36:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d38:	4b2e      	ldr	r3, [pc, #184]	; (8001df4 <HAL_SDRAM_MspInit+0xd0>)
 8001d3a:	9400      	str	r4, [sp, #0]
 8001d3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d3e:	482e      	ldr	r0, [pc, #184]	; (8001df8 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d40:	f042 0201 	orr.w	r2, r2, #1
 8001d44:	639a      	str	r2, [r3, #56]	; 0x38
 8001d46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d48:	f003 0301 	and.w	r3, r3, #1
 8001d4c:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d50:	2603      	movs	r6, #3
 8001d52:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d54:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d56:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d5c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d60:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d64:	f003 fb92 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d68:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d6c:	4823      	ldr	r0, [pc, #140]	; (8001dfc <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d70:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d72:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d76:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d7a:	f003 fb87 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d7e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d82:	481f      	ldr	r0, [pc, #124]	; (8001e00 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d84:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d86:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d88:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d8c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d90:	f003 fb7c 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d94:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d98:	481a      	ldr	r0, [pc, #104]	; (8001e04 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d9c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d9e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001da6:	f003 fb71 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001daa:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dae:	4816      	ldr	r0, [pc, #88]	; (8001e08 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dbc:	f003 fb66 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dc0:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc4:	4811      	ldr	r0, [pc, #68]	; (8001e0c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dd2:	f003 fb5b 	bl	800548c <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001dd6:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd8:	480d      	ldr	r0, [pc, #52]	; (8001e10 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dda:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ddc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dde:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001de6:	f003 fb51 	bl	800548c <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dea:	b007      	add	sp, #28
 8001dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dee:	bf00      	nop
 8001df0:	20004310 	.word	0x20004310
 8001df4:	40023800 	.word	0x40023800
 8001df8:	40021000 	.word	0x40021000
 8001dfc:	40021800 	.word	0x40021800
 8001e00:	40020c00 	.word	0x40020c00
 8001e04:	40022000 	.word	0x40022000
 8001e08:	40021400 	.word	0x40021400
 8001e0c:	40021c00 	.word	0x40021c00
 8001e10:	40020800 	.word	0x40020800

08001e14 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e14:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e16:	4b17      	ldr	r3, [pc, #92]	; (8001e74 <HAL_SDRAM_MspDeInit+0x60>)
 8001e18:	681a      	ldr	r2, [r3, #0]
 8001e1a:	bb52      	cbnz	r2, 8001e72 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e20:	4a15      	ldr	r2, [pc, #84]	; (8001e78 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e22:	4816      	ldr	r0, [pc, #88]	; (8001e7c <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e24:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e26:	f023 0301 	bic.w	r3, r3, #1
 8001e2a:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e2c:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e30:	f003 fc14 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e34:	4812      	ldr	r0, [pc, #72]	; (8001e80 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e36:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e3a:	f003 fc0f 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e3e:	4811      	ldr	r0, [pc, #68]	; (8001e84 <HAL_SDRAM_MspDeInit+0x70>)
 8001e40:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e44:	f003 fc0a 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e48:	480f      	ldr	r0, [pc, #60]	; (8001e88 <HAL_SDRAM_MspDeInit+0x74>)
 8001e4a:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e4e:	f003 fc05 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e52:	480e      	ldr	r0, [pc, #56]	; (8001e8c <HAL_SDRAM_MspDeInit+0x78>)
 8001e54:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e58:	f003 fc00 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e5c:	480c      	ldr	r0, [pc, #48]	; (8001e90 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e5e:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e62:	f003 fbfb 	bl	800565c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e6a:	480a      	ldr	r0, [pc, #40]	; (8001e94 <HAL_SDRAM_MspDeInit+0x80>)
 8001e6c:	210d      	movs	r1, #13
 8001e6e:	f003 bbf5 	b.w	800565c <HAL_GPIO_DeInit>
}
 8001e72:	bd08      	pop	{r3, pc}
 8001e74:	2000430c 	.word	0x2000430c
 8001e78:	40023800 	.word	0x40023800
 8001e7c:	40021000 	.word	0x40021000
 8001e80:	40021800 	.word	0x40021800
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	40022000 	.word	0x40022000
 8001e8c:	40021400 	.word	0x40021400
 8001e90:	40021c00 	.word	0x40021c00
 8001e94:	40020800 	.word	0x40020800

08001e98 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e98:	b530      	push	{r4, r5, lr}
 8001e9a:	4601      	mov	r1, r0
 8001e9c:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	2036      	movs	r0, #54	; 0x36
 8001ea2:	f002 fbad 	bl	8004600 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ea6:	2036      	movs	r0, #54	; 0x36
 8001ea8:	f002 fbdc 	bl	8004664 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eac:	2500      	movs	r5, #0
 8001eae:	4b15      	ldr	r3, [pc, #84]	; (8001f04 <HAL_InitTick+0x6c>)
 8001eb0:	9502      	str	r5, [sp, #8]
 8001eb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eb4:	4c14      	ldr	r4, [pc, #80]	; (8001f08 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eb6:	f042 0210 	orr.w	r2, r2, #16
 8001eba:	641a      	str	r2, [r3, #64]	; 0x40
 8001ebc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ebe:	f003 0310 	and.w	r3, r3, #16
 8001ec2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec4:	a901      	add	r1, sp, #4
 8001ec6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001eca:	f004 fe95 	bl	8006bf8 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ece:	f004 fe83 	bl	8006bd8 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001ed2:	4b0e      	ldr	r3, [pc, #56]	; (8001f0c <HAL_InitTick+0x74>)
 8001ed4:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001ed6:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001eda:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001edc:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ede:	4b0c      	ldr	r3, [pc, #48]	; (8001f10 <HAL_InitTick+0x78>)
 8001ee0:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ee4:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ee6:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee8:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001eea:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001eec:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eee:	f005 fb01 	bl	80074f4 <HAL_TIM_Base_Init>
 8001ef2:	b920      	cbnz	r0, 8001efe <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	f005 f9e1 	bl	80072bc <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001efa:	b009      	add	sp, #36	; 0x24
 8001efc:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001efe:	2001      	movs	r0, #1
 8001f00:	e7fb      	b.n	8001efa <HAL_InitTick+0x62>
 8001f02:	bf00      	nop
 8001f04:	40023800 	.word	0x40023800
 8001f08:	20004314 	.word	0x20004314
 8001f0c:	40001000 	.word	0x40001000
 8001f10:	000f4240 	.word	0x000f4240

08001f14 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f14:	4770      	bx	lr

08001f16 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f16:	e7fe      	b.n	8001f16 <HardFault_Handler>

08001f18 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f18:	e7fe      	b.n	8001f18 <MemManage_Handler>

08001f1a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f1a:	e7fe      	b.n	8001f1a <BusFault_Handler>

08001f1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f1c:	e7fe      	b.n	8001f1c <UsageFault_Handler>

08001f1e <DebugMon_Handler>:
 8001f1e:	4770      	bx	lr

08001f20 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f20:	4801      	ldr	r0, [pc, #4]	; (8001f28 <TIM6_DAC_IRQHandler+0x8>)
 8001f22:	f005 b9df 	b.w	80072e4 <HAL_TIM_IRQHandler>
 8001f26:	bf00      	nop
 8001f28:	20004314 	.word	0x20004314

08001f2c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f2c:	4801      	ldr	r0, [pc, #4]	; (8001f34 <LTDC_IRQHandler+0x8>)
 8001f2e:	f004 b978 	b.w	8006222 <HAL_LTDC_IRQHandler>
 8001f32:	bf00      	nop
 8001f34:	200041e4 	.word	0x200041e4

08001f38 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f38:	4801      	ldr	r0, [pc, #4]	; (8001f40 <DMA2D_IRQHandler+0x8>)
 8001f3a:	f002 be0b 	b.w	8004b54 <HAL_DMA2D_IRQHandler>
 8001f3e:	bf00      	nop
 8001f40:	20004134 	.word	0x20004134

08001f44 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f44:	4801      	ldr	r0, [pc, #4]	; (8001f4c <DSI_IRQHandler+0x8>)
 8001f46:	f003 b808 	b.w	8004f5a <HAL_DSI_IRQHandler>
 8001f4a:	bf00      	nop
 8001f4c:	20004174 	.word	0x20004174

08001f50 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f50:	2001      	movs	r0, #1
 8001f52:	4770      	bx	lr

08001f54 <_kill>:

int _kill(int pid, int sig)
{
 8001f54:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f56:	f01c f879 	bl	801e04c <__errno>
 8001f5a:	2316      	movs	r3, #22
 8001f5c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f5e:	f04f 30ff 	mov.w	r0, #4294967295
 8001f62:	bd08      	pop	{r3, pc}

08001f64 <_exit>:

void _exit (int status)
{
 8001f64:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f66:	f01c f871 	bl	801e04c <__errno>
 8001f6a:	2316      	movs	r3, #22
 8001f6c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f6e:	e7fe      	b.n	8001f6e <_exit+0xa>

08001f70 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f70:	b570      	push	{r4, r5, r6, lr}
 8001f72:	460d      	mov	r5, r1
 8001f74:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f76:	460e      	mov	r6, r1
 8001f78:	1b73      	subs	r3, r6, r5
 8001f7a:	429c      	cmp	r4, r3
 8001f7c:	dc01      	bgt.n	8001f82 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f7e:	4620      	mov	r0, r4
 8001f80:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f82:	f3af 8000 	nop.w
 8001f86:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8a:	e7f5      	b.n	8001f78 <_read+0x8>

08001f8c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f8c:	b570      	push	{r4, r5, r6, lr}
 8001f8e:	460d      	mov	r5, r1
 8001f90:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f92:	460e      	mov	r6, r1
 8001f94:	1b73      	subs	r3, r6, r5
 8001f96:	429c      	cmp	r4, r3
 8001f98:	dc01      	bgt.n	8001f9e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f9e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fa2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fa6:	e7f5      	b.n	8001f94 <_write+0x8>

08001fa8 <_close>:

int _close(int file)
{
	return -1;
}
 8001fa8:	f04f 30ff 	mov.w	r0, #4294967295
 8001fac:	4770      	bx	lr

08001fae <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fae:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fb2:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	4770      	bx	lr

08001fb8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fb8:	2001      	movs	r0, #1
 8001fba:	4770      	bx	lr

08001fbc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	4770      	bx	lr

08001fc0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fc0:	4a0a      	ldr	r2, [pc, #40]	; (8001fec <_sbrk+0x2c>)
 8001fc2:	6811      	ldr	r1, [r2, #0]
{
 8001fc4:	b508      	push	{r3, lr}
 8001fc6:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fc8:	b909      	cbnz	r1, 8001fce <_sbrk+0xe>
		heap_end = &end;
 8001fca:	4909      	ldr	r1, [pc, #36]	; (8001ff0 <_sbrk+0x30>)
 8001fcc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fce:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fd0:	4669      	mov	r1, sp
 8001fd2:	4403      	add	r3, r0
 8001fd4:	428b      	cmp	r3, r1
 8001fd6:	d906      	bls.n	8001fe6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fd8:	f01c f838 	bl	801e04c <__errno>
 8001fdc:	230c      	movs	r3, #12
 8001fde:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fe0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fe4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fe6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fe8:	e7fc      	b.n	8001fe4 <_sbrk+0x24>
 8001fea:	bf00      	nop
 8001fec:	20004354 	.word	0x20004354
 8001ff0:	2000d620 	.word	0x2000d620

08001ff4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // comicbd_83_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001ff4:	4770      	bx	lr

08001ff6 <_ZN23ApplicationFontProviderD0Ev>:
 8001ff6:	b510      	push	{r4, lr}
 8001ff8:	2104      	movs	r1, #4
 8001ffa:	4604      	mov	r4, r0
 8001ffc:	f01b ffc5 	bl	801df8a <_ZdlPvj>
 8002000:	4620      	mov	r0, r4
 8002002:	bd10      	pop	{r4, pc}

08002004 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002004:	b508      	push	{r3, lr}
    switch (typography)
 8002006:	2903      	cmp	r1, #3
 8002008:	d813      	bhi.n	8002032 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800200a:	e8df f001 	tbb	[pc, r1]
 800200e:	0602      	.short	0x0602
 8002010:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002012:	f001 fa29 	bl	8003468 <_ZN17TypedTextDatabase8getFontsEv>
 8002016:	6800      	ldr	r0, [r0, #0]
        // comicbd_83_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002018:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800201a:	f001 fa25 	bl	8003468 <_ZN17TypedTextDatabase8getFontsEv>
 800201e:	6840      	ldr	r0, [r0, #4]
 8002020:	e7fa      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002022:	f001 fa21 	bl	8003468 <_ZN17TypedTextDatabase8getFontsEv>
 8002026:	6880      	ldr	r0, [r0, #8]
 8002028:	e7f6      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800202a:	f001 fa1d 	bl	8003468 <_ZN17TypedTextDatabase8getFontsEv>
 800202e:	68c0      	ldr	r0, [r0, #12]
 8002030:	e7f2      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002032:	2000      	movs	r0, #0
 8002034:	e7f0      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002038 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002038:	4800      	ldr	r0, [pc, #0]	; (800203c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800203a:	4770      	bx	lr
 800203c:	0801f6e8 	.word	0x0801f6e8

08002040 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002040:	2005      	movs	r0, #5
 8002042:	4770      	bx	lr

08002044 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002044:	b513      	push	{r0, r1, r4, lr}
 8002046:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002048:	b151      	cbz	r1, 8002060 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800204a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800204c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800204e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002052:	aa01      	add	r2, sp, #4
 8002054:	689c      	ldr	r4, [r3, #8]
 8002056:	f10d 0303 	add.w	r3, sp, #3
 800205a:	47a0      	blx	r4
        return glyph;
    }
 800205c:	b002      	add	sp, #8
 800205e:	bd10      	pop	{r4, pc}
            return 0;
 8002060:	4608      	mov	r0, r1
 8002062:	e7fb      	b.n	800205c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002064 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002064:	8940      	ldrh	r0, [r0, #10]
 8002066:	4770      	bx	lr

08002068 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002068:	8980      	ldrh	r0, [r0, #12]
 800206a:	4770      	bx	lr

0800206c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800206c:	8880      	ldrh	r0, [r0, #4]
 800206e:	4770      	bx	lr

08002070 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002070:	7983      	ldrb	r3, [r0, #6]
 8002072:	8880      	ldrh	r0, [r0, #4]
 8002074:	4418      	add	r0, r3
    }
 8002076:	b280      	uxth	r0, r0
 8002078:	4770      	bx	lr

0800207a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800207a:	79c0      	ldrb	r0, [r0, #7]
    }
 800207c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002080:	4770      	bx	lr

08002082 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002082:	79c0      	ldrb	r0, [r0, #7]
    }
 8002084:	09c0      	lsrs	r0, r0, #7
 8002086:	4770      	bx	lr

08002088 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002088:	4770      	bx	lr

0800208a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800208a:	b510      	push	{r4, lr}
    }
 800208c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800208e:	4604      	mov	r4, r0
    }
 8002090:	f01b ff7b 	bl	801df8a <_ZdlPvj>
 8002094:	4620      	mov	r0, r4
 8002096:	bd10      	pop	{r4, pc}

08002098 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002098:	4770      	bx	lr

0800209a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800209a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800209e:	6808      	ldr	r0, [r1, #0]
 80020a0:	6849      	ldr	r1, [r1, #4]
 80020a2:	c303      	stmia	r3!, {r0, r1}
    };
 80020a4:	4770      	bx	lr

080020a6 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80020a6:	2000      	movs	r0, #0
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80020aa:	8081      	strh	r1, [r0, #4]
    }
 80020ac:	4770      	bx	lr

080020ae <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80020ae:	80c1      	strh	r1, [r0, #6]
    }
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80020b2:	8101      	strh	r1, [r0, #8]
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80020b6:	8141      	strh	r1, [r0, #10]
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80020ba:	4770      	bx	lr

080020bc <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80020bc:	4770      	bx	lr

080020be <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80020be:	4770      	bx	lr

080020c0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80020c0:	4770      	bx	lr

080020c2 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80020c2:	4770      	bx	lr

080020c4 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80020c4:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80020c6:	88c4      	ldrh	r4, [r0, #6]
 80020c8:	6803      	ldr	r3, [r0, #0]
 80020ca:	1b12      	subs	r2, r2, r4
 80020cc:	8884      	ldrh	r4, [r0, #4]
 80020ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020d0:	1b09      	subs	r1, r1, r4
 80020d2:	b212      	sxth	r2, r2
    }
 80020d4:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80020d8:	b209      	sxth	r1, r1
 80020da:	4718      	bx	r3

080020dc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80020dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80020e0:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80020e2:	f04f 33ff 	mov.w	r3, #4294967295
 80020e6:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80020e8:	6813      	ldr	r3, [r2, #0]
 80020ea:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80020ec:	6010      	str	r0, [r2, #0]
    }
 80020ee:	4770      	bx	lr

080020f0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020f0:	4770      	bx	lr

080020f2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020f2:	4770      	bx	lr

080020f4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020f4:	6041      	str	r1, [r0, #4]
    }
 80020f6:	4770      	bx	lr

080020f8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020f8:	4770      	bx	lr

080020fa <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020fa:	2301      	movs	r3, #1
 80020fc:	7203      	strb	r3, [r0, #8]
    }
 80020fe:	4770      	bx	lr

08002100 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002100:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002104:	b11a      	cbz	r2, 800210e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002106:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800210a:	b102      	cbz	r2, 800210e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800210c:	6018      	str	r0, [r3, #0]
        }
    }
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002110:	4770      	bx	lr

08002112 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED1Ev>:
class WipeTransition : public Transition
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002114:	4770      	bx	lr

08002116 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002116:	4770      	bx	lr

08002118 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE8tearDownEv>:
            //Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002118:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800211a:	6840      	ldr	r0, [r0, #4]
 800211c:	6803      	ldr	r3, [r0, #0]
 800211e:	3110      	adds	r1, #16
 8002120:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002122:	4718      	bx	r3

08002124 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE4initEv>:
    }

    virtual void init()
 8002124:	4601      	mov	r1, r0
    {
        Transition::init();
        //add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002126:	6840      	ldr	r0, [r0, #4]
 8002128:	6803      	ldr	r3, [r0, #0]
 800212a:	3110      	adds	r1, #16
 800212c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800212e:	4718      	bx	r3

08002130 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE10invalidateEv>:
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
        //nop
    }
 8002130:	4770      	bx	lr

08002132 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002132:	4770      	bx	lr

08002134 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 8002134:	b510      	push	{r4, lr}
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8002136:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002138:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800213c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002140:	8002      	strh	r2, [r0, #0]
        this->y = y;
 8002142:	8042      	strh	r2, [r0, #2]
        this->width = width;
 8002144:	8084      	strh	r4, [r0, #4]
        this->height = height;
 8002146:	80c1      	strh	r1, [r0, #6]
        }
 8002148:	bd10      	pop	{r4, pc}

0800214a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800214a:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 800214c:	68c2      	ldr	r2, [r0, #12]
 800214e:	6841      	ldr	r1, [r0, #4]
 8002150:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002152:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002154:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002158:	07d2      	lsls	r2, r2, #31
 800215a:	bf48      	it	mi
 800215c:	590a      	ldrmi	r2, [r1, r4]
 800215e:	689b      	ldr	r3, [r3, #8]
    }
 8002160:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002164:	bf48      	it	mi
 8002166:	58d3      	ldrmi	r3, [r2, r3]
 8002168:	4718      	bx	r3

0800216a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 800216a:	6843      	ldr	r3, [r0, #4]
 800216c:	b12b      	cbz	r3, 800217a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800216e:	6883      	ldr	r3, [r0, #8]
 8002170:	b92b      	cbnz	r3, 800217e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002172:	68c0      	ldr	r0, [r0, #12]
 8002174:	f000 0001 	and.w	r0, r0, #1
 8002178:	4770      	bx	lr
 800217a:	4618      	mov	r0, r3
 800217c:	4770      	bx	lr
 800217e:	2001      	movs	r0, #1
    }
 8002180:	4770      	bx	lr

08002182 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002182:	b510      	push	{r4, lr}
 8002184:	210c      	movs	r1, #12
 8002186:	4604      	mov	r4, r0
 8002188:	f01b feff 	bl	801df8a <_ZdlPvj>
 800218c:	4620      	mov	r0, r4
 800218e:	bd10      	pop	{r4, pc}

08002190 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002190:	b510      	push	{r4, lr}
 8002192:	2110      	movs	r1, #16
 8002194:	4604      	mov	r4, r0
 8002196:	f01b fef8 	bl	801df8a <_ZdlPvj>
 800219a:	4620      	mov	r0, r4
 800219c:	bd10      	pop	{r4, pc}

0800219e <_ZN23FrontendApplicationBaseD0Ev>:
 800219e:	b510      	push	{r4, lr}
 80021a0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80021a4:	4604      	mov	r4, r0
 80021a6:	f01b fef0 	bl	801df8a <_ZdlPvj>
 80021aa:	4620      	mov	r0, r4
 80021ac:	bd10      	pop	{r4, pc}

080021ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED0Ev>:
class WipeTransition : public Transition
 80021ae:	b510      	push	{r4, lr}
 80021b0:	2138      	movs	r1, #56	; 0x38
 80021b2:	4604      	mov	r4, r0
 80021b4:	f01b fee9 	bl	801df8a <_ZdlPvj>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}

080021bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80021bc:	b510      	push	{r4, lr}
 80021be:	2128      	movs	r1, #40	; 0x28
 80021c0:	4604      	mov	r4, r0
 80021c2:	f01b fee2 	bl	801df8a <_ZdlPvj>
 80021c6:	4620      	mov	r0, r4
 80021c8:	bd10      	pop	{r4, pc}

080021ca <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80021ca:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80021cc:	f00b fede 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 80021d0:	6803      	ldr	r3, [r0, #0]
    }
 80021d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80021d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021d8:	4718      	bx	r3

080021da <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80021da:	b510      	push	{r4, lr}
 80021dc:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80021de:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80021e2:	b158      	cbz	r0, 80021fc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80021e4:	6803      	ldr	r3, [r0, #0]
 80021e6:	68db      	ldr	r3, [r3, #12]
 80021e8:	4798      	blx	r3
 80021ea:	b138      	cbz	r0, 80021fc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80021ec:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80021f0:	6803      	ldr	r3, [r0, #0]
 80021f2:	689b      	ldr	r3, [r3, #8]
 80021f4:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80021f6:	2300      	movs	r3, #0
 80021f8:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80021fc:	bd10      	pop	{r4, pc}
	...

08002200 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002200:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002204:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002208:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800220a:	68a8      	ldr	r0, [r5, #8]
 800220c:	6803      	ldr	r3, [r0, #0]
 800220e:	6a1b      	ldr	r3, [r3, #32]
 8002210:	4798      	blx	r3
 8002212:	f5b0 7fba 	cmp.w	r0, #372	; 0x174
 8002216:	d205      	bcs.n	8002224 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002218:	4b45      	ldr	r3, [pc, #276]	; (8002330 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800221a:	4a46      	ldr	r2, [pc, #280]	; (8002334 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800221c:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800221e:	4846      	ldr	r0, [pc, #280]	; (8002338 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002220:	f01b fee2 	bl	801dfe8 <__assert_func>
 8002224:	6868      	ldr	r0, [r5, #4]
 8002226:	6803      	ldr	r3, [r0, #0]
 8002228:	6a1b      	ldr	r3, [r3, #32]
 800222a:	4798      	blx	r3
 800222c:	280f      	cmp	r0, #15
 800222e:	d803      	bhi.n	8002238 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002230:	4b42      	ldr	r3, [pc, #264]	; (800233c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002232:	4a40      	ldr	r2, [pc, #256]	; (8002334 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002234:	21a8      	movs	r1, #168	; 0xa8
 8002236:	e7f2      	b.n	800221e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002238:	68e8      	ldr	r0, [r5, #12]
 800223a:	6803      	ldr	r3, [r0, #0]
 800223c:	6a1b      	ldr	r3, [r3, #32]
 800223e:	4798      	blx	r3
 8002240:	280b      	cmp	r0, #11
 8002242:	d803      	bhi.n	800224c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002244:	4b3e      	ldr	r3, [pc, #248]	; (8002340 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002246:	4a3b      	ldr	r2, [pc, #236]	; (8002334 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002248:	21a9      	movs	r1, #169	; 0xa9
 800224a:	e7e8      	b.n	800221e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800224c:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002348 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002250:	f00b fe9c 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 8002254:	f00b fee8 	bl	800e028 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002258:	f8d9 0000 	ldr.w	r0, [r9]
 800225c:	b110      	cbz	r0, 8002264 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800225e:	6803      	ldr	r3, [r0, #0]
 8002260:	68db      	ldr	r3, [r3, #12]
 8002262:	4798      	blx	r3
    if (*currentTrans)
 8002264:	f8d9 0000 	ldr.w	r0, [r9]
 8002268:	b110      	cbz	r0, 8002270 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800226a:	6803      	ldr	r3, [r0, #0]
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	4798      	blx	r3
    if (*currentScreen)
 8002270:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800234c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002274:	f8d8 0000 	ldr.w	r0, [r8]
 8002278:	b110      	cbz	r0, 8002280 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800227a:	6803      	ldr	r3, [r0, #0]
 800227c:	695b      	ldr	r3, [r3, #20]
 800227e:	4798      	blx	r3
    if (*currentPresenter)
 8002280:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002284:	b110      	cbz	r0, 800228c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002286:	6803      	ldr	r3, [r0, #0]
 8002288:	685b      	ldr	r3, [r3, #4]
 800228a:	4798      	blx	r3
    if (*currentScreen)
 800228c:	f8d8 0000 	ldr.w	r0, [r8]
 8002290:	b110      	cbz	r0, 8002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002292:	6803      	ldr	r3, [r0, #0]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	4798      	blx	r3
    if (*currentPresenter)
 8002298:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800229c:	b110      	cbz	r0, 80022a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800229e:	6803      	ldr	r3, [r0, #0]
 80022a0:	689b      	ldr	r3, [r3, #8]
 80022a2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80022a4:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80022a6:	6803      	ldr	r3, [r0, #0]
 80022a8:	2100      	movs	r1, #0
 80022aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ac:	4798      	blx	r3
        : screenContainer(0), done(false)
 80022ae:	f04f 0b00 	mov.w	fp, #0
 80022b2:	4b24      	ldr	r3, [pc, #144]	; (8002344 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80022b4:	6003      	str	r3, [r0, #0]
 80022b6:	4604      	mov	r4, r0
 80022b8:	f8c0 b004 	str.w	fp, [r0, #4]
 80022bc:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80022c0:	68a8      	ldr	r0, [r5, #8]
 80022c2:	6803      	ldr	r3, [r0, #0]
 80022c4:	4659      	mov	r1, fp
 80022c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022c8:	4798      	blx	r3
 80022ca:	4606      	mov	r6, r0
 80022cc:	f001 f92c 	bl	8003528 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80022d0:	6868      	ldr	r0, [r5, #4]
 80022d2:	6803      	ldr	r3, [r0, #0]
 80022d4:	4659      	mov	r1, fp
 80022d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022d8:	4798      	blx	r3
 80022da:	4631      	mov	r1, r6
 80022dc:	4605      	mov	r5, r0
 80022de:	f001 f909 	bl	80034f4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80022e2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80022e6:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80022ea:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80022ee:	b1e5      	cbz	r5, 800232a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80022f0:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80022f2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80022f6:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80022f8:	f8c5 a008 	str.w	sl, [r5, #8]
 80022fc:	4630      	mov	r0, r6
 80022fe:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002300:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002302:	4798      	blx	r3
    newPresenter->activate();
 8002304:	682b      	ldr	r3, [r5, #0]
 8002306:	4628      	mov	r0, r5
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800230c:	4621      	mov	r1, r4
 800230e:	4630      	mov	r0, r6
 8002310:	f00d fb4d 	bl	800f9ae <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002314:	6823      	ldr	r3, [r4, #0]
 8002316:	4620      	mov	r0, r4
 8002318:	691b      	ldr	r3, [r3, #16]
 800231a:	4798      	blx	r3
    newTransition->invalidate();
 800231c:	6823      	ldr	r3, [r4, #0]
 800231e:	695b      	ldr	r3, [r3, #20]
 8002320:	4620      	mov	r0, r4
}
 8002322:	b001      	add	sp, #4
 8002324:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002328:	4718      	bx	r3
    model->bind(newPresenter);
 800232a:	462b      	mov	r3, r5
 800232c:	e7e1      	b.n	80022f2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 800232e:	bf00      	nop
 8002330:	0801f75c 	.word	0x0801f75c
 8002334:	0801f7ea 	.word	0x0801f7ea
 8002338:	0801f8ee 	.word	0x0801f8ee
 800233c:	0801f935 	.word	0x0801f935
 8002340:	0801f9d8 	.word	0x0801f9d8
 8002344:	0801fbf8 	.word	0x0801fbf8
 8002348:	2000d3b8 	.word	0x2000d3b8
 800234c:	2000d3b4 	.word	0x2000d3b4

08002350 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv>:
{
 8002350:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002354:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002358:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800235a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800235e:	6803      	ldr	r3, [r0, #0]
 8002360:	6a1b      	ldr	r3, [r3, #32]
 8002362:	4798      	blx	r3
 8002364:	f243 039f 	movw	r3, #12447	; 0x309f
 8002368:	4298      	cmp	r0, r3
 800236a:	d805      	bhi.n	8002378 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x28>
 800236c:	4b56      	ldr	r3, [pc, #344]	; (80024c8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 800236e:	4a57      	ldr	r2, [pc, #348]	; (80024cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x17c>)
 8002370:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002372:	4857      	ldr	r0, [pc, #348]	; (80024d0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x180>)
 8002374:	f01b fe38 	bl	801dfe8 <__assert_func>
 8002378:	f8db 0004 	ldr.w	r0, [fp, #4]
 800237c:	6803      	ldr	r3, [r0, #0]
 800237e:	6a1b      	ldr	r3, [r3, #32]
 8002380:	4798      	blx	r3
 8002382:	280f      	cmp	r0, #15
 8002384:	d803      	bhi.n	800238e <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x3e>
 8002386:	4b53      	ldr	r3, [pc, #332]	; (80024d4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x184>)
 8002388:	4a50      	ldr	r2, [pc, #320]	; (80024cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x17c>)
 800238a:	21a8      	movs	r1, #168	; 0xa8
 800238c:	e7f1      	b.n	8002372 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800238e:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002392:	6803      	ldr	r3, [r0, #0]
 8002394:	6a1b      	ldr	r3, [r3, #32]
 8002396:	4798      	blx	r3
 8002398:	2837      	cmp	r0, #55	; 0x37
 800239a:	d803      	bhi.n	80023a4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x54>
 800239c:	4b4e      	ldr	r3, [pc, #312]	; (80024d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x188>)
 800239e:	4a4b      	ldr	r2, [pc, #300]	; (80024cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x17c>)
 80023a0:	21a9      	movs	r1, #169	; 0xa9
 80023a2:	e7e6      	b.n	8002372 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x22>
    if (*currentTrans)
 80023a4:	f8df 9144 	ldr.w	r9, [pc, #324]	; 80024ec <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 80023a8:	f00b fdf0 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 80023ac:	f00b fe3c 	bl	800e028 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80023b0:	f8d9 0000 	ldr.w	r0, [r9]
 80023b4:	b110      	cbz	r0, 80023bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x6c>
        (*currentTrans)->tearDown();
 80023b6:	6803      	ldr	r3, [r0, #0]
 80023b8:	68db      	ldr	r3, [r3, #12]
 80023ba:	4798      	blx	r3
    if (*currentTrans)
 80023bc:	f8d9 0000 	ldr.w	r0, [r9]
 80023c0:	b110      	cbz	r0, 80023c8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x78>
        (*currentTrans)->~Transition();
 80023c2:	6803      	ldr	r3, [r0, #0]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	4798      	blx	r3
    if (*currentScreen)
 80023c8:	f8df 8124 	ldr.w	r8, [pc, #292]	; 80024f0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x1a0>
 80023cc:	f8d8 0000 	ldr.w	r0, [r8]
 80023d0:	b110      	cbz	r0, 80023d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80023d2:	6803      	ldr	r3, [r0, #0]
 80023d4:	695b      	ldr	r3, [r3, #20]
 80023d6:	4798      	blx	r3
    if (*currentPresenter)
 80023d8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80023dc:	b110      	cbz	r0, 80023e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x94>
        (*currentPresenter)->deactivate();
 80023de:	6803      	ldr	r3, [r0, #0]
 80023e0:	685b      	ldr	r3, [r3, #4]
 80023e2:	4798      	blx	r3
    if (*currentScreen)
 80023e4:	f8d8 0000 	ldr.w	r0, [r8]
 80023e8:	b110      	cbz	r0, 80023f0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0xa0>
        (*currentScreen)->~Screen();
 80023ea:	6803      	ldr	r3, [r0, #0]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	4798      	blx	r3
    if (*currentPresenter)
 80023f0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80023f4:	b110      	cbz	r0, 80023fc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80023f6:	6803      	ldr	r3, [r0, #0]
 80023f8:	689b      	ldr	r3, [r3, #8]
 80023fa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80023fc:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002400:	6803      	ldr	r3, [r0, #0]
 8002402:	2100      	movs	r1, #0
 8002404:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002406:	4798      	blx	r3
          solid()
 8002408:	4b34      	ldr	r3, [pc, #208]	; (80024dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x18c>)
 800240a:	6003      	str	r3, [r0, #0]
 800240c:	4604      	mov	r4, r0
 800240e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002412:	8103      	strh	r3, [r0, #8]
 8002414:	2500      	movs	r5, #0
 8002416:	f44f 7380 	mov.w	r3, #256	; 0x100
 800241a:	6045      	str	r5, [r0, #4]
 800241c:	7285      	strb	r5, [r0, #10]
 800241e:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002420:	4b2f      	ldr	r3, [pc, #188]	; (80024e0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x190>)
 8002422:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_HEIGHT;
 8002424:	4b2f      	ldr	r3, [pc, #188]	; (80024e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x194>)
          solid()
 8002426:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_HEIGHT;
 8002428:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800242c:	4b2e      	ldr	r3, [pc, #184]	; (80024e8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x198>)
 800242e:	81a6      	strh	r6, [r4, #12]
 8002430:	f9b3 1000 	ldrsh.w	r1, [r3]
          solid()
 8002434:	3010      	adds	r0, #16
 8002436:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800243a:	e9c4 5507 	strd	r5, r5, [r4, #28]
 800243e:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002442:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
 8002446:	9001      	str	r0, [sp, #4]
 8002448:	f7ff fe33 	bl	80020b2 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800244c:	6923      	ldr	r3, [r4, #16]
 800244e:	9801      	ldr	r0, [sp, #4]
 8002450:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002452:	4631      	mov	r1, r6
 8002454:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002456:	f8db 0008 	ldr.w	r0, [fp, #8]
 800245a:	6803      	ldr	r3, [r0, #0]
 800245c:	4629      	mov	r1, r5
 800245e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002460:	4798      	blx	r3
 8002462:	4606      	mov	r6, r0
 8002464:	f001 f892 	bl	800358c <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002468:	f8db 0004 	ldr.w	r0, [fp, #4]
 800246c:	6803      	ldr	r3, [r0, #0]
 800246e:	4629      	mov	r1, r5
 8002470:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002472:	4798      	blx	r3
 8002474:	4631      	mov	r1, r6
 8002476:	4605      	mov	r5, r0
 8002478:	f001 f86e 	bl	8003558 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 800247c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002480:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002484:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002488:	b1e5      	cbz	r5, 80024c4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x174>
 800248a:	1d2b      	adds	r3, r5, #4
 800248c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002490:	6833      	ldr	r3, [r6, #0]
 8002492:	f8c5 a008 	str.w	sl, [r5, #8]
 8002496:	4630      	mov	r0, r6
 8002498:	68db      	ldr	r3, [r3, #12]
 800249a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800249c:	4798      	blx	r3
    newPresenter->activate();
 800249e:	682b      	ldr	r3, [r5, #0]
 80024a0:	4628      	mov	r0, r5
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024a6:	4621      	mov	r1, r4
 80024a8:	4630      	mov	r0, r6
 80024aa:	f00d fa80 	bl	800f9ae <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024ae:	6823      	ldr	r3, [r4, #0]
 80024b0:	4620      	mov	r0, r4
 80024b2:	691b      	ldr	r3, [r3, #16]
 80024b4:	4798      	blx	r3
    newTransition->invalidate();
 80024b6:	6823      	ldr	r3, [r4, #0]
 80024b8:	695b      	ldr	r3, [r3, #20]
 80024ba:	4620      	mov	r0, r4
}
 80024bc:	b003      	add	sp, #12
 80024be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024c2:	4718      	bx	r3
    model->bind(newPresenter);
 80024c4:	462b      	mov	r3, r5
 80024c6:	e7e1      	b.n	800248c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x13c>
 80024c8:	0801f75c 	.word	0x0801f75c
 80024cc:	0801fa7b 	.word	0x0801fa7b
 80024d0:	0801f8ee 	.word	0x0801f8ee
 80024d4:	0801f935 	.word	0x0801f935
 80024d8:	0801f9d8 	.word	0x0801f9d8
 80024dc:	0801fc80 	.word	0x0801fc80
 80024e0:	0801fc1c 	.word	0x0801fc1c
 80024e4:	2000d34e 	.word	0x2000d34e
 80024e8:	2000d34c 	.word	0x2000d34c
 80024ec:	2000d3b8 	.word	0x2000d3b8
 80024f0:	2000d3b4 	.word	0x2000d3b4

080024f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80024f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024f6:	4604      	mov	r4, r0
        animationCounter++;
 80024f8:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80024fa:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80024fc:	3001      	adds	r0, #1
 80024fe:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002500:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002502:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002504:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002506:	d851      	bhi.n	80025ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xb8>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002508:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800250c:	2100      	movs	r1, #0
 800250e:	f00d fa54 	bl	800f9ba <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002512:	f010 0201 	ands.w	r2, r0, #1
 8002516:	b283      	uxth	r3, r0
 8002518:	d04e      	beq.n	80025b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc4>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800251a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800251e:	2800      	cmp	r0, #0
 8002520:	bfd8      	it	le
 8002522:	460a      	movle	r2, r1
 8002524:	4413      	add	r3, r2
 8002526:	81e3      	strh	r3, [r4, #14]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002528:	4e24      	ldr	r6, [pc, #144]	; (80025bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc8>)
        return rect.y;
 800252a:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 800252e:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8002532:	89e3      	ldrh	r3, [r4, #14]
 8002534:	8832      	ldrh	r2, [r6, #0]
        rect.y = y;
 8002536:	82e0      	strh	r0, [r4, #22]
                screenContainer->invalidateRect(r);
 8002538:	6860      	ldr	r0, [r4, #4]
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 800253a:	4f21      	ldr	r7, [pc, #132]	; (80025c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xcc>)
        this->y = y;
 800253c:	f8ad 101a 	strh.w	r1, [sp, #26]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 8002540:	1ad2      	subs	r2, r2, r3
                const uint16_t delta = calculatedValue - prevSolidPos;
 8002542:	1a5b      	subs	r3, r3, r1
        this->height = height;
 8002544:	f8ad 301e 	strh.w	r3, [sp, #30]
                screenContainer->invalidateRect(r);
 8002548:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800254a:	8362      	strh	r2, [r4, #26]
        this->x = x;
 800254c:	2500      	movs	r5, #0
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 800254e:	f9b7 2000 	ldrsh.w	r2, [r7]
                screenContainer->invalidateRect(r);
 8002552:	691b      	ldr	r3, [r3, #16]
 8002554:	f8ad 5018 	strh.w	r5, [sp, #24]
        this->width = width;
 8002558:	f8ad 201c 	strh.w	r2, [sp, #28]
 800255c:	a906      	add	r1, sp, #24
 800255e:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8002560:	7aa3      	ldrb	r3, [r4, #10]
 8002562:	2b01      	cmp	r3, #1
 8002564:	d126      	bne.n	80025b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
 8002566:	4b17      	ldr	r3, [pc, #92]	; (80025c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd0>)
 8002568:	781b      	ldrb	r3, [r3, #0]
 800256a:	b31b      	cbz	r3, 80025b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
            Rect rect = solid.getRect(); //part to copy between buffers
 800256c:	69a1      	ldr	r1, [r4, #24]
 800256e:	6960      	ldr	r0, [r4, #20]
 8002570:	ab04      	add	r3, sp, #16
 8002572:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002574:	4b14      	ldr	r3, [pc, #80]	; (80025c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd4>)
 8002576:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002578:	6803      	ldr	r3, [r0, #0]
 800257a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800257c:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 800257e:	883b      	ldrh	r3, [r7, #0]
 8002580:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002584:	8833      	ldrh	r3, [r6, #0]
 8002586:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 800258a:	9003      	str	r0, [sp, #12]
        x = 0;
 800258c:	f8ad 5018 	strh.w	r5, [sp, #24]
        y = 0;
 8002590:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002594:	f7fe fc2a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8002598:	22ff      	movs	r2, #255	; 0xff
 800259a:	6803      	ldr	r3, [r0, #0]
 800259c:	9200      	str	r2, [sp, #0]
 800259e:	9501      	str	r5, [sp, #4]
 80025a0:	68dc      	ldr	r4, [r3, #12]
 80025a2:	9903      	ldr	r1, [sp, #12]
 80025a4:	ab04      	add	r3, sp, #16
 80025a6:	aa06      	add	r2, sp, #24
 80025a8:	47a0      	blx	r4
 80025aa:	e003      	b.n	80025b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
            done = true;
 80025ac:	2301      	movs	r3, #1
 80025ae:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80025b0:	2300      	movs	r3, #0
 80025b2:	72a3      	strb	r3, [r4, #10]
    }
 80025b4:	b009      	add	sp, #36	; 0x24
 80025b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80025b8:	81e0      	strh	r0, [r4, #14]
 80025ba:	e7b5      	b.n	8002528 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x34>
 80025bc:	2000d34e 	.word	0x2000d34e
 80025c0:	2000d34c 	.word	0x2000d34c
 80025c4:	2000d356 	.word	0x2000d356
 80025c8:	2000d358 	.word	0x2000d358

080025cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80025cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80025ce:	4604      	mov	r4, r0
 80025d0:	4617      	mov	r7, r2
 80025d2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80025d4:	f00b fd42 	bl	800e05c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80025d8:	4b0e      	ldr	r3, [pc, #56]	; (8002614 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80025da:	601c      	str	r4, [r3, #0]
      model(m)
 80025dc:	4b0e      	ldr	r3, [pc, #56]	; (8002618 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80025de:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun_0(0)
 80025e0:	4b0e      	ldr	r3, [pc, #56]	; (800261c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80025e2:	2500      	movs	r5, #0
 80025e4:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80025e8:	4b0d      	ldr	r3, [pc, #52]	; (8002620 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80025ea:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80025ee:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80025f0:	6803      	ldr	r3, [r0, #0]
 80025f2:	4629      	mov	r1, r5
 80025f4:	689b      	ldr	r3, [r3, #8]
 80025f6:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80025fa:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80025fe:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002600:	4628      	mov	r0, r5
 8002602:	f000 fee5 	bl	80033d0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002606:	f7fe fbf1 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800260a:	f012 ff80 	bl	801550e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800260e:	4620      	mov	r0, r4
 8002610:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002612:	bf00      	nop
 8002614:	2000d3c4 	.word	0x2000d3c4
 8002618:	0801fbb4 	.word	0x0801fbb4
 800261c:	0801fb9c 	.word	0x0801fb9c
 8002620:	2000d358 	.word	0x2000d358

08002624 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002624:	4b06      	ldr	r3, [pc, #24]	; (8002640 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv+0x1c>)
 8002626:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800262a:	2300      	movs	r3, #0
 800262c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002630:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002634:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002638:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800263c:	4770      	bx	lr
 800263e:	bf00      	nop
 8002640:	08002351 	.word	0x08002351

08002644 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 8002644:	4b06      	ldr	r3, [pc, #24]	; (8002660 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002646:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800264a:	2300      	movs	r3, #0
 800264c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002650:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002654:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002658:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800265c:	4770      	bx	lr
 800265e:	bf00      	nop
 8002660:	08002201 	.word	0x08002201

08002664 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002664:	6a00      	ldr	r0, [r0, #32]
 8002666:	4770      	bx	lr

08002668 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002668:	4770      	bx	lr

0800266a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800266a:	888b      	ldrh	r3, [r1, #4]
 800266c:	6980      	ldr	r0, [r0, #24]
 800266e:	680a      	ldr	r2, [r1, #0]
 8002670:	0adb      	lsrs	r3, r3, #11
 8002672:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002676:	4410      	add	r0, r2
 8002678:	4770      	bx	lr

0800267a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800267a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800267c:	b1c2      	cbz	r2, 80026b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800267e:	7b13      	ldrb	r3, [r2, #12]
 8002680:	b1b3      	cbz	r3, 80026b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002682:	7b54      	ldrb	r4, [r2, #13]
 8002684:	7ad2      	ldrb	r2, [r2, #11]
 8002686:	0224      	lsls	r4, r4, #8
 8002688:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800268c:	4314      	orrs	r4, r2
 800268e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002690:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002692:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002696:	8813      	ldrh	r3, [r2, #0]
 8002698:	428b      	cmp	r3, r1
 800269a:	d102      	bne.n	80026a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800269c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80026a0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80026a2:	d805      	bhi.n	80026b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80026a4:	3801      	subs	r0, #1
 80026a6:	b280      	uxth	r0, r0
 80026a8:	3204      	adds	r2, #4
 80026aa:	2800      	cmp	r0, #0
 80026ac:	d1f3      	bne.n	8002696 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80026ae:	e7f7      	b.n	80026a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80026b0:	2000      	movs	r0, #0
 80026b2:	e7f5      	b.n	80026a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080026b4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80026b4:	b510      	push	{r4, lr}
 80026b6:	2124      	movs	r1, #36	; 0x24
 80026b8:	4604      	mov	r4, r0
 80026ba:	f01b fc66 	bl	801df8a <_ZdlPvj>
 80026be:	4620      	mov	r0, r4
 80026c0:	bd10      	pop	{r4, pc}
	...

080026c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 80026c4:	b530      	push	{r4, r5, lr}
 80026c6:	b089      	sub	sp, #36	; 0x24
 80026c8:	4604      	mov	r4, r0
    gsubTable(gsubData)
 80026ca:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80026ce:	9506      	str	r5, [sp, #24]
 80026d0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80026d4:	9505      	str	r5, [sp, #20]
 80026d6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80026da:	9504      	str	r5, [sp, #16]
 80026dc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80026e0:	9503      	str	r5, [sp, #12]
 80026e2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80026e6:	9502      	str	r5, [sp, #8]
 80026e8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80026ec:	9501      	str	r5, [sp, #4]
 80026ee:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80026f2:	9500      	str	r5, [sp, #0]
 80026f4:	f00c fcae 	bl	800f054 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80026f8:	4b05      	ldr	r3, [pc, #20]	; (8002710 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 80026fa:	6023      	str	r3, [r4, #0]
 80026fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80026fe:	61a3      	str	r3, [r4, #24]
 8002700:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002702:	61e3      	str	r3, [r4, #28]
 8002704:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002706:	6223      	str	r3, [r4, #32]
}
 8002708:	4620      	mov	r0, r4
 800270a:	b009      	add	sp, #36	; 0x24
 800270c:	bd30      	pop	{r4, r5, pc}
 800270e:	bf00      	nop
 8002710:	0801fca4 	.word	0x0801fca4

08002714 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002714:	4770      	bx	lr

08002716 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002716:	4770      	bx	lr

08002718 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002718:	4770      	bx	lr

0800271a <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800271a:	4770      	bx	lr

0800271c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 800271c:	4770      	bx	lr

0800271e <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 800271e:	4770      	bx	lr

08002720 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002720:	4770      	bx	lr

08002722 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002722:	4770      	bx	lr

08002724 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002724:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002726:	68c2      	ldr	r2, [r0, #12]
 8002728:	6844      	ldr	r4, [r0, #4]
 800272a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800272c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800272e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002732:	07d2      	lsls	r2, r2, #31
 8002734:	bf48      	it	mi
 8002736:	5962      	ldrmi	r2, [r4, r5]
 8002738:	689b      	ldr	r3, [r3, #8]
    }
 800273a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800273c:	bf48      	it	mi
 800273e:	58d3      	ldrmi	r3, [r2, r3]
 8002740:	4718      	bx	r3

08002742 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002742:	6843      	ldr	r3, [r0, #4]
 8002744:	b12b      	cbz	r3, 8002752 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002746:	6883      	ldr	r3, [r0, #8]
 8002748:	b92b      	cbnz	r3, 8002756 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800274a:	68c0      	ldr	r0, [r0, #12]
 800274c:	f000 0001 	and.w	r0, r0, #1
 8002750:	4770      	bx	lr
 8002752:	4618      	mov	r0, r3
 8002754:	4770      	bx	lr
 8002756:	2001      	movs	r0, #1
    }
 8002758:	4770      	bx	lr

0800275a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800275a:	b510      	push	{r4, lr}
 800275c:	2110      	movs	r1, #16
 800275e:	4604      	mov	r4, r0
 8002760:	f01b fc13 	bl	801df8a <_ZdlPvj>
 8002764:	4620      	mov	r0, r4
 8002766:	bd10      	pop	{r4, pc}

08002768 <_ZN15Screen1ViewBaseD0Ev>:
 8002768:	b510      	push	{r4, lr}
 800276a:	f44f 71ba 	mov.w	r1, #372	; 0x174
 800276e:	4604      	mov	r4, r0
 8002770:	f01b fc0b 	bl	801df8a <_ZdlPvj>
 8002774:	4620      	mov	r0, r4
 8002776:	bd10      	pop	{r4, pc}

08002778 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_nowa_gra)
 8002778:	30e0      	adds	r0, #224	; 0xe0
 800277a:	4288      	cmp	r0, r1
{
 800277c:	b508      	push	{r3, lr}
    if (&src == &button_nowa_gra)
 800277e:	d105      	bne.n	800278c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002780:	f00b fc04 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button_nowa_gra clicked change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenWipeTransitionNorth();
    }
}
 8002784:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenWipeTransitionNorth();
 8002788:	f7ff bf4c 	b.w	8002624 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv>
}
 800278c:	bd08      	pop	{r3, pc}

0800278e <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800278e:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002790:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002792:	4604      	mov	r4, r0
        setX(x);
 8002794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002796:	4615      	mov	r5, r2
        setX(x);
 8002798:	4798      	blx	r3
        setY(y);
 800279a:	6823      	ldr	r3, [r4, #0]
 800279c:	4629      	mov	r1, r5
 800279e:	4620      	mov	r0, r4
 80027a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80027a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80027a6:	4718      	bx	r3

080027a8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80027a8:	b570      	push	{r4, r5, r6, lr}
 80027aa:	4604      	mov	r4, r0
 80027ac:	461d      	mov	r5, r3
 80027ae:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80027b2:	f7ff ffec 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80027b6:	6823      	ldr	r3, [r4, #0]
 80027b8:	4629      	mov	r1, r5
 80027ba:	4620      	mov	r0, r4
 80027bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80027be:	4798      	blx	r3
        setHeight(height);
 80027c0:	6823      	ldr	r3, [r4, #0]
 80027c2:	4631      	mov	r1, r6
 80027c4:	4620      	mov	r0, r4
 80027c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80027c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80027cc:	4718      	bx	r3
	...

080027d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80027d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 80027d2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
    {
        if (typedText.hasValidId())
 80027d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027d8:	4299      	cmp	r1, r3
    void updateTextPosition()
 80027da:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80027dc:	d033      	beq.n	8002846 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x76>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027de:	4b1c      	ldr	r3, [pc, #112]	; (8002850 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	b92b      	cbnz	r3, 80027f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80027e4:	4b1b      	ldr	r3, [pc, #108]	; (8002854 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80027e6:	4a1c      	ldr	r2, [pc, #112]	; (8002858 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 80027e8:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 80027ea:	481c      	ldr	r0, [pc, #112]	; (800285c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x8c>)
 80027ec:	f01b fbfc 	bl	801dfe8 <__assert_func>
 80027f0:	4a1b      	ldr	r2, [pc, #108]	; (8002860 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x90>)
 80027f2:	8812      	ldrh	r2, [r2, #0]
 80027f4:	428a      	cmp	r2, r1
 80027f6:	d803      	bhi.n	8002800 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x30>
 80027f8:	4b1a      	ldr	r3, [pc, #104]	; (8002864 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x94>)
 80027fa:	4a17      	ldr	r2, [pc, #92]	; (8002858 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 80027fc:	21b2      	movs	r1, #178	; 0xb2
 80027fe:	e7f4      	b.n	80027ea <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002800:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002804:	4b18      	ldr	r3, [pc, #96]	; (8002868 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>)
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800280c:	4b17      	ldr	r3, [pc, #92]	; (800286c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x9c>)
 800280e:	6818      	ldr	r0, [r3, #0]
 8002810:	f000 fe1a 	bl	8003448 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002814:	682b      	ldr	r3, [r5, #0]
 8002816:	9001      	str	r0, [sp, #4]
 8002818:	4601      	mov	r1, r0
 800281a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800281c:	4628      	mov	r0, r5
 800281e:	4798      	blx	r3
 8002820:	682b      	ldr	r3, [r5, #0]
 8002822:	9901      	ldr	r1, [sp, #4]
 8002824:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002826:	4604      	mov	r4, r0
 8002828:	4628      	mov	r0, r5
 800282a:	4798      	blx	r3
 800282c:	682b      	ldr	r3, [r5, #0]
 800282e:	9901      	ldr	r1, [sp, #4]
 8002830:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002832:	fb14 f400 	smulbb	r4, r4, r0
 8002836:	4628      	mov	r0, r5
 8002838:	4798      	blx	r3
 800283a:	b2e4      	uxtb	r4, r4
 800283c:	4404      	add	r4, r0
 800283e:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002842:	b002      	add	sp, #8
 8002844:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002846:	2300      	movs	r3, #0
 8002848:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 800284c:	e7f9      	b.n	8002842 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x72>
 800284e:	bf00      	nop
 8002850:	2000d3c8 	.word	0x2000d3c8
 8002854:	0801fcf0 	.word	0x0801fcf0
 8002858:	0801fd32 	.word	0x0801fd32
 800285c:	0801fd60 	.word	0x0801fd60
 8002860:	2000d3cc 	.word	0x2000d3cc
 8002864:	0801fda7 	.word	0x0801fda7
 8002868:	2000d3d0 	.word	0x2000d3d0
 800286c:	2000d3d4 	.word	0x2000d3d4

08002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002870:	4613      	mov	r3, r2
 8002872:	4a0c      	ldr	r2, [pc, #48]	; (80028a4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8002874:	b570      	push	{r4, r5, r6, lr}
 8002876:	6814      	ldr	r4, [r2, #0]
 8002878:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800287a:	b92c      	cbnz	r4, 8002888 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 800287c:	4b0a      	ldr	r3, [pc, #40]	; (80028a8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 800287e:	4a0b      	ldr	r2, [pc, #44]	; (80028ac <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002880:	480b      	ldr	r0, [pc, #44]	; (80028b0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8002882:	2135      	movs	r1, #53	; 0x35
 8002884:	f01b fbb0 	bl	801dfe8 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002888:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 800288c:	b10a      	cbz	r2, 8002892 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 800288e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002890:	b900      	cbnz	r0, 8002894 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8002892:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002894:	6802      	ldr	r2, [r0, #0]
 8002896:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8002898:	460a      	mov	r2, r1
 800289a:	46a4      	mov	ip, r4
 800289c:	4629      	mov	r1, r5
    }
 800289e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80028a2:	4760      	bx	ip
 80028a4:	2000d358 	.word	0x2000d358
 80028a8:	0801fdf9 	.word	0x0801fdf9
 80028ac:	0801fe3c 	.word	0x0801fe3c
 80028b0:	0801fe98 	.word	0x0801fe98

080028b4 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 80028b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028b8:	4604      	mov	r4, r0
 80028ba:	b089      	sub	sp, #36	; 0x24
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 80028bc:	46a2      	mov	sl, r4
        : presenter(0)
 80028be:	2500      	movs	r5, #0
 80028c0:	f00c fefa 	bl	800f6b8 <_ZN8touchgfx6ScreenC1Ev>
 80028c4:	4b77      	ldr	r3, [pc, #476]	; (8002aa4 <_ZN15Screen1ViewBaseC1Ev+0x1f0>)
 80028c6:	63e5      	str	r5, [r4, #60]	; 0x3c
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80028c8:	26ff      	movs	r6, #255	; 0xff
 80028ca:	f84a 3b40 	str.w	r3, [sl], #64
 80028ce:	f104 096c 	add.w	r9, r4, #108	; 0x6c
          visible(true)
 80028d2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80028d6:	4b74      	ldr	r3, [pc, #464]	; (8002aa8 <_ZN15Screen1ViewBaseC1Ev+0x1f4>)
 80028d8:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80028dc:	f104 0898 	add.w	r8, r4, #152	; 0x98
 80028e0:	a906      	add	r1, sp, #24
 80028e2:	6423      	str	r3, [r4, #64]	; 0x40
        this->width = width;
 80028e4:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80028e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
        width = 0;
 80028ec:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 80028f0:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 80028f4:	65e5      	str	r5, [r4, #92]	; 0x5c
 80028f6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        color = col;
 80028fa:	66a5      	str	r5, [r4, #104]	; 0x68
 80028fc:	4648      	mov	r0, r9
 80028fe:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002902:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002906:	f008 ff7d 	bl	800b804 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800290a:	4640      	mov	r0, r8
 800290c:	f009 fe3a 	bl	800c584 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002910:	4638      	mov	r0, r7
 8002912:	f009 fe37 	bl	800c584 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
 8002916:	4b65      	ldr	r3, [pc, #404]	; (8002aac <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
 8002918:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 800291c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002920:	f8a4 3154 	strh.w	r3, [r4, #340]	; 0x154
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002924:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002928:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
    {
 800292c:	4b60      	ldr	r3, [pc, #384]	; (8002ab0 <_ZN15Screen1ViewBaseC1Ev+0x1fc>)
 800292e:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
        this->pobject = pobject;
 8002932:	e9c4 3459 	strd	r3, r4, [r4, #356]	; 0x164
        this->pmemfun_1 = pmemfun_1;
 8002936:	4b5f      	ldr	r3, [pc, #380]	; (8002ab4 <_ZN15Screen1ViewBaseC1Ev+0x200>)
 8002938:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 800293c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002940:	e9c4 355b 	strd	r3, r5, [r4, #364]	; 0x16c
 8002944:	f8a4 214c 	strh.w	r2, [r4, #332]	; 0x14c
    __background.setPosition(0, 0, 800, 480);
 8002948:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800294c:	4a5a      	ldr	r2, [pc, #360]	; (8002ab8 <_ZN15Screen1ViewBaseC1Ev+0x204>)
 800294e:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 8002952:	9300      	str	r3, [sp, #0]
 8002954:	462a      	mov	r2, r5
 8002956:	f44f 7348 	mov.w	r3, #800	; 0x320
 800295a:	4629      	mov	r1, r5
 800295c:	4650      	mov	r0, sl
        this->width = width;
 800295e:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
        width = 0;
 8002962:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
 8002966:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 800296a:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
 800296e:	f7ff ff1b 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002972:	462a      	mov	r2, r5
 8002974:	4629      	mov	r1, r5
 8002976:	4628      	mov	r0, r5
 8002978:	f7ff ff7a 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800297c:	2303      	movs	r3, #3
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800297e:	66a0      	str	r0, [r4, #104]	; 0x68
    tlo_menu.setBitmap(touchgfx::Bitmap(BITMAP_TLO_2_ID));
 8002980:	a906      	add	r1, sp, #24
 8002982:	4648      	mov	r0, r9
 8002984:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002988:	f009 fcb8 	bl	800c2fc <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tlo_menu.setPosition(0, 0, 809, 490);
 800298c:	f44f 73f5 	mov.w	r3, #490	; 0x1ea
 8002990:	462a      	mov	r2, r5
 8002992:	9300      	str	r3, [sp, #0]
 8002994:	4629      	mov	r1, r5
 8002996:	f240 3329 	movw	r3, #809	; 0x329
 800299a:	4648      	mov	r0, r9
 800299c:	f7ff ff04 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    tlo_menu.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80029a0:	4629      	mov	r1, r5
 80029a2:	4648      	mov	r0, r9
 80029a4:	f008 fef4 	bl	800b790 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    button_wyjdz.setXY(315, 245);
 80029a8:	4640      	mov	r0, r8
 80029aa:	22f5      	movs	r2, #245	; 0xf5
 80029ac:	f240 113b 	movw	r1, #315	; 0x13b
 80029b0:	f7ff feed 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
 80029b4:	2301      	movs	r3, #1
    button_wyjdz.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 80029b6:	aa06      	add	r2, sp, #24
 80029b8:	a905      	add	r1, sp, #20
 80029ba:	4640      	mov	r0, r8
 80029bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80029c0:	f8ad 5014 	strh.w	r5, [sp, #20]
 80029c4:	f009 fb33 	bl	800c02e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80029c8:	4640      	mov	r0, r8
class TypedText
 80029ca:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 80029ce:	f7ff feff 	bl	80027d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_wyjdz.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80029d2:	4632      	mov	r2, r6
 80029d4:	4631      	mov	r1, r6
 80029d6:	4630      	mov	r0, r6
 80029d8:	f7ff ff4a 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_wyjdz.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80029dc:	4632      	mov	r2, r6
        color = col;
 80029de:	f8c4 00d4 	str.w	r0, [r4, #212]	; 0xd4
 80029e2:	4631      	mov	r1, r6
 80029e4:	4630      	mov	r0, r6
 80029e6:	f7ff ff43 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_nowa_gra.setXY(315, 180);
 80029ea:	22b4      	movs	r2, #180	; 0xb4
        colorPressed = col;
 80029ec:	f8c4 00d8 	str.w	r0, [r4, #216]	; 0xd8
 80029f0:	f240 113b 	movw	r1, #315	; 0x13b
 80029f4:	4638      	mov	r0, r7
 80029f6:	f7ff feca 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
    button_nowa_gra.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 80029fa:	aa06      	add	r2, sp, #24
 80029fc:	a905      	add	r1, sp, #20
 80029fe:	2301      	movs	r3, #1
 8002a00:	4638      	mov	r0, r7
 8002a02:	f8ad 3018 	strh.w	r3, [sp, #24]
 8002a06:	f8ad 5014 	strh.w	r5, [sp, #20]
 8002a0a:	f009 fb10 	bl	800c02e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002a0e:	2301      	movs	r3, #1
 8002a10:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
        updateTextPosition();
 8002a14:	4638      	mov	r0, r7
 8002a16:	f7ff fedb 	bl	80027d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_nowa_gra.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a1a:	4632      	mov	r2, r6
 8002a1c:	4631      	mov	r1, r6
 8002a1e:	4630      	mov	r0, r6
 8002a20:	f7ff ff26 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_nowa_gra.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002a24:	4632      	mov	r2, r6
        color = col;
 8002a26:	f8c4 011c 	str.w	r0, [r4, #284]	; 0x11c
 8002a2a:	4631      	mov	r1, r6
 8002a2c:	4630      	mov	r0, r6
 8002a2e:	f7ff ff1f 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002a32:	f504 7b94 	add.w	fp, r4, #296	; 0x128
    button_nowa_gra.setAction(buttonCallback);
 8002a36:	f504 73b2 	add.w	r3, r4, #356	; 0x164
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002a3a:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        colorPressed = col;
 8002a3e:	f8c4 0120 	str.w	r0, [r4, #288]	; 0x120
    nazwa_gry.setXY(307, 38);
 8002a42:	2226      	movs	r2, #38	; 0x26
 8002a44:	4658      	mov	r0, fp
 8002a46:	f240 1133 	movw	r1, #307	; 0x133
 8002a4a:	f7ff fea0 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
    nazwa_gry.setColor(touchgfx::Color::getColorFrom24BitRGB(166, 47, 168));
 8002a4e:	22a8      	movs	r2, #168	; 0xa8
 8002a50:	212f      	movs	r1, #47	; 0x2f
 8002a52:	20a6      	movs	r0, #166	; 0xa6
 8002a54:	f7ff ff0c 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        : typedTextId(id)
 8002a58:	4b14      	ldr	r3, [pc, #80]	; (8002aac <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002a5a:	f8c4 0158 	str.w	r0, [r4, #344]	; 0x158
 8002a5e:	9306      	str	r3, [sp, #24]
    nazwa_gry.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 8002a60:	a906      	add	r1, sp, #24
 8002a62:	2302      	movs	r3, #2
 8002a64:	4658      	mov	r0, fp
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002a66:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
 8002a6a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002a6e:	f009 fa9b 	bl	800bfa8 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002a72:	1d20      	adds	r0, r4, #4
 8002a74:	4651      	mov	r1, sl
 8002a76:	9003      	str	r0, [sp, #12]
 8002a78:	f007 f87e 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a7c:	9803      	ldr	r0, [sp, #12]
 8002a7e:	4649      	mov	r1, r9
 8002a80:	f007 f87a 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a84:	9803      	ldr	r0, [sp, #12]
 8002a86:	4641      	mov	r1, r8
 8002a88:	f007 f876 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a8c:	9803      	ldr	r0, [sp, #12]
 8002a8e:	4639      	mov	r1, r7
 8002a90:	f007 f872 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a94:	9803      	ldr	r0, [sp, #12]
 8002a96:	4659      	mov	r1, fp
 8002a98:	f007 f86e 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a9c:	4620      	mov	r0, r4
 8002a9e:	b009      	add	sp, #36	; 0x24
 8002aa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002aa4:	0801fefc 	.word	0x0801fefc
 8002aa8:	08021444 	.word	0x08021444
 8002aac:	0801f754 	.word	0x0801f754
 8002ab0:	0801fee4 	.word	0x0801fee4
 8002ab4:	08002779 	.word	0x08002779
 8002ab8:	0802139c 	.word	0x0802139c

08002abc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002abc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002abe:	4770      	bx	lr

08002ac0 <_ZN8touchgfx15AbstractPainter8setAlphaEh>:
    virtual void render(uint8_t* ptr, int x, int xAdjust, int y, unsigned count, const uint8_t* covers) = 0;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        painterAlpha = newAlpha;
 8002ac0:	7241      	strb	r1, [r0, #9]
    }
 8002ac2:	4770      	bx	lr

08002ac4 <_ZNK8touchgfx15AbstractPainter8getAlphaEv>:

    /** @copydoc Image::getAlpha */
    virtual uint8_t getAlpha() const
    {
        return painterAlpha;
    }
 8002ac4:	7a40      	ldrb	r0, [r0, #9]
 8002ac6:	4770      	bx	lr

08002ac8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    virtual AbstractPainter& getPainter() const;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002ac8:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
    }
 8002acc:	4770      	bx	lr

08002ace <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002ace:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 8002ad2:	4770      	bx	lr

08002ad4 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8002ad4:	4770      	bx	lr

08002ad6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002ad6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002ada:	b14b      	cbz	r3, 8002af0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002adc:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002ae0:	6812      	ldr	r2, [r2, #0]
 8002ae2:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002ae4:	b13b      	cbz	r3, 8002af6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002ae6:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002aea:	681b      	ldr	r3, [r3, #0]
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 8002aec:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002aee:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002af0:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002af4:	e7f4      	b.n	8002ae0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002af6:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002afa:	e7f6      	b.n	8002aea <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002afc <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002afc:	4770      	bx	lr

08002afe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 8002afe:	4770      	bx	lr

08002b00 <_ZN8touchgfx12MoveAnimatorINS_6CircleEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 8002b00:	4770      	bx	lr

08002b02 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED1Ev>:
 8002b02:	4770      	bx	lr

08002b04 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b04:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002b06:	68c2      	ldr	r2, [r0, #12]
 8002b08:	6844      	ldr	r4, [r0, #4]
 8002b0a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b0c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002b0e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b12:	07d2      	lsls	r2, r2, #31
 8002b14:	bf48      	it	mi
 8002b16:	5962      	ldrmi	r2, [r4, r5]
 8002b18:	689b      	ldr	r3, [r3, #8]
    }
 8002b1a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002b1c:	bf48      	it	mi
 8002b1e:	58d3      	ldrmi	r3, [r2, r3]
 8002b20:	4718      	bx	r3

08002b22 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002b22:	6843      	ldr	r3, [r0, #4]
 8002b24:	b12b      	cbz	r3, 8002b32 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002b26:	6883      	ldr	r3, [r0, #8]
 8002b28:	b92b      	cbnz	r3, 8002b36 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002b2a:	68c0      	ldr	r0, [r0, #12]
 8002b2c:	f000 0001 	and.w	r0, r0, #1
 8002b30:	4770      	bx	lr
 8002b32:	4618      	mov	r0, r3
 8002b34:	4770      	bx	lr
 8002b36:	2001      	movs	r0, #1
    }
 8002b38:	4770      	bx	lr

08002b3a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b3a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002b3e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b42:	4770      	bx	lr

08002b44 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 8002b44:	f8a0 104e 	strh.w	r1, [r0, #78]	; 0x4e
    }
 8002b48:	4770      	bx	lr

08002b4a <_ZNK8touchgfx12MoveAnimatorINS_6CircleEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 8002b4a:	f8b0 004e 	ldrh.w	r0, [r0, #78]	; 0x4e
 8002b4e:	4770      	bx	lr

08002b50 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21setMoveAnimationDelayEt>:
        moveAnimationDelay = delay;
 8002b50:	85c1      	strh	r1, [r0, #46]	; 0x2e
    }
 8002b52:	4770      	bx	lr

08002b54 <_ZNK8touchgfx12MoveAnimatorINS_13ScalableImageEE21getMoveAnimationDelayEv>:
    }
 8002b54:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 8002b56:	4770      	bx	lr

08002b58 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED0Ev>:
class MoveAnimator : public T
 8002b58:	b510      	push	{r4, lr}
 8002b5a:	2148      	movs	r1, #72	; 0x48
 8002b5c:	4604      	mov	r4, r0
 8002b5e:	f01b fa14 	bl	801df8a <_ZdlPvj>
 8002b62:	4620      	mov	r0, r4
 8002b64:	bd10      	pop	{r4, pc}

08002b66 <_ZN8touchgfx12MoveAnimatorINS_6CircleEED0Ev>:
 8002b66:	b510      	push	{r4, lr}
 8002b68:	2168      	movs	r1, #104	; 0x68
 8002b6a:	4604      	mov	r4, r0
 8002b6c:	f01b fa0d 	bl	801df8a <_ZdlPvj>
 8002b70:	4620      	mov	r0, r4
 8002b72:	bd10      	pop	{r4, pc}

08002b74 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002b74:	b510      	push	{r4, lr}
 8002b76:	2178      	movs	r1, #120	; 0x78
 8002b78:	4604      	mov	r4, r0
 8002b7a:	f01b fa06 	bl	801df8a <_ZdlPvj>
 8002b7e:	4620      	mov	r0, r4
 8002b80:	bd10      	pop	{r4, pc}

08002b82 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b82:	b510      	push	{r4, lr}
 8002b84:	2110      	movs	r1, #16
 8002b86:	4604      	mov	r4, r0
 8002b88:	f01b f9ff 	bl	801df8a <_ZdlPvj>
 8002b8c:	4620      	mov	r0, r4
 8002b8e:	bd10      	pop	{r4, pc}

08002b90 <_ZN15Screen2ViewBaseD0Ev>:
 8002b90:	b510      	push	{r4, lr}
 8002b92:	f243 01a0 	movw	r1, #12448	; 0x30a0
 8002b96:	4604      	mov	r4, r0
 8002b98:	f01b f9f7 	bl	801df8a <_ZdlPvj>
 8002b9c:	4620      	mov	r0, r4
 8002b9e:	bd10      	pop	{r4, pc}

08002ba0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002ba0:	b510      	push	{r4, lr}
 8002ba2:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002ba4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002ba6:	b150      	cbz	r0, 8002bbe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002ba8:	6803      	ldr	r3, [r0, #0]
 8002baa:	68db      	ldr	r3, [r3, #12]
 8002bac:	4798      	blx	r3
 8002bae:	b130      	cbz	r0, 8002bbe <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002bb0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002bb2:	6803      	ldr	r3, [r0, #0]
 8002bb4:	4621      	mov	r1, r4
 8002bb6:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002bb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002bbc:	4718      	bx	r3
    }
 8002bbe:	bd10      	pop	{r4, pc}

08002bc0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002bc0:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002bc2:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002bc4:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002bc8:	4604      	mov	r4, r0
 8002bca:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002bcc:	b99b      	cbnz	r3, 8002bf6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002bce:	b98e      	cbnz	r6, 8002bf4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002bd0:	fab3 f383 	clz	r3, r3
 8002bd4:	095b      	lsrs	r3, r3, #5
 8002bd6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002bda:	6823      	ldr	r3, [r4, #0]
 8002bdc:	4620      	mov	r0, r4
 8002bde:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002be2:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002be4:	6823      	ldr	r3, [r4, #0]
 8002be6:	4620      	mov	r0, r4
 8002be8:	695b      	ldr	r3, [r3, #20]
 8002bea:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002bec:	b116      	cbz	r6, 8002bf4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002bee:	792b      	ldrb	r3, [r5, #4]
 8002bf0:	2b01      	cmp	r3, #1
 8002bf2:	d003      	beq.n	8002bfc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002bf4:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002bf6:	2e00      	cmp	r6, #0
 8002bf8:	d0fc      	beq.n	8002bf4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002bfa:	e7e9      	b.n	8002bd0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002bfc:	6823      	ldr	r3, [r4, #0]
 8002bfe:	4620      	mov	r0, r4
 8002c00:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    }
 8002c04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002c08:	4718      	bx	r3
	...

08002c0c <_ZN15Screen2ViewBase11setupScreenEv>:
        moveAnimationEndedCallback = 0;
 8002c0c:	2300      	movs	r3, #0
    add(circle1);
    add(button_skoku);
}

void Screen2ViewBase::setupScreen()
{
 8002c0e:	b510      	push	{r4, lr}
 8002c10:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
     *                              Y position during the animation. Default is
     *                              EasingEquations::linearEaseNone.
     */
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
    {
        if (!moveAnimationRunning)
 8002c14:	f890 3096 	ldrb.w	r3, [r0, #150]	; 0x96
 8002c18:	4604      	mov	r4, r0
 8002c1a:	b92b      	cbnz	r3, 8002c28 <_ZN15Screen2ViewBase11setupScreenEv+0x1c>
        {
            Application::getInstance()->registerTimerWidget(this);
 8002c1c:	f00b f9b6 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 8002c20:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8002c24:	f00b f9b8 	bl	800df98 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        }

        moveAnimationCounter = 0;
 8002c28:	2300      	movs	r3, #0
 8002c2a:	f8a4 3098 	strh.w	r3, [r4, #152]	; 0x98
        moveAnimationStartX = T::getX();
        moveAnimationStartY = T::getY();
        moveAnimationEndX = endX;
        moveAnimationEndY = endY;
 8002c2e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
        moveAnimationDuration = duration;
 8002c32:	f44f 7361 	mov.w	r3, #900	; 0x384
        moveAnimationStartX = T::getX();
 8002c36:	f8b4 2070 	ldrh.w	r2, [r4, #112]	; 0x70
        moveAnimationDuration = duration;
 8002c3a:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
        moveAnimationXEquation = xProgressionEquation;
 8002c3e:	4b08      	ldr	r3, [pc, #32]	; (8002c60 <_ZN15Screen2ViewBase11setupScreenEv+0x54>)
        moveAnimationStartX = T::getX();
 8002c40:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
        moveAnimationStartY = T::getY();
 8002c44:	f8b4 2072 	ldrh.w	r2, [r4, #114]	; 0x72
 8002c48:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
        moveAnimationYEquation = yProgressionEquation;
 8002c4c:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
        moveAnimationEndX = endX;
 8002c50:	f24f 623c 	movw	r2, #63036	; 0xf63c

        moveAnimationRunning = true;
 8002c54:	2301      	movs	r3, #1
        moveAnimationEndX = endX;
 8002c56:	f8a4 20a2 	strh.w	r2, [r4, #162]	; 0xa2
        moveAnimationRunning = true;
 8002c5a:	f884 3096 	strb.w	r3, [r4, #150]	; 0x96
    //When screen transition begins move tlo_animacja
    //Move tlo_animacja to x:-2500, y:0 with LinearIn easing in 15000 ms (900 Ticks)
    tlo_animacja.clearMoveAnimationEndedAction();
    tlo_animacja.startMoveAnimation(-2500, 0, 900, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);

}
 8002c5e:	bd10      	pop	{r4, pc}
 8002c60:	0800fa83 	.word	0x0800fa83

08002c64 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &button_skoku)
 8002c64:	f500 739c 	add.w	r3, r0, #312	; 0x138
 8002c68:	428b      	cmp	r3, r1
{
 8002c6a:	b570      	push	{r4, r5, r6, lr}
 8002c6c:	4604      	mov	r4, r0
    if (&src == &button_skoku)
 8002c6e:	d12f      	bne.n	8002cd0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x6c>
        //interakcja_skok
        //When button_skoku clicked execute C++ code
        //Execute C++ code
        uint16_t currentX = circle1.getX();
        uint16_t currentY = circle1.getY();
        circle1.moveTo(currentX, currentY - 100);
 8002c70:	f8b0 20ba 	ldrh.w	r2, [r0, #186]	; 0xba
 8002c74:	f9b0 10b8 	ldrsh.w	r1, [r0, #184]	; 0xb8
 8002c78:	f100 06b4 	add.w	r6, r0, #180	; 0xb4
 8002c7c:	3a64      	subs	r2, #100	; 0x64
 8002c7e:	b212      	sxth	r2, r2
 8002c80:	4630      	mov	r0, r6
 8002c82:	f7ff fa1f 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        if (!moveAnimationRunning)
 8002c86:	f894 30fe 	ldrb.w	r3, [r4, #254]	; 0xfe
        moveAnimationEndedCallback = 0;
 8002c8a:	2500      	movs	r5, #0
 8002c8c:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
        if (!moveAnimationRunning)
 8002c90:	b923      	cbnz	r3, 8002c9c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
            Application::getInstance()->registerTimerWidget(this);
 8002c92:	f00b f97b 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 8002c96:	4631      	mov	r1, r6
 8002c98:	f00b f97e 	bl	800df98 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationStartX = T::getX();
 8002c9c:	f8b4 30b8 	ldrh.w	r3, [r4, #184]	; 0xb8
 8002ca0:	f8a4 3106 	strh.w	r3, [r4, #262]	; 0x106
        moveAnimationStartY = T::getY();
 8002ca4:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 8002ca8:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
        moveAnimationEndX = endX;
 8002cac:	2364      	movs	r3, #100	; 0x64
 8002cae:	f8a4 310a 	strh.w	r3, [r4, #266]	; 0x10a
        moveAnimationEndY = endY;
 8002cb2:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8002cb6:	f8a4 310c 	strh.w	r3, [r4, #268]	; 0x10c
        moveAnimationDuration = duration;
 8002cba:	233c      	movs	r3, #60	; 0x3c
 8002cbc:	f8a4 3104 	strh.w	r3, [r4, #260]	; 0x104
        moveAnimationXEquation = xProgressionEquation;
 8002cc0:	4b04      	ldr	r3, [pc, #16]	; (8002cd4 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x70>)
        moveAnimationCounter = 0;
 8002cc2:	f8a4 5100 	strh.w	r5, [r4, #256]	; 0x100
        moveAnimationYEquation = yProgressionEquation;
 8002cc6:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
        moveAnimationRunning = true;
 8002cca:	2301      	movs	r3, #1
 8002ccc:	f884 30fe 	strb.w	r3, [r4, #254]	; 0xfe
        //When interakcja_skok completed move circle1
        //Move circle1 to x:100, y:400 with LinearIn easing in 1000 ms (60 Ticks)
        circle1.clearMoveAnimationEndedAction();
        circle1.startMoveAnimation(100, 400, 60, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    }
}
 8002cd0:	bd70      	pop	{r4, r5, r6, pc}
 8002cd2:	bf00      	nop
 8002cd4:	0800fa83 	.word	0x0800fa83

08002cd8 <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 8002cd8:	4908      	ldr	r1, [pc, #32]	; (8002cfc <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002cda:	6001      	str	r1, [r0, #0]
 8002cdc:	f44f 7180 	mov.w	r1, #256	; 0x100
        this->x = x;
 8002ce0:	2200      	movs	r2, #0
 8002ce2:	8481      	strh	r1, [r0, #36]	; 0x24
 8002ce4:	21ff      	movs	r1, #255	; 0xff
        this->width = width;
 8002ce6:	e9c0 2201 	strd	r2, r2, [r0, #4]
        width = 0;
 8002cea:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8002cee:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cf2:	61c2      	str	r2, [r0, #28]
 8002cf4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        color = col;
 8002cf8:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002cfa:	4770      	bx	lr
 8002cfc:	08021444 	.word	0x08021444

08002d00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
          painterAlpha(255)
 8002d00:	f64f 72ff 	movw	r2, #65535	; 0xffff
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002d04:	b538      	push	{r3, r4, r5, lr}
 8002d06:	2300      	movs	r3, #0
 8002d08:	8102      	strh	r2, [r0, #8]
        : AbstractPainter(), currentX(0), currentY(0)
 8002d0a:	4a11      	ldr	r2, [pc, #68]	; (8002d50 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002d0c:	6043      	str	r3, [r0, #4]
 8002d0e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8002d12:	6002      	str	r2, [r0, #0]
    AbstractPainterRGB565()
 8002d14:	4604      	mov	r4, r0
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002d16:	f7fe f869 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8002d1a:	6803      	ldr	r3, [r0, #0]
 8002d1c:	6a1b      	ldr	r3, [r3, #32]
 8002d1e:	4798      	blx	r3
        return auxiliaryLCD;
 8002d20:	4b0c      	ldr	r3, [pc, #48]	; (8002d54 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	fab0 f580 	clz	r5, r0
 8002d28:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002d2a:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002d2c:	b130      	cbz	r0, 8002d3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002d2e:	6803      	ldr	r3, [r0, #0]
 8002d30:	6a1b      	ldr	r3, [r3, #32]
 8002d32:	4798      	blx	r3
 8002d34:	2800      	cmp	r0, #0
 8002d36:	bf08      	it	eq
 8002d38:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002d3c:	b92d      	cbnz	r5, 8002d4a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002d3e:	4b06      	ldr	r3, [pc, #24]	; (8002d58 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002d40:	4a06      	ldr	r2, [pc, #24]	; (8002d5c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002d42:	4807      	ldr	r0, [pc, #28]	; (8002d60 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002d44:	212f      	movs	r1, #47	; 0x2f
 8002d46:	f01b f94f 	bl	801dfe8 <__assert_func>
    }
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	bd38      	pop	{r3, r4, r5, pc}
 8002d4e:	bf00      	nop
 8002d50:	080210a0 	.word	0x080210a0
 8002d54:	2000d358 	.word	0x2000d358
 8002d58:	0801ff28 	.word	0x0801ff28
 8002d5c:	0801ff86 	.word	0x0801ff86
 8002d60:	0801ffbf 	.word	0x0801ffbf

08002d64 <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 8002d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d68:	4604      	mov	r4, r0
 8002d6a:	b087      	sub	sp, #28
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
 8002d6c:	46a0      	mov	r8, r4
 8002d6e:	2500      	movs	r5, #0
 8002d70:	f00c fca2 	bl	800f6b8 <_ZN8touchgfx6ScreenC1Ev>
 8002d74:	4b8d      	ldr	r3, [pc, #564]	; (8002fac <_ZN15Screen2ViewBaseC1Ev+0x248>)
 8002d76:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002d78:	f848 3b40 	str.w	r3, [r8], #64
 8002d7c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8002d80:	4640      	mov	r0, r8
 8002d82:	f7ff ffa9 	bl	8002cd8 <_ZN8touchgfx3BoxC1Ev>
 8002d86:	f64f 76ff 	movw	r6, #65535	; 0xffff
          moveAnimationEndedCallback(0)
 8002d8a:	a905      	add	r1, sp, #20
 8002d8c:	4638      	mov	r0, r7
 8002d8e:	f104 09b4 	add.w	r9, r4, #180	; 0xb4
 8002d92:	f8ad 6014 	strh.w	r6, [sp, #20]
 8002d96:	f008 fd35 	bl	800b804 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8002d9a:	4b85      	ldr	r3, [pc, #532]	; (8002fb0 <_ZN15Screen2ViewBaseC1Ev+0x24c>)
 8002d9c:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002d9e:	f884 5096 	strb.w	r5, [r4, #150]	; 0x96
 8002da2:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 8002da6:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
 8002daa:	4648      	mov	r0, r9
 8002dac:	f008 f890 	bl	800aed0 <_ZN8touchgfx6CircleC1Ev>
 8002db0:	f504 7b8e 	add.w	fp, r4, #284	; 0x11c
 8002db4:	4b7f      	ldr	r3, [pc, #508]	; (8002fb4 <_ZN15Screen2ViewBaseC1Ev+0x250>)
 8002db6:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 8002dba:	f884 50fe 	strb.w	r5, [r4, #254]	; 0xfe
 8002dbe:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8002dc2:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
     *
     * @param  color (Optional) the color, default is black.
     * @param  alpha (Optional) the alpha, default is 255 i.e. solid.
     */
    PainterRGB565(colortype color = 0, uint8_t alpha = 255)
        : AbstractPainterRGB565()
 8002dc6:	4658      	mov	r0, fp
 8002dc8:	f7ff ff9a 	bl	8002d00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002dcc:	4b7a      	ldr	r3, [pc, #488]	; (8002fb8 <_ZN15Screen2ViewBaseC1Ev+0x254>)
 8002dce:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
        : pressed(false), alpha(255), action(0)
 8002dd2:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8002dd6:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
        touchable = touch;
 8002dda:	f240 1301 	movw	r3, #257	; 0x101
        : T(), up(), down()
 8002dde:	f504 7ab6 	add.w	sl, r4, #364	; 0x16c
 8002de2:	f8a4 315c 	strh.w	r3, [r4, #348]	; 0x15c
 8002de6:	4b75      	ldr	r3, [pc, #468]	; (8002fbc <_ZN15Screen2ViewBaseC1Ev+0x258>)
        painterAlpha = newAlpha;
 8002de8:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 8002dec:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
     */
    void setColor(colortype color)
    {
        painterColor = color;
        painterRed = painterColor & RMASK;
        painterGreen = painterColor & GMASK;
 8002df0:	e9c4 554c 	strd	r5, r5, [r4, #304]	; 0x130
        this->width = width;
 8002df4:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
        width = 0;
 8002df8:	e9c4 5551 	strd	r5, r5, [r4, #324]	; 0x144
          visible(true)
 8002dfc:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002e00:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
          firstChild(0)
 8002e04:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002e08:	f8c4 5168 	str.w	r5, [r4, #360]	; 0x168
        : Box(), borderColor(0), borderSize(0)
 8002e0c:	4650      	mov	r0, sl
 8002e0e:	f7ff ff63 	bl	8002cd8 <_ZN8touchgfx3BoxC1Ev>
 8002e12:	4b6b      	ldr	r3, [pc, #428]	; (8002fc0 <_ZN15Screen2ViewBaseC1Ev+0x25c>)
 8002e14:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
 8002e18:	f504 769c 	add.w	r6, r4, #312	; 0x138
        borderBox.setXY(0, 0);
 8002e1c:	462a      	mov	r2, r5
 8002e1e:	4629      	mov	r1, r5
 8002e20:	4650      	mov	r0, sl
        : color(0)
 8002e22:	e9c4 5568 	strd	r5, r5, [r4, #416]	; 0x1a0
 8002e26:	e9c4 556a 	strd	r5, r5, [r4, #424]	; 0x1a8
        color = col;
 8002e2a:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
 8002e2e:	f8a4 519c 	strh.w	r5, [r4, #412]	; 0x19c
 8002e32:	f7ff fcac 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e36:	4651      	mov	r1, sl
 8002e38:	4630      	mov	r0, r6
 8002e3a:	f006 fe9d 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    {
 8002e3e:	4b61      	ldr	r3, [pc, #388]	; (8002fc4 <_ZN15Screen2ViewBaseC1Ev+0x260>)
        this->pobject = pobject;
 8002e40:	e9c4 346c 	strd	r3, r4, [r4, #432]	; 0x1b0
        this->pmemfun_1 = pmemfun_1;
 8002e44:	4b60      	ldr	r3, [pc, #384]	; (8002fc8 <_ZN15Screen2ViewBaseC1Ev+0x264>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002e46:	f504 70e0 	add.w	r0, r4, #448	; 0x1c0
 8002e4a:	e9c4 356e 	strd	r3, r5, [r4, #440]	; 0x1b8
 8002e4e:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8002e52:	f009 fbc3 	bl	800c5dc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8002e56:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002e5a:	9300      	str	r3, [sp, #0]
 8002e5c:	462a      	mov	r2, r5
 8002e5e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002e62:	4629      	mov	r1, r5
 8002e64:	4640      	mov	r0, r8
 8002e66:	f7ff fc9f 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002e6a:	462a      	mov	r2, r5
 8002e6c:	4629      	mov	r1, r5
 8002e6e:	4628      	mov	r0, r5
 8002e70:	f7ff fcfe 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002e74:	2304      	movs	r3, #4
        this->color = color;
 8002e76:	66a0      	str	r0, [r4, #104]	; 0x68
    tlo_animacja.setBitmap(touchgfx::Bitmap(BITMAP_TRASA_ID));
 8002e78:	a905      	add	r1, sp, #20
 8002e7a:	4638      	mov	r0, r7
 8002e7c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002e80:	f009 fa3c 	bl	800c2fc <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tlo_animacja.setPosition(0, 0, 3549, 480);
 8002e84:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002e88:	462a      	mov	r2, r5
 8002e8a:	9300      	str	r3, [sp, #0]
 8002e8c:	4629      	mov	r1, r5
 8002e8e:	f640 53dd 	movw	r3, #3549	; 0xddd
 8002e92:	4638      	mov	r0, r7
 8002e94:	f7ff fc88 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
    tlo_animacja.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8002e98:	4629      	mov	r1, r5
 8002e9a:	4638      	mov	r0, r7
 8002e9c:	f008 fc78 	bl	800b790 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    circle1.setPosition(100, 322, 80, 80);
 8002ea0:	2350      	movs	r3, #80	; 0x50
 8002ea2:	9300      	str	r3, [sp, #0]
 8002ea4:	4648      	mov	r0, r9
 8002ea6:	f44f 72a1 	mov.w	r2, #322	; 0x142
 8002eaa:	2164      	movs	r1, #100	; 0x64
 8002eac:	f7ff fc7c 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
 8002eb0:	f44f 63a0 	mov.w	r3, #1280	; 0x500
    circle1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002eb4:	22ff      	movs	r2, #255	; 0xff
        this->circleCenterY = CWRUtil::toQ5(y);
 8002eb6:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8002eba:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8002ebe:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8002ec2:	4611      	mov	r1, r2
 8002ec4:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 8002ec8:	4610      	mov	r0, r2
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 8002eca:	f8c4 50f8 	str.w	r5, [r4, #248]	; 0xf8
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 8002ece:	f8c4 50f0 	str.w	r5, [r4, #240]	; 0xf0
 8002ed2:	f7ff fccd 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        painterColor = color;
 8002ed6:	b280      	uxth	r0, r0
        painterRed = painterColor & RMASK;
 8002ed8:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
        painterColor = color;
 8002edc:	f8a4 0130 	strh.w	r0, [r4, #304]	; 0x130
        painterRed = painterColor & RMASK;
 8002ee0:	f8a4 3132 	strh.w	r3, [r4, #306]	; 0x132
        painterGreen = painterColor & GMASK;
 8002ee4:	f400 63fc 	and.w	r3, r0, #2016	; 0x7e0
        painterBlue = painterColor & BMASK;
 8002ee8:	f000 001f 	and.w	r0, r0, #31
        painterGreen = painterColor & GMASK;
 8002eec:	f8a4 3134 	strh.w	r3, [r4, #308]	; 0x134
        painterBlue = painterColor & BMASK;
 8002ef0:	f8a4 0136 	strh.w	r0, [r4, #310]	; 0x136
    circle1.setPainter(circle1Painter);
 8002ef4:	4659      	mov	r1, fp
 8002ef6:	4648      	mov	r0, r9
 8002ef8:	f008 fb6c 	bl	800b5d4 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
        borderBox.setPosition(x, y, width, height);
 8002efc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002f00:	9300      	str	r3, [sp, #0]
 8002f02:	462a      	mov	r2, r5
 8002f04:	4629      	mov	r1, r5
 8002f06:	4650      	mov	r0, sl
 8002f08:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002f0c:	f7ff fc4c 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002f10:	2305      	movs	r3, #5
 8002f12:	f8a4 319c 	strh.w	r3, [r4, #412]	; 0x19c
    button_skoku.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
 8002f16:	2299      	movs	r2, #153	; 0x99
 8002f18:	2166      	movs	r1, #102	; 0x66
 8002f1a:	4628      	mov	r0, r5
 8002f1c:	f7ff fca8 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002f20:	22cc      	movs	r2, #204	; 0xcc
 8002f22:	4683      	mov	fp, r0
 8002f24:	2199      	movs	r1, #153	; 0x99
 8002f26:	4628      	mov	r0, r5
 8002f28:	f7ff fca2 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002f2c:	2266      	movs	r2, #102	; 0x66
 8002f2e:	4682      	mov	sl, r0
 8002f30:	2133      	movs	r1, #51	; 0x33
 8002f32:	4628      	mov	r0, r5
 8002f34:	f7ff fc9c 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002f38:	2299      	movs	r2, #153	; 0x99
 8002f3a:	9003      	str	r0, [sp, #12]
 8002f3c:	2166      	movs	r1, #102	; 0x66
 8002f3e:	2033      	movs	r0, #51	; 0x33
 8002f40:	f7ff fc96 	bl	8002870 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        borderUp = borderColorReleased;
 8002f44:	9b03      	ldr	r3, [sp, #12]
        down = colorPressed;
 8002f46:	e9c4 ba68 	strd	fp, sl, [r4, #416]	; 0x1a0
        borderDown = borderColorPressed;
 8002f4a:	e9c4 306a 	strd	r3, r0, [r4, #424]	; 0x1a8
        handlePressedUpdated();
 8002f4e:	4630      	mov	r0, r6
 8002f50:	f7ff fdc1 	bl	8002ad6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    button_skoku.setPosition(0, 0, 800, 480);
 8002f54:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002f58:	462a      	mov	r2, r5
 8002f5a:	4629      	mov	r1, r5
 8002f5c:	9300      	str	r3, [sp, #0]
 8002f5e:	4630      	mov	r0, r6
 8002f60:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002f64:	f7ff fc20 	bl	80027a8 <_ZN8touchgfx8Drawable11setPositionEssss>
        handleAlphaUpdated();
 8002f68:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
        alpha = newAlpha;
 8002f6c:	f884 5165 	strb.w	r5, [r4, #357]	; 0x165
        handleAlphaUpdated();
 8002f70:	4630      	mov	r0, r6
 8002f72:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002f76:	4798      	blx	r3
    button_skoku.setAction(flexButtonCallback);
 8002f78:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
        action = &callback;
 8002f7c:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
 8002f80:	1d20      	adds	r0, r4, #4
 8002f82:	4641      	mov	r1, r8
 8002f84:	9003      	str	r0, [sp, #12]
 8002f86:	f006 fdf7 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f8a:	9803      	ldr	r0, [sp, #12]
 8002f8c:	4639      	mov	r1, r7
 8002f8e:	f006 fdf3 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f92:	9803      	ldr	r0, [sp, #12]
 8002f94:	4649      	mov	r1, r9
 8002f96:	f006 fdef 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002f9a:	9803      	ldr	r0, [sp, #12]
 8002f9c:	4631      	mov	r1, r6
 8002f9e:	f006 fdeb 	bl	8009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002fa2:	4620      	mov	r0, r4
 8002fa4:	b007      	add	sp, #28
 8002fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002faa:	bf00      	nop
 8002fac:	080201d4 	.word	0x080201d4
 8002fb0:	0802002c 	.word	0x0802002c
 8002fb4:	080200a4 	.word	0x080200a4
 8002fb8:	08021078 	.word	0x08021078
 8002fbc:	08020128 	.word	0x08020128
 8002fc0:	08021540 	.word	0x08021540
 8002fc4:	080201bc 	.word	0x080201bc
 8002fc8:	08002c65 	.word	0x08002c65

08002fcc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 8002fcc:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
    void nextMoveAnimationStep()
 8002fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002fd4:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8002fd6:	2b00      	cmp	r3, #0
 8002fd8:	d040      	beq.n	800305c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 8002fda:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 8002fdc:	8dc5      	ldrh	r5, [r0, #46]	; 0x2e
            moveAnimationCounter++;
 8002fde:	3301      	adds	r3, #1
 8002fe0:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8002fe2:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8002fe4:	8583      	strh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 8002fe6:	d339      	bcc.n	800305c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8002fe8:	1b5b      	subs	r3, r3, r5
 8002fea:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8002fec:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8002fee:	b29d      	uxth	r5, r3
 8002ff0:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8002ff2:	1ad2      	subs	r2, r2, r3
 8002ff4:	b212      	sxth	r2, r2
 8002ff6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002ff8:	2100      	movs	r1, #0
 8002ffa:	4628      	mov	r0, r5
 8002ffc:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8002ffe:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8003000:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8003002:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8003004:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8003006:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8003008:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800300a:	b212      	sxth	r2, r2
 800300c:	2100      	movs	r1, #0
 800300e:	4628      	mov	r0, r5
 8003010:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8003012:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8003014:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 8003016:	4402      	add	r2, r0
 8003018:	4431      	add	r1, r6
 800301a:	b212      	sxth	r2, r2
 800301c:	b209      	sxth	r1, r1
 800301e:	4620      	mov	r0, r4
 8003020:	f7ff f850 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8003024:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8003026:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 8003028:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800302a:	440b      	add	r3, r1
 800302c:	429a      	cmp	r2, r3
 800302e:	d315      	bcc.n	800305c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8003030:	2300      	movs	r3, #0
 8003032:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
                    moveAnimationCounter = 0;
 8003036:	85a3      	strh	r3, [r4, #44]	; 0x2c
                    Application::getInstance()->unregisterTimerWidget(this);
 8003038:	f00a ffa8 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 800303c:	4621      	mov	r1, r4
 800303e:	f00a ffdd 	bl	800dffc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8003042:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8003044:	b150      	cbz	r0, 800305c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
 8003046:	6803      	ldr	r3, [r0, #0]
 8003048:	68db      	ldr	r3, [r3, #12]
 800304a:	4798      	blx	r3
 800304c:	b130      	cbz	r0, 800305c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 800304e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8003050:	6803      	ldr	r3, [r0, #0]
 8003052:	4621      	mov	r1, r4
 8003054:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8003056:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 800305a:	4718      	bx	r3
    }
 800305c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003060 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003060:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8003062:	f7ff ffb3 	bl	8002fcc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>
    }
 8003066:	bd08      	pop	{r3, pc}

08003068 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv>:
        if (moveAnimationRunning)
 8003068:	f890 304a 	ldrb.w	r3, [r0, #74]	; 0x4a
    void nextMoveAnimationStep()
 800306c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003070:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8003072:	2b00      	cmp	r3, #0
 8003074:	d04f      	beq.n	8003116 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
            moveAnimationCounter++;
 8003076:	f8b0 304c 	ldrh.w	r3, [r0, #76]	; 0x4c
            if (moveAnimationCounter >= moveAnimationDelay)
 800307a:	f8b0 504e 	ldrh.w	r5, [r0, #78]	; 0x4e
            moveAnimationCounter++;
 800307e:	3301      	adds	r3, #1
 8003080:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8003082:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8003084:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
            if (moveAnimationCounter >= moveAnimationDelay)
 8003088:	d345      	bcc.n	8003116 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 800308a:	1b5b      	subs	r3, r3, r5
 800308c:	f8b0 2056 	ldrh.w	r2, [r0, #86]	; 0x56
 8003090:	6dc6      	ldr	r6, [r0, #92]	; 0x5c
 8003092:	b29d      	uxth	r5, r3
 8003094:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8003098:	1ad2      	subs	r2, r2, r3
 800309a:	b212      	sxth	r2, r2
 800309c:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 80030a0:	2100      	movs	r1, #0
 80030a2:	4628      	mov	r0, r5
 80030a4:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80030a6:	f8b4 3054 	ldrh.w	r3, [r4, #84]	; 0x54
 80030aa:	f8b4 2058 	ldrh.w	r2, [r4, #88]	; 0x58
 80030ae:	6e27      	ldr	r7, [r4, #96]	; 0x60
 80030b0:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80030b2:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 80030b4:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 80030b8:	b212      	sxth	r2, r2
 80030ba:	2100      	movs	r1, #0
 80030bc:	4628      	mov	r0, r5
 80030be:	47b8      	blx	r7
                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 80030c0:	f8b4 2054 	ldrh.w	r2, [r4, #84]	; 0x54
 80030c4:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 80030c8:	4402      	add	r2, r0
 80030ca:	4431      	add	r1, r6
 80030cc:	b212      	sxth	r2, r2
 80030ce:	b209      	sxth	r1, r1
 80030d0:	4620      	mov	r0, r4
 80030d2:	f7fe fff7 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 80030d6:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 80030da:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 80030de:	f8b4 204c 	ldrh.w	r2, [r4, #76]	; 0x4c
 80030e2:	440b      	add	r3, r1
 80030e4:	429a      	cmp	r2, r3
 80030e6:	d316      	bcc.n	8003116 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
                    moveAnimationRunning = false;
 80030e8:	2300      	movs	r3, #0
 80030ea:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
                    moveAnimationCounter = 0;
 80030ee:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
                    Application::getInstance()->unregisterTimerWidget(this);
 80030f2:	f00a ff4b 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 80030f6:	4621      	mov	r1, r4
 80030f8:	f00a ff80 	bl	800dffc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 80030fc:	6e60      	ldr	r0, [r4, #100]	; 0x64
 80030fe:	b150      	cbz	r0, 8003116 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
 8003100:	6803      	ldr	r3, [r0, #0]
 8003102:	68db      	ldr	r3, [r3, #12]
 8003104:	4798      	blx	r3
 8003106:	b130      	cbz	r0, 8003116 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
                        moveAnimationEndedCallback->execute(*this);
 8003108:	6e60      	ldr	r0, [r4, #100]	; 0x64
 800310a:	6803      	ldr	r3, [r0, #0]
 800310c:	4621      	mov	r1, r4
 800310e:	689b      	ldr	r3, [r3, #8]
    }
 8003110:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 8003114:	4718      	bx	r3
    }
 8003116:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800311a <_ZN8touchgfx12MoveAnimatorINS_6CircleEE15handleTickEventEv>:
    virtual void handleTickEvent()
 800311a:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 800311c:	f7ff ffa4 	bl	8003068 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv>
    }
 8003120:	bd08      	pop	{r3, pc}

08003122 <__tcf_0>:

touchgfx::GeneratedFont& getFont_comicbd_83_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_83_4bpp()
{
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8003122:	4770      	bx	lr

08003124 <_Z23getFont_comicbd_83_4bppv>:
{
 8003124:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8003126:	4d15      	ldr	r5, [pc, #84]	; (800317c <_Z23getFont_comicbd_83_4bppv+0x58>)
 8003128:	782c      	ldrb	r4, [r5, #0]
 800312a:	f3bf 8f5b 	dmb	ish
 800312e:	f014 0401 	ands.w	r4, r4, #1
{
 8003132:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8003134:	d11e      	bne.n	8003174 <_Z23getFont_comicbd_83_4bppv+0x50>
 8003136:	4628      	mov	r0, r5
 8003138:	f01a ff29 	bl	801df8e <__cxa_guard_acquire>
 800313c:	b1d0      	cbz	r0, 8003174 <_Z23getFont_comicbd_83_4bppv+0x50>
 800313e:	233f      	movs	r3, #63	; 0x3f
 8003140:	9307      	str	r3, [sp, #28]
 8003142:	4b0f      	ldr	r3, [pc, #60]	; (8003180 <_Z23getFont_comicbd_83_4bppv+0x5c>)
 8003144:	9306      	str	r3, [sp, #24]
 8003146:	4b0f      	ldr	r3, [pc, #60]	; (8003184 <_Z23getFont_comicbd_83_4bppv+0x60>)
 8003148:	490f      	ldr	r1, [pc, #60]	; (8003188 <_Z23getFont_comicbd_83_4bppv+0x64>)
 800314a:	4810      	ldr	r0, [pc, #64]	; (800318c <_Z23getFont_comicbd_83_4bppv+0x68>)
 800314c:	9403      	str	r4, [sp, #12]
 800314e:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003152:	2201      	movs	r2, #1
 8003154:	2304      	movs	r3, #4
 8003156:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800315a:	9300      	str	r3, [sp, #0]
 800315c:	2206      	movs	r2, #6
 800315e:	2353      	movs	r3, #83	; 0x53
 8003160:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003164:	f7ff faae 	bl	80026c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003168:	4809      	ldr	r0, [pc, #36]	; (8003190 <_Z23getFont_comicbd_83_4bppv+0x6c>)
 800316a:	f01a ff5b 	bl	801e024 <atexit>
 800316e:	4628      	mov	r0, r5
 8003170:	f01a ff19 	bl	801dfa6 <__cxa_guard_release>
    return comicbd_83_4bpp;
}
 8003174:	4805      	ldr	r0, [pc, #20]	; (800318c <_Z23getFont_comicbd_83_4bppv+0x68>)
 8003176:	b00b      	add	sp, #44	; 0x2c
 8003178:	bd30      	pop	{r4, r5, pc}
 800317a:	bf00      	nop
 800317c:	20004358 	.word	0x20004358
 8003180:	08022fbc 	.word	0x08022fbc
 8003184:	08020200 	.word	0x08020200
 8003188:	9092506c 	.word	0x9092506c
 800318c:	2000435c 	.word	0x2000435c
 8003190:	08003123 	.word	0x08003123

08003194 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003194:	4770      	bx	lr
	...

08003198 <_Z23getFont_verdana_10_4bppv>:
{
 8003198:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800319a:	4d14      	ldr	r5, [pc, #80]	; (80031ec <_Z23getFont_verdana_10_4bppv+0x54>)
 800319c:	782c      	ldrb	r4, [r5, #0]
 800319e:	f3bf 8f5b 	dmb	ish
 80031a2:	f014 0401 	ands.w	r4, r4, #1
{
 80031a6:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 80031a8:	d11d      	bne.n	80031e6 <_Z23getFont_verdana_10_4bppv+0x4e>
 80031aa:	4628      	mov	r0, r5
 80031ac:	f01a feef 	bl	801df8e <__cxa_guard_acquire>
 80031b0:	b1c8      	cbz	r0, 80031e6 <_Z23getFont_verdana_10_4bppv+0x4e>
 80031b2:	233f      	movs	r3, #63	; 0x3f
 80031b4:	9307      	str	r3, [sp, #28]
 80031b6:	4b0e      	ldr	r3, [pc, #56]	; (80031f0 <_Z23getFont_verdana_10_4bppv+0x58>)
 80031b8:	9306      	str	r3, [sp, #24]
 80031ba:	4b0e      	ldr	r3, [pc, #56]	; (80031f4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80031bc:	490e      	ldr	r1, [pc, #56]	; (80031f8 <_Z23getFont_verdana_10_4bppv+0x60>)
 80031be:	480f      	ldr	r0, [pc, #60]	; (80031fc <_Z23getFont_verdana_10_4bppv+0x64>)
 80031c0:	9403      	str	r4, [sp, #12]
 80031c2:	2201      	movs	r2, #1
 80031c4:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80031c8:	2304      	movs	r3, #4
 80031ca:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80031ce:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80031d2:	230a      	movs	r3, #10
 80031d4:	9400      	str	r4, [sp, #0]
 80031d6:	f7ff fa75 	bl	80026c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80031da:	4809      	ldr	r0, [pc, #36]	; (8003200 <_Z23getFont_verdana_10_4bppv+0x68>)
 80031dc:	f01a ff22 	bl	801e024 <atexit>
 80031e0:	4628      	mov	r0, r5
 80031e2:	f01a fee0 	bl	801dfa6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80031e6:	4805      	ldr	r0, [pc, #20]	; (80031fc <_Z23getFont_verdana_10_4bppv+0x64>)
 80031e8:	b00b      	add	sp, #44	; 0x2c
 80031ea:	bd30      	pop	{r4, r5, pc}
 80031ec:	20004380 	.word	0x20004380
 80031f0:	08022fc0 	.word	0x08022fc0
 80031f4:	08020204 	.word	0x08020204
 80031f8:	909250c0 	.word	0x909250c0
 80031fc:	20004384 	.word	0x20004384
 8003200:	08003195 	.word	0x08003195

08003204 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 13, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003204:	4770      	bx	lr
	...

08003208 <_Z23getFont_verdana_20_4bppv>:
{
 8003208:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 13, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800320a:	4d15      	ldr	r5, [pc, #84]	; (8003260 <_Z23getFont_verdana_20_4bppv+0x58>)
 800320c:	782c      	ldrb	r4, [r5, #0]
 800320e:	f3bf 8f5b 	dmb	ish
 8003212:	f014 0401 	ands.w	r4, r4, #1
{
 8003216:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 13, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003218:	d11e      	bne.n	8003258 <_Z23getFont_verdana_20_4bppv+0x50>
 800321a:	4628      	mov	r0, r5
 800321c:	f01a feb7 	bl	801df8e <__cxa_guard_acquire>
 8003220:	b1d0      	cbz	r0, 8003258 <_Z23getFont_verdana_20_4bppv+0x50>
 8003222:	233f      	movs	r3, #63	; 0x3f
 8003224:	9307      	str	r3, [sp, #28]
 8003226:	4b0f      	ldr	r3, [pc, #60]	; (8003264 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003228:	9306      	str	r3, [sp, #24]
 800322a:	4b0f      	ldr	r3, [pc, #60]	; (8003268 <_Z23getFont_verdana_20_4bppv+0x60>)
 800322c:	490f      	ldr	r1, [pc, #60]	; (800326c <_Z23getFont_verdana_20_4bppv+0x64>)
 800322e:	4810      	ldr	r0, [pc, #64]	; (8003270 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003230:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003234:	2301      	movs	r3, #1
 8003236:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800323a:	2304      	movs	r3, #4
 800323c:	e9cd 3300 	strd	r3, r3, [sp]
 8003240:	220d      	movs	r2, #13
 8003242:	2314      	movs	r3, #20
 8003244:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003248:	f7ff fa3c 	bl	80026c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800324c:	4809      	ldr	r0, [pc, #36]	; (8003274 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800324e:	f01a fee9 	bl	801e024 <atexit>
 8003252:	4628      	mov	r0, r5
 8003254:	f01a fea7 	bl	801dfa6 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003258:	4805      	ldr	r0, [pc, #20]	; (8003270 <_Z23getFont_verdana_20_4bppv+0x68>)
 800325a:	b00b      	add	sp, #44	; 0x2c
 800325c:	bd30      	pop	{r4, r5, pc}
 800325e:	bf00      	nop
 8003260:	200043a8 	.word	0x200043a8
 8003264:	08022fc4 	.word	0x08022fc4
 8003268:	08020208 	.word	0x08020208
 800326c:	909250d0 	.word	0x909250d0
 8003270:	200043ac 	.word	0x200043ac
 8003274:	08003205 	.word	0x08003205

08003278 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8003278:	4770      	bx	lr
	...

0800327c <_Z23getFont_verdana_40_4bppv>:
{
 800327c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800327e:	4d14      	ldr	r5, [pc, #80]	; (80032d0 <_Z23getFont_verdana_40_4bppv+0x54>)
 8003280:	782c      	ldrb	r4, [r5, #0]
 8003282:	f3bf 8f5b 	dmb	ish
 8003286:	f014 0401 	ands.w	r4, r4, #1
{
 800328a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800328c:	d11d      	bne.n	80032ca <_Z23getFont_verdana_40_4bppv+0x4e>
 800328e:	4628      	mov	r0, r5
 8003290:	f01a fe7d 	bl	801df8e <__cxa_guard_acquire>
 8003294:	b1c8      	cbz	r0, 80032ca <_Z23getFont_verdana_40_4bppv+0x4e>
 8003296:	233f      	movs	r3, #63	; 0x3f
 8003298:	9307      	str	r3, [sp, #28]
 800329a:	4b0e      	ldr	r3, [pc, #56]	; (80032d4 <_Z23getFont_verdana_40_4bppv+0x58>)
 800329c:	9306      	str	r3, [sp, #24]
 800329e:	4b0e      	ldr	r3, [pc, #56]	; (80032d8 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80032a0:	490e      	ldr	r1, [pc, #56]	; (80032dc <_Z23getFont_verdana_40_4bppv+0x60>)
 80032a2:	480f      	ldr	r0, [pc, #60]	; (80032e0 <_Z23getFont_verdana_40_4bppv+0x64>)
 80032a4:	9403      	str	r4, [sp, #12]
 80032a6:	2201      	movs	r2, #1
 80032a8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80032ac:	2304      	movs	r3, #4
 80032ae:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80032b2:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80032b6:	2328      	movs	r3, #40	; 0x28
 80032b8:	9400      	str	r4, [sp, #0]
 80032ba:	f7ff fa03 	bl	80026c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80032be:	4809      	ldr	r0, [pc, #36]	; (80032e4 <_Z23getFont_verdana_40_4bppv+0x68>)
 80032c0:	f01a feb0 	bl	801e024 <atexit>
 80032c4:	4628      	mov	r0, r5
 80032c6:	f01a fe6e 	bl	801dfa6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80032ca:	4805      	ldr	r0, [pc, #20]	; (80032e0 <_Z23getFont_verdana_40_4bppv+0x64>)
 80032cc:	b00b      	add	sp, #44	; 0x2c
 80032ce:	bd30      	pop	{r4, r5, pc}
 80032d0:	200043d0 	.word	0x200043d0
 80032d4:	08022fd0 	.word	0x08022fd0
 80032d8:	0802020c 	.word	0x0802020c
 80032dc:	90925188 	.word	0x90925188
 80032e0:	200043d4 	.word	0x200043d4
 80032e4:	08003279 	.word	0x08003279

080032e8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80032e8:	2000      	movs	r0, #0
 80032ea:	4770      	bx	lr

080032ec <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80032ec:	b40e      	push	{r1, r2, r3}
 80032ee:	b503      	push	{r0, r1, lr}
 80032f0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032f2:	2100      	movs	r1, #0
{
 80032f4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80032f8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80032fa:	f00b fce1 	bl	800ecc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80032fe:	b002      	add	sp, #8
 8003300:	f85d eb04 	ldr.w	lr, [sp], #4
 8003304:	b003      	add	sp, #12
 8003306:	4770      	bx	lr

08003308 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8003308:	b40c      	push	{r2, r3}
 800330a:	b507      	push	{r0, r1, r2, lr}
 800330c:	ab04      	add	r3, sp, #16
 800330e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8003312:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8003314:	f00b fcd4 	bl	800ecc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8003318:	b003      	add	sp, #12
 800331a:	f85d eb04 	ldr.w	lr, [sp], #4
 800331e:	b002      	add	sp, #8
 8003320:	4770      	bx	lr
	...

08003324 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8003324:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8003326:	b510      	push	{r4, lr}
 8003328:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800332a:	b373      	cbz	r3, 800338a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800332c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800332e:	b92b      	cbnz	r3, 800333c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8003330:	4b18      	ldr	r3, [pc, #96]	; (8003394 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8003332:	4a19      	ldr	r2, [pc, #100]	; (8003398 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8003334:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8003336:	4819      	ldr	r0, [pc, #100]	; (800339c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8003338:	f01a fe56 	bl	801dfe8 <__assert_func>
            return buffer[pos];
 800333c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800333e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8003342:	8b5b      	ldrh	r3, [r3, #26]
 8003344:	b30b      	cbz	r3, 800338a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8003346:	f00d f8f1 	bl	801052c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800334a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800334c:	2b01      	cmp	r3, #1
 800334e:	d803      	bhi.n	8003358 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8003350:	4b13      	ldr	r3, [pc, #76]	; (80033a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8003352:	4a14      	ldr	r2, [pc, #80]	; (80033a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8003354:	21c5      	movs	r1, #197	; 0xc5
 8003356:	e7ee      	b.n	8003336 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8003358:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800335a:	1c53      	adds	r3, r2, #1
 800335c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800335e:	2b09      	cmp	r3, #9
 8003360:	4619      	mov	r1, r3
 8003362:	bf88      	it	hi
 8003364:	f1a3 010a 	subhi.w	r1, r3, #10
 8003368:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 800336c:	f640 103f 	movw	r0, #2367	; 0x93f
 8003370:	8b49      	ldrh	r1, [r1, #26]
 8003372:	4281      	cmp	r1, r0
 8003374:	d109      	bne.n	800338a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8003376:	2b0a      	cmp	r3, #10
 8003378:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800337c:	bf28      	it	cs
 800337e:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8003380:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8003384:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8003386:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8003388:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800338a:	4620      	mov	r0, r4
}
 800338c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8003390:	f00c bfb0 	b.w	80102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8003394:	08020210 	.word	0x08020210
 8003398:	08020219 	.word	0x08020219
 800339c:	080202c4 	.word	0x080202c4
 80033a0:	0802030e 	.word	0x0802030e
 80033a4:	0802031c 	.word	0x0802031c

080033a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80033a8:	f00c bf5e 	b.w	8010268 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080033ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80033ac:	b510      	push	{r4, lr}
 80033ae:	b086      	sub	sp, #24
 80033b0:	ac02      	add	r4, sp, #8
 80033b2:	e884 0006 	stmia.w	r4, {r1, r2}
 80033b6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80033b8:	ab0a      	add	r3, sp, #40	; 0x28
 80033ba:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80033bc:	9301      	str	r3, [sp, #4]
 80033be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80033c0:	9300      	str	r3, [sp, #0]
 80033c2:	4621      	mov	r1, r4
 80033c4:	9b08      	ldr	r3, [sp, #32]
 80033c6:	f00a f954 	bl	800d672 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80033ca:	b006      	add	sp, #24
 80033cc:	bd10      	pop	{r4, pc}
	...

080033d0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80033d0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80033d2:	bb18      	cbnz	r0, 800341c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80033d4:	4b12      	ldr	r3, [pc, #72]	; (8003420 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80033d6:	4813      	ldr	r0, [pc, #76]	; (8003424 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	4913      	ldr	r1, [pc, #76]	; (8003428 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80033dc:	b1b3      	cbz	r3, 800340c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80033de:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80033e0:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80033e2:	441a      	add	r2, r3
 80033e4:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80033e6:	685a      	ldr	r2, [r3, #4]
 80033e8:	441a      	add	r2, r3
 80033ea:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80033ec:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80033ee:	4b0f      	ldr	r3, [pc, #60]	; (800342c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80033f0:	2200      	movs	r2, #0
 80033f2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80033f4:	f000 f838 	bl	8003468 <_ZN17TypedTextDatabase8getFontsEv>
 80033f8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80033fa:	f000 f833 	bl	8003464 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80033fe:	4b0c      	ldr	r3, [pc, #48]	; (8003430 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8003400:	601c      	str	r4, [r3, #0]
        fonts = f;
 8003402:	4b0c      	ldr	r3, [pc, #48]	; (8003434 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8003404:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8003406:	4b0c      	ldr	r3, [pc, #48]	; (8003438 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8003408:	8018      	strh	r0, [r3, #0]
    }
}
 800340a:	e007      	b.n	800341c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800340c:	4b0b      	ldr	r3, [pc, #44]	; (800343c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800340e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8003410:	4b0b      	ldr	r3, [pc, #44]	; (8003440 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8003412:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8003414:	4b0b      	ldr	r3, [pc, #44]	; (8003444 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8003416:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8003418:	2c00      	cmp	r4, #0
 800341a:	d1e8      	bne.n	80033ee <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800341c:	bd38      	pop	{r3, r4, r5, pc}
 800341e:	bf00      	nop
 8003420:	200043f8 	.word	0x200043f8
 8003424:	200043fc 	.word	0x200043fc
 8003428:	20004400 	.word	0x20004400
 800342c:	20004404 	.word	0x20004404
 8003430:	2000d3c8 	.word	0x2000d3c8
 8003434:	2000d3d0 	.word	0x2000d3d0
 8003438:	2000d3cc 	.word	0x2000d3cc
 800343c:	909251a4 	.word	0x909251a4
 8003440:	90925198 	.word	0x90925198
 8003444:	909251d8 	.word	0x909251d8

08003448 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8003448:	4b04      	ldr	r3, [pc, #16]	; (800345c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8003450:	4b03      	ldr	r3, [pc, #12]	; (8003460 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8003452:	681b      	ldr	r3, [r3, #0]
}
 8003454:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003458:	4770      	bx	lr
 800345a:	bf00      	nop
 800345c:	20004400 	.word	0x20004400
 8003460:	200043fc 	.word	0x200043fc

08003464 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8003464:	2003      	movs	r0, #3
 8003466:	4770      	bx	lr

08003468 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8003468:	4800      	ldr	r0, [pc, #0]	; (800346c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800346a:	4770      	bx	lr
 800346c:	20004408 	.word	0x20004408

08003470 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_comicbd_83_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8003470:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8003472:	f7ff fec9 	bl	8003208 <_Z23getFont_verdana_20_4bppv>
};
 8003476:	4c06      	ldr	r4, [pc, #24]	; (8003490 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8003478:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800347a:	f7ff feff 	bl	800327c <_Z23getFont_verdana_40_4bppv>
};
 800347e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8003480:	f7ff fe8a 	bl	8003198 <_Z23getFont_verdana_10_4bppv>
};
 8003484:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_83_4bpp())
 8003486:	f7ff fe4d 	bl	8003124 <_Z23getFont_comicbd_83_4bppv>
};
 800348a:	60e0      	str	r0, [r4, #12]
}  // namespace TypedTextDatabase
 800348c:	bd10      	pop	{r4, pc}
 800348e:	bf00      	nop
 8003490:	20004408 	.word	0x20004408

08003494 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8003494:	4770      	bx	lr

08003496 <_ZN19FrontendApplicationD0Ev>:
 8003496:	b510      	push	{r4, lr}
 8003498:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800349c:	4604      	mov	r4, r0
 800349e:	f01a fd74 	bl	801df8a <_ZdlPvj>
 80034a2:	4620      	mov	r0, r4
 80034a4:	bd10      	pop	{r4, pc}

080034a6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80034a6:	b510      	push	{r4, lr}
 80034a8:	4604      	mov	r4, r0
    {
        model.tick();
 80034aa:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 80034ae:	f000 f812 	bl	80034d6 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80034b2:	4620      	mov	r0, r4
    }
 80034b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80034b8:	f00a bc40 	b.w	800dd3c <_ZN8touchgfx11Application15handleTickEventEv>

080034bc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80034bc:	b510      	push	{r4, lr}
 80034be:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80034c0:	f7ff f884 	bl	80025cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80034c4:	4b01      	ldr	r3, [pc, #4]	; (80034cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80034c6:	6023      	str	r3, [r4, #0]
{

}
 80034c8:	4620      	mov	r0, r4
 80034ca:	bd10      	pop	{r4, pc}
 80034cc:	080203f8 	.word	0x080203f8

080034d0 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 80034d0:	2200      	movs	r2, #0
 80034d2:	6002      	str	r2, [r0, #0]
{

}
 80034d4:	4770      	bx	lr

080034d6 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 80034d6:	4770      	bx	lr

080034d8 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 80034d8:	4770      	bx	lr

080034da <_ZThn4_N16Screen1PresenterD1Ev>:
 80034da:	3804      	subs	r0, #4
 80034dc:	4770      	bx	lr

080034de <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 80034de:	4770      	bx	lr

080034e0 <_ZN16Screen1PresenterD0Ev>:
 80034e0:	b510      	push	{r4, lr}
 80034e2:	2110      	movs	r1, #16
 80034e4:	4604      	mov	r4, r0
 80034e6:	f01a fd50 	bl	801df8a <_ZdlPvj>
 80034ea:	4620      	mov	r0, r4
 80034ec:	bd10      	pop	{r4, pc}

080034ee <_ZThn4_N16Screen1PresenterD0Ev>:
 80034ee:	f1a0 0004 	sub.w	r0, r0, #4
 80034f2:	e7f5      	b.n	80034e0 <_ZN16Screen1PresenterD0Ev>

080034f4 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 80034f4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80034f6:	2200      	movs	r2, #0
 80034f8:	6082      	str	r2, [r0, #8]
    : view(v)
 80034fa:	4a04      	ldr	r2, [pc, #16]	; (800350c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 80034fc:	60c1      	str	r1, [r0, #12]
 80034fe:	f102 0408 	add.w	r4, r2, #8
 8003502:	3220      	adds	r2, #32
 8003504:	6004      	str	r4, [r0, #0]
 8003506:	6042      	str	r2, [r0, #4]
}
 8003508:	bd10      	pop	{r4, pc}
 800350a:	bf00      	nop
 800350c:	08020434 	.word	0x08020434

08003510 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8003510:	4770      	bx	lr

08003512 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8003512:	4770      	bx	lr

08003514 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8003514:	f7ff b904 	b.w	8002720 <_ZN15Screen1ViewBase11setupScreenEv>

08003518 <_ZN11Screen1ViewD0Ev>:
 8003518:	b510      	push	{r4, lr}
 800351a:	f44f 71ba 	mov.w	r1, #372	; 0x174
 800351e:	4604      	mov	r4, r0
 8003520:	f01a fd33 	bl	801df8a <_ZdlPvj>
 8003524:	4620      	mov	r0, r4
 8003526:	bd10      	pop	{r4, pc}

08003528 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8003528:	b510      	push	{r4, lr}
 800352a:	4604      	mov	r4, r0
 800352c:	f7ff f9c2 	bl	80028b4 <_ZN15Screen1ViewBaseC1Ev>
 8003530:	4b01      	ldr	r3, [pc, #4]	; (8003538 <_ZN11Screen1ViewC1Ev+0x10>)
 8003532:	6023      	str	r3, [r4, #0]
}
 8003534:	4620      	mov	r0, r4
 8003536:	bd10      	pop	{r4, pc}
 8003538:	08020464 	.word	0x08020464

0800353c <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 800353c:	4770      	bx	lr

0800353e <_ZThn4_N16Screen2PresenterD1Ev>:
 800353e:	3804      	subs	r0, #4
 8003540:	4770      	bx	lr

08003542 <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 8003542:	4770      	bx	lr

08003544 <_ZN16Screen2PresenterD0Ev>:
 8003544:	b510      	push	{r4, lr}
 8003546:	2110      	movs	r1, #16
 8003548:	4604      	mov	r4, r0
 800354a:	f01a fd1e 	bl	801df8a <_ZdlPvj>
 800354e:	4620      	mov	r0, r4
 8003550:	bd10      	pop	{r4, pc}

08003552 <_ZThn4_N16Screen2PresenterD0Ev>:
 8003552:	f1a0 0004 	sub.w	r0, r0, #4
 8003556:	e7f5      	b.n	8003544 <_ZN16Screen2PresenterD0Ev>

08003558 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 8003558:	b510      	push	{r4, lr}
 800355a:	2200      	movs	r2, #0
 800355c:	6082      	str	r2, [r0, #8]
    : view(v)
 800355e:	4a04      	ldr	r2, [pc, #16]	; (8003570 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 8003560:	60c1      	str	r1, [r0, #12]
 8003562:	f102 0408 	add.w	r4, r2, #8
 8003566:	3220      	adds	r2, #32
 8003568:	6004      	str	r4, [r0, #0]
 800356a:	6042      	str	r2, [r0, #4]
}
 800356c:	bd10      	pop	{r4, pc}
 800356e:	bf00      	nop
 8003570:	08020490 	.word	0x08020490

08003574 <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 8003574:	4770      	bx	lr

08003576 <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 8003576:	4770      	bx	lr

08003578 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 8003578:	f7ff bb48 	b.w	8002c0c <_ZN15Screen2ViewBase11setupScreenEv>

0800357c <_ZN11Screen2ViewD0Ev>:
 800357c:	b510      	push	{r4, lr}
 800357e:	f243 01a0 	movw	r1, #12448	; 0x30a0
 8003582:	4604      	mov	r4, r0
 8003584:	f01a fd01 	bl	801df8a <_ZdlPvj>
 8003588:	4620      	mov	r0, r4
 800358a:	bd10      	pop	{r4, pc}

0800358c <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 800358c:	b510      	push	{r4, lr}
 800358e:	4604      	mov	r4, r0
 8003590:	f7ff fbe8 	bl	8002d64 <_ZN15Screen2ViewBaseC1Ev>
 8003594:	4b01      	ldr	r3, [pc, #4]	; (800359c <_ZN11Screen2ViewC1Ev+0x10>)
 8003596:	6023      	str	r3, [r4, #0]
}
 8003598:	4620      	mov	r0, r4
 800359a:	bd10      	pop	{r4, pc}
 800359c:	080204c0 	.word	0x080204c0

080035a0 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 80035a0:	4770      	bx	lr

080035a2 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 80035a2:	2000      	movs	r0, #0
 80035a4:	4770      	bx	lr

080035a6 <ft6x06_ReadID>:
{
 80035a6:	b510      	push	{r4, lr}
 80035a8:	4604      	mov	r4, r0
  TS_IO_Init();
 80035aa:	f000 fb75 	bl	8003c98 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80035ae:	21a8      	movs	r1, #168	; 0xa8
 80035b0:	b2e0      	uxtb	r0, r4
 80035b2:	f000 fb8d 	bl	8003cd0 <TS_IO_Read>
}
 80035b6:	b280      	uxth	r0, r0
 80035b8:	bd10      	pop	{r4, pc}
	...

080035bc <ft6x06_TS_DetectTouch>:
{
 80035bc:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80035be:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80035c0:	2102      	movs	r1, #2
 80035c2:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80035c4:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80035c8:	f000 fb82 	bl	8003cd0 <TS_IO_Read>
 80035cc:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80035d0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80035d4:	f003 030f 	and.w	r3, r3, #15
 80035d8:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80035dc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80035e0:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80035e2:	bf88      	it	hi
 80035e4:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80035e8:	4b04      	ldr	r3, [pc, #16]	; (80035fc <ft6x06_TS_DetectTouch+0x40>)
 80035ea:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80035ee:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80035f2:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80035f4:	2200      	movs	r2, #0
 80035f6:	709a      	strb	r2, [r3, #2]
}
 80035f8:	b002      	add	sp, #8
 80035fa:	bd10      	pop	{r4, pc}
 80035fc:	2000441a 	.word	0x2000441a

08003600 <ft6x06_TS_GetXY>:
{
 8003600:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003602:	4c15      	ldr	r4, [pc, #84]	; (8003658 <ft6x06_TS_GetXY+0x58>)
{
 8003604:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8003606:	78a3      	ldrb	r3, [r4, #2]
 8003608:	7862      	ldrb	r2, [r4, #1]
 800360a:	429a      	cmp	r2, r3
{
 800360c:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800360e:	d91f      	bls.n	8003650 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8003610:	b303      	cbz	r3, 8003654 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8003612:	2b01      	cmp	r3, #1
 8003614:	bf14      	ite	ne
 8003616:	2100      	movne	r1, #0
 8003618:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 800361a:	2304      	movs	r3, #4
 800361c:	eb0d 0203 	add.w	r2, sp, r3
 8003620:	b2c0      	uxtb	r0, r0
 8003622:	f000 fb73 	bl	8003d0c <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8003626:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800362a:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800362e:	021b      	lsls	r3, r3, #8
 8003630:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003634:	4313      	orrs	r3, r2
 8003636:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8003638:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800363c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8003640:	021b      	lsls	r3, r3, #8
 8003642:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8003646:	4313      	orrs	r3, r2
 8003648:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 800364a:	78a3      	ldrb	r3, [r4, #2]
 800364c:	3301      	adds	r3, #1
 800364e:	70a3      	strb	r3, [r4, #2]
}
 8003650:	b002      	add	sp, #8
 8003652:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8003654:	2103      	movs	r1, #3
 8003656:	e7e0      	b.n	800361a <ft6x06_TS_GetXY+0x1a>
 8003658:	2000441a 	.word	0x2000441a

0800365c <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800365c:	2201      	movs	r2, #1
 800365e:	21a4      	movs	r1, #164	; 0xa4
 8003660:	b2c0      	uxtb	r0, r0
 8003662:	f000 bb1b 	b.w	8003c9c <TS_IO_Write>

08003666 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8003666:	2200      	movs	r2, #0
 8003668:	21a4      	movs	r1, #164	; 0xa4
 800366a:	b2c0      	uxtb	r0, r0
 800366c:	f000 bb16 	b.w	8003c9c <TS_IO_Write>

08003670 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8003670:	f7ff bff9 	b.w	8003666 <ft6x06_TS_DisableIT>

08003674 <ft6x06_TS_ClearIT>:
 8003674:	4770      	bx	lr
	...

08003678 <ft6x06_Init>:
{  
 8003678:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 800367a:	4b09      	ldr	r3, [pc, #36]	; (80036a0 <ft6x06_Init+0x28>)
 800367c:	781a      	ldrb	r2, [r3, #0]
 800367e:	4290      	cmp	r0, r2
 8003680:	d00a      	beq.n	8003698 <ft6x06_Init+0x20>
 8003682:	7859      	ldrb	r1, [r3, #1]
 8003684:	4288      	cmp	r0, r1
 8003686:	d007      	beq.n	8003698 <ft6x06_Init+0x20>
 8003688:	b10a      	cbz	r2, 800368e <ft6x06_Init+0x16>
 800368a:	b929      	cbnz	r1, 8003698 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 800368c:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800368e:	5498      	strb	r0, [r3, r2]
}
 8003690:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8003694:	f000 bb00 	b.w	8003c98 <TS_IO_Init>
}
 8003698:	f85d 4b04 	ldr.w	r4, [sp], #4
 800369c:	4770      	bx	lr
 800369e:	bf00      	nop
 80036a0:	20004418 	.word	0x20004418

080036a4 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 80036a4:	b538      	push	{r3, r4, r5, lr}
 80036a6:	4604      	mov	r4, r0
 80036a8:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80036aa:	2000      	movs	r0, #0
 80036ac:	49c9      	ldr	r1, [pc, #804]	; (80039d4 <OTM8009A_Init+0x330>)
 80036ae:	f7fd f9b9 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80036b2:	49c9      	ldr	r1, [pc, #804]	; (80039d8 <OTM8009A_Init+0x334>)
 80036b4:	2003      	movs	r0, #3
 80036b6:	f7fd f9b5 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 80036ba:	49c8      	ldr	r1, [pc, #800]	; (80039dc <OTM8009A_Init+0x338>)
 80036bc:	2000      	movs	r0, #0
 80036be:	f7fd f9b1 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 80036c2:	49c7      	ldr	r1, [pc, #796]	; (80039e0 <OTM8009A_Init+0x33c>)
 80036c4:	2002      	movs	r0, #2
 80036c6:	f7fd f9ad 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80036ca:	49c4      	ldr	r1, [pc, #784]	; (80039dc <OTM8009A_Init+0x338>)
 80036cc:	2000      	movs	r0, #0
 80036ce:	f7fd f9a9 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 80036d2:	49c4      	ldr	r1, [pc, #784]	; (80039e4 <OTM8009A_Init+0x340>)
 80036d4:	2000      	movs	r0, #0
 80036d6:	f7fd f9a5 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80036da:	200a      	movs	r0, #10
 80036dc:	f000 fb2e 	bl	8003d3c <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 80036e0:	49c1      	ldr	r1, [pc, #772]	; (80039e8 <OTM8009A_Init+0x344>)
 80036e2:	2000      	movs	r0, #0
 80036e4:	f7fd f99e 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 80036e8:	49c0      	ldr	r1, [pc, #768]	; (80039ec <OTM8009A_Init+0x348>)
 80036ea:	2000      	movs	r0, #0
 80036ec:	f7fd f99a 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80036f0:	200a      	movs	r0, #10
 80036f2:	f000 fb23 	bl	8003d3c <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 80036f6:	49be      	ldr	r1, [pc, #760]	; (80039f0 <OTM8009A_Init+0x34c>)
 80036f8:	2000      	movs	r0, #0
 80036fa:	f7fd f993 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 80036fe:	49bd      	ldr	r1, [pc, #756]	; (80039f4 <OTM8009A_Init+0x350>)
 8003700:	2000      	movs	r0, #0
 8003702:	f7fd f98f 	bl	8000a24 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8003706:	49bc      	ldr	r1, [pc, #752]	; (80039f8 <OTM8009A_Init+0x354>)
 8003708:	2000      	movs	r0, #0
 800370a:	f7fd f98b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800370e:	49bb      	ldr	r1, [pc, #748]	; (80039fc <OTM8009A_Init+0x358>)
 8003710:	2000      	movs	r0, #0
 8003712:	f7fd f987 	bl	8000a24 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8003716:	49ba      	ldr	r1, [pc, #744]	; (8003a00 <OTM8009A_Init+0x35c>)
 8003718:	2000      	movs	r0, #0
 800371a:	f7fd f983 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 800371e:	49b9      	ldr	r1, [pc, #740]	; (8003a04 <OTM8009A_Init+0x360>)
 8003720:	2000      	movs	r0, #0
 8003722:	f7fd f97f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003726:	49ab      	ldr	r1, [pc, #684]	; (80039d4 <OTM8009A_Init+0x330>)
 8003728:	2000      	movs	r0, #0
 800372a:	f7fd f97b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 800372e:	49b6      	ldr	r1, [pc, #728]	; (8003a08 <OTM8009A_Init+0x364>)
 8003730:	2000      	movs	r0, #0
 8003732:	f7fd f977 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003736:	49b5      	ldr	r1, [pc, #724]	; (8003a0c <OTM8009A_Init+0x368>)
 8003738:	2000      	movs	r0, #0
 800373a:	f7fd f973 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 800373e:	49b4      	ldr	r1, [pc, #720]	; (8003a10 <OTM8009A_Init+0x36c>)
 8003740:	2000      	movs	r0, #0
 8003742:	f7fd f96f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8003746:	49b3      	ldr	r1, [pc, #716]	; (8003a14 <OTM8009A_Init+0x370>)
 8003748:	2000      	movs	r0, #0
 800374a:	f7fd f96b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800374e:	49b2      	ldr	r1, [pc, #712]	; (8003a18 <OTM8009A_Init+0x374>)
 8003750:	2000      	movs	r0, #0
 8003752:	f7fd f967 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8003756:	49b1      	ldr	r1, [pc, #708]	; (8003a1c <OTM8009A_Init+0x378>)
 8003758:	2000      	movs	r0, #0
 800375a:	f7fd f963 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800375e:	49b0      	ldr	r1, [pc, #704]	; (8003a20 <OTM8009A_Init+0x37c>)
 8003760:	2000      	movs	r0, #0
 8003762:	f7fd f95f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8003766:	49af      	ldr	r1, [pc, #700]	; (8003a24 <OTM8009A_Init+0x380>)
 8003768:	2000      	movs	r0, #0
 800376a:	f7fd f95b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800376e:	49a3      	ldr	r1, [pc, #652]	; (80039fc <OTM8009A_Init+0x358>)
 8003770:	2000      	movs	r0, #0
 8003772:	f7fd f957 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003776:	4997      	ldr	r1, [pc, #604]	; (80039d4 <OTM8009A_Init+0x330>)
 8003778:	2000      	movs	r0, #0
 800377a:	f7fd f953 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800377e:	49aa      	ldr	r1, [pc, #680]	; (8003a28 <OTM8009A_Init+0x384>)
 8003780:	2002      	movs	r0, #2
 8003782:	f7fd f94f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8003786:	49a9      	ldr	r1, [pc, #676]	; (8003a2c <OTM8009A_Init+0x388>)
 8003788:	2000      	movs	r0, #0
 800378a:	f7fd f94b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800378e:	49a8      	ldr	r1, [pc, #672]	; (8003a30 <OTM8009A_Init+0x38c>)
 8003790:	2000      	movs	r0, #0
 8003792:	f7fd f947 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8003796:	49a7      	ldr	r1, [pc, #668]	; (8003a34 <OTM8009A_Init+0x390>)
 8003798:	2000      	movs	r0, #0
 800379a:	f7fd f943 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800379e:	49a6      	ldr	r1, [pc, #664]	; (8003a38 <OTM8009A_Init+0x394>)
 80037a0:	2000      	movs	r0, #0
 80037a2:	f7fd f93f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 80037a6:	49a5      	ldr	r1, [pc, #660]	; (8003a3c <OTM8009A_Init+0x398>)
 80037a8:	2000      	movs	r0, #0
 80037aa:	f7fd f93b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 80037ae:	49a4      	ldr	r1, [pc, #656]	; (8003a40 <OTM8009A_Init+0x39c>)
 80037b0:	2000      	movs	r0, #0
 80037b2:	f7fd f937 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80037b6:	4995      	ldr	r1, [pc, #596]	; (8003a0c <OTM8009A_Init+0x368>)
 80037b8:	2000      	movs	r0, #0
 80037ba:	f7fd f933 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 80037be:	49a1      	ldr	r1, [pc, #644]	; (8003a44 <OTM8009A_Init+0x3a0>)
 80037c0:	2000      	movs	r0, #0
 80037c2:	f7fd f92f 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80037c6:	4993      	ldr	r1, [pc, #588]	; (8003a14 <OTM8009A_Init+0x370>)
 80037c8:	2000      	movs	r0, #0
 80037ca:	f7fd f92b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 80037ce:	499e      	ldr	r1, [pc, #632]	; (8003a48 <OTM8009A_Init+0x3a4>)
 80037d0:	2000      	movs	r0, #0
 80037d2:	f7fd f927 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 80037d6:	499d      	ldr	r1, [pc, #628]	; (8003a4c <OTM8009A_Init+0x3a8>)
 80037d8:	2000      	movs	r0, #0
 80037da:	f7fd f923 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 80037de:	499c      	ldr	r1, [pc, #624]	; (8003a50 <OTM8009A_Init+0x3ac>)
 80037e0:	2002      	movs	r0, #2
 80037e2:	f7fd f91f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80037e6:	497d      	ldr	r1, [pc, #500]	; (80039dc <OTM8009A_Init+0x338>)
 80037e8:	2000      	movs	r0, #0
 80037ea:	f7fd f91b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 80037ee:	4999      	ldr	r1, [pc, #612]	; (8003a54 <OTM8009A_Init+0x3b0>)
 80037f0:	2006      	movs	r0, #6
 80037f2:	f7fd f917 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80037f6:	4998      	ldr	r1, [pc, #608]	; (8003a58 <OTM8009A_Init+0x3b4>)
 80037f8:	2000      	movs	r0, #0
 80037fa:	f7fd f913 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 80037fe:	4997      	ldr	r1, [pc, #604]	; (8003a5c <OTM8009A_Init+0x3b8>)
 8003800:	200e      	movs	r0, #14
 8003802:	f7fd f90f 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8003806:	4996      	ldr	r1, [pc, #600]	; (8003a60 <OTM8009A_Init+0x3bc>)
 8003808:	2000      	movs	r0, #0
 800380a:	f7fd f90b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 800380e:	4995      	ldr	r1, [pc, #596]	; (8003a64 <OTM8009A_Init+0x3c0>)
 8003810:	200e      	movs	r0, #14
 8003812:	f7fd f907 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8003816:	4994      	ldr	r1, [pc, #592]	; (8003a68 <OTM8009A_Init+0x3c4>)
 8003818:	2000      	movs	r0, #0
 800381a:	f7fd f903 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 800381e:	4993      	ldr	r1, [pc, #588]	; (8003a6c <OTM8009A_Init+0x3c8>)
 8003820:	200a      	movs	r0, #10
 8003822:	f7fd f8ff 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003826:	4992      	ldr	r1, [pc, #584]	; (8003a70 <OTM8009A_Init+0x3cc>)
 8003828:	2000      	movs	r0, #0
 800382a:	f7fd f8fb 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 800382e:	4991      	ldr	r1, [pc, #580]	; (8003a74 <OTM8009A_Init+0x3d0>)
 8003830:	2000      	movs	r0, #0
 8003832:	f7fd f8f7 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8003836:	4969      	ldr	r1, [pc, #420]	; (80039dc <OTM8009A_Init+0x338>)
 8003838:	2000      	movs	r0, #0
 800383a:	f7fd f8f3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800383e:	498e      	ldr	r1, [pc, #568]	; (8003a78 <OTM8009A_Init+0x3d4>)
 8003840:	200a      	movs	r0, #10
 8003842:	f7fd f8ef 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8003846:	498d      	ldr	r1, [pc, #564]	; (8003a7c <OTM8009A_Init+0x3d8>)
 8003848:	2000      	movs	r0, #0
 800384a:	f7fd f8eb 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800384e:	498c      	ldr	r1, [pc, #560]	; (8003a80 <OTM8009A_Init+0x3dc>)
 8003850:	200f      	movs	r0, #15
 8003852:	f7fd f8e7 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8003856:	4980      	ldr	r1, [pc, #512]	; (8003a58 <OTM8009A_Init+0x3b4>)
 8003858:	2000      	movs	r0, #0
 800385a:	f7fd f8e3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800385e:	4989      	ldr	r1, [pc, #548]	; (8003a84 <OTM8009A_Init+0x3e0>)
 8003860:	200f      	movs	r0, #15
 8003862:	f7fd f8df 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8003866:	497e      	ldr	r1, [pc, #504]	; (8003a60 <OTM8009A_Init+0x3bc>)
 8003868:	2000      	movs	r0, #0
 800386a:	f7fd f8db 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800386e:	4986      	ldr	r1, [pc, #536]	; (8003a88 <OTM8009A_Init+0x3e4>)
 8003870:	200a      	movs	r0, #10
 8003872:	f7fd f8d7 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8003876:	497c      	ldr	r1, [pc, #496]	; (8003a68 <OTM8009A_Init+0x3c4>)
 8003878:	2000      	movs	r0, #0
 800387a:	f7fd f8d3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800387e:	4983      	ldr	r1, [pc, #524]	; (8003a8c <OTM8009A_Init+0x3e8>)
 8003880:	200f      	movs	r0, #15
 8003882:	f7fd f8cf 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003886:	497a      	ldr	r1, [pc, #488]	; (8003a70 <OTM8009A_Init+0x3cc>)
 8003888:	2000      	movs	r0, #0
 800388a:	f7fd f8cb 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800388e:	4980      	ldr	r1, [pc, #512]	; (8003a90 <OTM8009A_Init+0x3ec>)
 8003890:	200f      	movs	r0, #15
 8003892:	f7fd f8c7 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8003896:	497f      	ldr	r1, [pc, #508]	; (8003a94 <OTM8009A_Init+0x3f0>)
 8003898:	2000      	movs	r0, #0
 800389a:	f7fd f8c3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800389e:	497e      	ldr	r1, [pc, #504]	; (8003a98 <OTM8009A_Init+0x3f4>)
 80038a0:	200a      	movs	r0, #10
 80038a2:	f7fd f8bf 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 80038a6:	497d      	ldr	r1, [pc, #500]	; (8003a9c <OTM8009A_Init+0x3f8>)
 80038a8:	2000      	movs	r0, #0
 80038aa:	f7fd f8bb 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 80038ae:	497c      	ldr	r1, [pc, #496]	; (8003aa0 <OTM8009A_Init+0x3fc>)
 80038b0:	200a      	movs	r0, #10
 80038b2:	f7fd f8b7 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80038b6:	4949      	ldr	r1, [pc, #292]	; (80039dc <OTM8009A_Init+0x338>)
 80038b8:	2000      	movs	r0, #0
 80038ba:	f7fd f8b3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 80038be:	4979      	ldr	r1, [pc, #484]	; (8003aa4 <OTM8009A_Init+0x400>)
 80038c0:	200a      	movs	r0, #10
 80038c2:	f7fd f8af 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 80038c6:	496d      	ldr	r1, [pc, #436]	; (8003a7c <OTM8009A_Init+0x3d8>)
 80038c8:	2000      	movs	r0, #0
 80038ca:	f7fd f8ab 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 80038ce:	4976      	ldr	r1, [pc, #472]	; (8003aa8 <OTM8009A_Init+0x404>)
 80038d0:	200f      	movs	r0, #15
 80038d2:	f7fd f8a7 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80038d6:	4960      	ldr	r1, [pc, #384]	; (8003a58 <OTM8009A_Init+0x3b4>)
 80038d8:	2000      	movs	r0, #0
 80038da:	f7fd f8a3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 80038de:	4973      	ldr	r1, [pc, #460]	; (8003aac <OTM8009A_Init+0x408>)
 80038e0:	200f      	movs	r0, #15
 80038e2:	f7fd f89f 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80038e6:	495e      	ldr	r1, [pc, #376]	; (8003a60 <OTM8009A_Init+0x3bc>)
 80038e8:	2000      	movs	r0, #0
 80038ea:	f7fd f89b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 80038ee:	4970      	ldr	r1, [pc, #448]	; (8003ab0 <OTM8009A_Init+0x40c>)
 80038f0:	200a      	movs	r0, #10
 80038f2:	f7fd f897 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80038f6:	495c      	ldr	r1, [pc, #368]	; (8003a68 <OTM8009A_Init+0x3c4>)
 80038f8:	2000      	movs	r0, #0
 80038fa:	f7fd f893 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 80038fe:	496d      	ldr	r1, [pc, #436]	; (8003ab4 <OTM8009A_Init+0x410>)
 8003900:	200f      	movs	r0, #15
 8003902:	f7fd f88f 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8003906:	495a      	ldr	r1, [pc, #360]	; (8003a70 <OTM8009A_Init+0x3cc>)
 8003908:	2000      	movs	r0, #0
 800390a:	f7fd f88b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 800390e:	496a      	ldr	r1, [pc, #424]	; (8003ab8 <OTM8009A_Init+0x414>)
 8003910:	200f      	movs	r0, #15
 8003912:	f7fd f887 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8003916:	493d      	ldr	r1, [pc, #244]	; (8003a0c <OTM8009A_Init+0x368>)
 8003918:	2000      	movs	r0, #0
 800391a:	f7fd f883 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 800391e:	4967      	ldr	r1, [pc, #412]	; (8003abc <OTM8009A_Init+0x418>)
 8003920:	2000      	movs	r0, #0
 8003922:	f7fd f87f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8003926:	4966      	ldr	r1, [pc, #408]	; (8003ac0 <OTM8009A_Init+0x41c>)
 8003928:	2000      	movs	r0, #0
 800392a:	f7fd f87b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 800392e:	4965      	ldr	r1, [pc, #404]	; (8003ac4 <OTM8009A_Init+0x420>)
 8003930:	2000      	movs	r0, #0
 8003932:	f7fd f877 	bl	8000a24 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8003936:	4964      	ldr	r1, [pc, #400]	; (8003ac8 <OTM8009A_Init+0x424>)
 8003938:	2000      	movs	r0, #0
 800393a:	f7fd f873 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800393e:	4963      	ldr	r1, [pc, #396]	; (8003acc <OTM8009A_Init+0x428>)
 8003940:	2000      	movs	r0, #0
 8003942:	f7fd f86f 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003946:	4923      	ldr	r1, [pc, #140]	; (80039d4 <OTM8009A_Init+0x330>)
 8003948:	2000      	movs	r0, #0
 800394a:	f7fd f86b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800394e:	4960      	ldr	r1, [pc, #384]	; (8003ad0 <OTM8009A_Init+0x42c>)
 8003950:	2003      	movs	r0, #3
 8003952:	f7fd f867 	bl	8000a24 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003956:	491f      	ldr	r1, [pc, #124]	; (80039d4 <OTM8009A_Init+0x330>)
 8003958:	2000      	movs	r0, #0
 800395a:	f7fd f863 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800395e:	491d      	ldr	r1, [pc, #116]	; (80039d4 <OTM8009A_Init+0x330>)
 8003960:	2000      	movs	r0, #0
 8003962:	f7fd f85f 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8003966:	495b      	ldr	r1, [pc, #364]	; (8003ad4 <OTM8009A_Init+0x430>)
 8003968:	2010      	movs	r0, #16
 800396a:	f7fd f85b 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800396e:	4919      	ldr	r1, [pc, #100]	; (80039d4 <OTM8009A_Init+0x330>)
 8003970:	2000      	movs	r0, #0
 8003972:	f7fd f857 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8003976:	4958      	ldr	r1, [pc, #352]	; (8003ad8 <OTM8009A_Init+0x434>)
 8003978:	2010      	movs	r0, #16
 800397a:	f7fd f853 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800397e:	2000      	movs	r0, #0
 8003980:	4956      	ldr	r1, [pc, #344]	; (8003adc <OTM8009A_Init+0x438>)
 8003982:	f7fd f84f 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8003986:	2078      	movs	r0, #120	; 0x78
 8003988:	f000 f9d8 	bl	8003d3c <OTM8009A_IO_Delay>

  switch(ColorCoding)
 800398c:	2c00      	cmp	r4, #0
 800398e:	f000 80c7 	beq.w	8003b20 <OTM8009A_Init+0x47c>
 8003992:	2c02      	cmp	r4, #2
 8003994:	d103      	bne.n	800399e <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8003996:	4952      	ldr	r1, [pc, #328]	; (8003ae0 <OTM8009A_Init+0x43c>)
 8003998:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800399a:	f7fd f843 	bl	8000a24 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800399e:	2d01      	cmp	r5, #1
 80039a0:	d10b      	bne.n	80039ba <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 80039a2:	4950      	ldr	r1, [pc, #320]	; (8003ae4 <OTM8009A_Init+0x440>)
 80039a4:	2000      	movs	r0, #0
 80039a6:	f7fd f83d 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 80039aa:	494f      	ldr	r1, [pc, #316]	; (8003ae8 <OTM8009A_Init+0x444>)
 80039ac:	2004      	movs	r0, #4
 80039ae:	f7fd f839 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 80039b2:	494e      	ldr	r1, [pc, #312]	; (8003aec <OTM8009A_Init+0x448>)
 80039b4:	2004      	movs	r0, #4
 80039b6:	f7fd f835 	bl	8000a24 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 80039ba:	494d      	ldr	r1, [pc, #308]	; (8003af0 <OTM8009A_Init+0x44c>)
 80039bc:	2000      	movs	r0, #0
 80039be:	f7fd f831 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 80039c2:	494c      	ldr	r1, [pc, #304]	; (8003af4 <OTM8009A_Init+0x450>)
 80039c4:	2000      	movs	r0, #0
 80039c6:	f7fd f82d 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 80039ca:	494b      	ldr	r1, [pc, #300]	; (8003af8 <OTM8009A_Init+0x454>)
 80039cc:	2000      	movs	r0, #0
 80039ce:	f7fd f829 	bl	8000a24 <DSI_IO_WriteCmd>
 80039d2:	e093      	b.n	8003afc <OTM8009A_Init+0x458>
 80039d4:	080204ec 	.word	0x080204ec
 80039d8:	08020552 	.word	0x08020552
 80039dc:	08020502 	.word	0x08020502
 80039e0:	080205d8 	.word	0x080205d8
 80039e4:	08020518 	.word	0x08020518
 80039e8:	0802052e 	.word	0x0802052e
 80039ec:	08020544 	.word	0x08020544
 80039f0:	0802054a 	.word	0x0802054a
 80039f4:	0802054c 	.word	0x0802054c
 80039f8:	0802054e 	.word	0x0802054e
 80039fc:	08020550 	.word	0x08020550
 8003a00:	080204ee 	.word	0x080204ee
 8003a04:	080204f0 	.word	0x080204f0
 8003a08:	080204f2 	.word	0x080204f2
 8003a0c:	080204f4 	.word	0x080204f4
 8003a10:	080204f6 	.word	0x080204f6
 8003a14:	080204f8 	.word	0x080204f8
 8003a18:	080204fa 	.word	0x080204fa
 8003a1c:	080204fc 	.word	0x080204fc
 8003a20:	080204fe 	.word	0x080204fe
 8003a24:	08020500 	.word	0x08020500
 8003a28:	08020656 	.word	0x08020656
 8003a2c:	08020504 	.word	0x08020504
 8003a30:	08020506 	.word	0x08020506
 8003a34:	08020508 	.word	0x08020508
 8003a38:	0802050a 	.word	0x0802050a
 8003a3c:	0802050c 	.word	0x0802050c
 8003a40:	0802050e 	.word	0x0802050e
 8003a44:	08020510 	.word	0x08020510
 8003a48:	08020512 	.word	0x08020512
 8003a4c:	08020514 	.word	0x08020514
 8003a50:	08020659 	.word	0x08020659
 8003a54:	0802065c 	.word	0x0802065c
 8003a58:	08020516 	.word	0x08020516
 8003a5c:	08020663 	.word	0x08020663
 8003a60:	0802051a 	.word	0x0802051a
 8003a64:	08020672 	.word	0x08020672
 8003a68:	0802051c 	.word	0x0802051c
 8003a6c:	08020556 	.word	0x08020556
 8003a70:	0802051e 	.word	0x0802051e
 8003a74:	0802053c 	.word	0x0802053c
 8003a78:	08020561 	.word	0x08020561
 8003a7c:	08020520 	.word	0x08020520
 8003a80:	0802056c 	.word	0x0802056c
 8003a84:	0802057c 	.word	0x0802057c
 8003a88:	0802058c 	.word	0x0802058c
 8003a8c:	08020597 	.word	0x08020597
 8003a90:	080205a7 	.word	0x080205a7
 8003a94:	08020522 	.word	0x08020522
 8003a98:	080205b7 	.word	0x080205b7
 8003a9c:	08020524 	.word	0x08020524
 8003aa0:	080205c2 	.word	0x080205c2
 8003aa4:	080205cd 	.word	0x080205cd
 8003aa8:	080205db 	.word	0x080205db
 8003aac:	080205eb 	.word	0x080205eb
 8003ab0:	080205fb 	.word	0x080205fb
 8003ab4:	08020606 	.word	0x08020606
 8003ab8:	08020616 	.word	0x08020616
 8003abc:	0802053e 	.word	0x0802053e
 8003ac0:	08020540 	.word	0x08020540
 8003ac4:	08020542 	.word	0x08020542
 8003ac8:	08020546 	.word	0x08020546
 8003acc:	08020548 	.word	0x08020548
 8003ad0:	08020626 	.word	0x08020626
 8003ad4:	08020634 	.word	0x08020634
 8003ad8:	08020645 	.word	0x08020645
 8003adc:	08020526 	.word	0x08020526
 8003ae0:	08020528 	.word	0x08020528
 8003ae4:	0802052c 	.word	0x0802052c
 8003ae8:	0802062a 	.word	0x0802062a
 8003aec:	0802062f 	.word	0x0802062f
 8003af0:	08020530 	.word	0x08020530
 8003af4:	08020532 	.word	0x08020532
 8003af8:	08020534 	.word	0x08020534

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8003afc:	490a      	ldr	r1, [pc, #40]	; (8003b28 <OTM8009A_Init+0x484>)
 8003afe:	2000      	movs	r0, #0
 8003b00:	f7fc ff90 	bl	8000a24 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8003b04:	4909      	ldr	r1, [pc, #36]	; (8003b2c <OTM8009A_Init+0x488>)
 8003b06:	2000      	movs	r0, #0
 8003b08:	f7fc ff8c 	bl	8000a24 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003b0c:	4908      	ldr	r1, [pc, #32]	; (8003b30 <OTM8009A_Init+0x48c>)
 8003b0e:	2000      	movs	r0, #0
 8003b10:	f7fc ff88 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8003b14:	4907      	ldr	r1, [pc, #28]	; (8003b34 <OTM8009A_Init+0x490>)
 8003b16:	2000      	movs	r0, #0
 8003b18:	f7fc ff84 	bl	8000a24 <DSI_IO_WriteCmd>

  return 0;
}
 8003b1c:	2000      	movs	r0, #0
 8003b1e:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8003b20:	4905      	ldr	r1, [pc, #20]	; (8003b38 <OTM8009A_Init+0x494>)
 8003b22:	4620      	mov	r0, r4
 8003b24:	e739      	b.n	800399a <OTM8009A_Init+0x2f6>
 8003b26:	bf00      	nop
 8003b28:	08020536 	.word	0x08020536
 8003b2c:	08020538 	.word	0x08020538
 8003b30:	080204ec 	.word	0x080204ec
 8003b34:	0802053a 	.word	0x0802053a
 8003b38:	0802052a 	.word	0x0802052a

08003b3c <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8003b3c:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8003b3e:	4d2f      	ldr	r5, [pc, #188]	; (8003bfc <I2C1_Init+0xc0>)
{
 8003b40:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8003b42:	4628      	mov	r0, r5
 8003b44:	f002 fa74 	bl	8006030 <HAL_I2C_GetState>
 8003b48:	4604      	mov	r4, r0
 8003b4a:	2800      	cmp	r0, #0
 8003b4c:	d154      	bne.n	8003bf8 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003b4e:	4a2c      	ldr	r2, [pc, #176]	; (8003c00 <I2C1_Init+0xc4>)
 8003b50:	4b2c      	ldr	r3, [pc, #176]	; (8003c04 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003b52:	4e2d      	ldr	r6, [pc, #180]	; (8003c08 <I2C1_Init+0xcc>)
 8003b54:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003b56:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003b5a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8003b5e:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8003b62:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003b66:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003b6a:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003b6c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8003b6e:	f043 0302 	orr.w	r3, r3, #2
 8003b72:	6333      	str	r3, [r6, #48]	; 0x30
 8003b74:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8003b76:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003b78:	f003 0302 	and.w	r3, r3, #2
 8003b7c:	9301      	str	r3, [sp, #4]
 8003b7e:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8003b80:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003b84:	2312      	movs	r3, #18
 8003b86:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8003b8a:	2002      	movs	r0, #2
 8003b8c:	2304      	movs	r3, #4
 8003b8e:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003b92:	a903      	add	r1, sp, #12
 8003b94:	481d      	ldr	r0, [pc, #116]	; (8003c0c <I2C1_Init+0xd0>)
 8003b96:	f001 fc79 	bl	800548c <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003b9a:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003b9e:	a903      	add	r1, sp, #12
 8003ba0:	481a      	ldr	r0, [pc, #104]	; (8003c0c <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8003ba2:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003ba4:	f001 fc72 	bl	800548c <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8003ba8:	9402      	str	r4, [sp, #8]
 8003baa:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003bac:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003bb0:	6433      	str	r3, [r6, #64]	; 0x40
 8003bb2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8003bb4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003bb8:	9302      	str	r3, [sp, #8]
 8003bba:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8003bbc:	6a33      	ldr	r3, [r6, #32]
 8003bbe:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003bc2:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8003bc4:	6a33      	ldr	r3, [r6, #32]
 8003bc6:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003bca:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8003bcc:	4622      	mov	r2, r4
 8003bce:	2105      	movs	r1, #5
 8003bd0:	201f      	movs	r0, #31
 8003bd2:	f000 fd15 	bl	8004600 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8003bd6:	201f      	movs	r0, #31
 8003bd8:	f000 fd44 	bl	8004664 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003bdc:	4622      	mov	r2, r4
 8003bde:	2105      	movs	r1, #5
 8003be0:	2020      	movs	r0, #32
 8003be2:	f000 fd0d 	bl	8004600 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8003be6:	2020      	movs	r0, #32
 8003be8:	f000 fd3c 	bl	8004664 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8003bec:	4628      	mov	r0, r5
  }
}
 8003bee:	b008      	add	sp, #32
 8003bf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8003bf4:	f001 bfc2 	b.w	8005b7c <HAL_I2C_Init>
}
 8003bf8:	b008      	add	sp, #32
 8003bfa:	bd70      	pop	{r4, r5, r6, pc}
 8003bfc:	20004420 	.word	0x20004420
 8003c00:	40005400 	.word	0x40005400
 8003c04:	00061a80 	.word	0x00061a80
 8003c08:	40023800 	.word	0x40023800
 8003c0c:	40020400 	.word	0x40020400

08003c10 <BSP_PB_Init>:
{
 8003c10:	b510      	push	{r4, lr}
 8003c12:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8003c14:	4b18      	ldr	r3, [pc, #96]	; (8003c78 <BSP_PB_Init+0x68>)
 8003c16:	2400      	movs	r4, #0
 8003c18:	9400      	str	r4, [sp, #0]
 8003c1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003c1c:	f042 0201 	orr.w	r2, r2, #1
 8003c20:	631a      	str	r2, [r3, #48]	; 0x30
 8003c22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c24:	f003 0301 	and.w	r3, r3, #1
 8003c28:	9300      	str	r3, [sp, #0]
 8003c2a:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8003c2c:	b969      	cbnz	r1, 8003c4a <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003c2e:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8003c30:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003c34:	2302      	movs	r3, #2
 8003c36:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c38:	4b10      	ldr	r3, [pc, #64]	; (8003c7c <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003c3a:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c3c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003c40:	a901      	add	r1, sp, #4
 8003c42:	f001 fc23 	bl	800548c <HAL_GPIO_Init>
}
 8003c46:	b006      	add	sp, #24
 8003c48:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003c4a:	2901      	cmp	r1, #1
 8003c4c:	d1fb      	bne.n	8003c46 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003c4e:	2302      	movs	r3, #2
 8003c50:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8003c52:	4b0b      	ldr	r3, [pc, #44]	; (8003c80 <BSP_PB_Init+0x70>)
 8003c54:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c56:	4b09      	ldr	r3, [pc, #36]	; (8003c7c <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003c58:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c5a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003c5e:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003c60:	a901      	add	r1, sp, #4
 8003c62:	f001 fc13 	bl	800548c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003c66:	4622      	mov	r2, r4
 8003c68:	210f      	movs	r1, #15
 8003c6a:	2006      	movs	r0, #6
 8003c6c:	f000 fcc8 	bl	8004600 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8003c70:	2006      	movs	r0, #6
 8003c72:	f000 fcf7 	bl	8004664 <HAL_NVIC_EnableIRQ>
}
 8003c76:	e7e6      	b.n	8003c46 <BSP_PB_Init+0x36>
 8003c78:	40023800 	.word	0x40023800
 8003c7c:	20000048 	.word	0x20000048
 8003c80:	10110000 	.word	0x10110000

08003c84 <BSP_PB_GetState>:
{
 8003c84:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8003c86:	4b03      	ldr	r3, [pc, #12]	; (8003c94 <BSP_PB_GetState+0x10>)
 8003c88:	2101      	movs	r1, #1
 8003c8a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8003c8e:	f001 fd87 	bl	80057a0 <HAL_GPIO_ReadPin>
}
 8003c92:	bd08      	pop	{r3, pc}
 8003c94:	20000048 	.word	0x20000048

08003c98 <TS_IO_Init>:
 8003c98:	f7ff bf50 	b.w	8003b3c <I2C1_Init>

08003c9c <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8003c9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8003c9e:	2301      	movs	r3, #1
 8003ca0:	f88d 2017 	strb.w	r2, [sp, #23]
 8003ca4:	2264      	movs	r2, #100	; 0x64
 8003ca6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003caa:	f10d 0217 	add.w	r2, sp, #23
 8003cae:	9200      	str	r2, [sp, #0]
 8003cb0:	460a      	mov	r2, r1
 8003cb2:	4601      	mov	r1, r0
 8003cb4:	4805      	ldr	r0, [pc, #20]	; (8003ccc <TS_IO_Write+0x30>)
 8003cb6:	f002 f823 	bl	8005d00 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8003cba:	b120      	cbz	r0, 8003cc6 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8003cbc:	4803      	ldr	r0, [pc, #12]	; (8003ccc <TS_IO_Write+0x30>)
 8003cbe:	f002 f805 	bl	8005ccc <HAL_I2C_DeInit>
  I2C1_Init();
 8003cc2:	f7ff ff3b 	bl	8003b3c <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8003cc6:	b007      	add	sp, #28
 8003cc8:	f85d fb04 	ldr.w	pc, [sp], #4
 8003ccc:	20004420 	.word	0x20004420

08003cd0 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8003cd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8003cd2:	2300      	movs	r3, #0
{
 8003cd4:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8003cd6:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003cda:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003cde:	2301      	movs	r3, #1
 8003ce0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003ce4:	f10d 0117 	add.w	r1, sp, #23
 8003ce8:	9100      	str	r1, [sp, #0]
 8003cea:	4601      	mov	r1, r0
 8003cec:	4806      	ldr	r0, [pc, #24]	; (8003d08 <TS_IO_Read+0x38>)
 8003cee:	f002 f897 	bl	8005e20 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003cf2:	b120      	cbz	r0, 8003cfe <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8003cf4:	4804      	ldr	r0, [pc, #16]	; (8003d08 <TS_IO_Read+0x38>)
 8003cf6:	f001 ffe9 	bl	8005ccc <HAL_I2C_DeInit>
  I2C1_Init();
 8003cfa:	f7ff ff1f 	bl	8003b3c <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8003cfe:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8003d02:	b007      	add	sp, #28
 8003d04:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d08:	20004420 	.word	0x20004420

08003d0c <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8003d0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003d0e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8003d12:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003d16:	9200      	str	r2, [sp, #0]
 8003d18:	2301      	movs	r3, #1
 8003d1a:	460a      	mov	r2, r1
 8003d1c:	4601      	mov	r1, r0
 8003d1e:	4806      	ldr	r0, [pc, #24]	; (8003d38 <TS_IO_ReadMultiple+0x2c>)
 8003d20:	f002 f87e 	bl	8005e20 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003d24:	4604      	mov	r4, r0
 8003d26:	b120      	cbz	r0, 8003d32 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8003d28:	4803      	ldr	r0, [pc, #12]	; (8003d38 <TS_IO_ReadMultiple+0x2c>)
 8003d2a:	f001 ffcf 	bl	8005ccc <HAL_I2C_DeInit>
  I2C1_Init();
 8003d2e:	f7ff ff05 	bl	8003b3c <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8003d32:	b2a0      	uxth	r0, r4
 8003d34:	b004      	add	sp, #16
 8003d36:	bd10      	pop	{r4, pc}
 8003d38:	20004420 	.word	0x20004420

08003d3c <OTM8009A_IO_Delay>:
 8003d3c:	f000 bc3a 	b.w	80045b4 <HAL_Delay>

08003d40 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003d40:	b500      	push	{lr}
 8003d42:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d44:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003d48:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003d4a:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8003d4e:	2205      	movs	r2, #5
 8003d50:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003d52:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003d54:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003d56:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003d58:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003d5c:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003d60:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003d64:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003d66:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003d68:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8003d6a:	2210      	movs	r2, #16
 8003d6c:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003d6e:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8003d72:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8003d74:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8003d76:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8003d78:	a906      	add	r1, sp, #24
 8003d7a:	466a      	mov	r2, sp
 8003d7c:	4804      	ldr	r0, [pc, #16]	; (8003d90 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8003d7e:	f002 fcd0 	bl	8006722 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8003d82:	3800      	subs	r0, #0
 8003d84:	bf18      	it	ne
 8003d86:	2001      	movne	r0, #1
 8003d88:	b015      	add	sp, #84	; 0x54
 8003d8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8003d8e:	bf00      	nop
 8003d90:	20004474 	.word	0x20004474

08003d94 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8003d94:	b500      	push	{lr}
 8003d96:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003d98:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003d9c:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8003d9e:	2306      	movs	r3, #6
 8003da0:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003da2:	4817      	ldr	r0, [pc, #92]	; (8003e00 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003da4:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003da6:	f241 3288 	movw	r2, #5000	; 0x1388
 8003daa:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003dac:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003db0:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8003db4:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8003db6:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003db8:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003dba:	f002 fc6e 	bl	800669a <HAL_QSPI_Command>
 8003dbe:	b9e0      	cbnz	r0, 8003dfa <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8003dc0:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8003dc2:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8003dc6:	2201      	movs	r2, #1
 8003dc8:	2310      	movs	r3, #16
 8003dca:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8003dce:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8003dd2:	2305      	movs	r3, #5
 8003dd4:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003dd8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003ddc:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003dde:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003de0:	4807      	ldr	r0, [pc, #28]	; (8003e00 <QSPI_WriteEnable.constprop.0+0x6c>)
 8003de2:	f241 3388 	movw	r3, #5000	; 0x1388
 8003de6:	466a      	mov	r2, sp
 8003de8:	a906      	add	r1, sp, #24
 8003dea:	f002 fc9a 	bl	8006722 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8003dee:	3800      	subs	r0, #0
 8003df0:	bf18      	it	ne
 8003df2:	2001      	movne	r0, #1
}
 8003df4:	b015      	add	sp, #84	; 0x54
 8003df6:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8003dfa:	2001      	movs	r0, #1
 8003dfc:	e7fa      	b.n	8003df4 <QSPI_WriteEnable.constprop.0+0x60>
 8003dfe:	bf00      	nop
 8003e00:	20004474 	.word	0x20004474

08003e04 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003e04:	b500      	push	{lr}
 8003e06:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003e08:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003e0c:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8003e0e:	23eb      	movs	r3, #235	; 0xeb
 8003e10:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8003e12:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003e16:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003e18:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003e1c:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8003e1e:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8003e22:	2300      	movs	r3, #0
 8003e24:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003e28:	220a      	movs	r2, #10
 8003e2a:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e2c:	a902      	add	r1, sp, #8
 8003e2e:	466a      	mov	r2, sp
 8003e30:	4806      	ldr	r0, [pc, #24]	; (8003e4c <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003e32:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003e34:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003e38:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003e3a:	f002 fcc2 	bl	80067c2 <HAL_QSPI_MemoryMapped>
}
 8003e3e:	3800      	subs	r0, #0
 8003e40:	bf18      	it	ne
 8003e42:	2001      	movne	r0, #1
 8003e44:	b011      	add	sp, #68	; 0x44
 8003e46:	f85d fb04 	ldr.w	pc, [sp], #4
 8003e4a:	bf00      	nop
 8003e4c:	20004474 	.word	0x20004474

08003e50 <BSP_QSPI_MspInit>:
{
 8003e50:	b570      	push	{r4, r5, r6, lr}
 8003e52:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003e54:	4b2c      	ldr	r3, [pc, #176]	; (8003f08 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003e56:	482d      	ldr	r0, [pc, #180]	; (8003f0c <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003e58:	2400      	movs	r4, #0
 8003e5a:	9400      	str	r4, [sp, #0]
 8003e5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003e5e:	f042 0202 	orr.w	r2, r2, #2
 8003e62:	639a      	str	r2, [r3, #56]	; 0x38
 8003e64:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003e66:	f002 0202 	and.w	r2, r2, #2
 8003e6a:	9200      	str	r2, [sp, #0]
 8003e6c:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8003e6e:	699a      	ldr	r2, [r3, #24]
 8003e70:	f042 0202 	orr.w	r2, r2, #2
 8003e74:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003e76:	699a      	ldr	r2, [r3, #24]
 8003e78:	f022 0202 	bic.w	r2, r2, #2
 8003e7c:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8003e7e:	9401      	str	r4, [sp, #4]
 8003e80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003e82:	f042 0202 	orr.w	r2, r2, #2
 8003e86:	631a      	str	r2, [r3, #48]	; 0x30
 8003e88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003e8a:	f002 0202 	and.w	r2, r2, #2
 8003e8e:	9201      	str	r2, [sp, #4]
 8003e90:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003e92:	9402      	str	r4, [sp, #8]
 8003e94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003e96:	f042 0220 	orr.w	r2, r2, #32
 8003e9a:	631a      	str	r2, [r3, #48]	; 0x30
 8003e9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003e9e:	f003 0320 	and.w	r3, r3, #32
 8003ea2:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003ea4:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8003ea6:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8003ea8:	2302      	movs	r3, #2
 8003eaa:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8003eae:	2101      	movs	r1, #1
 8003eb0:	2303      	movs	r3, #3
 8003eb2:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003eb6:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003eb8:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003eba:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003ebc:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003ebe:	f001 fae5 	bl	800548c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003ec2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003ec6:	a903      	add	r1, sp, #12
 8003ec8:	4811      	ldr	r0, [pc, #68]	; (8003f10 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8003eca:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8003ecc:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003ece:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8003ed0:	f001 fadc 	bl	800548c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003ed4:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003ed8:	a903      	add	r1, sp, #12
 8003eda:	480d      	ldr	r0, [pc, #52]	; (8003f10 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003edc:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8003ede:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003ee0:	f001 fad4 	bl	800548c <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003ee4:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003ee6:	a903      	add	r1, sp, #12
 8003ee8:	4809      	ldr	r0, [pc, #36]	; (8003f10 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003eea:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003eec:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003eee:	f001 facd 	bl	800548c <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8003ef2:	4622      	mov	r2, r4
 8003ef4:	210f      	movs	r1, #15
 8003ef6:	205b      	movs	r0, #91	; 0x5b
 8003ef8:	f000 fb82 	bl	8004600 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003efc:	205b      	movs	r0, #91	; 0x5b
 8003efe:	f000 fbb1 	bl	8004664 <HAL_NVIC_EnableIRQ>
}
 8003f02:	b008      	add	sp, #32
 8003f04:	bd70      	pop	{r4, r5, r6, pc}
 8003f06:	bf00      	nop
 8003f08:	40023800 	.word	0x40023800
 8003f0c:	40020400 	.word	0x40020400
 8003f10:	40021400 	.word	0x40021400

08003f14 <BSP_QSPI_Init>:
{
 8003f14:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003f16:	4c48      	ldr	r4, [pc, #288]	; (8004038 <BSP_QSPI_Init+0x124>)
 8003f18:	4b48      	ldr	r3, [pc, #288]	; (800403c <BSP_QSPI_Init+0x128>)
 8003f1a:	6023      	str	r3, [r4, #0]
{
 8003f1c:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8003f1e:	4620      	mov	r0, r4
 8003f20:	f002 fba8 	bl	8006674 <HAL_QSPI_DeInit>
 8003f24:	4605      	mov	r5, r0
 8003f26:	b110      	cbz	r0, 8003f2e <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003f28:	2001      	movs	r0, #1
}
 8003f2a:	b011      	add	sp, #68	; 0x44
 8003f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8003f2e:	4601      	mov	r1, r0
 8003f30:	4620      	mov	r0, r4
 8003f32:	f7ff ff8d 	bl	8003e50 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003f36:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003f38:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003f3a:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003f3e:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8003f40:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003f44:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003f48:	fab3 f383 	clz	r3, r3
 8003f4c:	3b01      	subs	r3, #1
 8003f4e:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003f50:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8003f52:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003f56:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003f5a:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8003f5e:	f002 fb35 	bl	80065cc <HAL_QSPI_Init>
 8003f62:	2800      	cmp	r0, #0
 8003f64:	d1e0      	bne.n	8003f28 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003f66:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003f6a:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f6e:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003f72:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003f74:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003f76:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003f78:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f7a:	f241 3288 	movw	r2, #5000	; 0x1388
 8003f7e:	a902      	add	r1, sp, #8
 8003f80:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003f82:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003f84:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f86:	f002 fb88 	bl	800669a <HAL_QSPI_Command>
 8003f8a:	b108      	cbz	r0, 8003f90 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8003f8c:	2004      	movs	r0, #4
 8003f8e:	e7cc      	b.n	8003f2a <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8003f90:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f92:	f241 3288 	movw	r2, #5000	; 0x1388
 8003f96:	a902      	add	r1, sp, #8
 8003f98:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003f9a:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003f9c:	f002 fb7d 	bl	800669a <HAL_QSPI_Command>
 8003fa0:	2800      	cmp	r0, #0
 8003fa2:	d1f3      	bne.n	8003f8c <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8003fa4:	f241 3088 	movw	r0, #5000	; 0x1388
 8003fa8:	f7ff feca 	bl	8003d40 <QSPI_AutoPollingMemReady.constprop.0>
 8003fac:	2800      	cmp	r0, #0
 8003fae:	d1ed      	bne.n	8003f8c <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003fb0:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8003fb4:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003fb8:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003fbc:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8003fbe:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fc0:	f241 3288 	movw	r2, #5000	; 0x1388
 8003fc4:	a902      	add	r1, sp, #8
 8003fc6:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003fc8:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8003fca:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003fcc:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fce:	f002 fb64 	bl	800669a <HAL_QSPI_Command>
 8003fd2:	2800      	cmp	r0, #0
 8003fd4:	d1da      	bne.n	8003f8c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003fd6:	f241 3288 	movw	r2, #5000	; 0x1388
 8003fda:	f10d 0107 	add.w	r1, sp, #7
 8003fde:	4620      	mov	r0, r4
 8003fe0:	f002 fcce 	bl	8006980 <HAL_QSPI_Receive>
 8003fe4:	2800      	cmp	r0, #0
 8003fe6:	d1d1      	bne.n	8003f8c <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003fe8:	f7ff fed4 	bl	8003d94 <QSPI_WriteEnable.constprop.0>
 8003fec:	2800      	cmp	r0, #0
 8003fee:	d1cd      	bne.n	8003f8c <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8003ff0:	2381      	movs	r3, #129	; 0x81
 8003ff2:	9302      	str	r3, [sp, #8]
 8003ff4:	22f0      	movs	r2, #240	; 0xf0
 8003ff6:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003ffa:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8003ffe:	210a      	movs	r1, #10
 8004000:	fab2 f282 	clz	r2, r2
 8004004:	fa01 f202 	lsl.w	r2, r1, r2
 8004008:	f003 030f 	and.w	r3, r3, #15
 800400c:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800400e:	a902      	add	r1, sp, #8
 8004010:	f241 3288 	movw	r2, #5000	; 0x1388
 8004014:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004016:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800401a:	f002 fb3e 	bl	800669a <HAL_QSPI_Command>
 800401e:	2800      	cmp	r0, #0
 8004020:	d1b4      	bne.n	8003f8c <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004022:	f241 3288 	movw	r2, #5000	; 0x1388
 8004026:	f10d 0107 	add.w	r1, sp, #7
 800402a:	4620      	mov	r0, r4
 800402c:	f002 fc4c 	bl	80068c8 <HAL_QSPI_Transmit>
 8004030:	2800      	cmp	r0, #0
 8004032:	f43f af7a 	beq.w	8003f2a <BSP_QSPI_Init+0x16>
 8004036:	e7a9      	b.n	8003f8c <BSP_QSPI_Init+0x78>
 8004038:	20004474 	.word	0x20004474
 800403c:	a0001000 	.word	0xa0001000

08004040 <BSP_QSPI_MspDeInit>:
{
 8004040:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8004042:	205b      	movs	r0, #91	; 0x5b
 8004044:	f000 fb1c 	bl	8004680 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8004048:	4814      	ldr	r0, [pc, #80]	; (800409c <BSP_QSPI_MspDeInit+0x5c>)
 800404a:	2140      	movs	r1, #64	; 0x40
 800404c:	f001 fb06 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8004050:	4813      	ldr	r0, [pc, #76]	; (80040a0 <BSP_QSPI_MspDeInit+0x60>)
 8004052:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004056:	f001 fb01 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800405a:	4811      	ldr	r0, [pc, #68]	; (80040a0 <BSP_QSPI_MspDeInit+0x60>)
 800405c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004060:	f001 fafc 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8004064:	480e      	ldr	r0, [pc, #56]	; (80040a0 <BSP_QSPI_MspDeInit+0x60>)
 8004066:	f44f 7100 	mov.w	r1, #512	; 0x200
 800406a:	f001 faf7 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800406e:	480c      	ldr	r0, [pc, #48]	; (80040a0 <BSP_QSPI_MspDeInit+0x60>)
 8004070:	2180      	movs	r1, #128	; 0x80
 8004072:	f001 faf3 	bl	800565c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8004076:	480a      	ldr	r0, [pc, #40]	; (80040a0 <BSP_QSPI_MspDeInit+0x60>)
 8004078:	2140      	movs	r1, #64	; 0x40
 800407a:	f001 faef 	bl	800565c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800407e:	4b09      	ldr	r3, [pc, #36]	; (80040a4 <BSP_QSPI_MspDeInit+0x64>)
 8004080:	699a      	ldr	r2, [r3, #24]
 8004082:	f042 0202 	orr.w	r2, r2, #2
 8004086:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004088:	699a      	ldr	r2, [r3, #24]
 800408a:	f022 0202 	bic.w	r2, r2, #2
 800408e:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8004090:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004092:	f022 0202 	bic.w	r2, r2, #2
 8004096:	639a      	str	r2, [r3, #56]	; 0x38
}
 8004098:	bd08      	pop	{r3, pc}
 800409a:	bf00      	nop
 800409c:	40020400 	.word	0x40020400
 80040a0:	40021400 	.word	0x40021400
 80040a4:	40023800 	.word	0x40023800

080040a8 <BSP_QSPI_DeInit>:
{
 80040a8:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80040aa:	4d08      	ldr	r5, [pc, #32]	; (80040cc <BSP_QSPI_DeInit+0x24>)
 80040ac:	4b08      	ldr	r3, [pc, #32]	; (80040d0 <BSP_QSPI_DeInit+0x28>)
 80040ae:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80040b0:	4628      	mov	r0, r5
 80040b2:	f002 fadf 	bl	8006674 <HAL_QSPI_DeInit>
 80040b6:	4604      	mov	r4, r0
 80040b8:	b928      	cbnz	r0, 80040c6 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80040ba:	4601      	mov	r1, r0
 80040bc:	4628      	mov	r0, r5
 80040be:	f7ff ffbf 	bl	8004040 <BSP_QSPI_MspDeInit>
}
 80040c2:	4620      	mov	r0, r4
 80040c4:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80040c6:	2401      	movs	r4, #1
 80040c8:	e7fb      	b.n	80040c2 <BSP_QSPI_DeInit+0x1a>
 80040ca:	bf00      	nop
 80040cc:	20004474 	.word	0x20004474
 80040d0:	a0001000 	.word	0xa0001000

080040d4 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80040d4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80040d8:	4c21      	ldr	r4, [pc, #132]	; (8004160 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80040da:	4d22      	ldr	r5, [pc, #136]	; (8004164 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80040dc:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80040de:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80040e2:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80040e4:	4621      	mov	r1, r4
{
 80040e6:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80040e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80040ec:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80040ee:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80040f2:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80040f6:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80040fa:	f003 f8b5 	bl	8007268 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80040fe:	4630      	mov	r0, r6
 8004100:	f000 fa58 	bl	80045b4 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8004104:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004106:	4621      	mov	r1, r4
 8004108:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800410c:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800410e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8004112:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004116:	f003 f8a7 	bl	8007268 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800411a:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800411c:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004120:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8004122:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004124:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004128:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800412a:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800412e:	f003 f89b 	bl	8007268 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8004132:	f44f 730c 	mov.w	r3, #560	; 0x230
 8004136:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8004138:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800413a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800413e:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8004140:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8004142:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004144:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004148:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800414a:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800414c:	f003 f88c 	bl	8007268 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8004150:	4649      	mov	r1, r9
 8004152:	4628      	mov	r0, r5
}
 8004154:	b003      	add	sp, #12
 8004156:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800415a:	f003 b89c 	b.w	8007296 <HAL_SDRAM_ProgramRefreshRate>
 800415e:	bf00      	nop
 8004160:	200044c0 	.word	0x200044c0
 8004164:	200045ac 	.word	0x200045ac

08004168 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8004168:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800416a:	4606      	mov	r6, r0
{
 800416c:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800416e:	2800      	cmp	r0, #0
 8004170:	f000 80bd 	beq.w	80042ee <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8004174:	4b5f      	ldr	r3, [pc, #380]	; (80042f4 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8004176:	4860      	ldr	r0, [pc, #384]	; (80042f8 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8004178:	4c60      	ldr	r4, [pc, #384]	; (80042fc <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 800417a:	2500      	movs	r5, #0
 800417c:	9500      	str	r5, [sp, #0]
 800417e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004180:	f042 0201 	orr.w	r2, r2, #1
 8004184:	639a      	str	r2, [r3, #56]	; 0x38
 8004186:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004188:	f002 0201 	and.w	r2, r2, #1
 800418c:	9200      	str	r2, [sp, #0]
 800418e:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8004190:	9501      	str	r5, [sp, #4]
 8004192:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004194:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8004198:	631a      	str	r2, [r3, #48]	; 0x30
 800419a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800419c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80041a0:	9201      	str	r2, [sp, #4]
 80041a2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80041a4:	9502      	str	r5, [sp, #8]
 80041a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041a8:	f042 0204 	orr.w	r2, r2, #4
 80041ac:	631a      	str	r2, [r3, #48]	; 0x30
 80041ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041b0:	f002 0204 	and.w	r2, r2, #4
 80041b4:	9202      	str	r2, [sp, #8]
 80041b6:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80041b8:	9503      	str	r5, [sp, #12]
 80041ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041bc:	f042 0208 	orr.w	r2, r2, #8
 80041c0:	631a      	str	r2, [r3, #48]	; 0x30
 80041c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041c4:	f002 0208 	and.w	r2, r2, #8
 80041c8:	9203      	str	r2, [sp, #12]
 80041ca:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80041cc:	9504      	str	r5, [sp, #16]
 80041ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041d0:	f042 0210 	orr.w	r2, r2, #16
 80041d4:	631a      	str	r2, [r3, #48]	; 0x30
 80041d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041d8:	f002 0210 	and.w	r2, r2, #16
 80041dc:	9204      	str	r2, [sp, #16]
 80041de:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80041e0:	9505      	str	r5, [sp, #20]
 80041e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041e4:	f042 0220 	orr.w	r2, r2, #32
 80041e8:	631a      	str	r2, [r3, #48]	; 0x30
 80041ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041ec:	f002 0220 	and.w	r2, r2, #32
 80041f0:	9205      	str	r2, [sp, #20]
 80041f2:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80041f4:	9506      	str	r5, [sp, #24]
 80041f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80041f8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80041fc:	631a      	str	r2, [r3, #48]	; 0x30
 80041fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004200:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004204:	9206      	str	r2, [sp, #24]
 8004206:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8004208:	9507      	str	r5, [sp, #28]
 800420a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800420c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004210:	631a      	str	r2, [r3, #48]	; 0x30
 8004212:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004214:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004218:	9207      	str	r2, [sp, #28]
 800421a:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800421c:	9508      	str	r5, [sp, #32]
 800421e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004220:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004224:	631a      	str	r2, [r3, #48]	; 0x30
 8004226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004228:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800422c:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800422e:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004230:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8004232:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8004234:	2301      	movs	r3, #1
 8004236:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800423a:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 800423c:	220c      	movs	r2, #12
 800423e:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8004240:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8004242:	f001 f923 	bl	800548c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8004246:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800424a:	482d      	ldr	r0, [pc, #180]	; (8004300 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800424c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800424e:	a909      	add	r1, sp, #36	; 0x24
 8004250:	f001 f91c 	bl	800548c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8004254:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8004258:	482a      	ldr	r0, [pc, #168]	; (8004304 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800425a:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800425c:	a909      	add	r1, sp, #36	; 0x24
 800425e:	f001 f915 	bl	800548c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004262:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8004266:	4828      	ldr	r0, [pc, #160]	; (8004308 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004268:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800426a:	a909      	add	r1, sp, #36	; 0x24
 800426c:	f001 f90e 	bl	800548c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8004270:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004274:	4825      	ldr	r0, [pc, #148]	; (800430c <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8004276:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004278:	a909      	add	r1, sp, #36	; 0x24
 800427a:	f001 f907 	bl	800548c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800427e:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004282:	4823      	ldr	r0, [pc, #140]	; (8004310 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8004284:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004286:	a909      	add	r1, sp, #36	; 0x24
 8004288:	f001 f900 	bl	800548c <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800428c:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004290:	4820      	ldr	r0, [pc, #128]	; (8004314 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8004292:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004294:	a909      	add	r1, sp, #36	; 0x24
 8004296:	f001 f8f9 	bl	800548c <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 800429a:	2280      	movs	r2, #128	; 0x80
 800429c:	f44f 7300 	mov.w	r3, #512	; 0x200
 80042a0:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80042a4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80042a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80042ac:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80042b0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80042b4:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80042b8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 80042bc:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80042c0:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 80042c2:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80042c6:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80042c8:	4b13      	ldr	r3, [pc, #76]	; (8004318 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80042ca:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80042cc:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80042ce:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80042d0:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80042d2:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80042d4:	f000 fa8e 	bl	80047f4 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80042d8:	4620      	mov	r0, r4
 80042da:	f000 fa0b 	bl	80046f4 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80042de:	2038      	movs	r0, #56	; 0x38
 80042e0:	462a      	mov	r2, r5
 80042e2:	2105      	movs	r1, #5
 80042e4:	f000 f98c 	bl	8004600 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80042e8:	2038      	movs	r0, #56	; 0x38
 80042ea:	f000 f9bb 	bl	8004664 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80042ee:	b00e      	add	sp, #56	; 0x38
 80042f0:	bd70      	pop	{r4, r5, r6, pc}
 80042f2:	bf00      	nop
 80042f4:	40023800 	.word	0x40023800
 80042f8:	40020800 	.word	0x40020800
 80042fc:	2000454c 	.word	0x2000454c
 8004300:	40020c00 	.word	0x40020c00
 8004304:	40021000 	.word	0x40021000
 8004308:	40021400 	.word	0x40021400
 800430c:	40021800 	.word	0x40021800
 8004310:	40021c00 	.word	0x40021c00
 8004314:	40022000 	.word	0x40022000
 8004318:	40026410 	.word	0x40026410

0800431c <BSP_SDRAM_Init>:
{
 800431c:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800431e:	4c19      	ldr	r4, [pc, #100]	; (8004384 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8004320:	4d19      	ldr	r5, [pc, #100]	; (8004388 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8004322:	4b1a      	ldr	r3, [pc, #104]	; (800438c <BSP_SDRAM_Init+0x70>)
 8004324:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8004326:	2107      	movs	r1, #7
 8004328:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800432a:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 800432c:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8004330:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8004334:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8004338:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800433a:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800433c:	2340      	movs	r3, #64	; 0x40
 800433e:	2220      	movs	r2, #32
 8004340:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8004344:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8004346:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800434a:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800434e:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8004352:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004356:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800435a:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800435c:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8004360:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8004362:	f7ff ff01 	bl	8004168 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8004366:	4629      	mov	r1, r5
 8004368:	4620      	mov	r0, r4
 800436a:	f002 ff4f 	bl	800720c <HAL_SDRAM_Init>
 800436e:	4c08      	ldr	r4, [pc, #32]	; (8004390 <BSP_SDRAM_Init+0x74>)
 8004370:	3800      	subs	r0, #0
 8004372:	bf18      	it	ne
 8004374:	2001      	movne	r0, #1
 8004376:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8004378:	f240 5069 	movw	r0, #1385	; 0x569
 800437c:	f7ff feaa 	bl	80040d4 <BSP_SDRAM_Initialization_sequence>
}
 8004380:	7820      	ldrb	r0, [r4, #0]
 8004382:	bd38      	pop	{r3, r4, r5, pc}
 8004384:	200045ac 	.word	0x200045ac
 8004388:	200044d0 	.word	0x200044d0
 800438c:	a0000140 	.word	0xa0000140
 8004390:	2000004d 	.word	0x2000004d

08004394 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8004394:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8004396:	b148      	cbz	r0, 80043ac <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8004398:	2038      	movs	r0, #56	; 0x38
 800439a:	f000 f971 	bl	8004680 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800439e:	4804      	ldr	r0, [pc, #16]	; (80043b0 <BSP_SDRAM_MspDeInit+0x1c>)
 80043a0:	4b04      	ldr	r3, [pc, #16]	; (80043b4 <BSP_SDRAM_MspDeInit+0x20>)
 80043a2:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80043a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80043a8:	f000 ba24 	b.w	80047f4 <HAL_DMA_DeInit>
}
 80043ac:	bd08      	pop	{r3, pc}
 80043ae:	bf00      	nop
 80043b0:	200044ec 	.word	0x200044ec
 80043b4:	40026410 	.word	0x40026410

080043b8 <BSP_SDRAM_DeInit>:
{
 80043b8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80043ba:	4c07      	ldr	r4, [pc, #28]	; (80043d8 <BSP_SDRAM_DeInit+0x20>)
 80043bc:	4b07      	ldr	r3, [pc, #28]	; (80043dc <BSP_SDRAM_DeInit+0x24>)
 80043be:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 80043c0:	4620      	mov	r0, r4
 80043c2:	f002 ff43 	bl	800724c <HAL_SDRAM_DeInit>
 80043c6:	4d06      	ldr	r5, [pc, #24]	; (80043e0 <BSP_SDRAM_DeInit+0x28>)
 80043c8:	4601      	mov	r1, r0
 80043ca:	b918      	cbnz	r0, 80043d4 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80043cc:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80043ce:	4620      	mov	r0, r4
 80043d0:	f7ff ffe0 	bl	8004394 <BSP_SDRAM_MspDeInit>
}
 80043d4:	7828      	ldrb	r0, [r5, #0]
 80043d6:	bd38      	pop	{r3, r4, r5, pc}
 80043d8:	200045ac 	.word	0x200045ac
 80043dc:	a0000140 	.word	0xa0000140
 80043e0:	2000004c 	.word	0x2000004c

080043e4 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80043e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80043e8:	4d16      	ldr	r5, [pc, #88]	; (8004444 <BSP_TS_Init+0x60>)
 80043ea:	4c17      	ldr	r4, [pc, #92]	; (8004448 <BSP_TS_Init+0x64>)
 80043ec:	682b      	ldr	r3, [r5, #0]
{
 80043ee:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80043f0:	7820      	ldrb	r0, [r4, #0]
{
 80043f2:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80043f4:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80043f6:	686b      	ldr	r3, [r5, #4]
 80043f8:	2054      	movs	r0, #84	; 0x54
 80043fa:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80043fc:	b2c0      	uxtb	r0, r0
 80043fe:	2811      	cmp	r0, #17
 8004400:	d00a      	beq.n	8004418 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8004402:	686b      	ldr	r3, [r5, #4]
 8004404:	2070      	movs	r0, #112	; 0x70
 8004406:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004408:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800440a:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800440c:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800440e:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8004410:	d004      	beq.n	800441c <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8004412:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8004414:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8004418:	2354      	movs	r3, #84	; 0x54
 800441a:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 800441c:	4b0b      	ldr	r3, [pc, #44]	; (800444c <BSP_TS_Init+0x68>)
 800441e:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8004450 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8004422:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8004424:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8004428:	42be      	cmp	r6, r7
 800442a:	bf34      	ite	cc
 800442c:	2601      	movcc	r6, #1
 800442e:	260c      	movcs	r6, #12
 8004430:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8004432:	68ab      	ldr	r3, [r5, #8]
 8004434:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8004436:	f8d8 3000 	ldr.w	r3, [r8]
 800443a:	7820      	ldrb	r0, [r4, #0]
 800443c:	68db      	ldr	r3, [r3, #12]
 800443e:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8004440:	2000      	movs	r0, #0
 8004442:	e7e7      	b.n	8004414 <BSP_TS_Init+0x30>
 8004444:	20000020 	.word	0x20000020
 8004448:	200045e0 	.word	0x200045e0
 800444c:	200045f8 	.word	0x200045f8
 8004450:	200045f4 	.word	0x200045f4

08004454 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8004454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004458:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8004538 <BSP_TS_GetState+0xe4>
 800445c:	4a33      	ldr	r2, [pc, #204]	; (800452c <BSP_TS_GetState+0xd8>)
 800445e:	f8db 3000 	ldr.w	r3, [fp]
{
 8004462:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8004464:	691b      	ldr	r3, [r3, #16]
 8004466:	7810      	ldrb	r0, [r2, #0]
{
 8004468:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800446a:	4798      	blx	r3
 800446c:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800446e:	b158      	cbz	r0, 8004488 <BSP_TS_GetState+0x34>
 8004470:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800453c <BSP_TS_GetState+0xe8>
 8004474:	4f2e      	ldr	r7, [pc, #184]	; (8004530 <BSP_TS_GetState+0xdc>)
 8004476:	f106 0a02 	add.w	sl, r6, #2
 800447a:	ad03      	add	r5, sp, #12
 800447c:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800447e:	f04f 0900 	mov.w	r9, #0
 8004482:	7833      	ldrb	r3, [r6, #0]
 8004484:	454b      	cmp	r3, r9
 8004486:	d803      	bhi.n	8004490 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8004488:	2000      	movs	r0, #0
 800448a:	b005      	add	sp, #20
 800448c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8004490:	f8db 3000 	ldr.w	r3, [fp]
 8004494:	4825      	ldr	r0, [pc, #148]	; (800452c <BSP_TS_GetState+0xd8>)
 8004496:	695b      	ldr	r3, [r3, #20]
 8004498:	7800      	ldrb	r0, [r0, #0]
 800449a:	9101      	str	r1, [sp, #4]
 800449c:	462a      	mov	r2, r5
 800449e:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 80044a0:	4b24      	ldr	r3, [pc, #144]	; (8004534 <BSP_TS_GetState+0xe0>)
 80044a2:	9901      	ldr	r1, [sp, #4]
 80044a4:	781b      	ldrb	r3, [r3, #0]
 80044a6:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 80044aa:	bf1f      	itttt	ne
 80044ac:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 80044ae:	8828      	ldrhne	r0, [r5, #0]
 80044b0:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 80044b2:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 80044b4:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 80044b6:	bf41      	itttt	mi
 80044b8:	880a      	ldrhmi	r2, [r1, #0]
 80044ba:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 80044be:	3203      	addmi	r2, #3
 80044c0:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 80044c2:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80044c4:	bf48      	it	mi
 80044c6:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80044c8:	f8d8 2000 	ldr.w	r2, [r8]
 80044cc:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80044d0:	bf42      	ittt	mi
 80044d2:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80044d6:	3301      	addmi	r3, #1
 80044d8:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80044da:	b293      	uxth	r3, r2
 80044dc:	4290      	cmp	r0, r2
 80044de:	bf8c      	ite	hi
 80044e0:	1ac3      	subhi	r3, r0, r3
 80044e2:	1a1b      	subls	r3, r3, r0
 80044e4:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80044e6:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80044ea:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80044ec:	683b      	ldr	r3, [r7, #0]
 80044ee:	b29c      	uxth	r4, r3
 80044f0:	429a      	cmp	r2, r3
 80044f2:	bf88      	it	hi
 80044f4:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 80044f6:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80044f8:	bf98      	it	ls
 80044fa:	1aa4      	subls	r4, r4, r2
 80044fc:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 80044fe:	441c      	add	r4, r3
 8004500:	46c4      	mov	ip, r8
 8004502:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8004504:	bfc8      	it	gt
 8004506:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 800450a:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 800450e:	bfc8      	it	gt
 8004510:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8004512:	46be      	mov	lr, r7
 8004514:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8004518:	f8de 3000 	ldr.w	r3, [lr]
 800451c:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8004520:	f108 0804 	add.w	r8, r8, #4
 8004524:	3704      	adds	r7, #4
 8004526:	f109 0901 	add.w	r9, r9, #1
 800452a:	e7aa      	b.n	8004482 <BSP_TS_GetState+0x2e>
 800452c:	200045e0 	.word	0x200045e0
 8004530:	200045ec 	.word	0x200045ec
 8004534:	200045f8 	.word	0x200045f8
 8004538:	200045f4 	.word	0x200045f4
 800453c:	200045e4 	.word	0x200045e4

08004540 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004540:	4b05      	ldr	r3, [pc, #20]	; (8004558 <SystemInit+0x18>)
 8004542:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8004546:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800454a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800454e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004552:	609a      	str	r2, [r3, #8]
#endif
}
 8004554:	4770      	bx	lr
 8004556:	bf00      	nop
 8004558:	e000ed00 	.word	0xe000ed00

0800455c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800455c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800455e:	4b0b      	ldr	r3, [pc, #44]	; (800458c <HAL_Init+0x30>)
 8004560:	681a      	ldr	r2, [r3, #0]
 8004562:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004566:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8004568:	681a      	ldr	r2, [r3, #0]
 800456a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800456e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004570:	681a      	ldr	r2, [r3, #0]
 8004572:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004576:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004578:	2003      	movs	r0, #3
 800457a:	f000 f82f 	bl	80045dc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800457e:	2000      	movs	r0, #0
 8004580:	f7fd fc8a 	bl	8001e98 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004584:	f7fd fa2a 	bl	80019dc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8004588:	2000      	movs	r0, #0
 800458a:	bd08      	pop	{r3, pc}
 800458c:	40023c00 	.word	0x40023c00

08004590 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8004590:	4a03      	ldr	r2, [pc, #12]	; (80045a0 <HAL_IncTick+0x10>)
 8004592:	4b04      	ldr	r3, [pc, #16]	; (80045a4 <HAL_IncTick+0x14>)
 8004594:	6811      	ldr	r1, [r2, #0]
 8004596:	781b      	ldrb	r3, [r3, #0]
 8004598:	440b      	add	r3, r1
 800459a:	6013      	str	r3, [r2, #0]
}
 800459c:	4770      	bx	lr
 800459e:	bf00      	nop
 80045a0:	200045fc 	.word	0x200045fc
 80045a4:	20000054 	.word	0x20000054

080045a8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80045a8:	4b01      	ldr	r3, [pc, #4]	; (80045b0 <HAL_GetTick+0x8>)
 80045aa:	6818      	ldr	r0, [r3, #0]
}
 80045ac:	4770      	bx	lr
 80045ae:	bf00      	nop
 80045b0:	200045fc 	.word	0x200045fc

080045b4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80045b4:	b538      	push	{r3, r4, r5, lr}
 80045b6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80045b8:	f7ff fff6 	bl	80045a8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80045bc:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80045be:	bf1c      	itt	ne
 80045c0:	4b05      	ldrne	r3, [pc, #20]	; (80045d8 <HAL_Delay+0x24>)
 80045c2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80045c4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80045c6:	bf18      	it	ne
 80045c8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80045ca:	f7ff ffed 	bl	80045a8 <HAL_GetTick>
 80045ce:	1b43      	subs	r3, r0, r5
 80045d0:	42a3      	cmp	r3, r4
 80045d2:	d3fa      	bcc.n	80045ca <HAL_Delay+0x16>
  {
  }
}
 80045d4:	bd38      	pop	{r3, r4, r5, pc}
 80045d6:	bf00      	nop
 80045d8:	20000054 	.word	0x20000054

080045dc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80045dc:	4907      	ldr	r1, [pc, #28]	; (80045fc <HAL_NVIC_SetPriorityGrouping+0x20>)
 80045de:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80045e0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80045e4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80045e6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80045e8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80045ec:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80045ee:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80045f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80045f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80045f8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80045fa:	4770      	bx	lr
 80045fc:	e000ed00 	.word	0xe000ed00

08004600 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004600:	4b16      	ldr	r3, [pc, #88]	; (800465c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004602:	b530      	push	{r4, r5, lr}
 8004604:	68dc      	ldr	r4, [r3, #12]
 8004606:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800460a:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800460e:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004610:	2d04      	cmp	r5, #4
 8004612:	bf28      	it	cs
 8004614:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004616:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004618:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800461c:	bf8c      	ite	hi
 800461e:	3c03      	subhi	r4, #3
 8004620:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004622:	fa03 f505 	lsl.w	r5, r3, r5
 8004626:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800462a:	40a3      	lsls	r3, r4
 800462c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004630:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8004632:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004634:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004638:	bfac      	ite	ge
 800463a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800463e:	4a08      	ldrlt	r2, [pc, #32]	; (8004660 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004640:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004644:	bfb8      	it	lt
 8004646:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800464a:	b2db      	uxtb	r3, r3
 800464c:	bfaa      	itet	ge
 800464e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004652:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004654:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004658:	bd30      	pop	{r4, r5, pc}
 800465a:	bf00      	nop
 800465c:	e000ed00 	.word	0xe000ed00
 8004660:	e000ed14 	.word	0xe000ed14

08004664 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004664:	2800      	cmp	r0, #0
 8004666:	db08      	blt.n	800467a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004668:	0942      	lsrs	r2, r0, #5
 800466a:	2301      	movs	r3, #1
 800466c:	f000 001f 	and.w	r0, r0, #31
 8004670:	fa03 f000 	lsl.w	r0, r3, r0
 8004674:	4b01      	ldr	r3, [pc, #4]	; (800467c <HAL_NVIC_EnableIRQ+0x18>)
 8004676:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800467a:	4770      	bx	lr
 800467c:	e000e100 	.word	0xe000e100

08004680 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004680:	2800      	cmp	r0, #0
 8004682:	db0d      	blt.n	80046a0 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004684:	0943      	lsrs	r3, r0, #5
 8004686:	2201      	movs	r2, #1
 8004688:	f000 001f 	and.w	r0, r0, #31
 800468c:	fa02 f000 	lsl.w	r0, r2, r0
 8004690:	3320      	adds	r3, #32
 8004692:	4a04      	ldr	r2, [pc, #16]	; (80046a4 <HAL_NVIC_DisableIRQ+0x24>)
 8004694:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004698:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800469c:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80046a0:	4770      	bx	lr
 80046a2:	bf00      	nop
 80046a4:	e000e100 	.word	0xe000e100

080046a8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80046a8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80046aa:	4604      	mov	r4, r0
 80046ac:	b150      	cbz	r0, 80046c4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80046ae:	7943      	ldrb	r3, [r0, #5]
 80046b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80046b4:	b913      	cbnz	r3, 80046bc <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80046b6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80046b8:	f7fd f9b0 	bl	8001a1c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80046bc:	2301      	movs	r3, #1
 80046be:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80046c0:	2000      	movs	r0, #0
}
 80046c2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80046c4:	2001      	movs	r0, #1
 80046c6:	e7fc      	b.n	80046c2 <HAL_CRC_Init+0x1a>

080046c8 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80046c8:	6803      	ldr	r3, [r0, #0]
{
 80046ca:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80046cc:	4c08      	ldr	r4, [pc, #32]	; (80046f0 <DMA_CalcBaseAndBitshift+0x28>)
{
 80046ce:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80046d0:	b2d9      	uxtb	r1, r3
 80046d2:	3910      	subs	r1, #16
 80046d4:	2018      	movs	r0, #24
 80046d6:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80046da:	5c20      	ldrb	r0, [r4, r0]
 80046dc:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80046de:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 80046e2:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 80046e6:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80046e8:	bf88      	it	hi
 80046ea:	3004      	addhi	r0, #4
 80046ec:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 80046ee:	bd10      	pop	{r4, pc}
 80046f0:	08020699 	.word	0x08020699

080046f4 <HAL_DMA_Init>:
{
 80046f4:	b570      	push	{r4, r5, r6, lr}
 80046f6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80046f8:	f7ff ff56 	bl	80045a8 <HAL_GetTick>
 80046fc:	4605      	mov	r5, r0
  if(hdma == NULL)
 80046fe:	2c00      	cmp	r4, #0
 8004700:	d073      	beq.n	80047ea <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 8004702:	2300      	movs	r3, #0
 8004704:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8004708:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 800470a:	2302      	movs	r3, #2
 800470c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8004710:	6813      	ldr	r3, [r2, #0]
 8004712:	f023 0301 	bic.w	r3, r3, #1
 8004716:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004718:	6821      	ldr	r1, [r4, #0]
 800471a:	680b      	ldr	r3, [r1, #0]
 800471c:	07d8      	lsls	r0, r3, #31
 800471e:	d42f      	bmi.n	8004780 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8004720:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004722:	4d33      	ldr	r5, [pc, #204]	; (80047f0 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8004724:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8004726:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004728:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800472c:	4313      	orrs	r3, r2
 800472e:	68e2      	ldr	r2, [r4, #12]
 8004730:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8004732:	6922      	ldr	r2, [r4, #16]
 8004734:	4313      	orrs	r3, r2
 8004736:	6962      	ldr	r2, [r4, #20]
 8004738:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800473a:	69e2      	ldr	r2, [r4, #28]
 800473c:	4303      	orrs	r3, r0
 800473e:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8004740:	6a22      	ldr	r2, [r4, #32]
 8004742:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004744:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004746:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8004748:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800474c:	bf02      	ittt	eq
 800474e:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8004752:	4335      	orreq	r5, r6
 8004754:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8004756:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8004758:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800475a:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800475c:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8004760:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8004764:	d133      	bne.n	80047ce <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8004766:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8004768:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800476a:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800476c:	b37d      	cbz	r5, 80047ce <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800476e:	b990      	cbnz	r0, 8004796 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8004770:	2a01      	cmp	r2, #1
 8004772:	d021      	beq.n	80047b8 <HAL_DMA_Init+0xc4>
 8004774:	f032 0202 	bics.w	r2, r2, #2
 8004778:	d129      	bne.n	80047ce <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800477a:	01ea      	lsls	r2, r5, #7
 800477c:	d527      	bpl.n	80047ce <HAL_DMA_Init+0xda>
 800477e:	e01e      	b.n	80047be <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8004780:	f7ff ff12 	bl	80045a8 <HAL_GetTick>
 8004784:	1b40      	subs	r0, r0, r5
 8004786:	2805      	cmp	r0, #5
 8004788:	d9c6      	bls.n	8004718 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800478a:	2320      	movs	r3, #32
 800478c:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800478e:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8004790:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8004794:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8004796:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800479a:	d114      	bne.n	80047c6 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800479c:	2a03      	cmp	r2, #3
 800479e:	d816      	bhi.n	80047ce <HAL_DMA_Init+0xda>
 80047a0:	a001      	add	r0, pc, #4	; (adr r0, 80047a8 <HAL_DMA_Init+0xb4>)
 80047a2:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 80047a6:	bf00      	nop
 80047a8:	080047bf 	.word	0x080047bf
 80047ac:	0800477b 	.word	0x0800477b
 80047b0:	080047bf 	.word	0x080047bf
 80047b4:	080047b9 	.word	0x080047b9
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80047b8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80047bc:	d107      	bne.n	80047ce <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80047be:	2340      	movs	r3, #64	; 0x40
 80047c0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80047c2:	2001      	movs	r0, #1
 80047c4:	e7e4      	b.n	8004790 <HAL_DMA_Init+0x9c>
    switch (tmp)
 80047c6:	2a02      	cmp	r2, #2
 80047c8:	d9f9      	bls.n	80047be <HAL_DMA_Init+0xca>
 80047ca:	2a03      	cmp	r2, #3
 80047cc:	d0d5      	beq.n	800477a <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 80047ce:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80047d0:	4620      	mov	r0, r4
 80047d2:	f7ff ff79 	bl	80046c8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80047d6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80047d8:	233f      	movs	r3, #63	; 0x3f
 80047da:	4093      	lsls	r3, r2
 80047dc:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80047de:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80047e0:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80047e2:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80047e4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80047e8:	e7d4      	b.n	8004794 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 80047ea:	2001      	movs	r0, #1
 80047ec:	e7d2      	b.n	8004794 <HAL_DMA_Init+0xa0>
 80047ee:	bf00      	nop
 80047f0:	f010803f 	.word	0xf010803f

080047f4 <HAL_DMA_DeInit>:
{
 80047f4:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 80047f6:	4605      	mov	r5, r0
 80047f8:	b320      	cbz	r0, 8004844 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80047fa:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80047fe:	2b02      	cmp	r3, #2
 8004800:	b2dc      	uxtb	r4, r3
 8004802:	d01d      	beq.n	8004840 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8004804:	6803      	ldr	r3, [r0, #0]
 8004806:	681a      	ldr	r2, [r3, #0]
 8004808:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800480c:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800480e:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8004810:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8004812:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8004814:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8004816:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8004818:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800481a:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800481c:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800481e:	f7ff ff53 	bl	80046c8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004822:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8004824:	233f      	movs	r3, #63	; 0x3f
 8004826:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8004828:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800482c:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8004830:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8004834:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004836:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8004838:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800483c:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8004840:	4620      	mov	r0, r4
 8004842:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004844:	2401      	movs	r4, #1
 8004846:	e7fb      	b.n	8004840 <HAL_DMA_DeInit+0x4c>

08004848 <HAL_DMA_Abort>:
{
 8004848:	b570      	push	{r4, r5, r6, lr}
 800484a:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800484c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800484e:	f7ff feab 	bl	80045a8 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8004852:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8004856:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8004858:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800485a:	d006      	beq.n	800486a <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800485c:	2380      	movs	r3, #128	; 0x80
 800485e:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8004860:	2300      	movs	r3, #0
 8004862:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8004866:	2001      	movs	r0, #1
}
 8004868:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800486a:	6823      	ldr	r3, [r4, #0]
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	f022 0216 	bic.w	r2, r2, #22
 8004872:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8004874:	695a      	ldr	r2, [r3, #20]
 8004876:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800487a:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800487c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800487e:	b90a      	cbnz	r2, 8004884 <HAL_DMA_Abort+0x3c>
 8004880:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8004882:	b11a      	cbz	r2, 800488c <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8004884:	681a      	ldr	r2, [r3, #0]
 8004886:	f022 0208 	bic.w	r2, r2, #8
 800488a:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800488c:	681a      	ldr	r2, [r3, #0]
 800488e:	f022 0201 	bic.w	r2, r2, #1
 8004892:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8004894:	6823      	ldr	r3, [r4, #0]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	f013 0301 	ands.w	r3, r3, #1
 800489c:	d10a      	bne.n	80048b4 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800489e:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 80048a0:	223f      	movs	r2, #63	; 0x3f
 80048a2:	408a      	lsls	r2, r1
 80048a4:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 80048a6:	2201      	movs	r2, #1
    __HAL_UNLOCK(hdma);
 80048a8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 80048ac:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  return HAL_OK;
 80048b0:	4618      	mov	r0, r3
 80048b2:	e7d9      	b.n	8004868 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80048b4:	f7ff fe78 	bl	80045a8 <HAL_GetTick>
 80048b8:	1b40      	subs	r0, r0, r5
 80048ba:	2805      	cmp	r0, #5
 80048bc:	d9ea      	bls.n	8004894 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80048be:	2320      	movs	r3, #32
 80048c0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80048c2:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 80048c4:	2300      	movs	r3, #0
 80048c6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 80048ca:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        return HAL_TIMEOUT;
 80048ce:	e7cb      	b.n	8004868 <HAL_DMA_Abort+0x20>

080048d0 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 80048d0:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 80048d2:	6804      	ldr	r4, [r0, #0]
 80048d4:	9d04      	ldr	r5, [sp, #16]
 80048d6:	6c66      	ldr	r6, [r4, #68]	; 0x44
 80048d8:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80048dc:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 80048e0:	4333      	orrs	r3, r6
 80048e2:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80048e4:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 80048e6:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80048e8:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80048ec:	d130      	bne.n	8004950 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 80048ee:	6886      	ldr	r6, [r0, #8]
 80048f0:	b11e      	cbz	r6, 80048fa <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 80048f2:	2e01      	cmp	r6, #1
 80048f4:	d103      	bne.n	80048fe <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 80048f6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 80048fa:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 80048fc:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80048fe:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8004900:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8004904:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8004908:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 800490a:	d107      	bne.n	800491c <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 800490c:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 10U);
 800490e:	0aa9      	lsrs	r1, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8004910:	02db      	lsls	r3, r3, #11
 8004912:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
 8004916:	ea43 01d0 	orr.w	r1, r3, r0, lsr #3
 800491a:	e7ee      	b.n	80048fa <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 800491c:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 800491e:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8004922:	d10a      	bne.n	800493a <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8004924:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 11U);
 8004926:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004928:	0289      	lsls	r1, r1, #10
 800492a:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 800492e:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 8004932:	0fd3      	lsrs	r3, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004934:	ea41 31c3 	orr.w	r1, r1, r3, lsl #15
 8004938:	e7df      	b.n	80048fa <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 800493a:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 800493c:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800493e:	0209      	lsls	r1, r1, #8
 8004940:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8004944:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8004948:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800494a:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 800494e:	e7d4      	b.n	80048fa <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8004950:	60e1      	str	r1, [r4, #12]
}
 8004952:	e7d3      	b.n	80048fc <DMA2D_SetConfig+0x2c>

08004954 <HAL_DMA2D_Init>:
{
 8004954:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 8004956:	4604      	mov	r4, r0
 8004958:	b330      	cbz	r0, 80049a8 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 800495a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800495e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004962:	b91b      	cbnz	r3, 800496c <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8004964:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8004968:	f7fd f870 	bl	8001a4c <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800496c:	6822      	ldr	r2, [r4, #0]
 800496e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004970:	2302      	movs	r3, #2
 8004972:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8004976:	6813      	ldr	r3, [r2, #0]
 8004978:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800497c:	430b      	orrs	r3, r1
 800497e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8004980:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8004982:	68a1      	ldr	r1, [r4, #8]
 8004984:	f023 0307 	bic.w	r3, r3, #7
 8004988:	430b      	orrs	r3, r1
 800498a:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800498c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800498e:	68e1      	ldr	r1, [r4, #12]
 8004990:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004994:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004998:	430b      	orrs	r3, r1
 800499a:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800499c:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800499e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80049a0:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80049a2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 80049a6:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80049a8:	2001      	movs	r0, #1
 80049aa:	e7fc      	b.n	80049a6 <HAL_DMA2D_Init+0x52>

080049ac <HAL_DMA2D_Start_IT>:
{
 80049ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 80049ae:	f890 5038 	ldrb.w	r5, [r0, #56]	; 0x38
 80049b2:	2d01      	cmp	r5, #1
{
 80049b4:	4604      	mov	r4, r0
 80049b6:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 80049ba:	d013      	beq.n	80049e4 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80049bc:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80049c0:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80049c2:	9d06      	ldr	r5, [sp, #24]
  __HAL_LOCK(hdma2d);
 80049c4:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 80049c8:	9500      	str	r5, [sp, #0]
 80049ca:	f7ff ff81 	bl	80048d0 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80049ce:	6823      	ldr	r3, [r4, #0]
 80049d0:	681a      	ldr	r2, [r3, #0]
 80049d2:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80049d6:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80049d8:	681a      	ldr	r2, [r3, #0]
 80049da:	4332      	orrs	r2, r6
 80049dc:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80049de:	2000      	movs	r0, #0
}
 80049e0:	b002      	add	sp, #8
 80049e2:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80049e4:	4628      	mov	r0, r5
 80049e6:	e7fb      	b.n	80049e0 <HAL_DMA2D_Start_IT+0x34>

080049e8 <HAL_DMA2D_BlendingStart_IT>:
{
 80049e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80049ea:	4616      	mov	r6, r2
 80049ec:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 80049ee:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80049f2:	2b01      	cmp	r3, #1
{
 80049f4:	4604      	mov	r4, r0
 80049f6:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 80049fa:	d017      	beq.n	8004a2c <HAL_DMA2D_BlendingStart_IT+0x44>
 80049fc:	2301      	movs	r3, #1
 80049fe:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004a02:	6803      	ldr	r3, [r0, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004a04:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004a08:	615e      	str	r6, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8004a0a:	9b07      	ldr	r3, [sp, #28]
 8004a0c:	9300      	str	r3, [sp, #0]
 8004a0e:	9b06      	ldr	r3, [sp, #24]
 8004a10:	f7ff ff5e 	bl	80048d0 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004a14:	6823      	ldr	r3, [r4, #0]
 8004a16:	681a      	ldr	r2, [r3, #0]
 8004a18:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004a1c:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004a1e:	681a      	ldr	r2, [r3, #0]
 8004a20:	f042 0201 	orr.w	r2, r2, #1
 8004a24:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004a26:	2000      	movs	r0, #0
}
 8004a28:	b002      	add	sp, #8
 8004a2a:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004a2c:	4628      	mov	r0, r5
 8004a2e:	e7fb      	b.n	8004a28 <HAL_DMA2D_BlendingStart_IT+0x40>

08004a30 <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004a30:	6802      	ldr	r2, [r0, #0]
{
 8004a32:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004a34:	6813      	ldr	r3, [r2, #0]
 8004a36:	f023 0305 	bic.w	r3, r3, #5
 8004a3a:	f043 0304 	orr.w	r3, r3, #4
 8004a3e:	6013      	str	r3, [r2, #0]
{
 8004a40:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 8004a42:	f7ff fdb1 	bl	80045a8 <HAL_GetTick>
 8004a46:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8004a48:	6822      	ldr	r2, [r4, #0]
 8004a4a:	6813      	ldr	r3, [r2, #0]
 8004a4c:	f013 0301 	ands.w	r3, r3, #1
 8004a50:	d109      	bne.n	8004a66 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004a52:	6811      	ldr	r1, [r2, #0]
 8004a54:	f421 510c 	bic.w	r1, r1, #8960	; 0x2300
 8004a58:	6011      	str	r1, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004a5a:	2201      	movs	r2, #1
 8004a5c:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004a60:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004a64:	e00f      	b.n	8004a86 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004a66:	f7ff fd9f 	bl	80045a8 <HAL_GetTick>
 8004a6a:	1b40      	subs	r0, r0, r5
 8004a6c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004a70:	d9ea      	bls.n	8004a48 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8004a72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004a74:	f043 0320 	orr.w	r3, r3, #32
 8004a78:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 8004a7a:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004a7c:	2303      	movs	r3, #3
 8004a7e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004a82:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 8004a86:	4618      	mov	r0, r3
}
 8004a88:	bd38      	pop	{r3, r4, r5, pc}

08004a8a <HAL_DMA2D_CLUTLoading_Abort>:
{
 8004a8a:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8004a8c:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8004a8e:	682a      	ldr	r2, [r5, #0]
 8004a90:	f042 0204 	orr.w	r2, r2, #4
 8004a94:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8004a96:	2901      	cmp	r1, #1
{
 8004a98:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8004a9a:	bf14      	ite	ne
 8004a9c:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 8004a9e:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 8004aa0:	f7ff fd82 	bl	80045a8 <HAL_GetTick>
 8004aa4:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8004aa6:	682b      	ldr	r3, [r5, #0]
 8004aa8:	f013 0320 	ands.w	r3, r3, #32
 8004aac:	d10a      	bne.n	8004ac4 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8004aae:	6821      	ldr	r1, [r4, #0]
 8004ab0:	680a      	ldr	r2, [r1, #0]
 8004ab2:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8004ab6:	600a      	str	r2, [r1, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004ab8:	2201      	movs	r2, #1
 8004aba:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004abe:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004ac2:	e00f      	b.n	8004ae4 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004ac4:	f7ff fd70 	bl	80045a8 <HAL_GetTick>
 8004ac8:	1b80      	subs	r0, r0, r6
 8004aca:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004ace:	d9ea      	bls.n	8004aa6 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8004ad0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004ad2:	f043 0320 	orr.w	r3, r3, #32
 8004ad6:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 8004ad8:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004ada:	2303      	movs	r3, #3
 8004adc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004ae0:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 8004ae4:	4618      	mov	r0, r3
}
 8004ae6:	bd70      	pop	{r4, r5, r6, pc}

08004ae8 <HAL_DMA2D_DeInit>:
{
 8004ae8:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8004aea:	4605      	mov	r5, r0
 8004aec:	b908      	cbnz	r0, 8004af2 <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 8004aee:	2001      	movs	r0, #1
}
 8004af0:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 8004af2:	4b16      	ldr	r3, [pc, #88]	; (8004b4c <HAL_DMA2D_DeInit+0x64>)
 8004af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004af6:	0219      	lsls	r1, r3, #8
 8004af8:	d413      	bmi.n	8004b22 <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 8004afa:	682b      	ldr	r3, [r5, #0]
 8004afc:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 8004afe:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 8004b00:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 8004b02:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 8004b04:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8004b06:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8004b08:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8004b0a:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8004b0c:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8004b0e:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 8004b10:	f7fc ffbe 	bl	8001a90 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004b14:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 8004b16:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8004b1a:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 8004b1e:	4620      	mov	r0, r4
 8004b20:	e7e6      	b.n	8004af0 <HAL_DMA2D_DeInit+0x8>
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8004b22:	6803      	ldr	r3, [r0, #0]
 8004b24:	6819      	ldr	r1, [r3, #0]
 8004b26:	f011 0101 	ands.w	r1, r1, #1
 8004b2a:	d004      	beq.n	8004b36 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8004b2c:	f7ff ff80 	bl	8004a30 <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004b30:	2800      	cmp	r0, #0
 8004b32:	d0e2      	beq.n	8004afa <HAL_DMA2D_DeInit+0x12>
 8004b34:	e7db      	b.n	8004aee <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8004b36:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004b38:	0692      	lsls	r2, r2, #26
 8004b3a:	d502      	bpl.n	8004b42 <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004b3c:	f7ff ffa5 	bl	8004a8a <HAL_DMA2D_CLUTLoading_Abort>
 8004b40:	e7f6      	b.n	8004b30 <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8004b42:	69db      	ldr	r3, [r3, #28]
 8004b44:	069b      	lsls	r3, r3, #26
 8004b46:	d5d8      	bpl.n	8004afa <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004b48:	2101      	movs	r1, #1
 8004b4a:	e7f7      	b.n	8004b3c <HAL_DMA2D_DeInit+0x54>
 8004b4c:	40023800 	.word	0x40023800

08004b50 <HAL_DMA2D_LineEventCallback>:
 8004b50:	4770      	bx	lr

08004b52 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004b52:	4770      	bx	lr

08004b54 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b54:	6803      	ldr	r3, [r0, #0]
{
 8004b56:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004b58:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004b5a:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b5c:	07f2      	lsls	r2, r6, #31
{
 8004b5e:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004b60:	d514      	bpl.n	8004b8c <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004b62:	05e9      	lsls	r1, r5, #23
 8004b64:	d512      	bpl.n	8004b8c <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004b66:	681a      	ldr	r2, [r3, #0]
 8004b68:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004b6c:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004b6e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004b70:	f042 0201 	orr.w	r2, r2, #1
 8004b74:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004b76:	2201      	movs	r2, #1
 8004b78:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004b7a:	2304      	movs	r3, #4
 8004b7c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004b80:	2300      	movs	r3, #0
 8004b82:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004b86:	6943      	ldr	r3, [r0, #20]
 8004b88:	b103      	cbz	r3, 8004b8c <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8004b8a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004b8c:	06b2      	lsls	r2, r6, #26
 8004b8e:	d516      	bpl.n	8004bbe <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004b90:	04ab      	lsls	r3, r5, #18
 8004b92:	d514      	bpl.n	8004bbe <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004b94:	6823      	ldr	r3, [r4, #0]
 8004b96:	681a      	ldr	r2, [r3, #0]
 8004b98:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004b9c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004b9e:	2220      	movs	r2, #32
 8004ba0:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004ba2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004ba4:	f043 0302 	orr.w	r3, r3, #2
 8004ba8:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004baa:	2304      	movs	r3, #4
 8004bac:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004bb0:	2300      	movs	r3, #0
 8004bb2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004bb6:	6963      	ldr	r3, [r4, #20]
 8004bb8:	b10b      	cbz	r3, 8004bbe <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004bba:	4620      	mov	r0, r4
 8004bbc:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004bbe:	0730      	lsls	r0, r6, #28
 8004bc0:	d516      	bpl.n	8004bf0 <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004bc2:	0529      	lsls	r1, r5, #20
 8004bc4:	d514      	bpl.n	8004bf0 <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004bc6:	6823      	ldr	r3, [r4, #0]
 8004bc8:	681a      	ldr	r2, [r3, #0]
 8004bca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004bce:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004bd0:	2208      	movs	r2, #8
 8004bd2:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004bd4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004bd6:	f043 0304 	orr.w	r3, r3, #4
 8004bda:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004bdc:	2304      	movs	r3, #4
 8004bde:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004be2:	2300      	movs	r3, #0
 8004be4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004be8:	6963      	ldr	r3, [r4, #20]
 8004bea:	b10b      	cbz	r3, 8004bf0 <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004bec:	4620      	mov	r0, r4
 8004bee:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004bf0:	0772      	lsls	r2, r6, #29
 8004bf2:	d50b      	bpl.n	8004c0c <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004bf4:	056b      	lsls	r3, r5, #21
 8004bf6:	d509      	bpl.n	8004c0c <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004bf8:	6823      	ldr	r3, [r4, #0]
 8004bfa:	681a      	ldr	r2, [r3, #0]
 8004bfc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004c00:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004c02:	2204      	movs	r2, #4
 8004c04:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004c06:	4620      	mov	r0, r4
 8004c08:	f7ff ffa2 	bl	8004b50 <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004c0c:	07b0      	lsls	r0, r6, #30
 8004c0e:	d514      	bpl.n	8004c3a <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004c10:	05a9      	lsls	r1, r5, #22
 8004c12:	d512      	bpl.n	8004c3a <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004c14:	6823      	ldr	r3, [r4, #0]
 8004c16:	681a      	ldr	r2, [r3, #0]
 8004c18:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004c1c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004c1e:	2202      	movs	r2, #2
 8004c20:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004c22:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c24:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c26:	2301      	movs	r3, #1
 8004c28:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004c2c:	2300      	movs	r3, #0
 8004c2e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 8004c32:	6923      	ldr	r3, [r4, #16]
 8004c34:	b10b      	cbz	r3, 8004c3a <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004c36:	4620      	mov	r0, r4
 8004c38:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004c3a:	06f2      	lsls	r2, r6, #27
 8004c3c:	d513      	bpl.n	8004c66 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004c3e:	04eb      	lsls	r3, r5, #19
 8004c40:	d511      	bpl.n	8004c66 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004c42:	6823      	ldr	r3, [r4, #0]
 8004c44:	681a      	ldr	r2, [r3, #0]
 8004c46:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004c4a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004c4c:	2210      	movs	r2, #16
 8004c4e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004c50:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004c52:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c54:	2301      	movs	r3, #1
 8004c56:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004c60:	4620      	mov	r0, r4
 8004c62:	f7ff ff76 	bl	8004b52 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004c66:	bd70      	pop	{r4, r5, r6, pc}

08004c68 <HAL_DMA2D_ConfigLayer>:
{
 8004c68:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
 8004c6a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004c6e:	2b01      	cmp	r3, #1
 8004c70:	f04f 0302 	mov.w	r3, #2
 8004c74:	d02b      	beq.n	8004cce <HAL_DMA2D_ConfigLayer+0x66>
 8004c76:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004c78:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004c7c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004c80:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8004c84:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8004c88:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8004c8a:	4f18      	ldr	r7, [pc, #96]	; (8004cec <HAL_DMA2D_ConfigLayer+0x84>)
 8004c8c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c90:	3c09      	subs	r4, #9
 8004c92:	2c01      	cmp	r4, #1
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004c94:	bf9c      	itt	ls
 8004c96:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8004c9a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004c9c:	ea4f 1601 	mov.w	r6, r1, lsl #4
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004ca0:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004ca2:	bf88      	it	hi
 8004ca4:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004ca8:	b999      	cbnz	r1, 8004cd2 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004caa:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004cac:	4039      	ands	r1, r7
 8004cae:	430a      	orrs	r2, r1
 8004cb0:	625a      	str	r2, [r3, #36]	; 0x24
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004cb2:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004cb4:	6982      	ldr	r2, [r0, #24]
 8004cb6:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004cb8:	d803      	bhi.n	8004cc2 <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8004cba:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8004cbc:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004cc0:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004cc2:	2301      	movs	r3, #1
 8004cc4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8004cc8:	2300      	movs	r3, #0
 8004cca:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004cce:	4618      	mov	r0, r3
}
 8004cd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004cd2:	69d9      	ldr	r1, [r3, #28]
 8004cd4:	4039      	ands	r1, r7
 8004cd6:	430a      	orrs	r2, r1
 8004cd8:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004cda:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004cdc:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004cde:	6992      	ldr	r2, [r2, #24]
 8004ce0:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004ce2:	bf9c      	itt	ls
 8004ce4:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004ce8:	621d      	strls	r5, [r3, #32]
 8004cea:	e7ea      	b.n	8004cc2 <HAL_DMA2D_ConfigLayer+0x5a>
 8004cec:	00fcfff0 	.word	0x00fcfff0

08004cf0 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8004cf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004cf4:	4607      	mov	r7, r0
 8004cf6:	460d      	mov	r5, r1
 8004cf8:	4614      	mov	r4, r2
 8004cfa:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8004cfc:	f7ff fc54 	bl	80045a8 <HAL_GetTick>
 8004d00:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004d02:	683b      	ldr	r3, [r7, #0]
 8004d04:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8004d06:	07d2      	lsls	r2, r2, #31
 8004d08:	d50a      	bpl.n	8004d20 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8004d0a:	9906      	ldr	r1, [sp, #24]
 8004d0c:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8004d10:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8004d14:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004d18:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8004d1a:	2000      	movs	r0, #0
}
 8004d1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8004d20:	f7ff fc42 	bl	80045a8 <HAL_GetTick>
 8004d24:	eba0 0008 	sub.w	r0, r0, r8
 8004d28:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004d2c:	d9e9      	bls.n	8004d02 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8004d2e:	2003      	movs	r0, #3
 8004d30:	e7f4      	b.n	8004d1c <DSI_ShortWrite+0x2c>

08004d32 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004d32:	7c03      	ldrb	r3, [r0, #16]
 8004d34:	2b01      	cmp	r3, #1
 8004d36:	d05d      	beq.n	8004df4 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8004d38:	6803      	ldr	r3, [r0, #0]
 8004d3a:	2200      	movs	r2, #0
 8004d3c:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004d40:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8004d44:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004d46:	bf48      	it	mi
 8004d48:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8004d4c:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004d4e:	bf42      	ittt	mi
 8004d50:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8004d54:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8004d58:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004d5c:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8004d5e:	bf42      	ittt	mi
 8004d60:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8004d64:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8004d68:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004d6c:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8004d6e:	bf42      	ittt	mi
 8004d70:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004d74:	f042 0201 	orrmi.w	r2, r2, #1
 8004d78:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8004d7c:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8004d7e:	bf42      	ittt	mi
 8004d80:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004d84:	f042 0202 	orrmi.w	r2, r2, #2
 8004d88:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8004d8c:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8004d8e:	bf42      	ittt	mi
 8004d90:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004d94:	f042 020c 	orrmi.w	r2, r2, #12
 8004d98:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8004d9c:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8004d9e:	bf42      	ittt	mi
 8004da0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004da4:	f042 0210 	orrmi.w	r2, r2, #16
 8004da8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8004dac:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8004dae:	bf42      	ittt	mi
 8004db0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004db4:	f042 0220 	orrmi.w	r2, r2, #32
 8004db8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8004dbc:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8004dbe:	bf42      	ittt	mi
 8004dc0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004dc4:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004dc8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8004dcc:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8004dce:	bf42      	ittt	mi
 8004dd0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004dd4:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004dd8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004ddc:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8004dde:	bf42      	ittt	mi
 8004de0:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004de4:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004de8:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004dec:	2300      	movs	r3, #0
 8004dee:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004df0:	4618      	mov	r0, r3
 8004df2:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004df4:	2002      	movs	r0, #2
}
 8004df6:	4770      	bx	lr

08004df8 <HAL_DSI_Init>:
{
 8004df8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004dfa:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8004dfc:	4604      	mov	r4, r0
 8004dfe:	2800      	cmp	r0, #0
 8004e00:	f000 80a6 	beq.w	8004f50 <HAL_DSI_Init+0x158>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8004e04:	7c43      	ldrb	r3, [r0, #17]
 8004e06:	b90b      	cbnz	r3, 8004e0c <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004e08:	f7fc fe54 	bl	8001ab4 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004e0c:	2303      	movs	r3, #3
 8004e0e:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8004e10:	2300      	movs	r3, #0
 8004e12:	9300      	str	r3, [sp, #0]
 8004e14:	6823      	ldr	r3, [r4, #0]
 8004e16:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8004e1a:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8004e1e:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8004e22:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8004e26:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004e2a:	9300      	str	r3, [sp, #0]
 8004e2c:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8004e2e:	f7ff fbbb 	bl	80045a8 <HAL_GetTick>
 8004e32:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8004e34:	6822      	ldr	r2, [r4, #0]
 8004e36:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8004e3a:	04d9      	lsls	r1, r3, #19
 8004e3c:	d577      	bpl.n	8004f2e <HAL_DSI_Init+0x136>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8004e3e:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004e42:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8004e46:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8004e4a:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 8004e4e:	e9d5 0300 	ldrd	r0, r3, [r5]
 8004e52:	02db      	lsls	r3, r3, #11
 8004e54:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8004e58:	68a8      	ldr	r0, [r5, #8]
 8004e5a:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8004e5e:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8004e62:	430b      	orrs	r3, r1
 8004e64:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004e68:	2300      	movs	r3, #0
 8004e6a:	9301      	str	r3, [sp, #4]
 8004e6c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004e70:	f043 0301 	orr.w	r3, r3, #1
 8004e74:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8004e78:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8004e7c:	f003 0301 	and.w	r3, r3, #1
 8004e80:	9301      	str	r3, [sp, #4]
 8004e82:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8004e84:	f7ff fb90 	bl	80045a8 <HAL_GetTick>
 8004e88:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8004e8a:	6823      	ldr	r3, [r4, #0]
 8004e8c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004e90:	05d2      	lsls	r2, r2, #23
 8004e92:	d556      	bpl.n	8004f42 <HAL_DSI_Init+0x14a>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004e94:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004e98:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8004e9a:	f042 0206 	orr.w	r2, r2, #6
 8004e9e:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8004ea2:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004ea6:	f022 0203 	bic.w	r2, r2, #3
 8004eaa:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8004eae:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8004eb2:	430a      	orrs	r2, r1
 8004eb4:	f042 0201 	orr.w	r2, r2, #1
 8004eb8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004ebc:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004ec0:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8004ec2:	f022 0203 	bic.w	r2, r2, #3
 8004ec6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8004eca:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004ece:	430a      	orrs	r2, r1
 8004ed0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004ed4:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004ed6:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004ed8:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004edc:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004ede:	689a      	ldr	r2, [r3, #8]
 8004ee0:	430a      	orrs	r2, r1
 8004ee2:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004ee4:	686a      	ldr	r2, [r5, #4]
 8004ee6:	491b      	ldr	r1, [pc, #108]	; (8004f54 <HAL_DSI_Init+0x15c>)
 8004ee8:	2a01      	cmp	r2, #1
 8004eea:	bf38      	it	cc
 8004eec:	2201      	movcc	r2, #1
 8004eee:	434a      	muls	r2, r1
 8004ef0:	68a9      	ldr	r1, [r5, #8]
 8004ef2:	f001 0103 	and.w	r1, r1, #3
 8004ef6:	408a      	lsls	r2, r1
 8004ef8:	6829      	ldr	r1, [r5, #0]
 8004efa:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8004efe:	4341      	muls	r1, r0
 8004f00:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004f04:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8004f08:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8004f0c:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004f10:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004f14:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004f16:	430a      	orrs	r2, r1
 8004f18:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004f1c:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8004f20:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004f24:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004f26:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8004f28:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8004f2a:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8004f2c:	e007      	b.n	8004f3e <HAL_DSI_Init+0x146>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004f2e:	f7ff fb3b 	bl	80045a8 <HAL_GetTick>
 8004f32:	1b80      	subs	r0, r0, r6
 8004f34:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004f38:	f67f af7c 	bls.w	8004e34 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8004f3c:	2003      	movs	r0, #3
}
 8004f3e:	b002      	add	sp, #8
 8004f40:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004f42:	f7ff fb31 	bl	80045a8 <HAL_GetTick>
 8004f46:	1b80      	subs	r0, r0, r6
 8004f48:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004f4c:	d99d      	bls.n	8004e8a <HAL_DSI_Init+0x92>
 8004f4e:	e7f5      	b.n	8004f3c <HAL_DSI_Init+0x144>
    return HAL_ERROR;
 8004f50:	2001      	movs	r0, #1
 8004f52:	e7f4      	b.n	8004f3e <HAL_DSI_Init+0x146>
 8004f54:	003d0900 	.word	0x003d0900

08004f58 <HAL_DSI_ErrorCallback>:
 8004f58:	4770      	bx	lr

08004f5a <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004f60:	07d1      	lsls	r1, r2, #31
{
 8004f62:	b510      	push	{r4, lr}
 8004f64:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004f66:	d508      	bpl.n	8004f7a <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004f68:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004f6c:	07d2      	lsls	r2, r2, #31
 8004f6e:	d504      	bpl.n	8004f7a <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8004f70:	2201      	movs	r2, #1
 8004f72:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8004f76:	f7fb fda9 	bl	8000acc <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8004f7a:	6823      	ldr	r3, [r4, #0]
 8004f7c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8004f80:	0791      	lsls	r1, r2, #30
 8004f82:	d509      	bpl.n	8004f98 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8004f84:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004f88:	0792      	lsls	r2, r2, #30
 8004f8a:	d505      	bpl.n	8004f98 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8004f8c:	2202      	movs	r2, #2
 8004f8e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8004f92:	4620      	mov	r0, r4
 8004f94:	f7fb fdce 	bl	8000b34 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8004f98:	69a3      	ldr	r3, [r4, #24]
 8004f9a:	2b00      	cmp	r3, #0
 8004f9c:	d04e      	beq.n	800503c <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8004f9e:	6821      	ldr	r1, [r4, #0]
 8004fa0:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004fa4:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8004fa8:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8004fac:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004fae:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004fb2:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8004fb4:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8004fb6:	b119      	cbz	r1, 8004fc0 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8004fb8:	6961      	ldr	r1, [r4, #20]
 8004fba:	f041 0101 	orr.w	r1, r1, #1
 8004fbe:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8004fc0:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8004fc4:	bf1e      	ittt	ne
 8004fc6:	6962      	ldrne	r2, [r4, #20]
 8004fc8:	f042 0202 	orrne.w	r2, r2, #2
 8004fcc:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8004fce:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8004fd0:	bf42      	ittt	mi
 8004fd2:	6962      	ldrmi	r2, [r4, #20]
 8004fd4:	f042 0204 	orrmi.w	r2, r2, #4
 8004fd8:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8004fda:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004fdc:	bf42      	ittt	mi
 8004fde:	6962      	ldrmi	r2, [r4, #20]
 8004fe0:	f042 0208 	orrmi.w	r2, r2, #8
 8004fe4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8004fe6:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8004fea:	bf1e      	ittt	ne
 8004fec:	6962      	ldrne	r2, [r4, #20]
 8004fee:	f042 0210 	orrne.w	r2, r2, #16
 8004ff2:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8004ff4:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8004ff6:	bf42      	ittt	mi
 8004ff8:	6962      	ldrmi	r2, [r4, #20]
 8004ffa:	f042 0220 	orrmi.w	r2, r2, #32
 8004ffe:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8005000:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8005002:	bf42      	ittt	mi
 8005004:	6962      	ldrmi	r2, [r4, #20]
 8005006:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800500a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800500c:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800500e:	bf42      	ittt	mi
 8005010:	6962      	ldrmi	r2, [r4, #20]
 8005012:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8005016:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8005018:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800501a:	bf42      	ittt	mi
 800501c:	6962      	ldrmi	r2, [r4, #20]
 800501e:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8005022:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8005024:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8005028:	bf1e      	ittt	ne
 800502a:	6963      	ldrne	r3, [r4, #20]
 800502c:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8005030:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8005032:	6963      	ldr	r3, [r4, #20]
 8005034:	b113      	cbz	r3, 800503c <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8005036:	4620      	mov	r0, r4
 8005038:	f7ff ff8e 	bl	8004f58 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800503c:	bd10      	pop	{r4, pc}

0800503e <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800503e:	7c03      	ldrb	r3, [r0, #16]
 8005040:	2b01      	cmp	r3, #1
 8005042:	d00b      	beq.n	800505c <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8005044:	6803      	ldr	r3, [r0, #0]
 8005046:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005048:	f022 0203 	bic.w	r2, r2, #3
 800504c:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800504e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005050:	4311      	orrs	r1, r2
 8005052:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005054:	2300      	movs	r3, #0
 8005056:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005058:	4618      	mov	r0, r3
 800505a:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800505c:	2002      	movs	r0, #2
}
 800505e:	4770      	bx	lr

08005060 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8005060:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005062:	7c03      	ldrb	r3, [r0, #16]
 8005064:	2b01      	cmp	r3, #1
 8005066:	d06a      	beq.n	800513e <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8005068:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800506a:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800506c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800506e:	f042 0201 	orr.w	r2, r2, #1
 8005072:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8005074:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8005078:	f022 0201 	bic.w	r2, r2, #1
 800507c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8005080:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8005084:	f042 0201 	orr.w	r2, r2, #1
 8005088:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800508c:	68da      	ldr	r2, [r3, #12]
 800508e:	f022 0203 	bic.w	r2, r2, #3
 8005092:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8005094:	68da      	ldr	r2, [r3, #12]
 8005096:	4322      	orrs	r2, r4
 8005098:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800509a:	695a      	ldr	r2, [r3, #20]
 800509c:	f022 0207 	bic.w	r2, r2, #7
 80050a0:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80050a2:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80050a6:	432a      	orrs	r2, r5
 80050a8:	694d      	ldr	r5, [r1, #20]
 80050aa:	695c      	ldr	r4, [r3, #20]
 80050ac:	432a      	orrs	r2, r5
 80050ae:	4322      	orrs	r2, r4
 80050b0:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80050b2:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80050b4:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80050b6:	f022 020f 	bic.w	r2, r2, #15
 80050ba:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80050bc:	691c      	ldr	r4, [r3, #16]
 80050be:	432c      	orrs	r4, r5
 80050c0:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80050c2:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80050c6:	f024 040e 	bic.w	r4, r4, #14
 80050ca:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80050ce:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80050d2:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80050d4:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80050d8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80050dc:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80050de:	0c12      	lsrs	r2, r2, #16
 80050e0:	0412      	lsls	r2, r2, #16
 80050e2:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80050e4:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80050e6:	4322      	orrs	r2, r4
 80050e8:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80050ea:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80050ee:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80050f2:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80050f6:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80050fa:	432a      	orrs	r2, r5
 80050fc:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80050fe:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005102:	432a      	orrs	r2, r5
 8005104:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005106:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005108:	432a      	orrs	r2, r5
 800510a:	4322      	orrs	r2, r4
 800510c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8005110:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005112:	f022 0201 	bic.w	r2, r2, #1
 8005116:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005118:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800511a:	430a      	orrs	r2, r1
 800511c:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800511e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005122:	f042 0201 	orr.w	r2, r2, #1
 8005126:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800512a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800512e:	f042 0202 	orr.w	r2, r2, #2
 8005132:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005136:	2300      	movs	r3, #0
 8005138:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800513a:	4618      	mov	r0, r3
}
 800513c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800513e:	2002      	movs	r0, #2
 8005140:	e7fc      	b.n	800513c <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08005144 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8005144:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005146:	7c03      	ldrb	r3, [r0, #16]
 8005148:	2b01      	cmp	r3, #1
 800514a:	d02a      	beq.n	80051a2 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800514c:	6802      	ldr	r2, [r0, #0]
 800514e:	4b16      	ldr	r3, [pc, #88]	; (80051a8 <HAL_DSI_ConfigCommand+0x64>)
 8005150:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8005152:	4023      	ands	r3, r4
 8005154:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005156:	e9d1 3500 	ldrd	r3, r5, [r1]
 800515a:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800515c:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800515e:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8005160:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8005162:	68cd      	ldr	r5, [r1, #12]
 8005164:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8005166:	690d      	ldr	r5, [r1, #16]
 8005168:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800516a:	694d      	ldr	r5, [r1, #20]
 800516c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800516e:	698d      	ldr	r5, [r1, #24]
 8005170:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8005172:	69cd      	ldr	r5, [r1, #28]
 8005174:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8005176:	6a0d      	ldr	r5, [r1, #32]
 8005178:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800517a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800517c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800517e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8005180:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8005182:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8005184:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8005186:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005188:	4323      	orrs	r3, r4
 800518a:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800518c:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800518e:	f023 0302 	bic.w	r3, r3, #2
 8005192:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8005194:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8005196:	430b      	orrs	r3, r1
 8005198:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800519a:	2300      	movs	r3, #0
 800519c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800519e:	4618      	mov	r0, r3
}
 80051a0:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80051a2:	2002      	movs	r0, #2
 80051a4:	e7fc      	b.n	80051a0 <HAL_DSI_ConfigCommand+0x5c>
 80051a6:	bf00      	nop
 80051a8:	fef080ff 	.word	0xfef080ff

080051ac <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80051ac:	7c03      	ldrb	r3, [r0, #16]
 80051ae:	2b01      	cmp	r3, #1
 80051b0:	d00b      	beq.n	80051ca <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80051b2:	6803      	ldr	r3, [r0, #0]
 80051b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80051b6:	f022 021f 	bic.w	r2, r2, #31
 80051ba:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80051bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80051be:	4311      	orrs	r1, r2
 80051c0:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80051c2:	2300      	movs	r3, #0
 80051c4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80051c6:	4618      	mov	r0, r3
 80051c8:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80051ca:	2002      	movs	r0, #2
}
 80051cc:	4770      	bx	lr

080051ce <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 80051ce:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 80051d0:	7c03      	ldrb	r3, [r0, #16]
 80051d2:	2b01      	cmp	r3, #1
 80051d4:	d035      	beq.n	8005242 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80051d6:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80051da:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80051dc:	4294      	cmp	r4, r2
 80051de:	bf38      	it	cc
 80051e0:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80051e2:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80051e6:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80051ea:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80051ee:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80051f2:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80051f6:	4322      	orrs	r2, r4
 80051f8:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80051fc:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8005200:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8005204:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8005208:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800520c:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800520e:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8005212:	690d      	ldr	r5, [r1, #16]
 8005214:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005218:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800521a:	432a      	orrs	r2, r5
 800521c:	4322      	orrs	r2, r4
 800521e:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8005222:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005226:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800522a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800522e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005232:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005236:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800523a:	2300      	movs	r3, #0
 800523c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800523e:	4618      	mov	r0, r3
}
 8005240:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005242:	2002      	movs	r0, #2
 8005244:	e7fc      	b.n	8005240 <HAL_DSI_ConfigPhyTimer+0x72>
	...

08005248 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8005248:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800524a:	7c03      	ldrb	r3, [r0, #16]
 800524c:	2b01      	cmp	r3, #1
 800524e:	d05c      	beq.n	800530a <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005250:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8005252:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005254:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8005256:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8005258:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800525c:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800525e:	689a      	ldr	r2, [r3, #8]
 8005260:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8005264:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8005266:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8005268:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800526a:	b292      	uxth	r2, r2
 800526c:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800526e:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8005270:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8005274:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8005276:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8005278:	4a25      	ldr	r2, [pc, #148]	; (8005310 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800527a:	4014      	ands	r4, r2
 800527c:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800527e:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8005280:	432c      	orrs	r4, r5
 8005282:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8005284:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8005286:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8005288:	4014      	ands	r4, r2
 800528a:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800528c:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800528e:	432c      	orrs	r4, r5
 8005290:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8005292:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8005296:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8005298:	4014      	ands	r4, r2
 800529a:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800529e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80052a2:	432c      	orrs	r4, r5
 80052a4:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80052a8:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80052ac:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80052ae:	4014      	ands	r4, r2
 80052b0:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80052b4:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80052b8:	432c      	orrs	r4, r5
 80052ba:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80052be:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80052c2:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80052c6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80052ca:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80052ce:	698d      	ldr	r5, [r1, #24]
 80052d0:	432c      	orrs	r4, r5
 80052d2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80052d6:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80052da:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80052dc:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80052de:	4014      	ands	r4, r2
 80052e0:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80052e4:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80052e8:	432c      	orrs	r4, r5
 80052ea:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80052ee:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80052f2:	4022      	ands	r2, r4
 80052f4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80052f8:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80052fc:	430a      	orrs	r2, r1
 80052fe:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005302:	2300      	movs	r3, #0
 8005304:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005306:	4618      	mov	r0, r3
}
 8005308:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800530a:	2002      	movs	r0, #2
 800530c:	e7fc      	b.n	8005308 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800530e:	bf00      	nop
 8005310:	ffff0000 	.word	0xffff0000

08005314 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005314:	7c03      	ldrb	r3, [r0, #16]
 8005316:	2b01      	cmp	r3, #1
{
 8005318:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800531a:	d01c      	beq.n	8005356 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800531c:	6802      	ldr	r2, [r0, #0]
 800531e:	2300      	movs	r3, #0
 8005320:	9300      	str	r3, [sp, #0]
 8005322:	6851      	ldr	r1, [r2, #4]
 8005324:	f041 0101 	orr.w	r1, r1, #1
 8005328:	6051      	str	r1, [r2, #4]
 800532a:	6851      	ldr	r1, [r2, #4]
 800532c:	f001 0101 	and.w	r1, r1, #1
 8005330:	9100      	str	r1, [sp, #0]
 8005332:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005334:	9301      	str	r3, [sp, #4]
 8005336:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800533a:	f041 0108 	orr.w	r1, r1, #8
 800533e:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8005342:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005346:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8005348:	f002 0208 	and.w	r2, r2, #8
 800534c:	9201      	str	r2, [sp, #4]
 800534e:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8005350:	4618      	mov	r0, r3
}
 8005352:	b002      	add	sp, #8
 8005354:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005356:	2002      	movs	r0, #2
 8005358:	e7fb      	b.n	8005352 <HAL_DSI_Start+0x3e>

0800535a <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800535a:	7c03      	ldrb	r3, [r0, #16]
 800535c:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800535e:	bf1f      	itttt	ne
 8005360:	6802      	ldrne	r2, [r0, #0]
 8005362:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8005366:	f043 0304 	orrne.w	r3, r3, #4
 800536a:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800536e:	bf1d      	ittte	ne
 8005370:	2300      	movne	r3, #0
 8005372:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8005374:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8005376:	2002      	moveq	r0, #2
}
 8005378:	4770      	bx	lr

0800537a <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800537a:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800537c:	7c05      	ldrb	r5, [r0, #16]
 800537e:	2d01      	cmp	r5, #1
{
 8005380:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8005382:	d009      	beq.n	8005398 <HAL_DSI_ShortWrite+0x1e>
 8005384:	2501      	movs	r5, #1
 8005386:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8005388:	9d06      	ldr	r5, [sp, #24]
 800538a:	9500      	str	r5, [sp, #0]
 800538c:	f7ff fcb0 	bl	8004cf0 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005390:	2300      	movs	r3, #0
 8005392:	7423      	strb	r3, [r4, #16]

  return status;
}
 8005394:	b003      	add	sp, #12
 8005396:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005398:	2002      	movs	r0, #2
 800539a:	e7fb      	b.n	8005394 <HAL_DSI_ShortWrite+0x1a>

0800539c <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800539c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053a0:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80053a2:	7c03      	ldrb	r3, [r0, #16]
 80053a4:	2b01      	cmp	r3, #1
{
 80053a6:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80053aa:	4606      	mov	r6, r0
 80053ac:	460f      	mov	r7, r1
 80053ae:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80053b0:	d053      	beq.n	800545a <HAL_DSI_LongWrite+0xbe>
 80053b2:	2301      	movs	r3, #1
 80053b4:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80053b6:	f7ff f8f7 	bl	80045a8 <HAL_GetTick>
 80053ba:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80053bc:	6831      	ldr	r1, [r6, #0]
 80053be:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80053c0:	f013 0a01 	ands.w	sl, r3, #1
 80053c4:	d01a      	beq.n	80053fc <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80053c6:	2c03      	cmp	r4, #3
 80053c8:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 80053ca:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80053ce:	bf28      	it	cs
 80053d0:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 80053d2:	4282      	cmp	r2, r0
 80053d4:	d11e      	bne.n	8005414 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80053d6:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 80053d8:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 80053dc:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80053de:	bb1b      	cbnz	r3, 8005428 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80053e0:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80053e2:	0222      	lsls	r2, r4, #8
 80053e4:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 80053e8:	b292      	uxth	r2, r2
 80053ea:	0224      	lsls	r4, r4, #8
 80053ec:	4315      	orrs	r5, r2
 80053ee:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80053f2:	432c      	orrs	r4, r5
 80053f4:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80053f6:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 80053f8:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80053fa:	e009      	b.n	8005410 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80053fc:	f7ff f8d4 	bl	80045a8 <HAL_GetTick>
 8005400:	eba0 000b 	sub.w	r0, r0, fp
 8005404:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005408:	d9d8      	bls.n	80053bc <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800540a:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800540e:	2003      	movs	r0, #3
}
 8005410:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8005414:	f818 3002 	ldrb.w	r3, [r8, r2]
 8005418:	3201      	adds	r2, #1
 800541a:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800541e:	fa03 f30c 	lsl.w	r3, r3, ip
 8005422:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8005426:	e7d4      	b.n	80053d2 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005428:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800542a:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800542e:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8005430:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8005432:	bf28      	it	cs
 8005434:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005438:	f812 8000 	ldrb.w	r8, [r2, r0]
 800543c:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8005440:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005442:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8005446:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8005448:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800544c:	d1f4      	bne.n	8005438 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800544e:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 8005452:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8005456:	4472      	add	r2, lr
 8005458:	e7c1      	b.n	80053de <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800545a:	2002      	movs	r0, #2
 800545c:	e7d8      	b.n	8005410 <HAL_DSI_LongWrite+0x74>

0800545e <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800545e:	7c03      	ldrb	r3, [r0, #16]
 8005460:	2b01      	cmp	r3, #1
 8005462:	d010      	beq.n	8005486 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8005464:	6803      	ldr	r3, [r0, #0]
 8005466:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800546a:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800546e:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8005472:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8005476:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800547a:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800547e:	2300      	movs	r3, #0
 8005480:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005482:	4618      	mov	r0, r3
 8005484:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005486:	2002      	movs	r0, #2
}
 8005488:	4770      	bx	lr
	...

0800548c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800548c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005490:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8005654 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8005494:	4a6d      	ldr	r2, [pc, #436]	; (800564c <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005496:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8005658 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800549a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800549c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800549e:	2401      	movs	r4, #1
 80054a0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80054a2:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 80054a6:	43ac      	bics	r4, r5
 80054a8:	f040 80b7 	bne.w	800561a <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054ac:	684c      	ldr	r4, [r1, #4]
 80054ae:	f024 0c10 	bic.w	ip, r4, #16
 80054b2:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054b6:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054b8:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054bc:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054c0:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054c2:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80054c6:	d811      	bhi.n	80054ec <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 80054c8:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80054ca:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 80054ce:	68cf      	ldr	r7, [r1, #12]
 80054d0:	fa07 f70e 	lsl.w	r7, r7, lr
 80054d4:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80054d8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80054da:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80054dc:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80054e0:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80054e4:	409f      	lsls	r7, r3
 80054e6:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80054ea:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80054ec:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80054ee:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80054f2:	688f      	ldr	r7, [r1, #8]
 80054f4:	fa07 f70e 	lsl.w	r7, r7, lr
 80054f8:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80054fc:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8005500:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8005502:	d116      	bne.n	8005532 <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8005504:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8005508:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800550c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8005510:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005514:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8005518:	f04f 0c0f 	mov.w	ip, #15
 800551c:	fa0c fc0b 	lsl.w	ip, ip, fp
 8005520:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8005524:	690f      	ldr	r7, [r1, #16]
 8005526:	fa07 f70b 	lsl.w	r7, r7, fp
 800552a:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800552e:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8005532:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005534:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005536:	f004 0703 	and.w	r7, r4, #3
 800553a:	fa07 f70e 	lsl.w	r7, r7, lr
 800553e:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8005540:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8005542:	00e5      	lsls	r5, r4, #3
 8005544:	d569      	bpl.n	800561a <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005546:	f04f 0b00 	mov.w	fp, #0
 800554a:	f8cd b004 	str.w	fp, [sp, #4]
 800554e:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005552:	4d3f      	ldr	r5, [pc, #252]	; (8005650 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8005554:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8005558:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800555c:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8005560:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8005564:	9701      	str	r7, [sp, #4]
 8005566:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8005568:	f023 0703 	bic.w	r7, r3, #3
 800556c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8005570:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8005574:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8005578:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800557c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8005580:	f04f 0c0f 	mov.w	ip, #15
 8005584:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005588:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800558a:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800558e:	d04b      	beq.n	8005628 <HAL_GPIO_Init+0x19c>
 8005590:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005594:	42a8      	cmp	r0, r5
 8005596:	d049      	beq.n	800562c <HAL_GPIO_Init+0x1a0>
 8005598:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800559c:	42a8      	cmp	r0, r5
 800559e:	d047      	beq.n	8005630 <HAL_GPIO_Init+0x1a4>
 80055a0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055a4:	42a8      	cmp	r0, r5
 80055a6:	d045      	beq.n	8005634 <HAL_GPIO_Init+0x1a8>
 80055a8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055ac:	42a8      	cmp	r0, r5
 80055ae:	d043      	beq.n	8005638 <HAL_GPIO_Init+0x1ac>
 80055b0:	4548      	cmp	r0, r9
 80055b2:	d043      	beq.n	800563c <HAL_GPIO_Init+0x1b0>
 80055b4:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 80055b8:	42a8      	cmp	r0, r5
 80055ba:	d041      	beq.n	8005640 <HAL_GPIO_Init+0x1b4>
 80055bc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055c0:	42a8      	cmp	r0, r5
 80055c2:	d03f      	beq.n	8005644 <HAL_GPIO_Init+0x1b8>
 80055c4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055c8:	42a8      	cmp	r0, r5
 80055ca:	d03d      	beq.n	8005648 <HAL_GPIO_Init+0x1bc>
 80055cc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80055d0:	42a8      	cmp	r0, r5
 80055d2:	bf0c      	ite	eq
 80055d4:	2509      	moveq	r5, #9
 80055d6:	250a      	movne	r5, #10
 80055d8:	fa05 f50e 	lsl.w	r5, r5, lr
 80055dc:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80055e0:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80055e2:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80055e4:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80055e6:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80055ea:	bf0c      	ite	eq
 80055ec:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80055ee:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80055f0:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80055f2:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80055f4:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80055f8:	bf0c      	ite	eq
 80055fa:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80055fc:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80055fe:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8005600:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8005602:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8005606:	bf0c      	ite	eq
 8005608:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 800560a:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 800560c:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 800560e:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8005610:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8005612:	bf54      	ite	pl
 8005614:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8005616:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8005618:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800561a:	3301      	adds	r3, #1
 800561c:	2b10      	cmp	r3, #16
 800561e:	f47f af3d 	bne.w	800549c <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8005622:	b003      	add	sp, #12
 8005624:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8005628:	465d      	mov	r5, fp
 800562a:	e7d5      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 800562c:	2501      	movs	r5, #1
 800562e:	e7d3      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 8005630:	2502      	movs	r5, #2
 8005632:	e7d1      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 8005634:	2503      	movs	r5, #3
 8005636:	e7cf      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 8005638:	2504      	movs	r5, #4
 800563a:	e7cd      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 800563c:	2505      	movs	r5, #5
 800563e:	e7cb      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 8005640:	2506      	movs	r5, #6
 8005642:	e7c9      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 8005644:	2507      	movs	r5, #7
 8005646:	e7c7      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 8005648:	2508      	movs	r5, #8
 800564a:	e7c5      	b.n	80055d8 <HAL_GPIO_Init+0x14c>
 800564c:	40013c00 	.word	0x40013c00
 8005650:	40020000 	.word	0x40020000
 8005654:	40023800 	.word	0x40023800
 8005658:	40021400 	.word	0x40021400

0800565c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800565c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8005660:	4c4a      	ldr	r4, [pc, #296]	; (800578c <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005662:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8005794 <HAL_GPIO_DeInit+0x138>
 8005666:	f8df a130 	ldr.w	sl, [pc, #304]	; 8005798 <HAL_GPIO_DeInit+0x13c>
 800566a:	f8df b130 	ldr.w	fp, [pc, #304]	; 800579c <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800566e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8005670:	2301      	movs	r3, #1
 8005672:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8005676:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800567a:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800567e:	d16e      	bne.n	800575e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8005680:	f022 0503 	bic.w	r5, r2, #3
 8005684:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8005688:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800568c:	4b40      	ldr	r3, [pc, #256]	; (8005790 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800568e:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8005692:	f002 0c03 	and.w	ip, r2, #3
 8005696:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800569a:	260f      	movs	r6, #15
 800569c:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80056a0:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 80056a2:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 80056a6:	d05f      	beq.n	8005768 <HAL_GPIO_DeInit+0x10c>
 80056a8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056ac:	4298      	cmp	r0, r3
 80056ae:	d05d      	beq.n	800576c <HAL_GPIO_DeInit+0x110>
 80056b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056b4:	4298      	cmp	r0, r3
 80056b6:	d05b      	beq.n	8005770 <HAL_GPIO_DeInit+0x114>
 80056b8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056bc:	4298      	cmp	r0, r3
 80056be:	d059      	beq.n	8005774 <HAL_GPIO_DeInit+0x118>
 80056c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056c4:	4298      	cmp	r0, r3
 80056c6:	d057      	beq.n	8005778 <HAL_GPIO_DeInit+0x11c>
 80056c8:	4548      	cmp	r0, r9
 80056ca:	d057      	beq.n	800577c <HAL_GPIO_DeInit+0x120>
 80056cc:	4550      	cmp	r0, sl
 80056ce:	d057      	beq.n	8005780 <HAL_GPIO_DeInit+0x124>
 80056d0:	4558      	cmp	r0, fp
 80056d2:	d057      	beq.n	8005784 <HAL_GPIO_DeInit+0x128>
 80056d4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80056d8:	4298      	cmp	r0, r3
 80056da:	d055      	beq.n	8005788 <HAL_GPIO_DeInit+0x12c>
 80056dc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80056e0:	4298      	cmp	r0, r3
 80056e2:	bf0c      	ite	eq
 80056e4:	2309      	moveq	r3, #9
 80056e6:	230a      	movne	r3, #10
 80056e8:	fa03 f30c 	lsl.w	r3, r3, ip
 80056ec:	4543      	cmp	r3, r8
 80056ee:	d113      	bne.n	8005718 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80056f0:	6823      	ldr	r3, [r4, #0]
 80056f2:	ea23 0307 	bic.w	r3, r3, r7
 80056f6:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80056f8:	6863      	ldr	r3, [r4, #4]
 80056fa:	ea23 0307 	bic.w	r3, r3, r7
 80056fe:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8005700:	68a3      	ldr	r3, [r4, #8]
 8005702:	ea23 0307 	bic.w	r3, r3, r7
 8005706:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8005708:	68e3      	ldr	r3, [r4, #12]
 800570a:	ea23 0307 	bic.w	r3, r3, r7
 800570e:	60e3      	str	r3, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8005710:	68ab      	ldr	r3, [r5, #8]
 8005712:	ea23 0306 	bic.w	r3, r3, r6
 8005716:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8005718:	6805      	ldr	r5, [r0, #0]
 800571a:	2603      	movs	r6, #3
 800571c:	0053      	lsls	r3, r2, #1
 800571e:	fa06 f303 	lsl.w	r3, r6, r3
 8005722:	ea25 0503 	bic.w	r5, r5, r3
 8005726:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8005728:	fa22 f506 	lsr.w	r5, r2, r6
 800572c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8005730:	f002 0c07 	and.w	ip, r2, #7
 8005734:	6a2e      	ldr	r6, [r5, #32]
 8005736:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800573a:	270f      	movs	r7, #15
 800573c:	fa07 f70c 	lsl.w	r7, r7, ip
 8005740:	ea26 0707 	bic.w	r7, r6, r7
 8005744:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8005746:	68c5      	ldr	r5, [r0, #12]
 8005748:	ea25 0503 	bic.w	r5, r5, r3
 800574c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800574e:	6845      	ldr	r5, [r0, #4]
 8005750:	ea25 050e 	bic.w	r5, r5, lr
 8005754:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8005756:	6885      	ldr	r5, [r0, #8]
 8005758:	ea25 0303 	bic.w	r3, r5, r3
 800575c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800575e:	3201      	adds	r2, #1
 8005760:	2a10      	cmp	r2, #16
 8005762:	d185      	bne.n	8005670 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8005764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8005768:	2300      	movs	r3, #0
 800576a:	e7bd      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 800576c:	2301      	movs	r3, #1
 800576e:	e7bb      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 8005770:	2302      	movs	r3, #2
 8005772:	e7b9      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 8005774:	2303      	movs	r3, #3
 8005776:	e7b7      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 8005778:	2304      	movs	r3, #4
 800577a:	e7b5      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 800577c:	2305      	movs	r3, #5
 800577e:	e7b3      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 8005780:	2306      	movs	r3, #6
 8005782:	e7b1      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 8005784:	2307      	movs	r3, #7
 8005786:	e7af      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 8005788:	2308      	movs	r3, #8
 800578a:	e7ad      	b.n	80056e8 <HAL_GPIO_DeInit+0x8c>
 800578c:	40013c00 	.word	0x40013c00
 8005790:	40020000 	.word	0x40020000
 8005794:	40021400 	.word	0x40021400
 8005798:	40021800 	.word	0x40021800
 800579c:	40021c00 	.word	0x40021c00

080057a0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80057a0:	6903      	ldr	r3, [r0, #16]
 80057a2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80057a4:	bf14      	ite	ne
 80057a6:	2001      	movne	r0, #1
 80057a8:	2000      	moveq	r0, #0
 80057aa:	4770      	bx	lr

080057ac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80057ac:	b10a      	cbz	r2, 80057b2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80057ae:	6181      	str	r1, [r0, #24]
  }
}
 80057b0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80057b2:	0409      	lsls	r1, r1, #16
 80057b4:	e7fb      	b.n	80057ae <HAL_GPIO_WritePin+0x2>

080057b6 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 80057b6:	6943      	ldr	r3, [r0, #20]
 80057b8:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80057bc:	bf08      	it	eq
 80057be:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 80057c0:	6181      	str	r1, [r0, #24]
  }
}
 80057c2:	4770      	bx	lr

080057c4 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80057c4:	6801      	ldr	r1, [r0, #0]
 80057c6:	694b      	ldr	r3, [r1, #20]
 80057c8:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 80057cc:	f04f 0200 	mov.w	r2, #0
 80057d0:	d010      	beq.n	80057f4 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80057d2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80057d6:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80057d8:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80057da:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80057dc:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80057e0:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80057e4:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80057e6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80057ea:	f043 0304 	orr.w	r3, r3, #4
 80057ee:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80057f0:	2001      	movs	r0, #1
 80057f2:	4770      	bx	lr
  }
  return HAL_OK;
 80057f4:	4618      	mov	r0, r3
}
 80057f6:	4770      	bx	lr

080057f8 <I2C_WaitOnFlagUntilTimeout>:
{
 80057f8:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80057fc:	4606      	mov	r6, r0
 80057fe:	460f      	mov	r7, r1
 8005800:	4691      	mov	r9, r2
 8005802:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8005804:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8005808:	6833      	ldr	r3, [r6, #0]
 800580a:	f1ba 0f01 	cmp.w	sl, #1
 800580e:	bf0c      	ite	eq
 8005810:	695c      	ldreq	r4, [r3, #20]
 8005812:	699c      	ldrne	r4, [r3, #24]
 8005814:	ea27 0404 	bic.w	r4, r7, r4
 8005818:	b2a4      	uxth	r4, r4
 800581a:	fab4 f484 	clz	r4, r4
 800581e:	0964      	lsrs	r4, r4, #5
 8005820:	45a1      	cmp	r9, r4
 8005822:	d001      	beq.n	8005828 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8005824:	2000      	movs	r0, #0
 8005826:	e017      	b.n	8005858 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8005828:	1c6a      	adds	r2, r5, #1
 800582a:	d0ee      	beq.n	800580a <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800582c:	f7fe febc 	bl	80045a8 <HAL_GetTick>
 8005830:	9b08      	ldr	r3, [sp, #32]
 8005832:	1ac0      	subs	r0, r0, r3
 8005834:	42a8      	cmp	r0, r5
 8005836:	d801      	bhi.n	800583c <I2C_WaitOnFlagUntilTimeout+0x44>
 8005838:	2d00      	cmp	r5, #0
 800583a:	d1e5      	bne.n	8005808 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800583c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800583e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8005840:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8005842:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8005846:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800584a:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800584c:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8005850:	f042 0220 	orr.w	r2, r2, #32
 8005854:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8005856:	2001      	movs	r0, #1
}
 8005858:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800585c <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800585c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005860:	4604      	mov	r4, r0
 8005862:	460f      	mov	r7, r1
 8005864:	4616      	mov	r6, r2
 8005866:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005868:	6825      	ldr	r5, [r4, #0]
 800586a:	6968      	ldr	r0, [r5, #20]
 800586c:	ea27 0000 	bic.w	r0, r7, r0
 8005870:	b280      	uxth	r0, r0
 8005872:	b1b8      	cbz	r0, 80058a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005874:	696b      	ldr	r3, [r5, #20]
 8005876:	055a      	lsls	r2, r3, #21
 8005878:	d516      	bpl.n	80058a8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800587a:	682b      	ldr	r3, [r5, #0]
 800587c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005880:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005882:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8005886:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8005888:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800588a:	2300      	movs	r3, #0
 800588c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800588e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005892:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005896:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8005898:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800589c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800589e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80058a2:	2001      	movs	r0, #1
}
 80058a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80058a8:	1c73      	adds	r3, r6, #1
 80058aa:	d0de      	beq.n	800586a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80058ac:	f7fe fe7c 	bl	80045a8 <HAL_GetTick>
 80058b0:	eba0 0008 	sub.w	r0, r0, r8
 80058b4:	42b0      	cmp	r0, r6
 80058b6:	d801      	bhi.n	80058bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80058b8:	2e00      	cmp	r6, #0
 80058ba:	d1d5      	bne.n	8005868 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80058bc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80058be:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80058c0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80058c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80058c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80058ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80058cc:	f042 0220 	orr.w	r2, r2, #32
 80058d0:	e7e4      	b.n	800589c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

080058d2 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 80058d2:	b570      	push	{r4, r5, r6, lr}
 80058d4:	4604      	mov	r4, r0
 80058d6:	460d      	mov	r5, r1
 80058d8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80058da:	6821      	ldr	r1, [r4, #0]
 80058dc:	694b      	ldr	r3, [r1, #20]
 80058de:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80058e2:	d001      	beq.n	80058e8 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80058e4:	2000      	movs	r0, #0
 80058e6:	e010      	b.n	800590a <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80058e8:	694a      	ldr	r2, [r1, #20]
 80058ea:	06d2      	lsls	r2, r2, #27
 80058ec:	d50e      	bpl.n	800590c <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80058ee:	f06f 0210 	mvn.w	r2, #16
 80058f2:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80058f4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80058f6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80058f8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80058fc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005900:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005902:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8005904:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8005908:	2001      	movs	r0, #1
}
 800590a:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800590c:	f7fe fe4c 	bl	80045a8 <HAL_GetTick>
 8005910:	1b80      	subs	r0, r0, r6
 8005912:	42a8      	cmp	r0, r5
 8005914:	d801      	bhi.n	800591a <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8005916:	2d00      	cmp	r5, #0
 8005918:	d1df      	bne.n	80058da <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800591a:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800591c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800591e:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005920:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005924:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005928:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800592a:	f042 0220 	orr.w	r2, r2, #32
 800592e:	e7e8      	b.n	8005902 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08005930 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8005930:	b570      	push	{r4, r5, r6, lr}
 8005932:	4604      	mov	r4, r0
 8005934:	460d      	mov	r5, r1
 8005936:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005938:	6823      	ldr	r3, [r4, #0]
 800593a:	695b      	ldr	r3, [r3, #20]
 800593c:	075b      	lsls	r3, r3, #29
 800593e:	d501      	bpl.n	8005944 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8005940:	2000      	movs	r0, #0
}
 8005942:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005944:	4620      	mov	r0, r4
 8005946:	f7ff ff3d 	bl	80057c4 <I2C_IsAcknowledgeFailed>
 800594a:	b9a8      	cbnz	r0, 8005978 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800594c:	1c6a      	adds	r2, r5, #1
 800594e:	d0f3      	beq.n	8005938 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005950:	f7fe fe2a 	bl	80045a8 <HAL_GetTick>
 8005954:	1b80      	subs	r0, r0, r6
 8005956:	42a8      	cmp	r0, r5
 8005958:	d801      	bhi.n	800595e <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800595a:	2d00      	cmp	r5, #0
 800595c:	d1ec      	bne.n	8005938 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800595e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8005960:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8005962:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005964:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005968:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800596c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800596e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005972:	f042 0220 	orr.w	r2, r2, #32
 8005976:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005978:	2001      	movs	r0, #1
 800597a:	e7e2      	b.n	8005942 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800597c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800597c:	b570      	push	{r4, r5, r6, lr}
 800597e:	4604      	mov	r4, r0
 8005980:	460d      	mov	r5, r1
 8005982:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005984:	6823      	ldr	r3, [r4, #0]
 8005986:	695b      	ldr	r3, [r3, #20]
 8005988:	061b      	lsls	r3, r3, #24
 800598a:	d501      	bpl.n	8005990 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800598c:	2000      	movs	r0, #0
}
 800598e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005990:	4620      	mov	r0, r4
 8005992:	f7ff ff17 	bl	80057c4 <I2C_IsAcknowledgeFailed>
 8005996:	b9a8      	cbnz	r0, 80059c4 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8005998:	1c6a      	adds	r2, r5, #1
 800599a:	d0f3      	beq.n	8005984 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800599c:	f7fe fe04 	bl	80045a8 <HAL_GetTick>
 80059a0:	1b80      	subs	r0, r0, r6
 80059a2:	42a8      	cmp	r0, r5
 80059a4:	d801      	bhi.n	80059aa <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80059a6:	2d00      	cmp	r5, #0
 80059a8:	d1ec      	bne.n	8005984 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80059aa:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80059ac:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80059ae:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80059b0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80059b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80059b8:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80059ba:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80059be:	f042 0220 	orr.w	r2, r2, #32
 80059c2:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80059c4:	2001      	movs	r0, #1
 80059c6:	e7e2      	b.n	800598e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

080059c8 <I2C_RequestMemoryWrite>:
{
 80059c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80059cc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80059ce:	6802      	ldr	r2, [r0, #0]
{
 80059d0:	b085      	sub	sp, #20
 80059d2:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80059d6:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80059d8:	6813      	ldr	r3, [r2, #0]
 80059da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80059de:	6013      	str	r3, [r2, #0]
{
 80059e0:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80059e2:	463b      	mov	r3, r7
 80059e4:	f8cd 8000 	str.w	r8, [sp]
 80059e8:	2200      	movs	r2, #0
 80059ea:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80059ee:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80059f0:	f7ff ff02 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 80059f4:	6823      	ldr	r3, [r4, #0]
 80059f6:	b138      	cbz	r0, 8005a08 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80059f8:	681b      	ldr	r3, [r3, #0]
 80059fa:	05db      	lsls	r3, r3, #23
 80059fc:	d502      	bpl.n	8005a04 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80059fe:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005a02:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005a04:	2003      	movs	r0, #3
 8005a06:	e00a      	b.n	8005a1e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005a08:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005a0c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005a0e:	4919      	ldr	r1, [pc, #100]	; (8005a74 <I2C_RequestMemoryWrite+0xac>)
 8005a10:	4643      	mov	r3, r8
 8005a12:	463a      	mov	r2, r7
 8005a14:	4620      	mov	r0, r4
 8005a16:	f7ff ff21 	bl	800585c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005a1a:	b118      	cbz	r0, 8005a24 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8005a1c:	2001      	movs	r0, #1
}
 8005a1e:	b005      	add	sp, #20
 8005a20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a24:	6823      	ldr	r3, [r4, #0]
 8005a26:	9003      	str	r0, [sp, #12]
 8005a28:	695a      	ldr	r2, [r3, #20]
 8005a2a:	9203      	str	r2, [sp, #12]
 8005a2c:	699b      	ldr	r3, [r3, #24]
 8005a2e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a30:	4642      	mov	r2, r8
 8005a32:	4639      	mov	r1, r7
 8005a34:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005a36:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a38:	f7ff ffa0 	bl	800597c <I2C_WaitOnTXEFlagUntilTimeout>
 8005a3c:	b140      	cbz	r0, 8005a50 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005a3e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005a40:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a42:	bf01      	itttt	eq
 8005a44:	6822      	ldreq	r2, [r4, #0]
 8005a46:	6813      	ldreq	r3, [r2, #0]
 8005a48:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005a4c:	6013      	streq	r3, [r2, #0]
 8005a4e:	e7e5      	b.n	8005a1c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005a50:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005a54:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005a56:	d102      	bne.n	8005a5e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005a58:	b2ed      	uxtb	r5, r5
 8005a5a:	611d      	str	r5, [r3, #16]
 8005a5c:	e7df      	b.n	8005a1e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005a5e:	0a2a      	lsrs	r2, r5, #8
 8005a60:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005a62:	4639      	mov	r1, r7
 8005a64:	4642      	mov	r2, r8
 8005a66:	4620      	mov	r0, r4
 8005a68:	f7ff ff88 	bl	800597c <I2C_WaitOnTXEFlagUntilTimeout>
 8005a6c:	2800      	cmp	r0, #0
 8005a6e:	d1e6      	bne.n	8005a3e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005a70:	6823      	ldr	r3, [r4, #0]
 8005a72:	e7f1      	b.n	8005a58 <I2C_RequestMemoryWrite+0x90>
 8005a74:	00010002 	.word	0x00010002

08005a78 <I2C_RequestMemoryRead>:
{
 8005a78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005a7c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005a7e:	6803      	ldr	r3, [r0, #0]
{
 8005a80:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005a82:	681a      	ldr	r2, [r3, #0]
 8005a84:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005a88:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005a8a:	681a      	ldr	r2, [r3, #0]
{
 8005a8c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005a90:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005a94:	601a      	str	r2, [r3, #0]
{
 8005a96:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005a98:	463b      	mov	r3, r7
 8005a9a:	f8cd 8000 	str.w	r8, [sp]
 8005a9e:	2200      	movs	r2, #0
 8005aa0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8005aa4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005aa6:	f7ff fea7 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 8005aaa:	6823      	ldr	r3, [r4, #0]
 8005aac:	b148      	cbz	r0, 8005ac2 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005aae:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005ab0:	05db      	lsls	r3, r3, #23
 8005ab2:	d502      	bpl.n	8005aba <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8005ab4:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005ab8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005aba:	2003      	movs	r0, #3
}
 8005abc:	b004      	add	sp, #16
 8005abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005ac2:	fa5f f986 	uxtb.w	r9, r6
 8005ac6:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005aca:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005acc:	492a      	ldr	r1, [pc, #168]	; (8005b78 <I2C_RequestMemoryRead+0x100>)
 8005ace:	4643      	mov	r3, r8
 8005ad0:	463a      	mov	r2, r7
 8005ad2:	4620      	mov	r0, r4
 8005ad4:	f7ff fec2 	bl	800585c <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005ad8:	b108      	cbz	r0, 8005ade <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8005ada:	2001      	movs	r0, #1
 8005adc:	e7ee      	b.n	8005abc <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ade:	6823      	ldr	r3, [r4, #0]
 8005ae0:	9003      	str	r0, [sp, #12]
 8005ae2:	695a      	ldr	r2, [r3, #20]
 8005ae4:	9203      	str	r2, [sp, #12]
 8005ae6:	699b      	ldr	r3, [r3, #24]
 8005ae8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005aea:	4642      	mov	r2, r8
 8005aec:	4639      	mov	r1, r7
 8005aee:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005af0:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005af2:	f7ff ff43 	bl	800597c <I2C_WaitOnTXEFlagUntilTimeout>
 8005af6:	b140      	cbz	r0, 8005b0a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005af8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005afa:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005afc:	bf01      	itttt	eq
 8005afe:	6822      	ldreq	r2, [r4, #0]
 8005b00:	6813      	ldreq	r3, [r2, #0]
 8005b02:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005b06:	6013      	streq	r3, [r2, #0]
 8005b08:	e7e7      	b.n	8005ada <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b0a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005b0e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005b10:	d11a      	bne.n	8005b48 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005b12:	b2ed      	uxtb	r5, r5
 8005b14:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b16:	4642      	mov	r2, r8
 8005b18:	4639      	mov	r1, r7
 8005b1a:	4620      	mov	r0, r4
 8005b1c:	f7ff ff2e 	bl	800597c <I2C_WaitOnTXEFlagUntilTimeout>
 8005b20:	2800      	cmp	r0, #0
 8005b22:	d1e9      	bne.n	8005af8 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005b24:	6822      	ldr	r2, [r4, #0]
 8005b26:	6813      	ldr	r3, [r2, #0]
 8005b28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005b2c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8005b2e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005b32:	4602      	mov	r2, r0
 8005b34:	f8cd 8000 	str.w	r8, [sp]
 8005b38:	463b      	mov	r3, r7
 8005b3a:	4620      	mov	r0, r4
 8005b3c:	f7ff fe5c 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 8005b40:	6822      	ldr	r2, [r4, #0]
 8005b42:	b160      	cbz	r0, 8005b5e <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005b44:	6813      	ldr	r3, [r2, #0]
 8005b46:	e7b3      	b.n	8005ab0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005b48:	0a2a      	lsrs	r2, r5, #8
 8005b4a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005b4c:	4639      	mov	r1, r7
 8005b4e:	4642      	mov	r2, r8
 8005b50:	4620      	mov	r0, r4
 8005b52:	f7ff ff13 	bl	800597c <I2C_WaitOnTXEFlagUntilTimeout>
 8005b56:	2800      	cmp	r0, #0
 8005b58:	d1ce      	bne.n	8005af8 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005b5a:	6823      	ldr	r3, [r4, #0]
 8005b5c:	e7d9      	b.n	8005b12 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8005b5e:	f049 0301 	orr.w	r3, r9, #1
 8005b62:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005b64:	4904      	ldr	r1, [pc, #16]	; (8005b78 <I2C_RequestMemoryRead+0x100>)
 8005b66:	4643      	mov	r3, r8
 8005b68:	463a      	mov	r2, r7
 8005b6a:	4620      	mov	r0, r4
 8005b6c:	f7ff fe76 	bl	800585c <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8005b70:	3800      	subs	r0, #0
 8005b72:	bf18      	it	ne
 8005b74:	2001      	movne	r0, #1
 8005b76:	e7a1      	b.n	8005abc <I2C_RequestMemoryRead+0x44>
 8005b78:	00010002 	.word	0x00010002

08005b7c <HAL_I2C_Init>:
{
 8005b7c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8005b7e:	4604      	mov	r4, r0
 8005b80:	b908      	cbnz	r0, 8005b86 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8005b82:	2001      	movs	r0, #1
}
 8005b84:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005b86:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005b8a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005b8e:	b91b      	cbnz	r3, 8005b98 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8005b90:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8005b94:	f7fb ffca 	bl	8001b2c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005b98:	2324      	movs	r3, #36	; 0x24
 8005b9a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005b9e:	6823      	ldr	r3, [r4, #0]
 8005ba0:	681a      	ldr	r2, [r3, #0]
 8005ba2:	f022 0201 	bic.w	r2, r2, #1
 8005ba6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8005ba8:	681a      	ldr	r2, [r3, #0]
 8005baa:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005bae:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8005bb0:	681a      	ldr	r2, [r3, #0]
 8005bb2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005bb6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8005bb8:	f001 f80e 	bl	8006bd8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8005bbc:	4b3f      	ldr	r3, [pc, #252]	; (8005cbc <HAL_I2C_Init+0x140>)
 8005bbe:	6865      	ldr	r5, [r4, #4]
 8005bc0:	429d      	cmp	r5, r3
 8005bc2:	bf94      	ite	ls
 8005bc4:	4b3e      	ldrls	r3, [pc, #248]	; (8005cc0 <HAL_I2C_Init+0x144>)
 8005bc6:	4b3f      	ldrhi	r3, [pc, #252]	; (8005cc4 <HAL_I2C_Init+0x148>)
 8005bc8:	4298      	cmp	r0, r3
 8005bca:	bf8c      	ite	hi
 8005bcc:	2300      	movhi	r3, #0
 8005bce:	2301      	movls	r3, #1
 8005bd0:	2b00      	cmp	r3, #0
 8005bd2:	d1d6      	bne.n	8005b82 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005bd4:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005bd6:	4e39      	ldr	r6, [pc, #228]	; (8005cbc <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005bd8:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005bda:	493b      	ldr	r1, [pc, #236]	; (8005cc8 <HAL_I2C_Init+0x14c>)
 8005bdc:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005be0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005be4:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005be6:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005be8:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005bea:	bf88      	it	hi
 8005bec:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8005bf0:	6a13      	ldr	r3, [r2, #32]
 8005bf2:	bf88      	it	hi
 8005bf4:	4371      	mulhi	r1, r6
 8005bf6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005bfa:	bf84      	itt	hi
 8005bfc:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8005c00:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005c04:	3101      	adds	r1, #1
 8005c06:	4319      	orrs	r1, r3
 8005c08:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005c0a:	69d1      	ldr	r1, [r2, #28]
 8005c0c:	1e43      	subs	r3, r0, #1
 8005c0e:	482b      	ldr	r0, [pc, #172]	; (8005cbc <HAL_I2C_Init+0x140>)
 8005c10:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005c14:	4285      	cmp	r5, r0
 8005c16:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c1a:	d832      	bhi.n	8005c82 <HAL_I2C_Init+0x106>
 8005c1c:	006d      	lsls	r5, r5, #1
 8005c1e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8005c22:	fbb3 f3f5 	udiv	r3, r3, r5
 8005c26:	3301      	adds	r3, #1
 8005c28:	4203      	tst	r3, r0
 8005c2a:	d042      	beq.n	8005cb2 <HAL_I2C_Init+0x136>
 8005c2c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005c30:	430b      	orrs	r3, r1
 8005c32:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005c34:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005c38:	6811      	ldr	r1, [r2, #0]
 8005c3a:	4303      	orrs	r3, r0
 8005c3c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8005c40:	430b      	orrs	r3, r1
 8005c42:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005c44:	6891      	ldr	r1, [r2, #8]
 8005c46:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005c4a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8005c4e:	4303      	orrs	r3, r0
 8005c50:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c54:	430b      	orrs	r3, r1
 8005c56:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005c58:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005c5c:	68d1      	ldr	r1, [r2, #12]
 8005c5e:	4303      	orrs	r3, r0
 8005c60:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005c64:	430b      	orrs	r3, r1
 8005c66:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005c68:	6813      	ldr	r3, [r2, #0]
 8005c6a:	f043 0301 	orr.w	r3, r3, #1
 8005c6e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005c70:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8005c72:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005c74:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8005c76:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005c7a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005c7c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8005c80:	e780      	b.n	8005b84 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005c82:	68a0      	ldr	r0, [r4, #8]
 8005c84:	b950      	cbnz	r0, 8005c9c <HAL_I2C_Init+0x120>
 8005c86:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005c8a:	fbb3 f3f5 	udiv	r3, r3, r5
 8005c8e:	3301      	adds	r3, #1
 8005c90:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005c94:	b17b      	cbz	r3, 8005cb6 <HAL_I2C_Init+0x13a>
 8005c96:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005c9a:	e7c9      	b.n	8005c30 <HAL_I2C_Init+0xb4>
 8005c9c:	2019      	movs	r0, #25
 8005c9e:	4345      	muls	r5, r0
 8005ca0:	fbb3 f3f5 	udiv	r3, r3, r5
 8005ca4:	3301      	adds	r3, #1
 8005ca6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005caa:	b123      	cbz	r3, 8005cb6 <HAL_I2C_Init+0x13a>
 8005cac:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005cb0:	e7be      	b.n	8005c30 <HAL_I2C_Init+0xb4>
 8005cb2:	2304      	movs	r3, #4
 8005cb4:	e7bc      	b.n	8005c30 <HAL_I2C_Init+0xb4>
 8005cb6:	2301      	movs	r3, #1
 8005cb8:	e7ba      	b.n	8005c30 <HAL_I2C_Init+0xb4>
 8005cba:	bf00      	nop
 8005cbc:	000186a0 	.word	0x000186a0
 8005cc0:	001e847f 	.word	0x001e847f
 8005cc4:	003d08ff 	.word	0x003d08ff
 8005cc8:	000f4240 	.word	0x000f4240

08005ccc <HAL_I2C_DeInit>:
{
 8005ccc:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005cce:	4604      	mov	r4, r0
 8005cd0:	b198      	cbz	r0, 8005cfa <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8005cd2:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005cd4:	2324      	movs	r3, #36	; 0x24
 8005cd6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005cda:	6813      	ldr	r3, [r2, #0]
 8005cdc:	f023 0301 	bic.w	r3, r3, #1
 8005ce0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8005ce2:	f7fb ff67 	bl	8001bb4 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8005ce6:	2000      	movs	r0, #0
 8005ce8:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8005cea:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8005cee:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8005cf2:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8005cf4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8005cf8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005cfa:	2001      	movs	r0, #1
 8005cfc:	e7fc      	b.n	8005cf8 <HAL_I2C_DeInit+0x2c>
	...

08005d00 <HAL_I2C_Mem_Write>:
{
 8005d00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005d04:	4604      	mov	r4, r0
 8005d06:	4699      	mov	r9, r3
 8005d08:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005d0a:	460f      	mov	r7, r1
 8005d0c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005d0e:	f7fe fc4b 	bl	80045a8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d12:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005d16:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005d18:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005d1a:	d003      	beq.n	8005d24 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005d1c:	2002      	movs	r0, #2
}
 8005d1e:	b003      	add	sp, #12
 8005d20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005d24:	9000      	str	r0, [sp, #0]
 8005d26:	493c      	ldr	r1, [pc, #240]	; (8005e18 <HAL_I2C_Mem_Write+0x118>)
 8005d28:	2319      	movs	r3, #25
 8005d2a:	2201      	movs	r2, #1
 8005d2c:	4620      	mov	r0, r4
 8005d2e:	f7ff fd63 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 8005d32:	2800      	cmp	r0, #0
 8005d34:	d1f2      	bne.n	8005d1c <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005d36:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005d3a:	2b01      	cmp	r3, #1
 8005d3c:	d0ee      	beq.n	8005d1c <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005d3e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005d40:	2301      	movs	r3, #1
 8005d42:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005d46:	6803      	ldr	r3, [r0, #0]
 8005d48:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005d4a:	bf5e      	ittt	pl
 8005d4c:	6803      	ldrpl	r3, [r0, #0]
 8005d4e:	f043 0301 	orrpl.w	r3, r3, #1
 8005d52:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005d54:	6803      	ldr	r3, [r0, #0]
 8005d56:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005d5a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005d5c:	2321      	movs	r3, #33	; 0x21
 8005d5e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005d62:	2340      	movs	r3, #64	; 0x40
 8005d64:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005d68:	2300      	movs	r3, #0
 8005d6a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005d6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d6e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005d70:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8005d74:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005d76:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005d78:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005d7a:	4b28      	ldr	r3, [pc, #160]	; (8005e1c <HAL_I2C_Mem_Write+0x11c>)
 8005d7c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005d7e:	e9cd 6500 	strd	r6, r5, [sp]
 8005d82:	464b      	mov	r3, r9
 8005d84:	4642      	mov	r2, r8
 8005d86:	4639      	mov	r1, r7
 8005d88:	4620      	mov	r0, r4
 8005d8a:	f7ff fe1d 	bl	80059c8 <I2C_RequestMemoryWrite>
 8005d8e:	2800      	cmp	r0, #0
 8005d90:	d02a      	beq.n	8005de8 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8005d92:	2001      	movs	r0, #1
 8005d94:	e7c3      	b.n	8005d1e <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005d96:	f7ff fdf1 	bl	800597c <I2C_WaitOnTXEFlagUntilTimeout>
 8005d9a:	b140      	cbz	r0, 8005dae <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005d9c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d9e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005da0:	bf01      	itttt	eq
 8005da2:	6822      	ldreq	r2, [r4, #0]
 8005da4:	6813      	ldreq	r3, [r2, #0]
 8005da6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005daa:	6013      	streq	r3, [r2, #0]
 8005dac:	e7f1      	b.n	8005d92 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005dae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005db0:	6827      	ldr	r7, [r4, #0]
 8005db2:	461a      	mov	r2, r3
 8005db4:	f812 1b01 	ldrb.w	r1, [r2], #1
 8005db8:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8005dba:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005dbc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8005dbe:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005dc0:	3a01      	subs	r2, #1
 8005dc2:	b292      	uxth	r2, r2
 8005dc4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005dc6:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8005dc8:	1e48      	subs	r0, r1, #1
 8005dca:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005dcc:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8005dce:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8005dd0:	d50a      	bpl.n	8005de8 <HAL_I2C_Mem_Write+0xe8>
 8005dd2:	b148      	cbz	r0, 8005de8 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005dd4:	785a      	ldrb	r2, [r3, #1]
 8005dd6:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005dd8:	3302      	adds	r3, #2
 8005dda:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005ddc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005dde:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8005de0:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8005de2:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005de4:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005de6:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005de8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005dea:	462a      	mov	r2, r5
 8005dec:	4631      	mov	r1, r6
 8005dee:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d1d0      	bne.n	8005d96 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005df4:	f7ff fd9c 	bl	8005930 <I2C_WaitOnBTFFlagUntilTimeout>
 8005df8:	2800      	cmp	r0, #0
 8005dfa:	d1cf      	bne.n	8005d9c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005dfc:	6822      	ldr	r2, [r4, #0]
 8005dfe:	6813      	ldr	r3, [r2, #0]
 8005e00:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005e04:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005e06:	2320      	movs	r3, #32
 8005e08:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005e0c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005e10:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005e14:	e783      	b.n	8005d1e <HAL_I2C_Mem_Write+0x1e>
 8005e16:	bf00      	nop
 8005e18:	00100002 	.word	0x00100002
 8005e1c:	ffff0000 	.word	0xffff0000

08005e20 <HAL_I2C_Mem_Read>:
{
 8005e20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005e24:	4604      	mov	r4, r0
 8005e26:	b087      	sub	sp, #28
 8005e28:	4699      	mov	r9, r3
 8005e2a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005e2c:	460d      	mov	r5, r1
 8005e2e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8005e30:	f7fe fbba 	bl	80045a8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e34:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005e38:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005e3a:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e3c:	d004      	beq.n	8005e48 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8005e3e:	2502      	movs	r5, #2
}
 8005e40:	4628      	mov	r0, r5
 8005e42:	b007      	add	sp, #28
 8005e44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005e48:	9000      	str	r0, [sp, #0]
 8005e4a:	4976      	ldr	r1, [pc, #472]	; (8006024 <HAL_I2C_Mem_Read+0x204>)
 8005e4c:	2319      	movs	r3, #25
 8005e4e:	2201      	movs	r2, #1
 8005e50:	4620      	mov	r0, r4
 8005e52:	f7ff fcd1 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 8005e56:	2800      	cmp	r0, #0
 8005e58:	d1f1      	bne.n	8005e3e <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005e5a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005e5e:	2b01      	cmp	r3, #1
 8005e60:	d0ed      	beq.n	8005e3e <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005e62:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005e64:	2301      	movs	r3, #1
 8005e66:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005e6a:	6803      	ldr	r3, [r0, #0]
 8005e6c:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005e6e:	bf5e      	ittt	pl
 8005e70:	6803      	ldrpl	r3, [r0, #0]
 8005e72:	f043 0301 	orrpl.w	r3, r3, #1
 8005e76:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005e78:	6803      	ldr	r3, [r0, #0]
 8005e7a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005e7e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005e80:	2322      	movs	r3, #34	; 0x22
 8005e82:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005e86:	2340      	movs	r3, #64	; 0x40
 8005e88:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005e8c:	2300      	movs	r3, #0
 8005e8e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005e90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005e92:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8005e94:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005e98:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8005e9a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005e9c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8005e9e:	4b62      	ldr	r3, [pc, #392]	; (8006028 <HAL_I2C_Mem_Read+0x208>)
 8005ea0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005ea2:	4629      	mov	r1, r5
 8005ea4:	e9cd 7600 	strd	r7, r6, [sp]
 8005ea8:	464b      	mov	r3, r9
 8005eaa:	4642      	mov	r2, r8
 8005eac:	4620      	mov	r0, r4
 8005eae:	f7ff fde3 	bl	8005a78 <I2C_RequestMemoryRead>
 8005eb2:	4605      	mov	r5, r0
 8005eb4:	b108      	cbz	r0, 8005eba <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8005eb6:	2501      	movs	r5, #1
 8005eb8:	e7c2      	b.n	8005e40 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8005eba:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ebc:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8005ebe:	b9b2      	cbnz	r2, 8005eee <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005ec0:	9002      	str	r0, [sp, #8]
 8005ec2:	695a      	ldr	r2, [r3, #20]
 8005ec4:	9202      	str	r2, [sp, #8]
 8005ec6:	699a      	ldr	r2, [r3, #24]
 8005ec8:	9202      	str	r2, [sp, #8]
 8005eca:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005ecc:	681a      	ldr	r2, [r3, #0]
 8005ece:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005ed2:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005ed4:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800602c <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005ed8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005eda:	2b00      	cmp	r3, #0
 8005edc:	d12c      	bne.n	8005f38 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8005ede:	2220      	movs	r2, #32
 8005ee0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005ee4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005ee8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005eec:	e7a8      	b.n	8005e40 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8005eee:	2a01      	cmp	r2, #1
 8005ef0:	d10a      	bne.n	8005f08 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005ef2:	681a      	ldr	r2, [r3, #0]
 8005ef4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ef8:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005efa:	9003      	str	r0, [sp, #12]
 8005efc:	695a      	ldr	r2, [r3, #20]
 8005efe:	9203      	str	r2, [sp, #12]
 8005f00:	699a      	ldr	r2, [r3, #24]
 8005f02:	9203      	str	r2, [sp, #12]
 8005f04:	9a03      	ldr	r2, [sp, #12]
 8005f06:	e7e1      	b.n	8005ecc <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005f08:	2a02      	cmp	r2, #2
 8005f0a:	d10e      	bne.n	8005f2a <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005f0c:	681a      	ldr	r2, [r3, #0]
 8005f0e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f12:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005f14:	681a      	ldr	r2, [r3, #0]
 8005f16:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005f1a:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f1c:	9004      	str	r0, [sp, #16]
 8005f1e:	695a      	ldr	r2, [r3, #20]
 8005f20:	9204      	str	r2, [sp, #16]
 8005f22:	699b      	ldr	r3, [r3, #24]
 8005f24:	9304      	str	r3, [sp, #16]
 8005f26:	9b04      	ldr	r3, [sp, #16]
 8005f28:	e7d4      	b.n	8005ed4 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005f2a:	9005      	str	r0, [sp, #20]
 8005f2c:	695a      	ldr	r2, [r3, #20]
 8005f2e:	9205      	str	r2, [sp, #20]
 8005f30:	699b      	ldr	r3, [r3, #24]
 8005f32:	9305      	str	r3, [sp, #20]
 8005f34:	9b05      	ldr	r3, [sp, #20]
 8005f36:	e7cd      	b.n	8005ed4 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005f38:	2b03      	cmp	r3, #3
 8005f3a:	d856      	bhi.n	8005fea <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005f3c:	2b01      	cmp	r3, #1
 8005f3e:	d115      	bne.n	8005f6c <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005f40:	4632      	mov	r2, r6
 8005f42:	4639      	mov	r1, r7
 8005f44:	4620      	mov	r0, r4
 8005f46:	f7ff fcc4 	bl	80058d2 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005f4a:	2800      	cmp	r0, #0
 8005f4c:	d1b3      	bne.n	8005eb6 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005f4e:	6823      	ldr	r3, [r4, #0]
 8005f50:	691a      	ldr	r2, [r3, #16]
 8005f52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005f54:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005f56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005f58:	3301      	adds	r3, #1
 8005f5a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005f5c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005f5e:	3b01      	subs	r3, #1
 8005f60:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005f62:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005f64:	3b01      	subs	r3, #1
 8005f66:	b29b      	uxth	r3, r3
 8005f68:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005f6a:	e7b5      	b.n	8005ed8 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005f6c:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005f6e:	9600      	str	r6, [sp, #0]
 8005f70:	463b      	mov	r3, r7
 8005f72:	f04f 0200 	mov.w	r2, #0
 8005f76:	4641      	mov	r1, r8
 8005f78:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8005f7a:	d119      	bne.n	8005fb0 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005f7c:	f7ff fc3c 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 8005f80:	2800      	cmp	r0, #0
 8005f82:	d198      	bne.n	8005eb6 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005f84:	6823      	ldr	r3, [r4, #0]
 8005f86:	681a      	ldr	r2, [r3, #0]
 8005f88:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005f8c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005f8e:	691a      	ldr	r2, [r3, #16]
 8005f90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005f92:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005f94:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005f96:	1c53      	adds	r3, r2, #1
 8005f98:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005f9a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005f9c:	3b01      	subs	r3, #1
 8005f9e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005fa0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005fa2:	3b01      	subs	r3, #1
 8005fa4:	b29b      	uxth	r3, r3
 8005fa6:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005fa8:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005faa:	691b      	ldr	r3, [r3, #16]
 8005fac:	7053      	strb	r3, [r2, #1]
 8005fae:	e7d2      	b.n	8005f56 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005fb0:	f7ff fc22 	bl	80057f8 <I2C_WaitOnFlagUntilTimeout>
 8005fb4:	2800      	cmp	r0, #0
 8005fb6:	f47f af7e 	bne.w	8005eb6 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005fba:	6823      	ldr	r3, [r4, #0]
 8005fbc:	681a      	ldr	r2, [r3, #0]
 8005fbe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005fc2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005fc4:	691a      	ldr	r2, [r3, #16]
 8005fc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005fc8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005fca:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005fcc:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8005fce:	3301      	adds	r3, #1
 8005fd0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005fd2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005fd4:	3b01      	subs	r3, #1
 8005fd6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005fd8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005fda:	3b01      	subs	r3, #1
 8005fdc:	b29b      	uxth	r3, r3
 8005fde:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005fe0:	4602      	mov	r2, r0
 8005fe2:	463b      	mov	r3, r7
 8005fe4:	4641      	mov	r1, r8
 8005fe6:	4620      	mov	r0, r4
 8005fe8:	e7c8      	b.n	8005f7c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005fea:	4632      	mov	r2, r6
 8005fec:	4639      	mov	r1, r7
 8005fee:	4620      	mov	r0, r4
 8005ff0:	f7ff fc6f 	bl	80058d2 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005ff4:	2800      	cmp	r0, #0
 8005ff6:	f47f af5e 	bne.w	8005eb6 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005ffa:	6823      	ldr	r3, [r4, #0]
 8005ffc:	691a      	ldr	r2, [r3, #16]
 8005ffe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006000:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006002:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006004:	1c53      	adds	r3, r2, #1
 8006006:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006008:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800600a:	3b01      	subs	r3, #1
 800600c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800600e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006010:	3b01      	subs	r3, #1
 8006012:	b29b      	uxth	r3, r3
 8006014:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006016:	6823      	ldr	r3, [r4, #0]
 8006018:	6959      	ldr	r1, [r3, #20]
 800601a:	0749      	lsls	r1, r1, #29
 800601c:	f57f af5c 	bpl.w	8005ed8 <HAL_I2C_Mem_Read+0xb8>
 8006020:	e7c3      	b.n	8005faa <HAL_I2C_Mem_Read+0x18a>
 8006022:	bf00      	nop
 8006024:	00100002 	.word	0x00100002
 8006028:	ffff0000 	.word	0xffff0000
 800602c:	00010004 	.word	0x00010004

08006030 <HAL_I2C_GetState>:
  return hi2c->State;
 8006030:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8006034:	4770      	bx	lr

08006036 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006036:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006038:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800603c:	01d2      	lsls	r2, r2, #7
 800603e:	3284      	adds	r2, #132	; 0x84
 8006040:	1883      	adds	r3, r0, r2
{
 8006042:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006046:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006048:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800604a:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800604c:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006050:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006054:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006056:	68c5      	ldr	r5, [r0, #12]
 8006058:	f10c 0701 	add.w	r7, ip, #1
 800605c:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006060:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006064:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006066:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006068:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800606c:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800606e:	68c5      	ldr	r5, [r0, #12]
 8006070:	68ce      	ldr	r6, [r1, #12]
 8006072:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006076:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006078:	689d      	ldr	r5, [r3, #8]
 800607a:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800607e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006080:	68c7      	ldr	r7, [r0, #12]
 8006082:	688d      	ldr	r5, [r1, #8]
 8006084:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006088:	3501      	adds	r5, #1
 800608a:	443d      	add	r5, r7
 800608c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006090:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006092:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006094:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006096:	f025 0507 	bic.w	r5, r5, #7
 800609a:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800609c:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80060a0:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80060a2:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80060a4:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80060a8:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80060ac:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80060b0:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80060b4:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80060b8:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80060bc:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80060c0:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80060c2:	695d      	ldr	r5, [r3, #20]
 80060c4:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80060c8:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80060ca:	694d      	ldr	r5, [r1, #20]
 80060cc:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80060ce:	69dd      	ldr	r5, [r3, #28]
 80060d0:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 80060d4:	f025 0507 	bic.w	r5, r5, #7
 80060d8:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80060da:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80060de:	433d      	orrs	r5, r7
 80060e0:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80060e2:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80060e4:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80060e6:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80060ea:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80060ec:	b31e      	cbz	r6, 8006136 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80060ee:	2e01      	cmp	r6, #1
 80060f0:	d023      	beq.n	800613a <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80060f2:	1eb5      	subs	r5, r6, #2
 80060f4:	2d02      	cmp	r5, #2
 80060f6:	d922      	bls.n	800613e <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80060f8:	2e07      	cmp	r6, #7
 80060fa:	bf0c      	ite	eq
 80060fc:	2502      	moveq	r5, #2
 80060fe:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006100:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006102:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006106:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006108:	eba4 040c 	sub.w	r4, r4, ip
 800610c:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800610e:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006110:	436c      	muls	r4, r5
 8006112:	436e      	muls	r6, r5
 8006114:	3403      	adds	r4, #3
 8006116:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800611a:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800611c:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800611e:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006122:	f024 0407 	bic.w	r4, r4, #7
 8006126:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006128:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800612a:	5883      	ldr	r3, [r0, r2]
 800612c:	f043 0301 	orr.w	r3, r3, #1
 8006130:	5083      	str	r3, [r0, r2]
}
 8006132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006136:	2504      	movs	r5, #4
 8006138:	e7e2      	b.n	8006100 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800613a:	2503      	movs	r5, #3
 800613c:	e7e0      	b.n	8006100 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800613e:	2502      	movs	r5, #2
 8006140:	e7de      	b.n	8006100 <LTDC_SetConfig+0xca>
	...

08006144 <HAL_LTDC_Init>:
{
 8006144:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006146:	4604      	mov	r4, r0
 8006148:	2800      	cmp	r0, #0
 800614a:	d063      	beq.n	8006214 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800614c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006150:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006154:	b91b      	cbnz	r3, 800615e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006156:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800615a:	f7fb fd49 	bl	8001bf0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800615e:	2302      	movs	r3, #2
 8006160:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006164:	6823      	ldr	r3, [r4, #0]
 8006166:	699a      	ldr	r2, [r3, #24]
 8006168:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800616c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800616e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006172:	4302      	orrs	r2, r0
 8006174:	68e0      	ldr	r0, [r4, #12]
 8006176:	6999      	ldr	r1, [r3, #24]
 8006178:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800617a:	6920      	ldr	r0, [r4, #16]
 800617c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800617e:	430a      	orrs	r2, r1
 8006180:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006182:	689a      	ldr	r2, [r3, #8]
 8006184:	4924      	ldr	r1, [pc, #144]	; (8006218 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006186:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006188:	400a      	ands	r2, r1
 800618a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800618c:	689a      	ldr	r2, [r3, #8]
 800618e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006192:	69a0      	ldr	r0, [r4, #24]
 8006194:	4302      	orrs	r2, r0
 8006196:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006198:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800619a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800619c:	400a      	ands	r2, r1
 800619e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80061a0:	68da      	ldr	r2, [r3, #12]
 80061a2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80061a6:	6a20      	ldr	r0, [r4, #32]
 80061a8:	4302      	orrs	r2, r0
 80061aa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80061ac:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80061ae:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80061b0:	400a      	ands	r2, r1
 80061b2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80061b4:	691a      	ldr	r2, [r3, #16]
 80061b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80061ba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80061bc:	4302      	orrs	r2, r0
 80061be:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80061c0:	695a      	ldr	r2, [r3, #20]
 80061c2:	4011      	ands	r1, r2
 80061c4:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80061c6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80061c8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80061ca:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80061ce:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80061d0:	430a      	orrs	r2, r1
 80061d2:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80061d4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80061d6:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80061da:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80061de:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80061e2:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80061e4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80061e6:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80061ea:	430a      	orrs	r2, r1
 80061ec:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80061f0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80061f4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80061f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80061f8:	f042 0206 	orr.w	r2, r2, #6
 80061fc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80061fe:	699a      	ldr	r2, [r3, #24]
 8006200:	f042 0201 	orr.w	r2, r2, #1
 8006204:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006206:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006208:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800620a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800620e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8006212:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006214:	2001      	movs	r0, #1
 8006216:	e7fc      	b.n	8006212 <HAL_LTDC_Init+0xce>
 8006218:	f000f800 	.word	0xf000f800

0800621c <HAL_LTDC_ErrorCallback>:
 800621c:	4770      	bx	lr

0800621e <HAL_LTDC_LineEventCallback>:
 800621e:	4770      	bx	lr

08006220 <HAL_LTDC_ReloadEventCallback>:
 8006220:	4770      	bx	lr

08006222 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006222:	6803      	ldr	r3, [r0, #0]
{
 8006224:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006226:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006228:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800622a:	0772      	lsls	r2, r6, #29
{
 800622c:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800622e:	d514      	bpl.n	800625a <HAL_LTDC_IRQHandler+0x38>
 8006230:	0769      	lsls	r1, r5, #29
 8006232:	d512      	bpl.n	800625a <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8006234:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006236:	f022 0204 	bic.w	r2, r2, #4
 800623a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800623c:	2204      	movs	r2, #4
 800623e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006240:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8006244:	f043 0301 	orr.w	r3, r3, #1
 8006248:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800624c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800624e:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006252:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006256:	f7ff ffe1 	bl	800621c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800625a:	07b2      	lsls	r2, r6, #30
 800625c:	d516      	bpl.n	800628c <HAL_LTDC_IRQHandler+0x6a>
 800625e:	07ab      	lsls	r3, r5, #30
 8006260:	d514      	bpl.n	800628c <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8006262:	6823      	ldr	r3, [r4, #0]
 8006264:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006266:	f022 0202 	bic.w	r2, r2, #2
 800626a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800626c:	2202      	movs	r2, #2
 800626e:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006270:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8006274:	4313      	orrs	r3, r2
 8006276:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800627a:	2304      	movs	r3, #4
 800627c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8006280:	2300      	movs	r3, #0
 8006282:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8006286:	4620      	mov	r0, r4
 8006288:	f7ff ffc8 	bl	800621c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800628c:	07f0      	lsls	r0, r6, #31
 800628e:	d510      	bpl.n	80062b2 <HAL_LTDC_IRQHandler+0x90>
 8006290:	07e9      	lsls	r1, r5, #31
 8006292:	d50e      	bpl.n	80062b2 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006294:	6823      	ldr	r3, [r4, #0]
 8006296:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006298:	f022 0201 	bic.w	r2, r2, #1
 800629c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800629e:	2201      	movs	r2, #1
 80062a0:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80062a2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80062a4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80062a8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80062ac:	4620      	mov	r0, r4
 80062ae:	f7ff ffb6 	bl	800621e <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80062b2:	0732      	lsls	r2, r6, #28
 80062b4:	d511      	bpl.n	80062da <HAL_LTDC_IRQHandler+0xb8>
 80062b6:	072b      	lsls	r3, r5, #28
 80062b8:	d50f      	bpl.n	80062da <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80062ba:	6823      	ldr	r3, [r4, #0]
 80062bc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80062be:	f022 0208 	bic.w	r2, r2, #8
 80062c2:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80062c4:	2208      	movs	r2, #8
 80062c6:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80062c8:	2301      	movs	r3, #1
 80062ca:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80062ce:	2300      	movs	r3, #0
 80062d0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80062d4:	4620      	mov	r0, r4
 80062d6:	f7ff ffa3 	bl	8006220 <HAL_LTDC_ReloadEventCallback>
}
 80062da:	bd70      	pop	{r4, r5, r6, pc}

080062dc <HAL_LTDC_ConfigLayer>:
{
 80062dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80062e0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80062e4:	2b01      	cmp	r3, #1
{
 80062e6:	4606      	mov	r6, r0
 80062e8:	460f      	mov	r7, r1
 80062ea:	4694      	mov	ip, r2
 80062ec:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80062f0:	d01f      	beq.n	8006332 <HAL_LTDC_ConfigLayer+0x56>
 80062f2:	f04f 0801 	mov.w	r8, #1
 80062f6:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80062fa:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80062fe:	2434      	movs	r4, #52	; 0x34
 8006300:	460d      	mov	r5, r1
 8006302:	fb04 6402 	mla	r4, r4, r2, r6
 8006306:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006308:	3438      	adds	r4, #56	; 0x38
 800630a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800630c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800630e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006310:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006312:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006314:	682b      	ldr	r3, [r5, #0]
 8006316:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006318:	4630      	mov	r0, r6
 800631a:	4662      	mov	r2, ip
 800631c:	4639      	mov	r1, r7
 800631e:	f7ff fe8a 	bl	8006036 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006322:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8006324:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006326:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800632a:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800632e:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8006332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006338 <HAL_LTDC_SetPitch>:
{
 8006338:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800633a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800633e:	2b01      	cmp	r3, #1
 8006340:	f04f 0302 	mov.w	r3, #2
 8006344:	d02c      	beq.n	80063a0 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8006346:	2434      	movs	r4, #52	; 0x34
 8006348:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800634c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8006350:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006352:	b33c      	cbz	r4, 80063a4 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006354:	2c01      	cmp	r4, #1
 8006356:	d027      	beq.n	80063a8 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006358:	1ea5      	subs	r5, r4, #2
 800635a:	429d      	cmp	r5, r3
 800635c:	d902      	bls.n	8006364 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800635e:	2c07      	cmp	r4, #7
 8006360:	bf18      	it	ne
 8006362:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8006364:	6804      	ldr	r4, [r0, #0]
 8006366:	01d2      	lsls	r2, r2, #7
 8006368:	3284      	adds	r2, #132	; 0x84
 800636a:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800636c:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800636e:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8006370:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8006374:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8006378:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800637a:	4c0c      	ldr	r4, [pc, #48]	; (80063ac <HAL_LTDC_SetPitch+0x74>)
 800637c:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800637e:	f045 0501 	orr.w	r5, r5, #1
 8006382:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8006384:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8006386:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800638a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800638c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800638e:	f043 0301 	orr.w	r3, r3, #1
 8006392:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8006394:	2301      	movs	r3, #1
 8006396:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800639a:	2300      	movs	r3, #0
 800639c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80063a0:	4618      	mov	r0, r3
 80063a2:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80063a4:	2304      	movs	r3, #4
 80063a6:	e7dd      	b.n	8006364 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80063a8:	2303      	movs	r3, #3
 80063aa:	e7db      	b.n	8006364 <HAL_LTDC_SetPitch+0x2c>
 80063ac:	40016800 	.word	0x40016800

080063b0 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80063b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80063b2:	2300      	movs	r3, #0
 80063b4:	9301      	str	r3, [sp, #4]
 80063b6:	4b18      	ldr	r3, [pc, #96]	; (8006418 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80063b8:	4d18      	ldr	r5, [pc, #96]	; (800641c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80063ba:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80063bc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80063c0:	641a      	str	r2, [r3, #64]	; 0x40
 80063c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063c4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80063c8:	9301      	str	r3, [sp, #4]
 80063ca:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80063cc:	4b14      	ldr	r3, [pc, #80]	; (8006420 <HAL_PWREx_EnableOverDrive+0x70>)
 80063ce:	2201      	movs	r2, #1
 80063d0:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 80063d2:	f7fe f8e9 	bl	80045a8 <HAL_GetTick>
 80063d6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80063d8:	686b      	ldr	r3, [r5, #4]
 80063da:	03da      	lsls	r2, r3, #15
 80063dc:	d50b      	bpl.n	80063f6 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80063de:	4b10      	ldr	r3, [pc, #64]	; (8006420 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80063e0:	4d0e      	ldr	r5, [pc, #56]	; (800641c <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80063e2:	2201      	movs	r2, #1
 80063e4:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 80063e6:	f7fe f8df 	bl	80045a8 <HAL_GetTick>
 80063ea:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80063ec:	686b      	ldr	r3, [r5, #4]
 80063ee:	039b      	lsls	r3, r3, #14
 80063f0:	d50a      	bpl.n	8006408 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80063f2:	2000      	movs	r0, #0
 80063f4:	e006      	b.n	8006404 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80063f6:	f7fe f8d7 	bl	80045a8 <HAL_GetTick>
 80063fa:	1b00      	subs	r0, r0, r4
 80063fc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006400:	d9ea      	bls.n	80063d8 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8006402:	2003      	movs	r0, #3
}
 8006404:	b003      	add	sp, #12
 8006406:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006408:	f7fe f8ce 	bl	80045a8 <HAL_GetTick>
 800640c:	1b00      	subs	r0, r0, r4
 800640e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006412:	d9eb      	bls.n	80063ec <HAL_PWREx_EnableOverDrive+0x3c>
 8006414:	e7f5      	b.n	8006402 <HAL_PWREx_EnableOverDrive+0x52>
 8006416:	bf00      	nop
 8006418:	40023800 	.word	0x40023800
 800641c:	40007000 	.word	0x40007000
 8006420:	420e0000 	.word	0x420e0000

08006424 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8006424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8006428:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800642a:	b13e      	cbz	r6, 800643c <QSPI_Config+0x18>
 800642c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8006430:	bf1f      	itttt	ne
 8006432:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8006434:	6804      	ldrne	r4, [r0, #0]
 8006436:	f103 33ff 	addne.w	r3, r3, #4294967295
 800643a:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800643c:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006440:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8006444:	f1b9 0f00 	cmp.w	r9, #0
 8006448:	d04f      	beq.n	80064ea <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800644a:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800644c:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800644e:	f8d1 a000 	ldr.w	sl, [r1]
 8006452:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8006456:	ea46 0909 	orr.w	r9, r6, r9
 800645a:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800645e:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 8006462:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8006466:	b335      	cbz	r5, 80064b6 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8006468:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800646a:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800646c:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800646e:	ea49 0505 	orr.w	r5, r9, r5
 8006472:	b19f      	cbz	r7, 800649c <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006474:	ea4a 0307 	orr.w	r3, sl, r7
 8006478:	4323      	orrs	r3, r4
 800647a:	ea43 0308 	orr.w	r3, r3, r8
 800647e:	68cc      	ldr	r4, [r1, #12]
 8006480:	ea43 030e 	orr.w	r3, r3, lr
 8006484:	4333      	orrs	r3, r6
 8006486:	4323      	orrs	r3, r4
 8006488:	ea43 030c 	orr.w	r3, r3, ip
 800648c:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800648e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006492:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006494:	d00d      	beq.n	80064b2 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006496:	684b      	ldr	r3, [r1, #4]
 8006498:	6183      	str	r3, [r0, #24]
 800649a:	e00a      	b.n	80064b2 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800649c:	ea4a 0304 	orr.w	r3, sl, r4
 80064a0:	ea43 0308 	orr.w	r3, r3, r8
 80064a4:	ea43 030e 	orr.w	r3, r3, lr
 80064a8:	4333      	orrs	r3, r6
 80064aa:	ea43 030c 	orr.w	r3, r3, ip
 80064ae:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064b0:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 80064b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80064b6:	b16f      	cbz	r7, 80064d4 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064b8:	ea4a 0307 	orr.w	r3, sl, r7
 80064bc:	4323      	orrs	r3, r4
 80064be:	ea43 0308 	orr.w	r3, r3, r8
 80064c2:	68cc      	ldr	r4, [r1, #12]
 80064c4:	ea43 030e 	orr.w	r3, r3, lr
 80064c8:	4323      	orrs	r3, r4
 80064ca:	ea43 030c 	orr.w	r3, r3, ip
 80064ce:	ea43 0309 	orr.w	r3, r3, r9
 80064d2:	e7dc      	b.n	800648e <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064d4:	ea4a 0304 	orr.w	r3, sl, r4
 80064d8:	ea43 0308 	orr.w	r3, r3, r8
 80064dc:	ea43 030e 	orr.w	r3, r3, lr
 80064e0:	ea43 030c 	orr.w	r3, r3, ip
 80064e4:	ea43 0309 	orr.w	r3, r3, r9
 80064e8:	e7e2      	b.n	80064b0 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80064ea:	b345      	cbz	r5, 800653e <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80064ec:	6804      	ldr	r4, [r0, #0]
 80064ee:	688b      	ldr	r3, [r1, #8]
 80064f0:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80064f2:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80064f6:	694e      	ldr	r6, [r1, #20]
 80064f8:	6908      	ldr	r0, [r1, #16]
 80064fa:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80064fe:	ea43 0502 	orr.w	r5, r3, r2
 8006502:	04b6      	lsls	r6, r6, #18
 8006504:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8006508:	b187      	cbz	r7, 800652c <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800650a:	4338      	orrs	r0, r7
 800650c:	ea40 0008 	orr.w	r0, r0, r8
 8006510:	4303      	orrs	r3, r0
 8006512:	68c8      	ldr	r0, [r1, #12]
 8006514:	ea43 030c 	orr.w	r3, r3, ip
 8006518:	4303      	orrs	r3, r0
 800651a:	4333      	orrs	r3, r6
 800651c:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800651e:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006522:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8006524:	d0c5      	beq.n	80064b2 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8006526:	684b      	ldr	r3, [r1, #4]
 8006528:	61a3      	str	r3, [r4, #24]
 800652a:	e7c2      	b.n	80064b2 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800652c:	ea40 0008 	orr.w	r0, r0, r8
 8006530:	4303      	orrs	r3, r0
 8006532:	ea43 030c 	orr.w	r3, r3, ip
 8006536:	4333      	orrs	r3, r6
 8006538:	432b      	orrs	r3, r5
 800653a:	6163      	str	r3, [r4, #20]
 800653c:	e7b9      	b.n	80064b2 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800653e:	b17f      	cbz	r7, 8006560 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006540:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8006542:	6800      	ldr	r0, [r0, #0]
 8006544:	ea46 0307 	orr.w	r3, r6, r7
 8006548:	4313      	orrs	r3, r2
 800654a:	4323      	orrs	r3, r4
 800654c:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800654e:	4323      	orrs	r3, r4
 8006550:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8006552:	4323      	orrs	r3, r4
 8006554:	68cc      	ldr	r4, [r1, #12]
 8006556:	4323      	orrs	r3, r4
 8006558:	694c      	ldr	r4, [r1, #20]
 800655a:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800655e:	e796      	b.n	800648e <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8006560:	2e00      	cmp	r6, #0
 8006562:	d0a6      	beq.n	80064b2 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8006564:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8006566:	6800      	ldr	r0, [r0, #0]
 8006568:	4333      	orrs	r3, r6
 800656a:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800656c:	431a      	orrs	r2, r3
 800656e:	4332      	orrs	r2, r6
 8006570:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8006572:	694b      	ldr	r3, [r1, #20]
 8006574:	4332      	orrs	r2, r6
 8006576:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800657a:	6142      	str	r2, [r0, #20]
}
 800657c:	e799      	b.n	80064b2 <QSPI_Config+0x8e>

0800657e <QSPI_WaitFlagStateUntilTimeout>:
{
 800657e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006582:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8006586:	4604      	mov	r4, r0
 8006588:	460e      	mov	r6, r1
 800658a:	4615      	mov	r5, r2
 800658c:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800658e:	6822      	ldr	r2, [r4, #0]
 8006590:	6893      	ldr	r3, [r2, #8]
 8006592:	4233      	tst	r3, r6
 8006594:	bf14      	ite	ne
 8006596:	2301      	movne	r3, #1
 8006598:	2300      	moveq	r3, #0
 800659a:	42ab      	cmp	r3, r5
 800659c:	d101      	bne.n	80065a2 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800659e:	2000      	movs	r0, #0
 80065a0:	e012      	b.n	80065c8 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 80065a2:	f1b8 3fff 	cmp.w	r8, #4294967295
 80065a6:	d0f3      	beq.n	8006590 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80065a8:	f7fd fffe 	bl	80045a8 <HAL_GetTick>
 80065ac:	1bc0      	subs	r0, r0, r7
 80065ae:	4540      	cmp	r0, r8
 80065b0:	d802      	bhi.n	80065b8 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 80065b2:	f1b8 0f00 	cmp.w	r8, #0
 80065b6:	d1ea      	bne.n	800658e <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 80065b8:	2304      	movs	r3, #4
 80065ba:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 80065be:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80065c0:	f043 0301 	orr.w	r3, r3, #1
 80065c4:	6463      	str	r3, [r4, #68]	; 0x44
 80065c6:	2001      	movs	r0, #1
}
 80065c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080065cc <HAL_QSPI_Init>:
{
 80065cc:	b530      	push	{r4, r5, lr}
 80065ce:	b085      	sub	sp, #20
 80065d0:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80065d2:	f7fd ffe9 	bl	80045a8 <HAL_GetTick>
 80065d6:	4603      	mov	r3, r0
  if(hqspi == NULL)
 80065d8:	2c00      	cmp	r4, #0
 80065da:	d047      	beq.n	800666c <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80065dc:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80065e0:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80065e4:	b94a      	cbnz	r2, 80065fa <HAL_QSPI_Init+0x2e>
 80065e6:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 80065e8:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 80065ec:	4620      	mov	r0, r4
 80065ee:	f7fb fb21 	bl	8001c34 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80065f2:	f241 3288 	movw	r2, #5000	; 0x1388
 80065f6:	9b03      	ldr	r3, [sp, #12]
 80065f8:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80065fa:	6820      	ldr	r0, [r4, #0]
 80065fc:	68a1      	ldr	r1, [r4, #8]
 80065fe:	6802      	ldr	r2, [r0, #0]
 8006600:	3901      	subs	r1, #1
 8006602:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8006606:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800660a:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800660c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800660e:	9200      	str	r2, [sp, #0]
 8006610:	2120      	movs	r1, #32
 8006612:	2200      	movs	r2, #0
 8006614:	4620      	mov	r0, r4
 8006616:	f7ff ffb2 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800661a:	bb10      	cbnz	r0, 8006662 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800661c:	69e5      	ldr	r5, [r4, #28]
 800661e:	68e3      	ldr	r3, [r4, #12]
 8006620:	6822      	ldr	r2, [r4, #0]
 8006622:	432b      	orrs	r3, r5
 8006624:	6a25      	ldr	r5, [r4, #32]
 8006626:	6811      	ldr	r1, [r2, #0]
 8006628:	432b      	orrs	r3, r5
 800662a:	6865      	ldr	r5, [r4, #4]
 800662c:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8006630:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8006634:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8006638:	430b      	orrs	r3, r1
 800663a:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800663c:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8006640:	430b      	orrs	r3, r1
 8006642:	6921      	ldr	r1, [r4, #16]
 8006644:	6855      	ldr	r5, [r2, #4]
 8006646:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800664a:	4909      	ldr	r1, [pc, #36]	; (8006670 <HAL_QSPI_Init+0xa4>)
 800664c:	4029      	ands	r1, r5
 800664e:	430b      	orrs	r3, r1
 8006650:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8006652:	6813      	ldr	r3, [r2, #0]
 8006654:	f043 0301 	orr.w	r3, r3, #1
 8006658:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800665a:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800665c:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800665e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006662:	2300      	movs	r3, #0
 8006664:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006668:	b005      	add	sp, #20
 800666a:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800666c:	2001      	movs	r0, #1
 800666e:	e7fb      	b.n	8006668 <HAL_QSPI_Init+0x9c>
 8006670:	ffe0f8fe 	.word	0xffe0f8fe

08006674 <HAL_QSPI_DeInit>:
{
 8006674:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8006676:	4604      	mov	r4, r0
 8006678:	b168      	cbz	r0, 8006696 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800667a:	6802      	ldr	r2, [r0, #0]
 800667c:	6813      	ldr	r3, [r2, #0]
 800667e:	f023 0301 	bic.w	r3, r3, #1
 8006682:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8006684:	f7fb fb30 	bl	8001ce8 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006688:	2000      	movs	r0, #0
 800668a:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800668c:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8006690:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8006694:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006696:	2001      	movs	r0, #1
 8006698:	e7fc      	b.n	8006694 <HAL_QSPI_DeInit+0x20>

0800669a <HAL_QSPI_Command>:
{
 800669a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800669e:	4604      	mov	r4, r0
 80066a0:	b085      	sub	sp, #20
 80066a2:	4617      	mov	r7, r2
 80066a4:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 80066a6:	f7fd ff7f 	bl	80045a8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80066aa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80066ae:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80066b0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80066b2:	d034      	beq.n	800671e <HAL_QSPI_Command+0x84>
 80066b4:	2201      	movs	r2, #1
 80066b6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80066ba:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80066be:	2a01      	cmp	r2, #1
 80066c0:	fa5f f882 	uxtb.w	r8, r2
 80066c4:	f04f 0602 	mov.w	r6, #2
 80066c8:	d127      	bne.n	800671a <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80066ca:	2200      	movs	r2, #0
 80066cc:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80066ce:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80066d0:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80066d4:	9700      	str	r7, [sp, #0]
 80066d6:	2120      	movs	r1, #32
 80066d8:	4620      	mov	r0, r4
 80066da:	f7ff ff50 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80066de:	4605      	mov	r5, r0
 80066e0:	b9a0      	cbnz	r0, 800670c <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80066e2:	4602      	mov	r2, r0
 80066e4:	4649      	mov	r1, r9
 80066e6:	4620      	mov	r0, r4
 80066e8:	f7ff fe9c 	bl	8006424 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80066ec:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80066f0:	9b03      	ldr	r3, [sp, #12]
 80066f2:	b94a      	cbnz	r2, 8006708 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80066f4:	9700      	str	r7, [sp, #0]
 80066f6:	4642      	mov	r2, r8
 80066f8:	4631      	mov	r1, r6
 80066fa:	4620      	mov	r0, r4
 80066fc:	f7ff ff3f 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006700:	4605      	mov	r5, r0
 8006702:	b918      	cbnz	r0, 800670c <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006704:	6823      	ldr	r3, [r4, #0]
 8006706:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8006708:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800670c:	2300      	movs	r3, #0
 800670e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006712:	4628      	mov	r0, r5
 8006714:	b005      	add	sp, #20
 8006716:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800671a:	4635      	mov	r5, r6
 800671c:	e7f6      	b.n	800670c <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800671e:	2502      	movs	r5, #2
 8006720:	e7f7      	b.n	8006712 <HAL_QSPI_Command+0x78>

08006722 <HAL_QSPI_AutoPolling>:
{
 8006722:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8006726:	4604      	mov	r4, r0
 8006728:	4615      	mov	r5, r2
 800672a:	461e      	mov	r6, r3
 800672c:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800672e:	f7fd ff3b 	bl	80045a8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8006732:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006736:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8006738:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800673a:	d040      	beq.n	80067be <HAL_QSPI_AutoPolling+0x9c>
 800673c:	2201      	movs	r2, #1
 800673e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8006742:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8006746:	2a01      	cmp	r2, #1
 8006748:	b2d7      	uxtb	r7, r2
 800674a:	d136      	bne.n	80067ba <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800674c:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800674e:	2200      	movs	r2, #0
 8006750:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006752:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8006754:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8006758:	9600      	str	r6, [sp, #0]
 800675a:	2120      	movs	r1, #32
 800675c:	4620      	mov	r0, r4
 800675e:	f7ff ff0e 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006762:	bb20      	cbnz	r0, 80067ae <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8006764:	6821      	ldr	r1, [r4, #0]
 8006766:	682a      	ldr	r2, [r5, #0]
 8006768:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800676a:	686a      	ldr	r2, [r5, #4]
 800676c:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800676e:	68aa      	ldr	r2, [r5, #8]
 8006770:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8006772:	680a      	ldr	r2, [r1, #0]
 8006774:	6928      	ldr	r0, [r5, #16]
 8006776:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800677a:	4302      	orrs	r2, r0
 800677c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8006780:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8006782:	68ea      	ldr	r2, [r5, #12]
 8006784:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8006788:	4641      	mov	r1, r8
 800678a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800678e:	4620      	mov	r0, r4
 8006790:	f7ff fe48 	bl	8006424 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8006794:	9b03      	ldr	r3, [sp, #12]
 8006796:	9600      	str	r6, [sp, #0]
 8006798:	463a      	mov	r2, r7
 800679a:	2108      	movs	r1, #8
 800679c:	4620      	mov	r0, r4
 800679e:	f7ff feee 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80067a2:	b920      	cbnz	r0, 80067ae <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 80067a4:	6823      	ldr	r3, [r4, #0]
 80067a6:	2208      	movs	r2, #8
 80067a8:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80067aa:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80067ae:	2300      	movs	r3, #0
 80067b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80067b4:	b004      	add	sp, #16
 80067b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 80067ba:	2002      	movs	r0, #2
 80067bc:	e7f7      	b.n	80067ae <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 80067be:	2002      	movs	r0, #2
 80067c0:	e7f8      	b.n	80067b4 <HAL_QSPI_AutoPolling+0x92>

080067c2 <HAL_QSPI_MemoryMapped>:
{
 80067c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80067c4:	4604      	mov	r4, r0
 80067c6:	4616      	mov	r6, r2
 80067c8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80067ca:	f7fd feed 	bl	80045a8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80067ce:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80067d2:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80067d4:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80067d6:	d032      	beq.n	800683e <HAL_QSPI_MemoryMapped+0x7c>
 80067d8:	2201      	movs	r2, #1
 80067da:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80067de:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80067e2:	2a01      	cmp	r2, #1
 80067e4:	d129      	bne.n	800683a <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80067e6:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80067e8:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80067ea:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80067ec:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80067f0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80067f2:	9100      	str	r1, [sp, #0]
 80067f4:	4620      	mov	r0, r4
 80067f6:	2120      	movs	r1, #32
 80067f8:	f7ff fec1 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80067fc:	4605      	mov	r5, r0
 80067fe:	b9b0      	cbnz	r0, 800682e <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8006800:	6823      	ldr	r3, [r4, #0]
 8006802:	6872      	ldr	r2, [r6, #4]
 8006804:	6818      	ldr	r0, [r3, #0]
 8006806:	f020 0008 	bic.w	r0, r0, #8
 800680a:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800680c:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800680e:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8006810:	d107      	bne.n	8006822 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8006812:	6832      	ldr	r2, [r6, #0]
 8006814:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8006816:	2210      	movs	r2, #16
 8006818:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800681a:	681a      	ldr	r2, [r3, #0]
 800681c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8006820:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8006822:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8006826:	4639      	mov	r1, r7
 8006828:	4620      	mov	r0, r4
 800682a:	f7ff fdfb 	bl	8006424 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800682e:	2300      	movs	r3, #0
 8006830:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006834:	4628      	mov	r0, r5
 8006836:	b003      	add	sp, #12
 8006838:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800683a:	2502      	movs	r5, #2
 800683c:	e7f7      	b.n	800682e <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800683e:	2502      	movs	r5, #2
 8006840:	e7f8      	b.n	8006834 <HAL_QSPI_MemoryMapped+0x72>

08006842 <HAL_QSPI_Abort>:
{
 8006842:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006844:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006846:	f7fd feaf 	bl	80045a8 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800684a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800684e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8006850:	f012 0002 	ands.w	r0, r2, #2
 8006854:	d036      	beq.n	80068c4 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8006856:	2200      	movs	r2, #0
 8006858:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800685c:	6822      	ldr	r2, [r4, #0]
 800685e:	6811      	ldr	r1, [r2, #0]
 8006860:	0749      	lsls	r1, r1, #29
 8006862:	d50d      	bpl.n	8006880 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8006864:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006866:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8006868:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800686a:	f021 0104 	bic.w	r1, r1, #4
 800686e:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8006870:	f7fd ffea 	bl	8004848 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8006874:	9b03      	ldr	r3, [sp, #12]
 8006876:	b118      	cbz	r0, 8006880 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8006878:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800687a:	f042 0204 	orr.w	r2, r2, #4
 800687e:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006880:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8006882:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8006884:	680a      	ldr	r2, [r1, #0]
 8006886:	f042 0202 	orr.w	r2, r2, #2
 800688a:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800688c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800688e:	9200      	str	r2, [sp, #0]
 8006890:	2102      	movs	r1, #2
 8006892:	2201      	movs	r2, #1
 8006894:	4620      	mov	r0, r4
 8006896:	f7ff fe72 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800689a:	9b03      	ldr	r3, [sp, #12]
 800689c:	b990      	cbnz	r0, 80068c4 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800689e:	6822      	ldr	r2, [r4, #0]
 80068a0:	2102      	movs	r1, #2
 80068a2:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80068a4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80068a6:	9200      	str	r2, [sp, #0]
 80068a8:	2120      	movs	r1, #32
 80068aa:	4602      	mov	r2, r0
 80068ac:	4620      	mov	r0, r4
 80068ae:	f7ff fe66 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80068b2:	b938      	cbnz	r0, 80068c4 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 80068b4:	6822      	ldr	r2, [r4, #0]
 80068b6:	6953      	ldr	r3, [r2, #20]
 80068b8:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 80068bc:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 80068be:	2301      	movs	r3, #1
 80068c0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 80068c4:	b004      	add	sp, #16
 80068c6:	bd10      	pop	{r4, pc}

080068c8 <HAL_QSPI_Transmit>:
{
 80068c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80068ca:	4604      	mov	r4, r0
 80068cc:	b085      	sub	sp, #20
 80068ce:	4616      	mov	r6, r2
 80068d0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80068d2:	f7fd fe69 	bl	80045a8 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80068d6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80068da:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80068dc:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80068de:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80068e0:	d04c      	beq.n	800697c <HAL_QSPI_Transmit+0xb4>
 80068e2:	2201      	movs	r2, #1
 80068e4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80068e8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80068ec:	2a01      	cmp	r2, #1
 80068ee:	b2d0      	uxtb	r0, r2
 80068f0:	d142      	bne.n	8006978 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80068f2:	2200      	movs	r2, #0
 80068f4:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80068f6:	2f00      	cmp	r7, #0
 80068f8:	d039      	beq.n	800696e <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80068fa:	2212      	movs	r2, #18
 80068fc:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8006900:	692a      	ldr	r2, [r5, #16]
 8006902:	3201      	adds	r2, #1
 8006904:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8006906:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8006908:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800690a:	3201      	adds	r2, #1
 800690c:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800690e:	696a      	ldr	r2, [r5, #20]
 8006910:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8006914:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8006916:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006918:	b9a2      	cbnz	r2, 8006944 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800691a:	9600      	str	r6, [sp, #0]
 800691c:	2201      	movs	r2, #1
 800691e:	2102      	movs	r1, #2
 8006920:	4620      	mov	r0, r4
 8006922:	f7ff fe2c 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006926:	b928      	cbnz	r0, 8006934 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006928:	6823      	ldr	r3, [r4, #0]
 800692a:	2202      	movs	r2, #2
 800692c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800692e:	4620      	mov	r0, r4
 8006930:	f7ff ff87 	bl	8006842 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006934:	2301      	movs	r3, #1
 8006936:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800693a:	2300      	movs	r3, #0
 800693c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006940:	b005      	add	sp, #20
 8006942:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8006944:	9600      	str	r6, [sp, #0]
 8006946:	2201      	movs	r2, #1
 8006948:	2104      	movs	r1, #4
 800694a:	4620      	mov	r0, r4
 800694c:	9303      	str	r3, [sp, #12]
 800694e:	f7ff fe16 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006952:	2800      	cmp	r0, #0
 8006954:	d1ee      	bne.n	8006934 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8006956:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006958:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800695a:	7812      	ldrb	r2, [r2, #0]
 800695c:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8006960:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006962:	3201      	adds	r2, #1
 8006964:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8006966:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006968:	3a01      	subs	r2, #1
 800696a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800696c:	e7d3      	b.n	8006916 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800696e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006970:	f043 0308 	orr.w	r3, r3, #8
 8006974:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006976:	e7e0      	b.n	800693a <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8006978:	2002      	movs	r0, #2
 800697a:	e7de      	b.n	800693a <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800697c:	2002      	movs	r0, #2
 800697e:	e7df      	b.n	8006940 <HAL_QSPI_Transmit+0x78>

08006980 <HAL_QSPI_Receive>:
{
 8006980:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006982:	4604      	mov	r4, r0
 8006984:	b085      	sub	sp, #20
 8006986:	4616      	mov	r6, r2
 8006988:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800698a:	f7fd fe0d 	bl	80045a8 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800698e:	6825      	ldr	r5, [r4, #0]
 8006990:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8006994:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8006998:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800699a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800699c:	d050      	beq.n	8006a40 <HAL_QSPI_Receive+0xc0>
 800699e:	2201      	movs	r2, #1
 80069a0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80069a4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80069a8:	2a01      	cmp	r2, #1
 80069aa:	b2d0      	uxtb	r0, r2
 80069ac:	d146      	bne.n	8006a3c <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80069ae:	2200      	movs	r2, #0
 80069b0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80069b2:	2f00      	cmp	r7, #0
 80069b4:	d03d      	beq.n	8006a32 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 80069b6:	2222      	movs	r2, #34	; 0x22
 80069b8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80069bc:	692a      	ldr	r2, [r5, #16]
 80069be:	3201      	adds	r2, #1
 80069c0:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80069c2:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80069c4:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80069c6:	3201      	adds	r2, #1
 80069c8:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80069ca:	6969      	ldr	r1, [r5, #20]
 80069cc:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 80069d0:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80069d4:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80069d6:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80069da:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80069dc:	b9a2      	cbnz	r2, 8006a08 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80069de:	9600      	str	r6, [sp, #0]
 80069e0:	2201      	movs	r2, #1
 80069e2:	2102      	movs	r1, #2
 80069e4:	4620      	mov	r0, r4
 80069e6:	f7ff fdca 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80069ea:	b928      	cbnz	r0, 80069f8 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80069ec:	6823      	ldr	r3, [r4, #0]
 80069ee:	2202      	movs	r2, #2
 80069f0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80069f2:	4620      	mov	r0, r4
 80069f4:	f7ff ff25 	bl	8006842 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80069f8:	2301      	movs	r3, #1
 80069fa:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80069fe:	2300      	movs	r3, #0
 8006a00:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006a04:	b005      	add	sp, #20
 8006a06:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006a08:	9600      	str	r6, [sp, #0]
 8006a0a:	2201      	movs	r2, #1
 8006a0c:	2106      	movs	r1, #6
 8006a0e:	4620      	mov	r0, r4
 8006a10:	9303      	str	r3, [sp, #12]
 8006a12:	f7ff fdb4 	bl	800657e <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006a16:	2800      	cmp	r0, #0
 8006a18:	d1ee      	bne.n	80069f8 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006a1a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006a1c:	f895 1020 	ldrb.w	r1, [r5, #32]
 8006a20:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8006a22:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006a24:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8006a26:	3201      	adds	r2, #1
 8006a28:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006a2a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006a2c:	3a01      	subs	r2, #1
 8006a2e:	63a2      	str	r2, [r4, #56]	; 0x38
 8006a30:	e7d3      	b.n	80069da <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8006a32:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006a34:	f043 0308 	orr.w	r3, r3, #8
 8006a38:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006a3a:	e7e0      	b.n	80069fe <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8006a3c:	2002      	movs	r0, #2
 8006a3e:	e7de      	b.n	80069fe <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8006a40:	2002      	movs	r0, #2
 8006a42:	e7df      	b.n	8006a04 <HAL_QSPI_Receive+0x84>

08006a44 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a44:	4913      	ldr	r1, [pc, #76]	; (8006a94 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006a46:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a48:	688b      	ldr	r3, [r1, #8]
 8006a4a:	f003 030c 	and.w	r3, r3, #12
 8006a4e:	2b04      	cmp	r3, #4
 8006a50:	d01c      	beq.n	8006a8c <HAL_RCC_GetSysClockFreq+0x48>
 8006a52:	2b08      	cmp	r3, #8
 8006a54:	d11c      	bne.n	8006a90 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006a56:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006a58:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a5a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006a5c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a60:	bf14      	ite	ne
 8006a62:	480d      	ldrne	r0, [pc, #52]	; (8006a98 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a64:	480d      	ldreq	r0, [pc, #52]	; (8006a9c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a66:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006a6a:	bf18      	it	ne
 8006a6c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006a6e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006a72:	fba1 0100 	umull	r0, r1, r1, r0
 8006a76:	f7f9 fc13 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8006a7a:	4b06      	ldr	r3, [pc, #24]	; (8006a94 <HAL_RCC_GetSysClockFreq+0x50>)
 8006a7c:	685b      	ldr	r3, [r3, #4]
 8006a7e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8006a82:	3301      	adds	r3, #1
 8006a84:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8006a86:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8006a8a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006a8c:	4802      	ldr	r0, [pc, #8]	; (8006a98 <HAL_RCC_GetSysClockFreq+0x54>)
 8006a8e:	e7fc      	b.n	8006a8a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8006a90:	4802      	ldr	r0, [pc, #8]	; (8006a9c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8006a92:	e7fa      	b.n	8006a8a <HAL_RCC_GetSysClockFreq+0x46>
 8006a94:	40023800 	.word	0x40023800
 8006a98:	007a1200 	.word	0x007a1200
 8006a9c:	00f42400 	.word	0x00f42400

08006aa0 <HAL_RCC_ClockConfig>:
{
 8006aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006aa4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8006aa6:	4604      	mov	r4, r0
 8006aa8:	b910      	cbnz	r0, 8006ab0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8006aaa:	2001      	movs	r0, #1
}
 8006aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8006ab0:	4b44      	ldr	r3, [pc, #272]	; (8006bc4 <HAL_RCC_ClockConfig+0x124>)
 8006ab2:	681a      	ldr	r2, [r3, #0]
 8006ab4:	f002 020f 	and.w	r2, r2, #15
 8006ab8:	428a      	cmp	r2, r1
 8006aba:	d328      	bcc.n	8006b0e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8006abc:	6822      	ldr	r2, [r4, #0]
 8006abe:	0797      	lsls	r7, r2, #30
 8006ac0:	d42d      	bmi.n	8006b1e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8006ac2:	07d0      	lsls	r0, r2, #31
 8006ac4:	d441      	bmi.n	8006b4a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8006ac6:	4b3f      	ldr	r3, [pc, #252]	; (8006bc4 <HAL_RCC_ClockConfig+0x124>)
 8006ac8:	681a      	ldr	r2, [r3, #0]
 8006aca:	f002 020f 	and.w	r2, r2, #15
 8006ace:	42aa      	cmp	r2, r5
 8006ad0:	d866      	bhi.n	8006ba0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006ad2:	6822      	ldr	r2, [r4, #0]
 8006ad4:	0751      	lsls	r1, r2, #29
 8006ad6:	d46c      	bmi.n	8006bb2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006ad8:	0713      	lsls	r3, r2, #28
 8006ada:	d507      	bpl.n	8006aec <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006adc:	4a3a      	ldr	r2, [pc, #232]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006ade:	6921      	ldr	r1, [r4, #16]
 8006ae0:	6893      	ldr	r3, [r2, #8]
 8006ae2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006ae6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006aea:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006aec:	f7ff ffaa 	bl	8006a44 <HAL_RCC_GetSysClockFreq>
 8006af0:	4b35      	ldr	r3, [pc, #212]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006af2:	4a36      	ldr	r2, [pc, #216]	; (8006bcc <HAL_RCC_ClockConfig+0x12c>)
 8006af4:	689b      	ldr	r3, [r3, #8]
 8006af6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006afa:	5cd3      	ldrb	r3, [r2, r3]
 8006afc:	40d8      	lsrs	r0, r3
 8006afe:	4b34      	ldr	r3, [pc, #208]	; (8006bd0 <HAL_RCC_ClockConfig+0x130>)
 8006b00:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8006b02:	4b34      	ldr	r3, [pc, #208]	; (8006bd4 <HAL_RCC_ClockConfig+0x134>)
 8006b04:	6818      	ldr	r0, [r3, #0]
 8006b06:	f7fb f9c7 	bl	8001e98 <HAL_InitTick>
  return HAL_OK;
 8006b0a:	2000      	movs	r0, #0
 8006b0c:	e7ce      	b.n	8006aac <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006b0e:	b2ca      	uxtb	r2, r1
 8006b10:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	f003 030f 	and.w	r3, r3, #15
 8006b18:	428b      	cmp	r3, r1
 8006b1a:	d1c6      	bne.n	8006aaa <HAL_RCC_ClockConfig+0xa>
 8006b1c:	e7ce      	b.n	8006abc <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8006b1e:	4b2a      	ldr	r3, [pc, #168]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006b20:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006b24:	bf1e      	ittt	ne
 8006b26:	6899      	ldrne	r1, [r3, #8]
 8006b28:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8006b2c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006b2e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8006b30:	bf42      	ittt	mi
 8006b32:	6899      	ldrmi	r1, [r3, #8]
 8006b34:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006b38:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006b3a:	4923      	ldr	r1, [pc, #140]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006b3c:	68a0      	ldr	r0, [r4, #8]
 8006b3e:	688b      	ldr	r3, [r1, #8]
 8006b40:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006b44:	4303      	orrs	r3, r0
 8006b46:	608b      	str	r3, [r1, #8]
 8006b48:	e7bb      	b.n	8006ac2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006b4a:	6862      	ldr	r2, [r4, #4]
 8006b4c:	4b1e      	ldr	r3, [pc, #120]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006b4e:	2a01      	cmp	r2, #1
 8006b50:	d11c      	bne.n	8006b8c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006b58:	d0a7      	beq.n	8006aaa <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006b5a:	4e1b      	ldr	r6, [pc, #108]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006b5c:	68b3      	ldr	r3, [r6, #8]
 8006b5e:	f023 0303 	bic.w	r3, r3, #3
 8006b62:	4313      	orrs	r3, r2
 8006b64:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006b66:	f7fd fd1f 	bl	80045a8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b6a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8006b6e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006b70:	68b3      	ldr	r3, [r6, #8]
 8006b72:	6862      	ldr	r2, [r4, #4]
 8006b74:	f003 030c 	and.w	r3, r3, #12
 8006b78:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8006b7c:	d0a3      	beq.n	8006ac6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006b7e:	f7fd fd13 	bl	80045a8 <HAL_GetTick>
 8006b82:	1bc0      	subs	r0, r0, r7
 8006b84:	4540      	cmp	r0, r8
 8006b86:	d9f3      	bls.n	8006b70 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8006b88:	2003      	movs	r0, #3
 8006b8a:	e78f      	b.n	8006aac <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006b8c:	1e91      	subs	r1, r2, #2
 8006b8e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b90:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8006b92:	d802      	bhi.n	8006b9a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006b94:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8006b98:	e7de      	b.n	8006b58 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006b9a:	f013 0f02 	tst.w	r3, #2
 8006b9e:	e7db      	b.n	8006b58 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8006ba0:	b2ea      	uxtb	r2, r5
 8006ba2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	f003 030f 	and.w	r3, r3, #15
 8006baa:	42ab      	cmp	r3, r5
 8006bac:	f47f af7d 	bne.w	8006aaa <HAL_RCC_ClockConfig+0xa>
 8006bb0:	e78f      	b.n	8006ad2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8006bb2:	4905      	ldr	r1, [pc, #20]	; (8006bc8 <HAL_RCC_ClockConfig+0x128>)
 8006bb4:	68e0      	ldr	r0, [r4, #12]
 8006bb6:	688b      	ldr	r3, [r1, #8]
 8006bb8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8006bbc:	4303      	orrs	r3, r0
 8006bbe:	608b      	str	r3, [r1, #8]
 8006bc0:	e78a      	b.n	8006ad8 <HAL_RCC_ClockConfig+0x38>
 8006bc2:	bf00      	nop
 8006bc4:	40023c00 	.word	0x40023c00
 8006bc8:	40023800 	.word	0x40023800
 8006bcc:	08020681 	.word	0x08020681
 8006bd0:	20000050 	.word	0x20000050
 8006bd4:	20000058 	.word	0x20000058

08006bd8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006bd8:	4b04      	ldr	r3, [pc, #16]	; (8006bec <HAL_RCC_GetPCLK1Freq+0x14>)
 8006bda:	4a05      	ldr	r2, [pc, #20]	; (8006bf0 <HAL_RCC_GetPCLK1Freq+0x18>)
 8006bdc:	689b      	ldr	r3, [r3, #8]
 8006bde:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8006be2:	5cd3      	ldrb	r3, [r2, r3]
 8006be4:	4a03      	ldr	r2, [pc, #12]	; (8006bf4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006be6:	6810      	ldr	r0, [r2, #0]
}
 8006be8:	40d8      	lsrs	r0, r3
 8006bea:	4770      	bx	lr
 8006bec:	40023800 	.word	0x40023800
 8006bf0:	08020691 	.word	0x08020691
 8006bf4:	20000050 	.word	0x20000050

08006bf8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006bf8:	230f      	movs	r3, #15
 8006bfa:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006bfc:	4b0b      	ldr	r3, [pc, #44]	; (8006c2c <HAL_RCC_GetClockConfig+0x34>)
 8006bfe:	689a      	ldr	r2, [r3, #8]
 8006c00:	f002 0203 	and.w	r2, r2, #3
 8006c04:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006c06:	689a      	ldr	r2, [r3, #8]
 8006c08:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006c0c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8006c0e:	689a      	ldr	r2, [r3, #8]
 8006c10:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006c14:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006c16:	689b      	ldr	r3, [r3, #8]
 8006c18:	08db      	lsrs	r3, r3, #3
 8006c1a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8006c1e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8006c20:	4b03      	ldr	r3, [pc, #12]	; (8006c30 <HAL_RCC_GetClockConfig+0x38>)
 8006c22:	681b      	ldr	r3, [r3, #0]
 8006c24:	f003 030f 	and.w	r3, r3, #15
 8006c28:	600b      	str	r3, [r1, #0]
}
 8006c2a:	4770      	bx	lr
 8006c2c:	40023800 	.word	0x40023800
 8006c30:	40023c00 	.word	0x40023c00

08006c34 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006c34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006c36:	6802      	ldr	r2, [r0, #0]
{
 8006c38:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006c3a:	0610      	lsls	r0, r2, #24
 8006c3c:	d508      	bpl.n	8006c50 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006c3e:	49aa      	ldr	r1, [pc, #680]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006c40:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8006c42:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006c46:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8006c4a:	4303      	orrs	r3, r0
 8006c4c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8006c50:	05d1      	lsls	r1, r2, #23
 8006c52:	d508      	bpl.n	8006c66 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8006c54:	49a4      	ldr	r1, [pc, #656]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006c56:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006c58:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006c5c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006c60:	4303      	orrs	r3, r0
 8006c62:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006c66:	f012 0f43 	tst.w	r2, #67	; 0x43
 8006c6a:	d173      	bne.n	8006d54 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006c6c:	6823      	ldr	r3, [r4, #0]
 8006c6e:	f013 0f0c 	tst.w	r3, #12
 8006c72:	f000 80c1 	beq.w	8006df8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006c76:	4b9d      	ldr	r3, [pc, #628]	; (8006eec <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006c78:	4d9b      	ldr	r5, [pc, #620]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8006c7a:	2200      	movs	r2, #0
 8006c7c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006c7e:	f7fd fc93 	bl	80045a8 <HAL_GetTick>
 8006c82:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006c84:	682b      	ldr	r3, [r5, #0]
 8006c86:	009b      	lsls	r3, r3, #2
 8006c88:	f100 80fc 	bmi.w	8006e84 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8006c8c:	6821      	ldr	r1, [r4, #0]
 8006c8e:	074f      	lsls	r7, r1, #29
 8006c90:	d51a      	bpl.n	8006cc8 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006c92:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006c96:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8006c9a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006c9e:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006ca2:	4313      	orrs	r3, r2
 8006ca4:	6922      	ldr	r2, [r4, #16]
 8006ca6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006caa:	69a2      	ldr	r2, [r4, #24]
 8006cac:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006cb0:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006cb4:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8006cb8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006cba:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8006cbe:	3a01      	subs	r2, #1
 8006cc0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006cc4:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006cc8:	070e      	lsls	r6, r1, #28
 8006cca:	d519      	bpl.n	8006d00 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8006ccc:	4a86      	ldr	r2, [pc, #536]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006cce:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006cd2:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8006cd6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006cda:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8006cde:	4303      	orrs	r3, r0
 8006ce0:	6920      	ldr	r0, [r4, #16]
 8006ce2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006ce6:	69e0      	ldr	r0, [r4, #28]
 8006ce8:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8006cec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006cf0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006cf4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006cf6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006cfa:	4303      	orrs	r3, r0
 8006cfc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8006d00:	060d      	lsls	r5, r1, #24
 8006d02:	d517      	bpl.n	8006d34 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8006d04:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006d06:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006d0a:	d113      	bne.n	8006d34 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006d0c:	4976      	ldr	r1, [pc, #472]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006d0e:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006d12:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8006d16:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8006d1a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8006d1e:	4313      	orrs	r3, r2
 8006d20:	6922      	ldr	r2, [r4, #16]
 8006d22:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006d26:	6962      	ldr	r2, [r4, #20]
 8006d28:	0852      	lsrs	r2, r2, #1
 8006d2a:	3a01      	subs	r2, #1
 8006d2c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006d30:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006d34:	4b6d      	ldr	r3, [pc, #436]	; (8006eec <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d36:	4e6c      	ldr	r6, [pc, #432]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006d38:	2201      	movs	r2, #1
 8006d3a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006d3c:	f7fd fc34 	bl	80045a8 <HAL_GetTick>
 8006d40:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d42:	6833      	ldr	r3, [r6, #0]
 8006d44:	0098      	lsls	r0, r3, #2
 8006d46:	d459      	bmi.n	8006dfc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006d48:	f7fd fc2e 	bl	80045a8 <HAL_GetTick>
 8006d4c:	1b40      	subs	r0, r0, r5
 8006d4e:	2802      	cmp	r0, #2
 8006d50:	d9f7      	bls.n	8006d42 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8006d52:	e04e      	b.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8006d54:	4b65      	ldr	r3, [pc, #404]	; (8006eec <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006d56:	4e64      	ldr	r6, [pc, #400]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006d58:	2200      	movs	r2, #0
 8006d5a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006d5c:	f7fd fc24 	bl	80045a8 <HAL_GetTick>
 8006d60:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006d62:	6833      	ldr	r3, [r6, #0]
 8006d64:	011b      	lsls	r3, r3, #4
 8006d66:	d43f      	bmi.n	8006de8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006d68:	6821      	ldr	r1, [r4, #0]
 8006d6a:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006d6c:	bf41      	itttt	mi
 8006d6e:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8006d72:	071b      	lslmi	r3, r3, #28
 8006d74:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8006d78:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8006d7c:	078e      	lsls	r6, r1, #30
 8006d7e:	d515      	bpl.n	8006dac <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006d80:	4a59      	ldr	r2, [pc, #356]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006d82:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006d84:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8006d88:	6865      	ldr	r5, [r4, #4]
 8006d8a:	061b      	lsls	r3, r3, #24
 8006d8c:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8006d90:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8006d94:	4303      	orrs	r3, r0
 8006d96:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006d9a:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8006d9e:	6a23      	ldr	r3, [r4, #32]
 8006da0:	f020 001f 	bic.w	r0, r0, #31
 8006da4:	3b01      	subs	r3, #1
 8006da6:	4303      	orrs	r3, r0
 8006da8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006dac:	064d      	lsls	r5, r1, #25
 8006dae:	d50a      	bpl.n	8006dc6 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006db0:	68e3      	ldr	r3, [r4, #12]
 8006db2:	6862      	ldr	r2, [r4, #4]
 8006db4:	061b      	lsls	r3, r3, #24
 8006db6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006dba:	68a2      	ldr	r2, [r4, #8]
 8006dbc:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8006dc0:	4a49      	ldr	r2, [pc, #292]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006dc2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8006dc6:	4b49      	ldr	r3, [pc, #292]	; (8006eec <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006dc8:	4e47      	ldr	r6, [pc, #284]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8006dca:	2201      	movs	r2, #1
 8006dcc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006dce:	f7fd fbeb 	bl	80045a8 <HAL_GetTick>
 8006dd2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006dd4:	6833      	ldr	r3, [r6, #0]
 8006dd6:	0118      	lsls	r0, r3, #4
 8006dd8:	f53f af48 	bmi.w	8006c6c <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006ddc:	f7fd fbe4 	bl	80045a8 <HAL_GetTick>
 8006de0:	1b40      	subs	r0, r0, r5
 8006de2:	2802      	cmp	r0, #2
 8006de4:	d9f6      	bls.n	8006dd4 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006de6:	e004      	b.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006de8:	f7fd fbde 	bl	80045a8 <HAL_GetTick>
 8006dec:	1b40      	subs	r0, r0, r5
 8006dee:	2802      	cmp	r0, #2
 8006df0:	d9b7      	bls.n	8006d62 <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 8006df2:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8006df4:	b003      	add	sp, #12
 8006df6:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8006df8:	0619      	lsls	r1, r3, #24
 8006dfa:	d43e      	bmi.n	8006e7a <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006dfc:	6823      	ldr	r3, [r4, #0]
 8006dfe:	069a      	lsls	r2, r3, #26
 8006e00:	d530      	bpl.n	8006e64 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 8006e02:	2300      	movs	r3, #0
 8006e04:	9301      	str	r3, [sp, #4]
 8006e06:	4b38      	ldr	r3, [pc, #224]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8006e08:	4d39      	ldr	r5, [pc, #228]	; (8006ef0 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006e0a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006e0c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8006e10:	641a      	str	r2, [r3, #64]	; 0x40
 8006e12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e14:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006e18:	9301      	str	r3, [sp, #4]
 8006e1a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006e1c:	682b      	ldr	r3, [r5, #0]
 8006e1e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006e22:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006e24:	f7fd fbc0 	bl	80045a8 <HAL_GetTick>
 8006e28:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006e2a:	682b      	ldr	r3, [r5, #0]
 8006e2c:	05d9      	lsls	r1, r3, #23
 8006e2e:	d530      	bpl.n	8006e92 <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006e30:	4d2d      	ldr	r5, [pc, #180]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006e32:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006e34:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006e38:	d131      	bne.n	8006e9e <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006e3a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006e3c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8006e40:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006e44:	4a28      	ldr	r2, [pc, #160]	; (8006ee8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006e46:	d14b      	bne.n	8006ee0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8006e48:	6891      	ldr	r1, [r2, #8]
 8006e4a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8006e4e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006e52:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006e56:	4301      	orrs	r1, r0
 8006e58:	6091      	str	r1, [r2, #8]
 8006e5a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006e5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006e60:	430b      	orrs	r3, r1
 8006e62:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006e64:	6820      	ldr	r0, [r4, #0]
 8006e66:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006e6a:	bf1f      	itttt	ne
 8006e6c:	4b21      	ldrne	r3, [pc, #132]	; (8006ef4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8006e6e:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8006e72:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8006e76:	2000      	movne	r0, #0
 8006e78:	e7bc      	b.n	8006df4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8006e7a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006e7c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006e80:	d1bc      	bne.n	8006dfc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8006e82:	e6f8      	b.n	8006c76 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006e84:	f7fd fb90 	bl	80045a8 <HAL_GetTick>
 8006e88:	1b80      	subs	r0, r0, r6
 8006e8a:	2802      	cmp	r0, #2
 8006e8c:	f67f aefa 	bls.w	8006c84 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8006e90:	e7af      	b.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8006e92:	f7fd fb89 	bl	80045a8 <HAL_GetTick>
 8006e96:	1b80      	subs	r0, r0, r6
 8006e98:	2802      	cmp	r0, #2
 8006e9a:	d9c6      	bls.n	8006e2a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8006e9c:	e7a9      	b.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006e9e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006ea0:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8006ea4:	4293      	cmp	r3, r2
 8006ea6:	d0c8      	beq.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006ea8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8006eaa:	4a10      	ldr	r2, [pc, #64]	; (8006eec <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8006eac:	2101      	movs	r1, #1
 8006eae:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006eb2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8006eb6:	2100      	movs	r1, #0
 8006eb8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8006ebc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8006ebe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006ec0:	07da      	lsls	r2, r3, #31
 8006ec2:	d5ba      	bpl.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8006ec4:	f7fd fb70 	bl	80045a8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006ec8:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8006ecc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006ece:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006ed0:	079b      	lsls	r3, r3, #30
 8006ed2:	d4b2      	bmi.n	8006e3a <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006ed4:	f7fd fb68 	bl	80045a8 <HAL_GetTick>
 8006ed8:	1b80      	subs	r0, r0, r6
 8006eda:	42b8      	cmp	r0, r7
 8006edc:	d9f7      	bls.n	8006ece <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8006ede:	e788      	b.n	8006df2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006ee0:	6891      	ldr	r1, [r2, #8]
 8006ee2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006ee6:	e7b7      	b.n	8006e58 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006ee8:	40023800 	.word	0x40023800
 8006eec:	42470000 	.word	0x42470000
 8006ef0:	40007000 	.word	0x40007000
 8006ef4:	42471000 	.word	0x42471000

08006ef8 <HAL_RCC_OscConfig>:
  uint32_t tickstart = 0U;

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006ef8:	6803      	ldr	r3, [r0, #0]
{
 8006efa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006efe:	07dd      	lsls	r5, r3, #31
{
 8006f00:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006f02:	d410      	bmi.n	8006f26 <HAL_RCC_OscConfig+0x2e>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006f04:	6823      	ldr	r3, [r4, #0]
 8006f06:	0798      	lsls	r0, r3, #30
 8006f08:	d45e      	bmi.n	8006fc8 <HAL_RCC_OscConfig+0xd0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006f0a:	6823      	ldr	r3, [r4, #0]
 8006f0c:	071a      	lsls	r2, r3, #28
 8006f0e:	f100 80a0 	bmi.w	8007052 <HAL_RCC_OscConfig+0x15a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006f12:	6823      	ldr	r3, [r4, #0]
 8006f14:	075b      	lsls	r3, r3, #29
 8006f16:	f100 80c0 	bmi.w	800709a <HAL_RCC_OscConfig+0x1a2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006f1a:	69a2      	ldr	r2, [r4, #24]
 8006f1c:	2a00      	cmp	r2, #0
 8006f1e:	f040 8127 	bne.w	8007170 <HAL_RCC_OscConfig+0x278>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 8006f22:	2000      	movs	r0, #0
 8006f24:	e015      	b.n	8006f52 <HAL_RCC_OscConfig+0x5a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006f26:	4b8f      	ldr	r3, [pc, #572]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 8006f28:	689a      	ldr	r2, [r3, #8]
 8006f2a:	f002 020c 	and.w	r2, r2, #12
 8006f2e:	2a04      	cmp	r2, #4
 8006f30:	d007      	beq.n	8006f42 <HAL_RCC_OscConfig+0x4a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006f32:	689a      	ldr	r2, [r3, #8]
 8006f34:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006f38:	2a08      	cmp	r2, #8
 8006f3a:	d10d      	bne.n	8006f58 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006f3c:	685a      	ldr	r2, [r3, #4]
 8006f3e:	0251      	lsls	r1, r2, #9
 8006f40:	d50a      	bpl.n	8006f58 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006f42:	4b88      	ldr	r3, [pc, #544]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 8006f44:	681b      	ldr	r3, [r3, #0]
 8006f46:	039a      	lsls	r2, r3, #14
 8006f48:	d5dc      	bpl.n	8006f04 <HAL_RCC_OscConfig+0xc>
 8006f4a:	6863      	ldr	r3, [r4, #4]
 8006f4c:	2b00      	cmp	r3, #0
 8006f4e:	d1d9      	bne.n	8006f04 <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 8006f50:	2001      	movs	r0, #1
}
 8006f52:	b002      	add	sp, #8
 8006f54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006f58:	6862      	ldr	r2, [r4, #4]
 8006f5a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8006f5e:	d111      	bne.n	8006f84 <HAL_RCC_OscConfig+0x8c>
 8006f60:	681a      	ldr	r2, [r3, #0]
 8006f62:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006f66:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006f68:	f7fd fb1e 	bl	80045a8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006f6c:	4e7d      	ldr	r6, [pc, #500]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8006f6e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006f70:	6833      	ldr	r3, [r6, #0]
 8006f72:	039b      	lsls	r3, r3, #14
 8006f74:	d4c6      	bmi.n	8006f04 <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006f76:	f7fd fb17 	bl	80045a8 <HAL_GetTick>
 8006f7a:	1b40      	subs	r0, r0, r5
 8006f7c:	2864      	cmp	r0, #100	; 0x64
 8006f7e:	d9f7      	bls.n	8006f70 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8006f80:	2003      	movs	r0, #3
 8006f82:	e7e6      	b.n	8006f52 <HAL_RCC_OscConfig+0x5a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006f84:	4d77      	ldr	r5, [pc, #476]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 8006f86:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8006f8a:	682b      	ldr	r3, [r5, #0]
 8006f8c:	d107      	bne.n	8006f9e <HAL_RCC_OscConfig+0xa6>
 8006f8e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006f92:	602b      	str	r3, [r5, #0]
 8006f94:	682b      	ldr	r3, [r5, #0]
 8006f96:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006f9a:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006f9c:	e7e4      	b.n	8006f68 <HAL_RCC_OscConfig+0x70>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006f9e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006fa2:	602b      	str	r3, [r5, #0]
 8006fa4:	682b      	ldr	r3, [r5, #0]
 8006fa6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006faa:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8006fac:	2a00      	cmp	r2, #0
 8006fae:	d1db      	bne.n	8006f68 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8006fb0:	f7fd fafa 	bl	80045a8 <HAL_GetTick>
 8006fb4:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8006fb6:	682b      	ldr	r3, [r5, #0]
 8006fb8:	039f      	lsls	r7, r3, #14
 8006fba:	d5a3      	bpl.n	8006f04 <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006fbc:	f7fd faf4 	bl	80045a8 <HAL_GetTick>
 8006fc0:	1b80      	subs	r0, r0, r6
 8006fc2:	2864      	cmp	r0, #100	; 0x64
 8006fc4:	d9f7      	bls.n	8006fb6 <HAL_RCC_OscConfig+0xbe>
 8006fc6:	e7db      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006fc8:	4b66      	ldr	r3, [pc, #408]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 8006fca:	689a      	ldr	r2, [r3, #8]
 8006fcc:	f012 0f0c 	tst.w	r2, #12
 8006fd0:	d007      	beq.n	8006fe2 <HAL_RCC_OscConfig+0xea>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006fd2:	689a      	ldr	r2, [r3, #8]
 8006fd4:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006fd8:	2a08      	cmp	r2, #8
 8006fda:	d111      	bne.n	8007000 <HAL_RCC_OscConfig+0x108>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006fdc:	685b      	ldr	r3, [r3, #4]
 8006fde:	025e      	lsls	r6, r3, #9
 8006fe0:	d40e      	bmi.n	8007000 <HAL_RCC_OscConfig+0x108>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006fe2:	4a60      	ldr	r2, [pc, #384]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 8006fe4:	6813      	ldr	r3, [r2, #0]
 8006fe6:	079d      	lsls	r5, r3, #30
 8006fe8:	d502      	bpl.n	8006ff0 <HAL_RCC_OscConfig+0xf8>
 8006fea:	68e3      	ldr	r3, [r4, #12]
 8006fec:	2b01      	cmp	r3, #1
 8006fee:	d1af      	bne.n	8006f50 <HAL_RCC_OscConfig+0x58>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006ff0:	6813      	ldr	r3, [r2, #0]
 8006ff2:	6921      	ldr	r1, [r4, #16]
 8006ff4:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006ff8:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006ffc:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8006ffe:	e784      	b.n	8006f0a <HAL_RCC_OscConfig+0x12>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007000:	68e2      	ldr	r2, [r4, #12]
 8007002:	4b59      	ldr	r3, [pc, #356]	; (8007168 <HAL_RCC_OscConfig+0x270>)
 8007004:	b1b2      	cbz	r2, 8007034 <HAL_RCC_OscConfig+0x13c>
        __HAL_RCC_HSI_ENABLE();
 8007006:	2201      	movs	r2, #1
 8007008:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800700a:	f7fd facd 	bl	80045a8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800700e:	4d55      	ldr	r5, [pc, #340]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8007010:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007012:	682b      	ldr	r3, [r5, #0]
 8007014:	0798      	lsls	r0, r3, #30
 8007016:	d507      	bpl.n	8007028 <HAL_RCC_OscConfig+0x130>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007018:	682b      	ldr	r3, [r5, #0]
 800701a:	6922      	ldr	r2, [r4, #16]
 800701c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007020:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007024:	602b      	str	r3, [r5, #0]
 8007026:	e770      	b.n	8006f0a <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007028:	f7fd fabe 	bl	80045a8 <HAL_GetTick>
 800702c:	1b80      	subs	r0, r0, r6
 800702e:	2802      	cmp	r0, #2
 8007030:	d9ef      	bls.n	8007012 <HAL_RCC_OscConfig+0x11a>
 8007032:	e7a5      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8007034:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007036:	f7fd fab7 	bl	80045a8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800703a:	4e4a      	ldr	r6, [pc, #296]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 800703c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800703e:	6833      	ldr	r3, [r6, #0]
 8007040:	0799      	lsls	r1, r3, #30
 8007042:	f57f af62 	bpl.w	8006f0a <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007046:	f7fd faaf 	bl	80045a8 <HAL_GetTick>
 800704a:	1b40      	subs	r0, r0, r5
 800704c:	2802      	cmp	r0, #2
 800704e:	d9f6      	bls.n	800703e <HAL_RCC_OscConfig+0x146>
 8007050:	e796      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007052:	6962      	ldr	r2, [r4, #20]
 8007054:	4b44      	ldr	r3, [pc, #272]	; (8007168 <HAL_RCC_OscConfig+0x270>)
 8007056:	b182      	cbz	r2, 800707a <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8007058:	2201      	movs	r2, #1
 800705a:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800705e:	f7fd faa3 	bl	80045a8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007062:	4e40      	ldr	r6, [pc, #256]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8007064:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007066:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007068:	079f      	lsls	r7, r3, #30
 800706a:	f53f af52 	bmi.w	8006f12 <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800706e:	f7fd fa9b 	bl	80045a8 <HAL_GetTick>
 8007072:	1b40      	subs	r0, r0, r5
 8007074:	2802      	cmp	r0, #2
 8007076:	d9f6      	bls.n	8007066 <HAL_RCC_OscConfig+0x16e>
 8007078:	e782      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 800707a:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800707e:	f7fd fa93 	bl	80045a8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007082:	4e38      	ldr	r6, [pc, #224]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8007084:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007086:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007088:	0798      	lsls	r0, r3, #30
 800708a:	f57f af42 	bpl.w	8006f12 <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800708e:	f7fd fa8b 	bl	80045a8 <HAL_GetTick>
 8007092:	1b40      	subs	r0, r0, r5
 8007094:	2802      	cmp	r0, #2
 8007096:	d9f6      	bls.n	8007086 <HAL_RCC_OscConfig+0x18e>
 8007098:	e772      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800709a:	4b32      	ldr	r3, [pc, #200]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 800709c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800709e:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80070a2:	d128      	bne.n	80070f6 <HAL_RCC_OscConfig+0x1fe>
      __HAL_RCC_PWR_CLK_ENABLE();
 80070a4:	9201      	str	r2, [sp, #4]
 80070a6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80070a8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80070ac:	641a      	str	r2, [r3, #64]	; 0x40
 80070ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070b0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80070b4:	9301      	str	r3, [sp, #4]
 80070b6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80070b8:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80070ba:	4d2c      	ldr	r5, [pc, #176]	; (800716c <HAL_RCC_OscConfig+0x274>)
 80070bc:	682b      	ldr	r3, [r5, #0]
 80070be:	05d9      	lsls	r1, r3, #23
 80070c0:	d51b      	bpl.n	80070fa <HAL_RCC_OscConfig+0x202>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80070c2:	68a3      	ldr	r3, [r4, #8]
 80070c4:	4d27      	ldr	r5, [pc, #156]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 80070c6:	2b01      	cmp	r3, #1
 80070c8:	d127      	bne.n	800711a <HAL_RCC_OscConfig+0x222>
 80070ca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80070cc:	f043 0301 	orr.w	r3, r3, #1
 80070d0:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80070d2:	f7fd fa69 	bl	80045a8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80070d6:	4e23      	ldr	r6, [pc, #140]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 80070d8:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80070da:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80070de:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80070e0:	079b      	lsls	r3, r3, #30
 80070e2:	d539      	bpl.n	8007158 <HAL_RCC_OscConfig+0x260>
    if(pwrclkchanged == SET)
 80070e4:	2f00      	cmp	r7, #0
 80070e6:	f43f af18 	beq.w	8006f1a <HAL_RCC_OscConfig+0x22>
      __HAL_RCC_PWR_CLK_DISABLE();
 80070ea:	4a1e      	ldr	r2, [pc, #120]	; (8007164 <HAL_RCC_OscConfig+0x26c>)
 80070ec:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80070ee:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80070f2:	6413      	str	r3, [r2, #64]	; 0x40
 80070f4:	e711      	b.n	8006f1a <HAL_RCC_OscConfig+0x22>
    FlagStatus       pwrclkchanged = RESET;
 80070f6:	2700      	movs	r7, #0
 80070f8:	e7df      	b.n	80070ba <HAL_RCC_OscConfig+0x1c2>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80070fa:	682b      	ldr	r3, [r5, #0]
 80070fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007100:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007102:	f7fd fa51 	bl	80045a8 <HAL_GetTick>
 8007106:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007108:	682b      	ldr	r3, [r5, #0]
 800710a:	05da      	lsls	r2, r3, #23
 800710c:	d4d9      	bmi.n	80070c2 <HAL_RCC_OscConfig+0x1ca>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800710e:	f7fd fa4b 	bl	80045a8 <HAL_GetTick>
 8007112:	1b80      	subs	r0, r0, r6
 8007114:	2802      	cmp	r0, #2
 8007116:	d9f7      	bls.n	8007108 <HAL_RCC_OscConfig+0x210>
 8007118:	e732      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800711a:	2b05      	cmp	r3, #5
 800711c:	d104      	bne.n	8007128 <HAL_RCC_OscConfig+0x230>
 800711e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007120:	f043 0304 	orr.w	r3, r3, #4
 8007124:	672b      	str	r3, [r5, #112]	; 0x70
 8007126:	e7d0      	b.n	80070ca <HAL_RCC_OscConfig+0x1d2>
 8007128:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800712a:	f022 0201 	bic.w	r2, r2, #1
 800712e:	672a      	str	r2, [r5, #112]	; 0x70
 8007130:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007132:	f022 0204 	bic.w	r2, r2, #4
 8007136:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007138:	2b00      	cmp	r3, #0
 800713a:	d1ca      	bne.n	80070d2 <HAL_RCC_OscConfig+0x1da>
      tickstart = HAL_GetTick();
 800713c:	f7fd fa34 	bl	80045a8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007140:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007144:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007146:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007148:	0798      	lsls	r0, r3, #30
 800714a:	d5cb      	bpl.n	80070e4 <HAL_RCC_OscConfig+0x1ec>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800714c:	f7fd fa2c 	bl	80045a8 <HAL_GetTick>
 8007150:	1b80      	subs	r0, r0, r6
 8007152:	4540      	cmp	r0, r8
 8007154:	d9f7      	bls.n	8007146 <HAL_RCC_OscConfig+0x24e>
 8007156:	e713      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007158:	f7fd fa26 	bl	80045a8 <HAL_GetTick>
 800715c:	1b40      	subs	r0, r0, r5
 800715e:	4540      	cmp	r0, r8
 8007160:	d9bd      	bls.n	80070de <HAL_RCC_OscConfig+0x1e6>
 8007162:	e70d      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
 8007164:	40023800 	.word	0x40023800
 8007168:	42470000 	.word	0x42470000
 800716c:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007170:	4d24      	ldr	r5, [pc, #144]	; (8007204 <HAL_RCC_OscConfig+0x30c>)
 8007172:	68ab      	ldr	r3, [r5, #8]
 8007174:	f003 030c 	and.w	r3, r3, #12
 8007178:	2b08      	cmp	r3, #8
 800717a:	f43f aee9 	beq.w	8006f50 <HAL_RCC_OscConfig+0x58>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800717e:	4b22      	ldr	r3, [pc, #136]	; (8007208 <HAL_RCC_OscConfig+0x310>)
 8007180:	2a02      	cmp	r2, #2
 8007182:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8007186:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007188:	d12e      	bne.n	80071e8 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800718a:	f7fd fa0d 	bl	80045a8 <HAL_GetTick>
 800718e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007190:	682b      	ldr	r3, [r5, #0]
 8007192:	0199      	lsls	r1, r3, #6
 8007194:	d422      	bmi.n	80071dc <HAL_RCC_OscConfig+0x2e4>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007196:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800719a:	4313      	orrs	r3, r2
 800719c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800719e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80071a2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80071a4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80071a8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80071aa:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80071ae:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80071b0:	0852      	lsrs	r2, r2, #1
 80071b2:	3a01      	subs	r2, #1
 80071b4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80071b8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80071ba:	4b13      	ldr	r3, [pc, #76]	; (8007208 <HAL_RCC_OscConfig+0x310>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80071bc:	4d11      	ldr	r5, [pc, #68]	; (8007204 <HAL_RCC_OscConfig+0x30c>)
        __HAL_RCC_PLL_ENABLE();
 80071be:	2201      	movs	r2, #1
 80071c0:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80071c2:	f7fd f9f1 	bl	80045a8 <HAL_GetTick>
 80071c6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80071c8:	682b      	ldr	r3, [r5, #0]
 80071ca:	019a      	lsls	r2, r3, #6
 80071cc:	f53f aea9 	bmi.w	8006f22 <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80071d0:	f7fd f9ea 	bl	80045a8 <HAL_GetTick>
 80071d4:	1b00      	subs	r0, r0, r4
 80071d6:	2802      	cmp	r0, #2
 80071d8:	d9f6      	bls.n	80071c8 <HAL_RCC_OscConfig+0x2d0>
 80071da:	e6d1      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80071dc:	f7fd f9e4 	bl	80045a8 <HAL_GetTick>
 80071e0:	1b80      	subs	r0, r0, r6
 80071e2:	2802      	cmp	r0, #2
 80071e4:	d9d4      	bls.n	8007190 <HAL_RCC_OscConfig+0x298>
 80071e6:	e6cb      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 80071e8:	f7fd f9de 	bl	80045a8 <HAL_GetTick>
 80071ec:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80071ee:	682b      	ldr	r3, [r5, #0]
 80071f0:	019b      	lsls	r3, r3, #6
 80071f2:	f57f ae96 	bpl.w	8006f22 <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80071f6:	f7fd f9d7 	bl	80045a8 <HAL_GetTick>
 80071fa:	1b00      	subs	r0, r0, r4
 80071fc:	2802      	cmp	r0, #2
 80071fe:	d9f6      	bls.n	80071ee <HAL_RCC_OscConfig+0x2f6>
 8007200:	e6be      	b.n	8006f80 <HAL_RCC_OscConfig+0x88>
 8007202:	bf00      	nop
 8007204:	40023800 	.word	0x40023800
 8007208:	42470000 	.word	0x42470000

0800720c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 800720c:	b538      	push	{r3, r4, r5, lr}
 800720e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007210:	4604      	mov	r4, r0
 8007212:	b1c8      	cbz	r0, 8007248 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007214:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007218:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800721c:	b91b      	cbnz	r3, 8007226 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800721e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007222:	f7fa fd7f 	bl	8001d24 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007226:	2302      	movs	r3, #2
 8007228:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800722c:	1d21      	adds	r1, r4, #4
 800722e:	6820      	ldr	r0, [r4, #0]
 8007230:	f000 f97c 	bl	800752c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007234:	6862      	ldr	r2, [r4, #4]
 8007236:	6820      	ldr	r0, [r4, #0]
 8007238:	4629      	mov	r1, r5
 800723a:	f000 f9ad 	bl	8007598 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800723e:	2301      	movs	r3, #1
 8007240:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007244:	2000      	movs	r0, #0
}
 8007246:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007248:	2001      	movs	r0, #1
 800724a:	e7fc      	b.n	8007246 <HAL_SDRAM_Init+0x3a>

0800724c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800724c:	b510      	push	{r4, lr}
 800724e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8007250:	f7fa fde0 	bl	8001e14 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8007254:	e9d4 0100 	ldrd	r0, r1, [r4]
 8007258:	f000 f9da 	bl	8007610 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800725c:	2000      	movs	r0, #0
 800725e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8007262:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8007266:	bd10      	pop	{r4, pc}

08007268 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007268:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800726a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800726e:	2b02      	cmp	r3, #2
{
 8007270:	4604      	mov	r4, r0
 8007272:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007274:	b2d8      	uxtb	r0, r3
 8007276:	d00d      	beq.n	8007294 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007278:	2302      	movs	r3, #2
 800727a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800727e:	6820      	ldr	r0, [r4, #0]
 8007280:	f000 f9d5 	bl	800762e <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007284:	682b      	ldr	r3, [r5, #0]
 8007286:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007288:	bf0c      	ite	eq
 800728a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800728c:	2301      	movne	r3, #1
 800728e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007292:	2000      	movs	r0, #0
}
 8007294:	bd38      	pop	{r3, r4, r5, pc}

08007296 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007296:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007298:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800729c:	2b02      	cmp	r3, #2
{
 800729e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80072a0:	b2d8      	uxtb	r0, r3
 80072a2:	d009      	beq.n	80072b8 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80072a4:	2302      	movs	r3, #2
 80072a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80072aa:	6820      	ldr	r0, [r4, #0]
 80072ac:	f000 f9e6 	bl	800767c <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80072b0:	2301      	movs	r3, #1
 80072b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 80072b6:	2000      	movs	r0, #0
}
 80072b8:	bd10      	pop	{r4, pc}

080072ba <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80072ba:	4770      	bx	lr

080072bc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80072bc:	6803      	ldr	r3, [r0, #0]
 80072be:	68da      	ldr	r2, [r3, #12]
 80072c0:	f042 0201 	orr.w	r2, r2, #1
 80072c4:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80072c6:	689a      	ldr	r2, [r3, #8]
 80072c8:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80072cc:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80072ce:	bf1e      	ittt	ne
 80072d0:	681a      	ldrne	r2, [r3, #0]
 80072d2:	f042 0201 	orrne.w	r2, r2, #1
 80072d6:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80072d8:	2000      	movs	r0, #0
 80072da:	4770      	bx	lr

080072dc <HAL_TIM_OC_DelayElapsedCallback>:
 80072dc:	4770      	bx	lr

080072de <HAL_TIM_IC_CaptureCallback>:
 80072de:	4770      	bx	lr

080072e0 <HAL_TIM_PWM_PulseFinishedCallback>:
 80072e0:	4770      	bx	lr

080072e2 <HAL_TIM_TriggerCallback>:
 80072e2:	4770      	bx	lr

080072e4 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80072e4:	6803      	ldr	r3, [r0, #0]
 80072e6:	691a      	ldr	r2, [r3, #16]
 80072e8:	0791      	lsls	r1, r2, #30
{
 80072ea:	b510      	push	{r4, lr}
 80072ec:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80072ee:	d50e      	bpl.n	800730e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80072f0:	68da      	ldr	r2, [r3, #12]
 80072f2:	0792      	lsls	r2, r2, #30
 80072f4:	d50b      	bpl.n	800730e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80072f6:	f06f 0202 	mvn.w	r2, #2
 80072fa:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80072fc:	2201      	movs	r2, #1
 80072fe:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007300:	699b      	ldr	r3, [r3, #24]
 8007302:	079b      	lsls	r3, r3, #30
 8007304:	d077      	beq.n	80073f6 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007306:	f7ff ffea 	bl	80072de <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800730a:	2300      	movs	r3, #0
 800730c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800730e:	6823      	ldr	r3, [r4, #0]
 8007310:	691a      	ldr	r2, [r3, #16]
 8007312:	0750      	lsls	r0, r2, #29
 8007314:	d510      	bpl.n	8007338 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8007316:	68da      	ldr	r2, [r3, #12]
 8007318:	0751      	lsls	r1, r2, #29
 800731a:	d50d      	bpl.n	8007338 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800731c:	f06f 0204 	mvn.w	r2, #4
 8007320:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007322:	2202      	movs	r2, #2
 8007324:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007326:	699b      	ldr	r3, [r3, #24]
 8007328:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800732c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800732e:	d068      	beq.n	8007402 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8007330:	f7ff ffd5 	bl	80072de <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007334:	2300      	movs	r3, #0
 8007336:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8007338:	6823      	ldr	r3, [r4, #0]
 800733a:	691a      	ldr	r2, [r3, #16]
 800733c:	0712      	lsls	r2, r2, #28
 800733e:	d50f      	bpl.n	8007360 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8007340:	68da      	ldr	r2, [r3, #12]
 8007342:	0710      	lsls	r0, r2, #28
 8007344:	d50c      	bpl.n	8007360 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8007346:	f06f 0208 	mvn.w	r2, #8
 800734a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800734c:	2204      	movs	r2, #4
 800734e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007350:	69db      	ldr	r3, [r3, #28]
 8007352:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007354:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007356:	d05a      	beq.n	800740e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8007358:	f7ff ffc1 	bl	80072de <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800735c:	2300      	movs	r3, #0
 800735e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8007360:	6823      	ldr	r3, [r4, #0]
 8007362:	691a      	ldr	r2, [r3, #16]
 8007364:	06d2      	lsls	r2, r2, #27
 8007366:	d510      	bpl.n	800738a <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8007368:	68da      	ldr	r2, [r3, #12]
 800736a:	06d0      	lsls	r0, r2, #27
 800736c:	d50d      	bpl.n	800738a <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800736e:	f06f 0210 	mvn.w	r2, #16
 8007372:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007374:	2208      	movs	r2, #8
 8007376:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007378:	69db      	ldr	r3, [r3, #28]
 800737a:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800737e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007380:	d04b      	beq.n	800741a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8007382:	f7ff ffac 	bl	80072de <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007386:	2300      	movs	r3, #0
 8007388:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800738a:	6823      	ldr	r3, [r4, #0]
 800738c:	691a      	ldr	r2, [r3, #16]
 800738e:	07d1      	lsls	r1, r2, #31
 8007390:	d508      	bpl.n	80073a4 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8007392:	68da      	ldr	r2, [r3, #12]
 8007394:	07d2      	lsls	r2, r2, #31
 8007396:	d505      	bpl.n	80073a4 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8007398:	f06f 0201 	mvn.w	r2, #1
 800739c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800739e:	4620      	mov	r0, r4
 80073a0:	f7fa fb12 	bl	80019c8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80073a4:	6823      	ldr	r3, [r4, #0]
 80073a6:	691a      	ldr	r2, [r3, #16]
 80073a8:	0610      	lsls	r0, r2, #24
 80073aa:	d508      	bpl.n	80073be <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80073ac:	68da      	ldr	r2, [r3, #12]
 80073ae:	0611      	lsls	r1, r2, #24
 80073b0:	d505      	bpl.n	80073be <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80073b2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80073b6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80073b8:	4620      	mov	r0, r4
 80073ba:	f000 f8b6 	bl	800752a <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80073be:	6823      	ldr	r3, [r4, #0]
 80073c0:	691a      	ldr	r2, [r3, #16]
 80073c2:	0652      	lsls	r2, r2, #25
 80073c4:	d508      	bpl.n	80073d8 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80073c6:	68da      	ldr	r2, [r3, #12]
 80073c8:	0650      	lsls	r0, r2, #25
 80073ca:	d505      	bpl.n	80073d8 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80073cc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80073d0:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80073d2:	4620      	mov	r0, r4
 80073d4:	f7ff ff85 	bl	80072e2 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80073d8:	6823      	ldr	r3, [r4, #0]
 80073da:	691a      	ldr	r2, [r3, #16]
 80073dc:	0691      	lsls	r1, r2, #26
 80073de:	d522      	bpl.n	8007426 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80073e0:	68da      	ldr	r2, [r3, #12]
 80073e2:	0692      	lsls	r2, r2, #26
 80073e4:	d51f      	bpl.n	8007426 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80073e6:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80073ea:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80073ec:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80073ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80073f2:	f000 b899 	b.w	8007528 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80073f6:	f7ff ff71 	bl	80072dc <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80073fa:	4620      	mov	r0, r4
 80073fc:	f7ff ff70 	bl	80072e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007400:	e783      	b.n	800730a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007402:	f7ff ff6b 	bl	80072dc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007406:	4620      	mov	r0, r4
 8007408:	f7ff ff6a 	bl	80072e0 <HAL_TIM_PWM_PulseFinishedCallback>
 800740c:	e792      	b.n	8007334 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800740e:	f7ff ff65 	bl	80072dc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007412:	4620      	mov	r0, r4
 8007414:	f7ff ff64 	bl	80072e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007418:	e7a0      	b.n	800735c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800741a:	f7ff ff5f 	bl	80072dc <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800741e:	4620      	mov	r0, r4
 8007420:	f7ff ff5e 	bl	80072e0 <HAL_TIM_PWM_PulseFinishedCallback>
 8007424:	e7af      	b.n	8007386 <HAL_TIM_IRQHandler+0xa2>
}
 8007426:	bd10      	pop	{r4, pc}

08007428 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007428:	4a30      	ldr	r2, [pc, #192]	; (80074ec <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800742a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800742c:	4290      	cmp	r0, r2
 800742e:	d012      	beq.n	8007456 <TIM_Base_SetConfig+0x2e>
 8007430:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007434:	d00f      	beq.n	8007456 <TIM_Base_SetConfig+0x2e>
 8007436:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800743a:	4290      	cmp	r0, r2
 800743c:	d00b      	beq.n	8007456 <TIM_Base_SetConfig+0x2e>
 800743e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007442:	4290      	cmp	r0, r2
 8007444:	d007      	beq.n	8007456 <TIM_Base_SetConfig+0x2e>
 8007446:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800744a:	4290      	cmp	r0, r2
 800744c:	d003      	beq.n	8007456 <TIM_Base_SetConfig+0x2e>
 800744e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007452:	4290      	cmp	r0, r2
 8007454:	d119      	bne.n	800748a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8007456:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007458:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800745c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800745e:	4a23      	ldr	r2, [pc, #140]	; (80074ec <TIM_Base_SetConfig+0xc4>)
 8007460:	4290      	cmp	r0, r2
 8007462:	d029      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 8007464:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8007468:	d026      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 800746a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800746e:	4290      	cmp	r0, r2
 8007470:	d022      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 8007472:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007476:	4290      	cmp	r0, r2
 8007478:	d01e      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 800747a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800747e:	4290      	cmp	r0, r2
 8007480:	d01a      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 8007482:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8007486:	4290      	cmp	r0, r2
 8007488:	d016      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 800748a:	4a19      	ldr	r2, [pc, #100]	; (80074f0 <TIM_Base_SetConfig+0xc8>)
 800748c:	4290      	cmp	r0, r2
 800748e:	d013      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 8007490:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8007494:	4290      	cmp	r0, r2
 8007496:	d00f      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 8007498:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800749c:	4290      	cmp	r0, r2
 800749e:	d00b      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 80074a0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80074a4:	4290      	cmp	r0, r2
 80074a6:	d007      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 80074a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80074ac:	4290      	cmp	r0, r2
 80074ae:	d003      	beq.n	80074b8 <TIM_Base_SetConfig+0x90>
 80074b0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80074b4:	4290      	cmp	r0, r2
 80074b6:	d103      	bne.n	80074c0 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80074b8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80074ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80074be:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80074c0:	694a      	ldr	r2, [r1, #20]
 80074c2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80074c6:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80074c8:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80074ca:	688b      	ldr	r3, [r1, #8]
 80074cc:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80074ce:	680b      	ldr	r3, [r1, #0]
 80074d0:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80074d2:	4b06      	ldr	r3, [pc, #24]	; (80074ec <TIM_Base_SetConfig+0xc4>)
 80074d4:	4298      	cmp	r0, r3
 80074d6:	d003      	beq.n	80074e0 <TIM_Base_SetConfig+0xb8>
 80074d8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80074dc:	4298      	cmp	r0, r3
 80074de:	d101      	bne.n	80074e4 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80074e0:	690b      	ldr	r3, [r1, #16]
 80074e2:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80074e4:	2301      	movs	r3, #1
 80074e6:	6143      	str	r3, [r0, #20]
}
 80074e8:	4770      	bx	lr
 80074ea:	bf00      	nop
 80074ec:	40010000 	.word	0x40010000
 80074f0:	40014000 	.word	0x40014000

080074f4 <HAL_TIM_Base_Init>:
{
 80074f4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80074f6:	4604      	mov	r4, r0
 80074f8:	b1a0      	cbz	r0, 8007524 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80074fa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80074fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007502:	b91b      	cbnz	r3, 800750c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8007504:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8007508:	f7ff fed7 	bl	80072ba <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800750c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800750e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8007510:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007514:	1d21      	adds	r1, r4, #4
 8007516:	f7ff ff87 	bl	8007428 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 800751a:	2301      	movs	r3, #1
 800751c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8007520:	2000      	movs	r0, #0
}
 8007522:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007524:	2001      	movs	r0, #1
 8007526:	e7fc      	b.n	8007522 <HAL_TIM_Base_Init+0x2e>

08007528 <HAL_TIMEx_CommutCallback>:
 8007528:	4770      	bx	lr

0800752a <HAL_TIMEx_BreakCallback>:
 800752a:	4770      	bx	lr

0800752c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800752c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8007530:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8007532:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8007536:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800753a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 800753e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8007542:	6809      	ldr	r1, [r1, #0]
 8007544:	2901      	cmp	r1, #1
 8007546:	ea43 0304 	orr.w	r3, r3, r4
 800754a:	4912      	ldr	r1, [pc, #72]	; (8007594 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 800754c:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800754e:	d00f      	beq.n	8007570 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007550:	431a      	orrs	r2, r3
 8007552:	432a      	orrs	r2, r5
 8007554:	ea42 0308 	orr.w	r3, r2, r8
 8007558:	ea43 030e 	orr.w	r3, r3, lr
 800755c:	ea43 030c 	orr.w	r3, r3, ip
 8007560:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007562:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007564:	4333      	orrs	r3, r6
 8007566:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8007568:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800756a:	2000      	movs	r0, #0
 800756c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8007570:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8007572:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8007574:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007576:	ea45 0208 	orr.w	r2, r5, r8
 800757a:	ea42 020e 	orr.w	r2, r2, lr
 800757e:	ea42 020c 	orr.w	r2, r2, ip
 8007582:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8007584:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8007588:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800758a:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800758c:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800758e:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8007590:	6042      	str	r2, [r0, #4]
 8007592:	e7ea      	b.n	800756a <FMC_SDRAM_Init+0x3e>
 8007594:	ffff8000 	.word	0xffff8000

08007598 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8007598:	68cb      	ldr	r3, [r1, #12]
{
 800759a:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800759c:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800759e:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80075a0:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80075a2:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80075a4:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80075a6:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80075aa:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80075ac:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80075ae:	3b01      	subs	r3, #1
 80075b0:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80075b2:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80075b4:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80075b6:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80075b8:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80075ba:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80075bc:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80075c0:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80075c4:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80075c8:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80075cc:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80075d0:	d00c      	beq.n	80075ec <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80075d2:	ea43 030c 	orr.w	r3, r3, ip
 80075d6:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80075d8:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80075da:	4333      	orrs	r3, r6
 80075dc:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80075de:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80075e2:	430b      	orrs	r3, r1
 80075e4:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80075e6:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80075e8:	2000      	movs	r0, #0
 80075ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80075ec:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80075ee:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80075f2:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80075f6:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80075f8:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80075fa:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80075fe:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8007600:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007602:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8007604:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8007608:	430a      	orrs	r2, r1
 800760a:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800760c:	60c2      	str	r2, [r0, #12]
 800760e:	e7eb      	b.n	80075e8 <FMC_SDRAM_Timing_Init+0x50>

08007610 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8007610:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8007614:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8007618:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 800761c:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8007620:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8007622:	2300      	movs	r3, #0
 8007624:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8007626:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8007628:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800762a:	4618      	mov	r0, r3
 800762c:	4770      	bx	lr

0800762e <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800762e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8007630:	2300      	movs	r3, #0
 8007632:	9301      	str	r3, [sp, #4]
{
 8007634:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007636:	e9d1 3200 	ldrd	r3, r2, [r1]
 800763a:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800763c:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800763e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8007642:	688a      	ldr	r2, [r1, #8]
 8007644:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8007646:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800764a:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 800764c:	9b01      	ldr	r3, [sp, #4]
 800764e:	6103      	str	r3, [r0, #16]
{
 8007650:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8007652:	f7fc ffa9 	bl	80045a8 <HAL_GetTick>
 8007656:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8007658:	69a3      	ldr	r3, [r4, #24]
 800765a:	f013 0320 	ands.w	r3, r3, #32
 800765e:	d101      	bne.n	8007664 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007660:	4618      	mov	r0, r3
 8007662:	e003      	b.n	800766c <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8007664:	1c6b      	adds	r3, r5, #1
 8007666:	d0f7      	beq.n	8007658 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007668:	b915      	cbnz	r5, 8007670 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 800766a:	2003      	movs	r0, #3
}
 800766c:	b002      	add	sp, #8
 800766e:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8007670:	f7fc ff9a 	bl	80045a8 <HAL_GetTick>
 8007674:	1b80      	subs	r0, r0, r6
 8007676:	42a8      	cmp	r0, r5
 8007678:	d9ee      	bls.n	8007658 <FMC_SDRAM_SendCommand+0x2a>
 800767a:	e7f6      	b.n	800766a <FMC_SDRAM_SendCommand+0x3c>

0800767c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 800767c:	6943      	ldr	r3, [r0, #20]
 800767e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8007682:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8007684:	2000      	movs	r0, #0
 8007686:	4770      	bx	lr

08007688 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007688:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800768c:	b113      	cbz	r3, 8007694 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800768e:	f06f 0005 	mvn.w	r0, #5
 8007692:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007694:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8007698:	4b07      	ldr	r3, [pc, #28]	; (80076b8 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 800769a:	b912      	cbnz	r2, 80076a2 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800769c:	f3ef 8211 	mrs	r2, BASEPRI
 80076a0:	b112      	cbz	r2, 80076a8 <osKernelInitialize+0x20>
 80076a2:	681a      	ldr	r2, [r3, #0]
 80076a4:	2a02      	cmp	r2, #2
 80076a6:	d0f2      	beq.n	800768e <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80076a8:	6818      	ldr	r0, [r3, #0]
 80076aa:	b910      	cbnz	r0, 80076b2 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80076ac:	2201      	movs	r2, #1
 80076ae:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80076b0:	4770      	bx	lr
    } else {
      stat = osError;
 80076b2:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80076b6:	4770      	bx	lr
 80076b8:	20004860 	.word	0x20004860

080076bc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80076bc:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80076be:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80076c2:	b113      	cbz	r3, 80076ca <osKernelStart+0xe>
    stat = osErrorISR;
 80076c4:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80076c8:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80076ca:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80076ce:	4b0a      	ldr	r3, [pc, #40]	; (80076f8 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80076d0:	b912      	cbnz	r2, 80076d8 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80076d2:	f3ef 8211 	mrs	r2, BASEPRI
 80076d6:	b112      	cbz	r2, 80076de <osKernelStart+0x22>
 80076d8:	681a      	ldr	r2, [r3, #0]
 80076da:	2a02      	cmp	r2, #2
 80076dc:	d0f2      	beq.n	80076c4 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80076de:	681a      	ldr	r2, [r3, #0]
 80076e0:	2a01      	cmp	r2, #1
 80076e2:	d105      	bne.n	80076f0 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80076e4:	2202      	movs	r2, #2
 80076e6:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80076e8:	f001 fcdc 	bl	80090a4 <vTaskStartScheduler>
      stat = osOK;
 80076ec:	2000      	movs	r0, #0
 80076ee:	e7eb      	b.n	80076c8 <osKernelStart+0xc>
      stat = osError;
 80076f0:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80076f4:	e7e8      	b.n	80076c8 <osKernelStart+0xc>
 80076f6:	bf00      	nop
 80076f8:	20004860 	.word	0x20004860

080076fc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80076fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80076fe:	b087      	sub	sp, #28
 8007700:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8007702:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8007704:	460b      	mov	r3, r1
  hTask = NULL;
 8007706:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007708:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800770c:	bb22      	cbnz	r2, 8007758 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800770e:	f3ef 8210 	mrs	r2, PRIMASK
 8007712:	b912      	cbnz	r2, 800771a <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007714:	f3ef 8211 	mrs	r2, BASEPRI
 8007718:	b11a      	cbz	r2, 8007722 <osThreadNew+0x26>
 800771a:	4a22      	ldr	r2, [pc, #136]	; (80077a4 <osThreadNew+0xa8>)
 800771c:	6812      	ldr	r2, [r2, #0]
 800771e:	2a02      	cmp	r2, #2
 8007720:	d01a      	beq.n	8007758 <osThreadNew+0x5c>
 8007722:	b1c8      	cbz	r0, 8007758 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8007724:	2c00      	cmp	r4, #0
 8007726:	d02f      	beq.n	8007788 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8007728:	69a5      	ldr	r5, [r4, #24]
 800772a:	2d00      	cmp	r5, #0
 800772c:	bf08      	it	eq
 800772e:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8007730:	1e6a      	subs	r2, r5, #1
 8007732:	2a37      	cmp	r2, #55	; 0x37
 8007734:	46ac      	mov	ip, r5
 8007736:	d82b      	bhi.n	8007790 <osThreadNew+0x94>
 8007738:	6862      	ldr	r2, [r4, #4]
 800773a:	07d2      	lsls	r2, r2, #31
 800773c:	d428      	bmi.n	8007790 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800773e:	6966      	ldr	r6, [r4, #20]
 8007740:	b16e      	cbz	r6, 800775e <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8007742:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007744:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8007748:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800774a:	b157      	cbz	r7, 8007762 <osThreadNew+0x66>
 800774c:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8007750:	d902      	bls.n	8007758 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007752:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8007754:	b104      	cbz	r4, 8007758 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8007756:	b9ee      	cbnz	r6, 8007794 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8007758:	9805      	ldr	r0, [sp, #20]
}
 800775a:	b007      	add	sp, #28
 800775c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800775e:	2280      	movs	r2, #128	; 0x80
 8007760:	e7f0      	b.n	8007744 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8007762:	f1be 0f00 	cmp.w	lr, #0
 8007766:	d1f7      	bne.n	8007758 <osThreadNew+0x5c>
      if (mem == 0) {
 8007768:	6924      	ldr	r4, [r4, #16]
 800776a:	2c00      	cmp	r4, #0
 800776c:	d1f4      	bne.n	8007758 <osThreadNew+0x5c>
 800776e:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8007770:	a905      	add	r1, sp, #20
 8007772:	e9cd c100 	strd	ip, r1, [sp]
 8007776:	b292      	uxth	r2, r2
 8007778:	4621      	mov	r1, r4
 800777a:	f001 fb32 	bl	8008de2 <xTaskCreate>
 800777e:	2801      	cmp	r0, #1
          hTask = NULL;
 8007780:	bf1c      	itt	ne
 8007782:	2300      	movne	r3, #0
 8007784:	9305      	strne	r3, [sp, #20]
 8007786:	e7e7      	b.n	8007758 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8007788:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800778c:	2280      	movs	r2, #128	; 0x80
 800778e:	e7ef      	b.n	8007770 <osThreadNew+0x74>
        return (NULL);
 8007790:	2000      	movs	r0, #0
 8007792:	e7e2      	b.n	800775a <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8007794:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8007798:	9500      	str	r5, [sp, #0]
 800779a:	f001 faea 	bl	8008d72 <xTaskCreateStatic>
 800779e:	9005      	str	r0, [sp, #20]
 80077a0:	e7da      	b.n	8007758 <osThreadNew+0x5c>
 80077a2:	bf00      	nop
 80077a4:	20004860 	.word	0x20004860

080077a8 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80077a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80077aa:	460e      	mov	r6, r1
 80077ac:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80077ae:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80077b2:	b11b      	cbz	r3, 80077bc <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80077b4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80077b6:	4620      	mov	r0, r4
 80077b8:	b002      	add	sp, #8
 80077ba:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80077bc:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80077c0:	b913      	cbnz	r3, 80077c8 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80077c2:	f3ef 8311 	mrs	r3, BASEPRI
 80077c6:	b11b      	cbz	r3, 80077d0 <osSemaphoreNew+0x28>
 80077c8:	4b21      	ldr	r3, [pc, #132]	; (8007850 <osSemaphoreNew+0xa8>)
 80077ca:	681b      	ldr	r3, [r3, #0]
 80077cc:	2b02      	cmp	r3, #2
 80077ce:	d0f1      	beq.n	80077b4 <osSemaphoreNew+0xc>
 80077d0:	2800      	cmp	r0, #0
 80077d2:	d0ef      	beq.n	80077b4 <osSemaphoreNew+0xc>
 80077d4:	42b0      	cmp	r0, r6
 80077d6:	d3ed      	bcc.n	80077b4 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80077d8:	b1ed      	cbz	r5, 8007816 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80077da:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80077de:	b1c3      	cbz	r3, 8007812 <osSemaphoreNew+0x6a>
 80077e0:	2a4f      	cmp	r2, #79	; 0x4f
 80077e2:	d9e7      	bls.n	80077b4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80077e4:	2801      	cmp	r0, #1
 80077e6:	d129      	bne.n	800783c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80077e8:	2203      	movs	r2, #3
 80077ea:	9200      	str	r2, [sp, #0]
 80077ec:	2200      	movs	r2, #0
 80077ee:	4611      	mov	r1, r2
 80077f0:	f000 fd29 	bl	8008246 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80077f4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80077f6:	2800      	cmp	r0, #0
 80077f8:	d0dc      	beq.n	80077b4 <osSemaphoreNew+0xc>
 80077fa:	b1ce      	cbz	r6, 8007830 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80077fc:	2300      	movs	r3, #0
 80077fe:	461a      	mov	r2, r3
 8007800:	4619      	mov	r1, r3
 8007802:	f000 fdd5 	bl	80083b0 <xQueueGenericSend>
 8007806:	2801      	cmp	r0, #1
 8007808:	d012      	beq.n	8007830 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800780a:	4620      	mov	r0, r4
 800780c:	f001 f910 	bl	8008a30 <vQueueDelete>
 8007810:	e7d0      	b.n	80077b4 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8007812:	2a00      	cmp	r2, #0
 8007814:	d1ce      	bne.n	80077b4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8007816:	2801      	cmp	r0, #1
 8007818:	d104      	bne.n	8007824 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800781a:	2203      	movs	r2, #3
 800781c:	2100      	movs	r1, #0
 800781e:	f000 fd60 	bl	80082e2 <xQueueGenericCreate>
 8007822:	e7e7      	b.n	80077f4 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8007824:	4631      	mov	r1, r6
 8007826:	f000 fda5 	bl	8008374 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800782a:	4604      	mov	r4, r0
 800782c:	2800      	cmp	r0, #0
 800782e:	d0c1      	beq.n	80077b4 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8007830:	b95d      	cbnz	r5, 800784a <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8007832:	4629      	mov	r1, r5
 8007834:	4620      	mov	r0, r4
 8007836:	f001 f8d5 	bl	80089e4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800783a:	e7bc      	b.n	80077b6 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800783c:	461a      	mov	r2, r3
 800783e:	4631      	mov	r1, r6
 8007840:	f000 fd76 	bl	8008330 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8007844:	4604      	mov	r4, r0
 8007846:	2800      	cmp	r0, #0
 8007848:	d0b4      	beq.n	80077b4 <osSemaphoreNew+0xc>
          name = attr->name;
 800784a:	682d      	ldr	r5, [r5, #0]
 800784c:	e7f1      	b.n	8007832 <osSemaphoreNew+0x8a>
 800784e:	bf00      	nop
 8007850:	20004860 	.word	0x20004860

08007854 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8007854:	b513      	push	{r0, r1, r4, lr}
 8007856:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8007858:	b918      	cbnz	r0, 8007862 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 800785a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800785e:	b002      	add	sp, #8
 8007860:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007862:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8007866:	b163      	cbz	r3, 8007882 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8007868:	2c00      	cmp	r4, #0
 800786a:	d1f6      	bne.n	800785a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800786c:	aa01      	add	r2, sp, #4
 800786e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8007870:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8007872:	f001 f867 	bl	8008944 <xQueueReceiveFromISR>
 8007876:	2801      	cmp	r0, #1
 8007878:	d113      	bne.n	80078a2 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 800787a:	9b01      	ldr	r3, [sp, #4]
 800787c:	b9a3      	cbnz	r3, 80078a8 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800787e:	2000      	movs	r0, #0
 8007880:	e7ed      	b.n	800785e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007882:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8007886:	b913      	cbnz	r3, 800788e <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007888:	f3ef 8311 	mrs	r3, BASEPRI
 800788c:	b11b      	cbz	r3, 8007896 <osSemaphoreAcquire+0x42>
 800788e:	4b0d      	ldr	r3, [pc, #52]	; (80078c4 <osSemaphoreAcquire+0x70>)
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	2b02      	cmp	r3, #2
 8007894:	d0e8      	beq.n	8007868 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8007896:	4621      	mov	r1, r4
 8007898:	f000 ff91 	bl	80087be <xQueueSemaphoreTake>
 800789c:	2801      	cmp	r0, #1
 800789e:	d0ee      	beq.n	800787e <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80078a0:	b96c      	cbnz	r4, 80078be <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80078a2:	f06f 0002 	mvn.w	r0, #2
 80078a6:	e7da      	b.n	800785e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80078a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80078ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80078b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80078b4:	f3bf 8f4f 	dsb	sy
 80078b8:	f3bf 8f6f 	isb	sy
 80078bc:	e7df      	b.n	800787e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80078be:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80078c2:	e7cc      	b.n	800785e <osSemaphoreAcquire+0xa>
 80078c4:	20004860 	.word	0x20004860

080078c8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80078c8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80078ca:	b370      	cbz	r0, 800792a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80078cc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80078d0:	b14b      	cbz	r3, 80078e6 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80078d2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80078d4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80078d6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80078d8:	f000 fe7e 	bl	80085d8 <xQueueGiveFromISR>
 80078dc:	2801      	cmp	r0, #1
 80078de:	d014      	beq.n	800790a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80078e0:	f06f 0002 	mvn.w	r0, #2
 80078e4:	e014      	b.n	8007910 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80078e6:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80078ea:	b913      	cbnz	r3, 80078f2 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80078ec:	f3ef 8311 	mrs	r3, BASEPRI
 80078f0:	b11b      	cbz	r3, 80078fa <osSemaphoreRelease+0x32>
 80078f2:	4b0f      	ldr	r3, [pc, #60]	; (8007930 <osSemaphoreRelease+0x68>)
 80078f4:	681b      	ldr	r3, [r3, #0]
 80078f6:	2b02      	cmp	r3, #2
 80078f8:	d0eb      	beq.n	80078d2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80078fa:	2300      	movs	r3, #0
 80078fc:	461a      	mov	r2, r3
 80078fe:	4619      	mov	r1, r3
 8007900:	f000 fd56 	bl	80083b0 <xQueueGenericSend>
 8007904:	2801      	cmp	r0, #1
 8007906:	d002      	beq.n	800790e <osSemaphoreRelease+0x46>
 8007908:	e7ea      	b.n	80078e0 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800790a:	9b01      	ldr	r3, [sp, #4]
 800790c:	b913      	cbnz	r3, 8007914 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800790e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8007910:	b002      	add	sp, #8
 8007912:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8007914:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007918:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800791c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007920:	f3bf 8f4f 	dsb	sy
 8007924:	f3bf 8f6f 	isb	sy
 8007928:	e7f1      	b.n	800790e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800792a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800792e:	e7ef      	b.n	8007910 <osSemaphoreRelease+0x48>
 8007930:	20004860 	.word	0x20004860

08007934 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8007934:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007936:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007938:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800793c:	b11b      	cbz	r3, 8007946 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800793e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8007940:	4628      	mov	r0, r5
 8007942:	b002      	add	sp, #8
 8007944:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007946:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800794a:	b913      	cbnz	r3, 8007952 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800794c:	f3ef 8311 	mrs	r3, BASEPRI
 8007950:	b11b      	cbz	r3, 800795a <osMessageQueueNew+0x26>
 8007952:	4b1a      	ldr	r3, [pc, #104]	; (80079bc <osMessageQueueNew+0x88>)
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	2b02      	cmp	r3, #2
 8007958:	d0f1      	beq.n	800793e <osMessageQueueNew+0xa>
 800795a:	2800      	cmp	r0, #0
 800795c:	d0ef      	beq.n	800793e <osMessageQueueNew+0xa>
 800795e:	2900      	cmp	r1, #0
 8007960:	d0ed      	beq.n	800793e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8007962:	b1ec      	cbz	r4, 80079a0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007964:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8007968:	b193      	cbz	r3, 8007990 <osMessageQueueNew+0x5c>
 800796a:	2a4f      	cmp	r2, #79	; 0x4f
 800796c:	d9e7      	bls.n	800793e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800796e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8007970:	2a00      	cmp	r2, #0
 8007972:	d0e4      	beq.n	800793e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8007974:	6966      	ldr	r6, [r4, #20]
 8007976:	fb01 f500 	mul.w	r5, r1, r0
 800797a:	42ae      	cmp	r6, r5
 800797c:	d3df      	bcc.n	800793e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800797e:	2500      	movs	r5, #0
 8007980:	9500      	str	r5, [sp, #0]
 8007982:	f000 fc60 	bl	8008246 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8007986:	4605      	mov	r5, r0
 8007988:	2800      	cmp	r0, #0
 800798a:	d0d8      	beq.n	800793e <osMessageQueueNew+0xa>
        name = attr->name;
 800798c:	6824      	ldr	r4, [r4, #0]
 800798e:	e00f      	b.n	80079b0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8007990:	2a00      	cmp	r2, #0
 8007992:	d1d4      	bne.n	800793e <osMessageQueueNew+0xa>
 8007994:	6923      	ldr	r3, [r4, #16]
 8007996:	2b00      	cmp	r3, #0
 8007998:	d1d1      	bne.n	800793e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800799a:	6963      	ldr	r3, [r4, #20]
 800799c:	2b00      	cmp	r3, #0
 800799e:	d1ce      	bne.n	800793e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80079a0:	2200      	movs	r2, #0
 80079a2:	f000 fc9e 	bl	80082e2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80079a6:	4605      	mov	r5, r0
 80079a8:	2800      	cmp	r0, #0
 80079aa:	d0c8      	beq.n	800793e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80079ac:	2c00      	cmp	r4, #0
 80079ae:	d1ed      	bne.n	800798c <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80079b0:	4621      	mov	r1, r4
 80079b2:	4628      	mov	r0, r5
 80079b4:	f001 f816 	bl	80089e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80079b8:	e7c2      	b.n	8007940 <osMessageQueueNew+0xc>
 80079ba:	bf00      	nop
 80079bc:	20004860 	.word	0x20004860

080079c0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80079c0:	b513      	push	{r0, r1, r4, lr}
 80079c2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80079c4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80079c8:	b123      	cbz	r3, 80079d4 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80079ca:	b9d8      	cbnz	r0, 8007a04 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80079cc:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80079d0:	b002      	add	sp, #8
 80079d2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80079d4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80079d8:	b913      	cbnz	r3, 80079e0 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80079da:	f3ef 8311 	mrs	r3, BASEPRI
 80079de:	b11b      	cbz	r3, 80079e8 <osMessageQueuePut+0x28>
 80079e0:	4b17      	ldr	r3, [pc, #92]	; (8007a40 <osMessageQueuePut+0x80>)
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	2b02      	cmp	r3, #2
 80079e6:	d0f0      	beq.n	80079ca <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80079e8:	2800      	cmp	r0, #0
 80079ea:	d0ef      	beq.n	80079cc <osMessageQueuePut+0xc>
 80079ec:	2900      	cmp	r1, #0
 80079ee:	d0ed      	beq.n	80079cc <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80079f0:	2300      	movs	r3, #0
 80079f2:	4622      	mov	r2, r4
 80079f4:	f000 fcdc 	bl	80083b0 <xQueueGenericSend>
 80079f8:	2801      	cmp	r0, #1
 80079fa:	d010      	beq.n	8007a1e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 80079fc:	b9e4      	cbnz	r4, 8007a38 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 80079fe:	f06f 0002 	mvn.w	r0, #2
 8007a02:	e7e5      	b.n	80079d0 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007a04:	2900      	cmp	r1, #0
 8007a06:	d0e1      	beq.n	80079cc <osMessageQueuePut+0xc>
 8007a08:	2c00      	cmp	r4, #0
 8007a0a:	d1df      	bne.n	80079cc <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007a0c:	4623      	mov	r3, r4
 8007a0e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007a10:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007a12:	f000 fd80 	bl	8008516 <xQueueGenericSendFromISR>
 8007a16:	2801      	cmp	r0, #1
 8007a18:	d1f1      	bne.n	80079fe <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8007a1a:	9b01      	ldr	r3, [sp, #4]
 8007a1c:	b90b      	cbnz	r3, 8007a22 <osMessageQueuePut+0x62>
  stat = osOK;
 8007a1e:	2000      	movs	r0, #0
 8007a20:	e7d6      	b.n	80079d0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8007a22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007a26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007a2e:	f3bf 8f4f 	dsb	sy
 8007a32:	f3bf 8f6f 	isb	sy
 8007a36:	e7f2      	b.n	8007a1e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8007a38:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007a3c:	e7c8      	b.n	80079d0 <osMessageQueuePut+0x10>
 8007a3e:	bf00      	nop
 8007a40:	20004860 	.word	0x20004860

08007a44 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007a44:	b513      	push	{r0, r1, r4, lr}
 8007a46:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007a48:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007a4c:	b123      	cbz	r3, 8007a58 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007a4e:	b9d0      	cbnz	r0, 8007a86 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8007a50:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007a54:	b002      	add	sp, #8
 8007a56:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007a58:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007a5c:	b913      	cbnz	r3, 8007a64 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007a5e:	f3ef 8311 	mrs	r3, BASEPRI
 8007a62:	b11b      	cbz	r3, 8007a6c <osMessageQueueGet+0x28>
 8007a64:	4b16      	ldr	r3, [pc, #88]	; (8007ac0 <osMessageQueueGet+0x7c>)
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	2b02      	cmp	r3, #2
 8007a6a:	d0f0      	beq.n	8007a4e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007a6c:	2800      	cmp	r0, #0
 8007a6e:	d0ef      	beq.n	8007a50 <osMessageQueueGet+0xc>
 8007a70:	2900      	cmp	r1, #0
 8007a72:	d0ed      	beq.n	8007a50 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8007a74:	4622      	mov	r2, r4
 8007a76:	f000 fe03 	bl	8008680 <xQueueReceive>
 8007a7a:	2801      	cmp	r0, #1
 8007a7c:	d00f      	beq.n	8007a9e <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 8007a7e:	b9dc      	cbnz	r4, 8007ab8 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8007a80:	f06f 0002 	mvn.w	r0, #2
 8007a84:	e7e6      	b.n	8007a54 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007a86:	2900      	cmp	r1, #0
 8007a88:	d0e2      	beq.n	8007a50 <osMessageQueueGet+0xc>
 8007a8a:	2c00      	cmp	r4, #0
 8007a8c:	d1e0      	bne.n	8007a50 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007a8e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007a90:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007a92:	f000 ff57 	bl	8008944 <xQueueReceiveFromISR>
 8007a96:	2801      	cmp	r0, #1
 8007a98:	d1f2      	bne.n	8007a80 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8007a9a:	9b01      	ldr	r3, [sp, #4]
 8007a9c:	b90b      	cbnz	r3, 8007aa2 <osMessageQueueGet+0x5e>
  stat = osOK;
 8007a9e:	2000      	movs	r0, #0
 8007aa0:	e7d8      	b.n	8007a54 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8007aa2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007aa6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007aaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007aae:	f3bf 8f4f 	dsb	sy
 8007ab2:	f3bf 8f6f 	isb	sy
 8007ab6:	e7f2      	b.n	8007a9e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8007ab8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007abc:	e7ca      	b.n	8007a54 <osMessageQueueGet+0x10>
 8007abe:	bf00      	nop
 8007ac0:	20004860 	.word	0x20004860

08007ac4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8007ac4:	4b03      	ldr	r3, [pc, #12]	; (8007ad4 <vApplicationGetIdleTaskMemory+0x10>)
 8007ac6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8007ac8:	4b03      	ldr	r3, [pc, #12]	; (8007ad8 <vApplicationGetIdleTaskMemory+0x14>)
 8007aca:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8007acc:	2380      	movs	r3, #128	; 0x80
 8007ace:	6013      	str	r3, [r2, #0]
}
 8007ad0:	4770      	bx	lr
 8007ad2:	bf00      	nop
 8007ad4:	20004800 	.word	0x20004800
 8007ad8:	20004600 	.word	0x20004600

08007adc <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007adc:	4b03      	ldr	r3, [pc, #12]	; (8007aec <vApplicationGetTimerTaskMemory+0x10>)
 8007ade:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8007ae0:	4b03      	ldr	r3, [pc, #12]	; (8007af0 <vApplicationGetTimerTaskMemory+0x14>)
 8007ae2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007ae4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007ae8:	6013      	str	r3, [r2, #0]
}
 8007aea:	4770      	bx	lr
 8007aec:	20004c64 	.word	0x20004c64
 8007af0:	20004864 	.word	0x20004864

08007af4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007af4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007af6:	4b0f      	ldr	r3, [pc, #60]	; (8007b34 <prvInsertBlockIntoFreeList+0x40>)
 8007af8:	461a      	mov	r2, r3
 8007afa:	681b      	ldr	r3, [r3, #0]
 8007afc:	4283      	cmp	r3, r0
 8007afe:	d3fb      	bcc.n	8007af8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007b00:	6854      	ldr	r4, [r2, #4]
 8007b02:	1911      	adds	r1, r2, r4
 8007b04:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007b06:	bf01      	itttt	eq
 8007b08:	6841      	ldreq	r1, [r0, #4]
 8007b0a:	4610      	moveq	r0, r2
 8007b0c:	1909      	addeq	r1, r1, r4
 8007b0e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007b10:	6844      	ldr	r4, [r0, #4]
 8007b12:	1901      	adds	r1, r0, r4
 8007b14:	428b      	cmp	r3, r1
 8007b16:	d107      	bne.n	8007b28 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007b18:	4907      	ldr	r1, [pc, #28]	; (8007b38 <prvInsertBlockIntoFreeList+0x44>)
 8007b1a:	6809      	ldr	r1, [r1, #0]
 8007b1c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007b1e:	bf1f      	itttt	ne
 8007b20:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8007b22:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007b24:	1909      	addne	r1, r1, r4
 8007b26:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007b28:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007b2a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007b2c:	bf18      	it	ne
 8007b2e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007b30:	bd10      	pop	{r4, pc}
 8007b32:	bf00      	nop
 8007b34:	2000ccd4 	.word	0x2000ccd4
 8007b38:	20004cc4 	.word	0x20004cc4

08007b3c <pvPortMalloc>:
{
 8007b3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007b40:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8007b42:	f001 f97b 	bl	8008e3c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007b46:	4840      	ldr	r0, [pc, #256]	; (8007c48 <pvPortMalloc+0x10c>)
 8007b48:	4d40      	ldr	r5, [pc, #256]	; (8007c4c <pvPortMalloc+0x110>)
 8007b4a:	6803      	ldr	r3, [r0, #0]
 8007b4c:	bb0b      	cbnz	r3, 8007b92 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8007b4e:	4940      	ldr	r1, [pc, #256]	; (8007c50 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007b50:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8007b52:	bf1f      	itttt	ne
 8007b54:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007b56:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007b5a:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8007b5e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007b60:	bf14      	ite	ne
 8007b62:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007b64:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007b68:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007b6a:	4e3a      	ldr	r6, [pc, #232]	; (8007c54 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8007b6c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007b6e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8007b72:	2300      	movs	r3, #0
 8007b74:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007b76:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007b78:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007b7c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007b7e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8007b82:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007b84:	4a34      	ldr	r2, [pc, #208]	; (8007c58 <pvPortMalloc+0x11c>)
 8007b86:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007b88:	4a34      	ldr	r2, [pc, #208]	; (8007c5c <pvPortMalloc+0x120>)
 8007b8a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007b8c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007b90:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8007b92:	682f      	ldr	r7, [r5, #0]
 8007b94:	4227      	tst	r7, r4
 8007b96:	d151      	bne.n	8007c3c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8007b98:	2c00      	cmp	r4, #0
 8007b9a:	d042      	beq.n	8007c22 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8007b9c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8007ba0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8007ba2:	bf1c      	itt	ne
 8007ba4:	f023 0307 	bicne.w	r3, r3, #7
 8007ba8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8007baa:	2b00      	cmp	r3, #0
 8007bac:	d046      	beq.n	8007c3c <pvPortMalloc+0x100>
 8007bae:	4c2b      	ldr	r4, [pc, #172]	; (8007c5c <pvPortMalloc+0x120>)
 8007bb0:	6826      	ldr	r6, [r4, #0]
 8007bb2:	429e      	cmp	r6, r3
 8007bb4:	d342      	bcc.n	8007c3c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8007bb6:	4a27      	ldr	r2, [pc, #156]	; (8007c54 <pvPortMalloc+0x118>)
 8007bb8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8007bba:	6869      	ldr	r1, [r5, #4]
 8007bbc:	4299      	cmp	r1, r3
 8007bbe:	d204      	bcs.n	8007bca <pvPortMalloc+0x8e>
 8007bc0:	f8d5 c000 	ldr.w	ip, [r5]
 8007bc4:	f1bc 0f00 	cmp.w	ip, #0
 8007bc8:	d115      	bne.n	8007bf6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8007bca:	6800      	ldr	r0, [r0, #0]
 8007bcc:	42a8      	cmp	r0, r5
 8007bce:	d035      	beq.n	8007c3c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007bd0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007bd2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007bd4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007bd8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007bda:	2910      	cmp	r1, #16
 8007bdc:	d912      	bls.n	8007c04 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8007bde:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8007be0:	0742      	lsls	r2, r0, #29
 8007be2:	d00b      	beq.n	8007bfc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007be4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007be8:	f383 8811 	msr	BASEPRI, r3
 8007bec:	f3bf 8f6f 	isb	sy
 8007bf0:	f3bf 8f4f 	dsb	sy
 8007bf4:	e7fe      	b.n	8007bf4 <pvPortMalloc+0xb8>
 8007bf6:	462a      	mov	r2, r5
 8007bf8:	4665      	mov	r5, ip
 8007bfa:	e7de      	b.n	8007bba <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007bfc:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007bfe:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007c00:	f7ff ff78 	bl	8007af4 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007c04:	4914      	ldr	r1, [pc, #80]	; (8007c58 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007c06:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007c08:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007c0a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007c0c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007c0e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8007c10:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007c14:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007c16:	bf38      	it	cc
 8007c18:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007c1a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007c1e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8007c20:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8007c22:	f001 f9af 	bl	8008f84 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007c26:	0763      	lsls	r3, r4, #29
 8007c28:	d00a      	beq.n	8007c40 <pvPortMalloc+0x104>
 8007c2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c2e:	f383 8811 	msr	BASEPRI, r3
 8007c32:	f3bf 8f6f 	isb	sy
 8007c36:	f3bf 8f4f 	dsb	sy
 8007c3a:	e7fe      	b.n	8007c3a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8007c3c:	2400      	movs	r4, #0
 8007c3e:	e7f0      	b.n	8007c22 <pvPortMalloc+0xe6>
}
 8007c40:	4620      	mov	r0, r4
 8007c42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007c46:	bf00      	nop
 8007c48:	20004cc4 	.word	0x20004cc4
 8007c4c:	2000ccc8 	.word	0x2000ccc8
 8007c50:	20004cc8 	.word	0x20004cc8
 8007c54:	2000ccd4 	.word	0x2000ccd4
 8007c58:	2000ccd0 	.word	0x2000ccd0
 8007c5c:	2000cccc 	.word	0x2000cccc

08007c60 <vPortFree>:
{
 8007c60:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007c62:	4604      	mov	r4, r0
 8007c64:	b370      	cbz	r0, 8007cc4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007c66:	4a18      	ldr	r2, [pc, #96]	; (8007cc8 <vPortFree+0x68>)
 8007c68:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007c6c:	6812      	ldr	r2, [r2, #0]
 8007c6e:	4213      	tst	r3, r2
 8007c70:	d108      	bne.n	8007c84 <vPortFree+0x24>
 8007c72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c76:	f383 8811 	msr	BASEPRI, r3
 8007c7a:	f3bf 8f6f 	isb	sy
 8007c7e:	f3bf 8f4f 	dsb	sy
 8007c82:	e7fe      	b.n	8007c82 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007c84:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8007c88:	b141      	cbz	r1, 8007c9c <vPortFree+0x3c>
 8007c8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c8e:	f383 8811 	msr	BASEPRI, r3
 8007c92:	f3bf 8f6f 	isb	sy
 8007c96:	f3bf 8f4f 	dsb	sy
 8007c9a:	e7fe      	b.n	8007c9a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8007c9c:	ea23 0302 	bic.w	r3, r3, r2
 8007ca0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8007ca4:	f001 f8ca 	bl	8008e3c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007ca8:	4a08      	ldr	r2, [pc, #32]	; (8007ccc <vPortFree+0x6c>)
 8007caa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007cae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007cb0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007cb4:	440b      	add	r3, r1
 8007cb6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007cb8:	f7ff ff1c 	bl	8007af4 <prvInsertBlockIntoFreeList>
}
 8007cbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007cc0:	f001 b960 	b.w	8008f84 <xTaskResumeAll>
}
 8007cc4:	bd10      	pop	{r4, pc}
 8007cc6:	bf00      	nop
 8007cc8:	2000ccc8 	.word	0x2000ccc8
 8007ccc:	2000cccc 	.word	0x2000cccc

08007cd0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007cd0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007cd4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007cd8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007cdc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007cde:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007ce0:	2300      	movs	r3, #0
 8007ce2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007ce4:	4770      	bx	lr

08007ce6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007ce6:	2300      	movs	r3, #0
 8007ce8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007cea:	4770      	bx	lr

08007cec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007cec:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8007cee:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007cf0:	689a      	ldr	r2, [r3, #8]
 8007cf2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007cf4:	689a      	ldr	r2, [r3, #8]
 8007cf6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007cf8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007cfa:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007cfc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007cfe:	3301      	adds	r3, #1
 8007d00:	6003      	str	r3, [r0, #0]
}
 8007d02:	4770      	bx	lr

08007d04 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007d04:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007d06:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007d08:	1c63      	adds	r3, r4, #1
 8007d0a:	d10a      	bne.n	8007d22 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007d0c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8007d0e:	685a      	ldr	r2, [r3, #4]
 8007d10:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007d12:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007d14:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007d16:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007d18:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007d1a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007d1c:	3301      	adds	r3, #1
 8007d1e:	6003      	str	r3, [r0, #0]
}
 8007d20:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007d22:	f100 0208 	add.w	r2, r0, #8
 8007d26:	4613      	mov	r3, r2
 8007d28:	6852      	ldr	r2, [r2, #4]
 8007d2a:	6815      	ldr	r5, [r2, #0]
 8007d2c:	42a5      	cmp	r5, r4
 8007d2e:	d9fa      	bls.n	8007d26 <vListInsert+0x22>
 8007d30:	e7ed      	b.n	8007d0e <vListInsert+0xa>

08007d32 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007d32:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007d36:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007d38:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007d3a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007d3c:	6859      	ldr	r1, [r3, #4]
 8007d3e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007d40:	bf08      	it	eq
 8007d42:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007d44:	2200      	movs	r2, #0
 8007d46:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007d48:	681a      	ldr	r2, [r3, #0]
 8007d4a:	3a01      	subs	r2, #1
 8007d4c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8007d4e:	6818      	ldr	r0, [r3, #0]
}
 8007d50:	4770      	bx	lr
	...

08007d54 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007d54:	4808      	ldr	r0, [pc, #32]	; (8007d78 <prvPortStartFirstTask+0x24>)
 8007d56:	6800      	ldr	r0, [r0, #0]
 8007d58:	6800      	ldr	r0, [r0, #0]
 8007d5a:	f380 8808 	msr	MSP, r0
 8007d5e:	f04f 0000 	mov.w	r0, #0
 8007d62:	f380 8814 	msr	CONTROL, r0
 8007d66:	b662      	cpsie	i
 8007d68:	b661      	cpsie	f
 8007d6a:	f3bf 8f4f 	dsb	sy
 8007d6e:	f3bf 8f6f 	isb	sy
 8007d72:	df00      	svc	0
 8007d74:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007d76:	0000      	.short	0x0000
 8007d78:	e000ed08 	.word	0xe000ed08

08007d7c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8007d7c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8007d8c <vPortEnableVFP+0x10>
 8007d80:	6801      	ldr	r1, [r0, #0]
 8007d82:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007d86:	6001      	str	r1, [r0, #0]
 8007d88:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8007d8a:	0000      	.short	0x0000
 8007d8c:	e000ed88 	.word	0xe000ed88

08007d90 <prvTaskExitError>:
{
 8007d90:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8007d92:	2300      	movs	r3, #0
 8007d94:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8007d96:	4b0d      	ldr	r3, [pc, #52]	; (8007dcc <prvTaskExitError+0x3c>)
 8007d98:	681b      	ldr	r3, [r3, #0]
 8007d9a:	3301      	adds	r3, #1
 8007d9c:	d008      	beq.n	8007db0 <prvTaskExitError+0x20>
 8007d9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007da2:	f383 8811 	msr	BASEPRI, r3
 8007da6:	f3bf 8f6f 	isb	sy
 8007daa:	f3bf 8f4f 	dsb	sy
 8007dae:	e7fe      	b.n	8007dae <prvTaskExitError+0x1e>
 8007db0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007db4:	f383 8811 	msr	BASEPRI, r3
 8007db8:	f3bf 8f6f 	isb	sy
 8007dbc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8007dc0:	9b01      	ldr	r3, [sp, #4]
 8007dc2:	2b00      	cmp	r3, #0
 8007dc4:	d0fc      	beq.n	8007dc0 <prvTaskExitError+0x30>
}
 8007dc6:	b002      	add	sp, #8
 8007dc8:	4770      	bx	lr
 8007dca:	bf00      	nop
 8007dcc:	2000005c 	.word	0x2000005c

08007dd0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007dd0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007dd4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007dd8:	4b07      	ldr	r3, [pc, #28]	; (8007df8 <pxPortInitialiseStack+0x28>)
 8007dda:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007dde:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007de2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007de6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007dea:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007dee:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007df2:	3844      	subs	r0, #68	; 0x44
 8007df4:	4770      	bx	lr
 8007df6:	bf00      	nop
 8007df8:	08007d91 	.word	0x08007d91
 8007dfc:	00000000 	.word	0x00000000

08007e00 <SVC_Handler>:
	__asm volatile (
 8007e00:	4b07      	ldr	r3, [pc, #28]	; (8007e20 <pxCurrentTCBConst2>)
 8007e02:	6819      	ldr	r1, [r3, #0]
 8007e04:	6808      	ldr	r0, [r1, #0]
 8007e06:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e0a:	f380 8809 	msr	PSP, r0
 8007e0e:	f3bf 8f6f 	isb	sy
 8007e12:	f04f 0000 	mov.w	r0, #0
 8007e16:	f380 8811 	msr	BASEPRI, r0
 8007e1a:	4770      	bx	lr
 8007e1c:	f3af 8000 	nop.w

08007e20 <pxCurrentTCBConst2>:
 8007e20:	2000cd24 	.word	0x2000cd24

08007e24 <vPortEnterCritical>:
 8007e24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e28:	f383 8811 	msr	BASEPRI, r3
 8007e2c:	f3bf 8f6f 	isb	sy
 8007e30:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007e34:	4a0a      	ldr	r2, [pc, #40]	; (8007e60 <vPortEnterCritical+0x3c>)
 8007e36:	6813      	ldr	r3, [r2, #0]
 8007e38:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8007e3a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8007e3c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8007e3e:	d10e      	bne.n	8007e5e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007e40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007e44:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007e48:	b2db      	uxtb	r3, r3
 8007e4a:	b143      	cbz	r3, 8007e5e <vPortEnterCritical+0x3a>
 8007e4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e50:	f383 8811 	msr	BASEPRI, r3
 8007e54:	f3bf 8f6f 	isb	sy
 8007e58:	f3bf 8f4f 	dsb	sy
 8007e5c:	e7fe      	b.n	8007e5c <vPortEnterCritical+0x38>
}
 8007e5e:	4770      	bx	lr
 8007e60:	2000005c 	.word	0x2000005c

08007e64 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007e64:	4a08      	ldr	r2, [pc, #32]	; (8007e88 <vPortExitCritical+0x24>)
 8007e66:	6813      	ldr	r3, [r2, #0]
 8007e68:	b943      	cbnz	r3, 8007e7c <vPortExitCritical+0x18>
 8007e6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e6e:	f383 8811 	msr	BASEPRI, r3
 8007e72:	f3bf 8f6f 	isb	sy
 8007e76:	f3bf 8f4f 	dsb	sy
 8007e7a:	e7fe      	b.n	8007e7a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8007e7c:	3b01      	subs	r3, #1
 8007e7e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8007e80:	b90b      	cbnz	r3, 8007e86 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8007e82:	f383 8811 	msr	BASEPRI, r3
}
 8007e86:	4770      	bx	lr
 8007e88:	2000005c 	.word	0x2000005c
 8007e8c:	00000000 	.word	0x00000000

08007e90 <PendSV_Handler>:
	__asm volatile
 8007e90:	f3ef 8009 	mrs	r0, PSP
 8007e94:	f3bf 8f6f 	isb	sy
 8007e98:	4b15      	ldr	r3, [pc, #84]	; (8007ef0 <pxCurrentTCBConst>)
 8007e9a:	681a      	ldr	r2, [r3, #0]
 8007e9c:	f01e 0f10 	tst.w	lr, #16
 8007ea0:	bf08      	it	eq
 8007ea2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8007ea6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007eaa:	6010      	str	r0, [r2, #0]
 8007eac:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007eb0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007eb4:	f380 8811 	msr	BASEPRI, r0
 8007eb8:	f3bf 8f4f 	dsb	sy
 8007ebc:	f3bf 8f6f 	isb	sy
 8007ec0:	f001 f93e 	bl	8009140 <vTaskSwitchContext>
 8007ec4:	f04f 0000 	mov.w	r0, #0
 8007ec8:	f380 8811 	msr	BASEPRI, r0
 8007ecc:	bc09      	pop	{r0, r3}
 8007ece:	6819      	ldr	r1, [r3, #0]
 8007ed0:	6808      	ldr	r0, [r1, #0]
 8007ed2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ed6:	f01e 0f10 	tst.w	lr, #16
 8007eda:	bf08      	it	eq
 8007edc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007ee0:	f380 8809 	msr	PSP, r0
 8007ee4:	f3bf 8f6f 	isb	sy
 8007ee8:	4770      	bx	lr
 8007eea:	bf00      	nop
 8007eec:	f3af 8000 	nop.w

08007ef0 <pxCurrentTCBConst>:
 8007ef0:	2000cd24 	.word	0x2000cd24

08007ef4 <SysTick_Handler>:
{
 8007ef4:	b508      	push	{r3, lr}
	__asm volatile
 8007ef6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007efa:	f383 8811 	msr	BASEPRI, r3
 8007efe:	f3bf 8f6f 	isb	sy
 8007f02:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007f06:	f000 ffa7 	bl	8008e58 <xTaskIncrementTick>
 8007f0a:	b128      	cbz	r0, 8007f18 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8007f0c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f10:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f14:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007f18:	2300      	movs	r3, #0
 8007f1a:	f383 8811 	msr	BASEPRI, r3
}
 8007f1e:	bd08      	pop	{r3, pc}

08007f20 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007f20:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007f24:	2300      	movs	r3, #0
 8007f26:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007f28:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8007f2a:	4b05      	ldr	r3, [pc, #20]	; (8007f40 <vPortSetupTimerInterrupt+0x20>)
 8007f2c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	fbb3 f3f1 	udiv	r3, r3, r1
 8007f36:	3b01      	subs	r3, #1
 8007f38:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8007f3a:	2307      	movs	r3, #7
 8007f3c:	6113      	str	r3, [r2, #16]
}
 8007f3e:	4770      	bx	lr
 8007f40:	20000050 	.word	0x20000050

08007f44 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007f44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007f48:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007f4a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8007f4e:	4a3a      	ldr	r2, [pc, #232]	; (8008038 <xPortStartScheduler+0xf4>)
 8007f50:	4291      	cmp	r1, r2
 8007f52:	d108      	bne.n	8007f66 <xPortStartScheduler+0x22>
	__asm volatile
 8007f54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f58:	f383 8811 	msr	BASEPRI, r3
 8007f5c:	f3bf 8f6f 	isb	sy
 8007f60:	f3bf 8f4f 	dsb	sy
 8007f64:	e7fe      	b.n	8007f64 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007f66:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8007f6a:	4b34      	ldr	r3, [pc, #208]	; (800803c <xPortStartScheduler+0xf8>)
 8007f6c:	429a      	cmp	r2, r3
 8007f6e:	d108      	bne.n	8007f82 <xPortStartScheduler+0x3e>
 8007f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f74:	f383 8811 	msr	BASEPRI, r3
 8007f78:	f3bf 8f6f 	isb	sy
 8007f7c:	f3bf 8f4f 	dsb	sy
 8007f80:	e7fe      	b.n	8007f80 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8007f82:	4b2f      	ldr	r3, [pc, #188]	; (8008040 <xPortStartScheduler+0xfc>)
 8007f84:	781a      	ldrb	r2, [r3, #0]
 8007f86:	b2d2      	uxtb	r2, r2
 8007f88:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8007f8a:	22ff      	movs	r2, #255	; 0xff
 8007f8c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007f8e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007f90:	4a2c      	ldr	r2, [pc, #176]	; (8008044 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8007f92:	b2db      	uxtb	r3, r3
 8007f94:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8007f98:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007f9c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007fa0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8007fa2:	4a29      	ldr	r2, [pc, #164]	; (8008048 <xPortStartScheduler+0x104>)
 8007fa4:	2307      	movs	r3, #7
 8007fa6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007fa8:	2100      	movs	r1, #0
 8007faa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007fae:	0600      	lsls	r0, r0, #24
 8007fb0:	f103 34ff 	add.w	r4, r3, #4294967295
 8007fb4:	d40c      	bmi.n	8007fd0 <xPortStartScheduler+0x8c>
 8007fb6:	b111      	cbz	r1, 8007fbe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007fb8:	2b03      	cmp	r3, #3
 8007fba:	6013      	str	r3, [r2, #0]
 8007fbc:	d011      	beq.n	8007fe2 <xPortStartScheduler+0x9e>
 8007fbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fc2:	f383 8811 	msr	BASEPRI, r3
 8007fc6:	f3bf 8f6f 	isb	sy
 8007fca:	f3bf 8f4f 	dsb	sy
 8007fce:	e7fe      	b.n	8007fce <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007fd0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007fd4:	005b      	lsls	r3, r3, #1
 8007fd6:	b2db      	uxtb	r3, r3
 8007fd8:	f88d 3003 	strb.w	r3, [sp, #3]
 8007fdc:	2101      	movs	r1, #1
 8007fde:	4623      	mov	r3, r4
 8007fe0:	e7e3      	b.n	8007faa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007fe2:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007fe6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007fe8:	9b01      	ldr	r3, [sp, #4]
 8007fea:	4a15      	ldr	r2, [pc, #84]	; (8008040 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007fec:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007ff0:	b2db      	uxtb	r3, r3
 8007ff2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007ff4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007ff8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007ffc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008000:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008004:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008008:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800800c:	f7ff ff88 	bl	8007f20 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008010:	4b0e      	ldr	r3, [pc, #56]	; (800804c <xPortStartScheduler+0x108>)
 8008012:	2500      	movs	r5, #0
 8008014:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008016:	f7ff feb1 	bl	8007d7c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800801a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800801e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008022:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008026:	f7ff fe95 	bl	8007d54 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800802a:	f001 f889 	bl	8009140 <vTaskSwitchContext>
	prvTaskExitError();
 800802e:	f7ff feaf 	bl	8007d90 <prvTaskExitError>
}
 8008032:	4628      	mov	r0, r5
 8008034:	b003      	add	sp, #12
 8008036:	bd30      	pop	{r4, r5, pc}
 8008038:	410fc271 	.word	0x410fc271
 800803c:	410fc270 	.word	0x410fc270
 8008040:	e000e400 	.word	0xe000e400
 8008044:	2000ccdc 	.word	0x2000ccdc
 8008048:	2000cce0 	.word	0x2000cce0
 800804c:	2000005c 	.word	0x2000005c

08008050 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008050:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008054:	2b0f      	cmp	r3, #15
 8008056:	d90e      	bls.n	8008076 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008058:	4a11      	ldr	r2, [pc, #68]	; (80080a0 <vPortValidateInterruptPriority+0x50>)
 800805a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800805c:	4a11      	ldr	r2, [pc, #68]	; (80080a4 <vPortValidateInterruptPriority+0x54>)
 800805e:	7812      	ldrb	r2, [r2, #0]
 8008060:	429a      	cmp	r2, r3
 8008062:	d908      	bls.n	8008076 <vPortValidateInterruptPriority+0x26>
 8008064:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008068:	f383 8811 	msr	BASEPRI, r3
 800806c:	f3bf 8f6f 	isb	sy
 8008070:	f3bf 8f4f 	dsb	sy
 8008074:	e7fe      	b.n	8008074 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008076:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800807a:	4a0b      	ldr	r2, [pc, #44]	; (80080a8 <vPortValidateInterruptPriority+0x58>)
 800807c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008080:	6812      	ldr	r2, [r2, #0]
 8008082:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008086:	4293      	cmp	r3, r2
 8008088:	d908      	bls.n	800809c <vPortValidateInterruptPriority+0x4c>
 800808a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800808e:	f383 8811 	msr	BASEPRI, r3
 8008092:	f3bf 8f6f 	isb	sy
 8008096:	f3bf 8f4f 	dsb	sy
 800809a:	e7fe      	b.n	800809a <vPortValidateInterruptPriority+0x4a>
	}
 800809c:	4770      	bx	lr
 800809e:	bf00      	nop
 80080a0:	e000e3f0 	.word	0xe000e3f0
 80080a4:	2000ccdc 	.word	0x2000ccdc
 80080a8:	2000cce0 	.word	0x2000cce0

080080ac <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80080ac:	b510      	push	{r4, lr}
 80080ae:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80080b0:	f7ff feb8 	bl	8007e24 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80080b4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80080b6:	f7ff fed5 	bl	8007e64 <vPortExitCritical>

	return xReturn;
}
 80080ba:	fab4 f084 	clz	r0, r4
 80080be:	0940      	lsrs	r0, r0, #5
 80080c0:	bd10      	pop	{r4, pc}

080080c2 <prvCopyDataToQueue>:
{
 80080c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080c4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80080c6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80080c8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80080ca:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80080cc:	b952      	cbnz	r2, 80080e4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80080ce:	6807      	ldr	r7, [r0, #0]
 80080d0:	bb47      	cbnz	r7, 8008124 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80080d2:	6880      	ldr	r0, [r0, #8]
 80080d4:	f001 f994 	bl	8009400 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80080d8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80080da:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80080dc:	3601      	adds	r6, #1
 80080de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80080e0:	4628      	mov	r0, r5
 80080e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80080e4:	b965      	cbnz	r5, 8008100 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80080e6:	6840      	ldr	r0, [r0, #4]
 80080e8:	f015 fffc 	bl	801e0e4 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80080ec:	6863      	ldr	r3, [r4, #4]
 80080ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80080f0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80080f2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80080f4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80080f6:	4293      	cmp	r3, r2
 80080f8:	d3f0      	bcc.n	80080dc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80080fa:	6823      	ldr	r3, [r4, #0]
 80080fc:	6063      	str	r3, [r4, #4]
 80080fe:	e7ed      	b.n	80080dc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008100:	68c0      	ldr	r0, [r0, #12]
 8008102:	f015 ffef 	bl	801e0e4 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008106:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008108:	68e3      	ldr	r3, [r4, #12]
 800810a:	4251      	negs	r1, r2
 800810c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800810e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008110:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008112:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008114:	bf3e      	ittt	cc
 8008116:	68a3      	ldrcc	r3, [r4, #8]
 8008118:	185b      	addcc	r3, r3, r1
 800811a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800811c:	2d02      	cmp	r5, #2
 800811e:	d101      	bne.n	8008124 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008120:	b116      	cbz	r6, 8008128 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008122:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008124:	2500      	movs	r5, #0
 8008126:	e7d9      	b.n	80080dc <prvCopyDataToQueue+0x1a>
 8008128:	4635      	mov	r5, r6
 800812a:	e7d7      	b.n	80080dc <prvCopyDataToQueue+0x1a>

0800812c <prvCopyDataFromQueue>:
{
 800812c:	4603      	mov	r3, r0
 800812e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008130:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008132:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008134:	b16a      	cbz	r2, 8008152 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008136:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008138:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800813a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800813c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800813e:	bf28      	it	cs
 8008140:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008142:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008144:	bf28      	it	cs
 8008146:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008148:	68d9      	ldr	r1, [r3, #12]
}
 800814a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800814e:	f015 bfc9 	b.w	801e0e4 <memcpy>
}
 8008152:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008156:	4770      	bx	lr

08008158 <prvUnlockQueue>:
{
 8008158:	b570      	push	{r4, r5, r6, lr}
 800815a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800815c:	f7ff fe62 	bl	8007e24 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008160:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008164:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008168:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800816a:	2d00      	cmp	r5, #0
 800816c:	dc14      	bgt.n	8008198 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800816e:	23ff      	movs	r3, #255	; 0xff
 8008170:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008174:	f7ff fe76 	bl	8007e64 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008178:	f7ff fe54 	bl	8007e24 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800817c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008180:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008184:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008186:	2d00      	cmp	r5, #0
 8008188:	dc12      	bgt.n	80081b0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800818a:	23ff      	movs	r3, #255	; 0xff
 800818c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008190:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008194:	f7ff be66 	b.w	8007e64 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008198:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800819a:	2b00      	cmp	r3, #0
 800819c:	d0e7      	beq.n	800816e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800819e:	4630      	mov	r0, r6
 80081a0:	f001 f84a 	bl	8009238 <xTaskRemoveFromEventList>
 80081a4:	b108      	cbz	r0, 80081aa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80081a6:	f001 f8d3 	bl	8009350 <vTaskMissedYield>
			--cTxLock;
 80081aa:	3d01      	subs	r5, #1
 80081ac:	b26d      	sxtb	r5, r5
 80081ae:	e7dc      	b.n	800816a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80081b0:	6923      	ldr	r3, [r4, #16]
 80081b2:	2b00      	cmp	r3, #0
 80081b4:	d0e9      	beq.n	800818a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80081b6:	4630      	mov	r0, r6
 80081b8:	f001 f83e 	bl	8009238 <xTaskRemoveFromEventList>
 80081bc:	b108      	cbz	r0, 80081c2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80081be:	f001 f8c7 	bl	8009350 <vTaskMissedYield>
				--cRxLock;
 80081c2:	3d01      	subs	r5, #1
 80081c4:	b26d      	sxtb	r5, r5
 80081c6:	e7de      	b.n	8008186 <prvUnlockQueue+0x2e>

080081c8 <xQueueGenericReset>:
{
 80081c8:	b538      	push	{r3, r4, r5, lr}
 80081ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80081cc:	4604      	mov	r4, r0
 80081ce:	b940      	cbnz	r0, 80081e2 <xQueueGenericReset+0x1a>
 80081d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081d4:	f383 8811 	msr	BASEPRI, r3
 80081d8:	f3bf 8f6f 	isb	sy
 80081dc:	f3bf 8f4f 	dsb	sy
 80081e0:	e7fe      	b.n	80081e0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80081e2:	f7ff fe1f 	bl	8007e24 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081e6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80081ea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80081ec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081ee:	434b      	muls	r3, r1
 80081f0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081f2:	1a5b      	subs	r3, r3, r1
 80081f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081f6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80081f8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80081fa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80081fc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80081fe:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008200:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008204:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008208:	b9a5      	cbnz	r5, 8008234 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800820a:	6923      	ldr	r3, [r4, #16]
 800820c:	b173      	cbz	r3, 800822c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800820e:	f104 0010 	add.w	r0, r4, #16
 8008212:	f001 f811 	bl	8009238 <xTaskRemoveFromEventList>
 8008216:	b148      	cbz	r0, 800822c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008218:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800821c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008220:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008224:	f3bf 8f4f 	dsb	sy
 8008228:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800822c:	f7ff fe1a 	bl	8007e64 <vPortExitCritical>
}
 8008230:	2001      	movs	r0, #1
 8008232:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8008234:	f104 0010 	add.w	r0, r4, #16
 8008238:	f7ff fd4a 	bl	8007cd0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800823c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008240:	f7ff fd46 	bl	8007cd0 <vListInitialise>
 8008244:	e7f2      	b.n	800822c <xQueueGenericReset+0x64>

08008246 <xQueueGenericCreateStatic>:
	{
 8008246:	b513      	push	{r0, r1, r4, lr}
 8008248:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800824a:	b940      	cbnz	r0, 800825e <xQueueGenericCreateStatic+0x18>
 800824c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008250:	f383 8811 	msr	BASEPRI, r3
 8008254:	f3bf 8f6f 	isb	sy
 8008258:	f3bf 8f4f 	dsb	sy
 800825c:	e7fe      	b.n	800825c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800825e:	b943      	cbnz	r3, 8008272 <xQueueGenericCreateStatic+0x2c>
 8008260:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008264:	f383 8811 	msr	BASEPRI, r3
 8008268:	f3bf 8f6f 	isb	sy
 800826c:	f3bf 8f4f 	dsb	sy
 8008270:	e7fe      	b.n	8008270 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8008272:	b14a      	cbz	r2, 8008288 <xQueueGenericCreateStatic+0x42>
 8008274:	b991      	cbnz	r1, 800829c <xQueueGenericCreateStatic+0x56>
 8008276:	f04f 0350 	mov.w	r3, #80	; 0x50
 800827a:	f383 8811 	msr	BASEPRI, r3
 800827e:	f3bf 8f6f 	isb	sy
 8008282:	f3bf 8f4f 	dsb	sy
 8008286:	e7fe      	b.n	8008286 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8008288:	b141      	cbz	r1, 800829c <xQueueGenericCreateStatic+0x56>
 800828a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800828e:	f383 8811 	msr	BASEPRI, r3
 8008292:	f3bf 8f6f 	isb	sy
 8008296:	f3bf 8f4f 	dsb	sy
 800829a:	e7fe      	b.n	800829a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800829c:	2350      	movs	r3, #80	; 0x50
 800829e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80082a0:	9b01      	ldr	r3, [sp, #4]
 80082a2:	2b50      	cmp	r3, #80	; 0x50
 80082a4:	d008      	beq.n	80082b8 <xQueueGenericCreateStatic+0x72>
 80082a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082aa:	f383 8811 	msr	BASEPRI, r3
 80082ae:	f3bf 8f6f 	isb	sy
 80082b2:	f3bf 8f4f 	dsb	sy
 80082b6:	e7fe      	b.n	80082b6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80082b8:	2900      	cmp	r1, #0
 80082ba:	bf08      	it	eq
 80082bc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80082be:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80082c0:	6022      	str	r2, [r4, #0]
 80082c2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80082c4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80082c8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80082cc:	4619      	mov	r1, r3
 80082ce:	4620      	mov	r0, r4
 80082d0:	f7ff ff7a 	bl	80081c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80082d4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80082d8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80082dc:	4620      	mov	r0, r4
 80082de:	b002      	add	sp, #8
 80082e0:	bd10      	pop	{r4, pc}

080082e2 <xQueueGenericCreate>:
	{
 80082e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80082e4:	460d      	mov	r5, r1
 80082e6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80082e8:	4606      	mov	r6, r0
 80082ea:	b940      	cbnz	r0, 80082fe <xQueueGenericCreate+0x1c>
 80082ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80082f0:	f383 8811 	msr	BASEPRI, r3
 80082f4:	f3bf 8f6f 	isb	sy
 80082f8:	f3bf 8f4f 	dsb	sy
 80082fc:	e7fe      	b.n	80082fc <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80082fe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8008300:	3050      	adds	r0, #80	; 0x50
 8008302:	f7ff fc1b 	bl	8007b3c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8008306:	4604      	mov	r4, r0
 8008308:	b170      	cbz	r0, 8008328 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800830a:	2300      	movs	r3, #0
 800830c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8008310:	b165      	cbz	r5, 800832c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008312:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8008316:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800831a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800831c:	2101      	movs	r1, #1
 800831e:	4620      	mov	r0, r4
 8008320:	f7ff ff52 	bl	80081c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8008324:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8008328:	4620      	mov	r0, r4
 800832a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800832c:	4603      	mov	r3, r0
 800832e:	e7f2      	b.n	8008316 <xQueueGenericCreate+0x34>

08008330 <xQueueCreateCountingSemaphoreStatic>:
	{
 8008330:	b513      	push	{r0, r1, r4, lr}
 8008332:	4613      	mov	r3, r2
 8008334:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008336:	b940      	cbnz	r0, 800834a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8008338:	f04f 0350 	mov.w	r3, #80	; 0x50
 800833c:	f383 8811 	msr	BASEPRI, r3
 8008340:	f3bf 8f6f 	isb	sy
 8008344:	f3bf 8f4f 	dsb	sy
 8008348:	e7fe      	b.n	8008348 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800834a:	4288      	cmp	r0, r1
 800834c:	d208      	bcs.n	8008360 <xQueueCreateCountingSemaphoreStatic+0x30>
 800834e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008352:	f383 8811 	msr	BASEPRI, r3
 8008356:	f3bf 8f6f 	isb	sy
 800835a:	f3bf 8f4f 	dsb	sy
 800835e:	e7fe      	b.n	800835e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8008360:	2202      	movs	r2, #2
 8008362:	9200      	str	r2, [sp, #0]
 8008364:	2200      	movs	r2, #0
 8008366:	4611      	mov	r1, r2
 8008368:	f7ff ff6d 	bl	8008246 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800836c:	b100      	cbz	r0, 8008370 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800836e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8008370:	b002      	add	sp, #8
 8008372:	bd10      	pop	{r4, pc}

08008374 <xQueueCreateCountingSemaphore>:
	{
 8008374:	b510      	push	{r4, lr}
 8008376:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8008378:	b940      	cbnz	r0, 800838c <xQueueCreateCountingSemaphore+0x18>
 800837a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800837e:	f383 8811 	msr	BASEPRI, r3
 8008382:	f3bf 8f6f 	isb	sy
 8008386:	f3bf 8f4f 	dsb	sy
 800838a:	e7fe      	b.n	800838a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800838c:	4288      	cmp	r0, r1
 800838e:	d208      	bcs.n	80083a2 <xQueueCreateCountingSemaphore+0x2e>
 8008390:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008394:	f383 8811 	msr	BASEPRI, r3
 8008398:	f3bf 8f6f 	isb	sy
 800839c:	f3bf 8f4f 	dsb	sy
 80083a0:	e7fe      	b.n	80083a0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80083a2:	2202      	movs	r2, #2
 80083a4:	2100      	movs	r1, #0
 80083a6:	f7ff ff9c 	bl	80082e2 <xQueueGenericCreate>
		if( xHandle != NULL )
 80083aa:	b100      	cbz	r0, 80083ae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80083ac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80083ae:	bd10      	pop	{r4, pc}

080083b0 <xQueueGenericSend>:
{
 80083b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80083b4:	b085      	sub	sp, #20
 80083b6:	4688      	mov	r8, r1
 80083b8:	9201      	str	r2, [sp, #4]
 80083ba:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80083bc:	4604      	mov	r4, r0
 80083be:	b940      	cbnz	r0, 80083d2 <xQueueGenericSend+0x22>
 80083c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083c4:	f383 8811 	msr	BASEPRI, r3
 80083c8:	f3bf 8f6f 	isb	sy
 80083cc:	f3bf 8f4f 	dsb	sy
 80083d0:	e7fe      	b.n	80083d0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80083d2:	b951      	cbnz	r1, 80083ea <xQueueGenericSend+0x3a>
 80083d4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80083d6:	b143      	cbz	r3, 80083ea <xQueueGenericSend+0x3a>
 80083d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083dc:	f383 8811 	msr	BASEPRI, r3
 80083e0:	f3bf 8f6f 	isb	sy
 80083e4:	f3bf 8f4f 	dsb	sy
 80083e8:	e7fe      	b.n	80083e8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80083ea:	2f02      	cmp	r7, #2
 80083ec:	d10b      	bne.n	8008406 <xQueueGenericSend+0x56>
 80083ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80083f0:	2b01      	cmp	r3, #1
 80083f2:	d008      	beq.n	8008406 <xQueueGenericSend+0x56>
 80083f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083f8:	f383 8811 	msr	BASEPRI, r3
 80083fc:	f3bf 8f6f 	isb	sy
 8008400:	f3bf 8f4f 	dsb	sy
 8008404:	e7fe      	b.n	8008404 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8008406:	f000 ffa9 	bl	800935c <xTaskGetSchedulerState>
 800840a:	4606      	mov	r6, r0
 800840c:	b950      	cbnz	r0, 8008424 <xQueueGenericSend+0x74>
 800840e:	9b01      	ldr	r3, [sp, #4]
 8008410:	b14b      	cbz	r3, 8008426 <xQueueGenericSend+0x76>
 8008412:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008416:	f383 8811 	msr	BASEPRI, r3
 800841a:	f3bf 8f6f 	isb	sy
 800841e:	f3bf 8f4f 	dsb	sy
 8008422:	e7fe      	b.n	8008422 <xQueueGenericSend+0x72>
 8008424:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8008426:	f04f 0900 	mov.w	r9, #0
 800842a:	e037      	b.n	800849c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800842c:	9d01      	ldr	r5, [sp, #4]
 800842e:	b91d      	cbnz	r5, 8008438 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8008430:	f7ff fd18 	bl	8007e64 <vPortExitCritical>
			return errQUEUE_FULL;
 8008434:	2000      	movs	r0, #0
 8008436:	e052      	b.n	80084de <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8008438:	b916      	cbnz	r6, 8008440 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800843a:	a802      	add	r0, sp, #8
 800843c:	f000 ff40 	bl	80092c0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8008440:	f7ff fd10 	bl	8007e64 <vPortExitCritical>
		vTaskSuspendAll();
 8008444:	f000 fcfa 	bl	8008e3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008448:	f7ff fcec 	bl	8007e24 <vPortEnterCritical>
 800844c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008450:	2bff      	cmp	r3, #255	; 0xff
 8008452:	bf08      	it	eq
 8008454:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8008458:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800845c:	2bff      	cmp	r3, #255	; 0xff
 800845e:	bf08      	it	eq
 8008460:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8008464:	f7ff fcfe 	bl	8007e64 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008468:	a901      	add	r1, sp, #4
 800846a:	a802      	add	r0, sp, #8
 800846c:	f000 ff34 	bl	80092d8 <xTaskCheckForTimeOut>
 8008470:	2800      	cmp	r0, #0
 8008472:	d14a      	bne.n	800850a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008474:	f7ff fcd6 	bl	8007e24 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8008478:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800847a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800847c:	429a      	cmp	r2, r3
 800847e:	d131      	bne.n	80084e4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008480:	f7ff fcf0 	bl	8007e64 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8008484:	9901      	ldr	r1, [sp, #4]
 8008486:	f104 0010 	add.w	r0, r4, #16
 800848a:	f000 fe9d 	bl	80091c8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800848e:	4620      	mov	r0, r4
 8008490:	f7ff fe62 	bl	8008158 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8008494:	f000 fd76 	bl	8008f84 <xTaskResumeAll>
 8008498:	b360      	cbz	r0, 80084f4 <xQueueGenericSend+0x144>
 800849a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800849c:	f7ff fcc2 	bl	8007e24 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80084a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80084a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80084a4:	429a      	cmp	r2, r3
 80084a6:	d301      	bcc.n	80084ac <xQueueGenericSend+0xfc>
 80084a8:	2f02      	cmp	r7, #2
 80084aa:	d1bf      	bne.n	800842c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80084ac:	463a      	mov	r2, r7
 80084ae:	4641      	mov	r1, r8
 80084b0:	4620      	mov	r0, r4
 80084b2:	f7ff fe06 	bl	80080c2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80084b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80084b8:	b11b      	cbz	r3, 80084c2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80084ba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80084be:	f000 febb 	bl	8009238 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80084c2:	b148      	cbz	r0, 80084d8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80084c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80084cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80084d0:	f3bf 8f4f 	dsb	sy
 80084d4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80084d8:	f7ff fcc4 	bl	8007e64 <vPortExitCritical>
				return pdPASS;
 80084dc:	2001      	movs	r0, #1
}
 80084de:	b005      	add	sp, #20
 80084e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80084e4:	f7ff fcbe 	bl	8007e64 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80084e8:	4620      	mov	r0, r4
 80084ea:	f7ff fe35 	bl	8008158 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80084ee:	f000 fd49 	bl	8008f84 <xTaskResumeAll>
 80084f2:	e7d2      	b.n	800849a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80084f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80084f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80084fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008500:	f3bf 8f4f 	dsb	sy
 8008504:	f3bf 8f6f 	isb	sy
 8008508:	e7c7      	b.n	800849a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800850a:	4620      	mov	r0, r4
 800850c:	f7ff fe24 	bl	8008158 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008510:	f000 fd38 	bl	8008f84 <xTaskResumeAll>
 8008514:	e78e      	b.n	8008434 <xQueueGenericSend+0x84>

08008516 <xQueueGenericSendFromISR>:
{
 8008516:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800851a:	4689      	mov	r9, r1
 800851c:	4690      	mov	r8, r2
 800851e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8008520:	4604      	mov	r4, r0
 8008522:	b940      	cbnz	r0, 8008536 <xQueueGenericSendFromISR+0x20>
 8008524:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008528:	f383 8811 	msr	BASEPRI, r3
 800852c:	f3bf 8f6f 	isb	sy
 8008530:	f3bf 8f4f 	dsb	sy
 8008534:	e7fe      	b.n	8008534 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008536:	b951      	cbnz	r1, 800854e <xQueueGenericSendFromISR+0x38>
 8008538:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800853a:	b143      	cbz	r3, 800854e <xQueueGenericSendFromISR+0x38>
 800853c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008540:	f383 8811 	msr	BASEPRI, r3
 8008544:	f3bf 8f6f 	isb	sy
 8008548:	f3bf 8f4f 	dsb	sy
 800854c:	e7fe      	b.n	800854c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800854e:	2f02      	cmp	r7, #2
 8008550:	d10b      	bne.n	800856a <xQueueGenericSendFromISR+0x54>
 8008552:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008554:	2b01      	cmp	r3, #1
 8008556:	d008      	beq.n	800856a <xQueueGenericSendFromISR+0x54>
 8008558:	f04f 0350 	mov.w	r3, #80	; 0x50
 800855c:	f383 8811 	msr	BASEPRI, r3
 8008560:	f3bf 8f6f 	isb	sy
 8008564:	f3bf 8f4f 	dsb	sy
 8008568:	e7fe      	b.n	8008568 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800856a:	f7ff fd71 	bl	8008050 <vPortValidateInterruptPriority>
	__asm volatile
 800856e:	f3ef 8611 	mrs	r6, BASEPRI
 8008572:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008576:	f383 8811 	msr	BASEPRI, r3
 800857a:	f3bf 8f6f 	isb	sy
 800857e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8008582:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8008584:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008586:	429a      	cmp	r2, r3
 8008588:	d301      	bcc.n	800858e <xQueueGenericSendFromISR+0x78>
 800858a:	2f02      	cmp	r7, #2
 800858c:	d122      	bne.n	80085d4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800858e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008592:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8008594:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8008596:	4649      	mov	r1, r9
 8008598:	4620      	mov	r0, r4
 800859a:	f7ff fd92 	bl	80080c2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800859e:	1c6b      	adds	r3, r5, #1
 80085a0:	d113      	bne.n	80085ca <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80085a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80085a4:	b90b      	cbnz	r3, 80085aa <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80085a6:	2001      	movs	r0, #1
 80085a8:	e00b      	b.n	80085c2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80085aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80085ae:	f000 fe43 	bl	8009238 <xTaskRemoveFromEventList>
 80085b2:	2800      	cmp	r0, #0
 80085b4:	d0f7      	beq.n	80085a6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80085b6:	f1b8 0f00 	cmp.w	r8, #0
 80085ba:	d0f4      	beq.n	80085a6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80085bc:	2001      	movs	r0, #1
 80085be:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80085c2:	f386 8811 	msr	BASEPRI, r6
}
 80085c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80085ca:	3501      	adds	r5, #1
 80085cc:	b26d      	sxtb	r5, r5
 80085ce:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80085d2:	e7e8      	b.n	80085a6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80085d4:	2000      	movs	r0, #0
 80085d6:	e7f4      	b.n	80085c2 <xQueueGenericSendFromISR+0xac>

080085d8 <xQueueGiveFromISR>:
{
 80085d8:	b570      	push	{r4, r5, r6, lr}
 80085da:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80085dc:	4604      	mov	r4, r0
 80085de:	b940      	cbnz	r0, 80085f2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80085e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085e4:	f383 8811 	msr	BASEPRI, r3
 80085e8:	f3bf 8f6f 	isb	sy
 80085ec:	f3bf 8f4f 	dsb	sy
 80085f0:	e7fe      	b.n	80085f0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80085f2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80085f4:	b143      	cbz	r3, 8008608 <xQueueGiveFromISR+0x30>
 80085f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085fa:	f383 8811 	msr	BASEPRI, r3
 80085fe:	f3bf 8f6f 	isb	sy
 8008602:	f3bf 8f4f 	dsb	sy
 8008606:	e7fe      	b.n	8008606 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8008608:	6803      	ldr	r3, [r0, #0]
 800860a:	b953      	cbnz	r3, 8008622 <xQueueGiveFromISR+0x4a>
 800860c:	6883      	ldr	r3, [r0, #8]
 800860e:	b143      	cbz	r3, 8008622 <xQueueGiveFromISR+0x4a>
 8008610:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008614:	f383 8811 	msr	BASEPRI, r3
 8008618:	f3bf 8f6f 	isb	sy
 800861c:	f3bf 8f4f 	dsb	sy
 8008620:	e7fe      	b.n	8008620 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008622:	f7ff fd15 	bl	8008050 <vPortValidateInterruptPriority>
	__asm volatile
 8008626:	f3ef 8611 	mrs	r6, BASEPRI
 800862a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800862e:	f383 8811 	msr	BASEPRI, r3
 8008632:	f3bf 8f6f 	isb	sy
 8008636:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800863a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800863c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800863e:	4293      	cmp	r3, r2
 8008640:	d91c      	bls.n	800867c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8008642:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008646:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8008648:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800864a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800864c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800864e:	d110      	bne.n	8008672 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008650:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008652:	b90b      	cbnz	r3, 8008658 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8008654:	2001      	movs	r0, #1
 8008656:	e009      	b.n	800866c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008658:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800865c:	f000 fdec 	bl	8009238 <xTaskRemoveFromEventList>
 8008660:	2800      	cmp	r0, #0
 8008662:	d0f7      	beq.n	8008654 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8008664:	2d00      	cmp	r5, #0
 8008666:	d0f5      	beq.n	8008654 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8008668:	2001      	movs	r0, #1
 800866a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800866c:	f386 8811 	msr	BASEPRI, r6
}
 8008670:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8008672:	3301      	adds	r3, #1
 8008674:	b25b      	sxtb	r3, r3
 8008676:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800867a:	e7eb      	b.n	8008654 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800867c:	2000      	movs	r0, #0
 800867e:	e7f5      	b.n	800866c <xQueueGiveFromISR+0x94>

08008680 <xQueueReceive>:
{
 8008680:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008684:	460f      	mov	r7, r1
 8008686:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8008688:	4604      	mov	r4, r0
 800868a:	b940      	cbnz	r0, 800869e <xQueueReceive+0x1e>
	__asm volatile
 800868c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008690:	f383 8811 	msr	BASEPRI, r3
 8008694:	f3bf 8f6f 	isb	sy
 8008698:	f3bf 8f4f 	dsb	sy
 800869c:	e7fe      	b.n	800869c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800869e:	b951      	cbnz	r1, 80086b6 <xQueueReceive+0x36>
 80086a0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80086a2:	b143      	cbz	r3, 80086b6 <xQueueReceive+0x36>
 80086a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086a8:	f383 8811 	msr	BASEPRI, r3
 80086ac:	f3bf 8f6f 	isb	sy
 80086b0:	f3bf 8f4f 	dsb	sy
 80086b4:	e7fe      	b.n	80086b4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80086b6:	f000 fe51 	bl	800935c <xTaskGetSchedulerState>
 80086ba:	4606      	mov	r6, r0
 80086bc:	b950      	cbnz	r0, 80086d4 <xQueueReceive+0x54>
 80086be:	9b01      	ldr	r3, [sp, #4]
 80086c0:	b14b      	cbz	r3, 80086d6 <xQueueReceive+0x56>
 80086c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086c6:	f383 8811 	msr	BASEPRI, r3
 80086ca:	f3bf 8f6f 	isb	sy
 80086ce:	f3bf 8f4f 	dsb	sy
 80086d2:	e7fe      	b.n	80086d2 <xQueueReceive+0x52>
 80086d4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80086d6:	f04f 0800 	mov.w	r8, #0
 80086da:	e03d      	b.n	8008758 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80086dc:	9d01      	ldr	r5, [sp, #4]
 80086de:	b91d      	cbnz	r5, 80086e8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 80086e0:	f7ff fbc0 	bl	8007e64 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80086e4:	2000      	movs	r0, #0
 80086e6:	e056      	b.n	8008796 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 80086e8:	b916      	cbnz	r6, 80086f0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80086ea:	a802      	add	r0, sp, #8
 80086ec:	f000 fde8 	bl	80092c0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80086f0:	f7ff fbb8 	bl	8007e64 <vPortExitCritical>
		vTaskSuspendAll();
 80086f4:	f000 fba2 	bl	8008e3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80086f8:	f7ff fb94 	bl	8007e24 <vPortEnterCritical>
 80086fc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008700:	2bff      	cmp	r3, #255	; 0xff
 8008702:	bf08      	it	eq
 8008704:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8008708:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800870c:	2bff      	cmp	r3, #255	; 0xff
 800870e:	bf08      	it	eq
 8008710:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8008714:	f7ff fba6 	bl	8007e64 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008718:	a901      	add	r1, sp, #4
 800871a:	a802      	add	r0, sp, #8
 800871c:	f000 fddc 	bl	80092d8 <xTaskCheckForTimeOut>
 8008720:	2800      	cmp	r0, #0
 8008722:	d141      	bne.n	80087a8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008724:	4620      	mov	r0, r4
 8008726:	f7ff fcc1 	bl	80080ac <prvIsQueueEmpty>
 800872a:	b3b8      	cbz	r0, 800879c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800872c:	9901      	ldr	r1, [sp, #4]
 800872e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008732:	f000 fd49 	bl	80091c8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8008736:	4620      	mov	r0, r4
 8008738:	f7ff fd0e 	bl	8008158 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800873c:	f000 fc22 	bl	8008f84 <xTaskResumeAll>
 8008740:	b948      	cbnz	r0, 8008756 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8008742:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008746:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800874a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800874e:	f3bf 8f4f 	dsb	sy
 8008752:	f3bf 8f6f 	isb	sy
 8008756:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8008758:	f7ff fb64 	bl	8007e24 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800875c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800875e:	2d00      	cmp	r5, #0
 8008760:	d0bc      	beq.n	80086dc <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008762:	4639      	mov	r1, r7
 8008764:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8008766:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8008768:	f7ff fce0 	bl	800812c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800876c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800876e:	6923      	ldr	r3, [r4, #16]
 8008770:	b173      	cbz	r3, 8008790 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008772:	f104 0010 	add.w	r0, r4, #16
 8008776:	f000 fd5f 	bl	8009238 <xTaskRemoveFromEventList>
 800877a:	b148      	cbz	r0, 8008790 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800877c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008780:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008784:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008788:	f3bf 8f4f 	dsb	sy
 800878c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8008790:	f7ff fb68 	bl	8007e64 <vPortExitCritical>
				return pdPASS;
 8008794:	2001      	movs	r0, #1
}
 8008796:	b004      	add	sp, #16
 8008798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800879c:	4620      	mov	r0, r4
 800879e:	f7ff fcdb 	bl	8008158 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80087a2:	f000 fbef 	bl	8008f84 <xTaskResumeAll>
 80087a6:	e7d6      	b.n	8008756 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80087a8:	4620      	mov	r0, r4
 80087aa:	f7ff fcd5 	bl	8008158 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80087ae:	f000 fbe9 	bl	8008f84 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80087b2:	4620      	mov	r0, r4
 80087b4:	f7ff fc7a 	bl	80080ac <prvIsQueueEmpty>
 80087b8:	2800      	cmp	r0, #0
 80087ba:	d0cc      	beq.n	8008756 <xQueueReceive+0xd6>
 80087bc:	e792      	b.n	80086e4 <xQueueReceive+0x64>

080087be <xQueueSemaphoreTake>:
{
 80087be:	b5f0      	push	{r4, r5, r6, r7, lr}
 80087c0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80087c2:	4604      	mov	r4, r0
{
 80087c4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80087c6:	b940      	cbnz	r0, 80087da <xQueueSemaphoreTake+0x1c>
 80087c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087cc:	f383 8811 	msr	BASEPRI, r3
 80087d0:	f3bf 8f6f 	isb	sy
 80087d4:	f3bf 8f4f 	dsb	sy
 80087d8:	e7fe      	b.n	80087d8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80087da:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80087dc:	b145      	cbz	r5, 80087f0 <xQueueSemaphoreTake+0x32>
 80087de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087e2:	f383 8811 	msr	BASEPRI, r3
 80087e6:	f3bf 8f6f 	isb	sy
 80087ea:	f3bf 8f4f 	dsb	sy
 80087ee:	e7fe      	b.n	80087ee <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80087f0:	f000 fdb4 	bl	800935c <xTaskGetSchedulerState>
 80087f4:	4606      	mov	r6, r0
 80087f6:	b950      	cbnz	r0, 800880e <xQueueSemaphoreTake+0x50>
 80087f8:	9b01      	ldr	r3, [sp, #4]
 80087fa:	b15b      	cbz	r3, 8008814 <xQueueSemaphoreTake+0x56>
 80087fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008800:	f383 8811 	msr	BASEPRI, r3
 8008804:	f3bf 8f6f 	isb	sy
 8008808:	f3bf 8f4f 	dsb	sy
 800880c:	e7fe      	b.n	800880c <xQueueSemaphoreTake+0x4e>
 800880e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8008810:	2700      	movs	r7, #0
 8008812:	e053      	b.n	80088bc <xQueueSemaphoreTake+0xfe>
 8008814:	4605      	mov	r5, r0
 8008816:	e7fb      	b.n	8008810 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8008818:	9b01      	ldr	r3, [sp, #4]
 800881a:	b963      	cbnz	r3, 8008836 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800881c:	b145      	cbz	r5, 8008830 <xQueueSemaphoreTake+0x72>
 800881e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008822:	f383 8811 	msr	BASEPRI, r3
 8008826:	f3bf 8f6f 	isb	sy
 800882a:	f3bf 8f4f 	dsb	sy
 800882e:	e7fe      	b.n	800882e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8008830:	f7ff fb18 	bl	8007e64 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8008834:	e062      	b.n	80088fc <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8008836:	b916      	cbnz	r6, 800883e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8008838:	a802      	add	r0, sp, #8
 800883a:	f000 fd41 	bl	80092c0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800883e:	f7ff fb11 	bl	8007e64 <vPortExitCritical>
		vTaskSuspendAll();
 8008842:	f000 fafb 	bl	8008e3c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8008846:	f7ff faed 	bl	8007e24 <vPortEnterCritical>
 800884a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800884e:	2bff      	cmp	r3, #255	; 0xff
 8008850:	bf08      	it	eq
 8008852:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8008856:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800885a:	2bff      	cmp	r3, #255	; 0xff
 800885c:	bf08      	it	eq
 800885e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8008862:	f7ff faff 	bl	8007e64 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8008866:	a901      	add	r1, sp, #4
 8008868:	a802      	add	r0, sp, #8
 800886a:	f000 fd35 	bl	80092d8 <xTaskCheckForTimeOut>
 800886e:	2800      	cmp	r0, #0
 8008870:	d14d      	bne.n	800890e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008872:	4620      	mov	r0, r4
 8008874:	f7ff fc1a 	bl	80080ac <prvIsQueueEmpty>
 8008878:	2800      	cmp	r0, #0
 800887a:	d042      	beq.n	8008902 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800887c:	6823      	ldr	r3, [r4, #0]
 800887e:	b93b      	cbnz	r3, 8008890 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8008880:	f7ff fad0 	bl	8007e24 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008884:	68a0      	ldr	r0, [r4, #8]
 8008886:	f000 fd79 	bl	800937c <xTaskPriorityInherit>
 800888a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800888c:	f7ff faea 	bl	8007e64 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8008890:	9901      	ldr	r1, [sp, #4]
 8008892:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008896:	f000 fc97 	bl	80091c8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800889a:	4620      	mov	r0, r4
 800889c:	f7ff fc5c 	bl	8008158 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80088a0:	f000 fb70 	bl	8008f84 <xTaskResumeAll>
 80088a4:	b948      	cbnz	r0, 80088ba <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80088a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088aa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088ae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088b2:	f3bf 8f4f 	dsb	sy
 80088b6:	f3bf 8f6f 	isb	sy
 80088ba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80088bc:	f7ff fab2 	bl	8007e24 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80088c0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80088c2:	2b00      	cmp	r3, #0
 80088c4:	d0a8      	beq.n	8008818 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80088c6:	3b01      	subs	r3, #1
 80088c8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80088ca:	6823      	ldr	r3, [r4, #0]
 80088cc:	b913      	cbnz	r3, 80088d4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80088ce:	f000 fe2d 	bl	800952c <pvTaskIncrementMutexHeldCount>
 80088d2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80088d4:	6923      	ldr	r3, [r4, #16]
 80088d6:	b173      	cbz	r3, 80088f6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80088d8:	f104 0010 	add.w	r0, r4, #16
 80088dc:	f000 fcac 	bl	8009238 <xTaskRemoveFromEventList>
 80088e0:	b148      	cbz	r0, 80088f6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80088e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088ee:	f3bf 8f4f 	dsb	sy
 80088f2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80088f6:	f7ff fab5 	bl	8007e64 <vPortExitCritical>
				return pdPASS;
 80088fa:	2501      	movs	r5, #1
}
 80088fc:	4628      	mov	r0, r5
 80088fe:	b005      	add	sp, #20
 8008900:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8008902:	4620      	mov	r0, r4
 8008904:	f7ff fc28 	bl	8008158 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8008908:	f000 fb3c 	bl	8008f84 <xTaskResumeAll>
 800890c:	e7d5      	b.n	80088ba <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800890e:	4620      	mov	r0, r4
 8008910:	f7ff fc22 	bl	8008158 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8008914:	f000 fb36 	bl	8008f84 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8008918:	4620      	mov	r0, r4
 800891a:	f7ff fbc7 	bl	80080ac <prvIsQueueEmpty>
 800891e:	2800      	cmp	r0, #0
 8008920:	d0cb      	beq.n	80088ba <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8008922:	2d00      	cmp	r5, #0
 8008924:	d0ea      	beq.n	80088fc <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8008926:	f7ff fa7d 	bl	8007e24 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800892a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800892c:	b119      	cbz	r1, 8008936 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800892e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008930:	6819      	ldr	r1, [r3, #0]
 8008932:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8008936:	68a0      	ldr	r0, [r4, #8]
 8008938:	f000 fda6 	bl	8009488 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800893c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800893e:	f7ff fa91 	bl	8007e64 <vPortExitCritical>
 8008942:	e7db      	b.n	80088fc <xQueueSemaphoreTake+0x13e>

08008944 <xQueueReceiveFromISR>:
{
 8008944:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008948:	4689      	mov	r9, r1
 800894a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800894c:	4605      	mov	r5, r0
 800894e:	b940      	cbnz	r0, 8008962 <xQueueReceiveFromISR+0x1e>
 8008950:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008954:	f383 8811 	msr	BASEPRI, r3
 8008958:	f3bf 8f6f 	isb	sy
 800895c:	f3bf 8f4f 	dsb	sy
 8008960:	e7fe      	b.n	8008960 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8008962:	b951      	cbnz	r1, 800897a <xQueueReceiveFromISR+0x36>
 8008964:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8008966:	b143      	cbz	r3, 800897a <xQueueReceiveFromISR+0x36>
 8008968:	f04f 0350 	mov.w	r3, #80	; 0x50
 800896c:	f383 8811 	msr	BASEPRI, r3
 8008970:	f3bf 8f6f 	isb	sy
 8008974:	f3bf 8f4f 	dsb	sy
 8008978:	e7fe      	b.n	8008978 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800897a:	f7ff fb69 	bl	8008050 <vPortValidateInterruptPriority>
	__asm volatile
 800897e:	f3ef 8711 	mrs	r7, BASEPRI
 8008982:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008986:	f383 8811 	msr	BASEPRI, r3
 800898a:	f3bf 8f6f 	isb	sy
 800898e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008992:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008994:	b31c      	cbz	r4, 80089de <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8008996:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800899a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800899c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800899e:	4628      	mov	r0, r5
 80089a0:	f7ff fbc4 	bl	800812c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80089a4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80089a6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80089a8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80089aa:	d113      	bne.n	80089d4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80089ac:	692b      	ldr	r3, [r5, #16]
 80089ae:	b90b      	cbnz	r3, 80089b4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80089b0:	2001      	movs	r0, #1
 80089b2:	e00b      	b.n	80089cc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80089b4:	f105 0010 	add.w	r0, r5, #16
 80089b8:	f000 fc3e 	bl	8009238 <xTaskRemoveFromEventList>
 80089bc:	2800      	cmp	r0, #0
 80089be:	d0f7      	beq.n	80089b0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80089c0:	f1b8 0f00 	cmp.w	r8, #0
 80089c4:	d0f4      	beq.n	80089b0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80089c6:	2001      	movs	r0, #1
 80089c8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80089cc:	f387 8811 	msr	BASEPRI, r7
}
 80089d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80089d4:	3601      	adds	r6, #1
 80089d6:	b276      	sxtb	r6, r6
 80089d8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80089dc:	e7e8      	b.n	80089b0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80089de:	4620      	mov	r0, r4
 80089e0:	e7f4      	b.n	80089cc <xQueueReceiveFromISR+0x88>
	...

080089e4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80089e4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80089e6:	4a07      	ldr	r2, [pc, #28]	; (8008a04 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80089e8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80089ea:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80089ee:	b92c      	cbnz	r4, 80089fc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80089f0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80089f4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80089f8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80089fa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80089fc:	3301      	adds	r3, #1
 80089fe:	2b08      	cmp	r3, #8
 8008a00:	d1f3      	bne.n	80089ea <vQueueAddToRegistry+0x6>
 8008a02:	e7fa      	b.n	80089fa <vQueueAddToRegistry+0x16>
 8008a04:	2000cce4 	.word	0x2000cce4

08008a08 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008a08:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008a0a:	4a08      	ldr	r2, [pc, #32]	; (8008a2c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008a0c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8008a0e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008a12:	684c      	ldr	r4, [r1, #4]
 8008a14:	4284      	cmp	r4, r0
 8008a16:	d104      	bne.n	8008a22 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008a18:	2000      	movs	r0, #0
 8008a1a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8008a1e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008a20:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008a22:	3301      	adds	r3, #1
 8008a24:	2b08      	cmp	r3, #8
 8008a26:	d1f2      	bne.n	8008a0e <vQueueUnregisterQueue+0x6>
 8008a28:	e7fa      	b.n	8008a20 <vQueueUnregisterQueue+0x18>
 8008a2a:	bf00      	nop
 8008a2c:	2000cce4 	.word	0x2000cce4

08008a30 <vQueueDelete>:
{
 8008a30:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008a32:	4604      	mov	r4, r0
 8008a34:	b940      	cbnz	r0, 8008a48 <vQueueDelete+0x18>
	__asm volatile
 8008a36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a3a:	f383 8811 	msr	BASEPRI, r3
 8008a3e:	f3bf 8f6f 	isb	sy
 8008a42:	f3bf 8f4f 	dsb	sy
 8008a46:	e7fe      	b.n	8008a46 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8008a48:	f7ff ffde 	bl	8008a08 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8008a4c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008a50:	b923      	cbnz	r3, 8008a5c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008a52:	4620      	mov	r0, r4
}
 8008a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008a58:	f7ff b902 	b.w	8007c60 <vPortFree>
}
 8008a5c:	bd10      	pop	{r4, pc}

08008a5e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8008a5e:	b570      	push	{r4, r5, r6, lr}
 8008a60:	4604      	mov	r4, r0
 8008a62:	460d      	mov	r5, r1
 8008a64:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008a66:	f7ff f9dd 	bl	8007e24 <vPortEnterCritical>
 8008a6a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8008a6e:	2bff      	cmp	r3, #255	; 0xff
 8008a70:	bf04      	itt	eq
 8008a72:	2300      	moveq	r3, #0
 8008a74:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008a78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8008a7c:	2bff      	cmp	r3, #255	; 0xff
 8008a7e:	bf04      	itt	eq
 8008a80:	2300      	moveq	r3, #0
 8008a82:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8008a86:	f7ff f9ed 	bl	8007e64 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8008a8a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008a8c:	b92b      	cbnz	r3, 8008a9a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8008a8e:	4632      	mov	r2, r6
 8008a90:	4629      	mov	r1, r5
 8008a92:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8008a96:	f000 fbb1 	bl	80091fc <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8008a9a:	4620      	mov	r0, r4
	}
 8008a9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8008aa0:	f7ff bb5a 	b.w	8008158 <prvUnlockQueue>

08008aa4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8008aa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008aa8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8008aaa:	f7ff f9bb 	bl	8007e24 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8008aae:	4b30      	ldr	r3, [pc, #192]	; (8008b70 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8008ab0:	4e30      	ldr	r6, [pc, #192]	; (8008b74 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8008ab2:	681a      	ldr	r2, [r3, #0]
 8008ab4:	4f30      	ldr	r7, [pc, #192]	; (8008b78 <prvAddNewTaskToReadyList+0xd4>)
 8008ab6:	3201      	adds	r2, #1
 8008ab8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8008aba:	6835      	ldr	r5, [r6, #0]
 8008abc:	2d00      	cmp	r5, #0
 8008abe:	d14b      	bne.n	8008b58 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8008ac0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8008ac2:	681b      	ldr	r3, [r3, #0]
 8008ac4:	2b01      	cmp	r3, #1
 8008ac6:	d11f      	bne.n	8008b08 <prvAddNewTaskToReadyList+0x64>
 8008ac8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008aca:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008acc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8008ace:	f7ff f8ff 	bl	8007cd0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008ad2:	2d38      	cmp	r5, #56	; 0x38
 8008ad4:	f108 0814 	add.w	r8, r8, #20
 8008ad8:	d1f7      	bne.n	8008aca <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8008ada:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8008ba0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8008ade:	4d27      	ldr	r5, [pc, #156]	; (8008b7c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008ae0:	4640      	mov	r0, r8
 8008ae2:	f7ff f8f5 	bl	8007cd0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008ae6:	4628      	mov	r0, r5
 8008ae8:	f7ff f8f2 	bl	8007cd0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8008aec:	4824      	ldr	r0, [pc, #144]	; (8008b80 <prvAddNewTaskToReadyList+0xdc>)
 8008aee:	f7ff f8ef 	bl	8007cd0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008af2:	4824      	ldr	r0, [pc, #144]	; (8008b84 <prvAddNewTaskToReadyList+0xe0>)
 8008af4:	f7ff f8ec 	bl	8007cd0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008af8:	4823      	ldr	r0, [pc, #140]	; (8008b88 <prvAddNewTaskToReadyList+0xe4>)
 8008afa:	f7ff f8e9 	bl	8007cd0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8008afe:	4b23      	ldr	r3, [pc, #140]	; (8008b8c <prvAddNewTaskToReadyList+0xe8>)
 8008b00:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008b04:	4b22      	ldr	r3, [pc, #136]	; (8008b90 <prvAddNewTaskToReadyList+0xec>)
 8008b06:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008b08:	4a22      	ldr	r2, [pc, #136]	; (8008b94 <prvAddNewTaskToReadyList+0xf0>)
 8008b0a:	6813      	ldr	r3, [r2, #0]
 8008b0c:	3301      	adds	r3, #1
 8008b0e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008b10:	4a21      	ldr	r2, [pc, #132]	; (8008b98 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008b12:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008b14:	6811      	ldr	r1, [r2, #0]
 8008b16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b18:	2014      	movs	r0, #20
 8008b1a:	428b      	cmp	r3, r1
 8008b1c:	fb00 7003 	mla	r0, r0, r3, r7
 8008b20:	f104 0104 	add.w	r1, r4, #4
 8008b24:	bf88      	it	hi
 8008b26:	6013      	strhi	r3, [r2, #0]
 8008b28:	f7ff f8e0 	bl	8007cec <vListInsertEnd>
	taskEXIT_CRITICAL();
 8008b2c:	f7ff f99a 	bl	8007e64 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008b30:	4b1a      	ldr	r3, [pc, #104]	; (8008b9c <prvAddNewTaskToReadyList+0xf8>)
 8008b32:	681b      	ldr	r3, [r3, #0]
 8008b34:	b173      	cbz	r3, 8008b54 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008b36:	6833      	ldr	r3, [r6, #0]
 8008b38:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008b3a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b3c:	429a      	cmp	r2, r3
 8008b3e:	d209      	bcs.n	8008b54 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008b40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b48:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b4c:	f3bf 8f4f 	dsb	sy
 8008b50:	f3bf 8f6f 	isb	sy
}
 8008b54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008b58:	4b10      	ldr	r3, [pc, #64]	; (8008b9c <prvAddNewTaskToReadyList+0xf8>)
 8008b5a:	681b      	ldr	r3, [r3, #0]
 8008b5c:	2b00      	cmp	r3, #0
 8008b5e:	d1d3      	bne.n	8008b08 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008b60:	6833      	ldr	r3, [r6, #0]
 8008b62:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008b64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b66:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008b68:	bf98      	it	ls
 8008b6a:	6034      	strls	r4, [r6, #0]
 8008b6c:	e7cc      	b.n	8008b08 <prvAddNewTaskToReadyList+0x64>
 8008b6e:	bf00      	nop
 8008b70:	2000d190 	.word	0x2000d190
 8008b74:	2000cd24 	.word	0x2000cd24
 8008b78:	2000cd30 	.word	0x2000cd30
 8008b7c:	2000d1bc 	.word	0x2000d1bc
 8008b80:	2000d1d8 	.word	0x2000d1d8
 8008b84:	2000d204 	.word	0x2000d204
 8008b88:	2000d1f0 	.word	0x2000d1f0
 8008b8c:	2000cd28 	.word	0x2000cd28
 8008b90:	2000cd2c 	.word	0x2000cd2c
 8008b94:	2000d1a0 	.word	0x2000d1a0
 8008b98:	2000d1a4 	.word	0x2000d1a4
 8008b9c:	2000d1ec 	.word	0x2000d1ec
 8008ba0:	2000d1a8 	.word	0x2000d1a8

08008ba4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008ba6:	4b15      	ldr	r3, [pc, #84]	; (8008bfc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008ba8:	4e15      	ldr	r6, [pc, #84]	; (8008c00 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8008baa:	681d      	ldr	r5, [r3, #0]
{
 8008bac:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bae:	6830      	ldr	r0, [r6, #0]
 8008bb0:	3004      	adds	r0, #4
{
 8008bb2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008bb4:	f7ff f8bd 	bl	8007d32 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008bb8:	1c63      	adds	r3, r4, #1
 8008bba:	d107      	bne.n	8008bcc <prvAddCurrentTaskToDelayedList+0x28>
 8008bbc:	b137      	cbz	r7, 8008bcc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bbe:	6831      	ldr	r1, [r6, #0]
 8008bc0:	4810      	ldr	r0, [pc, #64]	; (8008c04 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8008bc2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bc6:	3104      	adds	r1, #4
 8008bc8:	f7ff b890 	b.w	8007cec <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8008bcc:	6833      	ldr	r3, [r6, #0]
 8008bce:	192c      	adds	r4, r5, r4
 8008bd0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008bd2:	d307      	bcc.n	8008be4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bd4:	4b0c      	ldr	r3, [pc, #48]	; (8008c08 <prvAddCurrentTaskToDelayedList+0x64>)
 8008bd6:	6818      	ldr	r0, [r3, #0]
 8008bd8:	6831      	ldr	r1, [r6, #0]
}
 8008bda:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008bde:	3104      	adds	r1, #4
 8008be0:	f7ff b890 	b.w	8007d04 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008be4:	4b09      	ldr	r3, [pc, #36]	; (8008c0c <prvAddCurrentTaskToDelayedList+0x68>)
 8008be6:	6818      	ldr	r0, [r3, #0]
 8008be8:	6831      	ldr	r1, [r6, #0]
 8008bea:	3104      	adds	r1, #4
 8008bec:	f7ff f88a 	bl	8007d04 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008bf0:	4b07      	ldr	r3, [pc, #28]	; (8008c10 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008bf2:	681a      	ldr	r2, [r3, #0]
 8008bf4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008bf6:	bf88      	it	hi
 8008bf8:	601c      	strhi	r4, [r3, #0]
}
 8008bfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008bfc:	2000d218 	.word	0x2000d218
 8008c00:	2000cd24 	.word	0x2000cd24
 8008c04:	2000d1f0 	.word	0x2000d1f0
 8008c08:	2000cd2c 	.word	0x2000cd2c
 8008c0c:	2000cd28 	.word	0x2000cd28
 8008c10:	2000d1d0 	.word	0x2000d1d0

08008c14 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008c14:	4a06      	ldr	r2, [pc, #24]	; (8008c30 <prvResetNextTaskUnblockTime+0x1c>)
 8008c16:	6813      	ldr	r3, [r2, #0]
 8008c18:	6819      	ldr	r1, [r3, #0]
 8008c1a:	4b06      	ldr	r3, [pc, #24]	; (8008c34 <prvResetNextTaskUnblockTime+0x20>)
 8008c1c:	b919      	cbnz	r1, 8008c26 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8008c1e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008c22:	601a      	str	r2, [r3, #0]
}
 8008c24:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c26:	6812      	ldr	r2, [r2, #0]
 8008c28:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008c2a:	68d2      	ldr	r2, [r2, #12]
 8008c2c:	6852      	ldr	r2, [r2, #4]
 8008c2e:	e7f8      	b.n	8008c22 <prvResetNextTaskUnblockTime+0xe>
 8008c30:	2000cd28 	.word	0x2000cd28
 8008c34:	2000d1d0 	.word	0x2000d1d0

08008c38 <prvDeleteTCB>:
	{
 8008c38:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008c3a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8008c3e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008c40:	b93b      	cbnz	r3, 8008c52 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008c42:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008c44:	f7ff f80c 	bl	8007c60 <vPortFree>
				vPortFree( pxTCB );
 8008c48:	4620      	mov	r0, r4
	}
 8008c4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8008c4e:	f7ff b807 	b.w	8007c60 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008c52:	2b01      	cmp	r3, #1
 8008c54:	d0f9      	beq.n	8008c4a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008c56:	2b02      	cmp	r3, #2
 8008c58:	d008      	beq.n	8008c6c <prvDeleteTCB+0x34>
 8008c5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c5e:	f383 8811 	msr	BASEPRI, r3
 8008c62:	f3bf 8f6f 	isb	sy
 8008c66:	f3bf 8f4f 	dsb	sy
 8008c6a:	e7fe      	b.n	8008c6a <prvDeleteTCB+0x32>
	}
 8008c6c:	bd10      	pop	{r4, pc}
	...

08008c70 <prvIdleTask>:
{
 8008c70:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008c72:	4c14      	ldr	r4, [pc, #80]	; (8008cc4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c74:	4f14      	ldr	r7, [pc, #80]	; (8008cc8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8008c76:	4d15      	ldr	r5, [pc, #84]	; (8008ccc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008c78:	6823      	ldr	r3, [r4, #0]
 8008c7a:	b983      	cbnz	r3, 8008c9e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8008c7c:	4b14      	ldr	r3, [pc, #80]	; (8008cd0 <prvIdleTask+0x60>)
 8008c7e:	681b      	ldr	r3, [r3, #0]
 8008c80:	2b01      	cmp	r3, #1
 8008c82:	d909      	bls.n	8008c98 <prvIdleTask+0x28>
				taskYIELD();
 8008c84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008c90:	f3bf 8f4f 	dsb	sy
 8008c94:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8008c98:	f7f8 fbbe 	bl	8001418 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8008c9c:	e7eb      	b.n	8008c76 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8008c9e:	f7ff f8c1 	bl	8007e24 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008ca2:	68fb      	ldr	r3, [r7, #12]
 8008ca4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008ca6:	1d30      	adds	r0, r6, #4
 8008ca8:	f7ff f843 	bl	8007d32 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8008cac:	682b      	ldr	r3, [r5, #0]
 8008cae:	3b01      	subs	r3, #1
 8008cb0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8008cb2:	6823      	ldr	r3, [r4, #0]
 8008cb4:	3b01      	subs	r3, #1
 8008cb6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8008cb8:	f7ff f8d4 	bl	8007e64 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8008cbc:	4630      	mov	r0, r6
 8008cbe:	f7ff ffbb 	bl	8008c38 <prvDeleteTCB>
 8008cc2:	e7d9      	b.n	8008c78 <prvIdleTask+0x8>
 8008cc4:	2000d194 	.word	0x2000d194
 8008cc8:	2000d204 	.word	0x2000d204
 8008ccc:	2000d190 	.word	0x2000d190
 8008cd0:	2000cd30 	.word	0x2000cd30

08008cd4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008cd8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008cdc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008ce0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008ce2:	4606      	mov	r6, r0
 8008ce4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008ce6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008ce8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008cea:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008cec:	f015 fa08 	bl	801e100 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008cf0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008cf2:	f1a9 0904 	sub.w	r9, r9, #4
 8008cf6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008cf8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008cfc:	b3b5      	cbz	r5, 8008d6c <prvInitialiseNewTask.constprop.0+0x98>
 8008cfe:	1e6b      	subs	r3, r5, #1
 8008d00:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008d04:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008d06:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008d0a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8008d0e:	b108      	cbz	r0, 8008d14 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008d10:	42ab      	cmp	r3, r5
 8008d12:	d1f8      	bne.n	8008d06 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008d14:	2300      	movs	r3, #0
 8008d16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008d1a:	9d08      	ldr	r5, [sp, #32]
 8008d1c:	2d37      	cmp	r5, #55	; 0x37
 8008d1e:	bf28      	it	cs
 8008d20:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008d22:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008d26:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008d28:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008d2a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008d2c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008d30:	f7fe ffd9 	bl	8007ce6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d34:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008d38:	f104 0018 	add.w	r0, r4, #24
 8008d3c:	f7fe ffd3 	bl	8007ce6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008d40:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008d44:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008d46:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008d48:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008d4a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008d4e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008d52:	463a      	mov	r2, r7
 8008d54:	4631      	mov	r1, r6
 8008d56:	4648      	mov	r0, r9
 8008d58:	f7ff f83a 	bl	8007dd0 <pxPortInitialiseStack>
 8008d5c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008d5e:	f1b8 0f00 	cmp.w	r8, #0
 8008d62:	d001      	beq.n	8008d68 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008d64:	f8c8 4000 	str.w	r4, [r8]
}
 8008d68:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008d6c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008d70:	e7d3      	b.n	8008d1a <prvInitialiseNewTask.constprop.0+0x46>

08008d72 <xTaskCreateStatic>:
	{
 8008d72:	b570      	push	{r4, r5, r6, lr}
 8008d74:	b086      	sub	sp, #24
 8008d76:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008d7a:	b945      	cbnz	r5, 8008d8e <xTaskCreateStatic+0x1c>
 8008d7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d80:	f383 8811 	msr	BASEPRI, r3
 8008d84:	f3bf 8f6f 	isb	sy
 8008d88:	f3bf 8f4f 	dsb	sy
 8008d8c:	e7fe      	b.n	8008d8c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008d8e:	b944      	cbnz	r4, 8008da2 <xTaskCreateStatic+0x30>
 8008d90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d94:	f383 8811 	msr	BASEPRI, r3
 8008d98:	f3bf 8f6f 	isb	sy
 8008d9c:	f3bf 8f4f 	dsb	sy
 8008da0:	e7fe      	b.n	8008da0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008da2:	2660      	movs	r6, #96	; 0x60
 8008da4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8008da6:	9e05      	ldr	r6, [sp, #20]
 8008da8:	2e60      	cmp	r6, #96	; 0x60
 8008daa:	d008      	beq.n	8008dbe <xTaskCreateStatic+0x4c>
 8008dac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008db0:	f383 8811 	msr	BASEPRI, r3
 8008db4:	f3bf 8f6f 	isb	sy
 8008db8:	f3bf 8f4f 	dsb	sy
 8008dbc:	e7fe      	b.n	8008dbc <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008dbe:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008dc0:	2502      	movs	r5, #2
 8008dc2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008dc6:	ad04      	add	r5, sp, #16
 8008dc8:	9501      	str	r5, [sp, #4]
 8008dca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008dcc:	9402      	str	r4, [sp, #8]
 8008dce:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008dd0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008dd2:	f7ff ff7f 	bl	8008cd4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008dd6:	4620      	mov	r0, r4
 8008dd8:	f7ff fe64 	bl	8008aa4 <prvAddNewTaskToReadyList>
	}
 8008ddc:	9804      	ldr	r0, [sp, #16]
 8008dde:	b006      	add	sp, #24
 8008de0:	bd70      	pop	{r4, r5, r6, pc}

08008de2 <xTaskCreate>:
	{
 8008de2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008de6:	4607      	mov	r7, r0
 8008de8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008dea:	0090      	lsls	r0, r2, #2
	{
 8008dec:	4688      	mov	r8, r1
 8008dee:	4616      	mov	r6, r2
 8008df0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008df2:	f7fe fea3 	bl	8007b3c <pvPortMalloc>
			if( pxStack != NULL )
 8008df6:	4605      	mov	r5, r0
 8008df8:	b1e8      	cbz	r0, 8008e36 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008dfa:	2060      	movs	r0, #96	; 0x60
 8008dfc:	f7fe fe9e 	bl	8007b3c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008e00:	4604      	mov	r4, r0
 8008e02:	b1a8      	cbz	r0, 8008e30 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008e04:	2300      	movs	r3, #0
 8008e06:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008e0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008e0c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008e0e:	9301      	str	r3, [sp, #4]
 8008e10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008e12:	9002      	str	r0, [sp, #8]
 8008e14:	9300      	str	r3, [sp, #0]
 8008e16:	4632      	mov	r2, r6
 8008e18:	464b      	mov	r3, r9
 8008e1a:	4641      	mov	r1, r8
 8008e1c:	4638      	mov	r0, r7
 8008e1e:	f7ff ff59 	bl	8008cd4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008e22:	4620      	mov	r0, r4
 8008e24:	f7ff fe3e 	bl	8008aa4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008e28:	2001      	movs	r0, #1
	}
 8008e2a:	b005      	add	sp, #20
 8008e2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008e30:	4628      	mov	r0, r5
 8008e32:	f7fe ff15 	bl	8007c60 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008e36:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008e3a:	e7f6      	b.n	8008e2a <xTaskCreate+0x48>

08008e3c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8008e3c:	4a02      	ldr	r2, [pc, #8]	; (8008e48 <vTaskSuspendAll+0xc>)
 8008e3e:	6813      	ldr	r3, [r2, #0]
 8008e40:	3301      	adds	r3, #1
 8008e42:	6013      	str	r3, [r2, #0]
}
 8008e44:	4770      	bx	lr
 8008e46:	bf00      	nop
 8008e48:	2000d19c 	.word	0x2000d19c

08008e4c <xTaskGetTickCount>:
		xTicks = xTickCount;
 8008e4c:	4b01      	ldr	r3, [pc, #4]	; (8008e54 <xTaskGetTickCount+0x8>)
 8008e4e:	6818      	ldr	r0, [r3, #0]
}
 8008e50:	4770      	bx	lr
 8008e52:	bf00      	nop
 8008e54:	2000d218 	.word	0x2000d218

08008e58 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e58:	4b3f      	ldr	r3, [pc, #252]	; (8008f58 <xTaskIncrementTick+0x100>)
 8008e5a:	681b      	ldr	r3, [r3, #0]
{
 8008e5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d173      	bne.n	8008f4c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008e64:	4b3d      	ldr	r3, [pc, #244]	; (8008f5c <xTaskIncrementTick+0x104>)
 8008e66:	681d      	ldr	r5, [r3, #0]
 8008e68:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008e6a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008e6c:	b9bd      	cbnz	r5, 8008e9e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008e6e:	4b3c      	ldr	r3, [pc, #240]	; (8008f60 <xTaskIncrementTick+0x108>)
 8008e70:	681a      	ldr	r2, [r3, #0]
 8008e72:	6812      	ldr	r2, [r2, #0]
 8008e74:	b142      	cbz	r2, 8008e88 <xTaskIncrementTick+0x30>
 8008e76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e7a:	f383 8811 	msr	BASEPRI, r3
 8008e7e:	f3bf 8f6f 	isb	sy
 8008e82:	f3bf 8f4f 	dsb	sy
 8008e86:	e7fe      	b.n	8008e86 <xTaskIncrementTick+0x2e>
 8008e88:	4a36      	ldr	r2, [pc, #216]	; (8008f64 <xTaskIncrementTick+0x10c>)
 8008e8a:	6819      	ldr	r1, [r3, #0]
 8008e8c:	6810      	ldr	r0, [r2, #0]
 8008e8e:	6018      	str	r0, [r3, #0]
 8008e90:	6011      	str	r1, [r2, #0]
 8008e92:	4a35      	ldr	r2, [pc, #212]	; (8008f68 <xTaskIncrementTick+0x110>)
 8008e94:	6813      	ldr	r3, [r2, #0]
 8008e96:	3301      	adds	r3, #1
 8008e98:	6013      	str	r3, [r2, #0]
 8008e9a:	f7ff febb 	bl	8008c14 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008e9e:	4e33      	ldr	r6, [pc, #204]	; (8008f6c <xTaskIncrementTick+0x114>)
 8008ea0:	4f33      	ldr	r7, [pc, #204]	; (8008f70 <xTaskIncrementTick+0x118>)
 8008ea2:	6833      	ldr	r3, [r6, #0]
 8008ea4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008f7c <xTaskIncrementTick+0x124>
 8008ea8:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8008eaa:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008eae:	d911      	bls.n	8008ed4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008eb0:	f8d8 3000 	ldr.w	r3, [r8]
 8008eb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008eb6:	2214      	movs	r2, #20
 8008eb8:	4353      	muls	r3, r2
 8008eba:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008ebc:	2b02      	cmp	r3, #2
 8008ebe:	bf28      	it	cs
 8008ec0:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8008ec2:	4b2c      	ldr	r3, [pc, #176]	; (8008f74 <xTaskIncrementTick+0x11c>)
 8008ec4:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8008ec6:	2b00      	cmp	r3, #0
}
 8008ec8:	bf0c      	ite	eq
 8008eca:	4620      	moveq	r0, r4
 8008ecc:	2001      	movne	r0, #1
 8008ece:	b003      	add	sp, #12
 8008ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008ed4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008f60 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008ed8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008f80 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008edc:	f8d9 3000 	ldr.w	r3, [r9]
 8008ee0:	681b      	ldr	r3, [r3, #0]
 8008ee2:	b91b      	cbnz	r3, 8008eec <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008ee4:	f04f 33ff 	mov.w	r3, #4294967295
 8008ee8:	6033      	str	r3, [r6, #0]
					break;
 8008eea:	e7e1      	b.n	8008eb0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008eec:	f8d9 3000 	ldr.w	r3, [r9]
 8008ef0:	68db      	ldr	r3, [r3, #12]
 8008ef2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008ef6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8008efa:	4295      	cmp	r5, r2
 8008efc:	d201      	bcs.n	8008f02 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8008efe:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008f00:	e7d6      	b.n	8008eb0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008f02:	f10b 0104 	add.w	r1, fp, #4
 8008f06:	4608      	mov	r0, r1
 8008f08:	9101      	str	r1, [sp, #4]
 8008f0a:	f7fe ff12 	bl	8007d32 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008f0e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008f12:	9901      	ldr	r1, [sp, #4]
 8008f14:	b122      	cbz	r2, 8008f20 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008f16:	f10b 0018 	add.w	r0, fp, #24
 8008f1a:	f7fe ff0a 	bl	8007d32 <uxListRemove>
 8008f1e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008f20:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008f24:	f8da 2000 	ldr.w	r2, [sl]
 8008f28:	2314      	movs	r3, #20
 8008f2a:	4290      	cmp	r0, r2
 8008f2c:	bf88      	it	hi
 8008f2e:	f8ca 0000 	strhi.w	r0, [sl]
 8008f32:	fb03 7000 	mla	r0, r3, r0, r7
 8008f36:	f7fe fed9 	bl	8007cec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008f3a:	f8d8 1000 	ldr.w	r1, [r8]
 8008f3e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008f42:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008f44:	429a      	cmp	r2, r3
 8008f46:	bf28      	it	cs
 8008f48:	2401      	movcs	r4, #1
 8008f4a:	e7c7      	b.n	8008edc <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8008f4c:	4a0a      	ldr	r2, [pc, #40]	; (8008f78 <xTaskIncrementTick+0x120>)
 8008f4e:	6813      	ldr	r3, [r2, #0]
 8008f50:	3301      	adds	r3, #1
 8008f52:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008f54:	2400      	movs	r4, #0
 8008f56:	e7b4      	b.n	8008ec2 <xTaskIncrementTick+0x6a>
 8008f58:	2000d19c 	.word	0x2000d19c
 8008f5c:	2000d218 	.word	0x2000d218
 8008f60:	2000cd28 	.word	0x2000cd28
 8008f64:	2000cd2c 	.word	0x2000cd2c
 8008f68:	2000d1d4 	.word	0x2000d1d4
 8008f6c:	2000d1d0 	.word	0x2000d1d0
 8008f70:	2000cd30 	.word	0x2000cd30
 8008f74:	2000d21c 	.word	0x2000d21c
 8008f78:	2000d198 	.word	0x2000d198
 8008f7c:	2000cd24 	.word	0x2000cd24
 8008f80:	2000d1a4 	.word	0x2000d1a4

08008f84 <xTaskResumeAll>:
{
 8008f84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8008f86:	4c31      	ldr	r4, [pc, #196]	; (800904c <xTaskResumeAll+0xc8>)
 8008f88:	6823      	ldr	r3, [r4, #0]
 8008f8a:	b943      	cbnz	r3, 8008f9e <xTaskResumeAll+0x1a>
 8008f8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f90:	f383 8811 	msr	BASEPRI, r3
 8008f94:	f3bf 8f6f 	isb	sy
 8008f98:	f3bf 8f4f 	dsb	sy
 8008f9c:	e7fe      	b.n	8008f9c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008f9e:	f7fe ff41 	bl	8007e24 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8008fa2:	6823      	ldr	r3, [r4, #0]
 8008fa4:	3b01      	subs	r3, #1
 8008fa6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008fa8:	6824      	ldr	r4, [r4, #0]
 8008faa:	b12c      	cbz	r4, 8008fb8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008fac:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008fae:	f7fe ff59 	bl	8007e64 <vPortExitCritical>
}
 8008fb2:	4620      	mov	r0, r4
 8008fb4:	b003      	add	sp, #12
 8008fb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008fb8:	4b25      	ldr	r3, [pc, #148]	; (8009050 <xTaskResumeAll+0xcc>)
 8008fba:	681b      	ldr	r3, [r3, #0]
 8008fbc:	2b00      	cmp	r3, #0
 8008fbe:	d0f5      	beq.n	8008fac <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008fc0:	4d24      	ldr	r5, [pc, #144]	; (8009054 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8008fc2:	4e25      	ldr	r6, [pc, #148]	; (8009058 <xTaskResumeAll+0xd4>)
 8008fc4:	4f25      	ldr	r7, [pc, #148]	; (800905c <xTaskResumeAll+0xd8>)
 8008fc6:	e01e      	b.n	8009006 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008fc8:	68eb      	ldr	r3, [r5, #12]
 8008fca:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008fcc:	f104 0018 	add.w	r0, r4, #24
 8008fd0:	f7fe feaf 	bl	8007d32 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008fd4:	1d21      	adds	r1, r4, #4
 8008fd6:	4608      	mov	r0, r1
 8008fd8:	9101      	str	r1, [sp, #4]
 8008fda:	f7fe feaa 	bl	8007d32 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008fde:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008fe0:	6832      	ldr	r2, [r6, #0]
 8008fe2:	9901      	ldr	r1, [sp, #4]
 8008fe4:	2014      	movs	r0, #20
 8008fe6:	4293      	cmp	r3, r2
 8008fe8:	fb00 7003 	mla	r0, r0, r3, r7
 8008fec:	bf88      	it	hi
 8008fee:	6033      	strhi	r3, [r6, #0]
 8008ff0:	f7fe fe7c 	bl	8007cec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008ff4:	4b1a      	ldr	r3, [pc, #104]	; (8009060 <xTaskResumeAll+0xdc>)
 8008ff6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008ff8:	681b      	ldr	r3, [r3, #0]
 8008ffa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ffc:	429a      	cmp	r2, r3
 8008ffe:	d302      	bcc.n	8009006 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009000:	4b18      	ldr	r3, [pc, #96]	; (8009064 <xTaskResumeAll+0xe0>)
 8009002:	2201      	movs	r2, #1
 8009004:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009006:	682b      	ldr	r3, [r5, #0]
 8009008:	2b00      	cmp	r3, #0
 800900a:	d1dd      	bne.n	8008fc8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800900c:	b10c      	cbz	r4, 8009012 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800900e:	f7ff fe01 	bl	8008c14 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009012:	4d15      	ldr	r5, [pc, #84]	; (8009068 <xTaskResumeAll+0xe4>)
 8009014:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009016:	b144      	cbz	r4, 800902a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009018:	4e12      	ldr	r6, [pc, #72]	; (8009064 <xTaskResumeAll+0xe0>)
 800901a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800901c:	f7ff ff1c 	bl	8008e58 <xTaskIncrementTick>
 8009020:	b100      	cbz	r0, 8009024 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009022:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009024:	3c01      	subs	r4, #1
 8009026:	d1f9      	bne.n	800901c <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009028:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800902a:	4b0e      	ldr	r3, [pc, #56]	; (8009064 <xTaskResumeAll+0xe0>)
 800902c:	681b      	ldr	r3, [r3, #0]
 800902e:	2b00      	cmp	r3, #0
 8009030:	d0bc      	beq.n	8008fac <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009032:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009036:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800903a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800903e:	f3bf 8f4f 	dsb	sy
 8009042:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009046:	2401      	movs	r4, #1
 8009048:	e7b1      	b.n	8008fae <xTaskResumeAll+0x2a>
 800904a:	bf00      	nop
 800904c:	2000d19c 	.word	0x2000d19c
 8009050:	2000d190 	.word	0x2000d190
 8009054:	2000d1d8 	.word	0x2000d1d8
 8009058:	2000d1a4 	.word	0x2000d1a4
 800905c:	2000cd30 	.word	0x2000cd30
 8009060:	2000cd24 	.word	0x2000cd24
 8009064:	2000d21c 	.word	0x2000d21c
 8009068:	2000d198 	.word	0x2000d198

0800906c <vTaskSetApplicationTaskTag>:
	{
 800906c:	b538      	push	{r3, r4, r5, lr}
 800906e:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009070:	4604      	mov	r4, r0
 8009072:	b908      	cbnz	r0, 8009078 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009074:	4b04      	ldr	r3, [pc, #16]	; (8009088 <vTaskSetApplicationTaskTag+0x1c>)
 8009076:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009078:	f7fe fed4 	bl	8007e24 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800907c:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800907e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009082:	f7fe beef 	b.w	8007e64 <vPortExitCritical>
 8009086:	bf00      	nop
 8009088:	2000cd24 	.word	0x2000cd24

0800908c <xTaskCallApplicationTaskHook>:
	{
 800908c:	4603      	mov	r3, r0
 800908e:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009090:	b90b      	cbnz	r3, 8009096 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009092:	4b03      	ldr	r3, [pc, #12]	; (80090a0 <xTaskCallApplicationTaskHook+0x14>)
 8009094:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009096:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009098:	b103      	cbz	r3, 800909c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800909a:	4718      	bx	r3
	}
 800909c:	4618      	mov	r0, r3
 800909e:	4770      	bx	lr
 80090a0:	2000cd24 	.word	0x2000cd24

080090a4 <vTaskStartScheduler>:
{
 80090a4:	b510      	push	{r4, lr}
 80090a6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80090a8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80090aa:	aa07      	add	r2, sp, #28
 80090ac:	a906      	add	r1, sp, #24
 80090ae:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80090b0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80090b4:	f7fe fd06 	bl	8007ac4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80090b8:	9b05      	ldr	r3, [sp, #20]
 80090ba:	9302      	str	r3, [sp, #8]
 80090bc:	9b06      	ldr	r3, [sp, #24]
 80090be:	9a07      	ldr	r2, [sp, #28]
 80090c0:	4919      	ldr	r1, [pc, #100]	; (8009128 <vTaskStartScheduler+0x84>)
 80090c2:	481a      	ldr	r0, [pc, #104]	; (800912c <vTaskStartScheduler+0x88>)
 80090c4:	e9cd 4300 	strd	r4, r3, [sp]
 80090c8:	4623      	mov	r3, r4
 80090ca:	f7ff fe52 	bl	8008d72 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80090ce:	b340      	cbz	r0, 8009122 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 80090d0:	f000 fa8a 	bl	80095e8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80090d4:	2801      	cmp	r0, #1
 80090d6:	d119      	bne.n	800910c <vTaskStartScheduler+0x68>
 80090d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090dc:	f383 8811 	msr	BASEPRI, r3
 80090e0:	f3bf 8f6f 	isb	sy
 80090e4:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 80090e8:	4b11      	ldr	r3, [pc, #68]	; (8009130 <vTaskStartScheduler+0x8c>)
 80090ea:	f04f 32ff 	mov.w	r2, #4294967295
 80090ee:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80090f0:	4b10      	ldr	r3, [pc, #64]	; (8009134 <vTaskStartScheduler+0x90>)
 80090f2:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80090f4:	4b10      	ldr	r3, [pc, #64]	; (8009138 <vTaskStartScheduler+0x94>)
 80090f6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 80090f8:	4b10      	ldr	r3, [pc, #64]	; (800913c <vTaskStartScheduler+0x98>)
 80090fa:	4621      	mov	r1, r4
 80090fc:	6818      	ldr	r0, [r3, #0]
 80090fe:	f7ff ffc5 	bl	800908c <xTaskCallApplicationTaskHook>
}
 8009102:	b008      	add	sp, #32
 8009104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009108:	f7fe bf1c 	b.w	8007f44 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800910c:	3001      	adds	r0, #1
 800910e:	d108      	bne.n	8009122 <vTaskStartScheduler+0x7e>
 8009110:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009114:	f383 8811 	msr	BASEPRI, r3
 8009118:	f3bf 8f6f 	isb	sy
 800911c:	f3bf 8f4f 	dsb	sy
 8009120:	e7fe      	b.n	8009120 <vTaskStartScheduler+0x7c>
}
 8009122:	b008      	add	sp, #32
 8009124:	bd10      	pop	{r4, pc}
 8009126:	bf00      	nop
 8009128:	080206a1 	.word	0x080206a1
 800912c:	08008c71 	.word	0x08008c71
 8009130:	2000d1d0 	.word	0x2000d1d0
 8009134:	2000d1ec 	.word	0x2000d1ec
 8009138:	2000d218 	.word	0x2000d218
 800913c:	2000cd24 	.word	0x2000cd24

08009140 <vTaskSwitchContext>:
{
 8009140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009142:	4b1c      	ldr	r3, [pc, #112]	; (80091b4 <vTaskSwitchContext+0x74>)
 8009144:	681a      	ldr	r2, [r3, #0]
 8009146:	4b1c      	ldr	r3, [pc, #112]	; (80091b8 <vTaskSwitchContext+0x78>)
 8009148:	b112      	cbz	r2, 8009150 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800914a:	2201      	movs	r2, #1
 800914c:	601a      	str	r2, [r3, #0]
}
 800914e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009150:	4c1a      	ldr	r4, [pc, #104]	; (80091bc <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 8009152:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009154:	4e1a      	ldr	r6, [pc, #104]	; (80091c0 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 8009156:	6820      	ldr	r0, [r4, #0]
 8009158:	2101      	movs	r1, #1
 800915a:	f7ff ff97 	bl	800908c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800915e:	6832      	ldr	r2, [r6, #0]
 8009160:	4918      	ldr	r1, [pc, #96]	; (80091c4 <vTaskSwitchContext+0x84>)
 8009162:	2714      	movs	r7, #20
 8009164:	fb07 f302 	mul.w	r3, r7, r2
 8009168:	18c8      	adds	r0, r1, r3
 800916a:	58cd      	ldr	r5, [r1, r3]
 800916c:	b1ad      	cbz	r5, 800919a <vTaskSwitchContext+0x5a>
 800916e:	6845      	ldr	r5, [r0, #4]
 8009170:	3308      	adds	r3, #8
 8009172:	686d      	ldr	r5, [r5, #4]
 8009174:	6045      	str	r5, [r0, #4]
 8009176:	440b      	add	r3, r1
 8009178:	429d      	cmp	r5, r3
 800917a:	bf04      	itt	eq
 800917c:	686b      	ldreq	r3, [r5, #4]
 800917e:	6043      	streq	r3, [r0, #4]
 8009180:	2314      	movs	r3, #20
 8009182:	fb03 1102 	mla	r1, r3, r2, r1
 8009186:	684b      	ldr	r3, [r1, #4]
 8009188:	68db      	ldr	r3, [r3, #12]
 800918a:	6023      	str	r3, [r4, #0]
 800918c:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800918e:	6820      	ldr	r0, [r4, #0]
 8009190:	2100      	movs	r1, #0
}
 8009192:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009196:	f7ff bf79 	b.w	800908c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800919a:	b942      	cbnz	r2, 80091ae <vTaskSwitchContext+0x6e>
 800919c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091a0:	f383 8811 	msr	BASEPRI, r3
 80091a4:	f3bf 8f6f 	isb	sy
 80091a8:	f3bf 8f4f 	dsb	sy
 80091ac:	e7fe      	b.n	80091ac <vTaskSwitchContext+0x6c>
 80091ae:	3a01      	subs	r2, #1
 80091b0:	e7d8      	b.n	8009164 <vTaskSwitchContext+0x24>
 80091b2:	bf00      	nop
 80091b4:	2000d19c 	.word	0x2000d19c
 80091b8:	2000d21c 	.word	0x2000d21c
 80091bc:	2000cd24 	.word	0x2000cd24
 80091c0:	2000d1a4 	.word	0x2000d1a4
 80091c4:	2000cd30 	.word	0x2000cd30

080091c8 <vTaskPlaceOnEventList>:
{
 80091c8:	b510      	push	{r4, lr}
 80091ca:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80091cc:	b940      	cbnz	r0, 80091e0 <vTaskPlaceOnEventList+0x18>
 80091ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091d2:	f383 8811 	msr	BASEPRI, r3
 80091d6:	f3bf 8f6f 	isb	sy
 80091da:	f3bf 8f4f 	dsb	sy
 80091de:	e7fe      	b.n	80091de <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80091e0:	4b05      	ldr	r3, [pc, #20]	; (80091f8 <vTaskPlaceOnEventList+0x30>)
 80091e2:	6819      	ldr	r1, [r3, #0]
 80091e4:	3118      	adds	r1, #24
 80091e6:	f7fe fd8d 	bl	8007d04 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80091ea:	4620      	mov	r0, r4
 80091ec:	2101      	movs	r1, #1
}
 80091ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80091f2:	f7ff bcd7 	b.w	8008ba4 <prvAddCurrentTaskToDelayedList>
 80091f6:	bf00      	nop
 80091f8:	2000cd24 	.word	0x2000cd24

080091fc <vTaskPlaceOnEventListRestricted>:
	{
 80091fc:	b538      	push	{r3, r4, r5, lr}
 80091fe:	460d      	mov	r5, r1
 8009200:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009202:	b940      	cbnz	r0, 8009216 <vTaskPlaceOnEventListRestricted+0x1a>
 8009204:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009208:	f383 8811 	msr	BASEPRI, r3
 800920c:	f3bf 8f6f 	isb	sy
 8009210:	f3bf 8f4f 	dsb	sy
 8009214:	e7fe      	b.n	8009214 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009216:	4b07      	ldr	r3, [pc, #28]	; (8009234 <vTaskPlaceOnEventListRestricted+0x38>)
 8009218:	6819      	ldr	r1, [r3, #0]
 800921a:	3118      	adds	r1, #24
 800921c:	f7fe fd66 	bl	8007cec <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009220:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009222:	4621      	mov	r1, r4
 8009224:	bf0c      	ite	eq
 8009226:	4628      	moveq	r0, r5
 8009228:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800922c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009230:	f7ff bcb8 	b.w	8008ba4 <prvAddCurrentTaskToDelayedList>
 8009234:	2000cd24 	.word	0x2000cd24

08009238 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009238:	68c3      	ldr	r3, [r0, #12]
{
 800923a:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800923c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800923e:	b944      	cbnz	r4, 8009252 <xTaskRemoveFromEventList+0x1a>
 8009240:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009244:	f383 8811 	msr	BASEPRI, r3
 8009248:	f3bf 8f6f 	isb	sy
 800924c:	f3bf 8f4f 	dsb	sy
 8009250:	e7fe      	b.n	8009250 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8009252:	f104 0118 	add.w	r1, r4, #24
 8009256:	4608      	mov	r0, r1
 8009258:	9101      	str	r1, [sp, #4]
 800925a:	f7fe fd6a 	bl	8007d32 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800925e:	4b12      	ldr	r3, [pc, #72]	; (80092a8 <xTaskRemoveFromEventList+0x70>)
 8009260:	9901      	ldr	r1, [sp, #4]
 8009262:	681b      	ldr	r3, [r3, #0]
 8009264:	b9eb      	cbnz	r3, 80092a2 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8009266:	1d21      	adds	r1, r4, #4
 8009268:	4608      	mov	r0, r1
 800926a:	9101      	str	r1, [sp, #4]
 800926c:	f7fe fd61 	bl	8007d32 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8009270:	4a0e      	ldr	r2, [pc, #56]	; (80092ac <xTaskRemoveFromEventList+0x74>)
 8009272:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009274:	6810      	ldr	r0, [r2, #0]
 8009276:	9901      	ldr	r1, [sp, #4]
 8009278:	4283      	cmp	r3, r0
 800927a:	bf88      	it	hi
 800927c:	6013      	strhi	r3, [r2, #0]
 800927e:	4a0c      	ldr	r2, [pc, #48]	; (80092b0 <xTaskRemoveFromEventList+0x78>)
 8009280:	2014      	movs	r0, #20
 8009282:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8009286:	f7fe fd31 	bl	8007cec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800928a:	4b0a      	ldr	r3, [pc, #40]	; (80092b4 <xTaskRemoveFromEventList+0x7c>)
 800928c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800928e:	681b      	ldr	r3, [r3, #0]
 8009290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009292:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8009294:	bf85      	ittet	hi
 8009296:	4b08      	ldrhi	r3, [pc, #32]	; (80092b8 <xTaskRemoveFromEventList+0x80>)
 8009298:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800929a:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800929c:	6018      	strhi	r0, [r3, #0]
}
 800929e:	b002      	add	sp, #8
 80092a0:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80092a2:	4806      	ldr	r0, [pc, #24]	; (80092bc <xTaskRemoveFromEventList+0x84>)
 80092a4:	e7ef      	b.n	8009286 <xTaskRemoveFromEventList+0x4e>
 80092a6:	bf00      	nop
 80092a8:	2000d19c 	.word	0x2000d19c
 80092ac:	2000d1a4 	.word	0x2000d1a4
 80092b0:	2000cd30 	.word	0x2000cd30
 80092b4:	2000cd24 	.word	0x2000cd24
 80092b8:	2000d21c 	.word	0x2000d21c
 80092bc:	2000d1d8 	.word	0x2000d1d8

080092c0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80092c0:	4b03      	ldr	r3, [pc, #12]	; (80092d0 <vTaskInternalSetTimeOutState+0x10>)
 80092c2:	681b      	ldr	r3, [r3, #0]
 80092c4:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80092c6:	4b03      	ldr	r3, [pc, #12]	; (80092d4 <vTaskInternalSetTimeOutState+0x14>)
 80092c8:	681b      	ldr	r3, [r3, #0]
 80092ca:	6043      	str	r3, [r0, #4]
}
 80092cc:	4770      	bx	lr
 80092ce:	bf00      	nop
 80092d0:	2000d1d4 	.word	0x2000d1d4
 80092d4:	2000d218 	.word	0x2000d218

080092d8 <xTaskCheckForTimeOut>:
{
 80092d8:	b570      	push	{r4, r5, r6, lr}
 80092da:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80092dc:	4605      	mov	r5, r0
 80092de:	b940      	cbnz	r0, 80092f2 <xTaskCheckForTimeOut+0x1a>
 80092e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092e4:	f383 8811 	msr	BASEPRI, r3
 80092e8:	f3bf 8f6f 	isb	sy
 80092ec:	f3bf 8f4f 	dsb	sy
 80092f0:	e7fe      	b.n	80092f0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 80092f2:	b941      	cbnz	r1, 8009306 <xTaskCheckForTimeOut+0x2e>
 80092f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f8:	f383 8811 	msr	BASEPRI, r3
 80092fc:	f3bf 8f6f 	isb	sy
 8009300:	f3bf 8f4f 	dsb	sy
 8009304:	e7fe      	b.n	8009304 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8009306:	f7fe fd8d 	bl	8007e24 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800930a:	4b0f      	ldr	r3, [pc, #60]	; (8009348 <xTaskCheckForTimeOut+0x70>)
 800930c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800930e:	6823      	ldr	r3, [r4, #0]
 8009310:	1c5a      	adds	r2, r3, #1
 8009312:	d010      	beq.n	8009336 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8009314:	480d      	ldr	r0, [pc, #52]	; (800934c <xTaskCheckForTimeOut+0x74>)
 8009316:	682e      	ldr	r6, [r5, #0]
 8009318:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800931a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800931c:	4286      	cmp	r6, r0
 800931e:	d001      	beq.n	8009324 <xTaskCheckForTimeOut+0x4c>
 8009320:	428a      	cmp	r2, r1
 8009322:	d90f      	bls.n	8009344 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8009324:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8009326:	4283      	cmp	r3, r0
 8009328:	d90a      	bls.n	8009340 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800932a:	1a5b      	subs	r3, r3, r1
 800932c:	4413      	add	r3, r2
 800932e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8009330:	4628      	mov	r0, r5
 8009332:	f7ff ffc5 	bl	80092c0 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8009336:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009338:	f7fe fd94 	bl	8007e64 <vPortExitCritical>
}
 800933c:	4620      	mov	r0, r4
 800933e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8009340:	2300      	movs	r3, #0
 8009342:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8009344:	2401      	movs	r4, #1
 8009346:	e7f7      	b.n	8009338 <xTaskCheckForTimeOut+0x60>
 8009348:	2000d218 	.word	0x2000d218
 800934c:	2000d1d4 	.word	0x2000d1d4

08009350 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8009350:	4b01      	ldr	r3, [pc, #4]	; (8009358 <vTaskMissedYield+0x8>)
 8009352:	2201      	movs	r2, #1
 8009354:	601a      	str	r2, [r3, #0]
}
 8009356:	4770      	bx	lr
 8009358:	2000d21c 	.word	0x2000d21c

0800935c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800935c:	4b05      	ldr	r3, [pc, #20]	; (8009374 <xTaskGetSchedulerState+0x18>)
 800935e:	681b      	ldr	r3, [r3, #0]
 8009360:	b133      	cbz	r3, 8009370 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009362:	4b05      	ldr	r3, [pc, #20]	; (8009378 <xTaskGetSchedulerState+0x1c>)
 8009364:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8009366:	2b00      	cmp	r3, #0
 8009368:	bf0c      	ite	eq
 800936a:	2002      	moveq	r0, #2
 800936c:	2000      	movne	r0, #0
 800936e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8009370:	2001      	movs	r0, #1
	}
 8009372:	4770      	bx	lr
 8009374:	2000d1ec 	.word	0x2000d1ec
 8009378:	2000d19c 	.word	0x2000d19c

0800937c <xTaskPriorityInherit>:
	{
 800937c:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800937e:	4604      	mov	r4, r0
 8009380:	b348      	cbz	r0, 80093d6 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8009382:	4d1c      	ldr	r5, [pc, #112]	; (80093f4 <xTaskPriorityInherit+0x78>)
 8009384:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8009386:	682a      	ldr	r2, [r5, #0]
 8009388:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800938a:	4293      	cmp	r3, r2
 800938c:	d229      	bcs.n	80093e2 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800938e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8009390:	4e19      	ldr	r6, [pc, #100]	; (80093f8 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8009392:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009394:	bfa1      	itttt	ge
 8009396:	682a      	ldrge	r2, [r5, #0]
 8009398:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800939a:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800939e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80093a0:	2214      	movs	r2, #20
 80093a2:	fb02 6303 	mla	r3, r2, r3, r6
 80093a6:	6942      	ldr	r2, [r0, #20]
 80093a8:	429a      	cmp	r2, r3
 80093aa:	d116      	bne.n	80093da <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80093ac:	1d01      	adds	r1, r0, #4
 80093ae:	4608      	mov	r0, r1
 80093b0:	9101      	str	r1, [sp, #4]
 80093b2:	f7fe fcbe 	bl	8007d32 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80093b6:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80093b8:	4a10      	ldr	r2, [pc, #64]	; (80093fc <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80093ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80093bc:	6810      	ldr	r0, [r2, #0]
 80093be:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80093c0:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80093c2:	4283      	cmp	r3, r0
 80093c4:	f04f 0014 	mov.w	r0, #20
 80093c8:	fb00 6003 	mla	r0, r0, r3, r6
 80093cc:	bf88      	it	hi
 80093ce:	6013      	strhi	r3, [r2, #0]
 80093d0:	f7fe fc8c 	bl	8007cec <vListInsertEnd>
				xReturn = pdTRUE;
 80093d4:	2001      	movs	r0, #1
	}
 80093d6:	b002      	add	sp, #8
 80093d8:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80093da:	682b      	ldr	r3, [r5, #0]
 80093dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093de:	62c3      	str	r3, [r0, #44]	; 0x2c
 80093e0:	e7f8      	b.n	80093d4 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 80093e2:	682b      	ldr	r3, [r5, #0]
 80093e4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80093e6:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 80093e8:	42a0      	cmp	r0, r4
 80093ea:	bf2c      	ite	cs
 80093ec:	2000      	movcs	r0, #0
 80093ee:	2001      	movcc	r0, #1
 80093f0:	e7f1      	b.n	80093d6 <xTaskPriorityInherit+0x5a>
 80093f2:	bf00      	nop
 80093f4:	2000cd24 	.word	0x2000cd24
 80093f8:	2000cd30 	.word	0x2000cd30
 80093fc:	2000d1a4 	.word	0x2000d1a4

08009400 <xTaskPriorityDisinherit>:
	{
 8009400:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8009402:	b910      	cbnz	r0, 800940a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8009404:	2000      	movs	r0, #0
	}
 8009406:	b002      	add	sp, #8
 8009408:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800940a:	4b1c      	ldr	r3, [pc, #112]	; (800947c <xTaskPriorityDisinherit+0x7c>)
 800940c:	681c      	ldr	r4, [r3, #0]
 800940e:	4284      	cmp	r4, r0
 8009410:	d008      	beq.n	8009424 <xTaskPriorityDisinherit+0x24>
 8009412:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009416:	f383 8811 	msr	BASEPRI, r3
 800941a:	f3bf 8f6f 	isb	sy
 800941e:	f3bf 8f4f 	dsb	sy
 8009422:	e7fe      	b.n	8009422 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8009424:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8009426:	b943      	cbnz	r3, 800943a <xTaskPriorityDisinherit+0x3a>
 8009428:	f04f 0350 	mov.w	r3, #80	; 0x50
 800942c:	f383 8811 	msr	BASEPRI, r3
 8009430:	f3bf 8f6f 	isb	sy
 8009434:	f3bf 8f4f 	dsb	sy
 8009438:	e7fe      	b.n	8009438 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800943a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800943c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800943e:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009440:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8009442:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8009444:	d0de      	beq.n	8009404 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8009446:	2b00      	cmp	r3, #0
 8009448:	d1dc      	bne.n	8009404 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800944a:	1d21      	adds	r1, r4, #4
 800944c:	4608      	mov	r0, r1
 800944e:	9101      	str	r1, [sp, #4]
 8009450:	f7fe fc6f 	bl	8007d32 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009454:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8009456:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8009458:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800945a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800945e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8009460:	4a07      	ldr	r2, [pc, #28]	; (8009480 <xTaskPriorityDisinherit+0x80>)
 8009462:	6810      	ldr	r0, [r2, #0]
 8009464:	4283      	cmp	r3, r0
 8009466:	bf88      	it	hi
 8009468:	6013      	strhi	r3, [r2, #0]
 800946a:	4a06      	ldr	r2, [pc, #24]	; (8009484 <xTaskPriorityDisinherit+0x84>)
 800946c:	2014      	movs	r0, #20
 800946e:	fb00 2003 	mla	r0, r0, r3, r2
 8009472:	f7fe fc3b 	bl	8007cec <vListInsertEnd>
					xReturn = pdTRUE;
 8009476:	2001      	movs	r0, #1
		return xReturn;
 8009478:	e7c5      	b.n	8009406 <xTaskPriorityDisinherit+0x6>
 800947a:	bf00      	nop
 800947c:	2000cd24 	.word	0x2000cd24
 8009480:	2000d1a4 	.word	0x2000d1a4
 8009484:	2000cd30 	.word	0x2000cd30

08009488 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8009488:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800948a:	4604      	mov	r4, r0
 800948c:	2800      	cmp	r0, #0
 800948e:	d044      	beq.n	800951a <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8009490:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8009492:	b942      	cbnz	r2, 80094a6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8009494:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009498:	f383 8811 	msr	BASEPRI, r3
 800949c:	f3bf 8f6f 	isb	sy
 80094a0:	f3bf 8f4f 	dsb	sy
 80094a4:	e7fe      	b.n	80094a4 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80094a6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80094a8:	4299      	cmp	r1, r3
 80094aa:	bf38      	it	cc
 80094ac:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80094ae:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80094b0:	428b      	cmp	r3, r1
 80094b2:	d032      	beq.n	800951a <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80094b4:	2a01      	cmp	r2, #1
 80094b6:	d130      	bne.n	800951a <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 80094b8:	4a19      	ldr	r2, [pc, #100]	; (8009520 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 80094ba:	6812      	ldr	r2, [r2, #0]
 80094bc:	4282      	cmp	r2, r0
 80094be:	d108      	bne.n	80094d2 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80094c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094c4:	f383 8811 	msr	BASEPRI, r3
 80094c8:	f3bf 8f6f 	isb	sy
 80094cc:	f3bf 8f4f 	dsb	sy
 80094d0:	e7fe      	b.n	80094d0 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80094d2:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80094d4:	4d13      	ldr	r5, [pc, #76]	; (8009524 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 80094d6:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80094d8:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80094da:	f04f 0214 	mov.w	r2, #20
 80094de:	fb02 5303 	mla	r3, r2, r3, r5
 80094e2:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80094e4:	bfa4      	itt	ge
 80094e6:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 80094ea:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80094ec:	429a      	cmp	r2, r3
 80094ee:	d114      	bne.n	800951a <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80094f0:	1d01      	adds	r1, r0, #4
 80094f2:	4608      	mov	r0, r1
 80094f4:	9101      	str	r1, [sp, #4]
 80094f6:	f7fe fc1c 	bl	8007d32 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80094fa:	4a0b      	ldr	r2, [pc, #44]	; (8009528 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 80094fc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80094fe:	6810      	ldr	r0, [r2, #0]
 8009500:	9901      	ldr	r1, [sp, #4]
 8009502:	4283      	cmp	r3, r0
 8009504:	f04f 0014 	mov.w	r0, #20
 8009508:	fb00 5003 	mla	r0, r0, r3, r5
 800950c:	bf88      	it	hi
 800950e:	6013      	strhi	r3, [r2, #0]
	}
 8009510:	b003      	add	sp, #12
 8009512:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8009516:	f7fe bbe9 	b.w	8007cec <vListInsertEnd>
	}
 800951a:	b003      	add	sp, #12
 800951c:	bd30      	pop	{r4, r5, pc}
 800951e:	bf00      	nop
 8009520:	2000cd24 	.word	0x2000cd24
 8009524:	2000cd30 	.word	0x2000cd30
 8009528:	2000d1a4 	.word	0x2000d1a4

0800952c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800952c:	4b04      	ldr	r3, [pc, #16]	; (8009540 <pvTaskIncrementMutexHeldCount+0x14>)
 800952e:	681a      	ldr	r2, [r3, #0]
 8009530:	b11a      	cbz	r2, 800953a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8009532:	6819      	ldr	r1, [r3, #0]
 8009534:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8009536:	3201      	adds	r2, #1
 8009538:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800953a:	6818      	ldr	r0, [r3, #0]
	}
 800953c:	4770      	bx	lr
 800953e:	bf00      	nop
 8009540:	2000cd24 	.word	0x2000cd24

08009544 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8009544:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8009546:	4c11      	ldr	r4, [pc, #68]	; (800958c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8009548:	f7fe fc6c 	bl	8007e24 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800954c:	6825      	ldr	r5, [r4, #0]
 800954e:	b9bd      	cbnz	r5, 8009580 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8009550:	4f0f      	ldr	r7, [pc, #60]	; (8009590 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8009552:	4e10      	ldr	r6, [pc, #64]	; (8009594 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8009554:	4638      	mov	r0, r7
 8009556:	f7fe fbbb 	bl	8007cd0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800955a:	4630      	mov	r0, r6
 800955c:	f7fe fbb8 	bl	8007cd0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8009560:	4b0d      	ldr	r3, [pc, #52]	; (8009598 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009562:	4a0e      	ldr	r2, [pc, #56]	; (800959c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8009564:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8009566:	4b0e      	ldr	r3, [pc, #56]	; (80095a0 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8009568:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800956a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800956c:	200a      	movs	r0, #10
 800956e:	4b0d      	ldr	r3, [pc, #52]	; (80095a4 <prvCheckForValidListAndQueue+0x60>)
 8009570:	9500      	str	r5, [sp, #0]
 8009572:	f7fe fe68 	bl	8008246 <xQueueGenericCreateStatic>
 8009576:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8009578:	b110      	cbz	r0, 8009580 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800957a:	490b      	ldr	r1, [pc, #44]	; (80095a8 <prvCheckForValidListAndQueue+0x64>)
 800957c:	f7ff fa32 	bl	80089e4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8009580:	b003      	add	sp, #12
 8009582:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8009586:	f7fe bc6d 	b.w	8007e64 <vPortExitCritical>
 800958a:	bf00      	nop
 800958c:	2000d344 	.word	0x2000d344
 8009590:	2000d2c8 	.word	0x2000d2c8
 8009594:	2000d2dc 	.word	0x2000d2dc
 8009598:	2000d220 	.word	0x2000d220
 800959c:	2000d228 	.word	0x2000d228
 80095a0:	2000d224 	.word	0x2000d224
 80095a4:	2000d2f4 	.word	0x2000d2f4
 80095a8:	080206a6 	.word	0x080206a6

080095ac <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 80095ac:	4291      	cmp	r1, r2
{
 80095ae:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80095b0:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80095b2:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 80095b4:	d80a      	bhi.n	80095cc <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80095b6:	1ad2      	subs	r2, r2, r3
 80095b8:	6983      	ldr	r3, [r0, #24]
 80095ba:	429a      	cmp	r2, r3
 80095bc:	d20d      	bcs.n	80095da <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80095be:	4b08      	ldr	r3, [pc, #32]	; (80095e0 <prvInsertTimerInActiveList+0x34>)
 80095c0:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80095c2:	6818      	ldr	r0, [r3, #0]
 80095c4:	f7fe fb9e 	bl	8007d04 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 80095c8:	2000      	movs	r0, #0
}
 80095ca:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80095cc:	429a      	cmp	r2, r3
 80095ce:	d201      	bcs.n	80095d4 <prvInsertTimerInActiveList+0x28>
 80095d0:	4299      	cmp	r1, r3
 80095d2:	d202      	bcs.n	80095da <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80095d4:	4b03      	ldr	r3, [pc, #12]	; (80095e4 <prvInsertTimerInActiveList+0x38>)
 80095d6:	1d01      	adds	r1, r0, #4
 80095d8:	e7f3      	b.n	80095c2 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 80095da:	2001      	movs	r0, #1
	return xProcessTimerNow;
 80095dc:	e7f5      	b.n	80095ca <prvInsertTimerInActiveList+0x1e>
 80095de:	bf00      	nop
 80095e0:	2000d224 	.word	0x2000d224
 80095e4:	2000d220 	.word	0x2000d220

080095e8 <xTimerCreateTimerTask>:
{
 80095e8:	b510      	push	{r4, lr}
 80095ea:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 80095ec:	f7ff ffaa 	bl	8009544 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 80095f0:	4b12      	ldr	r3, [pc, #72]	; (800963c <xTimerCreateTimerTask+0x54>)
 80095f2:	681b      	ldr	r3, [r3, #0]
 80095f4:	b1b3      	cbz	r3, 8009624 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80095f6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80095f8:	aa07      	add	r2, sp, #28
 80095fa:	a906      	add	r1, sp, #24
 80095fc:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80095fe:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8009602:	f7fe fa6b 	bl	8007adc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8009606:	9b05      	ldr	r3, [sp, #20]
 8009608:	9302      	str	r3, [sp, #8]
 800960a:	9b06      	ldr	r3, [sp, #24]
 800960c:	9301      	str	r3, [sp, #4]
 800960e:	2302      	movs	r3, #2
 8009610:	9300      	str	r3, [sp, #0]
 8009612:	9a07      	ldr	r2, [sp, #28]
 8009614:	490a      	ldr	r1, [pc, #40]	; (8009640 <xTimerCreateTimerTask+0x58>)
 8009616:	480b      	ldr	r0, [pc, #44]	; (8009644 <xTimerCreateTimerTask+0x5c>)
 8009618:	4623      	mov	r3, r4
 800961a:	f7ff fbaa 	bl	8008d72 <xTaskCreateStatic>
 800961e:	4b0a      	ldr	r3, [pc, #40]	; (8009648 <xTimerCreateTimerTask+0x60>)
 8009620:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8009622:	b940      	cbnz	r0, 8009636 <xTimerCreateTimerTask+0x4e>
 8009624:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009628:	f383 8811 	msr	BASEPRI, r3
 800962c:	f3bf 8f6f 	isb	sy
 8009630:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8009634:	e7fe      	b.n	8009634 <xTimerCreateTimerTask+0x4c>
}
 8009636:	2001      	movs	r0, #1
 8009638:	b008      	add	sp, #32
 800963a:	bd10      	pop	{r4, pc}
 800963c:	2000d344 	.word	0x2000d344
 8009640:	080206ab 	.word	0x080206ab
 8009644:	08009751 	.word	0x08009751
 8009648:	2000d348 	.word	0x2000d348

0800964c <xTimerGenericCommand>:
{
 800964c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800964e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8009650:	4604      	mov	r4, r0
{
 8009652:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8009654:	b940      	cbnz	r0, 8009668 <xTimerGenericCommand+0x1c>
 8009656:	f04f 0350 	mov.w	r3, #80	; 0x50
 800965a:	f383 8811 	msr	BASEPRI, r3
 800965e:	f3bf 8f6f 	isb	sy
 8009662:	f3bf 8f4f 	dsb	sy
 8009666:	e7fe      	b.n	8009666 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8009668:	4d0d      	ldr	r5, [pc, #52]	; (80096a0 <xTimerGenericCommand+0x54>)
 800966a:	6828      	ldr	r0, [r5, #0]
 800966c:	b180      	cbz	r0, 8009690 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800966e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8009670:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8009674:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8009676:	dc0d      	bgt.n	8009694 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8009678:	f7ff fe70 	bl	800935c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800967c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800967e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8009680:	bf08      	it	eq
 8009682:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8009684:	6828      	ldr	r0, [r5, #0]
 8009686:	bf18      	it	ne
 8009688:	461a      	movne	r2, r3
 800968a:	4669      	mov	r1, sp
 800968c:	f7fe fe90 	bl	80083b0 <xQueueGenericSend>
}
 8009690:	b004      	add	sp, #16
 8009692:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8009694:	2300      	movs	r3, #0
 8009696:	4669      	mov	r1, sp
 8009698:	f7fe ff3d 	bl	8008516 <xQueueGenericSendFromISR>
 800969c:	e7f8      	b.n	8009690 <xTimerGenericCommand+0x44>
 800969e:	bf00      	nop
 80096a0:	2000d344 	.word	0x2000d344

080096a4 <prvSampleTimeNow>:
{
 80096a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 80096a8:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800974c <prvSampleTimeNow+0xa8>
{
 80096ac:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 80096ae:	f7ff fbcd 	bl	8008e4c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80096b2:	f8d8 3000 	ldr.w	r3, [r8]
 80096b6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 80096b8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80096ba:	d940      	bls.n	800973e <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80096bc:	4f21      	ldr	r7, [pc, #132]	; (8009744 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80096be:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80096c2:	683b      	ldr	r3, [r7, #0]
 80096c4:	681a      	ldr	r2, [r3, #0]
 80096c6:	b95a      	cbnz	r2, 80096e0 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 80096c8:	4a1f      	ldr	r2, [pc, #124]	; (8009748 <prvSampleTimeNow+0xa4>)
 80096ca:	6811      	ldr	r1, [r2, #0]
 80096cc:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 80096ce:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 80096d0:	2301      	movs	r3, #1
}
 80096d2:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 80096d4:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 80096d6:	f8c8 5000 	str.w	r5, [r8]
}
 80096da:	b004      	add	sp, #16
 80096dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80096e0:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80096e2:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80096e4:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80096e8:	1d21      	adds	r1, r4, #4
 80096ea:	4608      	mov	r0, r1
 80096ec:	9103      	str	r1, [sp, #12]
 80096ee:	f7fe fb20 	bl	8007d32 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80096f2:	6a23      	ldr	r3, [r4, #32]
 80096f4:	4620      	mov	r0, r4
 80096f6:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80096f8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80096fc:	9903      	ldr	r1, [sp, #12]
 80096fe:	f013 0f04 	tst.w	r3, #4
 8009702:	d0de      	beq.n	80096c2 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8009704:	69a3      	ldr	r3, [r4, #24]
 8009706:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009708:	459a      	cmp	sl, r3
 800970a:	d205      	bcs.n	8009718 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800970c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800970e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009710:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009712:	f7fe faf7 	bl	8007d04 <vListInsert>
 8009716:	e7d4      	b.n	80096c2 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009718:	2300      	movs	r3, #0
 800971a:	f8cd 9000 	str.w	r9, [sp]
 800971e:	4652      	mov	r2, sl
 8009720:	4619      	mov	r1, r3
 8009722:	4620      	mov	r0, r4
 8009724:	f7ff ff92 	bl	800964c <xTimerGenericCommand>
				configASSERT( xResult );
 8009728:	2800      	cmp	r0, #0
 800972a:	d1ca      	bne.n	80096c2 <prvSampleTimeNow+0x1e>
 800972c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009730:	f383 8811 	msr	BASEPRI, r3
 8009734:	f3bf 8f6f 	isb	sy
 8009738:	f3bf 8f4f 	dsb	sy
 800973c:	e7fe      	b.n	800973c <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800973e:	2300      	movs	r3, #0
 8009740:	e7c7      	b.n	80096d2 <prvSampleTimeNow+0x2e>
 8009742:	bf00      	nop
 8009744:	2000d220 	.word	0x2000d220
 8009748:	2000d224 	.word	0x2000d224
 800974c:	2000d2f0 	.word	0x2000d2f0

08009750 <prvTimerTask>:
{
 8009750:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009754:	4d6e      	ldr	r5, [pc, #440]	; (8009910 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009756:	4e6f      	ldr	r6, [pc, #444]	; (8009914 <prvTimerTask+0x1c4>)
{
 8009758:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800975a:	682b      	ldr	r3, [r5, #0]
 800975c:	f8d3 8000 	ldr.w	r8, [r3]
 8009760:	f1b8 0f00 	cmp.w	r8, #0
 8009764:	d035      	beq.n	80097d2 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8009766:	68db      	ldr	r3, [r3, #12]
 8009768:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800976c:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800976e:	f7ff fb65 	bl	8008e3c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009772:	a804      	add	r0, sp, #16
 8009774:	f7ff ff96 	bl	80096a4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009778:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800977a:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800977c:	2b00      	cmp	r3, #0
 800977e:	d169      	bne.n	8009854 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009780:	2c00      	cmp	r4, #0
 8009782:	d14c      	bne.n	800981e <prvTimerTask+0xce>
 8009784:	4540      	cmp	r0, r8
 8009786:	d350      	bcc.n	800982a <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009788:	f7ff fbfc 	bl	8008f84 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800978c:	682b      	ldr	r3, [r5, #0]
 800978e:	68db      	ldr	r3, [r3, #12]
 8009790:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009792:	1d38      	adds	r0, r7, #4
 8009794:	f7fe facd 	bl	8007d32 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009798:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800979c:	0758      	lsls	r0, r3, #29
 800979e:	d51a      	bpl.n	80097d6 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80097a0:	69b9      	ldr	r1, [r7, #24]
 80097a2:	4643      	mov	r3, r8
 80097a4:	464a      	mov	r2, r9
 80097a6:	4441      	add	r1, r8
 80097a8:	4638      	mov	r0, r7
 80097aa:	f7ff feff 	bl	80095ac <prvInsertTimerInActiveList>
 80097ae:	b1b0      	cbz	r0, 80097de <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80097b0:	9400      	str	r4, [sp, #0]
 80097b2:	4623      	mov	r3, r4
 80097b4:	4642      	mov	r2, r8
 80097b6:	4621      	mov	r1, r4
 80097b8:	4638      	mov	r0, r7
 80097ba:	f7ff ff47 	bl	800964c <xTimerGenericCommand>
			configASSERT( xResult );
 80097be:	b970      	cbnz	r0, 80097de <prvTimerTask+0x8e>
 80097c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097c4:	f383 8811 	msr	BASEPRI, r3
 80097c8:	f3bf 8f6f 	isb	sy
 80097cc:	f3bf 8f4f 	dsb	sy
 80097d0:	e7fe      	b.n	80097d0 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80097d2:	2401      	movs	r4, #1
 80097d4:	e7cb      	b.n	800976e <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80097d6:	f023 0301 	bic.w	r3, r3, #1
 80097da:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80097de:	6a3b      	ldr	r3, [r7, #32]
 80097e0:	4638      	mov	r0, r7
 80097e2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80097e4:	6830      	ldr	r0, [r6, #0]
 80097e6:	2200      	movs	r2, #0
 80097e8:	a904      	add	r1, sp, #16
 80097ea:	f7fe ff49 	bl	8008680 <xQueueReceive>
 80097ee:	2800      	cmp	r0, #0
 80097f0:	d0b3      	beq.n	800975a <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80097f2:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80097f4:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80097f6:	2b00      	cmp	r3, #0
 80097f8:	db2f      	blt.n	800985a <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80097fa:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80097fc:	6963      	ldr	r3, [r4, #20]
 80097fe:	2b00      	cmp	r3, #0
 8009800:	d132      	bne.n	8009868 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009802:	a803      	add	r0, sp, #12
 8009804:	f7ff ff4e 	bl	80096a4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009808:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800980a:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800980c:	2b09      	cmp	r3, #9
 800980e:	d8e9      	bhi.n	80097e4 <prvTimerTask+0x94>
 8009810:	e8df f003 	tbb	[pc, r3]
 8009814:	572e2e2e 	.word	0x572e2e2e
 8009818:	2e2e765e 	.word	0x2e2e765e
 800981c:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800981e:	4b3e      	ldr	r3, [pc, #248]	; (8009918 <prvTimerTask+0x1c8>)
 8009820:	681b      	ldr	r3, [r3, #0]
 8009822:	681c      	ldr	r4, [r3, #0]
 8009824:	fab4 f484 	clz	r4, r4
 8009828:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800982a:	6830      	ldr	r0, [r6, #0]
 800982c:	4622      	mov	r2, r4
 800982e:	eba8 0109 	sub.w	r1, r8, r9
 8009832:	f7ff f914 	bl	8008a5e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8009836:	f7ff fba5 	bl	8008f84 <xTaskResumeAll>
 800983a:	2800      	cmp	r0, #0
 800983c:	d1d2      	bne.n	80097e4 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800983e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009842:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009846:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800984a:	f3bf 8f4f 	dsb	sy
 800984e:	f3bf 8f6f 	isb	sy
 8009852:	e7c7      	b.n	80097e4 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8009854:	f7ff fb96 	bl	8008f84 <xTaskResumeAll>
}
 8009858:	e7c4      	b.n	80097e4 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800985a:	9b05      	ldr	r3, [sp, #20]
 800985c:	9907      	ldr	r1, [sp, #28]
 800985e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009860:	9b04      	ldr	r3, [sp, #16]
 8009862:	2b00      	cmp	r3, #0
 8009864:	dbbe      	blt.n	80097e4 <prvTimerTask+0x94>
 8009866:	e7c8      	b.n	80097fa <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009868:	1d20      	adds	r0, r4, #4
 800986a:	f7fe fa62 	bl	8007d32 <uxListRemove>
 800986e:	e7c8      	b.n	8009802 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009870:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009874:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009876:	f043 0301 	orr.w	r3, r3, #1
 800987a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800987e:	9b05      	ldr	r3, [sp, #20]
 8009880:	4620      	mov	r0, r4
 8009882:	4419      	add	r1, r3
 8009884:	f7ff fe92 	bl	80095ac <prvInsertTimerInActiveList>
 8009888:	2800      	cmp	r0, #0
 800988a:	d0ab      	beq.n	80097e4 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800988c:	6a23      	ldr	r3, [r4, #32]
 800988e:	4620      	mov	r0, r4
 8009890:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009892:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009896:	0759      	lsls	r1, r3, #29
 8009898:	d5a4      	bpl.n	80097e4 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800989a:	69a2      	ldr	r2, [r4, #24]
 800989c:	9905      	ldr	r1, [sp, #20]
 800989e:	2300      	movs	r3, #0
 80098a0:	440a      	add	r2, r1
 80098a2:	9300      	str	r3, [sp, #0]
 80098a4:	4619      	mov	r1, r3
 80098a6:	4620      	mov	r0, r4
 80098a8:	f7ff fed0 	bl	800964c <xTimerGenericCommand>
							configASSERT( xResult );
 80098ac:	2800      	cmp	r0, #0
 80098ae:	d199      	bne.n	80097e4 <prvTimerTask+0x94>
 80098b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098b4:	f383 8811 	msr	BASEPRI, r3
 80098b8:	f3bf 8f6f 	isb	sy
 80098bc:	f3bf 8f4f 	dsb	sy
 80098c0:	e7fe      	b.n	80098c0 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80098c2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80098c6:	f023 0301 	bic.w	r3, r3, #1
 80098ca:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80098ce:	e789      	b.n	80097e4 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80098d0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80098d4:	f043 0301 	orr.w	r3, r3, #1
 80098d8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80098dc:	9905      	ldr	r1, [sp, #20]
 80098de:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80098e0:	b941      	cbnz	r1, 80098f4 <prvTimerTask+0x1a4>
 80098e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098e6:	f383 8811 	msr	BASEPRI, r3
 80098ea:	f3bf 8f6f 	isb	sy
 80098ee:	f3bf 8f4f 	dsb	sy
 80098f2:	e7fe      	b.n	80098f2 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80098f4:	4603      	mov	r3, r0
 80098f6:	4401      	add	r1, r0
 80098f8:	4620      	mov	r0, r4
 80098fa:	f7ff fe57 	bl	80095ac <prvInsertTimerInActiveList>
					break;
 80098fe:	e771      	b.n	80097e4 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009900:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009904:	079a      	lsls	r2, r3, #30
 8009906:	d4de      	bmi.n	80098c6 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009908:	4620      	mov	r0, r4
 800990a:	f7fe f9a9 	bl	8007c60 <vPortFree>
 800990e:	e769      	b.n	80097e4 <prvTimerTask+0x94>
 8009910:	2000d220 	.word	0x2000d220
 8009914:	2000d344 	.word	0x2000d344
 8009918:	2000d224 	.word	0x2000d224

0800991c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800991c:	8880      	ldrh	r0, [r0, #4]
 800991e:	4770      	bx	lr

08009920 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009920:	2300      	movs	r3, #0
 8009922:	8083      	strh	r3, [r0, #4]
 8009924:	4770      	bx	lr
	...

08009928 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800992a:	6803      	ldr	r3, [r0, #0]
 800992c:	4605      	mov	r5, r0
 800992e:	460e      	mov	r6, r1
 8009930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009932:	2100      	movs	r1, #0
 8009934:	4798      	blx	r3
 8009936:	682b      	ldr	r3, [r5, #0]
 8009938:	4604      	mov	r4, r0
 800993a:	6a1b      	ldr	r3, [r3, #32]
 800993c:	4628      	mov	r0, r5
 800993e:	4798      	blx	r3
 8009940:	88ab      	ldrh	r3, [r5, #4]
 8009942:	1b34      	subs	r4, r6, r4
 8009944:	b2a4      	uxth	r4, r4
 8009946:	fbb4 f4f0 	udiv	r4, r4, r0
 800994a:	42a3      	cmp	r3, r4
 800994c:	d805      	bhi.n	800995a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800994e:	4b0e      	ldr	r3, [pc, #56]	; (8009988 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009950:	4a0e      	ldr	r2, [pc, #56]	; (800998c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009952:	2120      	movs	r1, #32
 8009954:	480e      	ldr	r0, [pc, #56]	; (8009990 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8009956:	f014 fb47 	bl	801dfe8 <__assert_func>
 800995a:	682b      	ldr	r3, [r5, #0]
 800995c:	2100      	movs	r1, #0
 800995e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009960:	4628      	mov	r0, r5
 8009962:	4798      	blx	r3
 8009964:	682b      	ldr	r3, [r5, #0]
 8009966:	4607      	mov	r7, r0
 8009968:	6a1b      	ldr	r3, [r3, #32]
 800996a:	4628      	mov	r0, r5
 800996c:	4798      	blx	r3
 800996e:	1bf3      	subs	r3, r6, r7
 8009970:	b29b      	uxth	r3, r3
 8009972:	fbb3 f2f0 	udiv	r2, r3, r0
 8009976:	fb02 3010 	mls	r0, r2, r0, r3
 800997a:	b118      	cbz	r0, 8009984 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800997c:	4b05      	ldr	r3, [pc, #20]	; (8009994 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800997e:	4a03      	ldr	r2, [pc, #12]	; (800998c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009980:	2121      	movs	r1, #33	; 0x21
 8009982:	e7e7      	b.n	8009954 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8009984:	4620      	mov	r0, r4
 8009986:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009988:	080206b3 	.word	0x080206b3
 800998c:	0802081e 	.word	0x0802081e
 8009990:	080206c8 	.word	0x080206c8
 8009994:	080206f6 	.word	0x080206f6

08009998 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009998:	b538      	push	{r3, r4, r5, lr}
 800999a:	6803      	ldr	r3, [r0, #0]
 800999c:	6a1b      	ldr	r3, [r3, #32]
 800999e:	460d      	mov	r5, r1
 80099a0:	4604      	mov	r4, r0
 80099a2:	4798      	blx	r3
 80099a4:	4285      	cmp	r5, r0
 80099a6:	d905      	bls.n	80099b4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 80099a8:	4b0c      	ldr	r3, [pc, #48]	; (80099dc <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 80099aa:	4a0d      	ldr	r2, [pc, #52]	; (80099e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80099ac:	2132      	movs	r1, #50	; 0x32
 80099ae:	480d      	ldr	r0, [pc, #52]	; (80099e4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 80099b0:	f014 fb1a 	bl	801dfe8 <__assert_func>
 80099b4:	6823      	ldr	r3, [r4, #0]
 80099b6:	88a5      	ldrh	r5, [r4, #4]
 80099b8:	69db      	ldr	r3, [r3, #28]
 80099ba:	4620      	mov	r0, r4
 80099bc:	4798      	blx	r3
 80099be:	4285      	cmp	r5, r0
 80099c0:	d303      	bcc.n	80099ca <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 80099c2:	4b09      	ldr	r3, [pc, #36]	; (80099e8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 80099c4:	4a06      	ldr	r2, [pc, #24]	; (80099e0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 80099c6:	2133      	movs	r1, #51	; 0x33
 80099c8:	e7f1      	b.n	80099ae <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 80099ca:	6823      	ldr	r3, [r4, #0]
 80099cc:	88a1      	ldrh	r1, [r4, #4]
 80099ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80099d0:	4620      	mov	r0, r4
 80099d2:	4798      	blx	r3
 80099d4:	88a3      	ldrh	r3, [r4, #4]
 80099d6:	3301      	adds	r3, #1
 80099d8:	80a3      	strh	r3, [r4, #4]
 80099da:	bd38      	pop	{r3, r4, r5, pc}
 80099dc:	08020770 	.word	0x08020770
 80099e0:	08020861 	.word	0x08020861
 80099e4:	080206c8 	.word	0x080206c8
 80099e8:	08020787 	.word	0x08020787

080099ec <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80099ec:	b570      	push	{r4, r5, r6, lr}
 80099ee:	6803      	ldr	r3, [r0, #0]
 80099f0:	6a1b      	ldr	r3, [r3, #32]
 80099f2:	4616      	mov	r6, r2
 80099f4:	4604      	mov	r4, r0
 80099f6:	460d      	mov	r5, r1
 80099f8:	4798      	blx	r3
 80099fa:	4286      	cmp	r6, r0
 80099fc:	d905      	bls.n	8009a0a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80099fe:	4b06      	ldr	r3, [pc, #24]	; (8009a18 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8009a00:	4a06      	ldr	r2, [pc, #24]	; (8009a1c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8009a02:	4807      	ldr	r0, [pc, #28]	; (8009a20 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8009a04:	213c      	movs	r1, #60	; 0x3c
 8009a06:	f014 faef 	bl	801dfe8 <__assert_func>
 8009a0a:	6823      	ldr	r3, [r4, #0]
 8009a0c:	4629      	mov	r1, r5
 8009a0e:	4620      	mov	r0, r4
 8009a10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a16:	4718      	bx	r3
 8009a18:	08020770 	.word	0x08020770
 8009a1c:	080207d4 	.word	0x080207d4
 8009a20:	080206c8 	.word	0x080206c8

08009a24 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009a24:	4770      	bx	lr
	...

08009a28 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009a28:	4a02      	ldr	r2, [pc, #8]	; (8009a34 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009a2a:	6002      	str	r2, [r0, #0]
 8009a2c:	2200      	movs	r2, #0
 8009a2e:	8082      	strh	r2, [r0, #4]
 8009a30:	4770      	bx	lr
 8009a32:	bf00      	nop
 8009a34:	080207a8 	.word	0x080207a8

08009a38 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009a38:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009a3a:	2000      	movs	r0, #0
 8009a3c:	b12b      	cbz	r3, 8009a4a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009a3e:	b920      	cbnz	r0, 8009a4a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009a40:	1a5a      	subs	r2, r3, r1
 8009a42:	4250      	negs	r0, r2
 8009a44:	4150      	adcs	r0, r2
 8009a46:	699b      	ldr	r3, [r3, #24]
 8009a48:	e7f8      	b.n	8009a3c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009a4a:	4770      	bx	lr

08009a4c <_ZN8touchgfx9Container9removeAllEv>:
 8009a4c:	2200      	movs	r2, #0
 8009a4e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009a50:	b123      	cbz	r3, 8009a5c <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009a52:	6999      	ldr	r1, [r3, #24]
 8009a54:	6281      	str	r1, [r0, #40]	; 0x28
 8009a56:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009a5a:	e7f8      	b.n	8009a4e <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009a5c:	4770      	bx	lr

08009a5e <_ZN8touchgfx9Container6unlinkEv>:
 8009a5e:	2300      	movs	r3, #0
 8009a60:	6283      	str	r3, [r0, #40]	; 0x28
 8009a62:	4770      	bx	lr

08009a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a68:	461f      	mov	r7, r3
 8009a6a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009a6e:	460d      	mov	r5, r1
 8009a70:	4616      	mov	r6, r2
 8009a72:	b103      	cbz	r3, 8009a76 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009a74:	6038      	str	r0, [r7, #0]
 8009a76:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009a78:	b314      	cbz	r4, 8009ac0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009a7a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009a7e:	b1eb      	cbz	r3, 8009abc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a80:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009a84:	428d      	cmp	r5, r1
 8009a86:	db19      	blt.n	8009abc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a88:	8923      	ldrh	r3, [r4, #8]
 8009a8a:	b289      	uxth	r1, r1
 8009a8c:	440b      	add	r3, r1
 8009a8e:	b21b      	sxth	r3, r3
 8009a90:	429d      	cmp	r5, r3
 8009a92:	da13      	bge.n	8009abc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a94:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009a98:	4296      	cmp	r6, r2
 8009a9a:	db0f      	blt.n	8009abc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009a9c:	8963      	ldrh	r3, [r4, #10]
 8009a9e:	b292      	uxth	r2, r2
 8009aa0:	4413      	add	r3, r2
 8009aa2:	b21b      	sxth	r3, r3
 8009aa4:	429e      	cmp	r6, r3
 8009aa6:	da09      	bge.n	8009abc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009aa8:	6823      	ldr	r3, [r4, #0]
 8009aaa:	1ab2      	subs	r2, r6, r2
 8009aac:	1a69      	subs	r1, r5, r1
 8009aae:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8009ab2:	b212      	sxth	r2, r2
 8009ab4:	463b      	mov	r3, r7
 8009ab6:	b209      	sxth	r1, r1
 8009ab8:	4620      	mov	r0, r4
 8009aba:	47c0      	blx	r8
 8009abc:	69a4      	ldr	r4, [r4, #24]
 8009abe:	e7db      	b.n	8009a78 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8009ac0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009ac4 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8009ac4:	2200      	movs	r2, #0
 8009ac6:	8002      	strh	r2, [r0, #0]
 8009ac8:	8042      	strh	r2, [r0, #2]
 8009aca:	8082      	strh	r2, [r0, #4]
 8009acc:	80c2      	strh	r2, [r0, #6]
 8009ace:	4770      	bx	lr

08009ad0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009ad0:	b570      	push	{r4, r5, r6, lr}
 8009ad2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009ad4:	460d      	mov	r5, r1
 8009ad6:	4616      	mov	r6, r2
 8009ad8:	b13c      	cbz	r4, 8009aea <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8009ada:	6823      	ldr	r3, [r4, #0]
 8009adc:	4620      	mov	r0, r4
 8009ade:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009ae0:	4632      	mov	r2, r6
 8009ae2:	4629      	mov	r1, r5
 8009ae4:	4798      	blx	r3
 8009ae6:	69a4      	ldr	r4, [r4, #24]
 8009ae8:	e7f6      	b.n	8009ad8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8009aea:	bd70      	pop	{r4, r5, r6, pc}

08009aec <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8009aec:	b538      	push	{r3, r4, r5, lr}
 8009aee:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009af0:	460d      	mov	r5, r1
 8009af2:	b134      	cbz	r4, 8009b02 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009af4:	682b      	ldr	r3, [r5, #0]
 8009af6:	4621      	mov	r1, r4
 8009af8:	689b      	ldr	r3, [r3, #8]
 8009afa:	4628      	mov	r0, r5
 8009afc:	4798      	blx	r3
 8009afe:	69a4      	ldr	r4, [r4, #24]
 8009b00:	e7f7      	b.n	8009af2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009b02:	bd38      	pop	{r3, r4, r5, pc}

08009b04 <_ZN8touchgfx9ContainerD1Ev>:
 8009b04:	4770      	bx	lr

08009b06 <_ZN8touchgfx9ContainerD0Ev>:
 8009b06:	b510      	push	{r4, lr}
 8009b08:	212c      	movs	r1, #44	; 0x2c
 8009b0a:	4604      	mov	r4, r0
 8009b0c:	f014 fa3d 	bl	801df8a <_ZdlPvj>
 8009b10:	4620      	mov	r0, r4
 8009b12:	bd10      	pop	{r4, pc}

08009b14 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009b14:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009b16:	b19b      	cbz	r3, 8009b40 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009b18:	428b      	cmp	r3, r1
 8009b1a:	d109      	bne.n	8009b30 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009b1c:	699a      	ldr	r2, [r3, #24]
 8009b1e:	2100      	movs	r1, #0
 8009b20:	6159      	str	r1, [r3, #20]
 8009b22:	6282      	str	r2, [r0, #40]	; 0x28
 8009b24:	b902      	cbnz	r2, 8009b28 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009b26:	4770      	bx	lr
 8009b28:	6199      	str	r1, [r3, #24]
 8009b2a:	4770      	bx	lr
 8009b2c:	4613      	mov	r3, r2
 8009b2e:	b13a      	cbz	r2, 8009b40 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009b30:	699a      	ldr	r2, [r3, #24]
 8009b32:	428a      	cmp	r2, r1
 8009b34:	d1fa      	bne.n	8009b2c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009b36:	698a      	ldr	r2, [r1, #24]
 8009b38:	619a      	str	r2, [r3, #24]
 8009b3a:	2300      	movs	r3, #0
 8009b3c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009b40:	4770      	bx	lr

08009b42 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009b42:	b410      	push	{r4}
 8009b44:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009b46:	4604      	mov	r4, r0
 8009b48:	b92b      	cbnz	r3, 8009b56 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009b4a:	6803      	ldr	r3, [r0, #0]
 8009b4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009b50:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009b52:	4611      	mov	r1, r2
 8009b54:	4718      	bx	r3
 8009b56:	b941      	cbnz	r1, 8009b6a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009b58:	6193      	str	r3, [r2, #24]
 8009b5a:	6282      	str	r2, [r0, #40]	; 0x28
 8009b5c:	6154      	str	r4, [r2, #20]
 8009b5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009b62:	4770      	bx	lr
 8009b64:	4603      	mov	r3, r0
 8009b66:	2800      	cmp	r0, #0
 8009b68:	d0f9      	beq.n	8009b5e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009b6a:	4299      	cmp	r1, r3
 8009b6c:	6998      	ldr	r0, [r3, #24]
 8009b6e:	d1f9      	bne.n	8009b64 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009b70:	6190      	str	r0, [r2, #24]
 8009b72:	618a      	str	r2, [r1, #24]
 8009b74:	e7f2      	b.n	8009b5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009b78 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009b78:	4288      	cmp	r0, r1
 8009b7a:	b508      	push	{r3, lr}
 8009b7c:	d105      	bne.n	8009b8a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009b7e:	4b11      	ldr	r3, [pc, #68]	; (8009bc4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009b80:	4a11      	ldr	r2, [pc, #68]	; (8009bc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009b82:	2123      	movs	r1, #35	; 0x23
 8009b84:	4811      	ldr	r0, [pc, #68]	; (8009bcc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8009b86:	f014 fa2f 	bl	801dfe8 <__assert_func>
 8009b8a:	694b      	ldr	r3, [r1, #20]
 8009b8c:	b11b      	cbz	r3, 8009b96 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009b8e:	4b10      	ldr	r3, [pc, #64]	; (8009bd0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009b90:	4a0d      	ldr	r2, [pc, #52]	; (8009bc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009b92:	2124      	movs	r1, #36	; 0x24
 8009b94:	e7f6      	b.n	8009b84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009b96:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8009b9a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009b9c:	b913      	cbnz	r3, 8009ba4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009b9e:	6281      	str	r1, [r0, #40]	; 0x28
 8009ba0:	bd08      	pop	{r3, pc}
 8009ba2:	4613      	mov	r3, r2
 8009ba4:	699a      	ldr	r2, [r3, #24]
 8009ba6:	b12a      	cbz	r2, 8009bb4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8009ba8:	428b      	cmp	r3, r1
 8009baa:	d1fa      	bne.n	8009ba2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8009bac:	4b09      	ldr	r3, [pc, #36]	; (8009bd4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009bae:	4a06      	ldr	r2, [pc, #24]	; (8009bc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009bb0:	2135      	movs	r1, #53	; 0x35
 8009bb2:	e7e7      	b.n	8009b84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009bb4:	428b      	cmp	r3, r1
 8009bb6:	d103      	bne.n	8009bc0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8009bb8:	4b06      	ldr	r3, [pc, #24]	; (8009bd4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8009bba:	4a03      	ldr	r2, [pc, #12]	; (8009bc8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8009bbc:	2138      	movs	r1, #56	; 0x38
 8009bbe:	e7e1      	b.n	8009b84 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8009bc0:	6199      	str	r1, [r3, #24]
 8009bc2:	e7ed      	b.n	8009ba0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8009bc4:	0802089f 	.word	0x0802089f
 8009bc8:	080209f0 	.word	0x080209f0
 8009bcc:	080208cb 	.word	0x080208cb
 8009bd0:	080208fe 	.word	0x080208fe
 8009bd4:	08020934 	.word	0x08020934

08009bd8 <_ZN8touchgfx4RectaNERKS0_>:
 8009bd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bdc:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009be0:	888c      	ldrh	r4, [r1, #4]
 8009be2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009be6:	443c      	add	r4, r7
 8009be8:	b2a4      	uxth	r4, r4
 8009bea:	fa0f f884 	sxth.w	r8, r4
 8009bee:	45c1      	cmp	r9, r8
 8009bf0:	da2f      	bge.n	8009c52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009bf2:	8882      	ldrh	r2, [r0, #4]
 8009bf4:	444a      	add	r2, r9
 8009bf6:	b292      	uxth	r2, r2
 8009bf8:	fa0f fe82 	sxth.w	lr, r2
 8009bfc:	4577      	cmp	r7, lr
 8009bfe:	da28      	bge.n	8009c52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009c00:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009c04:	88cb      	ldrh	r3, [r1, #6]
 8009c06:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009c0a:	442b      	add	r3, r5
 8009c0c:	b21b      	sxth	r3, r3
 8009c0e:	429e      	cmp	r6, r3
 8009c10:	da1f      	bge.n	8009c52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009c12:	88c3      	ldrh	r3, [r0, #6]
 8009c14:	4433      	add	r3, r6
 8009c16:	b29b      	uxth	r3, r3
 8009c18:	fa0f fc83 	sxth.w	ip, r3
 8009c1c:	4565      	cmp	r5, ip
 8009c1e:	da18      	bge.n	8009c52 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009c20:	454f      	cmp	r7, r9
 8009c22:	bfb8      	it	lt
 8009c24:	464f      	movlt	r7, r9
 8009c26:	42b5      	cmp	r5, r6
 8009c28:	bfb8      	it	lt
 8009c2a:	4635      	movlt	r5, r6
 8009c2c:	45f0      	cmp	r8, lr
 8009c2e:	bfd8      	it	le
 8009c30:	4622      	movle	r2, r4
 8009c32:	1bd2      	subs	r2, r2, r7
 8009c34:	8082      	strh	r2, [r0, #4]
 8009c36:	884a      	ldrh	r2, [r1, #2]
 8009c38:	88c9      	ldrh	r1, [r1, #6]
 8009c3a:	8007      	strh	r7, [r0, #0]
 8009c3c:	440a      	add	r2, r1
 8009c3e:	b292      	uxth	r2, r2
 8009c40:	b211      	sxth	r1, r2
 8009c42:	458c      	cmp	ip, r1
 8009c44:	bfa8      	it	ge
 8009c46:	4613      	movge	r3, r2
 8009c48:	1b5b      	subs	r3, r3, r5
 8009c4a:	80c3      	strh	r3, [r0, #6]
 8009c4c:	8045      	strh	r5, [r0, #2]
 8009c4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009c52:	2300      	movs	r3, #0
 8009c54:	8003      	strh	r3, [r0, #0]
 8009c56:	8043      	strh	r3, [r0, #2]
 8009c58:	8083      	strh	r3, [r0, #4]
 8009c5a:	80c3      	strh	r3, [r0, #6]
 8009c5c:	e7f7      	b.n	8009c4e <_ZN8touchgfx4RectaNERKS0_+0x76>

08009c5e <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009c5e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009c62:	2b00      	cmp	r3, #0
 8009c64:	dd06      	ble.n	8009c74 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009c66:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009c6a:	2800      	cmp	r0, #0
 8009c6c:	bfcc      	ite	gt
 8009c6e:	2000      	movgt	r0, #0
 8009c70:	2001      	movle	r0, #1
 8009c72:	4770      	bx	lr
 8009c74:	2001      	movs	r0, #1
 8009c76:	4770      	bx	lr

08009c78 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009c78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c7c:	2300      	movs	r3, #0
 8009c7e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009c80:	8003      	strh	r3, [r0, #0]
 8009c82:	4604      	mov	r4, r0
 8009c84:	8043      	strh	r3, [r0, #2]
 8009c86:	8083      	strh	r3, [r0, #4]
 8009c88:	80c3      	strh	r3, [r0, #6]
 8009c8a:	2d00      	cmp	r5, #0
 8009c8c:	d040      	beq.n	8009d10 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009c8e:	1d28      	adds	r0, r5, #4
 8009c90:	f7ff ffe5 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c94:	b988      	cbnz	r0, 8009cba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009c96:	4620      	mov	r0, r4
 8009c98:	f7ff ffe1 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009c9c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009ca0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8009ca4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009ca8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009cac:	b138      	cbz	r0, 8009cbe <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009cae:	8022      	strh	r2, [r4, #0]
 8009cb0:	8063      	strh	r3, [r4, #2]
 8009cb2:	f8a4 e004 	strh.w	lr, [r4, #4]
 8009cb6:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009cba:	69ad      	ldr	r5, [r5, #24]
 8009cbc:	e7e5      	b.n	8009c8a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009cbe:	f9b4 0000 	ldrsh.w	r0, [r4]
 8009cc2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8009cc6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009cca:	4290      	cmp	r0, r2
 8009ccc:	4607      	mov	r7, r0
 8009cce:	bfa8      	it	ge
 8009cd0:	4617      	movge	r7, r2
 8009cd2:	4472      	add	r2, lr
 8009cd4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009cd8:	8027      	strh	r7, [r4, #0]
 8009cda:	4299      	cmp	r1, r3
 8009cdc:	460e      	mov	r6, r1
 8009cde:	4440      	add	r0, r8
 8009ce0:	bfa8      	it	ge
 8009ce2:	461e      	movge	r6, r3
 8009ce4:	4471      	add	r1, lr
 8009ce6:	4463      	add	r3, ip
 8009ce8:	b200      	sxth	r0, r0
 8009cea:	b212      	sxth	r2, r2
 8009cec:	b209      	sxth	r1, r1
 8009cee:	b21b      	sxth	r3, r3
 8009cf0:	4290      	cmp	r0, r2
 8009cf2:	bfac      	ite	ge
 8009cf4:	ebc7 0200 	rsbge	r2, r7, r0
 8009cf8:	ebc7 0202 	rsblt	r2, r7, r2
 8009cfc:	4299      	cmp	r1, r3
 8009cfe:	bfac      	ite	ge
 8009d00:	ebc6 0301 	rsbge	r3, r6, r1
 8009d04:	ebc6 0303 	rsblt	r3, r6, r3
 8009d08:	8066      	strh	r6, [r4, #2]
 8009d0a:	80a2      	strh	r2, [r4, #4]
 8009d0c:	80e3      	strh	r3, [r4, #6]
 8009d0e:	e7d4      	b.n	8009cba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009d10:	4620      	mov	r0, r4
 8009d12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009d16 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009d16:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009d1a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009d1e:	b383      	cbz	r3, 8009d82 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009d20:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009d22:	b374      	cbz	r4, 8009d82 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009d24:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009d28:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009d2c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009d30:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009d34:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009d38:	b303      	cbz	r3, 8009d7c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009d3a:	4668      	mov	r0, sp
 8009d3c:	1d21      	adds	r1, r4, #4
 8009d3e:	f8ad 5000 	strh.w	r5, [sp]
 8009d42:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009d46:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009d4a:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009d4e:	f7ff ff43 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 8009d52:	4668      	mov	r0, sp
 8009d54:	f7ff ff83 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009d58:	b980      	cbnz	r0, 8009d7c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009d5a:	f8bd 3000 	ldrh.w	r3, [sp]
 8009d5e:	88a2      	ldrh	r2, [r4, #4]
 8009d60:	1a9b      	subs	r3, r3, r2
 8009d62:	f8ad 3000 	strh.w	r3, [sp]
 8009d66:	88e2      	ldrh	r2, [r4, #6]
 8009d68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009d6c:	1a9b      	subs	r3, r3, r2
 8009d6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009d72:	6823      	ldr	r3, [r4, #0]
 8009d74:	4669      	mov	r1, sp
 8009d76:	689b      	ldr	r3, [r3, #8]
 8009d78:	4620      	mov	r0, r4
 8009d7a:	4798      	blx	r3
 8009d7c:	69a4      	ldr	r4, [r4, #24]
 8009d7e:	2c00      	cmp	r4, #0
 8009d80:	d1d8      	bne.n	8009d34 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8009d82:	b002      	add	sp, #8
 8009d84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009d88 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009d88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009d8a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009d8e:	460d      	mov	r5, r1
 8009d90:	4616      	mov	r6, r2
 8009d92:	b323      	cbz	r3, 8009dde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009d94:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009d96:	b314      	cbz	r4, 8009dde <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009d98:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009d9c:	b1eb      	cbz	r3, 8009dda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009d9e:	6828      	ldr	r0, [r5, #0]
 8009da0:	6869      	ldr	r1, [r5, #4]
 8009da2:	466b      	mov	r3, sp
 8009da4:	c303      	stmia	r3!, {r0, r1}
 8009da6:	4668      	mov	r0, sp
 8009da8:	1d21      	adds	r1, r4, #4
 8009daa:	f7ff ff15 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 8009dae:	4668      	mov	r0, sp
 8009db0:	f7ff ff55 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009db4:	b988      	cbnz	r0, 8009dda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009db6:	f8bd 3000 	ldrh.w	r3, [sp]
 8009dba:	88a2      	ldrh	r2, [r4, #4]
 8009dbc:	1a9b      	subs	r3, r3, r2
 8009dbe:	f8ad 3000 	strh.w	r3, [sp]
 8009dc2:	88e2      	ldrh	r2, [r4, #6]
 8009dc4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009dc8:	1a9b      	subs	r3, r3, r2
 8009dca:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009dce:	6823      	ldr	r3, [r4, #0]
 8009dd0:	4632      	mov	r2, r6
 8009dd2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009dd4:	4669      	mov	r1, sp
 8009dd6:	4620      	mov	r0, r4
 8009dd8:	4798      	blx	r3
 8009dda:	69a4      	ldr	r4, [r4, #24]
 8009ddc:	e7db      	b.n	8009d96 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8009dde:	b002      	add	sp, #8
 8009de0:	bd70      	pop	{r4, r5, r6, pc}

08009de2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009de2:	b513      	push	{r0, r1, r4, lr}
 8009de4:	6803      	ldr	r3, [r0, #0]
 8009de6:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8009dea:	2300      	movs	r3, #0
 8009dec:	e9cd 3300 	strd	r3, r3, [sp]
 8009df0:	466b      	mov	r3, sp
 8009df2:	47a0      	blx	r4
 8009df4:	b002      	add	sp, #8
 8009df6:	bd10      	pop	{r4, pc}

08009df8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009df8:	2301      	movs	r3, #1
 8009dfa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009dfe:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009e02:	4770      	bx	lr

08009e04 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009e04:	2301      	movs	r3, #1
 8009e06:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009e0a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009e0e:	4770      	bx	lr

08009e10 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009e10:	6843      	ldr	r3, [r0, #4]
 8009e12:	2201      	movs	r2, #1
 8009e14:	725a      	strb	r2, [r3, #9]
 8009e16:	6840      	ldr	r0, [r0, #4]
 8009e18:	6803      	ldr	r3, [r0, #0]
 8009e1a:	691b      	ldr	r3, [r3, #16]
 8009e1c:	4718      	bx	r3

08009e1e <_ZN8touchgfx3HAL8flushDMAEv>:
 8009e1e:	6840      	ldr	r0, [r0, #4]
 8009e20:	6803      	ldr	r3, [r0, #0]
 8009e22:	689b      	ldr	r3, [r3, #8]
 8009e24:	4718      	bx	r3
	...

08009e28 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009e28:	4b04      	ldr	r3, [pc, #16]	; (8009e3c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009e2a:	781b      	ldrb	r3, [r3, #0]
 8009e2c:	b123      	cbz	r3, 8009e38 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009e2e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009e32:	f080 0001 	eor.w	r0, r0, #1
 8009e36:	4770      	bx	lr
 8009e38:	2001      	movs	r0, #1
 8009e3a:	4770      	bx	lr
 8009e3c:	2000d356 	.word	0x2000d356

08009e40 <_ZN8touchgfx3HAL8endFrameEv>:
 8009e40:	b510      	push	{r4, lr}
 8009e42:	4604      	mov	r4, r0
 8009e44:	6840      	ldr	r0, [r0, #4]
 8009e46:	6803      	ldr	r3, [r0, #0]
 8009e48:	689b      	ldr	r3, [r3, #8]
 8009e4a:	4798      	blx	r3
 8009e4c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009e50:	b113      	cbz	r3, 8009e58 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009e52:	2301      	movs	r3, #1
 8009e54:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009e58:	bd10      	pop	{r4, pc}
	...

08009e5c <_ZN8touchgfx3HAL4tickEv>:
 8009e5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009e5e:	6803      	ldr	r3, [r0, #0]
 8009e60:	4d5c      	ldr	r5, [pc, #368]	; (8009fd4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009e62:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009e66:	4604      	mov	r4, r0
 8009e68:	4798      	blx	r3
 8009e6a:	2800      	cmp	r0, #0
 8009e6c:	f000 8097 	beq.w	8009f9e <_ZN8touchgfx3HAL4tickEv+0x142>
 8009e70:	2001      	movs	r0, #1
 8009e72:	f7f6 fc75 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009e76:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009e7a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009e7e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8009e82:	2600      	movs	r6, #0
 8009e84:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009e88:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009e8c:	b133      	cbz	r3, 8009e9c <_ZN8touchgfx3HAL4tickEv+0x40>
 8009e8e:	6823      	ldr	r3, [r4, #0]
 8009e90:	4620      	mov	r0, r4
 8009e92:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009e96:	4798      	blx	r3
 8009e98:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009e9c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009ea0:	6862      	ldr	r2, [r4, #4]
 8009ea2:	f083 0301 	eor.w	r3, r3, #1
 8009ea6:	7253      	strb	r3, [r2, #9]
 8009ea8:	2601      	movs	r6, #1
 8009eaa:	702e      	strb	r6, [r5, #0]
 8009eac:	f004 f86e 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 8009eb0:	6803      	ldr	r3, [r0, #0]
 8009eb2:	4631      	mov	r1, r6
 8009eb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009eb6:	4798      	blx	r3
 8009eb8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009ebc:	b90b      	cbnz	r3, 8009ec2 <_ZN8touchgfx3HAL4tickEv+0x66>
 8009ebe:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8009ec2:	f004 f863 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 8009ec6:	6803      	ldr	r3, [r0, #0]
 8009ec8:	695b      	ldr	r3, [r3, #20]
 8009eca:	4798      	blx	r3
 8009ecc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009ece:	6803      	ldr	r3, [r0, #0]
 8009ed0:	691b      	ldr	r3, [r3, #16]
 8009ed2:	4798      	blx	r3
 8009ed4:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009ed8:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009edc:	3b01      	subs	r3, #1
 8009ede:	b2db      	uxtb	r3, r3
 8009ee0:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009ee4:	b10a      	cbz	r2, 8009eea <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009ee6:	2b00      	cmp	r3, #0
 8009ee8:	d1eb      	bne.n	8009ec2 <_ZN8touchgfx3HAL4tickEv+0x66>
 8009eea:	4a3b      	ldr	r2, [pc, #236]	; (8009fd8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009eec:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009ef0:	7813      	ldrb	r3, [r2, #0]
 8009ef2:	3301      	adds	r3, #1
 8009ef4:	b25b      	sxtb	r3, r3
 8009ef6:	4299      	cmp	r1, r3
 8009ef8:	7013      	strb	r3, [r2, #0]
 8009efa:	dc10      	bgt.n	8009f1e <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009efc:	68e0      	ldr	r0, [r4, #12]
 8009efe:	2300      	movs	r3, #0
 8009f00:	7013      	strb	r3, [r2, #0]
 8009f02:	6803      	ldr	r3, [r0, #0]
 8009f04:	aa03      	add	r2, sp, #12
 8009f06:	68db      	ldr	r3, [r3, #12]
 8009f08:	a902      	add	r1, sp, #8
 8009f0a:	4798      	blx	r3
 8009f0c:	6823      	ldr	r3, [r4, #0]
 8009f0e:	2800      	cmp	r0, #0
 8009f10:	d051      	beq.n	8009fb6 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009f12:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8009f16:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009f1a:	4620      	mov	r0, r4
 8009f1c:	4798      	blx	r3
 8009f1e:	6960      	ldr	r0, [r4, #20]
 8009f20:	2300      	movs	r3, #0
 8009f22:	f88d 3007 	strb.w	r3, [sp, #7]
 8009f26:	b158      	cbz	r0, 8009f40 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009f28:	6803      	ldr	r3, [r0, #0]
 8009f2a:	f10d 0107 	add.w	r1, sp, #7
 8009f2e:	68db      	ldr	r3, [r3, #12]
 8009f30:	4798      	blx	r3
 8009f32:	b128      	cbz	r0, 8009f40 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009f34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009f36:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009f3a:	6803      	ldr	r3, [r0, #0]
 8009f3c:	68db      	ldr	r3, [r3, #12]
 8009f3e:	4798      	blx	r3
 8009f40:	f104 001c 	add.w	r0, r4, #28
 8009f44:	f012 fb42 	bl	801c5cc <_ZN8touchgfx8Gestures4tickEv>
 8009f48:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009f4c:	b30b      	cbz	r3, 8009f92 <_ZN8touchgfx3HAL4tickEv+0x136>
 8009f4e:	6920      	ldr	r0, [r4, #16]
 8009f50:	6803      	ldr	r3, [r0, #0]
 8009f52:	691b      	ldr	r3, [r3, #16]
 8009f54:	4798      	blx	r3
 8009f56:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009f58:	4606      	mov	r6, r0
 8009f5a:	b903      	cbnz	r3, 8009f5e <_ZN8touchgfx3HAL4tickEv+0x102>
 8009f5c:	6720      	str	r0, [r4, #112]	; 0x70
 8009f5e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009f60:	4a1e      	ldr	r2, [pc, #120]	; (8009fdc <_ZN8touchgfx3HAL4tickEv+0x180>)
 8009f62:	1af3      	subs	r3, r6, r3
 8009f64:	4293      	cmp	r3, r2
 8009f66:	d914      	bls.n	8009f92 <_ZN8touchgfx3HAL4tickEv+0x136>
 8009f68:	6920      	ldr	r0, [r4, #16]
 8009f6a:	6803      	ldr	r3, [r0, #0]
 8009f6c:	699b      	ldr	r3, [r3, #24]
 8009f6e:	4798      	blx	r3
 8009f70:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009f72:	2264      	movs	r2, #100	; 0x64
 8009f74:	1af3      	subs	r3, r6, r3
 8009f76:	fbb3 f3f2 	udiv	r3, r3, r2
 8009f7a:	fbb0 f0f3 	udiv	r0, r0, r3
 8009f7e:	2800      	cmp	r0, #0
 8009f80:	dc1e      	bgt.n	8009fc0 <_ZN8touchgfx3HAL4tickEv+0x164>
 8009f82:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8009f86:	6920      	ldr	r0, [r4, #16]
 8009f88:	6803      	ldr	r3, [r0, #0]
 8009f8a:	2100      	movs	r1, #0
 8009f8c:	69db      	ldr	r3, [r3, #28]
 8009f8e:	4798      	blx	r3
 8009f90:	6726      	str	r6, [r4, #112]	; 0x70
 8009f92:	f003 fffb 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 8009f96:	6803      	ldr	r3, [r0, #0]
 8009f98:	2100      	movs	r1, #0
 8009f9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f9c:	4798      	blx	r3
 8009f9e:	6823      	ldr	r3, [r4, #0]
 8009fa0:	4620      	mov	r0, r4
 8009fa2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8009fa6:	4798      	blx	r3
 8009fa8:	2001      	movs	r0, #1
 8009faa:	f7f6 fbf5 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009fae:	2300      	movs	r3, #0
 8009fb0:	702b      	strb	r3, [r5, #0]
 8009fb2:	b004      	add	sp, #16
 8009fb4:	bd70      	pop	{r4, r5, r6, pc}
 8009fb6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8009fba:	4620      	mov	r0, r4
 8009fbc:	4798      	blx	r3
 8009fbe:	e7ae      	b.n	8009f1e <_ZN8touchgfx3HAL4tickEv+0xc2>
 8009fc0:	2863      	cmp	r0, #99	; 0x63
 8009fc2:	bfcb      	itete	gt
 8009fc4:	2300      	movgt	r3, #0
 8009fc6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8009fca:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009fce:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009fd2:	e7d8      	b.n	8009f86 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009fd4:	2000d35c 	.word	0x2000d35c
 8009fd8:	2000d35d 	.word	0x2000d35d
 8009fdc:	05f5e100 	.word	0x05f5e100

08009fe0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009fe0:	f7f6 be74 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009fe4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009fe4:	6581      	str	r1, [r0, #88]	; 0x58
 8009fe6:	301c      	adds	r0, #28
 8009fe8:	f012 baee 	b.w	801c5c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009fec <_ZN8touchgfx3HAL5touchEll>:
 8009fec:	b530      	push	{r4, r5, lr}
 8009fee:	b087      	sub	sp, #28
 8009ff0:	4604      	mov	r4, r0
 8009ff2:	a804      	add	r0, sp, #16
 8009ff4:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009ff8:	f003 fd6c 	bl	800dad4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009ffc:	9b04      	ldr	r3, [sp, #16]
 8009ffe:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a002:	a906      	add	r1, sp, #24
 800a004:	9b05      	ldr	r3, [sp, #20]
 800a006:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a00a:	a803      	add	r0, sp, #12
 800a00c:	f003 fda0 	bl	800db50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a010:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a014:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a018:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a01c:	f104 001c 	add.w	r0, r4, #28
 800a020:	b189      	cbz	r1, 800a046 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a022:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a026:	9300      	str	r3, [sp, #0]
 800a028:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a02c:	4613      	mov	r3, r2
 800a02e:	462a      	mov	r2, r5
 800a030:	f012 fada 	bl	801c5e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a034:	b128      	cbz	r0, 800a042 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a036:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a03a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a03c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a040:	6623      	str	r3, [r4, #96]	; 0x60
 800a042:	b007      	add	sp, #28
 800a044:	bd30      	pop	{r4, r5, pc}
 800a046:	f012 fb13 	bl	801c670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a04a:	2301      	movs	r3, #1
 800a04c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a050:	e7f1      	b.n	800a036 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a052 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a052:	b570      	push	{r4, r5, r6, lr}
 800a054:	2b00      	cmp	r3, #0
 800a056:	d050      	beq.n	800a0fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a058:	ea81 0002 	eor.w	r0, r1, r2
 800a05c:	07c6      	lsls	r6, r0, #31
 800a05e:	d508      	bpl.n	800a072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a060:	3a01      	subs	r2, #1
 800a062:	18cc      	adds	r4, r1, r3
 800a064:	42a1      	cmp	r1, r4
 800a066:	d048      	beq.n	800a0fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a068:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a06c:	f801 0b01 	strb.w	r0, [r1], #1
 800a070:	e7f8      	b.n	800a064 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a072:	07d5      	lsls	r5, r2, #31
 800a074:	bf42      	ittt	mi
 800a076:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a07a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a07e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a082:	2b01      	cmp	r3, #1
 800a084:	d915      	bls.n	800a0b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a086:	ea82 0001 	eor.w	r0, r2, r1
 800a08a:	0784      	lsls	r4, r0, #30
 800a08c:	d02d      	beq.n	800a0ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800a08e:	1e94      	subs	r4, r2, #2
 800a090:	4608      	mov	r0, r1
 800a092:	18ce      	adds	r6, r1, r3
 800a094:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800a098:	f820 5b02 	strh.w	r5, [r0], #2
 800a09c:	1a35      	subs	r5, r6, r0
 800a09e:	2d01      	cmp	r5, #1
 800a0a0:	d8f8      	bhi.n	800a094 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800a0a2:	1e98      	subs	r0, r3, #2
 800a0a4:	f020 0001 	bic.w	r0, r0, #1
 800a0a8:	3002      	adds	r0, #2
 800a0aa:	4401      	add	r1, r0
 800a0ac:	4402      	add	r2, r0
 800a0ae:	f003 0301 	and.w	r3, r3, #1
 800a0b2:	1f14      	subs	r4, r2, #4
 800a0b4:	4608      	mov	r0, r1
 800a0b6:	18ce      	adds	r6, r1, r3
 800a0b8:	1a35      	subs	r5, r6, r0
 800a0ba:	2d03      	cmp	r5, #3
 800a0bc:	d810      	bhi.n	800a0e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800a0be:	089c      	lsrs	r4, r3, #2
 800a0c0:	00a0      	lsls	r0, r4, #2
 800a0c2:	4401      	add	r1, r0
 800a0c4:	3801      	subs	r0, #1
 800a0c6:	4402      	add	r2, r0
 800a0c8:	f06f 0003 	mvn.w	r0, #3
 800a0cc:	fb00 3404 	mla	r4, r0, r4, r3
 800a0d0:	440c      	add	r4, r1
 800a0d2:	42a1      	cmp	r1, r4
 800a0d4:	d011      	beq.n	800a0fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a0d6:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800a0da:	f801 3b01 	strb.w	r3, [r1], #1
 800a0de:	e7f8      	b.n	800a0d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800a0e0:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800a0e4:	f840 5b04 	str.w	r5, [r0], #4
 800a0e8:	e7e6      	b.n	800a0b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800a0ea:	0790      	lsls	r0, r2, #30
 800a0ec:	d0e1      	beq.n	800a0b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a0ee:	f832 0b02 	ldrh.w	r0, [r2], #2
 800a0f2:	f821 0b02 	strh.w	r0, [r1], #2
 800a0f6:	3b02      	subs	r3, #2
 800a0f8:	e7db      	b.n	800a0b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a0fa:	2001      	movs	r0, #1
 800a0fc:	bd70      	pop	{r4, r5, r6, pc}

0800a0fe <_ZN8touchgfx3HAL7noTouchEv>:
 800a0fe:	b510      	push	{r4, lr}
 800a100:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800a104:	4604      	mov	r4, r0
 800a106:	b153      	cbz	r3, 800a11e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800a108:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800a10c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800a110:	2101      	movs	r1, #1
 800a112:	301c      	adds	r0, #28
 800a114:	f012 faac 	bl	801c670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a118:	2300      	movs	r3, #0
 800a11a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a11e:	bd10      	pop	{r4, pc}

0800a120 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800a120:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a124:	4604      	mov	r4, r0
 800a126:	6980      	ldr	r0, [r0, #24]
 800a128:	b085      	sub	sp, #20
 800a12a:	460f      	mov	r7, r1
 800a12c:	4690      	mov	r8, r2
 800a12e:	4699      	mov	r9, r3
 800a130:	b930      	cbnz	r0, 800a140 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800a132:	4b1c      	ldr	r3, [pc, #112]	; (800a1a4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800a134:	4a1c      	ldr	r2, [pc, #112]	; (800a1a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800a136:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800a13a:	481c      	ldr	r0, [pc, #112]	; (800a1ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800a13c:	f013 ff54 	bl	801dfe8 <__assert_func>
 800a140:	ad04      	add	r5, sp, #16
 800a142:	2600      	movs	r6, #0
 800a144:	f845 6d04 	str.w	r6, [r5, #-4]!
 800a148:	6806      	ldr	r6, [r0, #0]
 800a14a:	9501      	str	r5, [sp, #4]
 800a14c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800a150:	9500      	str	r5, [sp, #0]
 800a152:	6835      	ldr	r5, [r6, #0]
 800a154:	47a8      	blx	r5
 800a156:	4d16      	ldr	r5, [pc, #88]	; (800a1b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800a158:	4606      	mov	r6, r0
 800a15a:	f8a5 9000 	strh.w	r9, [r5]
 800a15e:	f7f6 fe45 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a162:	6803      	ldr	r3, [r0, #0]
 800a164:	6a1b      	ldr	r3, [r3, #32]
 800a166:	4798      	blx	r3
 800a168:	2801      	cmp	r0, #1
 800a16a:	d012      	beq.n	800a192 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800a16c:	d306      	bcc.n	800a17c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800a16e:	280d      	cmp	r0, #13
 800a170:	d80b      	bhi.n	800a18a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800a172:	4b10      	ldr	r3, [pc, #64]	; (800a1b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800a174:	4a0c      	ldr	r2, [pc, #48]	; (800a1a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800a176:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800a17a:	e7de      	b.n	800a13a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800a17c:	882b      	ldrh	r3, [r5, #0]
 800a17e:	fb08 7203 	mla	r2, r8, r3, r7
 800a182:	9b03      	ldr	r3, [sp, #12]
 800a184:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a188:	63e3      	str	r3, [r4, #60]	; 0x3c
 800a18a:	4630      	mov	r0, r6
 800a18c:	b005      	add	sp, #20
 800a18e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a192:	882a      	ldrh	r2, [r5, #0]
 800a194:	9b03      	ldr	r3, [sp, #12]
 800a196:	fb08 7202 	mla	r2, r8, r2, r7
 800a19a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800a19e:	1a9a      	subs	r2, r3, r2
 800a1a0:	63e2      	str	r2, [r4, #60]	; 0x3c
 800a1a2:	e7f2      	b.n	800a18a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800a1a4:	08020a99 	.word	0x08020a99
 800a1a8:	08020cf3 	.word	0x08020cf3
 800a1ac:	08020ade 	.word	0x08020ade
 800a1b0:	2000d352 	.word	0x2000d352
 800a1b4:	08020b04 	.word	0x08020b04

0800a1b8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800a1b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a1bc:	4698      	mov	r8, r3
 800a1be:	6803      	ldr	r3, [r0, #0]
 800a1c0:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800a1c2:	4b0f      	ldr	r3, [pc, #60]	; (800a200 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800a1c4:	b087      	sub	sp, #28
 800a1c6:	f8b3 9000 	ldrh.w	r9, [r3]
 800a1ca:	460e      	mov	r6, r1
 800a1cc:	4617      	mov	r7, r2
 800a1ce:	4604      	mov	r4, r0
 800a1d0:	f7f6 fe0c 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a1d4:	6803      	ldr	r3, [r0, #0]
 800a1d6:	6a1b      	ldr	r3, [r3, #32]
 800a1d8:	4798      	blx	r3
 800a1da:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800a1de:	9302      	str	r3, [sp, #8]
 800a1e0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800a1e4:	9301      	str	r3, [sp, #4]
 800a1e6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800a1ea:	9300      	str	r3, [sp, #0]
 800a1ec:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800a1f0:	4643      	mov	r3, r8
 800a1f2:	463a      	mov	r2, r7
 800a1f4:	4631      	mov	r1, r6
 800a1f6:	4620      	mov	r0, r4
 800a1f8:	47a8      	blx	r5
 800a1fa:	b007      	add	sp, #28
 800a1fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a200:	2000d352 	.word	0x2000d352

0800a204 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800a204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a208:	4604      	mov	r4, r0
 800a20a:	b08b      	sub	sp, #44	; 0x2c
 800a20c:	4610      	mov	r0, r2
 800a20e:	460d      	mov	r5, r1
 800a210:	4691      	mov	r9, r2
 800a212:	461e      	mov	r6, r3
 800a214:	f006 fbe8 	bl	80109e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a218:	2800      	cmp	r0, #0
 800a21a:	f000 80a0 	beq.w	800a35e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800a21e:	6823      	ldr	r3, [r4, #0]
 800a220:	f8df b170 	ldr.w	fp, [pc, #368]	; 800a394 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 800a224:	6a1b      	ldr	r3, [r3, #32]
 800a226:	f8df a170 	ldr.w	sl, [pc, #368]	; 800a398 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 800a22a:	4620      	mov	r0, r4
 800a22c:	4798      	blx	r3
 800a22e:	6823      	ldr	r3, [r4, #0]
 800a230:	4620      	mov	r0, r4
 800a232:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a234:	4798      	blx	r3
 800a236:	f8bb 3000 	ldrh.w	r3, [fp]
 800a23a:	9301      	str	r3, [sp, #4]
 800a23c:	f8ba 3000 	ldrh.w	r3, [sl]
 800a240:	9302      	str	r3, [sp, #8]
 800a242:	4b51      	ldr	r3, [pc, #324]	; (800a388 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800a244:	881a      	ldrh	r2, [r3, #0]
 800a246:	9203      	str	r2, [sp, #12]
 800a248:	4a50      	ldr	r2, [pc, #320]	; (800a38c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800a24a:	8812      	ldrh	r2, [r2, #0]
 800a24c:	9204      	str	r2, [sp, #16]
 800a24e:	af0a      	add	r7, sp, #40	; 0x28
 800a250:	4a4f      	ldr	r2, [pc, #316]	; (800a390 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 800a252:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 800a256:	7812      	ldrb	r2, [r2, #0]
 800a258:	4698      	mov	r8, r3
 800a25a:	4638      	mov	r0, r7
 800a25c:	2a00      	cmp	r2, #0
 800a25e:	f040 8081 	bne.w	800a364 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 800a262:	f006 fc7b 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a266:	f8ab 0000 	strh.w	r0, [fp]
 800a26a:	4638      	mov	r0, r7
 800a26c:	f006 fcb0 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a270:	f8aa 0000 	strh.w	r0, [sl]
 800a274:	4638      	mov	r0, r7
 800a276:	f006 fc71 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a27a:	f8a8 0000 	strh.w	r0, [r8]
 800a27e:	4638      	mov	r0, r7
 800a280:	f006 fca6 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a284:	4b41      	ldr	r3, [pc, #260]	; (800a38c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800a286:	8018      	strh	r0, [r3, #0]
 800a288:	4648      	mov	r0, r9
 800a28a:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800a28e:	f006 fbab 	bl	80109e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800a292:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800a296:	2200      	movs	r2, #0
 800a298:	4611      	mov	r1, r2
 800a29a:	4628      	mov	r0, r5
 800a29c:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800a2a0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800a2a4:	f7f8 fa73 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
 800a2a8:	2301      	movs	r3, #1
 800a2aa:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800a2ae:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800a2b2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800a2b6:	2b00      	cmp	r3, #0
 800a2b8:	dd5c      	ble.n	800a374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800a2ba:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800a2be:	2b00      	cmp	r3, #0
 800a2c0:	dd58      	ble.n	800a374 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800a2c2:	462a      	mov	r2, r5
 800a2c4:	ab08      	add	r3, sp, #32
 800a2c6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a2ca:	6851      	ldr	r1, [r2, #4]
 800a2cc:	c303      	stmia	r3!, {r0, r1}
 800a2ce:	4631      	mov	r1, r6
 800a2d0:	a808      	add	r0, sp, #32
 800a2d2:	f7ff fc81 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800a2d6:	a807      	add	r0, sp, #28
 800a2d8:	f006 fdd2 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a2dc:	4606      	mov	r6, r0
 800a2de:	f7f6 fd85 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a2e2:	6803      	ldr	r3, [r0, #0]
 800a2e4:	6a1b      	ldr	r3, [r3, #32]
 800a2e6:	4798      	blx	r3
 800a2e8:	4286      	cmp	r6, r0
 800a2ea:	d04a      	beq.n	800a382 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 800a2ec:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a2ee:	b150      	cbz	r0, 800a306 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800a2f0:	a807      	add	r0, sp, #28
 800a2f2:	f006 fdc5 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800a2f6:	4606      	mov	r6, r0
 800a2f8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800a2fa:	6803      	ldr	r3, [r0, #0]
 800a2fc:	6a1b      	ldr	r3, [r3, #32]
 800a2fe:	4798      	blx	r3
 800a300:	1a33      	subs	r3, r6, r0
 800a302:	4258      	negs	r0, r3
 800a304:	4158      	adcs	r0, r3
 800a306:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800a30a:	2600      	movs	r6, #0
 800a30c:	682a      	ldr	r2, [r5, #0]
 800a30e:	696b      	ldr	r3, [r5, #20]
 800a310:	616e      	str	r6, [r5, #20]
 800a312:	9305      	str	r3, [sp, #20]
 800a314:	6892      	ldr	r2, [r2, #8]
 800a316:	a908      	add	r1, sp, #32
 800a318:	4628      	mov	r0, r5
 800a31a:	4790      	blx	r2
 800a31c:	9b05      	ldr	r3, [sp, #20]
 800a31e:	616b      	str	r3, [r5, #20]
 800a320:	4652      	mov	r2, sl
 800a322:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800a326:	4649      	mov	r1, r9
 800a328:	4628      	mov	r0, r5
 800a32a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800a32e:	f7f8 fa2e 	bl	800278e <_ZN8touchgfx8Drawable5setXYEss>
 800a332:	4b18      	ldr	r3, [pc, #96]	; (800a394 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 800a334:	9a01      	ldr	r2, [sp, #4]
 800a336:	801a      	strh	r2, [r3, #0]
 800a338:	4b17      	ldr	r3, [pc, #92]	; (800a398 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 800a33a:	9a02      	ldr	r2, [sp, #8]
 800a33c:	801a      	strh	r2, [r3, #0]
 800a33e:	4b12      	ldr	r3, [pc, #72]	; (800a388 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800a340:	9a03      	ldr	r2, [sp, #12]
 800a342:	801a      	strh	r2, [r3, #0]
 800a344:	4b11      	ldr	r3, [pc, #68]	; (800a38c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800a346:	9a04      	ldr	r2, [sp, #16]
 800a348:	801a      	strh	r2, [r3, #0]
 800a34a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800a34e:	6823      	ldr	r3, [r4, #0]
 800a350:	4620      	mov	r0, r4
 800a352:	6a1b      	ldr	r3, [r3, #32]
 800a354:	4798      	blx	r3
 800a356:	6823      	ldr	r3, [r4, #0]
 800a358:	4620      	mov	r0, r4
 800a35a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a35c:	4798      	blx	r3
 800a35e:	b00b      	add	sp, #44	; 0x2c
 800a360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a364:	f006 fc34 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a368:	f8ab 0000 	strh.w	r0, [fp]
 800a36c:	4638      	mov	r0, r7
 800a36e:	f006 fbf5 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a372:	e77d      	b.n	800a270 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 800a374:	462a      	mov	r2, r5
 800a376:	ab08      	add	r3, sp, #32
 800a378:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800a37c:	6851      	ldr	r1, [r2, #4]
 800a37e:	c303      	stmia	r3!, {r0, r1}
 800a380:	e7a9      	b.n	800a2d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 800a382:	2000      	movs	r0, #0
 800a384:	e7bf      	b.n	800a306 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800a386:	bf00      	nop
 800a388:	2000d34c 	.word	0x2000d34c
 800a38c:	2000d34e 	.word	0x2000d34e
 800a390:	2000d350 	.word	0x2000d350
 800a394:	2000d352 	.word	0x2000d352
 800a398:	2000d354 	.word	0x2000d354

0800a39c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800a39c:	b510      	push	{r4, lr}
 800a39e:	4b07      	ldr	r3, [pc, #28]	; (800a3bc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800a3a0:	781b      	ldrb	r3, [r3, #0]
 800a3a2:	4604      	mov	r4, r0
 800a3a4:	b13b      	cbz	r3, 800a3b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a3a6:	6803      	ldr	r3, [r0, #0]
 800a3a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3aa:	4798      	blx	r3
 800a3ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a3ae:	4283      	cmp	r3, r0
 800a3b0:	d101      	bne.n	800a3b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800a3b2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800a3b4:	bd10      	pop	{r4, pc}
 800a3b6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800a3b8:	e7fc      	b.n	800a3b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800a3ba:	bf00      	nop
 800a3bc:	2000d356 	.word	0x2000d356

0800a3c0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a3c0:	b510      	push	{r4, lr}
 800a3c2:	4b0b      	ldr	r3, [pc, #44]	; (800a3f0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800a3c4:	781b      	ldrb	r3, [r3, #0]
 800a3c6:	4604      	mov	r4, r0
 800a3c8:	b95b      	cbnz	r3, 800a3e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a3ca:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a3ce:	2b02      	cmp	r3, #2
 800a3d0:	d007      	beq.n	800a3e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a3d2:	6840      	ldr	r0, [r0, #4]
 800a3d4:	f000 fbea 	bl	800abac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a3d8:	b118      	cbz	r0, 800a3e2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a3da:	6862      	ldr	r2, [r4, #4]
 800a3dc:	7a53      	ldrb	r3, [r2, #9]
 800a3de:	2b00      	cmp	r3, #0
 800a3e0:	d0fc      	beq.n	800a3dc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a3e2:	f7f6 fc6b 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a3e6:	4620      	mov	r0, r4
 800a3e8:	f7ff ffd8 	bl	800a39c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a3ec:	bd10      	pop	{r4, pc}
 800a3ee:	bf00      	nop
 800a3f0:	2000d356 	.word	0x2000d356

0800a3f4 <_ZN8touchgfx3HAL10initializeEv>:
 800a3f4:	b510      	push	{r4, lr}
 800a3f6:	4604      	mov	r4, r0
 800a3f8:	f7f6 fc38 	bl	8000c6c <_ZN8touchgfx10OSWrappers10initializeEv>
 800a3fc:	6860      	ldr	r0, [r4, #4]
 800a3fe:	6803      	ldr	r3, [r0, #0]
 800a400:	68db      	ldr	r3, [r3, #12]
 800a402:	4798      	blx	r3
 800a404:	68e0      	ldr	r0, [r4, #12]
 800a406:	6803      	ldr	r3, [r0, #0]
 800a408:	689b      	ldr	r3, [r3, #8]
 800a40a:	4798      	blx	r3
 800a40c:	6823      	ldr	r3, [r4, #0]
 800a40e:	4620      	mov	r0, r4
 800a410:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a412:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a416:	4718      	bx	r3

0800a418 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800a418:	b508      	push	{r3, lr}
 800a41a:	290d      	cmp	r1, #13
 800a41c:	d817      	bhi.n	800a44e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800a41e:	e8df f001 	tbb	[pc, r1]
 800a422:	090b      	.short	0x090b
 800a424:	0d0d0d07 	.word	0x0d0d0d07
 800a428:	1414140d 	.word	0x1414140d
 800a42c:	0d0d1414 	.word	0x0d0d1414
 800a430:	2020      	movs	r0, #32
 800a432:	bd08      	pop	{r3, pc}
 800a434:	2018      	movs	r0, #24
 800a436:	e7fc      	b.n	800a432 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a438:	2010      	movs	r0, #16
 800a43a:	e7fa      	b.n	800a432 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a43c:	4b05      	ldr	r3, [pc, #20]	; (800a454 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800a43e:	4a06      	ldr	r2, [pc, #24]	; (800a458 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800a440:	4806      	ldr	r0, [pc, #24]	; (800a45c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800a442:	f44f 7111 	mov.w	r1, #580	; 0x244
 800a446:	f013 fdcf 	bl	801dfe8 <__assert_func>
 800a44a:	2008      	movs	r0, #8
 800a44c:	e7f1      	b.n	800a432 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a44e:	2000      	movs	r0, #0
 800a450:	e7ef      	b.n	800a432 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800a452:	bf00      	nop
 800a454:	08020bd7 	.word	0x08020bd7
 800a458:	08020eb5 	.word	0x08020eb5
 800a45c:	08020ade 	.word	0x08020ade

0800a460 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800a460:	b570      	push	{r4, r5, r6, lr}
 800a462:	460d      	mov	r5, r1
 800a464:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800a468:	4616      	mov	r6, r2
 800a46a:	461c      	mov	r4, r3
 800a46c:	f7ff ffd4 	bl	800a418 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800a470:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800a474:	10c0      	asrs	r0, r0, #3
 800a476:	fb06 5101 	mla	r1, r6, r1, r5
 800a47a:	fb00 4001 	mla	r0, r0, r1, r4
 800a47e:	bd70      	pop	{r4, r5, r6, pc}

0800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800a480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a484:	b08a      	sub	sp, #40	; 0x28
 800a486:	f04f 0c00 	mov.w	ip, #0
 800a48a:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800a48e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800a492:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800a496:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800a49a:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800a49e:	f8cd c020 	str.w	ip, [sp, #32]
 800a4a2:	f1b8 0f02 	cmp.w	r8, #2
 800a4a6:	4604      	mov	r4, r0
 800a4a8:	469a      	mov	sl, r3
 800a4aa:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800a4ae:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a4b2:	d030      	beq.n	800a516 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800a4b4:	2bff      	cmp	r3, #255	; 0xff
 800a4b6:	d12c      	bne.n	800a512 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800a4b8:	4560      	cmp	r0, ip
 800a4ba:	bf14      	ite	ne
 800a4bc:	2004      	movne	r0, #4
 800a4be:	2001      	moveq	r0, #1
 800a4c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a4c4:	9204      	str	r2, [sp, #16]
 800a4c6:	4620      	mov	r0, r4
 800a4c8:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800a4cc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800a4d0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a4d4:	f8ad 6018 	strh.w	r6, [sp, #24]
 800a4d8:	f8ad 501a 	strh.w	r5, [sp, #26]
 800a4dc:	f7ff ff5e 	bl	800a39c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a4e0:	e9cd 9700 	strd	r9, r7, [sp]
 800a4e4:	4603      	mov	r3, r0
 800a4e6:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800a4ea:	4651      	mov	r1, sl
 800a4ec:	4620      	mov	r0, r4
 800a4ee:	f7ff ffb7 	bl	800a460 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a4f2:	f8ad 901e 	strh.w	r9, [sp, #30]
 800a4f6:	9005      	str	r0, [sp, #20]
 800a4f8:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800a4fc:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800a500:	b106      	cbz	r6, 800a504 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800a502:	b98d      	cbnz	r5, 800a528 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800a504:	4b12      	ldr	r3, [pc, #72]	; (800a550 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800a506:	4a13      	ldr	r2, [pc, #76]	; (800a554 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800a508:	f240 11c3 	movw	r1, #451	; 0x1c3
 800a50c:	4812      	ldr	r0, [pc, #72]	; (800a558 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800a50e:	f013 fd6b 	bl	801dfe8 <__assert_func>
 800a512:	2004      	movs	r0, #4
 800a514:	e7d4      	b.n	800a4c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800a516:	2bff      	cmp	r3, #255	; 0xff
 800a518:	d104      	bne.n	800a524 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800a51a:	2800      	cmp	r0, #0
 800a51c:	bf14      	ite	ne
 800a51e:	2040      	movne	r0, #64	; 0x40
 800a520:	2020      	moveq	r0, #32
 800a522:	e7cd      	b.n	800a4c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800a524:	2040      	movs	r0, #64	; 0x40
 800a526:	e7cb      	b.n	800a4c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800a528:	6823      	ldr	r3, [r4, #0]
 800a52a:	9d02      	ldr	r5, [sp, #8]
 800a52c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a52e:	4620      	mov	r0, r4
 800a530:	4798      	blx	r3
 800a532:	4228      	tst	r0, r5
 800a534:	d104      	bne.n	800a540 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800a536:	4b09      	ldr	r3, [pc, #36]	; (800a55c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800a538:	4a06      	ldr	r2, [pc, #24]	; (800a554 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800a53a:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 800a53e:	e7e5      	b.n	800a50c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800a540:	6860      	ldr	r0, [r4, #4]
 800a542:	6803      	ldr	r3, [r0, #0]
 800a544:	a902      	add	r1, sp, #8
 800a546:	685b      	ldr	r3, [r3, #4]
 800a548:	4798      	blx	r3
 800a54a:	b00a      	add	sp, #40	; 0x28
 800a54c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a550:	08020b5a 	.word	0x08020b5a
 800a554:	08020d57 	.word	0x08020d57
 800a558:	08020ade 	.word	0x08020ade
 800a55c:	08020b92 	.word	0x08020b92

0800a560 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800a560:	b510      	push	{r4, lr}
 800a562:	b08a      	sub	sp, #40	; 0x28
 800a564:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800a568:	9408      	str	r4, [sp, #32]
 800a56a:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800a56e:	9407      	str	r4, [sp, #28]
 800a570:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800a574:	9406      	str	r4, [sp, #24]
 800a576:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800a57a:	9405      	str	r4, [sp, #20]
 800a57c:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800a580:	9404      	str	r4, [sp, #16]
 800a582:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800a586:	9403      	str	r4, [sp, #12]
 800a588:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800a58c:	9402      	str	r4, [sp, #8]
 800a58e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800a592:	e9cd 3400 	strd	r3, r4, [sp]
 800a596:	4613      	mov	r3, r2
 800a598:	2200      	movs	r2, #0
 800a59a:	f7ff ff71 	bl	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a59e:	b00a      	add	sp, #40	; 0x28
 800a5a0:	bd10      	pop	{r4, pc}
	...

0800a5a4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800a5a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a5a6:	b08b      	sub	sp, #44	; 0x2c
 800a5a8:	4616      	mov	r6, r2
 800a5aa:	460d      	mov	r5, r1
 800a5ac:	461f      	mov	r7, r3
 800a5ae:	4604      	mov	r4, r0
 800a5b0:	f7f6 fc1c 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a5b4:	6803      	ldr	r3, [r0, #0]
 800a5b6:	6a1b      	ldr	r3, [r3, #32]
 800a5b8:	4798      	blx	r3
 800a5ba:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800a5be:	4b0d      	ldr	r3, [pc, #52]	; (800a5f4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800a5c0:	881b      	ldrh	r3, [r3, #0]
 800a5c2:	9306      	str	r3, [sp, #24]
 800a5c4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a5c8:	9305      	str	r3, [sp, #20]
 800a5ca:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a5ce:	9304      	str	r3, [sp, #16]
 800a5d0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a5d4:	9303      	str	r3, [sp, #12]
 800a5d6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a5da:	9302      	str	r3, [sp, #8]
 800a5dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a5e0:	2200      	movs	r2, #0
 800a5e2:	e9cd 7300 	strd	r7, r3, [sp]
 800a5e6:	4629      	mov	r1, r5
 800a5e8:	4633      	mov	r3, r6
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	f7ff ff48 	bl	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a5f0:	b00b      	add	sp, #44	; 0x2c
 800a5f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5f4:	2000d352 	.word	0x2000d352

0800a5f8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800a5f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5fc:	461f      	mov	r7, r3
 800a5fe:	4b14      	ldr	r3, [pc, #80]	; (800a650 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800a600:	b08a      	sub	sp, #40	; 0x28
 800a602:	4616      	mov	r6, r2
 800a604:	f8b3 8000 	ldrh.w	r8, [r3]
 800a608:	460d      	mov	r5, r1
 800a60a:	4604      	mov	r4, r0
 800a60c:	f7f6 fbee 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a610:	6803      	ldr	r3, [r0, #0]
 800a612:	6a1b      	ldr	r3, [r3, #32]
 800a614:	4798      	blx	r3
 800a616:	2302      	movs	r3, #2
 800a618:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800a61c:	2301      	movs	r3, #1
 800a61e:	9305      	str	r3, [sp, #20]
 800a620:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800a624:	9304      	str	r3, [sp, #16]
 800a626:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a62a:	9303      	str	r3, [sp, #12]
 800a62c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a630:	9302      	str	r3, [sp, #8]
 800a632:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a636:	9008      	str	r0, [sp, #32]
 800a638:	e9cd 7300 	strd	r7, r3, [sp]
 800a63c:	2200      	movs	r2, #0
 800a63e:	4633      	mov	r3, r6
 800a640:	4629      	mov	r1, r5
 800a642:	4620      	mov	r0, r4
 800a644:	f7ff ff1c 	bl	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800a648:	b00a      	add	sp, #40	; 0x28
 800a64a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a64e:	bf00      	nop
 800a650:	2000d352 	.word	0x2000d352

0800a654 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800a654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a658:	b08b      	sub	sp, #44	; 0x2c
 800a65a:	469b      	mov	fp, r3
 800a65c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800a660:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800a664:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800a668:	2fff      	cmp	r7, #255	; 0xff
 800a66a:	bf14      	ite	ne
 800a66c:	2308      	movne	r3, #8
 800a66e:	2302      	moveq	r3, #2
 800a670:	2600      	movs	r6, #0
 800a672:	4604      	mov	r4, r0
 800a674:	4689      	mov	r9, r1
 800a676:	4692      	mov	sl, r2
 800a678:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800a67c:	9608      	str	r6, [sp, #32]
 800a67e:	f7ff fe8d 	bl	800a39c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a682:	e9cd 8500 	strd	r8, r5, [sp]
 800a686:	4603      	mov	r3, r0
 800a688:	465a      	mov	r2, fp
 800a68a:	4651      	mov	r1, sl
 800a68c:	4620      	mov	r0, r4
 800a68e:	f7ff fee7 	bl	800a460 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a692:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a696:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a69a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a69e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a6a2:	6823      	ldr	r3, [r4, #0]
 800a6a4:	9005      	str	r0, [sp, #20]
 800a6a6:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800a6aa:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800a6ae:	f8ad 601c 	strh.w	r6, [sp, #28]
 800a6b2:	f8ad 801e 	strh.w	r8, [sp, #30]
 800a6b6:	f8cd 9020 	str.w	r9, [sp, #32]
 800a6ba:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800a6be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a6c0:	9d02      	ldr	r5, [sp, #8]
 800a6c2:	4620      	mov	r0, r4
 800a6c4:	4798      	blx	r3
 800a6c6:	4228      	tst	r0, r5
 800a6c8:	d106      	bne.n	800a6d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800a6ca:	4b07      	ldr	r3, [pc, #28]	; (800a6e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800a6cc:	4a07      	ldr	r2, [pc, #28]	; (800a6ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800a6ce:	4808      	ldr	r0, [pc, #32]	; (800a6f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800a6d0:	f240 11fb 	movw	r1, #507	; 0x1fb
 800a6d4:	f013 fc88 	bl	801dfe8 <__assert_func>
 800a6d8:	6860      	ldr	r0, [r4, #4]
 800a6da:	6803      	ldr	r3, [r0, #0]
 800a6dc:	a902      	add	r1, sp, #8
 800a6de:	685b      	ldr	r3, [r3, #4]
 800a6e0:	4798      	blx	r3
 800a6e2:	b00b      	add	sp, #44	; 0x2c
 800a6e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6e8:	08020b92 	.word	0x08020b92
 800a6ec:	08020e20 	.word	0x08020e20
 800a6f0:	08020ade 	.word	0x08020ade

0800a6f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a6f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a6f8:	461f      	mov	r7, r3
 800a6fa:	4b0b      	ldr	r3, [pc, #44]	; (800a728 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a6fc:	460d      	mov	r5, r1
 800a6fe:	f8b3 8000 	ldrh.w	r8, [r3]
 800a702:	4616      	mov	r6, r2
 800a704:	4604      	mov	r4, r0
 800a706:	f7f6 fb71 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a70a:	6803      	ldr	r3, [r0, #0]
 800a70c:	6a1b      	ldr	r3, [r3, #32]
 800a70e:	4798      	blx	r3
 800a710:	463b      	mov	r3, r7
 800a712:	e9cd 8000 	strd	r8, r0, [sp]
 800a716:	4632      	mov	r2, r6
 800a718:	4629      	mov	r1, r5
 800a71a:	4620      	mov	r0, r4
 800a71c:	f7ff fea0 	bl	800a460 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800a720:	b002      	add	sp, #8
 800a722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a726:	bf00      	nop
 800a728:	2000d352 	.word	0x2000d352

0800a72c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800a72c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a730:	b088      	sub	sp, #32
 800a732:	4698      	mov	r8, r3
 800a734:	2300      	movs	r3, #0
 800a736:	9306      	str	r3, [sp, #24]
 800a738:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800a73c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800a740:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800a744:	f8ad 6010 	strh.w	r6, [sp, #16]
 800a748:	e9cd 3100 	strd	r3, r1, [sp]
 800a74c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a750:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a754:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800a758:	f88d 301c 	strb.w	r3, [sp, #28]
 800a75c:	4617      	mov	r7, r2
 800a75e:	4604      	mov	r4, r0
 800a760:	f8ad 5012 	strh.w	r5, [sp, #18]
 800a764:	f7ff fe1a 	bl	800a39c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a768:	4642      	mov	r2, r8
 800a76a:	4603      	mov	r3, r0
 800a76c:	4639      	mov	r1, r7
 800a76e:	4620      	mov	r0, r4
 800a770:	f7ff ffc0 	bl	800a6f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a774:	4b16      	ldr	r3, [pc, #88]	; (800a7d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800a776:	9003      	str	r0, [sp, #12]
 800a778:	881b      	ldrh	r3, [r3, #0]
 800a77a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a77e:	f7f6 fb35 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a782:	6803      	ldr	r3, [r0, #0]
 800a784:	6a1b      	ldr	r3, [r3, #32]
 800a786:	4798      	blx	r3
 800a788:	f88d 001e 	strb.w	r0, [sp, #30]
 800a78c:	f88d 001d 	strb.w	r0, [sp, #29]
 800a790:	b106      	cbz	r6, 800a794 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800a792:	b935      	cbnz	r5, 800a7a2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800a794:	4b0f      	ldr	r3, [pc, #60]	; (800a7d4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800a796:	4a10      	ldr	r2, [pc, #64]	; (800a7d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a798:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800a79c:	480f      	ldr	r0, [pc, #60]	; (800a7dc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800a79e:	f013 fc23 	bl	801dfe8 <__assert_func>
 800a7a2:	6823      	ldr	r3, [r4, #0]
 800a7a4:	9d00      	ldr	r5, [sp, #0]
 800a7a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a7a8:	4620      	mov	r0, r4
 800a7aa:	4798      	blx	r3
 800a7ac:	4228      	tst	r0, r5
 800a7ae:	d104      	bne.n	800a7ba <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800a7b0:	4b0b      	ldr	r3, [pc, #44]	; (800a7e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800a7b2:	4a09      	ldr	r2, [pc, #36]	; (800a7d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800a7b4:	f240 11e1 	movw	r1, #481	; 0x1e1
 800a7b8:	e7f0      	b.n	800a79c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800a7ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a7bc:	6860      	ldr	r0, [r4, #4]
 800a7be:	9306      	str	r3, [sp, #24]
 800a7c0:	6803      	ldr	r3, [r0, #0]
 800a7c2:	4669      	mov	r1, sp
 800a7c4:	685b      	ldr	r3, [r3, #4]
 800a7c6:	4798      	blx	r3
 800a7c8:	b008      	add	sp, #32
 800a7ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a7ce:	bf00      	nop
 800a7d0:	2000d352 	.word	0x2000d352
 800a7d4:	08020b5a 	.word	0x08020b5a
 800a7d8:	08020c09 	.word	0x08020c09
 800a7dc:	08020ade 	.word	0x08020ade
 800a7e0:	08020b92 	.word	0x08020b92

0800a7e4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a7e4:	b570      	push	{r4, r5, r6, lr}
 800a7e6:	b08a      	sub	sp, #40	; 0x28
 800a7e8:	466b      	mov	r3, sp
 800a7ea:	e883 0006 	stmia.w	r3, {r1, r2}
 800a7ee:	4b20      	ldr	r3, [pc, #128]	; (800a870 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800a7f0:	781b      	ldrb	r3, [r3, #0]
 800a7f2:	4604      	mov	r4, r0
 800a7f4:	b933      	cbnz	r3, 800a804 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800a7f6:	4b1f      	ldr	r3, [pc, #124]	; (800a874 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800a7f8:	4a1f      	ldr	r2, [pc, #124]	; (800a878 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800a7fa:	4820      	ldr	r0, [pc, #128]	; (800a87c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800a7fc:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800a800:	f013 fbf2 	bl	801dfe8 <__assert_func>
 800a804:	2300      	movs	r3, #0
 800a806:	9308      	str	r3, [sp, #32]
 800a808:	2301      	movs	r3, #1
 800a80a:	9302      	str	r3, [sp, #8]
 800a80c:	6803      	ldr	r3, [r0, #0]
 800a80e:	f8bd 5000 	ldrh.w	r5, [sp]
 800a812:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a814:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800a818:	4798      	blx	r3
 800a81a:	4632      	mov	r2, r6
 800a81c:	4629      	mov	r1, r5
 800a81e:	4603      	mov	r3, r0
 800a820:	4620      	mov	r0, r4
 800a822:	f7ff ff67 	bl	800a6f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a826:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a828:	9305      	str	r3, [sp, #20]
 800a82a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a82e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a832:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a836:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a83a:	4b11      	ldr	r3, [pc, #68]	; (800a880 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800a83c:	9003      	str	r0, [sp, #12]
 800a83e:	881b      	ldrh	r3, [r3, #0]
 800a840:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a844:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a848:	f7f6 fad0 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a84c:	6803      	ldr	r3, [r0, #0]
 800a84e:	6a1b      	ldr	r3, [r3, #32]
 800a850:	4798      	blx	r3
 800a852:	23ff      	movs	r3, #255	; 0xff
 800a854:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a858:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a85c:	6860      	ldr	r0, [r4, #4]
 800a85e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a862:	6803      	ldr	r3, [r0, #0]
 800a864:	a902      	add	r1, sp, #8
 800a866:	685b      	ldr	r3, [r3, #4]
 800a868:	4798      	blx	r3
 800a86a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a86c:	b00a      	add	sp, #40	; 0x28
 800a86e:	bd70      	pop	{r4, r5, r6, pc}
 800a870:	2000d357 	.word	0x2000d357
 800a874:	08020a2b 	.word	0x08020a2b
 800a878:	08020cad 	.word	0x08020cad
 800a87c:	08020ade 	.word	0x08020ade
 800a880:	2000d352 	.word	0x2000d352

0800a884 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a884:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a886:	b08b      	sub	sp, #44	; 0x2c
 800a888:	466d      	mov	r5, sp
 800a88a:	e885 0006 	stmia.w	r5, {r1, r2}
 800a88e:	461d      	mov	r5, r3
 800a890:	2300      	movs	r3, #0
 800a892:	9308      	str	r3, [sp, #32]
 800a894:	2301      	movs	r3, #1
 800a896:	9302      	str	r3, [sp, #8]
 800a898:	6803      	ldr	r3, [r0, #0]
 800a89a:	f8bd 6000 	ldrh.w	r6, [sp]
 800a89e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a8a0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a8a4:	4604      	mov	r4, r0
 800a8a6:	4798      	blx	r3
 800a8a8:	463a      	mov	r2, r7
 800a8aa:	4631      	mov	r1, r6
 800a8ac:	4603      	mov	r3, r0
 800a8ae:	4620      	mov	r0, r4
 800a8b0:	f7ff ff20 	bl	800a6f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a8b4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a8b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a8bc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a8c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a8c4:	4b0e      	ldr	r3, [pc, #56]	; (800a900 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800a8c6:	9003      	str	r0, [sp, #12]
 800a8c8:	881b      	ldrh	r3, [r3, #0]
 800a8ca:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a8ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a8d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a8d4:	9505      	str	r5, [sp, #20]
 800a8d6:	f7f6 fa89 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a8da:	6803      	ldr	r3, [r0, #0]
 800a8dc:	6a1b      	ldr	r3, [r3, #32]
 800a8de:	4798      	blx	r3
 800a8e0:	23ff      	movs	r3, #255	; 0xff
 800a8e2:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800a8e6:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800a8ea:	6860      	ldr	r0, [r4, #4]
 800a8ec:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a8f0:	6803      	ldr	r3, [r0, #0]
 800a8f2:	a902      	add	r1, sp, #8
 800a8f4:	685b      	ldr	r3, [r3, #4]
 800a8f6:	4798      	blx	r3
 800a8f8:	4628      	mov	r0, r5
 800a8fa:	b00b      	add	sp, #44	; 0x2c
 800a8fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a8fe:	bf00      	nop
 800a900:	2000d352 	.word	0x2000d352

0800a904 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a904:	b570      	push	{r4, r5, r6, lr}
 800a906:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a90a:	4604      	mov	r4, r0
 800a90c:	b19b      	cbz	r3, 800a936 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a90e:	2002      	movs	r0, #2
 800a910:	f7f5 ff5e 	bl	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a914:	2300      	movs	r3, #0
 800a916:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a91a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a91e:	6823      	ldr	r3, [r4, #0]
 800a920:	4620      	mov	r0, r4
 800a922:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800a926:	f7ff fd39 	bl	800a39c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a92a:	462b      	mov	r3, r5
 800a92c:	4601      	mov	r1, r0
 800a92e:	4620      	mov	r0, r4
 800a930:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a934:	4718      	bx	r3
 800a936:	bd70      	pop	{r4, r5, r6, pc}

0800a938 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800a938:	b570      	push	{r4, r5, r6, lr}
 800a93a:	4605      	mov	r5, r0
 800a93c:	460c      	mov	r4, r1
 800a93e:	2003      	movs	r0, #3
 800a940:	b149      	cbz	r1, 800a956 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800a942:	f7f5 ff0d 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a946:	6928      	ldr	r0, [r5, #16]
 800a948:	b168      	cbz	r0, 800a966 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a94a:	6803      	ldr	r3, [r0, #0]
 800a94c:	695b      	ldr	r3, [r3, #20]
 800a94e:	2101      	movs	r1, #1
 800a950:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a954:	4718      	bx	r3
 800a956:	f7f5 ff1f 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a95a:	6928      	ldr	r0, [r5, #16]
 800a95c:	b118      	cbz	r0, 800a966 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800a95e:	6803      	ldr	r3, [r0, #0]
 800a960:	4621      	mov	r1, r4
 800a962:	695b      	ldr	r3, [r3, #20]
 800a964:	e7f4      	b.n	800a950 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800a966:	bd70      	pop	{r4, r5, r6, pc}

0800a968 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 800a968:	4770      	bx	lr

0800a96a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a96a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a96e:	1a13      	subs	r3, r2, r0
 800a970:	4258      	negs	r0, r3
 800a972:	4158      	adcs	r0, r3
 800a974:	4770      	bx	lr

0800a976 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a976:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a97a:	1a9b      	subs	r3, r3, r2
 800a97c:	2b00      	cmp	r3, #0
 800a97e:	bfdc      	itt	le
 800a980:	6882      	ldrle	r2, [r0, #8]
 800a982:	189b      	addle	r3, r3, r2
 800a984:	2b01      	cmp	r3, #1
 800a986:	bfcc      	ite	gt
 800a988:	2000      	movgt	r0, #0
 800a98a:	2001      	movle	r0, #1
 800a98c:	4770      	bx	lr

0800a98e <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a98e:	6902      	ldr	r2, [r0, #16]
 800a990:	6840      	ldr	r0, [r0, #4]
 800a992:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800a996:	4770      	bx	lr

0800a998 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a998:	6803      	ldr	r3, [r0, #0]
 800a99a:	691b      	ldr	r3, [r3, #16]
 800a99c:	4718      	bx	r3

0800a99e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a99e:	4770      	bx	lr

0800a9a0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a9a0:	4770      	bx	lr

0800a9a2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a9a2:	4770      	bx	lr

0800a9a4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a9a4:	b570      	push	{r4, r5, r6, lr}
 800a9a6:	2301      	movs	r3, #1
 800a9a8:	7203      	strb	r3, [r0, #8]
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	6840      	ldr	r0, [r0, #4]
 800a9ae:	6803      	ldr	r3, [r0, #0]
 800a9b0:	699b      	ldr	r3, [r3, #24]
 800a9b2:	4798      	blx	r3
 800a9b4:	6803      	ldr	r3, [r0, #0]
 800a9b6:	2b08      	cmp	r3, #8
 800a9b8:	4605      	mov	r5, r0
 800a9ba:	d01e      	beq.n	800a9fa <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800a9bc:	d80b      	bhi.n	800a9d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a9be:	2b02      	cmp	r3, #2
 800a9c0:	d027      	beq.n	800aa12 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800a9c2:	2b04      	cmp	r3, #4
 800a9c4:	d011      	beq.n	800a9ea <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800a9c6:	2b01      	cmp	r3, #1
 800a9c8:	d028      	beq.n	800aa1c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a9ca:	4b17      	ldr	r3, [pc, #92]	; (800aa28 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800a9cc:	4a17      	ldr	r2, [pc, #92]	; (800aa2c <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800a9ce:	4818      	ldr	r0, [pc, #96]	; (800aa30 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800a9d0:	218c      	movs	r1, #140	; 0x8c
 800a9d2:	f013 fb09 	bl	801dfe8 <__assert_func>
 800a9d6:	2b40      	cmp	r3, #64	; 0x40
 800a9d8:	d020      	beq.n	800aa1c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a9da:	d801      	bhi.n	800a9e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a9dc:	2b20      	cmp	r3, #32
 800a9de:	e7f3      	b.n	800a9c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a9e0:	2b80      	cmp	r3, #128	; 0x80
 800a9e2:	d01b      	beq.n	800aa1c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a9e4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a9e8:	e7ee      	b.n	800a9c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a9ea:	6823      	ldr	r3, [r4, #0]
 800a9ec:	7f01      	ldrb	r1, [r0, #28]
 800a9ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9f0:	4620      	mov	r0, r4
 800a9f2:	4798      	blx	r3
 800a9f4:	6823      	ldr	r3, [r4, #0]
 800a9f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a9f8:	e006      	b.n	800aa08 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a9fa:	6823      	ldr	r3, [r4, #0]
 800a9fc:	7f01      	ldrb	r1, [r0, #28]
 800a9fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa00:	4620      	mov	r0, r4
 800aa02:	4798      	blx	r3
 800aa04:	6823      	ldr	r3, [r4, #0]
 800aa06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aa08:	4629      	mov	r1, r5
 800aa0a:	4620      	mov	r0, r4
 800aa0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa10:	4718      	bx	r3
 800aa12:	6823      	ldr	r3, [r4, #0]
 800aa14:	4620      	mov	r0, r4
 800aa16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa18:	4798      	blx	r3
 800aa1a:	e7f3      	b.n	800aa04 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800aa1c:	6823      	ldr	r3, [r4, #0]
 800aa1e:	4620      	mov	r0, r4
 800aa20:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aa22:	4798      	blx	r3
 800aa24:	e7e6      	b.n	800a9f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800aa26:	bf00      	nop
 800aa28:	08020efe 	.word	0x08020efe
 800aa2c:	08020fc0 	.word	0x08020fc0
 800aa30:	08020f23 	.word	0x08020f23

0800aa34 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800aa34:	b570      	push	{r4, r5, r6, lr}
 800aa36:	4604      	mov	r4, r0
 800aa38:	460e      	mov	r6, r1
 800aa3a:	6860      	ldr	r0, [r4, #4]
 800aa3c:	6803      	ldr	r3, [r0, #0]
 800aa3e:	685b      	ldr	r3, [r3, #4]
 800aa40:	4798      	blx	r3
 800aa42:	2800      	cmp	r0, #0
 800aa44:	d1f9      	bne.n	800aa3a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800aa46:	4d0d      	ldr	r5, [pc, #52]	; (800aa7c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800aa48:	6828      	ldr	r0, [r5, #0]
 800aa4a:	6803      	ldr	r3, [r0, #0]
 800aa4c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800aa4e:	4798      	blx	r3
 800aa50:	f7f6 f942 	bl	8000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800aa54:	6828      	ldr	r0, [r5, #0]
 800aa56:	2101      	movs	r1, #1
 800aa58:	f7ff ff86 	bl	800a968 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800aa5c:	6860      	ldr	r0, [r4, #4]
 800aa5e:	6803      	ldr	r3, [r0, #0]
 800aa60:	4631      	mov	r1, r6
 800aa62:	689b      	ldr	r3, [r3, #8]
 800aa64:	4798      	blx	r3
 800aa66:	6823      	ldr	r3, [r4, #0]
 800aa68:	4620      	mov	r0, r4
 800aa6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aa6c:	4798      	blx	r3
 800aa6e:	6828      	ldr	r0, [r5, #0]
 800aa70:	6803      	ldr	r3, [r0, #0]
 800aa72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa76:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aa78:	4718      	bx	r3
 800aa7a:	bf00      	nop
 800aa7c:	2000d358 	.word	0x2000d358

0800aa80 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800aa80:	b508      	push	{r3, lr}
 800aa82:	f7f6 f91b 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800aa86:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aa8a:	f7f6 b91f 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800aa8e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800aa8e:	b510      	push	{r4, lr}
 800aa90:	2114      	movs	r1, #20
 800aa92:	4604      	mov	r4, r0
 800aa94:	f013 fa79 	bl	801df8a <_ZdlPvj>
 800aa98:	4620      	mov	r0, r4
 800aa9a:	bd10      	pop	{r4, pc}

0800aa9c <_ZN8touchgfx13DMA_Interface5startEv>:
 800aa9c:	b510      	push	{r4, lr}
 800aa9e:	4604      	mov	r4, r0
 800aaa0:	6840      	ldr	r0, [r0, #4]
 800aaa2:	6803      	ldr	r3, [r0, #0]
 800aaa4:	681b      	ldr	r3, [r3, #0]
 800aaa6:	4798      	blx	r3
 800aaa8:	b948      	cbnz	r0, 800aabe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aaaa:	7a63      	ldrb	r3, [r4, #9]
 800aaac:	b13b      	cbz	r3, 800aabe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aaae:	7a23      	ldrb	r3, [r4, #8]
 800aab0:	b92b      	cbnz	r3, 800aabe <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800aab2:	6823      	ldr	r3, [r4, #0]
 800aab4:	4620      	mov	r0, r4
 800aab6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800aabc:	4718      	bx	r3
 800aabe:	bd10      	pop	{r4, pc}

0800aac0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800aac0:	b510      	push	{r4, lr}
 800aac2:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800aac6:	1b12      	subs	r2, r2, r4
 800aac8:	2a00      	cmp	r2, #0
 800aaca:	bfdc      	itt	le
 800aacc:	6883      	ldrle	r3, [r0, #8]
 800aace:	18d2      	addle	r2, r2, r3
 800aad0:	2a01      	cmp	r2, #1
 800aad2:	dd18      	ble.n	800ab06 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800aad4:	6843      	ldr	r3, [r0, #4]
 800aad6:	f101 021c 	add.w	r2, r1, #28
 800aada:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800aade:	f851 4b04 	ldr.w	r4, [r1], #4
 800aae2:	f843 4b04 	str.w	r4, [r3], #4
 800aae6:	4291      	cmp	r1, r2
 800aae8:	d1f9      	bne.n	800aade <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800aaea:	880a      	ldrh	r2, [r1, #0]
 800aaec:	801a      	strh	r2, [r3, #0]
 800aaee:	788a      	ldrb	r2, [r1, #2]
 800aaf0:	709a      	strb	r2, [r3, #2]
 800aaf2:	68c3      	ldr	r3, [r0, #12]
 800aaf4:	6882      	ldr	r2, [r0, #8]
 800aaf6:	f3bf 8f5b 	dmb	ish
 800aafa:	3301      	adds	r3, #1
 800aafc:	429a      	cmp	r2, r3
 800aafe:	bfd8      	it	le
 800ab00:	1a9b      	suble	r3, r3, r2
 800ab02:	60c3      	str	r3, [r0, #12]
 800ab04:	bd10      	pop	{r4, pc}
 800ab06:	4b03      	ldr	r3, [pc, #12]	; (800ab14 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800ab08:	4a03      	ldr	r2, [pc, #12]	; (800ab18 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800ab0a:	4804      	ldr	r0, [pc, #16]	; (800ab1c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800ab0c:	2139      	movs	r1, #57	; 0x39
 800ab0e:	f013 fa6b 	bl	801dfe8 <__assert_func>
 800ab12:	bf00      	nop
 800ab14:	08020f49 	.word	0x08020f49
 800ab18:	08020ff0 	.word	0x08020ff0
 800ab1c:	08020f23 	.word	0x08020f23

0800ab20 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ab20:	b510      	push	{r4, lr}
 800ab22:	6803      	ldr	r3, [r0, #0]
 800ab24:	681b      	ldr	r3, [r3, #0]
 800ab26:	4604      	mov	r4, r0
 800ab28:	4798      	blx	r3
 800ab2a:	b128      	cbz	r0, 800ab38 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800ab2c:	4b07      	ldr	r3, [pc, #28]	; (800ab4c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800ab2e:	4a08      	ldr	r2, [pc, #32]	; (800ab50 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800ab30:	4808      	ldr	r0, [pc, #32]	; (800ab54 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800ab32:	213f      	movs	r1, #63	; 0x3f
 800ab34:	f013 fa58 	bl	801dfe8 <__assert_func>
 800ab38:	6923      	ldr	r3, [r4, #16]
 800ab3a:	68a2      	ldr	r2, [r4, #8]
 800ab3c:	f3bf 8f5b 	dmb	ish
 800ab40:	3301      	adds	r3, #1
 800ab42:	429a      	cmp	r2, r3
 800ab44:	bfd8      	it	le
 800ab46:	1a9b      	suble	r3, r3, r2
 800ab48:	6123      	str	r3, [r4, #16]
 800ab4a:	bd10      	pop	{r4, pc}
 800ab4c:	08020f6c 	.word	0x08020f6c
 800ab50:	0802103e 	.word	0x0802103e
 800ab54:	08020f23 	.word	0x08020f23

0800ab58 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800ab58:	b570      	push	{r4, r5, r6, lr}
 800ab5a:	4604      	mov	r4, r0
 800ab5c:	6840      	ldr	r0, [r0, #4]
 800ab5e:	6803      	ldr	r3, [r0, #0]
 800ab60:	681b      	ldr	r3, [r3, #0]
 800ab62:	4798      	blx	r3
 800ab64:	4605      	mov	r5, r0
 800ab66:	b930      	cbnz	r0, 800ab76 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ab68:	7a23      	ldrb	r3, [r4, #8]
 800ab6a:	b123      	cbz	r3, 800ab76 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ab6c:	6860      	ldr	r0, [r4, #4]
 800ab6e:	6803      	ldr	r3, [r0, #0]
 800ab70:	695b      	ldr	r3, [r3, #20]
 800ab72:	4798      	blx	r3
 800ab74:	7225      	strb	r5, [r4, #8]
 800ab76:	6860      	ldr	r0, [r4, #4]
 800ab78:	6803      	ldr	r3, [r0, #0]
 800ab7a:	681b      	ldr	r3, [r3, #0]
 800ab7c:	4798      	blx	r3
 800ab7e:	b928      	cbnz	r0, 800ab8c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ab80:	6823      	ldr	r3, [r4, #0]
 800ab82:	4620      	mov	r0, r4
 800ab84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab8a:	4718      	bx	r3
 800ab8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab90:	f7f6 b8aa 	b.w	8000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800ab94 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ab94:	b510      	push	{r4, lr}
 800ab96:	4c04      	ldr	r4, [pc, #16]	; (800aba8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ab98:	6082      	str	r2, [r0, #8]
 800ab9a:	2200      	movs	r2, #0
 800ab9c:	e9c0 4100 	strd	r4, r1, [r0]
 800aba0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800aba4:	bd10      	pop	{r4, pc}
 800aba6:	bf00      	nop
 800aba8:	08020fa4 	.word	0x08020fa4

0800abac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800abac:	6840      	ldr	r0, [r0, #4]
 800abae:	6803      	ldr	r3, [r0, #0]
 800abb0:	681b      	ldr	r3, [r3, #0]
 800abb2:	4718      	bx	r3

0800abb4 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 800abb4:	2001      	movs	r0, #1
 800abb6:	4770      	bx	lr

0800abb8 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 800abb8:	4413      	add	r3, r2
 800abba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800abbe:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800abc2:	7a45      	ldrb	r5, [r0, #9]
 800abc4:	7a03      	ldrb	r3, [r0, #8]
 800abc6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800abc8:	436b      	muls	r3, r5
 800abca:	1c5d      	adds	r5, r3, #1
 800abcc:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 800abd0:	122d      	asrs	r5, r5, #8
 800abd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800abd4:	2dff      	cmp	r5, #255	; 0xff
 800abd6:	eb06 0c03 	add.w	ip, r6, r3
 800abda:	d136      	bne.n	800ac4a <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x92>
 800abdc:	4f37      	ldr	r7, [pc, #220]	; (800acbc <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x104>)
 800abde:	f816 eb01 	ldrb.w	lr, [r6], #1
 800abe2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800abe6:	d107      	bne.n	800abf8 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x40>
 800abe8:	8a83      	ldrh	r3, [r0, #20]
 800abea:	800b      	strh	r3, [r1, #0]
 800abec:	45b4      	cmp	ip, r6
 800abee:	f101 0102 	add.w	r1, r1, #2
 800abf2:	d1f4      	bne.n	800abde <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x26>
 800abf4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800abf8:	f8b1 8000 	ldrh.w	r8, [r1]
 800abfc:	8ac4      	ldrh	r4, [r0, #22]
 800abfe:	ea6f 020e 	mvn.w	r2, lr
 800ac02:	b2d2      	uxtb	r2, r2
 800ac04:	ea08 0307 	and.w	r3, r8, r7
 800ac08:	4353      	muls	r3, r2
 800ac0a:	fb0e 3404 	mla	r4, lr, r4, r3
 800ac0e:	f408 69fc 	and.w	r9, r8, #2016	; 0x7e0
 800ac12:	fb94 f4f5 	sdiv	r4, r4, r5
 800ac16:	ea04 0307 	and.w	r3, r4, r7
 800ac1a:	8b04      	ldrh	r4, [r0, #24]
 800ac1c:	fb02 f909 	mul.w	r9, r2, r9
 800ac20:	fb0e 9404 	mla	r4, lr, r4, r9
 800ac24:	fb94 f4f5 	sdiv	r4, r4, r5
 800ac28:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 800ac2c:	431c      	orrs	r4, r3
 800ac2e:	f008 081f 	and.w	r8, r8, #31
 800ac32:	8b43      	ldrh	r3, [r0, #26]
 800ac34:	fb02 f208 	mul.w	r2, r2, r8
 800ac38:	fb0e 2303 	mla	r3, lr, r3, r2
 800ac3c:	fb93 f3f5 	sdiv	r3, r3, r5
 800ac40:	f003 031f 	and.w	r3, r3, #31
 800ac44:	431c      	orrs	r4, r3
 800ac46:	800c      	strh	r4, [r1, #0]
 800ac48:	e7d0      	b.n	800abec <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x34>
 800ac4a:	f8df 8070 	ldr.w	r8, [pc, #112]	; 800acbc <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x104>
 800ac4e:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800ac52:	f816 3b01 	ldrb.w	r3, [r6], #1
 800ac56:	f8b1 9000 	ldrh.w	r9, [r1]
 800ac5a:	8ac4      	ldrh	r4, [r0, #22]
 800ac5c:	fb13 f305 	smulbb	r3, r3, r5
 800ac60:	b29b      	uxth	r3, r3
 800ac62:	1c5a      	adds	r2, r3, #1
 800ac64:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 800ac68:	121b      	asrs	r3, r3, #8
 800ac6a:	43df      	mvns	r7, r3
 800ac6c:	b2ff      	uxtb	r7, r7
 800ac6e:	ea09 0208 	and.w	r2, r9, r8
 800ac72:	437a      	muls	r2, r7
 800ac74:	fb03 2404 	mla	r4, r3, r4, r2
 800ac78:	f409 6afc 	and.w	sl, r9, #2016	; 0x7e0
 800ac7c:	8b02      	ldrh	r2, [r0, #24]
 800ac7e:	fb94 f4fe 	sdiv	r4, r4, lr
 800ac82:	fb07 fa0a 	mul.w	sl, r7, sl
 800ac86:	fb03 a202 	mla	r2, r3, r2, sl
 800ac8a:	ea04 0408 	and.w	r4, r4, r8
 800ac8e:	fb92 f2fe 	sdiv	r2, r2, lr
 800ac92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800ac96:	4314      	orrs	r4, r2
 800ac98:	f009 091f 	and.w	r9, r9, #31
 800ac9c:	8b42      	ldrh	r2, [r0, #26]
 800ac9e:	fb07 f709 	mul.w	r7, r7, r9
 800aca2:	fb03 7302 	mla	r3, r3, r2, r7
 800aca6:	fb93 f3fe 	sdiv	r3, r3, lr
 800acaa:	f003 031f 	and.w	r3, r3, #31
 800acae:	431c      	orrs	r4, r3
 800acb0:	4566      	cmp	r6, ip
 800acb2:	f821 4b02 	strh.w	r4, [r1], #2
 800acb6:	d1cc      	bne.n	800ac52 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x9a>
 800acb8:	e79c      	b.n	800abf4 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x3c>
 800acba:	bf00      	nop
 800acbc:	fffff800 	.word	0xfffff800

0800acc0 <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 800acc0:	b510      	push	{r4, lr}
 800acc2:	8ac4      	ldrh	r4, [r0, #22]
 800acc4:	1224      	asrs	r4, r4, #8
 800acc6:	700c      	strb	r4, [r1, #0]
 800acc8:	8b01      	ldrh	r1, [r0, #24]
 800acca:	10c9      	asrs	r1, r1, #3
 800accc:	7011      	strb	r1, [r2, #0]
 800acce:	7e82      	ldrb	r2, [r0, #26]
 800acd0:	00d2      	lsls	r2, r2, #3
 800acd2:	701a      	strb	r2, [r3, #0]
 800acd4:	9b02      	ldr	r3, [sp, #8]
 800acd6:	7a42      	ldrb	r2, [r0, #9]
 800acd8:	701a      	strb	r2, [r3, #0]
 800acda:	2001      	movs	r0, #1
 800acdc:	bd10      	pop	{r4, pc}

0800acde <_ZN8touchgfx13PainterRGB565D1Ev>:
 800acde:	4770      	bx	lr

0800ace0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800ace0:	b510      	push	{r4, lr}
 800ace2:	211c      	movs	r1, #28
 800ace4:	4604      	mov	r4, r0
 800ace6:	f013 f950 	bl	801df8a <_ZdlPvj>
 800acea:	4620      	mov	r0, r4
 800acec:	bd10      	pop	{r4, pc}

0800acee <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 800acee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800acf2:	4617      	mov	r7, r2
 800acf4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800acf8:	b085      	sub	sp, #20
 800acfa:	443a      	add	r2, r7
 800acfc:	60c2      	str	r2, [r0, #12]
 800acfe:	4698      	mov	r8, r3
 800ad00:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ad04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ad06:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800ad08:	441a      	add	r2, r3
 800ad0a:	6803      	ldr	r3, [r0, #0]
 800ad0c:	6102      	str	r2, [r0, #16]
 800ad0e:	695b      	ldr	r3, [r3, #20]
 800ad10:	4604      	mov	r4, r0
 800ad12:	460d      	mov	r5, r1
 800ad14:	4798      	blx	r3
 800ad16:	2800      	cmp	r0, #0
 800ad18:	d03a      	beq.n	800ad90 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa2>
 800ad1a:	4447      	add	r7, r8
 800ad1c:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 800ad20:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800ad22:	4437      	add	r7, r6
 800ad24:	6823      	ldr	r3, [r4, #0]
 800ad26:	f10d 020f 	add.w	r2, sp, #15
 800ad2a:	9200      	str	r2, [sp, #0]
 800ad2c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800ad30:	f10d 020d 	add.w	r2, sp, #13
 800ad34:	f10d 030e 	add.w	r3, sp, #14
 800ad38:	a903      	add	r1, sp, #12
 800ad3a:	4620      	mov	r0, r4
 800ad3c:	47c0      	blx	r8
 800ad3e:	b1f8      	cbz	r0, 800ad80 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x92>
 800ad40:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800ad44:	7a20      	ldrb	r0, [r4, #8]
 800ad46:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800ad4a:	f89d c00e 	ldrb.w	ip, [sp, #14]
 800ad4e:	4358      	muls	r0, r3
 800ad50:	1c43      	adds	r3, r0, #1
 800ad52:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 800ad56:	7830      	ldrb	r0, [r6, #0]
 800ad58:	121b      	asrs	r3, r3, #8
 800ad5a:	fb10 f003 	smulbb	r0, r0, r3
 800ad5e:	b283      	uxth	r3, r0
 800ad60:	1c58      	adds	r0, r3, #1
 800ad62:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800ad66:	1200      	asrs	r0, r0, #8
 800ad68:	6823      	ldr	r3, [r4, #0]
 800ad6a:	28ff      	cmp	r0, #255	; 0xff
 800ad6c:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800ad70:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800ad74:	d10f      	bne.n	800ad96 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa8>
 800ad76:	f8cd c000 	str.w	ip, [sp]
 800ad7a:	4629      	mov	r1, r5
 800ad7c:	4620      	mov	r0, r4
 800ad7e:	47c0      	blx	r8
 800ad80:	68e3      	ldr	r3, [r4, #12]
 800ad82:	3601      	adds	r6, #1
 800ad84:	3301      	adds	r3, #1
 800ad86:	42b7      	cmp	r7, r6
 800ad88:	f105 0502 	add.w	r5, r5, #2
 800ad8c:	60e3      	str	r3, [r4, #12]
 800ad8e:	d1c9      	bne.n	800ad24 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x36>
 800ad90:	b005      	add	sp, #20
 800ad92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ad96:	8829      	ldrh	r1, [r5, #0]
 800ad98:	fa1f fe80 	uxth.w	lr, r0
 800ad9c:	ea4f 2921 	mov.w	r9, r1, asr #8
 800ada0:	43c0      	mvns	r0, r0
 800ada2:	b2c0      	uxtb	r0, r0
 800ada4:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800ada8:	fb12 f20e 	smulbb	r2, r2, lr
 800adac:	fb09 2200 	mla	r2, r9, r0, r2
 800adb0:	ea4f 09e1 	mov.w	r9, r1, asr #3
 800adb4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800adb8:	fb13 f30e 	smulbb	r3, r3, lr
 800adbc:	fb09 3300 	mla	r3, r9, r0, r3
 800adc0:	00c9      	lsls	r1, r1, #3
 800adc2:	b29b      	uxth	r3, r3
 800adc4:	b2c9      	uxtb	r1, r1
 800adc6:	fb1c fc0e 	smulbb	ip, ip, lr
 800adca:	b292      	uxth	r2, r2
 800adcc:	fb01 c000 	mla	r0, r1, r0, ip
 800add0:	1c59      	adds	r1, r3, #1
 800add2:	b280      	uxth	r0, r0
 800add4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800add8:	1c51      	adds	r1, r2, #1
 800adda:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 800adde:	1c41      	adds	r1, r0, #1
 800ade0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 800ade4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800ade8:	9000      	str	r0, [sp, #0]
 800adea:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800adee:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800adf2:	e7c2      	b.n	800ad7a <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8c>

0800adf4 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 800adf4:	f89d 0000 	ldrb.w	r0, [sp]
 800adf8:	00db      	lsls	r3, r3, #3
 800adfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800adfe:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 800ae02:	4803      	ldr	r0, [pc, #12]	; (800ae10 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 800ae04:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 800ae08:	4313      	orrs	r3, r2
 800ae0a:	800b      	strh	r3, [r1, #0]
 800ae0c:	4770      	bx	lr
 800ae0e:	bf00      	nop
 800ae10:	fffff800 	.word	0xfffff800

0800ae14 <_ZN8touchgfx6CircleD1Ev>:
 800ae14:	4770      	bx	lr

0800ae16 <_ZN8touchgfx6CircleD0Ev>:
 800ae16:	b510      	push	{r4, lr}
 800ae18:	214c      	movs	r1, #76	; 0x4c
 800ae1a:	4604      	mov	r4, r0
 800ae1c:	f013 f8b5 	bl	801df8a <_ZdlPvj>
 800ae20:	4620      	mov	r0, r4
 800ae22:	bd10      	pop	{r4, pc}

0800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800ae24:	b507      	push	{r0, r1, r2, lr}
 800ae26:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800ae2a:	ab01      	add	r3, sp, #4
 800ae2c:	6809      	ldr	r1, [r1, #0]
 800ae2e:	6800      	ldr	r0, [r0, #0]
 800ae30:	f004 fa2e 	bl	800f290 <_ZN8touchgfx6muldivElllRl>
 800ae34:	b003      	add	sp, #12
 800ae36:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800ae3c <_ZN8touchgfx7CWRUtil4sineEi>:
 800ae3c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800ae40:	fb90 f3f2 	sdiv	r3, r0, r2
 800ae44:	fb03 0312 	mls	r3, r3, r2, r0
 800ae48:	4413      	add	r3, r2
 800ae4a:	fb93 f0f2 	sdiv	r0, r3, r2
 800ae4e:	fb02 3010 	mls	r0, r2, r0, r3
 800ae52:	285a      	cmp	r0, #90	; 0x5a
 800ae54:	4b09      	ldr	r3, [pc, #36]	; (800ae7c <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 800ae56:	dc02      	bgt.n	800ae5e <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 800ae58:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800ae5c:	4770      	bx	lr
 800ae5e:	28b4      	cmp	r0, #180	; 0xb4
 800ae60:	dc02      	bgt.n	800ae68 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 800ae62:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800ae66:	e7f7      	b.n	800ae58 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 800ae68:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800ae6c:	bfd4      	ite	le
 800ae6e:	38b4      	suble	r0, #180	; 0xb4
 800ae70:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800ae74:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800ae78:	4240      	negs	r0, r0
 800ae7a:	4770      	bx	lr
 800ae7c:	080210c0 	.word	0x080210c0

0800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800ae80:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800ae84:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae86:	fb90 f3f2 	sdiv	r3, r0, r2
 800ae8a:	fb03 0012 	mls	r0, r3, r2, r0
 800ae8e:	4410      	add	r0, r2
 800ae90:	fb90 f4f2 	sdiv	r4, r0, r2
 800ae94:	fb02 0414 	mls	r4, r2, r4, r0
 800ae98:	f004 061f 	and.w	r6, r4, #31
 800ae9c:	1164      	asrs	r4, r4, #5
 800ae9e:	4620      	mov	r0, r4
 800aea0:	f7ff ffcc 	bl	800ae3c <_ZN8touchgfx7CWRUtil4sineEi>
 800aea4:	4605      	mov	r5, r0
 800aea6:	b90e      	cbnz	r6, 800aeac <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 800aea8:	b002      	add	sp, #8
 800aeaa:	bd70      	pop	{r4, r5, r6, pc}
 800aeac:	1c60      	adds	r0, r4, #1
 800aeae:	f7ff ffc5 	bl	800ae3c <_ZN8touchgfx7CWRUtil4sineEi>
 800aeb2:	ab01      	add	r3, sp, #4
 800aeb4:	2220      	movs	r2, #32
 800aeb6:	4631      	mov	r1, r6
 800aeb8:	1b40      	subs	r0, r0, r5
 800aeba:	f004 f9e9 	bl	800f290 <_ZN8touchgfx6muldivElllRl>
 800aebe:	4428      	add	r0, r5
 800aec0:	e7f2      	b.n	800aea8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

0800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800aec2:	b508      	push	{r3, lr}
 800aec4:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800aec8:	f7ff ffda 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800aecc:	bd08      	pop	{r3, pc}
	...

0800aed0 <_ZN8touchgfx6CircleC1Ev>:
 800aed0:	b510      	push	{r4, lr}
 800aed2:	4604      	mov	r4, r0
 800aed4:	f000 fc3e 	bl	800b754 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800aed8:	4b08      	ldr	r3, [pc, #32]	; (800aefc <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800aeda:	6023      	str	r3, [r4, #0]
 800aedc:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800aee0:	2300      	movs	r3, #0
 800aee2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 800aee6:	f24b 4205 	movw	r2, #46085	; 0xb405
 800aeea:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800aeee:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800aef2:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800aef6:	60a3      	str	r3, [r4, #8]
 800aef8:	4620      	mov	r0, r4
 800aefa:	bd10      	pop	{r4, pc}
 800aefc:	08021180 	.word	0x08021180

0800af00 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800af00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800af04:	4606      	mov	r6, r0
 800af06:	6810      	ldr	r0, [r2, #0]
 800af08:	4698      	mov	r8, r3
 800af0a:	4691      	mov	r9, r2
 800af0c:	460f      	mov	r7, r1
 800af0e:	f7ff ffb7 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800af12:	a902      	add	r1, sp, #8
 800af14:	2402      	movs	r4, #2
 800af16:	f841 0d08 	str.w	r0, [r1, #-8]!
 800af1a:	4640      	mov	r0, r8
 800af1c:	f7ff ff82 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800af20:	6b35      	ldr	r5, [r6, #48]	; 0x30
 800af22:	fb90 f0f4 	sdiv	r0, r0, r4
 800af26:	4405      	add	r5, r0
 800af28:	f8d9 0000 	ldr.w	r0, [r9]
 800af2c:	f7ff ffc9 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800af30:	a902      	add	r1, sp, #8
 800af32:	f841 0d04 	str.w	r0, [r1, #-4]!
 800af36:	4640      	mov	r0, r8
 800af38:	f7ff ff74 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800af3c:	6b72      	ldr	r2, [r6, #52]	; 0x34
 800af3e:	fb90 f0f4 	sdiv	r0, r0, r4
 800af42:	4629      	mov	r1, r5
 800af44:	1a12      	subs	r2, r2, r0
 800af46:	4638      	mov	r0, r7
 800af48:	f011 fe0d 	bl	801cb66 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800af4c:	b003      	add	sp, #12
 800af4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800af52 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 800af52:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800af56:	9e08      	ldr	r6, [sp, #32]
 800af58:	6830      	ldr	r0, [r6, #0]
 800af5a:	4698      	mov	r8, r3
 800af5c:	4615      	mov	r5, r2
 800af5e:	460f      	mov	r7, r1
 800af60:	f7ff ff8e 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800af64:	a902      	add	r1, sp, #8
 800af66:	2402      	movs	r4, #2
 800af68:	f841 0d08 	str.w	r0, [r1, #-8]!
 800af6c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800af6e:	f7ff ff59 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800af72:	682d      	ldr	r5, [r5, #0]
 800af74:	fb90 f0f4 	sdiv	r0, r0, r4
 800af78:	4405      	add	r5, r0
 800af7a:	6830      	ldr	r0, [r6, #0]
 800af7c:	f7ff ffa1 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800af80:	a902      	add	r1, sp, #8
 800af82:	f841 0d04 	str.w	r0, [r1, #-4]!
 800af86:	9809      	ldr	r0, [sp, #36]	; 0x24
 800af88:	f7ff ff4c 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800af8c:	f8d8 2000 	ldr.w	r2, [r8]
 800af90:	fb90 f0f4 	sdiv	r0, r0, r4
 800af94:	4629      	mov	r1, r5
 800af96:	1a12      	subs	r2, r2, r0
 800af98:	4638      	mov	r0, r7
 800af9a:	f011 fd73 	bl	801ca84 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800af9e:	b002      	add	sp, #8
 800afa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800afa4 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800afa4:	b513      	push	{r0, r1, r4, lr}
 800afa6:	e9cd 2300 	strd	r2, r3, [sp]
 800afaa:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800afae:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800afb2:	f7ff ffce 	bl	800af52 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800afb6:	b002      	add	sp, #8
 800afb8:	bd10      	pop	{r4, pc}

0800afba <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800afba:	b5f0      	push	{r4, r5, r6, r7, lr}
 800afbc:	680e      	ldr	r6, [r1, #0]
 800afbe:	681f      	ldr	r7, [r3, #0]
 800afc0:	9807      	ldr	r0, [sp, #28]
 800afc2:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 800afc6:	42be      	cmp	r6, r7
 800afc8:	bfb8      	it	lt
 800afca:	601e      	strlt	r6, [r3, #0]
 800afcc:	680b      	ldr	r3, [r1, #0]
 800afce:	6829      	ldr	r1, [r5, #0]
 800afd0:	428b      	cmp	r3, r1
 800afd2:	bfc8      	it	gt
 800afd4:	602b      	strgt	r3, [r5, #0]
 800afd6:	6813      	ldr	r3, [r2, #0]
 800afd8:	6821      	ldr	r1, [r4, #0]
 800afda:	428b      	cmp	r3, r1
 800afdc:	bfb8      	it	lt
 800afde:	6023      	strlt	r3, [r4, #0]
 800afe0:	6813      	ldr	r3, [r2, #0]
 800afe2:	6802      	ldr	r2, [r0, #0]
 800afe4:	4293      	cmp	r3, r2
 800afe6:	bfc8      	it	gt
 800afe8:	6003      	strgt	r3, [r0, #0]
 800afea:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800afec <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800afec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aff0:	4606      	mov	r6, r0
 800aff2:	b089      	sub	sp, #36	; 0x24
 800aff4:	6808      	ldr	r0, [r1, #0]
 800aff6:	4690      	mov	r8, r2
 800aff8:	461f      	mov	r7, r3
 800affa:	4689      	mov	r9, r1
 800affc:	f7ff ff40 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800b000:	ad08      	add	r5, sp, #32
 800b002:	2402      	movs	r4, #2
 800b004:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b008:	4640      	mov	r0, r8
 800b00a:	4629      	mov	r1, r5
 800b00c:	f7ff ff0a 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b010:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800b012:	fb90 f0f4 	sdiv	r0, r0, r4
 800b016:	4418      	add	r0, r3
 800b018:	9005      	str	r0, [sp, #20]
 800b01a:	f8d9 0000 	ldr.w	r0, [r9]
 800b01e:	f7ff ff50 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800b022:	4629      	mov	r1, r5
 800b024:	9007      	str	r0, [sp, #28]
 800b026:	4640      	mov	r0, r8
 800b028:	f7ff fefc 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b02c:	fb90 f0f4 	sdiv	r0, r0, r4
 800b030:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800b032:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b034:	aa08      	add	r2, sp, #32
 800b036:	1a24      	subs	r4, r4, r0
 800b038:	f842 4d08 	str.w	r4, [r2, #-8]!
 800b03c:	9302      	str	r3, [sp, #8]
 800b03e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b040:	9301      	str	r3, [sp, #4]
 800b042:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b044:	9300      	str	r3, [sp, #0]
 800b046:	a905      	add	r1, sp, #20
 800b048:	463b      	mov	r3, r7
 800b04a:	4630      	mov	r0, r6
 800b04c:	f7ff ffb5 	bl	800afba <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b050:	b009      	add	sp, #36	; 0x24
 800b052:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800b056 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800b056:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b05a:	4291      	cmp	r1, r2
 800b05c:	b08d      	sub	sp, #52	; 0x34
 800b05e:	e9cd 2106 	strd	r2, r1, [sp, #24]
 800b062:	bfc8      	it	gt
 800b064:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 800b068:	461e      	mov	r6, r3
 800b06a:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800b06e:	1a9b      	subs	r3, r3, r2
 800b070:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800b074:	bfa2      	ittt	ge
 800b076:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800b07a:	2200      	movge	r2, #0
 800b07c:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 800b080:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800b082:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800b084:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800b088:	ad0c      	add	r5, sp, #48	; 0x30
 800b08a:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800b08e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b092:	f845 3d04 	str.w	r3, [r5, #-4]!
 800b096:	a907      	add	r1, sp, #28
 800b098:	4633      	mov	r3, r6
 800b09a:	462a      	mov	r2, r5
 800b09c:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b0a0:	9700      	str	r7, [sp, #0]
 800b0a2:	4604      	mov	r4, r0
 800b0a4:	f7ff ffa2 	bl	800afec <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b0a8:	9b07      	ldr	r3, [sp, #28]
 800b0aa:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 800b0ae:	f103 0120 	add.w	r1, r3, #32
 800b0b2:	fb91 f3f0 	sdiv	r3, r1, r0
 800b0b6:	fb00 1313 	mls	r3, r0, r3, r1
 800b0ba:	1ac3      	subs	r3, r0, r3
 800b0bc:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800b0c0:	fb93 f2f0 	sdiv	r2, r3, r0
 800b0c4:	fb00 3312 	mls	r3, r0, r2, r3
 800b0c8:	440b      	add	r3, r1
 800b0ca:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 800b0ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b0d0:	9906      	ldr	r1, [sp, #24]
 800b0d2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b0d4:	4291      	cmp	r1, r2
 800b0d6:	db11      	blt.n	800b0fc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 800b0d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b0da:	9700      	str	r7, [sp, #0]
 800b0dc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b0e0:	930b      	str	r3, [sp, #44]	; 0x2c
 800b0e2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b0e6:	4633      	mov	r3, r6
 800b0e8:	462a      	mov	r2, r5
 800b0ea:	4651      	mov	r1, sl
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	f7ff ff7d 	bl	800afec <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b0f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b0f4:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800b0f8:	9309      	str	r3, [sp, #36]	; 0x24
 800b0fa:	e7e8      	b.n	800b0ce <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 800b0fc:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 800b100:	4291      	cmp	r1, r2
 800b102:	dd0c      	ble.n	800b11e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 800b104:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b106:	9700      	str	r7, [sp, #0]
 800b108:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b10c:	930b      	str	r3, [sp, #44]	; 0x2c
 800b10e:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b112:	4633      	mov	r3, r6
 800b114:	462a      	mov	r2, r5
 800b116:	a906      	add	r1, sp, #24
 800b118:	4620      	mov	r0, r4
 800b11a:	f7ff ff67 	bl	800afec <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b11e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b120:	2b00      	cmp	r3, #0
 800b122:	f040 8097 	bne.w	800b254 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 800b126:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 800b12a:	1a52      	subs	r2, r2, r1
 800b12c:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 800b130:	da0a      	bge.n	800b148 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 800b132:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b136:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800b13a:	9700      	str	r7, [sp, #0]
 800b13c:	4633      	mov	r3, r6
 800b13e:	462a      	mov	r2, r5
 800b140:	a90a      	add	r1, sp, #40	; 0x28
 800b142:	4620      	mov	r0, r4
 800b144:	f7ff ff52 	bl	800afec <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b148:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800b14c:	2bb3      	cmp	r3, #179	; 0xb3
 800b14e:	d87e      	bhi.n	800b24e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800b150:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 800b154:	1a1b      	subs	r3, r3, r0
 800b156:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800b15a:	da78      	bge.n	800b24e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800b15c:	f7ff fe90 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800b160:	ad0c      	add	r5, sp, #48	; 0x30
 800b162:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800b166:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b16a:	4658      	mov	r0, fp
 800b16c:	4629      	mov	r1, r5
 800b16e:	f7ff fe59 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b172:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b174:	18c3      	adds	r3, r0, r3
 800b176:	9807      	ldr	r0, [sp, #28]
 800b178:	9305      	str	r3, [sp, #20]
 800b17a:	f7ff fea2 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800b17e:	4629      	mov	r1, r5
 800b180:	900b      	str	r0, [sp, #44]	; 0x2c
 800b182:	4658      	mov	r0, fp
 800b184:	f7ff fe4e 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b188:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b18a:	9a05      	ldr	r2, [sp, #20]
 800b18c:	9700      	str	r7, [sp, #0]
 800b18e:	1a1b      	subs	r3, r3, r0
 800b190:	f04f 0a02 	mov.w	sl, #2
 800b194:	9304      	str	r3, [sp, #16]
 800b196:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b198:	fb93 f3fa 	sdiv	r3, r3, sl
 800b19c:	1ad2      	subs	r2, r2, r3
 800b19e:	920a      	str	r2, [sp, #40]	; 0x28
 800b1a0:	9a04      	ldr	r2, [sp, #16]
 800b1a2:	1ad3      	subs	r3, r2, r3
 800b1a4:	930b      	str	r3, [sp, #44]	; 0x2c
 800b1a6:	462a      	mov	r2, r5
 800b1a8:	4633      	mov	r3, r6
 800b1aa:	a90a      	add	r1, sp, #40	; 0x28
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b1b2:	f7ff ff02 	bl	800afba <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b1b6:	9a05      	ldr	r2, [sp, #20]
 800b1b8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b1ba:	fb93 f3fa 	sdiv	r3, r3, sl
 800b1be:	189a      	adds	r2, r3, r2
 800b1c0:	920a      	str	r2, [sp, #40]	; 0x28
 800b1c2:	9a04      	ldr	r2, [sp, #16]
 800b1c4:	9700      	str	r7, [sp, #0]
 800b1c6:	4413      	add	r3, r2
 800b1c8:	a90a      	add	r1, sp, #40	; 0x28
 800b1ca:	462a      	mov	r2, r5
 800b1cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800b1ce:	4620      	mov	r0, r4
 800b1d0:	4633      	mov	r3, r6
 800b1d2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b1d6:	f7ff fef0 	bl	800afba <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b1da:	9806      	ldr	r0, [sp, #24]
 800b1dc:	f7ff fe50 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800b1e0:	4629      	mov	r1, r5
 800b1e2:	900b      	str	r0, [sp, #44]	; 0x2c
 800b1e4:	4658      	mov	r0, fp
 800b1e6:	f7ff fe1d 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b1ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b1ec:	18c3      	adds	r3, r0, r3
 800b1ee:	9806      	ldr	r0, [sp, #24]
 800b1f0:	9304      	str	r3, [sp, #16]
 800b1f2:	f7ff fe66 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800b1f6:	4629      	mov	r1, r5
 800b1f8:	900b      	str	r0, [sp, #44]	; 0x2c
 800b1fa:	4658      	mov	r0, fp
 800b1fc:	f7ff fe12 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b200:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b202:	9a04      	ldr	r2, [sp, #16]
 800b204:	9700      	str	r7, [sp, #0]
 800b206:	eba3 0b00 	sub.w	fp, r3, r0
 800b20a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b20c:	fb93 f3fa 	sdiv	r3, r3, sl
 800b210:	1ad2      	subs	r2, r2, r3
 800b212:	ebab 0303 	sub.w	r3, fp, r3
 800b216:	920a      	str	r2, [sp, #40]	; 0x28
 800b218:	930b      	str	r3, [sp, #44]	; 0x2c
 800b21a:	462a      	mov	r2, r5
 800b21c:	4633      	mov	r3, r6
 800b21e:	a90a      	add	r1, sp, #40	; 0x28
 800b220:	4620      	mov	r0, r4
 800b222:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b226:	f7ff fec8 	bl	800afba <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b22a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b22c:	fb93 fafa 	sdiv	sl, r3, sl
 800b230:	9b04      	ldr	r3, [sp, #16]
 800b232:	9700      	str	r7, [sp, #0]
 800b234:	4453      	add	r3, sl
 800b236:	930a      	str	r3, [sp, #40]	; 0x28
 800b238:	eb0a 030b 	add.w	r3, sl, fp
 800b23c:	930b      	str	r3, [sp, #44]	; 0x2c
 800b23e:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b242:	4633      	mov	r3, r6
 800b244:	462a      	mov	r2, r5
 800b246:	a90a      	add	r1, sp, #40	; 0x28
 800b248:	4620      	mov	r0, r4
 800b24a:	f7ff feb6 	bl	800afba <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b24e:	b00d      	add	sp, #52	; 0x34
 800b250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b254:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b256:	9700      	str	r7, [sp, #0]
 800b258:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800b25c:	930b      	str	r3, [sp, #44]	; 0x2c
 800b25e:	462a      	mov	r2, r5
 800b260:	4633      	mov	r3, r6
 800b262:	a907      	add	r1, sp, #28
 800b264:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b268:	4620      	mov	r0, r4
 800b26a:	f7ff febf 	bl	800afec <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800b26e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b270:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b272:	9700      	str	r7, [sp, #0]
 800b274:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800b278:	930b      	str	r3, [sp, #44]	; 0x2c
 800b27a:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800b27e:	4633      	mov	r3, r6
 800b280:	462a      	mov	r2, r5
 800b282:	a906      	add	r1, sp, #24
 800b284:	e75d      	b.n	800b142 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0800b286 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800b286:	b530      	push	{r4, r5, lr}
 800b288:	4604      	mov	r4, r0
 800b28a:	4608      	mov	r0, r1
 800b28c:	4611      	mov	r1, r2
 800b28e:	461a      	mov	r2, r3
 800b290:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800b294:	b089      	sub	sp, #36	; 0x24
 800b296:	015b      	lsls	r3, r3, #5
 800b298:	9304      	str	r3, [sp, #16]
 800b29a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b29e:	2500      	movs	r5, #0
 800b2a0:	015b      	lsls	r3, r3, #5
 800b2a2:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800b2a6:	ab07      	add	r3, sp, #28
 800b2a8:	9302      	str	r3, [sp, #8]
 800b2aa:	ab06      	add	r3, sp, #24
 800b2ac:	9301      	str	r3, [sp, #4]
 800b2ae:	ab05      	add	r3, sp, #20
 800b2b0:	9300      	str	r3, [sp, #0]
 800b2b2:	ab04      	add	r3, sp, #16
 800b2b4:	9505      	str	r5, [sp, #20]
 800b2b6:	f7ff fece 	bl	800b056 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800b2ba:	2520      	movs	r5, #32
 800b2bc:	9a04      	ldr	r2, [sp, #16]
 800b2be:	9805      	ldr	r0, [sp, #20]
 800b2c0:	fb92 f2f5 	sdiv	r2, r2, r5
 800b2c4:	fb90 f0f5 	sdiv	r0, r0, r5
 800b2c8:	b292      	uxth	r2, r2
 800b2ca:	3002      	adds	r0, #2
 800b2cc:	1a80      	subs	r0, r0, r2
 800b2ce:	9b06      	ldr	r3, [sp, #24]
 800b2d0:	9907      	ldr	r1, [sp, #28]
 800b2d2:	fb93 f3f5 	sdiv	r3, r3, r5
 800b2d6:	fb91 f1f5 	sdiv	r1, r1, r5
 800b2da:	b29b      	uxth	r3, r3
 800b2dc:	3102      	adds	r1, #2
 800b2de:	1ac9      	subs	r1, r1, r3
 800b2e0:	3a01      	subs	r2, #1
 800b2e2:	3b01      	subs	r3, #1
 800b2e4:	80a0      	strh	r0, [r4, #4]
 800b2e6:	4620      	mov	r0, r4
 800b2e8:	8022      	strh	r2, [r4, #0]
 800b2ea:	8063      	strh	r3, [r4, #2]
 800b2ec:	80e1      	strh	r1, [r4, #6]
 800b2ee:	b009      	add	sp, #36	; 0x24
 800b2f0:	bd30      	pop	{r4, r5, pc}

0800b2f2 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800b2f2:	b510      	push	{r4, lr}
 800b2f4:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 800b2f8:	4604      	mov	r4, r0
 800b2fa:	f7ff ffc4 	bl	800b286 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800b2fe:	4620      	mov	r0, r4
 800b300:	bd10      	pop	{r4, pc}

0800b302 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800b302:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b306:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800b308:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800b30a:	b0ba      	sub	sp, #232	; 0xe8
 800b30c:	429a      	cmp	r2, r3
 800b30e:	9303      	str	r3, [sp, #12]
 800b310:	9204      	str	r2, [sp, #16]
 800b312:	bfb8      	it	lt
 800b314:	e9cd 2303 	strdlt	r2, r3, [sp, #12]
 800b318:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800b31c:	1a9b      	subs	r3, r3, r2
 800b31e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800b322:	bfa2      	ittt	ge
 800b324:	2200      	movge	r2, #0
 800b326:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800b32a:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 800b32e:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800b330:	4604      	mov	r4, r0
 800b332:	460f      	mov	r7, r1
 800b334:	ae0a      	add	r6, sp, #40	; 0x28
 800b336:	2a00      	cmp	r2, #0
 800b338:	d131      	bne.n	800b39e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x9c>
 800b33a:	463a      	mov	r2, r7
 800b33c:	4621      	mov	r1, r4
 800b33e:	a80b      	add	r0, sp, #44	; 0x2c
 800b340:	f011 fa48 	bl	801c7d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800b344:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b346:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b348:	9205      	str	r2, [sp, #20]
 800b34a:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800b34e:	9306      	str	r3, [sp, #24]
 800b350:	dc6d      	bgt.n	800b42e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x12c>
 800b352:	9b03      	ldr	r3, [sp, #12]
 800b354:	9307      	str	r3, [sp, #28]
 800b356:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800b35a:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 800b35e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b362:	930a      	str	r3, [sp, #40]	; 0x28
 800b364:	aa07      	add	r2, sp, #28
 800b366:	4633      	mov	r3, r6
 800b368:	a90b      	add	r1, sp, #44	; 0x2c
 800b36a:	4620      	mov	r0, r4
 800b36c:	016d      	lsls	r5, r5, #5
 800b36e:	f7ff fdc7 	bl	800af00 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800b372:	9f07      	ldr	r7, [sp, #28]
 800b374:	2d00      	cmp	r5, #0
 800b376:	d163      	bne.n	800b440 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x13e>
 800b378:	3720      	adds	r7, #32
 800b37a:	9a04      	ldr	r2, [sp, #16]
 800b37c:	9b06      	ldr	r3, [sp, #24]
 800b37e:	4639      	mov	r1, r7
 800b380:	4291      	cmp	r1, r2
 800b382:	442f      	add	r7, r5
 800b384:	dc69      	bgt.n	800b45a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x158>
 800b386:	9a05      	ldr	r2, [sp, #20]
 800b388:	9107      	str	r1, [sp, #28]
 800b38a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b38e:	930a      	str	r3, [sp, #40]	; 0x28
 800b390:	aa07      	add	r2, sp, #28
 800b392:	4633      	mov	r3, r6
 800b394:	a90b      	add	r1, sp, #44	; 0x2c
 800b396:	4620      	mov	r0, r4
 800b398:	f7ff fe04 	bl	800afa4 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800b39c:	e7ed      	b.n	800b37a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800b39e:	f9b1 c000 	ldrsh.w	ip, [r1]
 800b3a2:	88bd      	ldrh	r5, [r7, #4]
 800b3a4:	f9b1 0002 	ldrsh.w	r0, [r1, #2]
 800b3a8:	e9d4 310c 	ldrd	r3, r1, [r4, #48]	; 0x30
 800b3ac:	4465      	add	r5, ip
 800b3ae:	b22d      	sxth	r5, r5
 800b3b0:	eba3 1545 	sub.w	r5, r3, r5, lsl #5
 800b3b4:	2d00      	cmp	r5, #0
 800b3b6:	eba3 134c 	sub.w	r3, r3, ip, lsl #5
 800b3ba:	bfb8      	it	lt
 800b3bc:	426d      	neglt	r5, r5
 800b3be:	2b00      	cmp	r3, #0
 800b3c0:	bfb8      	it	lt
 800b3c2:	425b      	neglt	r3, r3
 800b3c4:	429d      	cmp	r5, r3
 800b3c6:	bfb8      	it	lt
 800b3c8:	461d      	movlt	r5, r3
 800b3ca:	88fb      	ldrh	r3, [r7, #6]
 800b3cc:	4403      	add	r3, r0
 800b3ce:	b21b      	sxth	r3, r3
 800b3d0:	eba1 1343 	sub.w	r3, r1, r3, lsl #5
 800b3d4:	2b00      	cmp	r3, #0
 800b3d6:	eba1 1140 	sub.w	r1, r1, r0, lsl #5
 800b3da:	bfb8      	it	lt
 800b3dc:	425b      	neglt	r3, r3
 800b3de:	2900      	cmp	r1, #0
 800b3e0:	bfb8      	it	lt
 800b3e2:	4249      	neglt	r1, r1
 800b3e4:	428b      	cmp	r3, r1
 800b3e6:	bfb8      	it	lt
 800b3e8:	460b      	movlt	r3, r1
 800b3ea:	115b      	asrs	r3, r3, #5
 800b3ec:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800b3f0:	116d      	asrs	r5, r5, #5
 800b3f2:	3301      	adds	r3, #1
 800b3f4:	435b      	muls	r3, r3
 800b3f6:	3501      	adds	r5, #1
 800b3f8:	fb05 3505 	mla	r5, r5, r5, r3
 800b3fc:	3001      	adds	r0, #1
 800b3fe:	2302      	movs	r3, #2
 800b400:	fb92 f2f3 	sdiv	r2, r2, r3
 800b404:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b406:	1040      	asrs	r0, r0, #1
 800b408:	1a9a      	subs	r2, r3, r2
 800b40a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800b40e:	920a      	str	r2, [sp, #40]	; 0x28
 800b410:	f7ff fd14 	bl	800ae3c <_ZN8touchgfx7CWRUtil4sineEi>
 800b414:	a90b      	add	r1, sp, #44	; 0x2c
 800b416:	900b      	str	r0, [sp, #44]	; 0x2c
 800b418:	4630      	mov	r0, r6
 800b41a:	f7ff fd03 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b41e:	2320      	movs	r3, #32
 800b420:	fb90 f0f3 	sdiv	r0, r0, r3
 800b424:	4340      	muls	r0, r0
 800b426:	42a8      	cmp	r0, r5
 800b428:	dd87      	ble.n	800b33a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x38>
 800b42a:	2401      	movs	r4, #1
 800b42c:	e037      	b.n	800b49e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x19c>
 800b42e:	2102      	movs	r1, #2
 800b430:	fb93 f3f1 	sdiv	r3, r3, r1
 800b434:	4413      	add	r3, r2
 800b436:	9306      	str	r3, [sp, #24]
 800b438:	fb93 f3f1 	sdiv	r3, r3, r1
 800b43c:	9305      	str	r3, [sp, #20]
 800b43e:	e788      	b.n	800b352 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x50>
 800b440:	f107 0320 	add.w	r3, r7, #32
 800b444:	fb93 f7f5 	sdiv	r7, r3, r5
 800b448:	fb05 3717 	mls	r7, r5, r7, r3
 800b44c:	1bea      	subs	r2, r5, r7
 800b44e:	fb92 f7f5 	sdiv	r7, r2, r5
 800b452:	fb05 2717 	mls	r7, r5, r7, r2
 800b456:	441f      	add	r7, r3
 800b458:	e78f      	b.n	800b37a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800b45a:	9907      	ldr	r1, [sp, #28]
 800b45c:	428a      	cmp	r2, r1
 800b45e:	dd09      	ble.n	800b474 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800b460:	9a05      	ldr	r2, [sp, #20]
 800b462:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800b466:	930a      	str	r3, [sp, #40]	; 0x28
 800b468:	aa04      	add	r2, sp, #16
 800b46a:	4633      	mov	r3, r6
 800b46c:	a90b      	add	r1, sp, #44	; 0x2c
 800b46e:	4620      	mov	r0, r4
 800b470:	f7ff fd98 	bl	800afa4 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800b474:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 800b478:	9a06      	ldr	r2, [sp, #24]
 800b47a:	1ac3      	subs	r3, r0, r3
 800b47c:	b99a      	cbnz	r2, 800b4a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1a4>
 800b47e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800b482:	da04      	bge.n	800b48e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800b484:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 800b488:	a80b      	add	r0, sp, #44	; 0x2c
 800b48a:	f011 fafb 	bl	801ca84 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800b48e:	21ff      	movs	r1, #255	; 0xff
 800b490:	a80b      	add	r0, sp, #44	; 0x2c
 800b492:	f011 fc6c 	bl	801cd6e <_ZN8touchgfx6Canvas6renderEh>
 800b496:	4604      	mov	r4, r0
 800b498:	a80b      	add	r0, sp, #44	; 0x2c
 800b49a:	f011 fca7 	bl	801cdec <_ZN8touchgfx6CanvasD1Ev>
 800b49e:	4620      	mov	r0, r4
 800b4a0:	b03a      	add	sp, #232	; 0xe8
 800b4a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4a6:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 800b4aa:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800b4ae:	ea4f 1747 	mov.w	r7, r7, lsl #5
 800b4b2:	da2b      	bge.n	800b50c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800b4b4:	f7ff fce4 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800b4b8:	4631      	mov	r1, r6
 800b4ba:	900a      	str	r0, [sp, #40]	; 0x28
 800b4bc:	a805      	add	r0, sp, #20
 800b4be:	f7ff fcb1 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b4c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b4c4:	4418      	add	r0, r3
 800b4c6:	9008      	str	r0, [sp, #32]
 800b4c8:	9804      	ldr	r0, [sp, #16]
 800b4ca:	f7ff fcfa 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800b4ce:	4631      	mov	r1, r6
 800b4d0:	900a      	str	r0, [sp, #40]	; 0x28
 800b4d2:	a805      	add	r0, sp, #20
 800b4d4:	f7ff fca6 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b4d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b4da:	1a18      	subs	r0, r3, r0
 800b4dc:	9b04      	ldr	r3, [sp, #16]
 800b4de:	9009      	str	r0, [sp, #36]	; 0x24
 800b4e0:	443b      	add	r3, r7
 800b4e2:	930a      	str	r3, [sp, #40]	; 0x28
 800b4e4:	f10d 0818 	add.w	r8, sp, #24
 800b4e8:	9b04      	ldr	r3, [sp, #16]
 800b4ea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b4ec:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 800b4f0:	4293      	cmp	r3, r2
 800b4f2:	dd0b      	ble.n	800b50c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800b4f4:	ab09      	add	r3, sp, #36	; 0x24
 800b4f6:	e9cd 6800 	strd	r6, r8, [sp]
 800b4fa:	aa08      	add	r2, sp, #32
 800b4fc:	a90b      	add	r1, sp, #44	; 0x2c
 800b4fe:	4620      	mov	r0, r4
 800b500:	f7ff fd27 	bl	800af52 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800b504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b506:	443b      	add	r3, r7
 800b508:	930a      	str	r3, [sp, #40]	; 0x28
 800b50a:	e7ed      	b.n	800b4e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e6>
 800b50c:	9a04      	ldr	r2, [sp, #16]
 800b50e:	9b07      	ldr	r3, [sp, #28]
 800b510:	429a      	cmp	r2, r3
 800b512:	dd0a      	ble.n	800b52a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x228>
 800b514:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800b518:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800b51c:	930a      	str	r3, [sp, #40]	; 0x28
 800b51e:	aa04      	add	r2, sp, #16
 800b520:	4633      	mov	r3, r6
 800b522:	a90b      	add	r1, sp, #44	; 0x2c
 800b524:	4620      	mov	r0, r4
 800b526:	f7ff fd3d 	bl	800afa4 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800b52a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800b52e:	9b03      	ldr	r3, [sp, #12]
 800b530:	4642      	mov	r2, r8
 800b532:	429a      	cmp	r2, r3
 800b534:	eba8 0805 	sub.w	r8, r8, r5
 800b538:	db0c      	blt.n	800b554 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x252>
 800b53a:	9207      	str	r2, [sp, #28]
 800b53c:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800b540:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800b544:	930a      	str	r3, [sp, #40]	; 0x28
 800b546:	aa07      	add	r2, sp, #28
 800b548:	4633      	mov	r3, r6
 800b54a:	a90b      	add	r1, sp, #44	; 0x2c
 800b54c:	4620      	mov	r0, r4
 800b54e:	f7ff fd29 	bl	800afa4 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800b552:	e7ec      	b.n	800b52e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800b554:	9a07      	ldr	r2, [sp, #28]
 800b556:	4293      	cmp	r3, r2
 800b558:	da0a      	bge.n	800b570 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x26e>
 800b55a:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800b55e:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800b562:	930a      	str	r3, [sp, #40]	; 0x28
 800b564:	aa03      	add	r2, sp, #12
 800b566:	4633      	mov	r3, r6
 800b568:	a90b      	add	r1, sp, #44	; 0x2c
 800b56a:	4620      	mov	r0, r4
 800b56c:	f7ff fd1a 	bl	800afa4 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800b570:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 800b574:	1a1b      	subs	r3, r3, r0
 800b576:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800b57a:	da88      	bge.n	800b48e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800b57c:	f7ff fc80 	bl	800ae80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800b580:	4631      	mov	r1, r6
 800b582:	900a      	str	r0, [sp, #40]	; 0x28
 800b584:	a805      	add	r0, sp, #20
 800b586:	f7ff fc4d 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b58a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b58c:	4418      	add	r0, r3
 800b58e:	9008      	str	r0, [sp, #32]
 800b590:	9803      	ldr	r0, [sp, #12]
 800b592:	f7ff fc96 	bl	800aec2 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800b596:	4631      	mov	r1, r6
 800b598:	900a      	str	r0, [sp, #40]	; 0x28
 800b59a:	a805      	add	r0, sp, #20
 800b59c:	f7ff fc42 	bl	800ae24 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800b5a0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b5a2:	1a18      	subs	r0, r3, r0
 800b5a4:	9b03      	ldr	r3, [sp, #12]
 800b5a6:	9009      	str	r0, [sp, #36]	; 0x24
 800b5a8:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 800b5ac:	443b      	add	r3, r7
 800b5ae:	930a      	str	r3, [sp, #40]	; 0x28
 800b5b0:	ad06      	add	r5, sp, #24
 800b5b2:	9a03      	ldr	r2, [sp, #12]
 800b5b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b5b6:	429a      	cmp	r2, r3
 800b5b8:	f77f af69 	ble.w	800b48e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800b5bc:	ab09      	add	r3, sp, #36	; 0x24
 800b5be:	e9cd 6500 	strd	r6, r5, [sp]
 800b5c2:	aa08      	add	r2, sp, #32
 800b5c4:	a90b      	add	r1, sp, #44	; 0x2c
 800b5c6:	4620      	mov	r0, r4
 800b5c8:	f7ff fcc3 	bl	800af52 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800b5cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b5ce:	443b      	add	r3, r7
 800b5d0:	930a      	str	r3, [sp, #40]	; 0x28
 800b5d2:	e7ee      	b.n	800b5b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b0>

0800b5d4 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 800b5d4:	6281      	str	r1, [r0, #40]	; 0x28
 800b5d6:	4770      	bx	lr

0800b5d8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800b5d8:	b513      	push	{r0, r1, r4, lr}
 800b5da:	6803      	ldr	r3, [r0, #0]
 800b5dc:	4604      	mov	r4, r0
 800b5de:	4601      	mov	r1, r0
 800b5e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b5e2:	4668      	mov	r0, sp
 800b5e4:	4798      	blx	r3
 800b5e6:	6823      	ldr	r3, [r4, #0]
 800b5e8:	4669      	mov	r1, sp
 800b5ea:	691b      	ldr	r3, [r3, #16]
 800b5ec:	4620      	mov	r0, r4
 800b5ee:	4798      	blx	r3
 800b5f0:	b002      	add	sp, #8
 800b5f2:	bd10      	pop	{r4, pc}

0800b5f4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 800b5f4:	b510      	push	{r4, lr}
 800b5f6:	2200      	movs	r2, #0
 800b5f8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800b5fc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800b600:	8002      	strh	r2, [r0, #0]
 800b602:	8042      	strh	r2, [r0, #2]
 800b604:	8084      	strh	r4, [r0, #4]
 800b606:	80c1      	strh	r1, [r0, #6]
 800b608:	bd10      	pop	{r4, pc}

0800b60a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 800b60a:	2200      	movs	r2, #0
 800b60c:	8002      	strh	r2, [r0, #0]
 800b60e:	8042      	strh	r2, [r0, #2]
 800b610:	8082      	strh	r2, [r0, #4]
 800b612:	80c2      	strh	r2, [r0, #6]
 800b614:	4770      	bx	lr
	...

0800b618 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 800b618:	b508      	push	{r3, lr}
 800b61a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b61c:	b928      	cbnz	r0, 800b62a <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 800b61e:	4b03      	ldr	r3, [pc, #12]	; (800b62c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 800b620:	4a03      	ldr	r2, [pc, #12]	; (800b630 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 800b622:	4804      	ldr	r0, [pc, #16]	; (800b634 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 800b624:	2123      	movs	r1, #35	; 0x23
 800b626:	f012 fcdf 	bl	801dfe8 <__assert_func>
 800b62a:	bd08      	pop	{r3, pc}
 800b62c:	080211f4 	.word	0x080211f4
 800b630:	080212d4 	.word	0x080212d4
 800b634:	0802121b 	.word	0x0802121b

0800b638 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800b638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b63c:	4604      	mov	r4, r0
 800b63e:	b089      	sub	sp, #36	; 0x24
 800b640:	6808      	ldr	r0, [r1, #0]
 800b642:	6849      	ldr	r1, [r1, #4]
 800b644:	ab02      	add	r3, sp, #8
 800b646:	c303      	stmia	r3!, {r0, r1}
 800b648:	4b41      	ldr	r3, [pc, #260]	; (800b750 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x118>)
 800b64a:	781b      	ldrb	r3, [r3, #0]
 800b64c:	2b01      	cmp	r3, #1
 800b64e:	6823      	ldr	r3, [r4, #0]
 800b650:	4621      	mov	r1, r4
 800b652:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b654:	a804      	add	r0, sp, #16
 800b656:	bf1f      	itttt	ne
 800b658:	f10d 0906 	addne.w	r9, sp, #6
 800b65c:	ae03      	addne	r6, sp, #12
 800b65e:	f10d 050e 	addne.w	r5, sp, #14
 800b662:	f10d 080a 	addne.w	r8, sp, #10
 800b666:	bf01      	itttt	eq
 800b668:	f10d 090e 	addeq.w	r9, sp, #14
 800b66c:	f10d 0606 	addeq.w	r6, sp, #6
 800b670:	ad03      	addeq	r5, sp, #12
 800b672:	f10d 0808 	addeq.w	r8, sp, #8
 800b676:	4798      	blx	r3
 800b678:	f04f 0a00 	mov.w	sl, #0
 800b67c:	f04f 0b01 	mov.w	fp, #1
 800b680:	f9b5 3000 	ldrsh.w	r3, [r5]
 800b684:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800b688:	2b00      	cmp	r3, #0
 800b68a:	d056      	beq.n	800b73a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x102>
 800b68c:	4293      	cmp	r3, r2
 800b68e:	bfa8      	it	ge
 800b690:	4613      	movge	r3, r2
 800b692:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b696:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800b69a:	2f00      	cmp	r7, #0
 800b69c:	dd34      	ble.n	800b708 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd0>
 800b69e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800b6a2:	f8bd c014 	ldrh.w	ip, [sp, #20]
 800b6a6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800b6aa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800b6ae:	f9b6 e000 	ldrsh.w	lr, [r6]
 800b6b2:	f9b9 1000 	ldrsh.w	r1, [r9]
 800b6b6:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b6ba:	4484      	add	ip, r0
 800b6bc:	fa0f fc8c 	sxth.w	ip, ip
 800b6c0:	4562      	cmp	r2, ip
 800b6c2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6c6:	f8ad e01c 	strh.w	lr, [sp, #28]
 800b6ca:	f8ad 101e 	strh.w	r1, [sp, #30]
 800b6ce:	da29      	bge.n	800b724 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800b6d0:	4472      	add	r2, lr
 800b6d2:	b212      	sxth	r2, r2
 800b6d4:	4290      	cmp	r0, r2
 800b6d6:	da25      	bge.n	800b724 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800b6d8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 800b6dc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800b6e0:	4402      	add	r2, r0
 800b6e2:	b212      	sxth	r2, r2
 800b6e4:	4293      	cmp	r3, r2
 800b6e6:	da1d      	bge.n	800b724 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800b6e8:	440b      	add	r3, r1
 800b6ea:	b21b      	sxth	r3, r3
 800b6ec:	4298      	cmp	r0, r3
 800b6ee:	da19      	bge.n	800b724 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800b6f0:	6823      	ldr	r3, [r4, #0]
 800b6f2:	a906      	add	r1, sp, #24
 800b6f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b6f6:	4620      	mov	r0, r4
 800b6f8:	4798      	blx	r3
 800b6fa:	b998      	cbnz	r0, 800b724 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800b6fc:	107f      	asrs	r7, r7, #1
 800b6fe:	f8ad 7006 	strh.w	r7, [sp, #6]
 800b702:	f04f 0a01 	mov.w	sl, #1
 800b706:	e7c6      	b.n	800b696 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800b708:	d10c      	bne.n	800b724 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800b70a:	f8ad b006 	strh.w	fp, [sp, #6]
 800b70e:	f8b8 2000 	ldrh.w	r2, [r8]
 800b712:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 800b716:	440a      	add	r2, r1
 800b718:	f8a8 2000 	strh.w	r2, [r8]
 800b71c:	882b      	ldrh	r3, [r5, #0]
 800b71e:	1a5b      	subs	r3, r3, r1
 800b720:	802b      	strh	r3, [r5, #0]
 800b722:	e7ad      	b.n	800b680 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800b724:	f1ba 0f00 	cmp.w	sl, #0
 800b728:	d0f1      	beq.n	800b70e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 800b72a:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800b72e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800b732:	429a      	cmp	r2, r3
 800b734:	bf08      	it	eq
 800b736:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 800b738:	e7e9      	b.n	800b70e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 800b73a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800b73e:	429a      	cmp	r2, r3
 800b740:	bf04      	itt	eq
 800b742:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 800b746:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 800b748:	b009      	add	sp, #36	; 0x24
 800b74a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b74e:	bf00      	nop
 800b750:	2000d350 	.word	0x2000d350

0800b754 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800b754:	2200      	movs	r2, #0
 800b756:	8082      	strh	r2, [r0, #4]
 800b758:	80c2      	strh	r2, [r0, #6]
 800b75a:	8102      	strh	r2, [r0, #8]
 800b75c:	8142      	strh	r2, [r0, #10]
 800b75e:	8182      	strh	r2, [r0, #12]
 800b760:	81c2      	strh	r2, [r0, #14]
 800b762:	8202      	strh	r2, [r0, #16]
 800b764:	8242      	strh	r2, [r0, #18]
 800b766:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b76a:	61c2      	str	r2, [r0, #28]
 800b76c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b770:	2101      	movs	r1, #1
 800b772:	6282      	str	r2, [r0, #40]	; 0x28
 800b774:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b778:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b77c:	8582      	strh	r2, [r0, #44]	; 0x2c
 800b77e:	4903      	ldr	r1, [pc, #12]	; (800b78c <_ZN8touchgfx12CanvasWidgetC1Ev+0x38>)
 800b780:	6001      	str	r1, [r0, #0]
 800b782:	22ff      	movs	r2, #255	; 0xff
 800b784:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800b788:	4770      	bx	lr
 800b78a:	bf00      	nop
 800b78c:	08021260 	.word	0x08021260

0800b790 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800b790:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800b794:	4770      	bx	lr

0800b796 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800b796:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800b79a:	4770      	bx	lr

0800b79c <_ZN8touchgfx13ScalableImageD1Ev>:
 800b79c:	4770      	bx	lr

0800b79e <_ZN8touchgfx13ScalableImageD0Ev>:
 800b79e:	b510      	push	{r4, lr}
 800b7a0:	212c      	movs	r1, #44	; 0x2c
 800b7a2:	4604      	mov	r4, r0
 800b7a4:	f012 fbf1 	bl	801df8a <_ZdlPvj>
 800b7a8:	4620      	mov	r0, r4
 800b7aa:	bd10      	pop	{r4, pc}

0800b7ac <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800b7ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b7ae:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b7b2:	2bff      	cmp	r3, #255	; 0xff
 800b7b4:	4605      	mov	r5, r0
 800b7b6:	d007      	beq.n	800b7c8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x1c>
 800b7b8:	2300      	movs	r3, #0
 800b7ba:	802b      	strh	r3, [r5, #0]
 800b7bc:	806b      	strh	r3, [r5, #2]
 800b7be:	80ab      	strh	r3, [r5, #4]
 800b7c0:	80eb      	strh	r3, [r5, #6]
 800b7c2:	4628      	mov	r0, r5
 800b7c4:	b004      	add	sp, #16
 800b7c6:	bd70      	pop	{r4, r5, r6, pc}
 800b7c8:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800b7cc:	4621      	mov	r1, r4
 800b7ce:	4668      	mov	r0, sp
 800b7d0:	f005 fa38 	bl	8010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b7d4:	4620      	mov	r0, r4
 800b7d6:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800b7da:	f005 f9bf 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b7de:	4286      	cmp	r6, r0
 800b7e0:	d1ea      	bne.n	800b7b8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800b7e2:	4621      	mov	r1, r4
 800b7e4:	a802      	add	r0, sp, #8
 800b7e6:	f005 fa2d 	bl	8010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b7ea:	4620      	mov	r0, r4
 800b7ec:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800b7f0:	f005 f9ee 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b7f4:	4286      	cmp	r6, r0
 800b7f6:	d1df      	bne.n	800b7b8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800b7f8:	4621      	mov	r1, r4
 800b7fa:	4628      	mov	r0, r5
 800b7fc:	f005 fa22 	bl	8010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b800:	e7df      	b.n	800b7c2 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x16>
	...

0800b804 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800b804:	b538      	push	{r3, r4, r5, lr}
 800b806:	2300      	movs	r3, #0
 800b808:	8083      	strh	r3, [r0, #4]
 800b80a:	80c3      	strh	r3, [r0, #6]
 800b80c:	8103      	strh	r3, [r0, #8]
 800b80e:	8143      	strh	r3, [r0, #10]
 800b810:	8183      	strh	r3, [r0, #12]
 800b812:	81c3      	strh	r3, [r0, #14]
 800b814:	8203      	strh	r3, [r0, #16]
 800b816:	8243      	strh	r3, [r0, #18]
 800b818:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800b81c:	61c3      	str	r3, [r0, #28]
 800b81e:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800b822:	4b09      	ldr	r3, [pc, #36]	; (800b848 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x44>)
 800b824:	6003      	str	r3, [r0, #0]
 800b826:	2501      	movs	r5, #1
 800b828:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b82c:	4604      	mov	r4, r0
 800b82e:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800b832:	84c3      	strh	r3, [r0, #38]	; 0x26
 800b834:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800b838:	f000 fd60 	bl	800c2fc <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b83c:	4b03      	ldr	r3, [pc, #12]	; (800b84c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800b83e:	6023      	str	r3, [r4, #0]
 800b840:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800b844:	4620      	mov	r0, r4
 800b846:	bd38      	pop	{r3, r4, r5, pc}
 800b848:	080215a4 	.word	0x080215a4
 800b84c:	0802132c 	.word	0x0802132c

0800b850 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800b850:	4603      	mov	r3, r0
 800b852:	3026      	adds	r0, #38	; 0x26
 800b854:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800b858:	b90b      	cbnz	r3, 800b85e <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800b85a:	f003 bc8e 	b.w	800f17a <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800b85e:	f003 bc9c 	b.w	800f19a <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800b864 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800b864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b868:	4604      	mov	r4, r0
 800b86a:	469b      	mov	fp, r3
 800b86c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800b870:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800b874:	f9b1 6000 	ldrsh.w	r6, [r1]
 800b878:	8888      	ldrh	r0, [r1, #4]
 800b87a:	b0ab      	sub	sp, #172	; 0xac
 800b87c:	4430      	add	r0, r6
 800b87e:	b280      	uxth	r0, r0
 800b880:	9206      	str	r2, [sp, #24]
 800b882:	fa0f fe80 	sxth.w	lr, r0
 800b886:	2200      	movs	r2, #0
 800b888:	4596      	cmp	lr, r2
 800b88a:	e9dd a934 	ldrd	sl, r9, [sp, #208]	; 0xd0
 800b88e:	e9dd 8736 	ldrd	r8, r7, [sp, #216]	; 0xd8
 800b892:	920e      	str	r2, [sp, #56]	; 0x38
 800b894:	f340 80f3 	ble.w	800ba7e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800b898:	45b4      	cmp	ip, r6
 800b89a:	f340 80f0 	ble.w	800ba7e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800b89e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800b8a2:	88ca      	ldrh	r2, [r1, #6]
 800b8a4:	442a      	add	r2, r5
 800b8a6:	b292      	uxth	r2, r2
 800b8a8:	b211      	sxth	r1, r2
 800b8aa:	2900      	cmp	r1, #0
 800b8ac:	f340 80e7 	ble.w	800ba7e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800b8b0:	42ab      	cmp	r3, r5
 800b8b2:	f340 80e4 	ble.w	800ba7e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800b8b6:	45f4      	cmp	ip, lr
 800b8b8:	bfb8      	it	lt
 800b8ba:	fa1f f08c 	uxthlt.w	r0, ip
 800b8be:	428b      	cmp	r3, r1
 800b8c0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800b8c4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800b8c8:	bfb8      	it	lt
 800b8ca:	b29a      	uxthlt	r2, r3
 800b8cc:	1b80      	subs	r0, r0, r6
 800b8ce:	1b52      	subs	r2, r2, r5
 800b8d0:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
 800b8d4:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800b8d8:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800b8dc:	f8ad 503a 	strh.w	r5, [sp, #58]	; 0x3a
 800b8e0:	ab0e      	add	r3, sp, #56	; 0x38
 800b8e2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b8e6:	6822      	ldr	r2, [r4, #0]
 800b8e8:	9307      	str	r3, [sp, #28]
 800b8ea:	ad10      	add	r5, sp, #64	; 0x40
 800b8ec:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800b8ee:	e885 0003 	stmia.w	r5, {r0, r1}
 800b8f2:	4629      	mov	r1, r5
 800b8f4:	4620      	mov	r0, r4
 800b8f6:	4790      	blx	r2
 800b8f8:	4621      	mov	r1, r4
 800b8fa:	a812      	add	r0, sp, #72	; 0x48
 800b8fc:	f003 fb97 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800b900:	a812      	add	r0, sp, #72	; 0x48
 800b902:	f002 f9af 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800b906:	9b07      	ldr	r3, [sp, #28]
 800b908:	1d26      	adds	r6, r4, #4
 800b90a:	4618      	mov	r0, r3
 800b90c:	4631      	mov	r1, r6
 800b90e:	f002 f991 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b912:	4628      	mov	r0, r5
 800b914:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800b918:	f002 f9a4 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800b91c:	4628      	mov	r0, r5
 800b91e:	f005 fa25 	bl	8010d6c <_ZNK8touchgfx6Bitmap7getDataEv>
 800b922:	9007      	str	r0, [sp, #28]
 800b924:	2800      	cmp	r0, #0
 800b926:	f000 80a7 	beq.w	800ba78 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x214>
 800b92a:	f8db 2000 	ldr.w	r2, [fp]
 800b92e:	9208      	str	r2, [sp, #32]
 800b930:	f8db 2004 	ldr.w	r2, [fp, #4]
 800b934:	9209      	str	r2, [sp, #36]	; 0x24
 800b936:	f8db 2008 	ldr.w	r2, [fp, #8]
 800b93a:	920a      	str	r2, [sp, #40]	; 0x28
 800b93c:	f8da 2000 	ldr.w	r2, [sl]
 800b940:	920b      	str	r2, [sp, #44]	; 0x2c
 800b942:	f8da 2004 	ldr.w	r2, [sl, #4]
 800b946:	920c      	str	r2, [sp, #48]	; 0x30
 800b948:	f8da 2008 	ldr.w	r2, [sl, #8]
 800b94c:	920d      	str	r2, [sp, #52]	; 0x34
 800b94e:	a90b      	add	r1, sp, #44	; 0x2c
 800b950:	4632      	mov	r2, r6
 800b952:	a808      	add	r0, sp, #32
 800b954:	f002 f952 	bl	800dbfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b958:	4632      	mov	r2, r6
 800b95a:	a90c      	add	r1, sp, #48	; 0x30
 800b95c:	a809      	add	r0, sp, #36	; 0x24
 800b95e:	f002 f94d 	bl	800dbfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b962:	4632      	mov	r2, r6
 800b964:	a90d      	add	r1, sp, #52	; 0x34
 800b966:	a80a      	add	r0, sp, #40	; 0x28
 800b968:	f002 f948 	bl	800dbfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800b96c:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800b970:	ed97 6a00 	vldr	s12, [r7]
 800b974:	ed99 5a00 	vldr	s10, [r9]
 800b978:	edd8 5a00 	vldr	s11, [r8]
 800b97c:	edd9 6a01 	vldr	s13, [r9, #4]
 800b980:	f8d9 e008 	ldr.w	lr, [r9, #8]
 800b984:	f8d8 c008 	ldr.w	ip, [r8, #8]
 800b988:	f8d7 a004 	ldr.w	sl, [r7, #4]
 800b98c:	9b06      	ldr	r3, [sp, #24]
 800b98e:	f8d8 b004 	ldr.w	fp, [r8, #4]
 800b992:	68bf      	ldr	r7, [r7, #8]
 800b994:	ed8d 5a1d 	vstr	s10, [sp, #116]	; 0x74
 800b998:	eeb0 7a67 	vmov.f32	s14, s15
 800b99c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800b9a0:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800b9a4:	edcd 5a1e 	vstr	s11, [sp, #120]	; 0x78
 800b9a8:	ee17 6a10 	vmov	r6, s14
 800b9ac:	eeb0 7a67 	vmov.f32	s14, s15
 800b9b0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800b9b4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800b9b8:	ed8d 6a1f 	vstr	s12, [sp, #124]	; 0x7c
 800b9bc:	ee17 0a10 	vmov	r0, s14
 800b9c0:	eeb0 7a67 	vmov.f32	s14, s15
 800b9c4:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800b9c8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800b9cc:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 800b9d0:	ee17 1a10 	vmov	r1, s14
 800b9d4:	eeb0 7a67 	vmov.f32	s14, s15
 800b9d8:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800b9dc:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800b9e0:	f8cd e09c 	str.w	lr, [sp, #156]	; 0x9c
 800b9e4:	ee17 2a10 	vmov	r2, s14
 800b9e8:	ed9d 7a08 	vldr	s14, [sp, #32]
 800b9ec:	9225      	str	r2, [sp, #148]	; 0x94
 800b9ee:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800b9f2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800b9f6:	4a23      	ldr	r2, [pc, #140]	; (800ba84 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800b9f8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 800b9fc:	e9cd 0120 	strd	r0, r1, [sp, #128]	; 0x80
 800ba00:	edcd 7a26 	vstr	s15, [sp, #152]	; 0x98
 800ba04:	f8cd c0a0 	str.w	ip, [sp, #160]	; 0xa0
 800ba08:	9314      	str	r3, [sp, #80]	; 0x50
 800ba0a:	961c      	str	r6, [sp, #112]	; 0x70
 800ba0c:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800ba10:	f8cd a090 	str.w	sl, [sp, #144]	; 0x90
 800ba14:	9729      	str	r7, [sp, #164]	; 0xa4
 800ba16:	4628      	mov	r0, r5
 800ba18:	8812      	ldrh	r2, [r2, #0]
 800ba1a:	9b07      	ldr	r3, [sp, #28]
 800ba1c:	9215      	str	r2, [sp, #84]	; 0x54
 800ba1e:	9316      	str	r3, [sp, #88]	; 0x58
 800ba20:	f005 f9d6 	bl	8010dd0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800ba24:	9017      	str	r0, [sp, #92]	; 0x5c
 800ba26:	4628      	mov	r0, r5
 800ba28:	f005 f898 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ba2c:	9018      	str	r0, [sp, #96]	; 0x60
 800ba2e:	4628      	mov	r0, r5
 800ba30:	f005 f8ce 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ba34:	9019      	str	r0, [sp, #100]	; 0x64
 800ba36:	4628      	mov	r0, r5
 800ba38:	f005 f890 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ba3c:	4b12      	ldr	r3, [pc, #72]	; (800ba88 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x224>)
 800ba3e:	901a      	str	r0, [sp, #104]	; 0x68
 800ba40:	681b      	ldr	r3, [r3, #0]
 800ba42:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ba46:	b10a      	cbz	r2, 800ba4c <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1e8>
 800ba48:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800ba4a:	b905      	cbnz	r5, 800ba4e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800ba4c:	689d      	ldr	r5, [r3, #8]
 800ba4e:	682b      	ldr	r3, [r5, #0]
 800ba50:	4620      	mov	r0, r4
 800ba52:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800ba54:	f7ff fefc 	bl	800b850 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800ba58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ba5c:	9304      	str	r3, [sp, #16]
 800ba5e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ba62:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800ba66:	ab10      	add	r3, sp, #64	; 0x40
 800ba68:	9301      	str	r3, [sp, #4]
 800ba6a:	ab12      	add	r3, sp, #72	; 0x48
 800ba6c:	9300      	str	r3, [sp, #0]
 800ba6e:	aa1b      	add	r2, sp, #108	; 0x6c
 800ba70:	ab16      	add	r3, sp, #88	; 0x58
 800ba72:	a914      	add	r1, sp, #80	; 0x50
 800ba74:	4628      	mov	r0, r5
 800ba76:	47b0      	blx	r6
 800ba78:	b02b      	add	sp, #172	; 0xac
 800ba7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba7e:	2300      	movs	r3, #0
 800ba80:	930f      	str	r3, [sp, #60]	; 0x3c
 800ba82:	e72d      	b.n	800b8e0 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800ba84:	2000d352 	.word	0x2000d352
 800ba88:	2000d358 	.word	0x2000d358

0800ba8c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800ba8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ba90:	ed2d 8b08 	vpush	{d8-d11}
 800ba94:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800ba98:	b094      	sub	sp, #80	; 0x50
 800ba9a:	4680      	mov	r8, r0
 800ba9c:	4689      	mov	r9, r1
 800ba9e:	2b00      	cmp	r3, #0
 800baa0:	d07d      	beq.n	800bb9e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x112>
 800baa2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800baa6:	ed9f 8a45 	vldr	s16, [pc, #276]	; 800bbbc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x130>
 800baaa:	ee09 3a10 	vmov	s18, r3
 800baae:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bab2:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800bab6:	ee08 3a90 	vmov	s17, r3
 800baba:	4620      	mov	r0, r4
 800babc:	4b40      	ldr	r3, [pc, #256]	; (800bbc0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x134>)
 800babe:	930b      	str	r3, [sp, #44]	; 0x2c
 800bac0:	930c      	str	r3, [sp, #48]	; 0x30
 800bac2:	930d      	str	r3, [sp, #52]	; 0x34
 800bac4:	f005 f84a 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bac8:	ee07 0a90 	vmov	s15, r0
 800bacc:	4620      	mov	r0, r4
 800bace:	eeb8 aa67 	vcvt.f32.u32	s20, s15
 800bad2:	f005 f87d 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bad6:	4b3b      	ldr	r3, [pc, #236]	; (800bbc4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x138>)
 800bad8:	781b      	ldrb	r3, [r3, #0]
 800bada:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800bade:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800bae2:	ee07 0a90 	vmov	s15, r0
 800bae6:	2b01      	cmp	r3, #1
 800bae8:	ee39 9a08 	vadd.f32	s18, s18, s16
 800baec:	ee78 8a88 	vadd.f32	s17, s17, s16
 800baf0:	eef8 9a67 	vcvt.f32.u32	s19, s15
 800baf4:	d158      	bne.n	800bba8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x11c>
 800baf6:	eef0 aa4a 	vmov.f32	s21, s20
 800bafa:	eeb0 ba69 	vmov.f32	s22, s19
 800bafe:	eef0 ba69 	vmov.f32	s23, s19
 800bb02:	ee1a aa10 	vmov	sl, s20
 800bb06:	eef0 9a48 	vmov.f32	s19, s16
 800bb0a:	eeb0 aa48 	vmov.f32	s20, s16
 800bb0e:	af11      	add	r7, sp, #68	; 0x44
 800bb10:	ae0e      	add	r6, sp, #56	; 0x38
 800bb12:	ad0b      	add	r5, sp, #44	; 0x2c
 800bb14:	ac08      	add	r4, sp, #32
 800bb16:	ab05      	add	r3, sp, #20
 800bb18:	2200      	movs	r2, #0
 800bb1a:	4649      	mov	r1, r9
 800bb1c:	4640      	mov	r0, r8
 800bb1e:	9703      	str	r7, [sp, #12]
 800bb20:	9602      	str	r6, [sp, #8]
 800bb22:	9501      	str	r5, [sp, #4]
 800bb24:	9400      	str	r4, [sp, #0]
 800bb26:	ed8d 8a05 	vstr	s16, [sp, #20]
 800bb2a:	ed8d 9a06 	vstr	s18, [sp, #24]
 800bb2e:	ed8d 9a07 	vstr	s18, [sp, #28]
 800bb32:	ed8d 8a08 	vstr	s16, [sp, #32]
 800bb36:	ed8d 8a09 	vstr	s16, [sp, #36]	; 0x24
 800bb3a:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800bb3e:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800bb42:	ed8d aa0f 	vstr	s20, [sp, #60]	; 0x3c
 800bb46:	edcd ba10 	vstr	s23, [sp, #64]	; 0x40
 800bb4a:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800bb4e:	ed8d 8a12 	vstr	s16, [sp, #72]	; 0x48
 800bb52:	edcd 9a13 	vstr	s19, [sp, #76]	; 0x4c
 800bb56:	f7ff fe85 	bl	800b864 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800bb5a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800bb5e:	e9cd 4500 	strd	r4, r5, [sp]
 800bb62:	ab05      	add	r3, sp, #20
 800bb64:	2200      	movs	r2, #0
 800bb66:	4649      	mov	r1, r9
 800bb68:	4640      	mov	r0, r8
 800bb6a:	ed8d 8a05 	vstr	s16, [sp, #20]
 800bb6e:	ed8d 9a06 	vstr	s18, [sp, #24]
 800bb72:	ed8d 8a07 	vstr	s16, [sp, #28]
 800bb76:	ed8d 8a08 	vstr	s16, [sp, #32]
 800bb7a:	edcd 8a09 	vstr	s17, [sp, #36]	; 0x24
 800bb7e:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800bb82:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800bb86:	edcd ba0f 	vstr	s23, [sp, #60]	; 0x3c
 800bb8a:	ed8d ba10 	vstr	s22, [sp, #64]	; 0x40
 800bb8e:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800bb92:	edcd 9a12 	vstr	s19, [sp, #72]	; 0x48
 800bb96:	edcd aa13 	vstr	s21, [sp, #76]	; 0x4c
 800bb9a:	f7ff fe63 	bl	800b864 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800bb9e:	b014      	add	sp, #80	; 0x50
 800bba0:	ecbd 8b08 	vpop	{d8-d11}
 800bba4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bba8:	eef0 aa69 	vmov.f32	s21, s19
 800bbac:	eef0 ba4a 	vmov.f32	s23, s20
 800bbb0:	eeb0 ba48 	vmov.f32	s22, s16
 800bbb4:	ee18 aa10 	vmov	sl, s16
 800bbb8:	e7a9      	b.n	800bb0e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x82>
 800bbba:	bf00      	nop
 800bbbc:	00000000 	.word	0x00000000
 800bbc0:	42c80000 	.word	0x42c80000
 800bbc4:	2000d350 	.word	0x2000d350

0800bbc8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800bbc8:	2200      	movs	r2, #0
 800bbca:	8002      	strh	r2, [r0, #0]
 800bbcc:	8042      	strh	r2, [r0, #2]
 800bbce:	8082      	strh	r2, [r0, #4]
 800bbd0:	80c2      	strh	r2, [r0, #6]
 800bbd2:	4770      	bx	lr

0800bbd4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800bbd4:	b570      	push	{r4, r5, r6, lr}
 800bbd6:	6803      	ldr	r3, [r0, #0]
 800bbd8:	4604      	mov	r4, r0
 800bbda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bbdc:	4615      	mov	r5, r2
 800bbde:	4798      	blx	r3
 800bbe0:	6823      	ldr	r3, [r4, #0]
 800bbe2:	4629      	mov	r1, r5
 800bbe4:	4620      	mov	r0, r4
 800bbe6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800bbe8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbec:	4718      	bx	r3

0800bbee <_ZN8touchgfx8TextAreaD1Ev>:
 800bbee:	4770      	bx	lr

0800bbf0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800bbf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbf2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bbf4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bbf8:	4299      	cmp	r1, r3
 800bbfa:	d029      	beq.n	800bc50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800bbfc:	4b15      	ldr	r3, [pc, #84]	; (800bc54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800bbfe:	681b      	ldr	r3, [r3, #0]
 800bc00:	b92b      	cbnz	r3, 800bc0e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800bc02:	4b15      	ldr	r3, [pc, #84]	; (800bc58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800bc04:	4a15      	ldr	r2, [pc, #84]	; (800bc5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800bc06:	21b1      	movs	r1, #177	; 0xb1
 800bc08:	4815      	ldr	r0, [pc, #84]	; (800bc60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800bc0a:	f012 f9ed 	bl	801dfe8 <__assert_func>
 800bc0e:	4a15      	ldr	r2, [pc, #84]	; (800bc64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800bc10:	8812      	ldrh	r2, [r2, #0]
 800bc12:	428a      	cmp	r2, r1
 800bc14:	d803      	bhi.n	800bc1e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800bc16:	4b14      	ldr	r3, [pc, #80]	; (800bc68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800bc18:	4a10      	ldr	r2, [pc, #64]	; (800bc5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800bc1a:	21b2      	movs	r1, #178	; 0xb2
 800bc1c:	e7f4      	b.n	800bc08 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800bc1e:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800bc22:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800bc26:	4b11      	ldr	r3, [pc, #68]	; (800bc6c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800bc28:	7854      	ldrb	r4, [r2, #1]
 800bc2a:	681b      	ldr	r3, [r3, #0]
 800bc2c:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800bc30:	682b      	ldr	r3, [r5, #0]
 800bc32:	69de      	ldr	r6, [r3, #28]
 800bc34:	4b0e      	ldr	r3, [pc, #56]	; (800bc70 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800bc36:	6818      	ldr	r0, [r3, #0]
 800bc38:	f7f7 fc06 	bl	8003448 <_ZNK8touchgfx5Texts7getTextEt>
 800bc3c:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800bc40:	2300      	movs	r3, #0
 800bc42:	4602      	mov	r2, r0
 800bc44:	9300      	str	r3, [sp, #0]
 800bc46:	4621      	mov	r1, r4
 800bc48:	4628      	mov	r0, r5
 800bc4a:	47b0      	blx	r6
 800bc4c:	b002      	add	sp, #8
 800bc4e:	bd70      	pop	{r4, r5, r6, pc}
 800bc50:	2000      	movs	r0, #0
 800bc52:	e7fb      	b.n	800bc4c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800bc54:	2000d3c8 	.word	0x2000d3c8
 800bc58:	0801fcf0 	.word	0x0801fcf0
 800bc5c:	0802140c 	.word	0x0802140c
 800bc60:	0801fd7e 	.word	0x0801fd7e
 800bc64:	2000d3cc 	.word	0x2000d3cc
 800bc68:	0801fda7 	.word	0x0801fda7
 800bc6c:	2000d3d0 	.word	0x2000d3d0
 800bc70:	2000d3d4 	.word	0x2000d3d4

0800bc74 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800bc74:	b570      	push	{r4, r5, r6, lr}
 800bc76:	6803      	ldr	r3, [r0, #0]
 800bc78:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bc7a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800bc7c:	4b11      	ldr	r3, [pc, #68]	; (800bcc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800bc7e:	681b      	ldr	r3, [r3, #0]
 800bc80:	4604      	mov	r4, r0
 800bc82:	b28d      	uxth	r5, r1
 800bc84:	b92b      	cbnz	r3, 800bc92 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800bc86:	4b10      	ldr	r3, [pc, #64]	; (800bcc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800bc88:	4a10      	ldr	r2, [pc, #64]	; (800bccc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800bc8a:	21b1      	movs	r1, #177	; 0xb1
 800bc8c:	4810      	ldr	r0, [pc, #64]	; (800bcd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800bc8e:	f012 f9ab 	bl	801dfe8 <__assert_func>
 800bc92:	4910      	ldr	r1, [pc, #64]	; (800bcd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800bc94:	8809      	ldrh	r1, [r1, #0]
 800bc96:	4291      	cmp	r1, r2
 800bc98:	d803      	bhi.n	800bca2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800bc9a:	4b0f      	ldr	r3, [pc, #60]	; (800bcd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800bc9c:	4a0b      	ldr	r2, [pc, #44]	; (800bccc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800bc9e:	21b2      	movs	r1, #178	; 0xb2
 800bca0:	e7f4      	b.n	800bc8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800bca2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800bca6:	4b0d      	ldr	r3, [pc, #52]	; (800bcdc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800bca8:	681b      	ldr	r3, [r3, #0]
 800bcaa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800bcae:	6803      	ldr	r3, [r0, #0]
 800bcb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bcb2:	4798      	blx	r3
 800bcb4:	1a29      	subs	r1, r5, r0
 800bcb6:	4633      	mov	r3, r6
 800bcb8:	4620      	mov	r0, r4
 800bcba:	b209      	sxth	r1, r1
 800bcbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcc0:	4718      	bx	r3
 800bcc2:	bf00      	nop
 800bcc4:	2000d3c8 	.word	0x2000d3c8
 800bcc8:	0801fcf0 	.word	0x0801fcf0
 800bccc:	0802140c 	.word	0x0802140c
 800bcd0:	0801fd7e 	.word	0x0801fd7e
 800bcd4:	2000d3cc 	.word	0x2000d3cc
 800bcd8:	0801fda7 	.word	0x0801fda7
 800bcdc:	2000d3d0 	.word	0x2000d3d0

0800bce0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800bce0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bce4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bce6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bcea:	4293      	cmp	r3, r2
 800bcec:	b08c      	sub	sp, #48	; 0x30
 800bcee:	4604      	mov	r4, r0
 800bcf0:	4688      	mov	r8, r1
 800bcf2:	d05f      	beq.n	800bdb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800bcf4:	4e31      	ldr	r6, [pc, #196]	; (800bdbc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800bcf6:	6832      	ldr	r2, [r6, #0]
 800bcf8:	b92a      	cbnz	r2, 800bd06 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800bcfa:	4b31      	ldr	r3, [pc, #196]	; (800bdc0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800bcfc:	4a31      	ldr	r2, [pc, #196]	; (800bdc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800bcfe:	21b1      	movs	r1, #177	; 0xb1
 800bd00:	4831      	ldr	r0, [pc, #196]	; (800bdc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800bd02:	f012 f971 	bl	801dfe8 <__assert_func>
 800bd06:	4d31      	ldr	r5, [pc, #196]	; (800bdcc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800bd08:	8829      	ldrh	r1, [r5, #0]
 800bd0a:	4299      	cmp	r1, r3
 800bd0c:	d803      	bhi.n	800bd16 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800bd0e:	4b30      	ldr	r3, [pc, #192]	; (800bdd0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800bd10:	4a2c      	ldr	r2, [pc, #176]	; (800bdc4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800bd12:	21b2      	movs	r1, #178	; 0xb2
 800bd14:	e7f4      	b.n	800bd00 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800bd16:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800bd1a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800bd1e:	4b2d      	ldr	r3, [pc, #180]	; (800bdd4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800bd20:	681b      	ldr	r3, [r3, #0]
 800bd22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800bd26:	2a00      	cmp	r2, #0
 800bd28:	d044      	beq.n	800bdb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800bd2a:	784b      	ldrb	r3, [r1, #1]
 800bd2c:	9207      	str	r2, [sp, #28]
 800bd2e:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800bd32:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bd36:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800bd3a:	4b27      	ldr	r3, [pc, #156]	; (800bdd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800bd3c:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800bd40:	681b      	ldr	r3, [r3, #0]
 800bd42:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800bd46:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800bd4a:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800bd4e:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800bd52:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800bd56:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bd58:	9009      	str	r0, [sp, #36]	; 0x24
 800bd5a:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800bd5e:	f88d 9020 	strb.w	r9, [sp, #32]
 800bd62:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800bd66:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800bd6a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800bd6e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800bd72:	b10a      	cbz	r2, 800bd78 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800bd74:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800bd76:	b907      	cbnz	r7, 800bd7a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800bd78:	689f      	ldr	r7, [r3, #8]
 800bd7a:	f10d 0914 	add.w	r9, sp, #20
 800bd7e:	4621      	mov	r1, r4
 800bd80:	4648      	mov	r0, r9
 800bd82:	f003 f954 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bd86:	6833      	ldr	r3, [r6, #0]
 800bd88:	2b00      	cmp	r3, #0
 800bd8a:	d0b6      	beq.n	800bcfa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800bd8c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800bd8e:	882b      	ldrh	r3, [r5, #0]
 800bd90:	428b      	cmp	r3, r1
 800bd92:	d9bc      	bls.n	800bd0e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800bd94:	4b11      	ldr	r3, [pc, #68]	; (800bddc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800bd96:	6818      	ldr	r0, [r3, #0]
 800bd98:	f7f7 fb56 	bl	8003448 <_ZNK8touchgfx5Texts7getTextEt>
 800bd9c:	2300      	movs	r3, #0
 800bd9e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800bda2:	ab07      	add	r3, sp, #28
 800bda4:	9001      	str	r0, [sp, #4]
 800bda6:	9300      	str	r3, [sp, #0]
 800bda8:	e899 0006 	ldmia.w	r9, {r1, r2}
 800bdac:	4643      	mov	r3, r8
 800bdae:	4638      	mov	r0, r7
 800bdb0:	f7f7 fafc 	bl	80033ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800bdb4:	b00c      	add	sp, #48	; 0x30
 800bdb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bdba:	bf00      	nop
 800bdbc:	2000d3c8 	.word	0x2000d3c8
 800bdc0:	0801fcf0 	.word	0x0801fcf0
 800bdc4:	0802140c 	.word	0x0802140c
 800bdc8:	0801fd7e 	.word	0x0801fd7e
 800bdcc:	2000d3cc 	.word	0x2000d3cc
 800bdd0:	0801fda7 	.word	0x0801fda7
 800bdd4:	2000d3d0 	.word	0x2000d3d0
 800bdd8:	2000d358 	.word	0x2000d358
 800bddc:	2000d3d4 	.word	0x2000d3d4

0800bde0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800bde0:	b40e      	push	{r1, r2, r3}
 800bde2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bde6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bde8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800bdec:	4293      	cmp	r3, r2
 800bdee:	b09b      	sub	sp, #108	; 0x6c
 800bdf0:	4604      	mov	r4, r0
 800bdf2:	d061      	beq.n	800beb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800bdf4:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800becc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800bdf8:	aa24      	add	r2, sp, #144	; 0x90
 800bdfa:	9203      	str	r2, [sp, #12]
 800bdfc:	f8da 2000 	ldr.w	r2, [sl]
 800be00:	b92a      	cbnz	r2, 800be0e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800be02:	4b2e      	ldr	r3, [pc, #184]	; (800bebc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800be04:	4a2e      	ldr	r2, [pc, #184]	; (800bec0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800be06:	21b1      	movs	r1, #177	; 0xb1
 800be08:	482e      	ldr	r0, [pc, #184]	; (800bec4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800be0a:	f012 f8ed 	bl	801dfe8 <__assert_func>
 800be0e:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800bed0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800be12:	f8b8 1000 	ldrh.w	r1, [r8]
 800be16:	4299      	cmp	r1, r3
 800be18:	d803      	bhi.n	800be22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800be1a:	4b2b      	ldr	r3, [pc, #172]	; (800bec8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800be1c:	4a28      	ldr	r2, [pc, #160]	; (800bec0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800be1e:	21b2      	movs	r1, #178	; 0xb2
 800be20:	e7f2      	b.n	800be08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800be22:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800bed4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800be26:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800be2a:	f8d9 3000 	ldr.w	r3, [r9]
 800be2e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800be32:	683b      	ldr	r3, [r7, #0]
 800be34:	4638      	mov	r0, r7
 800be36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be38:	4798      	blx	r3
 800be3a:	4606      	mov	r6, r0
 800be3c:	b205      	sxth	r5, r0
 800be3e:	a804      	add	r0, sp, #16
 800be40:	f003 fe21 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800be44:	683b      	ldr	r3, [r7, #0]
 800be46:	4638      	mov	r0, r7
 800be48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800be4a:	4798      	blx	r3
 800be4c:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800be4e:	9a03      	ldr	r2, [sp, #12]
 800be50:	4603      	mov	r3, r0
 800be52:	a804      	add	r0, sp, #16
 800be54:	f003 fe5c 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800be58:	f8da 3000 	ldr.w	r3, [sl]
 800be5c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800be60:	2b00      	cmp	r3, #0
 800be62:	d0ce      	beq.n	800be02 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800be64:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800be66:	f8b8 0000 	ldrh.w	r0, [r8]
 800be6a:	4290      	cmp	r0, r2
 800be6c:	d9d5      	bls.n	800be1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800be6e:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800be72:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800be76:	787a      	ldrb	r2, [r7, #1]
 800be78:	f8d9 3000 	ldr.w	r3, [r9]
 800be7c:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800be80:	9700      	str	r7, [sp, #0]
 800be82:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800be86:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800be8a:	a804      	add	r0, sp, #16
 800be8c:	f001 fbcc 	bl	800d628 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800be90:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800be94:	18a9      	adds	r1, r5, r2
 800be96:	2900      	cmp	r1, #0
 800be98:	b203      	sxth	r3, r0
 800be9a:	dd0b      	ble.n	800beb4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800be9c:	3b01      	subs	r3, #1
 800be9e:	fb13 f302 	smulbb	r3, r3, r2
 800bea2:	fb16 3300 	smlabb	r3, r6, r0, r3
 800bea6:	b21d      	sxth	r5, r3
 800bea8:	4628      	mov	r0, r5
 800beaa:	b01b      	add	sp, #108	; 0x6c
 800beac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800beb0:	b003      	add	sp, #12
 800beb2:	4770      	bx	lr
 800beb4:	2b00      	cmp	r3, #0
 800beb6:	dcf7      	bgt.n	800bea8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800beb8:	2500      	movs	r5, #0
 800beba:	e7f5      	b.n	800bea8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800bebc:	0801fcf0 	.word	0x0801fcf0
 800bec0:	0802140c 	.word	0x0802140c
 800bec4:	0801fd7e 	.word	0x0801fd7e
 800bec8:	0801fda7 	.word	0x0801fda7
 800becc:	2000d3c8 	.word	0x2000d3c8
 800bed0:	2000d3cc 	.word	0x2000d3cc
 800bed4:	2000d3d0 	.word	0x2000d3d0

0800bed8 <_ZN8touchgfx8TextAreaD0Ev>:
 800bed8:	b510      	push	{r4, lr}
 800beda:	213c      	movs	r1, #60	; 0x3c
 800bedc:	4604      	mov	r4, r0
 800bede:	f012 f854 	bl	801df8a <_ZdlPvj>
 800bee2:	4620      	mov	r0, r4
 800bee4:	bd10      	pop	{r4, pc}
	...

0800bee8 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800bee8:	b570      	push	{r4, r5, r6, lr}
 800beea:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800beec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bef0:	4299      	cmp	r1, r3
 800bef2:	4604      	mov	r4, r0
 800bef4:	d01e      	beq.n	800bf34 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800bef6:	6803      	ldr	r3, [r0, #0]
 800bef8:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800befa:	4b0f      	ldr	r3, [pc, #60]	; (800bf38 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800befc:	681b      	ldr	r3, [r3, #0]
 800befe:	b92b      	cbnz	r3, 800bf0c <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800bf00:	4b0e      	ldr	r3, [pc, #56]	; (800bf3c <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800bf02:	4a0f      	ldr	r2, [pc, #60]	; (800bf40 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800bf04:	21b1      	movs	r1, #177	; 0xb1
 800bf06:	480f      	ldr	r0, [pc, #60]	; (800bf44 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800bf08:	f012 f86e 	bl	801dfe8 <__assert_func>
 800bf0c:	4b0e      	ldr	r3, [pc, #56]	; (800bf48 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800bf0e:	881b      	ldrh	r3, [r3, #0]
 800bf10:	428b      	cmp	r3, r1
 800bf12:	d803      	bhi.n	800bf1c <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800bf14:	4b0d      	ldr	r3, [pc, #52]	; (800bf4c <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800bf16:	4a0a      	ldr	r2, [pc, #40]	; (800bf40 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800bf18:	21b2      	movs	r1, #178	; 0xb2
 800bf1a:	e7f4      	b.n	800bf06 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800bf1c:	4b0c      	ldr	r3, [pc, #48]	; (800bf50 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800bf1e:	6818      	ldr	r0, [r3, #0]
 800bf20:	f7f7 fa92 	bl	8003448 <_ZNK8touchgfx5Texts7getTextEt>
 800bf24:	2300      	movs	r3, #0
 800bf26:	4601      	mov	r1, r0
 800bf28:	46ac      	mov	ip, r5
 800bf2a:	4620      	mov	r0, r4
 800bf2c:	461a      	mov	r2, r3
 800bf2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf32:	4760      	bx	ip
 800bf34:	2000      	movs	r0, #0
 800bf36:	bd70      	pop	{r4, r5, r6, pc}
 800bf38:	2000d3c8 	.word	0x2000d3c8
 800bf3c:	0801fcf0 	.word	0x0801fcf0
 800bf40:	0802140c 	.word	0x0802140c
 800bf44:	0801fd7e 	.word	0x0801fd7e
 800bf48:	2000d3cc 	.word	0x2000d3cc
 800bf4c:	0801fda7 	.word	0x0801fda7
 800bf50:	2000d3d4 	.word	0x2000d3d4

0800bf54 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800bf54:	b570      	push	{r4, r5, r6, lr}
 800bf56:	6803      	ldr	r3, [r0, #0]
 800bf58:	4604      	mov	r4, r0
 800bf5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bf5c:	4615      	mov	r5, r2
 800bf5e:	4798      	blx	r3
 800bf60:	6823      	ldr	r3, [r4, #0]
 800bf62:	4629      	mov	r1, r5
 800bf64:	4620      	mov	r0, r4
 800bf66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bf68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf6c:	4718      	bx	r3

0800bf6e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800bf6e:	b538      	push	{r3, r4, r5, lr}
 800bf70:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bf72:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf76:	429a      	cmp	r2, r3
 800bf78:	4604      	mov	r4, r0
 800bf7a:	d014      	beq.n	800bfa6 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800bf7c:	6803      	ldr	r3, [r0, #0]
 800bf7e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bf80:	4798      	blx	r3
 800bf82:	6823      	ldr	r3, [r4, #0]
 800bf84:	4605      	mov	r5, r0
 800bf86:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bf88:	4620      	mov	r0, r4
 800bf8a:	4798      	blx	r3
 800bf8c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bf90:	b22d      	sxth	r5, r5
 800bf92:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800bf96:	4601      	mov	r1, r0
 800bf98:	bf06      	itte	eq
 800bf9a:	4602      	moveq	r2, r0
 800bf9c:	4629      	moveq	r1, r5
 800bf9e:	462a      	movne	r2, r5
 800bfa0:	4620      	mov	r0, r4
 800bfa2:	f7ff ffd7 	bl	800bf54 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800bfa6:	bd38      	pop	{r3, r4, r5, pc}

0800bfa8 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800bfa8:	888a      	ldrh	r2, [r1, #4]
 800bfaa:	8582      	strh	r2, [r0, #44]	; 0x2c
 800bfac:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800bfb0:	b922      	cbnz	r2, 800bfbc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800bfb2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800bfb6:	b90b      	cbnz	r3, 800bfbc <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800bfb8:	f7ff bfd9 	b.w	800bf6e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800bfbc:	4770      	bx	lr

0800bfbe <_ZNK8touchgfx3Box12getSolidRectEv>:
 800bfbe:	2300      	movs	r3, #0
 800bfc0:	8083      	strh	r3, [r0, #4]
 800bfc2:	80c3      	strh	r3, [r0, #6]
 800bfc4:	8003      	strh	r3, [r0, #0]
 800bfc6:	8043      	strh	r3, [r0, #2]
 800bfc8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800bfcc:	2bff      	cmp	r3, #255	; 0xff
 800bfce:	bf01      	itttt	eq
 800bfd0:	890b      	ldrheq	r3, [r1, #8]
 800bfd2:	8083      	strheq	r3, [r0, #4]
 800bfd4:	894b      	ldrheq	r3, [r1, #10]
 800bfd6:	80c3      	strheq	r3, [r0, #6]
 800bfd8:	4770      	bx	lr
	...

0800bfdc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800bfdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bfde:	4604      	mov	r4, r0
 800bfe0:	6808      	ldr	r0, [r1, #0]
 800bfe2:	6849      	ldr	r1, [r1, #4]
 800bfe4:	466b      	mov	r3, sp
 800bfe6:	c303      	stmia	r3!, {r0, r1}
 800bfe8:	6823      	ldr	r3, [r4, #0]
 800bfea:	4669      	mov	r1, sp
 800bfec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bfee:	4620      	mov	r0, r4
 800bff0:	4798      	blx	r3
 800bff2:	4b08      	ldr	r3, [pc, #32]	; (800c014 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800bff4:	681b      	ldr	r3, [r3, #0]
 800bff6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800bffa:	b10a      	cbz	r2, 800c000 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800bffc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800bffe:	b900      	cbnz	r0, 800c002 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c000:	6898      	ldr	r0, [r3, #8]
 800c002:	6803      	ldr	r3, [r0, #0]
 800c004:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c006:	699d      	ldr	r5, [r3, #24]
 800c008:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c00c:	4669      	mov	r1, sp
 800c00e:	47a8      	blx	r5
 800c010:	b003      	add	sp, #12
 800c012:	bd30      	pop	{r4, r5, pc}
 800c014:	2000d358 	.word	0x2000d358

0800c018 <_ZN8touchgfx3BoxD1Ev>:
 800c018:	4770      	bx	lr

0800c01a <_ZN8touchgfx3BoxD0Ev>:
 800c01a:	b510      	push	{r4, lr}
 800c01c:	212c      	movs	r1, #44	; 0x2c
 800c01e:	4604      	mov	r4, r0
 800c020:	f011 ffb3 	bl	801df8a <_ZdlPvj>
 800c024:	4620      	mov	r0, r4
 800c026:	bd10      	pop	{r4, pc}

0800c028 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c028:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c02c:	4770      	bx	lr

0800c02e <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c02e:	b570      	push	{r4, r5, r6, lr}
 800c030:	880b      	ldrh	r3, [r1, #0]
 800c032:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800c034:	4605      	mov	r5, r0
 800c036:	8813      	ldrh	r3, [r2, #0]
 800c038:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c03c:	4604      	mov	r4, r0
 800c03e:	4628      	mov	r0, r5
 800c040:	f004 fd8c 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c044:	4606      	mov	r6, r0
 800c046:	4628      	mov	r0, r5
 800c048:	f004 fdc2 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c04c:	6823      	ldr	r3, [r4, #0]
 800c04e:	4605      	mov	r5, r0
 800c050:	b231      	sxth	r1, r6
 800c052:	4620      	mov	r0, r4
 800c054:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c056:	4798      	blx	r3
 800c058:	6823      	ldr	r3, [r4, #0]
 800c05a:	b229      	sxth	r1, r5
 800c05c:	4620      	mov	r0, r4
 800c05e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c060:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c064:	4718      	bx	r3

0800c066 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800c066:	b510      	push	{r4, lr}
 800c068:	4604      	mov	r4, r0
 800c06a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c06c:	b150      	cbz	r0, 800c084 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c06e:	6803      	ldr	r3, [r0, #0]
 800c070:	68db      	ldr	r3, [r3, #12]
 800c072:	4798      	blx	r3
 800c074:	b130      	cbz	r0, 800c084 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800c076:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c078:	6803      	ldr	r3, [r0, #0]
 800c07a:	4621      	mov	r1, r4
 800c07c:	689b      	ldr	r3, [r3, #8]
 800c07e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c082:	4718      	bx	r3
 800c084:	bd10      	pop	{r4, pc}

0800c086 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c086:	b510      	push	{r4, lr}
 800c088:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800c08c:	2bff      	cmp	r3, #255	; 0xff
 800c08e:	4604      	mov	r4, r0
 800c090:	d006      	beq.n	800c0a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c092:	2300      	movs	r3, #0
 800c094:	8003      	strh	r3, [r0, #0]
 800c096:	8043      	strh	r3, [r0, #2]
 800c098:	8083      	strh	r3, [r0, #4]
 800c09a:	80c3      	strh	r3, [r0, #6]
 800c09c:	4620      	mov	r0, r4
 800c09e:	bd10      	pop	{r4, pc}
 800c0a0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c0a4:	b11b      	cbz	r3, 800c0ae <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c0a6:	3130      	adds	r1, #48	; 0x30
 800c0a8:	f004 fdcc 	bl	8010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c0ac:	e7f6      	b.n	800c09c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c0ae:	312e      	adds	r1, #46	; 0x2e
 800c0b0:	e7fa      	b.n	800c0a8 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800c0b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c0b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0b8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c0bc:	b08a      	sub	sp, #40	; 0x28
 800c0be:	4604      	mov	r4, r0
 800c0c0:	4688      	mov	r8, r1
 800c0c2:	2b00      	cmp	r3, #0
 800c0c4:	d044      	beq.n	800c150 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800c0c6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c0c8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c0cc:	a805      	add	r0, sp, #20
 800c0ce:	f004 fd45 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c0d2:	4605      	mov	r5, r0
 800c0d4:	b206      	sxth	r6, r0
 800c0d6:	a805      	add	r0, sp, #20
 800c0d8:	f004 fd7a 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c0dc:	f9b8 2000 	ldrsh.w	r2, [r8]
 800c0e0:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800c0e4:	4417      	add	r7, r2
 800c0e6:	b2bf      	uxth	r7, r7
 800c0e8:	2300      	movs	r3, #0
 800c0ea:	fa0f fe87 	sxth.w	lr, r7
 800c0ee:	459e      	cmp	lr, r3
 800c0f0:	fa0f fc80 	sxth.w	ip, r0
 800c0f4:	9306      	str	r3, [sp, #24]
 800c0f6:	dd2d      	ble.n	800c154 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c0f8:	4296      	cmp	r6, r2
 800c0fa:	dd2b      	ble.n	800c154 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c0fc:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800c100:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800c104:	4419      	add	r1, r3
 800c106:	b289      	uxth	r1, r1
 800c108:	fa0f f881 	sxth.w	r8, r1
 800c10c:	f1b8 0f00 	cmp.w	r8, #0
 800c110:	dd20      	ble.n	800c154 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c112:	459c      	cmp	ip, r3
 800c114:	dd1e      	ble.n	800c154 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800c116:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c11a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c11e:	4576      	cmp	r6, lr
 800c120:	bfa8      	it	ge
 800c122:	463d      	movge	r5, r7
 800c124:	45c4      	cmp	ip, r8
 800c126:	bfa8      	it	ge
 800c128:	4608      	movge	r0, r1
 800c12a:	1aad      	subs	r5, r5, r2
 800c12c:	1ac0      	subs	r0, r0, r3
 800c12e:	f8ad 501c 	strh.w	r5, [sp, #28]
 800c132:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c136:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c13a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c13e:	4b1f      	ldr	r3, [pc, #124]	; (800c1bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800c140:	681b      	ldr	r3, [r3, #0]
 800c142:	b953      	cbnz	r3, 800c15a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800c144:	4b1e      	ldr	r3, [pc, #120]	; (800c1c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800c146:	4a1f      	ldr	r2, [pc, #124]	; (800c1c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800c148:	481f      	ldr	r0, [pc, #124]	; (800c1c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800c14a:	218b      	movs	r1, #139	; 0x8b
 800c14c:	f011 ff4c 	bl	801dfe8 <__assert_func>
 800c150:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c152:	e7b9      	b.n	800c0c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c154:	2300      	movs	r3, #0
 800c156:	9307      	str	r3, [sp, #28]
 800c158:	e7f1      	b.n	800c13e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800c15a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c15e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c162:	429a      	cmp	r2, r3
 800c164:	d026      	beq.n	800c1b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c166:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c16a:	2b00      	cmp	r3, #0
 800c16c:	dd22      	ble.n	800c1b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c16e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c172:	2b00      	cmp	r3, #0
 800c174:	dd1e      	ble.n	800c1b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800c176:	2300      	movs	r3, #0
 800c178:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c17c:	6823      	ldr	r3, [r4, #0]
 800c17e:	a908      	add	r1, sp, #32
 800c180:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c182:	4620      	mov	r0, r4
 800c184:	4798      	blx	r3
 800c186:	4b11      	ldr	r3, [pc, #68]	; (800c1cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800c188:	681b      	ldr	r3, [r3, #0]
 800c18a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c18e:	b10a      	cbz	r2, 800c194 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800c190:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c192:	b900      	cbnz	r0, 800c196 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800c194:	6898      	ldr	r0, [r3, #8]
 800c196:	6801      	ldr	r1, [r0, #0]
 800c198:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c19c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c1a0:	2501      	movs	r5, #1
 800c1a2:	9502      	str	r5, [sp, #8]
 800c1a4:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c1a8:	9401      	str	r4, [sp, #4]
 800c1aa:	ac06      	add	r4, sp, #24
 800c1ac:	9400      	str	r4, [sp, #0]
 800c1ae:	688c      	ldr	r4, [r1, #8]
 800c1b0:	a905      	add	r1, sp, #20
 800c1b2:	47a0      	blx	r4
 800c1b4:	b00a      	add	sp, #40	; 0x28
 800c1b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c1ba:	bf00      	nop
 800c1bc:	2000d400 	.word	0x2000d400
 800c1c0:	080214a0 	.word	0x080214a0
 800c1c4:	08021502 	.word	0x08021502
 800c1c8:	080214dc 	.word	0x080214dc
 800c1cc:	2000d358 	.word	0x2000d358

0800c1d0 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800c1d0:	4770      	bx	lr

0800c1d2 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800c1d2:	b510      	push	{r4, lr}
 800c1d4:	2134      	movs	r1, #52	; 0x34
 800c1d6:	4604      	mov	r4, r0
 800c1d8:	f011 fed7 	bl	801df8a <_ZdlPvj>
 800c1dc:	4620      	mov	r0, r4
 800c1de:	bd10      	pop	{r4, pc}

0800c1e0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800c1e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1e4:	4604      	mov	r4, r0
 800c1e6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c1e8:	8962      	ldrh	r2, [r4, #10]
 800c1ea:	b218      	sxth	r0, r3
 800c1ec:	460e      	mov	r6, r1
 800c1ee:	005b      	lsls	r3, r3, #1
 800c1f0:	8921      	ldrh	r1, [r4, #8]
 800c1f2:	b29b      	uxth	r3, r3
 800c1f4:	1ac9      	subs	r1, r1, r3
 800c1f6:	b08e      	sub	sp, #56	; 0x38
 800c1f8:	b209      	sxth	r1, r1
 800c1fa:	1ad3      	subs	r3, r2, r3
 800c1fc:	b21b      	sxth	r3, r3
 800c1fe:	2900      	cmp	r1, #0
 800c200:	f8ad 0000 	strh.w	r0, [sp]
 800c204:	f8ad 0002 	strh.w	r0, [sp, #2]
 800c208:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c20c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c210:	dd5e      	ble.n	800c2d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c212:	2b00      	cmp	r3, #0
 800c214:	dd5c      	ble.n	800c2d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c216:	6830      	ldr	r0, [r6, #0]
 800c218:	6871      	ldr	r1, [r6, #4]
 800c21a:	ab02      	add	r3, sp, #8
 800c21c:	c303      	stmia	r3!, {r0, r1}
 800c21e:	4669      	mov	r1, sp
 800c220:	a802      	add	r0, sp, #8
 800c222:	f7fd fcd9 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800c226:	4620      	mov	r0, r4
 800c228:	a902      	add	r1, sp, #8
 800c22a:	f7ff fed7 	bl	800bfdc <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800c22e:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800c230:	2800      	cmp	r0, #0
 800c232:	d05f      	beq.n	800c2f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c234:	8963      	ldrh	r3, [r4, #10]
 800c236:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c23a:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c23e:	1a1f      	subs	r7, r3, r0
 800c240:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800c244:	b202      	sxth	r2, r0
 800c246:	2500      	movs	r5, #0
 800c248:	b21b      	sxth	r3, r3
 800c24a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800c24e:	1a09      	subs	r1, r1, r0
 800c250:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800c254:	9506      	str	r5, [sp, #24]
 800c256:	f8ad 201e 	strh.w	r2, [sp, #30]
 800c25a:	f8ad 5020 	strh.w	r5, [sp, #32]
 800c25e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c262:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800c266:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800c26a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c26e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c272:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800c276:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800c27a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c27e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c282:	af04      	add	r7, sp, #16
 800c284:	ab06      	add	r3, sp, #24
 800c286:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c28a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c28e:	e887 0003 	stmia.w	r7, {r0, r1}
 800c292:	4631      	mov	r1, r6
 800c294:	4638      	mov	r0, r7
 800c296:	f7fd fc9f 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800c29a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c29e:	2b00      	cmp	r3, #0
 800c2a0:	dd12      	ble.n	800c2c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c2a2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800c2a6:	2b00      	cmp	r3, #0
 800c2a8:	dd0e      	ble.n	800c2c8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c2aa:	6823      	ldr	r3, [r4, #0]
 800c2ac:	4639      	mov	r1, r7
 800c2ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c2b0:	4620      	mov	r0, r4
 800c2b2:	4798      	blx	r3
 800c2b4:	f7f4 fd9a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800c2b8:	6803      	ldr	r3, [r0, #0]
 800c2ba:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c2bc:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800c2c0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c2c4:	4639      	mov	r1, r7
 800c2c6:	47c0      	blx	r8
 800c2c8:	3501      	adds	r5, #1
 800c2ca:	2d04      	cmp	r5, #4
 800c2cc:	d1da      	bne.n	800c284 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800c2ce:	e011      	b.n	800c2f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c2d0:	6830      	ldr	r0, [r6, #0]
 800c2d2:	6871      	ldr	r1, [r6, #4]
 800c2d4:	ab06      	add	r3, sp, #24
 800c2d6:	c303      	stmia	r3!, {r0, r1}
 800c2d8:	6823      	ldr	r3, [r4, #0]
 800c2da:	a906      	add	r1, sp, #24
 800c2dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c2de:	4620      	mov	r0, r4
 800c2e0:	4798      	blx	r3
 800c2e2:	f7f4 fd83 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800c2e6:	6803      	ldr	r3, [r0, #0]
 800c2e8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c2ea:	699d      	ldr	r5, [r3, #24]
 800c2ec:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c2f0:	a906      	add	r1, sp, #24
 800c2f2:	47a8      	blx	r5
 800c2f4:	b00e      	add	sp, #56	; 0x38
 800c2f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c2fa <_ZN8touchgfx5ImageD1Ev>:
 800c2fa:	4770      	bx	lr

0800c2fc <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c2fc:	b570      	push	{r4, r5, r6, lr}
 800c2fe:	880b      	ldrh	r3, [r1, #0]
 800c300:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c302:	4604      	mov	r4, r0
 800c304:	4608      	mov	r0, r1
 800c306:	460d      	mov	r5, r1
 800c308:	f004 fc28 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c30c:	4606      	mov	r6, r0
 800c30e:	4628      	mov	r0, r5
 800c310:	f004 fc5e 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c314:	6823      	ldr	r3, [r4, #0]
 800c316:	4605      	mov	r5, r0
 800c318:	b231      	sxth	r1, r6
 800c31a:	4620      	mov	r0, r4
 800c31c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c31e:	4798      	blx	r3
 800c320:	6823      	ldr	r3, [r4, #0]
 800c322:	b229      	sxth	r1, r5
 800c324:	4620      	mov	r0, r4
 800c326:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c328:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c32c:	4718      	bx	r3

0800c32e <_ZN8touchgfx5ImageD0Ev>:
 800c32e:	b510      	push	{r4, lr}
 800c330:	212c      	movs	r1, #44	; 0x2c
 800c332:	4604      	mov	r4, r0
 800c334:	f011 fe29 	bl	801df8a <_ZdlPvj>
 800c338:	4620      	mov	r0, r4
 800c33a:	bd10      	pop	{r4, pc}

0800c33c <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c33c:	b510      	push	{r4, lr}
 800c33e:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c342:	2bff      	cmp	r3, #255	; 0xff
 800c344:	4604      	mov	r4, r0
 800c346:	d006      	beq.n	800c356 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c348:	2300      	movs	r3, #0
 800c34a:	8003      	strh	r3, [r0, #0]
 800c34c:	8043      	strh	r3, [r0, #2]
 800c34e:	8083      	strh	r3, [r0, #4]
 800c350:	80c3      	strh	r3, [r0, #6]
 800c352:	4620      	mov	r0, r4
 800c354:	bd10      	pop	{r4, pc}
 800c356:	3126      	adds	r1, #38	; 0x26
 800c358:	f004 fc74 	bl	8010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c35c:	e7f9      	b.n	800c352 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800c360 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c364:	4604      	mov	r4, r0
 800c366:	b088      	sub	sp, #32
 800c368:	f854 3b26 	ldr.w	r3, [r4], #38
 800c36c:	2500      	movs	r5, #0
 800c36e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c370:	460f      	mov	r7, r1
 800c372:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c376:	a904      	add	r1, sp, #16
 800c378:	4606      	mov	r6, r0
 800c37a:	4798      	blx	r3
 800c37c:	4620      	mov	r0, r4
 800c37e:	f004 fbed 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c382:	4680      	mov	r8, r0
 800c384:	4620      	mov	r0, r4
 800c386:	f004 fc23 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c38a:	9506      	str	r5, [sp, #24]
 800c38c:	ad06      	add	r5, sp, #24
 800c38e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c392:	4639      	mov	r1, r7
 800c394:	4628      	mov	r0, r5
 800c396:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c39a:	f7fd fc1d 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800c39e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c3a2:	2b00      	cmp	r3, #0
 800c3a4:	dd19      	ble.n	800c3da <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c3a6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c3aa:	2b00      	cmp	r3, #0
 800c3ac:	dd15      	ble.n	800c3da <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c3ae:	4b0c      	ldr	r3, [pc, #48]	; (800c3e0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c3b0:	681b      	ldr	r3, [r3, #0]
 800c3b2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c3b6:	b10a      	cbz	r2, 800c3bc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c3b8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c3ba:	b900      	cbnz	r0, 800c3be <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c3bc:	6898      	ldr	r0, [r3, #8]
 800c3be:	6801      	ldr	r1, [r0, #0]
 800c3c0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c3c4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c3c8:	2701      	movs	r7, #1
 800c3ca:	9702      	str	r7, [sp, #8]
 800c3cc:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800c3d0:	e9cd 5600 	strd	r5, r6, [sp]
 800c3d4:	688d      	ldr	r5, [r1, #8]
 800c3d6:	4621      	mov	r1, r4
 800c3d8:	47a8      	blx	r5
 800c3da:	b008      	add	sp, #32
 800c3dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c3e0:	2000d358 	.word	0x2000d358

0800c3e4 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800c3e4:	4770      	bx	lr

0800c3e6 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800c3e6:	b510      	push	{r4, lr}
 800c3e8:	2148      	movs	r1, #72	; 0x48
 800c3ea:	4604      	mov	r4, r0
 800c3ec:	f011 fdcd 	bl	801df8a <_ZdlPvj>
 800c3f0:	4620      	mov	r0, r4
 800c3f2:	bd10      	pop	{r4, pc}

0800c3f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800c3f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c3f8:	4604      	mov	r4, r0
 800c3fa:	b08c      	sub	sp, #48	; 0x30
 800c3fc:	4688      	mov	r8, r1
 800c3fe:	f7ff fe59 	bl	800c0b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800c402:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800c404:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c408:	4293      	cmp	r3, r2
 800c40a:	f000 8099 	beq.w	800c540 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800c40e:	4e54      	ldr	r6, [pc, #336]	; (800c560 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800c410:	6832      	ldr	r2, [r6, #0]
 800c412:	b92a      	cbnz	r2, 800c420 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800c414:	4b53      	ldr	r3, [pc, #332]	; (800c564 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800c416:	4a54      	ldr	r2, [pc, #336]	; (800c568 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800c418:	21b1      	movs	r1, #177	; 0xb1
 800c41a:	4854      	ldr	r0, [pc, #336]	; (800c56c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800c41c:	f011 fde4 	bl	801dfe8 <__assert_func>
 800c420:	4d53      	ldr	r5, [pc, #332]	; (800c570 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800c422:	8829      	ldrh	r1, [r5, #0]
 800c424:	4299      	cmp	r1, r3
 800c426:	d803      	bhi.n	800c430 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x3c>
 800c428:	4b52      	ldr	r3, [pc, #328]	; (800c574 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800c42a:	4a4f      	ldr	r2, [pc, #316]	; (800c568 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800c42c:	21b2      	movs	r1, #178	; 0xb2
 800c42e:	e7f4      	b.n	800c41a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800c430:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800c434:	4b50      	ldr	r3, [pc, #320]	; (800c578 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800c436:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800c43a:	681b      	ldr	r3, [r3, #0]
 800c43c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800c440:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800c444:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c448:	2300      	movs	r3, #0
 800c44a:	f1be 0f01 	cmp.w	lr, #1
 800c44e:	9303      	str	r3, [sp, #12]
 800c450:	b208      	sxth	r0, r1
 800c452:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c456:	f04f 0c02 	mov.w	ip, #2
 800c45a:	d074      	beq.n	800c546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800c45c:	f1be 0f03 	cmp.w	lr, #3
 800c460:	d071      	beq.n	800c546 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800c462:	1a52      	subs	r2, r2, r1
 800c464:	f8ad 3010 	strh.w	r3, [sp, #16]
 800c468:	fb92 f2fc 	sdiv	r2, r2, ip
 800c46c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c470:	f8ad 200e 	strh.w	r2, [sp, #14]
 800c474:	f10d 090c 	add.w	r9, sp, #12
 800c478:	e899 0003 	ldmia.w	r9, {r0, r1}
 800c47c:	f10d 0a14 	add.w	sl, sp, #20
 800c480:	e88a 0003 	stmia.w	sl, {r0, r1}
 800c484:	4641      	mov	r1, r8
 800c486:	4650      	mov	r0, sl
 800c488:	f7fd fba6 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800c48c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c490:	2b00      	cmp	r3, #0
 800c492:	dd55      	ble.n	800c540 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800c494:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800c498:	2b00      	cmp	r3, #0
 800c49a:	dd51      	ble.n	800c540 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800c49c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c4a0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c4a4:	1a9b      	subs	r3, r3, r2
 800c4a6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c4aa:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800c4ae:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c4b2:	1a9b      	subs	r3, r3, r2
 800c4b4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c4b8:	6823      	ldr	r3, [r4, #0]
 800c4ba:	4649      	mov	r1, r9
 800c4bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c4be:	4620      	mov	r0, r4
 800c4c0:	4798      	blx	r3
 800c4c2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c4c6:	2b00      	cmp	r3, #0
 800c4c8:	d047      	beq.n	800c55a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x166>
 800c4ca:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800c4ce:	6833      	ldr	r3, [r6, #0]
 800c4d0:	f894 c032 	ldrb.w	ip, [r4, #50]	; 0x32
 800c4d4:	2b00      	cmp	r3, #0
 800c4d6:	d09d      	beq.n	800c414 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800c4d8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800c4da:	8828      	ldrh	r0, [r5, #0]
 800c4dc:	4288      	cmp	r0, r1
 800c4de:	d9a3      	bls.n	800c428 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x34>
 800c4e0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c4e4:	6812      	ldr	r2, [r2, #0]
 800c4e6:	785b      	ldrb	r3, [r3, #1]
 800c4e8:	9209      	str	r2, [sp, #36]	; 0x24
 800c4ea:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800c4ee:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800c4f2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800c4f6:	2300      	movs	r3, #0
 800c4f8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800c4fc:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800c500:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800c504:	4b1d      	ldr	r3, [pc, #116]	; (800c57c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x188>)
 800c506:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800c50a:	681b      	ldr	r3, [r3, #0]
 800c50c:	9707      	str	r7, [sp, #28]
 800c50e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c512:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800c516:	f88d 5020 	strb.w	r5, [sp, #32]
 800c51a:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800c51e:	b10a      	cbz	r2, 800c524 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x130>
 800c520:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800c522:	b904      	cbnz	r4, 800c526 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x132>
 800c524:	689c      	ldr	r4, [r3, #8]
 800c526:	4b16      	ldr	r3, [pc, #88]	; (800c580 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x18c>)
 800c528:	6818      	ldr	r0, [r3, #0]
 800c52a:	f7f6 ff8d 	bl	8003448 <_ZNK8touchgfx5Texts7getTextEt>
 800c52e:	ab07      	add	r3, sp, #28
 800c530:	9001      	str	r0, [sp, #4]
 800c532:	9300      	str	r3, [sp, #0]
 800c534:	e899 0006 	ldmia.w	r9, {r1, r2}
 800c538:	4653      	mov	r3, sl
 800c53a:	4620      	mov	r0, r4
 800c53c:	f7f6 ff36 	bl	80033ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c540:	b00c      	add	sp, #48	; 0x30
 800c542:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c546:	1a5b      	subs	r3, r3, r1
 800c548:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c54c:	fb93 f3fc 	sdiv	r3, r3, ip
 800c550:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c554:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c558:	e78c      	b.n	800c474 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x80>
 800c55a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800c55e:	e7b6      	b.n	800c4ce <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xda>
 800c560:	2000d3c8 	.word	0x2000d3c8
 800c564:	0801fcf0 	.word	0x0801fcf0
 800c568:	08021674 	.word	0x08021674
 800c56c:	0801fd7e 	.word	0x0801fd7e
 800c570:	2000d3cc 	.word	0x2000d3cc
 800c574:	0801fda7 	.word	0x0801fda7
 800c578:	2000d3d0 	.word	0x2000d3d0
 800c57c:	2000d358 	.word	0x2000d358
 800c580:	2000d3d4 	.word	0x2000d3d4

0800c584 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800c584:	b510      	push	{r4, lr}
 800c586:	2101      	movs	r1, #1
 800c588:	4c12      	ldr	r4, [pc, #72]	; (800c5d4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x50>)
 800c58a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c58e:	2200      	movs	r2, #0
 800c590:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800c594:	6004      	str	r4, [r0, #0]
 800c596:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800c59a:	4c0f      	ldr	r4, [pc, #60]	; (800c5d8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800c59c:	8082      	strh	r2, [r0, #4]
 800c59e:	80c2      	strh	r2, [r0, #6]
 800c5a0:	8102      	strh	r2, [r0, #8]
 800c5a2:	8142      	strh	r2, [r0, #10]
 800c5a4:	8182      	strh	r2, [r0, #12]
 800c5a6:	81c2      	strh	r2, [r0, #14]
 800c5a8:	8202      	strh	r2, [r0, #16]
 800c5aa:	8242      	strh	r2, [r0, #18]
 800c5ac:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c5b0:	61c2      	str	r2, [r0, #28]
 800c5b2:	6282      	str	r2, [r0, #40]	; 0x28
 800c5b4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800c5b8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800c5ba:	8601      	strh	r1, [r0, #48]	; 0x30
 800c5bc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800c5c0:	6344      	str	r4, [r0, #52]	; 0x34
 800c5c2:	8701      	strh	r1, [r0, #56]	; 0x38
 800c5c4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800c5c8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800c5cc:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800c5d0:	bd10      	pop	{r4, pc}
 800c5d2:	bf00      	nop
 800c5d4:	0802160c 	.word	0x0802160c
 800c5d8:	0801f754 	.word	0x0801f754

0800c5dc <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800c5dc:	4b02      	ldr	r3, [pc, #8]	; (800c5e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800c5de:	6018      	str	r0, [r3, #0]
 800c5e0:	4b02      	ldr	r3, [pc, #8]	; (800c5ec <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800c5e2:	6019      	str	r1, [r3, #0]
 800c5e4:	4770      	bx	lr
 800c5e6:	bf00      	nop
 800c5e8:	2000d360 	.word	0x2000d360
 800c5ec:	2000d374 	.word	0x2000d374

0800c5f0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 800c5f0:	b538      	push	{r3, r4, r5, lr}
 800c5f2:	4c2b      	ldr	r4, [pc, #172]	; (800c6a0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 800c5f4:	4b2b      	ldr	r3, [pc, #172]	; (800c6a4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 800c5f6:	6821      	ldr	r1, [r4, #0]
 800c5f8:	681a      	ldr	r2, [r3, #0]
 800c5fa:	4d2b      	ldr	r5, [pc, #172]	; (800c6a8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 800c5fc:	4281      	cmp	r1, r0
 800c5fe:	492b      	ldr	r1, [pc, #172]	; (800c6ac <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 800c600:	d108      	bne.n	800c614 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800c602:	682b      	ldr	r3, [r5, #0]
 800c604:	4293      	cmp	r3, r2
 800c606:	d105      	bne.n	800c614 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800c608:	6808      	ldr	r0, [r1, #0]
 800c60a:	280f      	cmp	r0, #15
 800c60c:	bf94      	ite	ls
 800c60e:	2000      	movls	r0, #0
 800c610:	2001      	movhi	r0, #1
 800c612:	bd38      	pop	{r3, r4, r5, pc}
 800c614:	4b26      	ldr	r3, [pc, #152]	; (800c6b0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 800c616:	6020      	str	r0, [r4, #0]
 800c618:	681b      	ldr	r3, [r3, #0]
 800c61a:	602a      	str	r2, [r5, #0]
 800c61c:	4298      	cmp	r0, r3
 800c61e:	d905      	bls.n	800c62c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 800c620:	4b24      	ldr	r3, [pc, #144]	; (800c6b4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800c622:	4a25      	ldr	r2, [pc, #148]	; (800c6b8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800c624:	2137      	movs	r1, #55	; 0x37
 800c626:	4825      	ldr	r0, [pc, #148]	; (800c6bc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 800c628:	f011 fcde 	bl	801dfe8 <__assert_func>
 800c62c:	f010 0403 	ands.w	r4, r0, #3
 800c630:	bf1f      	itttt	ne
 800c632:	f1c4 0504 	rsbne	r5, r4, #4
 800c636:	3b04      	subne	r3, #4
 800c638:	1952      	addne	r2, r2, r5
 800c63a:	191b      	addne	r3, r3, r4
 800c63c:	4402      	add	r2, r0
 800c63e:	1a1b      	subs	r3, r3, r0
 800c640:	3001      	adds	r0, #1
 800c642:	f020 0401 	bic.w	r4, r0, #1
 800c646:	4d1e      	ldr	r5, [pc, #120]	; (800c6c0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 800c648:	42a3      	cmp	r3, r4
 800c64a:	602a      	str	r2, [r5, #0]
 800c64c:	d203      	bcs.n	800c656 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 800c64e:	4b19      	ldr	r3, [pc, #100]	; (800c6b4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800c650:	4a19      	ldr	r2, [pc, #100]	; (800c6b8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800c652:	214a      	movs	r1, #74	; 0x4a
 800c654:	e7e7      	b.n	800c626 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800c656:	f010 0002 	ands.w	r0, r0, #2
 800c65a:	bf1f      	itttt	ne
 800c65c:	f1c0 0504 	rsbne	r5, r0, #4
 800c660:	1952      	addne	r2, r2, r5
 800c662:	1f05      	subne	r5, r0, #4
 800c664:	195b      	addne	r3, r3, r5
 800c666:	1b1b      	subs	r3, r3, r4
 800c668:	4d16      	ldr	r5, [pc, #88]	; (800c6c4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 800c66a:	4422      	add	r2, r4
 800c66c:	429c      	cmp	r4, r3
 800c66e:	602a      	str	r2, [r5, #0]
 800c670:	d903      	bls.n	800c67a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 800c672:	4b10      	ldr	r3, [pc, #64]	; (800c6b4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800c674:	4a10      	ldr	r2, [pc, #64]	; (800c6b8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800c676:	215d      	movs	r1, #93	; 0x5d
 800c678:	e7d5      	b.n	800c626 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800c67a:	b120      	cbz	r0, 800c686 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 800c67c:	f1c0 0504 	rsb	r5, r0, #4
 800c680:	3804      	subs	r0, #4
 800c682:	442a      	add	r2, r5
 800c684:	4403      	add	r3, r0
 800c686:	1b1b      	subs	r3, r3, r4
 800c688:	480f      	ldr	r0, [pc, #60]	; (800c6c8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 800c68a:	600b      	str	r3, [r1, #0]
 800c68c:	4422      	add	r2, r4
 800c68e:	2b0f      	cmp	r3, #15
 800c690:	6002      	str	r2, [r0, #0]
 800c692:	d803      	bhi.n	800c69c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 800c694:	4b0d      	ldr	r3, [pc, #52]	; (800c6cc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 800c696:	4a08      	ldr	r2, [pc, #32]	; (800c6b8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800c698:	2170      	movs	r1, #112	; 0x70
 800c69a:	e7c4      	b.n	800c626 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800c69c:	2001      	movs	r0, #1
 800c69e:	e7b8      	b.n	800c612 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 800c6a0:	2000d368 	.word	0x2000d368
 800c6a4:	2000d360 	.word	0x2000d360
 800c6a8:	2000d370 	.word	0x2000d370
 800c6ac:	2000d378 	.word	0x2000d378
 800c6b0:	2000d374 	.word	0x2000d374
 800c6b4:	080216a2 	.word	0x080216a2
 800c6b8:	0802176a 	.word	0x0802176a
 800c6bc:	080216db 	.word	0x080216db
 800c6c0:	2000d37c 	.word	0x2000d37c
 800c6c4:	2000d36c 	.word	0x2000d36c
 800c6c8:	2000d364 	.word	0x2000d364
 800c6cc:	08021725 	.word	0x08021725

0800c6d0 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 800c6d0:	4b04      	ldr	r3, [pc, #16]	; (800c6e4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 800c6d2:	6818      	ldr	r0, [r3, #0]
 800c6d4:	b120      	cbz	r0, 800c6e0 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 800c6d6:	4b04      	ldr	r3, [pc, #16]	; (800c6e8 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 800c6d8:	6818      	ldr	r0, [r3, #0]
 800c6da:	3000      	adds	r0, #0
 800c6dc:	bf18      	it	ne
 800c6de:	2001      	movne	r0, #1
 800c6e0:	4770      	bx	lr
 800c6e2:	bf00      	nop
 800c6e4:	2000d360 	.word	0x2000d360
 800c6e8:	2000d374 	.word	0x2000d374

0800c6ec <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 800c6ec:	4b01      	ldr	r3, [pc, #4]	; (800c6f4 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 800c6ee:	6818      	ldr	r0, [r3, #0]
 800c6f0:	4770      	bx	lr
 800c6f2:	bf00      	nop
 800c6f4:	2000d368 	.word	0x2000d368

0800c6f8 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 800c6f8:	4b01      	ldr	r3, [pc, #4]	; (800c700 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 800c6fa:	6818      	ldr	r0, [r3, #0]
 800c6fc:	4770      	bx	lr
 800c6fe:	bf00      	nop
 800c700:	2000d370 	.word	0x2000d370

0800c704 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 800c704:	4b01      	ldr	r3, [pc, #4]	; (800c70c <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 800c706:	6818      	ldr	r0, [r3, #0]
 800c708:	4770      	bx	lr
 800c70a:	bf00      	nop
 800c70c:	2000d37c 	.word	0x2000d37c

0800c710 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 800c710:	4b01      	ldr	r3, [pc, #4]	; (800c718 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 800c712:	6818      	ldr	r0, [r3, #0]
 800c714:	4770      	bx	lr
 800c716:	bf00      	nop
 800c718:	2000d36c 	.word	0x2000d36c

0800c71c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800c71c:	4b01      	ldr	r3, [pc, #4]	; (800c724 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800c71e:	6818      	ldr	r0, [r3, #0]
 800c720:	4770      	bx	lr
 800c722:	bf00      	nop
 800c724:	2000d364 	.word	0x2000d364

0800c728 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800c728:	4b01      	ldr	r3, [pc, #4]	; (800c730 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800c72a:	6818      	ldr	r0, [r3, #0]
 800c72c:	4770      	bx	lr
 800c72e:	bf00      	nop
 800c730:	2000d378 	.word	0x2000d378

0800c734 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c738:	b08d      	sub	sp, #52	; 0x34
 800c73a:	4688      	mov	r8, r1
 800c73c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c73e:	f8d3 c000 	ldr.w	ip, [r3]
 800c742:	680f      	ldr	r7, [r1, #0]
 800c744:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800c748:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800c74c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800c750:	edd3 6a07 	vldr	s13, [r3, #28]
 800c754:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c756:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800c75a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c75e:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c762:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800c766:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800c76a:	eba7 070c 	sub.w	r7, r7, ip
 800c76e:	42bc      	cmp	r4, r7
 800c770:	bfa8      	it	ge
 800c772:	463c      	movge	r4, r7
 800c774:	ee07 4a90 	vmov	s15, r4
 800c778:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c77c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800c780:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c784:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c788:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c78c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c790:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c794:	eb09 0e0c 	add.w	lr, r9, ip
 800c798:	4571      	cmp	r1, lr
 800c79a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c79e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c7a2:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c7a6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c7aa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c7ae:	f340 808d 	ble.w	800c8cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800c7b2:	eba1 060e 	sub.w	r6, r1, lr
 800c7b6:	fb96 f5f4 	sdiv	r5, r6, r4
 800c7ba:	ee07 5a10 	vmov	s14, r5
 800c7be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c7c2:	2d00      	cmp	r5, #0
 800c7c4:	fb04 6615 	mls	r6, r4, r5, r6
 800c7c8:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c7cc:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c7d0:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c7d4:	dd13      	ble.n	800c7fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800c7d6:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c7da:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c7de:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c7e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7e6:	bf18      	it	ne
 800c7e8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c7ec:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c7f0:	bf08      	it	eq
 800c7f2:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c7f6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c7fa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c7fe:	fb05 f204 	mul.w	r2, r5, r4
 800c802:	1abf      	subs	r7, r7, r2
 800c804:	4494      	add	ip, r2
 800c806:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c80a:	4411      	add	r1, r2
 800c80c:	eb09 020c 	add.w	r2, r9, ip
 800c810:	443a      	add	r2, r7
 800c812:	b209      	sxth	r1, r1
 800c814:	428a      	cmp	r2, r1
 800c816:	bfc4      	itt	gt
 800c818:	eba1 0209 	subgt.w	r2, r1, r9
 800c81c:	eba2 070c 	subgt.w	r7, r2, ip
 800c820:	2f00      	cmp	r7, #0
 800c822:	dd50      	ble.n	800c8c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800c824:	fb97 f1f4 	sdiv	r1, r7, r4
 800c828:	fb04 7211 	mls	r2, r4, r1, r7
 800c82c:	b90a      	cbnz	r2, 800c832 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800c82e:	3901      	subs	r1, #1
 800c830:	4622      	mov	r2, r4
 800c832:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c836:	6840      	ldr	r0, [r0, #4]
 800c838:	900b      	str	r0, [sp, #44]	; 0x2c
 800c83a:	f8d0 a000 	ldr.w	sl, [r0]
 800c83e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800c840:	9008      	str	r0, [sp, #32]
 800c842:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800c846:	9818      	ldr	r0, [sp, #96]	; 0x60
 800c848:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800c84c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c850:	695b      	ldr	r3, [r3, #20]
 800c852:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c854:	445b      	add	r3, fp
 800c856:	eef0 6a42 	vmov.f32	s13, s4
 800c85a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c85e:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c862:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c866:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c86a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c86e:	9307      	str	r3, [sp, #28]
 800c870:	ee17 7a90 	vmov	r7, s15
 800c874:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c878:	eeb0 7a61 	vmov.f32	s14, s3
 800c87c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c880:	ee16 3a90 	vmov	r3, s13
 800c884:	fb97 f7f4 	sdiv	r7, r7, r4
 800c888:	ee17 ca90 	vmov	ip, s15
 800c88c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c890:	fb9c fcf4 	sdiv	ip, ip, r4
 800c894:	fb0c 3306 	mla	r3, ip, r6, r3
 800c898:	9302      	str	r3, [sp, #8]
 800c89a:	ee17 3a10 	vmov	r3, s14
 800c89e:	44b6      	add	lr, r6
 800c8a0:	fb04 e505 	mla	r5, r4, r5, lr
 800c8a4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c8a8:	fb07 3706 	mla	r7, r7, r6, r3
 800c8ac:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c8b0:	e9cd 4700 	strd	r4, r7, [sp]
 800c8b4:	2900      	cmp	r1, #0
 800c8b6:	bfcc      	ite	gt
 800c8b8:	46a1      	movgt	r9, r4
 800c8ba:	4691      	movle	r9, r2
 800c8bc:	eba9 0306 	sub.w	r3, r9, r6
 800c8c0:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c8c4:	47a0      	blx	r4
 800c8c6:	b00d      	add	sp, #52	; 0x34
 800c8c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8cc:	2500      	movs	r5, #0
 800c8ce:	462e      	mov	r6, r5
 800c8d0:	e799      	b.n	800c806 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800c8d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8d8:	b0db      	sub	sp, #364	; 0x16c
 800c8da:	461d      	mov	r5, r3
 800c8dc:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800c8e0:	930a      	str	r3, [sp, #40]	; 0x28
 800c8e2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800c8e6:	930b      	str	r3, [sp, #44]	; 0x2c
 800c8e8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800c8ec:	9310      	str	r3, [sp, #64]	; 0x40
 800c8ee:	6803      	ldr	r3, [r0, #0]
 800c8f0:	910f      	str	r1, [sp, #60]	; 0x3c
 800c8f2:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800c8f4:	9009      	str	r0, [sp, #36]	; 0x24
 800c8f6:	4614      	mov	r4, r2
 800c8f8:	4629      	mov	r1, r5
 800c8fa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800c8fe:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800c902:	47b8      	blx	r7
 800c904:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c906:	6058      	str	r0, [r3, #4]
 800c908:	2800      	cmp	r0, #0
 800c90a:	f000 83a1 	beq.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c90e:	682b      	ldr	r3, [r5, #0]
 800c910:	9314      	str	r3, [sp, #80]	; 0x50
 800c912:	686b      	ldr	r3, [r5, #4]
 800c914:	9315      	str	r3, [sp, #84]	; 0x54
 800c916:	4bc4      	ldr	r3, [pc, #784]	; (800cc28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c918:	ed94 7a02 	vldr	s14, [r4, #8]
 800c91c:	7819      	ldrb	r1, [r3, #0]
 800c91e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c922:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800c926:	2900      	cmp	r1, #0
 800c928:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c92c:	bf16      	itet	ne
 800c92e:	4619      	movne	r1, r3
 800c930:	4611      	moveq	r1, r2
 800c932:	4613      	movne	r3, r2
 800c934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c938:	9116      	str	r1, [sp, #88]	; 0x58
 800c93a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800c93e:	f240 8387 	bls.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c942:	ed94 7a07 	vldr	s14, [r4, #28]
 800c946:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c94a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c94e:	f240 837f 	bls.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c952:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800c956:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c95a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c95e:	f240 8377 	bls.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c962:	6822      	ldr	r2, [r4, #0]
 800c964:	4bb1      	ldr	r3, [pc, #708]	; (800cc2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c966:	429a      	cmp	r2, r3
 800c968:	f2c0 8372 	blt.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c96c:	49b0      	ldr	r1, [pc, #704]	; (800cc30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c96e:	6963      	ldr	r3, [r4, #20]
 800c970:	428a      	cmp	r2, r1
 800c972:	f300 836d 	bgt.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c976:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c97a:	48ae      	ldr	r0, [pc, #696]	; (800cc34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c97c:	33ff      	adds	r3, #255	; 0xff
 800c97e:	4283      	cmp	r3, r0
 800c980:	f200 8366 	bhi.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c984:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c986:	4dac      	ldr	r5, [pc, #688]	; (800cc38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800c988:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c98c:	33ff      	adds	r3, #255	; 0xff
 800c98e:	42ab      	cmp	r3, r5
 800c990:	f200 835e 	bhi.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c994:	6862      	ldr	r2, [r4, #4]
 800c996:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800c99a:	33ff      	adds	r3, #255	; 0xff
 800c99c:	4283      	cmp	r3, r0
 800c99e:	f200 8357 	bhi.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9a2:	69a1      	ldr	r1, [r4, #24]
 800c9a4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800c9a8:	33ff      	adds	r3, #255	; 0xff
 800c9aa:	4283      	cmp	r3, r0
 800c9ac:	f200 8350 	bhi.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c9b2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800c9b6:	30ff      	adds	r0, #255	; 0xff
 800c9b8:	42a8      	cmp	r0, r5
 800c9ba:	f200 8349 	bhi.w	800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9be:	428a      	cmp	r2, r1
 800c9c0:	f280 8110 	bge.w	800cbe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800c9c4:	429a      	cmp	r2, r3
 800c9c6:	f300 8119 	bgt.w	800cbfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800c9ca:	4299      	cmp	r1, r3
 800c9cc:	f280 811d 	bge.w	800cc0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800c9d0:	2502      	movs	r5, #2
 800c9d2:	2701      	movs	r7, #1
 800c9d4:	46a9      	mov	r9, r5
 800c9d6:	46b8      	mov	r8, r7
 800c9d8:	f04f 0a00 	mov.w	sl, #0
 800c9dc:	4621      	mov	r1, r4
 800c9de:	a849      	add	r0, sp, #292	; 0x124
 800c9e0:	f003 fe0a 	bl	80105f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c9e4:	4622      	mov	r2, r4
 800c9e6:	4653      	mov	r3, sl
 800c9e8:	a949      	add	r1, sp, #292	; 0x124
 800c9ea:	f8cd 9000 	str.w	r9, [sp]
 800c9ee:	a819      	add	r0, sp, #100	; 0x64
 800c9f0:	f003 ff32 	bl	8010858 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c9f4:	4622      	mov	r2, r4
 800c9f6:	4653      	mov	r3, sl
 800c9f8:	a949      	add	r1, sp, #292	; 0x124
 800c9fa:	f8cd 8000 	str.w	r8, [sp]
 800c9fe:	a829      	add	r0, sp, #164	; 0xa4
 800ca00:	f003 ff2a 	bl	8010858 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca04:	4643      	mov	r3, r8
 800ca06:	4622      	mov	r2, r4
 800ca08:	a949      	add	r1, sp, #292	; 0x124
 800ca0a:	f8cd 9000 	str.w	r9, [sp]
 800ca0e:	a839      	add	r0, sp, #228	; 0xe4
 800ca10:	f003 ff22 	bl	8010858 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca14:	42af      	cmp	r7, r5
 800ca16:	bfb5      	itete	lt
 800ca18:	2300      	movlt	r3, #0
 800ca1a:	2301      	movge	r3, #1
 800ca1c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ca1e:	930e      	strge	r3, [sp, #56]	; 0x38
 800ca20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ca22:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ca26:	af12      	add	r7, sp, #72	; 0x48
 800ca28:	bfb9      	ittee	lt
 800ca2a:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ca2c:	ac19      	addlt	r4, sp, #100	; 0x64
 800ca2e:	ad19      	addge	r5, sp, #100	; 0x64
 800ca30:	ac29      	addge	r4, sp, #164	; 0xa4
 800ca32:	e887 0003 	stmia.w	r7, {r0, r1}
 800ca36:	b928      	cbnz	r0, 800ca44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ca38:	4b80      	ldr	r3, [pc, #512]	; (800cc3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ca3a:	6818      	ldr	r0, [r3, #0]
 800ca3c:	6803      	ldr	r3, [r0, #0]
 800ca3e:	6a1b      	ldr	r3, [r3, #32]
 800ca40:	4798      	blx	r3
 800ca42:	6038      	str	r0, [r7, #0]
 800ca44:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ca46:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ca4a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ca4e:	930c      	str	r3, [sp, #48]	; 0x30
 800ca50:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ca52:	6963      	ldr	r3, [r4, #20]
 800ca54:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800ca56:	440b      	add	r3, r1
 800ca58:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ca5c:	4408      	add	r0, r1
 800ca5e:	b200      	sxth	r0, r0
 800ca60:	4283      	cmp	r3, r0
 800ca62:	900d      	str	r0, [sp, #52]	; 0x34
 800ca64:	f280 80dd 	bge.w	800cc22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800ca68:	428b      	cmp	r3, r1
 800ca6a:	da08      	bge.n	800ca7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ca6c:	2a00      	cmp	r2, #0
 800ca6e:	dd06      	ble.n	800ca7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ca70:	1acb      	subs	r3, r1, r3
 800ca72:	429a      	cmp	r2, r3
 800ca74:	f2c0 80e4 	blt.w	800cc40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800ca78:	2b00      	cmp	r3, #0
 800ca7a:	f300 80e2 	bgt.w	800cc42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800ca7e:	6967      	ldr	r7, [r4, #20]
 800ca80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ca82:	443b      	add	r3, r7
 800ca84:	461f      	mov	r7, r3
 800ca86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ca88:	1bdf      	subs	r7, r3, r7
 800ca8a:	4297      	cmp	r7, r2
 800ca8c:	bfa8      	it	ge
 800ca8e:	4617      	movge	r7, r2
 800ca90:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ca94:	2f00      	cmp	r7, #0
 800ca96:	f340 8166 	ble.w	800cd66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800ca9a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ca9c:	6829      	ldr	r1, [r5, #0]
 800ca9e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800caa2:	f9bb 3000 	ldrsh.w	r3, [fp]
 800caa6:	6820      	ldr	r0, [r4, #0]
 800caa8:	4411      	add	r1, r2
 800caaa:	4299      	cmp	r1, r3
 800caac:	dd1a      	ble.n	800cae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800caae:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cab2:	440b      	add	r3, r1
 800cab4:	4402      	add	r2, r0
 800cab6:	b21b      	sxth	r3, r3
 800cab8:	429a      	cmp	r2, r3
 800caba:	dc13      	bgt.n	800cae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cabc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cabe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cac0:	681b      	ldr	r3, [r3, #0]
 800cac2:	9206      	str	r2, [sp, #24]
 800cac4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cac6:	9205      	str	r2, [sp, #20]
 800cac8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800caca:	9500      	str	r5, [sp, #0]
 800cacc:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cad0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800cad2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cad4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cad8:	a912      	add	r1, sp, #72	; 0x48
 800cada:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800cade:	aa49      	add	r2, sp, #292	; 0x124
 800cae0:	4623      	mov	r3, r4
 800cae2:	47c8      	blx	r9
 800cae4:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cae8:	441a      	add	r2, r3
 800caea:	6963      	ldr	r3, [r4, #20]
 800caec:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800caf0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800caf4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800caf8:	68a1      	ldr	r1, [r4, #8]
 800cafa:	ed94 6a08 	vldr	s12, [r4, #32]
 800cafe:	6022      	str	r2, [r4, #0]
 800cb00:	3301      	adds	r3, #1
 800cb02:	6163      	str	r3, [r4, #20]
 800cb04:	69a3      	ldr	r3, [r4, #24]
 800cb06:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb0a:	3b01      	subs	r3, #1
 800cb0c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800cb10:	61a3      	str	r3, [r4, #24]
 800cb12:	6923      	ldr	r3, [r4, #16]
 800cb14:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cb18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb1c:	edd4 6a07 	vldr	s13, [r4, #28]
 800cb20:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cb24:	440b      	add	r3, r1
 800cb26:	68e1      	ldr	r1, [r4, #12]
 800cb28:	6123      	str	r3, [r4, #16]
 800cb2a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb2e:	428b      	cmp	r3, r1
 800cb30:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb34:	db15      	blt.n	800cb62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800cb36:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800cb3a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cb3e:	3201      	adds	r2, #1
 800cb40:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb44:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cb48:	6022      	str	r2, [r4, #0]
 800cb4a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cb4e:	1a5b      	subs	r3, r3, r1
 800cb50:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cb54:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cb58:	6123      	str	r3, [r4, #16]
 800cb5a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cb5e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cb62:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cb66:	441a      	add	r2, r3
 800cb68:	696b      	ldr	r3, [r5, #20]
 800cb6a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cb6e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cb72:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cb76:	68a9      	ldr	r1, [r5, #8]
 800cb78:	ed95 6a08 	vldr	s12, [r5, #32]
 800cb7c:	602a      	str	r2, [r5, #0]
 800cb7e:	3301      	adds	r3, #1
 800cb80:	616b      	str	r3, [r5, #20]
 800cb82:	69ab      	ldr	r3, [r5, #24]
 800cb84:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb88:	3b01      	subs	r3, #1
 800cb8a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cb8e:	61ab      	str	r3, [r5, #24]
 800cb90:	692b      	ldr	r3, [r5, #16]
 800cb92:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cb96:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb9a:	edd5 6a07 	vldr	s13, [r5, #28]
 800cb9e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cba2:	440b      	add	r3, r1
 800cba4:	68e9      	ldr	r1, [r5, #12]
 800cba6:	612b      	str	r3, [r5, #16]
 800cba8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cbac:	428b      	cmp	r3, r1
 800cbae:	edc5 6a07 	vstr	s13, [r5, #28]
 800cbb2:	db15      	blt.n	800cbe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800cbb4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cbb8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cbbc:	3201      	adds	r2, #1
 800cbbe:	edc5 6a07 	vstr	s13, [r5, #28]
 800cbc2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cbc6:	602a      	str	r2, [r5, #0]
 800cbc8:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cbcc:	1a5b      	subs	r3, r3, r1
 800cbce:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cbd2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cbd6:	612b      	str	r3, [r5, #16]
 800cbd8:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cbdc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cbe0:	3f01      	subs	r7, #1
 800cbe2:	e757      	b.n	800ca94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cbe4:	4299      	cmp	r1, r3
 800cbe6:	dc13      	bgt.n	800cc10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cbe8:	429a      	cmp	r2, r3
 800cbea:	da14      	bge.n	800cc16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cbec:	2502      	movs	r5, #2
 800cbee:	2703      	movs	r7, #3
 800cbf0:	46a9      	mov	r9, r5
 800cbf2:	f04f 0800 	mov.w	r8, #0
 800cbf6:	f04f 0a01 	mov.w	sl, #1
 800cbfa:	e6ef      	b.n	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cbfc:	2501      	movs	r5, #1
 800cbfe:	2700      	movs	r7, #0
 800cc00:	46a9      	mov	r9, r5
 800cc02:	46b8      	mov	r8, r7
 800cc04:	f04f 0a02 	mov.w	sl, #2
 800cc08:	e6e8      	b.n	800c9dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc0a:	2501      	movs	r5, #1
 800cc0c:	2702      	movs	r7, #2
 800cc0e:	e6e1      	b.n	800c9d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cc10:	2500      	movs	r5, #0
 800cc12:	2701      	movs	r7, #1
 800cc14:	e7f4      	b.n	800cc00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cc16:	2702      	movs	r7, #2
 800cc18:	2503      	movs	r5, #3
 800cc1a:	f04f 0900 	mov.w	r9, #0
 800cc1e:	46b8      	mov	r8, r7
 800cc20:	e7e9      	b.n	800cbf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cc22:	4613      	mov	r3, r2
 800cc24:	e728      	b.n	800ca78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cc26:	bf00      	nop
 800cc28:	2000d350 	.word	0x2000d350
 800cc2c:	fffd8f01 	.word	0xfffd8f01
 800cc30:	00027100 	.word	0x00027100
 800cc34:	0004e1ff 	.word	0x0004e1ff
 800cc38:	0004e1fe 	.word	0x0004e1fe
 800cc3c:	2000d358 	.word	0x2000d358
 800cc40:	4613      	mov	r3, r2
 800cc42:	992b      	ldr	r1, [sp, #172]	; 0xac
 800cc44:	9111      	str	r1, [sp, #68]	; 0x44
 800cc46:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800cc4a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800cc4e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800cc50:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800cc54:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800cc58:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800cc5c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800cc60:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800cc64:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800cc68:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800cc6c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800cc70:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800cc74:	469e      	mov	lr, r3
 800cc76:	469c      	mov	ip, r3
 800cc78:	f04f 0900 	mov.w	r9, #0
 800cc7c:	f1bc 0f00 	cmp.w	ip, #0
 800cc80:	d147      	bne.n	800cd12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800cc82:	eb03 0c07 	add.w	ip, r3, r7
 800cc86:	1ad7      	subs	r7, r2, r3
 800cc88:	f1b9 0f00 	cmp.w	r9, #0
 800cc8c:	d009      	beq.n	800cca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cc8e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800cc92:	9029      	str	r0, [sp, #164]	; 0xa4
 800cc94:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800cc98:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800cc9c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800cca0:	912d      	str	r1, [sp, #180]	; 0xb4
 800cca2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cca4:	9111      	str	r1, [sp, #68]	; 0x44
 800cca6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ccaa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ccae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ccb2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ccb6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ccba:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ccbe:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ccc2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ccc6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ccca:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ccce:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ccd2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ccd6:	f04f 0800 	mov.w	r8, #0
 800ccda:	f1be 0f00 	cmp.w	lr, #0
 800ccde:	d031      	beq.n	800cd44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cce0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cce2:	4431      	add	r1, r6
 800cce4:	4549      	cmp	r1, r9
 800cce6:	4450      	add	r0, sl
 800cce8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ccec:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ccf0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ccf4:	db08      	blt.n	800cd08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ccf6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ccfa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ccfe:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cd02:	3001      	adds	r0, #1
 800cd04:	eba1 0109 	sub.w	r1, r1, r9
 800cd08:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cd0c:	f04f 0801 	mov.w	r8, #1
 800cd10:	e7e3      	b.n	800ccda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cd12:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cd14:	4431      	add	r1, r6
 800cd16:	4541      	cmp	r1, r8
 800cd18:	4450      	add	r0, sl
 800cd1a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cd1e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cd22:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cd26:	db08      	blt.n	800cd3a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cd28:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cd2c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cd30:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cd34:	3001      	adds	r0, #1
 800cd36:	eba1 0108 	sub.w	r1, r1, r8
 800cd3a:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cd3e:	f04f 0901 	mov.w	r9, #1
 800cd42:	e79b      	b.n	800cc7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800cd44:	449c      	add	ip, r3
 800cd46:	1aff      	subs	r7, r7, r3
 800cd48:	f1b8 0f00 	cmp.w	r8, #0
 800cd4c:	d009      	beq.n	800cd62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800cd4e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800cd52:	9019      	str	r0, [sp, #100]	; 0x64
 800cd54:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cd58:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800cd5c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800cd60:	911d      	str	r1, [sp, #116]	; 0x74
 800cd62:	1ad2      	subs	r2, r2, r3
 800cd64:	e68b      	b.n	800ca7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cd66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cd68:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800cd6a:	2b00      	cmp	r3, #0
 800cd6c:	f000 80d1 	beq.w	800cf12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cd70:	ad19      	add	r5, sp, #100	; 0x64
 800cd72:	ac39      	add	r4, sp, #228	; 0xe4
 800cd74:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cd76:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cd7a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cd7e:	930c      	str	r3, [sp, #48]	; 0x30
 800cd80:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cd82:	6963      	ldr	r3, [r4, #20]
 800cd84:	440b      	add	r3, r1
 800cd86:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cd8a:	4408      	add	r0, r1
 800cd8c:	b200      	sxth	r0, r0
 800cd8e:	4283      	cmp	r3, r0
 800cd90:	900d      	str	r0, [sp, #52]	; 0x34
 800cd92:	f280 80c1 	bge.w	800cf18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800cd96:	428b      	cmp	r3, r1
 800cd98:	da08      	bge.n	800cdac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cd9a:	2a00      	cmp	r2, #0
 800cd9c:	dd06      	ble.n	800cdac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800cd9e:	1acb      	subs	r3, r1, r3
 800cda0:	429a      	cmp	r2, r3
 800cda2:	f2c0 80bb 	blt.w	800cf1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800cda6:	2b00      	cmp	r3, #0
 800cda8:	f300 80b9 	bgt.w	800cf1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800cdac:	6967      	ldr	r7, [r4, #20]
 800cdae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cdb0:	443b      	add	r3, r7
 800cdb2:	461f      	mov	r7, r3
 800cdb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cdb6:	1bdf      	subs	r7, r3, r7
 800cdb8:	4297      	cmp	r7, r2
 800cdba:	bfa8      	it	ge
 800cdbc:	4617      	movge	r7, r2
 800cdbe:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800cdc2:	2f00      	cmp	r7, #0
 800cdc4:	f340 813c 	ble.w	800d040 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800cdc8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cdca:	6829      	ldr	r1, [r5, #0]
 800cdcc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cdd0:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cdd4:	6820      	ldr	r0, [r4, #0]
 800cdd6:	4411      	add	r1, r2
 800cdd8:	4299      	cmp	r1, r3
 800cdda:	dd1a      	ble.n	800ce12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cddc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cde0:	440b      	add	r3, r1
 800cde2:	4402      	add	r2, r0
 800cde4:	b21b      	sxth	r3, r3
 800cde6:	429a      	cmp	r2, r3
 800cde8:	dc13      	bgt.n	800ce12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800cdea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cdec:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cdee:	681b      	ldr	r3, [r3, #0]
 800cdf0:	9206      	str	r2, [sp, #24]
 800cdf2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cdf4:	9205      	str	r2, [sp, #20]
 800cdf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cdf8:	9500      	str	r5, [sp, #0]
 800cdfa:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cdfe:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ce00:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ce02:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ce06:	a912      	add	r1, sp, #72	; 0x48
 800ce08:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800ce0c:	aa49      	add	r2, sp, #292	; 0x124
 800ce0e:	4623      	mov	r3, r4
 800ce10:	47c8      	blx	r9
 800ce12:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ce16:	441a      	add	r2, r3
 800ce18:	6963      	ldr	r3, [r4, #20]
 800ce1a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ce1e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ce22:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ce26:	68a1      	ldr	r1, [r4, #8]
 800ce28:	ed94 6a08 	vldr	s12, [r4, #32]
 800ce2c:	6022      	str	r2, [r4, #0]
 800ce2e:	3301      	adds	r3, #1
 800ce30:	6163      	str	r3, [r4, #20]
 800ce32:	69a3      	ldr	r3, [r4, #24]
 800ce34:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ce38:	3b01      	subs	r3, #1
 800ce3a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ce3e:	61a3      	str	r3, [r4, #24]
 800ce40:	6923      	ldr	r3, [r4, #16]
 800ce42:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ce46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce4a:	edd4 6a07 	vldr	s13, [r4, #28]
 800ce4e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ce52:	440b      	add	r3, r1
 800ce54:	68e1      	ldr	r1, [r4, #12]
 800ce56:	6123      	str	r3, [r4, #16]
 800ce58:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ce5c:	428b      	cmp	r3, r1
 800ce5e:	edc4 6a07 	vstr	s13, [r4, #28]
 800ce62:	db15      	blt.n	800ce90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ce64:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ce68:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ce6c:	3201      	adds	r2, #1
 800ce6e:	edc4 6a07 	vstr	s13, [r4, #28]
 800ce72:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ce76:	6022      	str	r2, [r4, #0]
 800ce78:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ce7c:	1a5b      	subs	r3, r3, r1
 800ce7e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ce82:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ce86:	6123      	str	r3, [r4, #16]
 800ce88:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ce8c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ce90:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ce94:	441a      	add	r2, r3
 800ce96:	696b      	ldr	r3, [r5, #20]
 800ce98:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ce9c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cea0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cea4:	68a9      	ldr	r1, [r5, #8]
 800cea6:	ed95 6a08 	vldr	s12, [r5, #32]
 800ceaa:	602a      	str	r2, [r5, #0]
 800ceac:	3301      	adds	r3, #1
 800ceae:	616b      	str	r3, [r5, #20]
 800ceb0:	69ab      	ldr	r3, [r5, #24]
 800ceb2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ceb6:	3b01      	subs	r3, #1
 800ceb8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cebc:	61ab      	str	r3, [r5, #24]
 800cebe:	692b      	ldr	r3, [r5, #16]
 800cec0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cec4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cec8:	edd5 6a07 	vldr	s13, [r5, #28]
 800cecc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ced0:	440b      	add	r3, r1
 800ced2:	68e9      	ldr	r1, [r5, #12]
 800ced4:	612b      	str	r3, [r5, #16]
 800ced6:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ceda:	428b      	cmp	r3, r1
 800cedc:	edc5 6a07 	vstr	s13, [r5, #28]
 800cee0:	db15      	blt.n	800cf0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cee2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cee6:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ceea:	3201      	adds	r2, #1
 800ceec:	edc5 6a07 	vstr	s13, [r5, #28]
 800cef0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cef4:	602a      	str	r2, [r5, #0]
 800cef6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cefa:	1a5b      	subs	r3, r3, r1
 800cefc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cf00:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cf04:	612b      	str	r3, [r5, #16]
 800cf06:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf0a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cf0e:	3f01      	subs	r7, #1
 800cf10:	e757      	b.n	800cdc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cf12:	ad39      	add	r5, sp, #228	; 0xe4
 800cf14:	ac19      	add	r4, sp, #100	; 0x64
 800cf16:	e72d      	b.n	800cd74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cf18:	4613      	mov	r3, r2
 800cf1a:	e744      	b.n	800cda6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cf1c:	4613      	mov	r3, r2
 800cf1e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800cf22:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800cf24:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800cf28:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800cf2c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800cf30:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800cf34:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800cf38:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800cf3c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800cf40:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800cf42:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800cf46:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800cf4a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800cf4e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800cf52:	960e      	str	r6, [sp, #56]	; 0x38
 800cf54:	469e      	mov	lr, r3
 800cf56:	461f      	mov	r7, r3
 800cf58:	f04f 0900 	mov.w	r9, #0
 800cf5c:	2f00      	cmp	r7, #0
 800cf5e:	d146      	bne.n	800cfee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cf60:	449c      	add	ip, r3
 800cf62:	1ad7      	subs	r7, r2, r3
 800cf64:	f1b9 0f00 	cmp.w	r9, #0
 800cf68:	d009      	beq.n	800cf7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cf6a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800cf6e:	9039      	str	r0, [sp, #228]	; 0xe4
 800cf70:	913d      	str	r1, [sp, #244]	; 0xf4
 800cf72:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800cf76:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800cf7a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800cf7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cf80:	910e      	str	r1, [sp, #56]	; 0x38
 800cf82:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800cf86:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800cf8a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800cf8e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cf92:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cf96:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cf9a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cf9e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cfa2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cfa6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cfaa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cfae:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cfb2:	f04f 0800 	mov.w	r8, #0
 800cfb6:	f1be 0f00 	cmp.w	lr, #0
 800cfba:	d030      	beq.n	800d01e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800cfbc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800cfbe:	4431      	add	r1, r6
 800cfc0:	4549      	cmp	r1, r9
 800cfc2:	4450      	add	r0, sl
 800cfc4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cfc8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cfcc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cfd0:	db08      	blt.n	800cfe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800cfd2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cfd6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cfda:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cfde:	3001      	adds	r0, #1
 800cfe0:	eba1 0109 	sub.w	r1, r1, r9
 800cfe4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cfe8:	f04f 0801 	mov.w	r8, #1
 800cfec:	e7e3      	b.n	800cfb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800cfee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800cff0:	4431      	add	r1, r6
 800cff2:	4541      	cmp	r1, r8
 800cff4:	4450      	add	r0, sl
 800cff6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cffa:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cffe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d002:	db08      	blt.n	800d016 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800d004:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d008:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d00c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d010:	3001      	adds	r0, #1
 800d012:	eba1 0108 	sub.w	r1, r1, r8
 800d016:	3f01      	subs	r7, #1
 800d018:	f04f 0901 	mov.w	r9, #1
 800d01c:	e79e      	b.n	800cf5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800d01e:	449c      	add	ip, r3
 800d020:	1aff      	subs	r7, r7, r3
 800d022:	f1b8 0f00 	cmp.w	r8, #0
 800d026:	d009      	beq.n	800d03c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800d028:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800d02c:	9019      	str	r0, [sp, #100]	; 0x64
 800d02e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800d032:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800d036:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800d03a:	911d      	str	r1, [sp, #116]	; 0x74
 800d03c:	1ad2      	subs	r2, r2, r3
 800d03e:	e6b5      	b.n	800cdac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d040:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d042:	681b      	ldr	r3, [r3, #0]
 800d044:	b923      	cbnz	r3, 800d050 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d046:	4b04      	ldr	r3, [pc, #16]	; (800d058 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800d048:	6818      	ldr	r0, [r3, #0]
 800d04a:	6803      	ldr	r3, [r0, #0]
 800d04c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d04e:	4798      	blx	r3
 800d050:	b05b      	add	sp, #364	; 0x16c
 800d052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d056:	bf00      	nop
 800d058:	2000d358 	.word	0x2000d358

0800d05c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800d05c:	b570      	push	{r4, r5, r6, lr}
 800d05e:	4604      	mov	r4, r0
 800d060:	2500      	movs	r5, #0
 800d062:	7223      	strb	r3, [r4, #8]
 800d064:	9804      	ldr	r0, [sp, #16]
 800d066:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d06a:	8025      	strh	r5, [r4, #0]
 800d06c:	6061      	str	r1, [r4, #4]
 800d06e:	7263      	strb	r3, [r4, #9]
 800d070:	60e0      	str	r0, [r4, #12]
 800d072:	8222      	strh	r2, [r4, #16]
 800d074:	8265      	strh	r5, [r4, #18]
 800d076:	82a5      	strh	r5, [r4, #20]
 800d078:	82e5      	strh	r5, [r4, #22]
 800d07a:	8325      	strh	r5, [r4, #24]
 800d07c:	8365      	strh	r5, [r4, #26]
 800d07e:	83a5      	strh	r5, [r4, #28]
 800d080:	77a5      	strb	r5, [r4, #30]
 800d082:	6803      	ldr	r3, [r0, #0]
 800d084:	695b      	ldr	r3, [r3, #20]
 800d086:	4798      	blx	r3
 800d088:	4606      	mov	r6, r0
 800d08a:	b1f8      	cbz	r0, 800d0cc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d08c:	68e0      	ldr	r0, [r4, #12]
 800d08e:	6803      	ldr	r3, [r0, #0]
 800d090:	4631      	mov	r1, r6
 800d092:	68db      	ldr	r3, [r3, #12]
 800d094:	4798      	blx	r3
 800d096:	7b43      	ldrb	r3, [r0, #13]
 800d098:	7a82      	ldrb	r2, [r0, #10]
 800d09a:	005b      	lsls	r3, r3, #1
 800d09c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d0a0:	4313      	orrs	r3, r2
 800d0a2:	83a3      	strh	r3, [r4, #28]
 800d0a4:	7a63      	ldrb	r3, [r4, #9]
 800d0a6:	2b04      	cmp	r3, #4
 800d0a8:	4605      	mov	r5, r0
 800d0aa:	d10f      	bne.n	800d0cc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800d0ac:	68e0      	ldr	r0, [r4, #12]
 800d0ae:	6803      	ldr	r3, [r0, #0]
 800d0b0:	462a      	mov	r2, r5
 800d0b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d0b4:	4631      	mov	r1, r6
 800d0b6:	4798      	blx	r3
 800d0b8:	7b6b      	ldrb	r3, [r5, #13]
 800d0ba:	005b      	lsls	r3, r3, #1
 800d0bc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d0c0:	7aab      	ldrb	r3, [r5, #10]
 800d0c2:	4313      	orrs	r3, r2
 800d0c4:	4418      	add	r0, r3
 800d0c6:	8ba3      	ldrh	r3, [r4, #28]
 800d0c8:	4418      	add	r0, r3
 800d0ca:	83a0      	strh	r0, [r4, #28]
 800d0cc:	4620      	mov	r0, r4
 800d0ce:	bd70      	pop	{r4, r5, r6, pc}

0800d0d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d0d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0d4:	2400      	movs	r4, #0
 800d0d6:	b085      	sub	sp, #20
 800d0d8:	4681      	mov	r9, r0
 800d0da:	4688      	mov	r8, r1
 800d0dc:	4692      	mov	sl, r2
 800d0de:	469b      	mov	fp, r3
 800d0e0:	4627      	mov	r7, r4
 800d0e2:	4625      	mov	r5, r4
 800d0e4:	4626      	mov	r6, r4
 800d0e6:	4554      	cmp	r4, sl
 800d0e8:	da2a      	bge.n	800d140 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d0ea:	2300      	movs	r3, #0
 800d0ec:	9303      	str	r3, [sp, #12]
 800d0ee:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d0f2:	429d      	cmp	r5, r3
 800d0f4:	d004      	beq.n	800d100 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d0f6:	f242 030b 	movw	r3, #8203	; 0x200b
 800d0fa:	429d      	cmp	r5, r3
 800d0fc:	bf18      	it	ne
 800d0fe:	462f      	movne	r7, r5
 800d100:	ab03      	add	r3, sp, #12
 800d102:	4642      	mov	r2, r8
 800d104:	4659      	mov	r1, fp
 800d106:	4648      	mov	r0, r9
 800d108:	f002 fffc 	bl	8010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d10c:	4605      	mov	r5, r0
 800d10e:	b1b8      	cbz	r0, 800d140 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d110:	280a      	cmp	r0, #10
 800d112:	d015      	beq.n	800d140 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d114:	9a03      	ldr	r2, [sp, #12]
 800d116:	b18a      	cbz	r2, 800d13c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d118:	7b50      	ldrb	r0, [r2, #13]
 800d11a:	7a93      	ldrb	r3, [r2, #10]
 800d11c:	8895      	ldrh	r5, [r2, #4]
 800d11e:	0040      	lsls	r0, r0, #1
 800d120:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d124:	4303      	orrs	r3, r0
 800d126:	9301      	str	r3, [sp, #4]
 800d128:	f8d8 3000 	ldr.w	r3, [r8]
 800d12c:	4639      	mov	r1, r7
 800d12e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d130:	4640      	mov	r0, r8
 800d132:	4798      	blx	r3
 800d134:	9b01      	ldr	r3, [sp, #4]
 800d136:	4418      	add	r0, r3
 800d138:	4406      	add	r6, r0
 800d13a:	b2b6      	uxth	r6, r6
 800d13c:	3401      	adds	r4, #1
 800d13e:	e7d2      	b.n	800d0e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d140:	4630      	mov	r0, r6
 800d142:	b005      	add	sp, #20
 800d144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d148 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d148:	2a02      	cmp	r2, #2
 800d14a:	b530      	push	{r4, r5, lr}
 800d14c:	d011      	beq.n	800d172 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d14e:	2a03      	cmp	r2, #3
 800d150:	d01c      	beq.n	800d18c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d152:	2a01      	cmp	r2, #1
 800d154:	d10c      	bne.n	800d170 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d156:	888b      	ldrh	r3, [r1, #4]
 800d158:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d15c:	8801      	ldrh	r1, [r0, #0]
 800d15e:	8844      	ldrh	r4, [r0, #2]
 800d160:	8004      	strh	r4, [r0, #0]
 800d162:	1a9b      	subs	r3, r3, r2
 800d164:	1a5b      	subs	r3, r3, r1
 800d166:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d16a:	8043      	strh	r3, [r0, #2]
 800d16c:	8081      	strh	r1, [r0, #4]
 800d16e:	80c2      	strh	r2, [r0, #6]
 800d170:	bd30      	pop	{r4, r5, pc}
 800d172:	88cb      	ldrh	r3, [r1, #6]
 800d174:	88c2      	ldrh	r2, [r0, #6]
 800d176:	1a9b      	subs	r3, r3, r2
 800d178:	8842      	ldrh	r2, [r0, #2]
 800d17a:	1a9b      	subs	r3, r3, r2
 800d17c:	888a      	ldrh	r2, [r1, #4]
 800d17e:	8881      	ldrh	r1, [r0, #4]
 800d180:	8043      	strh	r3, [r0, #2]
 800d182:	1a52      	subs	r2, r2, r1
 800d184:	8801      	ldrh	r1, [r0, #0]
 800d186:	1a52      	subs	r2, r2, r1
 800d188:	8002      	strh	r2, [r0, #0]
 800d18a:	e7f1      	b.n	800d170 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d18c:	88cb      	ldrh	r3, [r1, #6]
 800d18e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d192:	8841      	ldrh	r1, [r0, #2]
 800d194:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d198:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d19c:	8045      	strh	r5, [r0, #2]
 800d19e:	1a9b      	subs	r3, r3, r2
 800d1a0:	1a5b      	subs	r3, r3, r1
 800d1a2:	8003      	strh	r3, [r0, #0]
 800d1a4:	8082      	strh	r2, [r0, #4]
 800d1a6:	80c4      	strh	r4, [r0, #6]
 800d1a8:	e7e2      	b.n	800d170 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d1aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d1aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1ae:	b09f      	sub	sp, #124	; 0x7c
 800d1b0:	9116      	str	r1, [sp, #88]	; 0x58
 800d1b2:	9317      	str	r3, [sp, #92]	; 0x5c
 800d1b4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d1b6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d1b8:	8809      	ldrh	r1, [r1, #0]
 800d1ba:	889b      	ldrh	r3, [r3, #4]
 800d1bc:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d1c0:	9212      	str	r2, [sp, #72]	; 0x48
 800d1c2:	440b      	add	r3, r1
 800d1c4:	b21b      	sxth	r3, r3
 800d1c6:	9310      	str	r3, [sp, #64]	; 0x40
 800d1c8:	f8d8 3000 	ldr.w	r3, [r8]
 800d1cc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d1d0:	7a59      	ldrb	r1, [r3, #9]
 800d1d2:	7a1b      	ldrb	r3, [r3, #8]
 800d1d4:	9315      	str	r3, [sp, #84]	; 0x54
 800d1d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800d1d8:	9011      	str	r0, [sp, #68]	; 0x44
 800d1da:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d1de:	9114      	str	r1, [sp, #80]	; 0x50
 800d1e0:	f9b3 5000 	ldrsh.w	r5, [r3]
 800d1e4:	2a00      	cmp	r2, #0
 800d1e6:	d067      	beq.n	800d2b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800d1e8:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d1ec:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d1ee:	2b04      	cmp	r3, #4
 800d1f0:	bf14      	ite	ne
 800d1f2:	2301      	movne	r3, #1
 800d1f4:	2302      	moveq	r3, #2
 800d1f6:	4413      	add	r3, r2
 800d1f8:	f04f 0900 	mov.w	r9, #0
 800d1fc:	930f      	str	r3, [sp, #60]	; 0x3c
 800d1fe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d202:	464c      	mov	r4, r9
 800d204:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d208:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d20c:	4293      	cmp	r3, r2
 800d20e:	f280 808c 	bge.w	800d32a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d212:	2300      	movs	r3, #0
 800d214:	931c      	str	r3, [sp, #112]	; 0x70
 800d216:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d21a:	429c      	cmp	r4, r3
 800d21c:	d006      	beq.n	800d22c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800d21e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d220:	f242 020b 	movw	r2, #8203	; 0x200b
 800d224:	4294      	cmp	r4, r2
 800d226:	bf18      	it	ne
 800d228:	4623      	movne	r3, r4
 800d22a:	930d      	str	r3, [sp, #52]	; 0x34
 800d22c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d22e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d230:	f8d8 2000 	ldr.w	r2, [r8]
 800d234:	428b      	cmp	r3, r1
 800d236:	db41      	blt.n	800d2bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d238:	6813      	ldr	r3, [r2, #0]
 800d23a:	4610      	mov	r0, r2
 800d23c:	695b      	ldr	r3, [r3, #20]
 800d23e:	4798      	blx	r3
 800d240:	4604      	mov	r4, r0
 800d242:	f8d8 0000 	ldr.w	r0, [r8]
 800d246:	6803      	ldr	r3, [r0, #0]
 800d248:	aa1d      	add	r2, sp, #116	; 0x74
 800d24a:	689e      	ldr	r6, [r3, #8]
 800d24c:	4621      	mov	r1, r4
 800d24e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d252:	47b0      	blx	r6
 800d254:	901c      	str	r0, [sp, #112]	; 0x70
 800d256:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d25a:	429c      	cmp	r4, r3
 800d25c:	f000 80e9 	beq.w	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d260:	f242 030b 	movw	r3, #8203	; 0x200b
 800d264:	429c      	cmp	r4, r3
 800d266:	f000 80e4 	beq.w	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d26a:	2c00      	cmp	r4, #0
 800d26c:	f000 80f6 	beq.w	800d45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d270:	2c0a      	cmp	r4, #10
 800d272:	d060      	beq.n	800d336 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d274:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d276:	b36a      	cbz	r2, 800d2d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800d278:	8894      	ldrh	r4, [r2, #4]
 800d27a:	f1bb 0f00 	cmp.w	fp, #0
 800d27e:	d03b      	beq.n	800d2f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800d280:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d284:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d288:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d28c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d290:	f1bb 0f01 	cmp.w	fp, #1
 800d294:	ea49 0903 	orr.w	r9, r9, r3
 800d298:	d134      	bne.n	800d304 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800d29a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d29c:	eba5 0509 	sub.w	r5, r5, r9
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	d14f      	bne.n	800d344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d2a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d2a6:	eb09 0305 	add.w	r3, r9, r5
 800d2aa:	4413      	add	r3, r2
 800d2ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d2ae:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d2b2:	4293      	cmp	r3, r2
 800d2b4:	da51      	bge.n	800d35a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800d2b6:	e038      	b.n	800d32a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800d2b8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d2ba:	e79d      	b.n	800d1f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800d2bc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d2c0:	9301      	str	r3, [sp, #4]
 800d2c2:	ab1d      	add	r3, sp, #116	; 0x74
 800d2c4:	9300      	str	r3, [sp, #0]
 800d2c6:	4659      	mov	r1, fp
 800d2c8:	ab1c      	add	r3, sp, #112	; 0x70
 800d2ca:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d2cc:	f002 ff72 	bl	80101b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d2d0:	4604      	mov	r4, r0
 800d2d2:	e7c0      	b.n	800d256 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800d2d4:	f8d8 0000 	ldr.w	r0, [r8]
 800d2d8:	6803      	ldr	r3, [r0, #0]
 800d2da:	691b      	ldr	r3, [r3, #16]
 800d2dc:	4798      	blx	r3
 800d2de:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d2e2:	4298      	cmp	r0, r3
 800d2e4:	f000 80a5 	beq.w	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d2e8:	f242 030b 	movw	r3, #8203	; 0x200b
 800d2ec:	4298      	cmp	r0, r3
 800d2ee:	f000 80a0 	beq.w	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d2f2:	f1bb 0f00 	cmp.w	fp, #0
 800d2f6:	d100      	bne.n	800d2fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800d2f8:	444d      	add	r5, r9
 800d2fa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d2fc:	2a00      	cmp	r2, #0
 800d2fe:	d1bf      	bne.n	800d280 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800d300:	4691      	mov	r9, r2
 800d302:	e096      	b.n	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d304:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d306:	2b00      	cmp	r3, #0
 800d308:	f000 80aa 	beq.w	800d460 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800d30c:	f1bb 0f00 	cmp.w	fp, #0
 800d310:	d118      	bne.n	800d344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800d312:	f8d8 0000 	ldr.w	r0, [r8]
 800d316:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d318:	6803      	ldr	r3, [r0, #0]
 800d31a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d31c:	4798      	blx	r3
 800d31e:	4405      	add	r5, r0
 800d320:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d322:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d324:	1aeb      	subs	r3, r5, r3
 800d326:	4293      	cmp	r3, r2
 800d328:	dd17      	ble.n	800d35a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800d32a:	2c00      	cmp	r4, #0
 800d32c:	f000 8096 	beq.w	800d45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d330:	2c0a      	cmp	r4, #10
 800d332:	f040 8084 	bne.w	800d43e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800d336:	240a      	movs	r4, #10
 800d338:	fab4 f084 	clz	r0, r4
 800d33c:	0940      	lsrs	r0, r0, #5
 800d33e:	b01f      	add	sp, #124	; 0x7c
 800d340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d344:	f8d8 0000 	ldr.w	r0, [r8]
 800d348:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d34a:	6803      	ldr	r3, [r0, #0]
 800d34c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d34e:	4798      	blx	r3
 800d350:	f1bb 0f01 	cmp.w	fp, #1
 800d354:	eba5 0500 	sub.w	r5, r5, r0
 800d358:	d0a4      	beq.n	800d2a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800d35a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d35c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d35e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d362:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d366:	7b43      	ldrb	r3, [r0, #13]
 800d368:	015b      	lsls	r3, r3, #5
 800d36a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d36e:	7983      	ldrb	r3, [r0, #6]
 800d370:	4429      	add	r1, r5
 800d372:	4313      	orrs	r3, r2
 800d374:	440b      	add	r3, r1
 800d376:	42b3      	cmp	r3, r6
 800d378:	db5b      	blt.n	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d37a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d37c:	4299      	cmp	r1, r3
 800d37e:	da58      	bge.n	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d380:	f8d8 0000 	ldr.w	r0, [r8]
 800d384:	6803      	ldr	r3, [r0, #0]
 800d386:	42ae      	cmp	r6, r5
 800d388:	bfc8      	it	gt
 800d38a:	1b76      	subgt	r6, r6, r5
 800d38c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d38e:	bfcc      	ite	gt
 800d390:	b2b6      	uxthgt	r6, r6
 800d392:	2600      	movle	r6, #0
 800d394:	4798      	blx	r3
 800d396:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d398:	7b5a      	ldrb	r2, [r3, #13]
 800d39a:	00d1      	lsls	r1, r2, #3
 800d39c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800d3a0:	7a19      	ldrb	r1, [r3, #8]
 800d3a2:	4339      	orrs	r1, r7
 800d3a4:	0657      	lsls	r7, r2, #25
 800d3a6:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d3a8:	bf44      	itt	mi
 800d3aa:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d3ae:	b209      	sxthmi	r1, r1
 800d3b0:	19c7      	adds	r7, r0, r7
 800d3b2:	1a7f      	subs	r7, r7, r1
 800d3b4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d3b6:	b2bf      	uxth	r7, r7
 800d3b8:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d3bc:	fa0f fa87 	sxth.w	sl, r7
 800d3c0:	4551      	cmp	r1, sl
 800d3c2:	dd3a      	ble.n	800d43a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800d3c4:	0112      	lsls	r2, r2, #4
 800d3c6:	79d8      	ldrb	r0, [r3, #7]
 800d3c8:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d3cc:	4302      	orrs	r2, r0
 800d3ce:	4492      	add	sl, r2
 800d3d0:	4551      	cmp	r1, sl
 800d3d2:	dc2e      	bgt.n	800d432 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800d3d4:	1bcf      	subs	r7, r1, r7
 800d3d6:	b2bf      	uxth	r7, r7
 800d3d8:	468a      	mov	sl, r1
 800d3da:	9319      	str	r3, [sp, #100]	; 0x64
 800d3dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d3de:	f8d8 0000 	ldr.w	r0, [r8]
 800d3e2:	681a      	ldr	r2, [r3, #0]
 800d3e4:	6801      	ldr	r1, [r0, #0]
 800d3e6:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800d3e8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d3ea:	9313      	str	r3, [sp, #76]	; 0x4c
 800d3ec:	9218      	str	r2, [sp, #96]	; 0x60
 800d3ee:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d3f0:	4788      	blx	r1
 800d3f2:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d3f6:	910b      	str	r1, [sp, #44]	; 0x2c
 800d3f8:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d3fc:	910a      	str	r1, [sp, #40]	; 0x28
 800d3fe:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d402:	9109      	str	r1, [sp, #36]	; 0x24
 800d404:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d406:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d40a:	9305      	str	r3, [sp, #20]
 800d40c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d40e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d410:	9206      	str	r2, [sp, #24]
 800d412:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d416:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800d41a:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d41e:	442e      	add	r6, r5
 800d420:	b236      	sxth	r6, r6
 800d422:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d424:	9600      	str	r6, [sp, #0]
 800d426:	681a      	ldr	r2, [r3, #0]
 800d428:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d42a:	685b      	ldr	r3, [r3, #4]
 800d42c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d42e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d430:	47b0      	blx	r6
 800d432:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d434:	3301      	adds	r3, #1
 800d436:	930e      	str	r3, [sp, #56]	; 0x38
 800d438:	e6e6      	b.n	800d208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800d43a:	2700      	movs	r7, #0
 800d43c:	e7cd      	b.n	800d3da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800d43e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d440:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d442:	3501      	adds	r5, #1
 800d444:	429d      	cmp	r5, r3
 800d446:	f6bf af77 	bge.w	800d338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d44a:	4659      	mov	r1, fp
 800d44c:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d44e:	f7f5 ff69 	bl	8003324 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d452:	4604      	mov	r4, r0
 800d454:	b110      	cbz	r0, 800d45c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800d456:	280a      	cmp	r0, #10
 800d458:	d1f2      	bne.n	800d440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800d45a:	e76c      	b.n	800d336 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800d45c:	2400      	movs	r4, #0
 800d45e:	e76b      	b.n	800d338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800d460:	f1bb 0f00 	cmp.w	fp, #0
 800d464:	f43f af5c 	beq.w	800d320 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800d468:	e777      	b.n	800d35a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800d46a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d46a:	b530      	push	{r4, r5, lr}
 800d46c:	8a44      	ldrh	r4, [r0, #18]
 800d46e:	8ac5      	ldrh	r5, [r0, #22]
 800d470:	82c3      	strh	r3, [r0, #22]
 800d472:	442c      	add	r4, r5
 800d474:	1ae4      	subs	r4, r4, r3
 800d476:	8244      	strh	r4, [r0, #18]
 800d478:	8b03      	ldrh	r3, [r0, #24]
 800d47a:	8a84      	ldrh	r4, [r0, #20]
 800d47c:	4422      	add	r2, r4
 800d47e:	440c      	add	r4, r1
 800d480:	1a59      	subs	r1, r3, r1
 800d482:	8342      	strh	r2, [r0, #26]
 800d484:	8284      	strh	r4, [r0, #20]
 800d486:	8301      	strh	r1, [r0, #24]
 800d488:	bd30      	pop	{r4, r5, pc}

0800d48a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800d48a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d48e:	7a43      	ldrb	r3, [r0, #9]
 800d490:	1eda      	subs	r2, r3, #3
 800d492:	b087      	sub	sp, #28
 800d494:	4604      	mov	r4, r0
 800d496:	b2d2      	uxtb	r2, r2
 800d498:	460f      	mov	r7, r1
 800d49a:	2900      	cmp	r1, #0
 800d49c:	d036      	beq.n	800d50c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800d49e:	2a01      	cmp	r2, #1
 800d4a0:	d932      	bls.n	800d508 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800d4a2:	1e58      	subs	r0, r3, #1
 800d4a4:	f1d0 0b00 	rsbs	fp, r0, #0
 800d4a8:	eb4b 0b00 	adc.w	fp, fp, r0
 800d4ac:	1e99      	subs	r1, r3, #2
 800d4ae:	424b      	negs	r3, r1
 800d4b0:	414b      	adcs	r3, r1
 800d4b2:	9303      	str	r3, [sp, #12]
 800d4b4:	2300      	movs	r3, #0
 800d4b6:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d4ba:	2500      	movs	r5, #0
 800d4bc:	8265      	strh	r5, [r4, #18]
 800d4be:	82a5      	strh	r5, [r4, #20]
 800d4c0:	46a9      	mov	r9, r5
 800d4c2:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800d4c6:	2300      	movs	r3, #0
 800d4c8:	9305      	str	r3, [sp, #20]
 800d4ca:	8823      	ldrh	r3, [r4, #0]
 800d4cc:	2b20      	cmp	r3, #32
 800d4ce:	d02b      	beq.n	800d528 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800d4d0:	eba3 020a 	sub.w	r2, r3, sl
 800d4d4:	4256      	negs	r6, r2
 800d4d6:	4156      	adcs	r6, r2
 800d4d8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d4dc:	4293      	cmp	r3, r2
 800d4de:	d004      	beq.n	800d4ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d4e0:	4553      	cmp	r3, sl
 800d4e2:	bf16      	itet	ne
 800d4e4:	4699      	movne	r9, r3
 800d4e6:	2601      	moveq	r6, #1
 800d4e8:	2600      	movne	r6, #0
 800d4ea:	ab05      	add	r3, sp, #20
 800d4ec:	68e2      	ldr	r2, [r4, #12]
 800d4ee:	7a21      	ldrb	r1, [r4, #8]
 800d4f0:	6860      	ldr	r0, [r4, #4]
 800d4f2:	f002 fe07 	bl	8010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d4f6:	8020      	strh	r0, [r4, #0]
 800d4f8:	b9c8      	cbnz	r0, 800d52e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800d4fa:	8b22      	ldrh	r2, [r4, #24]
 800d4fc:	2300      	movs	r3, #0
 800d4fe:	4611      	mov	r1, r2
 800d500:	4620      	mov	r0, r4
 800d502:	f7ff ffb2 	bl	800d46a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d506:	e066      	b.n	800d5d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d508:	468b      	mov	fp, r1
 800d50a:	e7cf      	b.n	800d4ac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800d50c:	3b01      	subs	r3, #1
 800d50e:	2a01      	cmp	r2, #1
 800d510:	bf8c      	ite	hi
 800d512:	2200      	movhi	r2, #0
 800d514:	2201      	movls	r2, #1
 800d516:	2b01      	cmp	r3, #1
 800d518:	bf8c      	ite	hi
 800d51a:	2300      	movhi	r3, #0
 800d51c:	2301      	movls	r3, #1
 800d51e:	9202      	str	r2, [sp, #8]
 800d520:	9301      	str	r3, [sp, #4]
 800d522:	9103      	str	r1, [sp, #12]
 800d524:	468b      	mov	fp, r1
 800d526:	e7c8      	b.n	800d4ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800d528:	4699      	mov	r9, r3
 800d52a:	2601      	movs	r6, #1
 800d52c:	e7dd      	b.n	800d4ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d52e:	8ae3      	ldrh	r3, [r4, #22]
 800d530:	280a      	cmp	r0, #10
 800d532:	f103 0301 	add.w	r3, r3, #1
 800d536:	82e3      	strh	r3, [r4, #22]
 800d538:	d0df      	beq.n	800d4fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800d53a:	9a05      	ldr	r2, [sp, #20]
 800d53c:	bb42      	cbnz	r2, 800d590 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800d53e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d542:	4298      	cmp	r0, r3
 800d544:	d001      	beq.n	800d54a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d546:	4550      	cmp	r0, sl
 800d548:	d1bd      	bne.n	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d54a:	8823      	ldrh	r3, [r4, #0]
 800d54c:	8b21      	ldrh	r1, [r4, #24]
 800d54e:	2b20      	cmp	r3, #32
 800d550:	d001      	beq.n	800d556 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800d552:	4553      	cmp	r3, sl
 800d554:	d131      	bne.n	800d5ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800d556:	2e00      	cmp	r6, #0
 800d558:	bf0a      	itet	eq
 800d55a:	460d      	moveq	r5, r1
 800d55c:	4630      	movne	r0, r6
 800d55e:	2001      	moveq	r0, #1
 800d560:	440a      	add	r2, r1
 800d562:	8aa3      	ldrh	r3, [r4, #20]
 800d564:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d568:	b292      	uxth	r2, r2
 800d56a:	8322      	strh	r2, [r4, #24]
 800d56c:	4413      	add	r3, r2
 800d56e:	2f00      	cmp	r7, #0
 800d570:	d03a      	beq.n	800d5e8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800d572:	f1bb 0f00 	cmp.w	fp, #0
 800d576:	d102      	bne.n	800d57e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800d578:	9903      	ldr	r1, [sp, #12]
 800d57a:	b301      	cbz	r1, 800d5be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d57c:	b1f8      	cbz	r0, 800d5be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d57e:	8ba1      	ldrh	r1, [r4, #28]
 800d580:	4419      	add	r1, r3
 800d582:	458c      	cmp	ip, r1
 800d584:	da2a      	bge.n	800d5dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d586:	8a61      	ldrh	r1, [r4, #18]
 800d588:	b341      	cbz	r1, 800d5dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d58a:	4563      	cmp	r3, ip
 800d58c:	dd9b      	ble.n	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d58e:	e01c      	b.n	800d5ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800d590:	8893      	ldrh	r3, [r2, #4]
 800d592:	8023      	strh	r3, [r4, #0]
 800d594:	f892 800d 	ldrb.w	r8, [r2, #13]
 800d598:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800d59c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800d5a0:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d5a4:	ea48 0800 	orr.w	r8, r8, r0
 800d5a8:	68e0      	ldr	r0, [r4, #12]
 800d5aa:	6803      	ldr	r3, [r0, #0]
 800d5ac:	4649      	mov	r1, r9
 800d5ae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d5b0:	4798      	blx	r3
 800d5b2:	eb08 0200 	add.w	r2, r8, r0
 800d5b6:	b292      	uxth	r2, r2
 800d5b8:	e7c7      	b.n	800d54a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d5ba:	2000      	movs	r0, #0
 800d5bc:	e7d0      	b.n	800d560 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800d5be:	4563      	cmp	r3, ip
 800d5c0:	dd81      	ble.n	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d5c2:	8a63      	ldrh	r3, [r4, #18]
 800d5c4:	2b00      	cmp	r3, #0
 800d5c6:	f43f af7e 	beq.w	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d5ca:	2301      	movs	r3, #1
 800d5cc:	77a3      	strb	r3, [r4, #30]
 800d5ce:	8ba2      	ldrh	r2, [r4, #28]
 800d5d0:	8b63      	ldrh	r3, [r4, #26]
 800d5d2:	4413      	add	r3, r2
 800d5d4:	8363      	strh	r3, [r4, #26]
 800d5d6:	b007      	add	sp, #28
 800d5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5dc:	2300      	movs	r3, #0
 800d5de:	4611      	mov	r1, r2
 800d5e0:	4620      	mov	r0, r4
 800d5e2:	f7ff ff42 	bl	800d46a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d5e6:	e76e      	b.n	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d5e8:	4563      	cmp	r3, ip
 800d5ea:	dd14      	ble.n	800d616 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800d5ec:	9b02      	ldr	r3, [sp, #8]
 800d5ee:	b113      	cbz	r3, 800d5f6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800d5f0:	2301      	movs	r3, #1
 800d5f2:	460a      	mov	r2, r1
 800d5f4:	e783      	b.n	800d4fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800d5f6:	9b01      	ldr	r3, [sp, #4]
 800d5f8:	2b00      	cmp	r3, #0
 800d5fa:	f43f af64 	beq.w	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d5fe:	2800      	cmp	r0, #0
 800d600:	f47f af61 	bne.w	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d604:	b116      	cbz	r6, 800d60c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800d606:	2301      	movs	r3, #1
 800d608:	462a      	mov	r2, r5
 800d60a:	e779      	b.n	800d500 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800d60c:	8a63      	ldrh	r3, [r4, #18]
 800d60e:	2b00      	cmp	r3, #0
 800d610:	f43f af59 	beq.w	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d614:	e7df      	b.n	800d5d6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d616:	2800      	cmp	r0, #0
 800d618:	f47f af55 	bne.w	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d61c:	2e00      	cmp	r6, #0
 800d61e:	f43f af52 	beq.w	800d4c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d622:	2301      	movs	r3, #1
 800d624:	462a      	mov	r2, r5
 800d626:	e7db      	b.n	800d5e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800d628 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d628:	b530      	push	{r4, r5, lr}
 800d62a:	4605      	mov	r5, r0
 800d62c:	b08b      	sub	sp, #44	; 0x2c
 800d62e:	b191      	cbz	r1, 800d656 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800d630:	e9cd 3100 	strd	r3, r1, [sp]
 800d634:	4613      	mov	r3, r2
 800d636:	4601      	mov	r1, r0
 800d638:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800d63c:	a802      	add	r0, sp, #8
 800d63e:	f7ff fd0d 	bl	800d05c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d642:	2401      	movs	r4, #1
 800d644:	2100      	movs	r1, #0
 800d646:	a802      	add	r0, sp, #8
 800d648:	f7ff ff1f 	bl	800d48a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d64c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d650:	b163      	cbz	r3, 800d66c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d652:	3401      	adds	r4, #1
 800d654:	e7f6      	b.n	800d644 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800d656:	f002 fe4d 	bl	80102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d65a:	2401      	movs	r4, #1
 800d65c:	280a      	cmp	r0, #10
 800d65e:	4628      	mov	r0, r5
 800d660:	bf08      	it	eq
 800d662:	3401      	addeq	r4, #1
 800d664:	f002 fe46 	bl	80102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d668:	2800      	cmp	r0, #0
 800d66a:	d1f7      	bne.n	800d65c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d66c:	b2a0      	uxth	r0, r4
 800d66e:	b00b      	add	sp, #44	; 0x2c
 800d670:	bd30      	pop	{r4, r5, pc}

0800d672 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d672:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d676:	b0db      	sub	sp, #364	; 0x16c
 800d678:	4689      	mov	r9, r1
 800d67a:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800d67e:	900a      	str	r0, [sp, #40]	; 0x28
 800d680:	461c      	mov	r4, r3
 800d682:	f1ba 0f00 	cmp.w	sl, #0
 800d686:	f000 80a5 	beq.w	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d68a:	681b      	ldr	r3, [r3, #0]
 800d68c:	2b00      	cmp	r3, #0
 800d68e:	f000 80a1 	beq.w	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d692:	7ba3      	ldrb	r3, [r4, #14]
 800d694:	2b00      	cmp	r3, #0
 800d696:	f000 809d 	beq.w	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d69a:	6810      	ldr	r0, [r2, #0]
 800d69c:	6851      	ldr	r1, [r2, #4]
 800d69e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800d6a2:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800d6a6:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800d6aa:	4643      	mov	r3, r8
 800d6ac:	c303      	stmia	r3!, {r0, r1}
 800d6ae:	2500      	movs	r5, #0
 800d6b0:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800d6b4:	79a2      	ldrb	r2, [r4, #6]
 800d6b6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d6ba:	a90e      	add	r1, sp, #56	; 0x38
 800d6bc:	4640      	mov	r0, r8
 800d6be:	950e      	str	r5, [sp, #56]	; 0x38
 800d6c0:	f7ff fd42 	bl	800d148 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d6c4:	a90e      	add	r1, sp, #56	; 0x38
 800d6c6:	4608      	mov	r0, r1
 800d6c8:	79a2      	ldrb	r2, [r4, #6]
 800d6ca:	af18      	add	r7, sp, #96	; 0x60
 800d6cc:	f7ff fd3c 	bl	800d148 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d6d0:	4638      	mov	r0, r7
 800d6d2:	f002 f9d8 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800d6d6:	6820      	ldr	r0, [r4, #0]
 800d6d8:	6803      	ldr	r3, [r0, #0]
 800d6da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d6dc:	4798      	blx	r3
 800d6de:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800d6e0:	4603      	mov	r3, r0
 800d6e2:	4651      	mov	r1, sl
 800d6e4:	4638      	mov	r0, r7
 800d6e6:	f002 fa13 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d6ea:	6820      	ldr	r0, [r4, #0]
 800d6ec:	7923      	ldrb	r3, [r4, #4]
 800d6ee:	9308      	str	r3, [sp, #32]
 800d6f0:	6803      	ldr	r3, [r0, #0]
 800d6f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d6f4:	4798      	blx	r3
 800d6f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d6fa:	181e      	adds	r6, r3, r0
 800d6fc:	42ae      	cmp	r6, r5
 800d6fe:	dd06      	ble.n	800d70e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800d700:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800d704:	4282      	cmp	r2, r0
 800d706:	bfa4      	itt	ge
 800d708:	189d      	addge	r5, r3, r2
 800d70a:	fb95 f5f6 	sdivge	r5, r5, r6
 800d70e:	a82e      	add	r0, sp, #184	; 0xb8
 800d710:	f002 f9b9 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800d714:	7c23      	ldrb	r3, [r4, #16]
 800d716:	b14b      	cbz	r3, 800d72c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800d718:	6820      	ldr	r0, [r4, #0]
 800d71a:	6803      	ldr	r3, [r0, #0]
 800d71c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d71e:	4798      	blx	r3
 800d720:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800d722:	4603      	mov	r3, r0
 800d724:	4651      	mov	r1, sl
 800d726:	a82e      	add	r0, sp, #184	; 0xb8
 800d728:	f002 f9f2 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d72c:	7c21      	ldrb	r1, [r4, #16]
 800d72e:	9101      	str	r1, [sp, #4]
 800d730:	6821      	ldr	r1, [r4, #0]
 800d732:	7963      	ldrb	r3, [r4, #5]
 800d734:	9100      	str	r1, [sp, #0]
 800d736:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800d73a:	a92e      	add	r1, sp, #184	; 0xb8
 800d73c:	a810      	add	r0, sp, #64	; 0x40
 800d73e:	f7ff fc8d 	bl	800d05c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d742:	7c23      	ldrb	r3, [r4, #16]
 800d744:	b9bb      	cbnz	r3, 800d776 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800d746:	fa1f fa86 	uxth.w	sl, r6
 800d74a:	2d00      	cmp	r5, #0
 800d74c:	dd45      	ble.n	800d7da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800d74e:	4638      	mov	r0, r7
 800d750:	f002 fdd0 	bl	80102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d754:	2800      	cmp	r0, #0
 800d756:	d03d      	beq.n	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d758:	280a      	cmp	r0, #10
 800d75a:	d1f6      	bne.n	800d74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800d75c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800d760:	4453      	add	r3, sl
 800d762:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800d766:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d76a:	eba3 030a 	sub.w	r3, r3, sl
 800d76e:	3d01      	subs	r5, #1
 800d770:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d774:	e7e9      	b.n	800d74a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800d776:	0073      	lsls	r3, r6, #1
 800d778:	9309      	str	r3, [sp, #36]	; 0x24
 800d77a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800d77e:	fa1f fa86 	uxth.w	sl, r6
 800d782:	2d00      	cmp	r5, #0
 800d784:	dd29      	ble.n	800d7da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800d786:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800d78a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d78c:	428b      	cmp	r3, r1
 800d78e:	bfd4      	ite	le
 800d790:	2100      	movle	r1, #0
 800d792:	2101      	movgt	r1, #1
 800d794:	a810      	add	r0, sp, #64	; 0x40
 800d796:	f7ff fe78 	bl	800d48a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d79a:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800d79e:	3b01      	subs	r3, #1
 800d7a0:	b29b      	uxth	r3, r3
 800d7a2:	455b      	cmp	r3, fp
 800d7a4:	930b      	str	r3, [sp, #44]	; 0x2c
 800d7a6:	d005      	beq.n	800d7b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800d7a8:	7961      	ldrb	r1, [r4, #5]
 800d7aa:	4638      	mov	r0, r7
 800d7ac:	f7f5 fdba 	bl	8003324 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d7b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d7b2:	e7f4      	b.n	800d79e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800d7b4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800d7b8:	4453      	add	r3, sl
 800d7ba:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800d7be:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d7c2:	eba3 030a 	sub.w	r3, r3, sl
 800d7c6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d7ca:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d7ce:	3d01      	subs	r5, #1
 800d7d0:	2b00      	cmp	r3, #0
 800d7d2:	d1d6      	bne.n	800d782 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800d7d4:	b05b      	add	sp, #364	; 0x16c
 800d7d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7da:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800d7de:	ad44      	add	r5, sp, #272	; 0x110
 800d7e0:	f04f 0b00 	mov.w	fp, #0
 800d7e4:	7c23      	ldrb	r3, [r4, #16]
 800d7e6:	2b00      	cmp	r3, #0
 800d7e8:	d067      	beq.n	800d8ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800d7ea:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800d7ee:	458a      	cmp	sl, r1
 800d7f0:	bfd4      	ite	le
 800d7f2:	2100      	movle	r1, #0
 800d7f4:	2101      	movgt	r1, #1
 800d7f6:	a810      	add	r0, sp, #64	; 0x40
 800d7f8:	f7ff fe47 	bl	800d48a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d7fc:	9b08      	ldr	r3, [sp, #32]
 800d7fe:	2b00      	cmp	r3, #0
 800d800:	d056      	beq.n	800d8b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800d802:	7c23      	ldrb	r3, [r4, #16]
 800d804:	9309      	str	r3, [sp, #36]	; 0x24
 800d806:	2258      	movs	r2, #88	; 0x58
 800d808:	4639      	mov	r1, r7
 800d80a:	4628      	mov	r0, r5
 800d80c:	f010 fc6a 	bl	801e0e4 <memcpy>
 800d810:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d812:	2b00      	cmp	r3, #0
 800d814:	d059      	beq.n	800d8ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800d816:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800d81a:	7922      	ldrb	r2, [r4, #4]
 800d81c:	2a01      	cmp	r2, #1
 800d81e:	d13d      	bne.n	800d89c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800d820:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800d824:	1ac0      	subs	r0, r0, r3
 800d826:	2302      	movs	r3, #2
 800d828:	fb90 f0f3 	sdiv	r0, r0, r3
 800d82c:	b200      	sxth	r0, r0
 800d82e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d832:	4418      	add	r0, r3
 800d834:	7c23      	ldrb	r3, [r4, #16]
 800d836:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800d83a:	2b00      	cmp	r3, #0
 800d83c:	d03a      	beq.n	800d8b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800d83e:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800d842:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800d846:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800d84a:	9500      	str	r5, [sp, #0]
 800d84c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d850:	e9cd b703 	strd	fp, r7, [sp, #12]
 800d854:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800d858:	464a      	mov	r2, r9
 800d85a:	2100      	movs	r1, #0
 800d85c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d85e:	f7ff fca4 	bl	800d1aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d862:	2800      	cmp	r0, #0
 800d864:	d1b6      	bne.n	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d866:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800d86a:	b2b2      	uxth	r2, r6
 800d86c:	4611      	mov	r1, r2
 800d86e:	4413      	add	r3, r2
 800d870:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800d874:	1a52      	subs	r2, r2, r1
 800d876:	7c21      	ldrb	r1, [r4, #16]
 800d878:	b21b      	sxth	r3, r3
 800d87a:	b212      	sxth	r2, r2
 800d87c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800d880:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800d884:	b109      	cbz	r1, 800d88a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800d886:	42b2      	cmp	r2, r6
 800d888:	dba4      	blt.n	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d88a:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800d88e:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800d892:	440a      	add	r2, r1
 800d894:	b212      	sxth	r2, r2
 800d896:	4293      	cmp	r3, r2
 800d898:	dda4      	ble.n	800d7e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800d89a:	e79b      	b.n	800d7d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800d89c:	2a02      	cmp	r2, #2
 800d89e:	d105      	bne.n	800d8ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800d8a0:	7be2      	ldrb	r2, [r4, #15]
 800d8a2:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800d8a6:	1a80      	subs	r0, r0, r2
 800d8a8:	1ac0      	subs	r0, r0, r3
 800d8aa:	e7bf      	b.n	800d82c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800d8ac:	2000      	movs	r0, #0
 800d8ae:	e7be      	b.n	800d82e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800d8b0:	7be0      	ldrb	r0, [r4, #15]
 800d8b2:	e7bc      	b.n	800d82e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800d8b4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d8b8:	e7c3      	b.n	800d842 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800d8ba:	9b08      	ldr	r3, [sp, #32]
 800d8bc:	2b00      	cmp	r3, #0
 800d8be:	d0f7      	beq.n	800d8b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800d8c0:	2258      	movs	r2, #88	; 0x58
 800d8c2:	4639      	mov	r1, r7
 800d8c4:	4628      	mov	r0, r5
 800d8c6:	f010 fc0d 	bl	801e0e4 <memcpy>
 800d8ca:	2300      	movs	r3, #0
 800d8cc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d8d0:	6821      	ldr	r1, [r4, #0]
 800d8d2:	4628      	mov	r0, r5
 800d8d4:	f7ff fbfc 	bl	800d0d0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d8d8:	b203      	sxth	r3, r0
 800d8da:	e79e      	b.n	800d81a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800d8dc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d8dc:	b510      	push	{r4, lr}
 800d8de:	2b02      	cmp	r3, #2
 800d8e0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d8e4:	d00b      	beq.n	800d8fe <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d8e6:	2b03      	cmp	r3, #3
 800d8e8:	d00e      	beq.n	800d908 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d8ea:	2b01      	cmp	r3, #1
 800d8ec:	d001      	beq.n	800d8f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d8ee:	1860      	adds	r0, r4, r1
 800d8f0:	bd10      	pop	{r4, pc}
 800d8f2:	8880      	ldrh	r0, [r0, #4]
 800d8f4:	4420      	add	r0, r4
 800d8f6:	b200      	sxth	r0, r0
 800d8f8:	1a80      	subs	r0, r0, r2
 800d8fa:	3801      	subs	r0, #1
 800d8fc:	e7f8      	b.n	800d8f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d8fe:	8880      	ldrh	r0, [r0, #4]
 800d900:	4420      	add	r0, r4
 800d902:	b200      	sxth	r0, r0
 800d904:	1a40      	subs	r0, r0, r1
 800d906:	e7f8      	b.n	800d8fa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d908:	18a0      	adds	r0, r4, r2
 800d90a:	e7f1      	b.n	800d8f0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d90c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d90c:	b510      	push	{r4, lr}
 800d90e:	2b02      	cmp	r3, #2
 800d910:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d914:	d006      	beq.n	800d924 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d916:	2b03      	cmp	r3, #3
 800d918:	d00a      	beq.n	800d930 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d91a:	2b01      	cmp	r3, #1
 800d91c:	bf14      	ite	ne
 800d91e:	18a0      	addne	r0, r4, r2
 800d920:	1860      	addeq	r0, r4, r1
 800d922:	bd10      	pop	{r4, pc}
 800d924:	88c0      	ldrh	r0, [r0, #6]
 800d926:	4420      	add	r0, r4
 800d928:	b200      	sxth	r0, r0
 800d92a:	1a80      	subs	r0, r0, r2
 800d92c:	3801      	subs	r0, #1
 800d92e:	e7f8      	b.n	800d922 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d930:	88c0      	ldrh	r0, [r0, #6]
 800d932:	4420      	add	r0, r4
 800d934:	b200      	sxth	r0, r0
 800d936:	1a40      	subs	r0, r0, r1
 800d938:	e7f8      	b.n	800d92c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800d93c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d93c:	4b01      	ldr	r3, [pc, #4]	; (800d944 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d93e:	2200      	movs	r2, #0
 800d940:	601a      	str	r2, [r3, #0]
 800d942:	4770      	bx	lr
 800d944:	2000d380 	.word	0x2000d380

0800d948 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800d948:	4603      	mov	r3, r0
 800d94a:	b1c8      	cbz	r0, 800d980 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800d94c:	0c02      	lsrs	r2, r0, #16
 800d94e:	0412      	lsls	r2, r2, #16
 800d950:	b9a2      	cbnz	r2, 800d97c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800d952:	0403      	lsls	r3, r0, #16
 800d954:	2010      	movs	r0, #16
 800d956:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800d95a:	bf04      	itt	eq
 800d95c:	021b      	lsleq	r3, r3, #8
 800d95e:	3008      	addeq	r0, #8
 800d960:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800d964:	bf04      	itt	eq
 800d966:	011b      	lsleq	r3, r3, #4
 800d968:	3004      	addeq	r0, #4
 800d96a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800d96e:	bf04      	itt	eq
 800d970:	009b      	lsleq	r3, r3, #2
 800d972:	3002      	addeq	r0, #2
 800d974:	2b00      	cmp	r3, #0
 800d976:	db04      	blt.n	800d982 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800d978:	3001      	adds	r0, #1
 800d97a:	4770      	bx	lr
 800d97c:	2000      	movs	r0, #0
 800d97e:	e7ea      	b.n	800d956 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800d980:	2020      	movs	r0, #32
 800d982:	4770      	bx	lr

0800d984 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800d984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d988:	b087      	sub	sp, #28
 800d98a:	4681      	mov	r9, r0
 800d98c:	4698      	mov	r8, r3
 800d98e:	4610      	mov	r0, r2
 800d990:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800d994:	460d      	mov	r5, r1
 800d996:	b981      	cbnz	r1, 800d9ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800d998:	b14b      	cbz	r3, 800d9ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800d99a:	460b      	mov	r3, r1
 800d99c:	e9cd 4700 	strd	r4, r7, [sp]
 800d9a0:	464a      	mov	r2, r9
 800d9a2:	4641      	mov	r1, r8
 800d9a4:	f7ff ffee 	bl	800d984 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d9a8:	b007      	add	sp, #28
 800d9aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9ae:	f04f 33ff 	mov.w	r3, #4294967295
 800d9b2:	603b      	str	r3, [r7, #0]
 800d9b4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800d9b8:	e7f6      	b.n	800d9a8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800d9ba:	fa32 fa01 	lsrs.w	sl, r2, r1
 800d9be:	d107      	bne.n	800d9d0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800d9c0:	fb09 f602 	mul.w	r6, r9, r2
 800d9c4:	fbb6 f0f4 	udiv	r0, r6, r4
 800d9c8:	fb04 6610 	mls	r6, r4, r0, r6
 800d9cc:	603e      	str	r6, [r7, #0]
 800d9ce:	e7eb      	b.n	800d9a8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800d9d0:	2601      	movs	r6, #1
 800d9d2:	408e      	lsls	r6, r1
 800d9d4:	3e01      	subs	r6, #1
 800d9d6:	4016      	ands	r6, r2
 800d9d8:	fa09 fb01 	lsl.w	fp, r9, r1
 800d9dc:	4630      	mov	r0, r6
 800d9de:	fbbb f3f4 	udiv	r3, fp, r4
 800d9e2:	9302      	str	r3, [sp, #8]
 800d9e4:	fb0a f303 	mul.w	r3, sl, r3
 800d9e8:	9303      	str	r3, [sp, #12]
 800d9ea:	f7ff ffad 	bl	800d948 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800d9ee:	464a      	mov	r2, r9
 800d9f0:	460b      	mov	r3, r1
 800d9f2:	e9cd 4700 	strd	r4, r7, [sp]
 800d9f6:	4601      	mov	r1, r0
 800d9f8:	4630      	mov	r0, r6
 800d9fa:	f7ff ffc3 	bl	800d984 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800d9fe:	9b02      	ldr	r3, [sp, #8]
 800da00:	fb04 bb13 	mls	fp, r4, r3, fp
 800da04:	4606      	mov	r6, r0
 800da06:	4658      	mov	r0, fp
 800da08:	eb05 0108 	add.w	r1, r5, r8
 800da0c:	f7ff ff9c 	bl	800d948 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800da10:	ab05      	add	r3, sp, #20
 800da12:	e9cd 4300 	strd	r4, r3, [sp]
 800da16:	465a      	mov	r2, fp
 800da18:	4603      	mov	r3, r0
 800da1a:	4650      	mov	r0, sl
 800da1c:	f7ff ffb2 	bl	800d984 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da20:	6839      	ldr	r1, [r7, #0]
 800da22:	9a05      	ldr	r2, [sp, #20]
 800da24:	9b03      	ldr	r3, [sp, #12]
 800da26:	4411      	add	r1, r2
 800da28:	fbb1 f2f4 	udiv	r2, r1, r4
 800da2c:	18d3      	adds	r3, r2, r3
 800da2e:	441e      	add	r6, r3
 800da30:	fb04 1412 	mls	r4, r4, r2, r1
 800da34:	4430      	add	r0, r6
 800da36:	603c      	str	r4, [r7, #0]
 800da38:	e7b6      	b.n	800d9a8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800da3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800da3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800da3e:	b085      	sub	sp, #20
 800da40:	f1b0 0900 	subs.w	r9, r0, #0
 800da44:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800da46:	461d      	mov	r5, r3
 800da48:	bfbf      	itttt	lt
 800da4a:	6823      	ldrlt	r3, [r4, #0]
 800da4c:	425b      	neglt	r3, r3
 800da4e:	f1c9 0900 	rsblt	r9, r9, #0
 800da52:	6023      	strlt	r3, [r4, #0]
 800da54:	bfb4      	ite	lt
 800da56:	f04f 36ff 	movlt.w	r6, #4294967295
 800da5a:	2601      	movge	r6, #1
 800da5c:	2a00      	cmp	r2, #0
 800da5e:	4617      	mov	r7, r2
 800da60:	da04      	bge.n	800da6c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800da62:	6823      	ldr	r3, [r4, #0]
 800da64:	425b      	negs	r3, r3
 800da66:	4257      	negs	r7, r2
 800da68:	4276      	negs	r6, r6
 800da6a:	6023      	str	r3, [r4, #0]
 800da6c:	2d00      	cmp	r5, #0
 800da6e:	4638      	mov	r0, r7
 800da70:	bfba      	itte	lt
 800da72:	426d      	neglt	r5, r5
 800da74:	f04f 38ff 	movlt.w	r8, #4294967295
 800da78:	f04f 0801 	movge.w	r8, #1
 800da7c:	f7ff ff64 	bl	800d948 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800da80:	ab03      	add	r3, sp, #12
 800da82:	e9cd 5300 	strd	r5, r3, [sp]
 800da86:	463a      	mov	r2, r7
 800da88:	4603      	mov	r3, r0
 800da8a:	4648      	mov	r0, r9
 800da8c:	f7ff ff7a 	bl	800d984 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da90:	6823      	ldr	r3, [r4, #0]
 800da92:	9a03      	ldr	r2, [sp, #12]
 800da94:	4546      	cmp	r6, r8
 800da96:	441a      	add	r2, r3
 800da98:	fb92 f3f5 	sdiv	r3, r2, r5
 800da9c:	4418      	add	r0, r3
 800da9e:	bf18      	it	ne
 800daa0:	4240      	negne	r0, r0
 800daa2:	fb05 2313 	mls	r3, r5, r3, r2
 800daa6:	1c72      	adds	r2, r6, #1
 800daa8:	6023      	str	r3, [r4, #0]
 800daaa:	d105      	bne.n	800dab8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800daac:	2b00      	cmp	r3, #0
 800daae:	f1c3 0200 	rsb	r2, r3, #0
 800dab2:	db0b      	blt.n	800dacc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800dab4:	6022      	str	r2, [r4, #0]
 800dab6:	e006      	b.n	800dac6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dab8:	2e01      	cmp	r6, #1
 800daba:	d104      	bne.n	800dac6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dabc:	2b00      	cmp	r3, #0
 800dabe:	da02      	bge.n	800dac6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800dac0:	442b      	add	r3, r5
 800dac2:	3801      	subs	r0, #1
 800dac4:	6023      	str	r3, [r4, #0]
 800dac6:	b005      	add	sp, #20
 800dac8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dacc:	3801      	subs	r0, #1
 800dace:	1b52      	subs	r2, r2, r5
 800dad0:	e7f0      	b.n	800dab4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800dad4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800dad4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800dad8:	4c1c      	ldr	r4, [pc, #112]	; (800db4c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800dada:	6807      	ldr	r7, [r0, #0]
 800dadc:	69a3      	ldr	r3, [r4, #24]
 800dade:	4605      	mov	r5, r0
 800dae0:	b92b      	cbnz	r3, 800daee <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800dae2:	6840      	ldr	r0, [r0, #4]
 800dae4:	e9c5 7000 	strd	r7, r0, [r5]
 800dae8:	b004      	add	sp, #16
 800daea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800daee:	68a2      	ldr	r2, [r4, #8]
 800daf0:	6820      	ldr	r0, [r4, #0]
 800daf2:	ae04      	add	r6, sp, #16
 800daf4:	f04f 0802 	mov.w	r8, #2
 800daf8:	fb93 f1f8 	sdiv	r1, r3, r8
 800dafc:	440a      	add	r2, r1
 800dafe:	f846 2d04 	str.w	r2, [r6, #-4]!
 800db02:	69e1      	ldr	r1, [r4, #28]
 800db04:	9600      	str	r6, [sp, #0]
 800db06:	463a      	mov	r2, r7
 800db08:	f7ff ff97 	bl	800da3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db0c:	69a3      	ldr	r3, [r4, #24]
 800db0e:	686a      	ldr	r2, [r5, #4]
 800db10:	6a21      	ldr	r1, [r4, #32]
 800db12:	9600      	str	r6, [sp, #0]
 800db14:	4607      	mov	r7, r0
 800db16:	6860      	ldr	r0, [r4, #4]
 800db18:	f7ff ff8f 	bl	800da3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db1c:	6962      	ldr	r2, [r4, #20]
 800db1e:	69a3      	ldr	r3, [r4, #24]
 800db20:	fb93 f8f8 	sdiv	r8, r3, r8
 800db24:	4442      	add	r2, r8
 800db26:	9203      	str	r2, [sp, #12]
 800db28:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800db2a:	682a      	ldr	r2, [r5, #0]
 800db2c:	9600      	str	r6, [sp, #0]
 800db2e:	4407      	add	r7, r0
 800db30:	68e0      	ldr	r0, [r4, #12]
 800db32:	f7ff ff82 	bl	800da3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db36:	9600      	str	r6, [sp, #0]
 800db38:	4680      	mov	r8, r0
 800db3a:	69a3      	ldr	r3, [r4, #24]
 800db3c:	686a      	ldr	r2, [r5, #4]
 800db3e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800db40:	6920      	ldr	r0, [r4, #16]
 800db42:	f7ff ff7a 	bl	800da3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800db46:	4440      	add	r0, r8
 800db48:	e7cc      	b.n	800dae4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800db4a:	bf00      	nop
 800db4c:	2000d384 	.word	0x2000d384

0800db50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800db50:	b510      	push	{r4, lr}
 800db52:	4b07      	ldr	r3, [pc, #28]	; (800db70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800db54:	781b      	ldrb	r3, [r3, #0]
 800db56:	2b01      	cmp	r3, #1
 800db58:	d108      	bne.n	800db6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800db5a:	4b06      	ldr	r3, [pc, #24]	; (800db74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800db5c:	880c      	ldrh	r4, [r1, #0]
 800db5e:	881b      	ldrh	r3, [r3, #0]
 800db60:	f9b0 2000 	ldrsh.w	r2, [r0]
 800db64:	3b01      	subs	r3, #1
 800db66:	1b1b      	subs	r3, r3, r4
 800db68:	8003      	strh	r3, [r0, #0]
 800db6a:	800a      	strh	r2, [r1, #0]
 800db6c:	bd10      	pop	{r4, pc}
 800db6e:	bf00      	nop
 800db70:	2000d350 	.word	0x2000d350
 800db74:	2000d354 	.word	0x2000d354

0800db78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800db78:	b510      	push	{r4, lr}
 800db7a:	4b0a      	ldr	r3, [pc, #40]	; (800dba4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800db7c:	781b      	ldrb	r3, [r3, #0]
 800db7e:	2b01      	cmp	r3, #1
 800db80:	d10e      	bne.n	800dba0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800db82:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800db86:	8843      	ldrh	r3, [r0, #2]
 800db88:	f9b0 4000 	ldrsh.w	r4, [r0]
 800db8c:	8044      	strh	r4, [r0, #2]
 800db8e:	18ca      	adds	r2, r1, r3
 800db90:	4b05      	ldr	r3, [pc, #20]	; (800dba8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800db92:	881b      	ldrh	r3, [r3, #0]
 800db94:	1a9b      	subs	r3, r3, r2
 800db96:	8003      	strh	r3, [r0, #0]
 800db98:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800db9c:	80c3      	strh	r3, [r0, #6]
 800db9e:	8081      	strh	r1, [r0, #4]
 800dba0:	bd10      	pop	{r4, pc}
 800dba2:	bf00      	nop
 800dba4:	2000d350 	.word	0x2000d350
 800dba8:	2000d34c 	.word	0x2000d34c

0800dbac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800dbac:	b510      	push	{r4, lr}
 800dbae:	4b07      	ldr	r3, [pc, #28]	; (800dbcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800dbb0:	781b      	ldrb	r3, [r3, #0]
 800dbb2:	2b01      	cmp	r3, #1
 800dbb4:	d108      	bne.n	800dbc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800dbb6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dbba:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dbbe:	8003      	strh	r3, [r0, #0]
 800dbc0:	8893      	ldrh	r3, [r2, #4]
 800dbc2:	3b01      	subs	r3, #1
 800dbc4:	1b1b      	subs	r3, r3, r4
 800dbc6:	800b      	strh	r3, [r1, #0]
 800dbc8:	bd10      	pop	{r4, pc}
 800dbca:	bf00      	nop
 800dbcc:	2000d350 	.word	0x2000d350

0800dbd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800dbd0:	b513      	push	{r0, r1, r4, lr}
 800dbd2:	4b08      	ldr	r3, [pc, #32]	; (800dbf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800dbd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbd8:	4b07      	ldr	r3, [pc, #28]	; (800dbf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800dbda:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dbde:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dbe2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dbe6:	2400      	movs	r4, #0
 800dbe8:	466a      	mov	r2, sp
 800dbea:	9400      	str	r4, [sp, #0]
 800dbec:	f7ff ffde 	bl	800dbac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dbf0:	b002      	add	sp, #8
 800dbf2:	bd10      	pop	{r4, pc}
 800dbf4:	2000d34c 	.word	0x2000d34c
 800dbf8:	2000d34e 	.word	0x2000d34e

0800dbfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800dbfc:	4b0b      	ldr	r3, [pc, #44]	; (800dc2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800dbfe:	781b      	ldrb	r3, [r3, #0]
 800dc00:	2b01      	cmp	r3, #1
 800dc02:	d111      	bne.n	800dc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800dc04:	680b      	ldr	r3, [r1, #0]
 800dc06:	ed90 7a00 	vldr	s14, [r0]
 800dc0a:	6003      	str	r3, [r0, #0]
 800dc0c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800dc10:	eddf 6a07 	vldr	s13, [pc, #28]	; 800dc30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800dc14:	ee07 3a90 	vmov	s15, r3
 800dc18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dc1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dc20:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800dc24:	edc1 7a00 	vstr	s15, [r1]
 800dc28:	4770      	bx	lr
 800dc2a:	bf00      	nop
 800dc2c:	2000d350 	.word	0x2000d350
 800dc30:	38d1b717 	.word	0x38d1b717

0800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dc34:	b510      	push	{r4, lr}
 800dc36:	4b0a      	ldr	r3, [pc, #40]	; (800dc60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dc38:	781b      	ldrb	r3, [r3, #0]
 800dc3a:	2b01      	cmp	r3, #1
 800dc3c:	460a      	mov	r2, r1
 800dc3e:	d10d      	bne.n	800dc5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dc40:	8881      	ldrh	r1, [r0, #4]
 800dc42:	8803      	ldrh	r3, [r0, #0]
 800dc44:	440b      	add	r3, r1
 800dc46:	4601      	mov	r1, r0
 800dc48:	3b01      	subs	r3, #1
 800dc4a:	f821 3b02 	strh.w	r3, [r1], #2
 800dc4e:	f7ff ffad 	bl	800dbac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dc52:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dc56:	88c2      	ldrh	r2, [r0, #6]
 800dc58:	8082      	strh	r2, [r0, #4]
 800dc5a:	80c3      	strh	r3, [r0, #6]
 800dc5c:	bd10      	pop	{r4, pc}
 800dc5e:	bf00      	nop
 800dc60:	2000d350 	.word	0x2000d350

0800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dc64:	b507      	push	{r0, r1, r2, lr}
 800dc66:	4b09      	ldr	r3, [pc, #36]	; (800dc8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dc68:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc6c:	4b08      	ldr	r3, [pc, #32]	; (800dc90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800dc6e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dc72:	2100      	movs	r1, #0
 800dc74:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc78:	9100      	str	r1, [sp, #0]
 800dc7a:	4669      	mov	r1, sp
 800dc7c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dc80:	f7ff ffd8 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800dc84:	b003      	add	sp, #12
 800dc86:	f85d fb04 	ldr.w	pc, [sp], #4
 800dc8a:	bf00      	nop
 800dc8c:	2000d34c 	.word	0x2000d34c
 800dc90:	2000d34e 	.word	0x2000d34e

0800dc94 <_ZN8touchgfx11Application13requestRedrawEv>:
 800dc94:	4b06      	ldr	r3, [pc, #24]	; (800dcb0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800dc96:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dc9a:	4b06      	ldr	r3, [pc, #24]	; (800dcb4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800dc9c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800dca0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dca4:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800dca8:	2100      	movs	r1, #0
 800dcaa:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800dcae:	4770      	bx	lr
 800dcb0:	2000d34c 	.word	0x2000d34c
 800dcb4:	2000d34e 	.word	0x2000d34e

0800dcb8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800dcb8:	4b03      	ldr	r3, [pc, #12]	; (800dcc8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800dcba:	6818      	ldr	r0, [r3, #0]
 800dcbc:	b110      	cbz	r0, 800dcc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800dcbe:	6803      	ldr	r3, [r0, #0]
 800dcc0:	699b      	ldr	r3, [r3, #24]
 800dcc2:	4718      	bx	r3
 800dcc4:	4770      	bx	lr
 800dcc6:	bf00      	nop
 800dcc8:	2000d3b4 	.word	0x2000d3b4

0800dccc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800dccc:	4770      	bx	lr
	...

0800dcd0 <_ZN8touchgfx11Application4drawEv>:
 800dcd0:	b507      	push	{r0, r1, r2, lr}
 800dcd2:	4b09      	ldr	r3, [pc, #36]	; (800dcf8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800dcd4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dcd8:	4b08      	ldr	r3, [pc, #32]	; (800dcfc <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dcda:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dcde:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dce2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dce6:	6803      	ldr	r3, [r0, #0]
 800dce8:	2100      	movs	r1, #0
 800dcea:	9100      	str	r1, [sp, #0]
 800dcec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800dcee:	4669      	mov	r1, sp
 800dcf0:	4798      	blx	r3
 800dcf2:	b003      	add	sp, #12
 800dcf4:	f85d fb04 	ldr.w	pc, [sp], #4
 800dcf8:	2000d34c 	.word	0x2000d34c
 800dcfc:	2000d34e 	.word	0x2000d34e

0800dd00 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800dd00:	4b03      	ldr	r3, [pc, #12]	; (800dd10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800dd02:	6818      	ldr	r0, [r3, #0]
 800dd04:	b110      	cbz	r0, 800dd0c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800dd06:	6803      	ldr	r3, [r0, #0]
 800dd08:	69db      	ldr	r3, [r3, #28]
 800dd0a:	4718      	bx	r3
 800dd0c:	4770      	bx	lr
 800dd0e:	bf00      	nop
 800dd10:	2000d3b4 	.word	0x2000d3b4

0800dd14 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800dd14:	4b03      	ldr	r3, [pc, #12]	; (800dd24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800dd16:	6818      	ldr	r0, [r3, #0]
 800dd18:	b110      	cbz	r0, 800dd20 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800dd1a:	6803      	ldr	r3, [r0, #0]
 800dd1c:	6a1b      	ldr	r3, [r3, #32]
 800dd1e:	4718      	bx	r3
 800dd20:	4770      	bx	lr
 800dd22:	bf00      	nop
 800dd24:	2000d3b4 	.word	0x2000d3b4

0800dd28 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800dd28:	4b03      	ldr	r3, [pc, #12]	; (800dd38 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800dd2a:	6818      	ldr	r0, [r3, #0]
 800dd2c:	b110      	cbz	r0, 800dd34 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800dd2e:	6803      	ldr	r3, [r0, #0]
 800dd30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dd32:	4718      	bx	r3
 800dd34:	4770      	bx	lr
 800dd36:	bf00      	nop
 800dd38:	2000d3b4 	.word	0x2000d3b4

0800dd3c <_ZN8touchgfx11Application15handleTickEventEv>:
 800dd3c:	b570      	push	{r4, r5, r6, lr}
 800dd3e:	4d34      	ldr	r5, [pc, #208]	; (800de10 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800dd40:	4604      	mov	r4, r0
 800dd42:	6828      	ldr	r0, [r5, #0]
 800dd44:	b140      	cbz	r0, 800dd58 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dd46:	7a03      	ldrb	r3, [r0, #8]
 800dd48:	b933      	cbnz	r3, 800dd58 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800dd4a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800dd4e:	6803      	ldr	r3, [r0, #0]
 800dd50:	689b      	ldr	r3, [r3, #8]
 800dd52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd56:	4718      	bx	r3
 800dd58:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800dd5c:	b97b      	cbnz	r3, 800dd7e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dd5e:	b170      	cbz	r0, 800dd7e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dd60:	7a03      	ldrb	r3, [r0, #8]
 800dd62:	b163      	cbz	r3, 800dd7e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800dd64:	4b2b      	ldr	r3, [pc, #172]	; (800de14 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800dd66:	6818      	ldr	r0, [r3, #0]
 800dd68:	b110      	cbz	r0, 800dd70 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800dd6a:	6803      	ldr	r3, [r0, #0]
 800dd6c:	691b      	ldr	r3, [r3, #16]
 800dd6e:	4798      	blx	r3
 800dd70:	6828      	ldr	r0, [r5, #0]
 800dd72:	6803      	ldr	r3, [r0, #0]
 800dd74:	68db      	ldr	r3, [r3, #12]
 800dd76:	4798      	blx	r3
 800dd78:	2301      	movs	r3, #1
 800dd7a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800dd7e:	2500      	movs	r5, #0
 800dd80:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800dd84:	42a8      	cmp	r0, r5
 800dd86:	dd0c      	ble.n	800dda2 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800dd88:	1963      	adds	r3, r4, r5
 800dd8a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800dd8e:	b132      	cbz	r2, 800dd9e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800dd90:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800dd94:	4413      	add	r3, r2
 800dd96:	6858      	ldr	r0, [r3, #4]
 800dd98:	6803      	ldr	r3, [r0, #0]
 800dd9a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dd9c:	4798      	blx	r3
 800dd9e:	3501      	adds	r5, #1
 800dda0:	e7ee      	b.n	800dd80 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800dda2:	2300      	movs	r3, #0
 800dda4:	461a      	mov	r2, r3
 800dda6:	4298      	cmp	r0, r3
 800dda8:	d114      	bne.n	800ddd4 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800ddaa:	1d25      	adds	r5, r4, #4
 800ddac:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ddb0:	1e48      	subs	r0, r1, #1
 800ddb2:	b280      	uxth	r0, r0
 800ddb4:	4291      	cmp	r1, r2
 800ddb6:	dd24      	ble.n	800de02 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800ddb8:	4288      	cmp	r0, r1
 800ddba:	d2fb      	bcs.n	800ddb4 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800ddbc:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800ddc0:	3304      	adds	r3, #4
 800ddc2:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ddc6:	428b      	cmp	r3, r1
 800ddc8:	d018      	beq.n	800ddfc <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800ddca:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800ddce:	f843 6c04 	str.w	r6, [r3, #-4]
 800ddd2:	e7f8      	b.n	800ddc6 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800ddd4:	18e1      	adds	r1, r4, r3
 800ddd6:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800ddda:	b16d      	cbz	r5, 800ddf8 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800dddc:	429a      	cmp	r2, r3
 800ddde:	d00a      	beq.n	800ddf6 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800dde0:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800dde4:	4431      	add	r1, r6
 800dde6:	684e      	ldr	r6, [r1, #4]
 800dde8:	b291      	uxth	r1, r2
 800ddea:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800ddee:	604e      	str	r6, [r1, #4]
 800ddf0:	18a1      	adds	r1, r4, r2
 800ddf2:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800ddf6:	3201      	adds	r2, #1
 800ddf8:	3301      	adds	r3, #1
 800ddfa:	e7d4      	b.n	800dda6 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800ddfc:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800de00:	e7d4      	b.n	800ddac <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800de02:	4b04      	ldr	r3, [pc, #16]	; (800de14 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800de04:	6818      	ldr	r0, [r3, #0]
 800de06:	b110      	cbz	r0, 800de0e <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800de08:	6803      	ldr	r3, [r0, #0]
 800de0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de0c:	e7a1      	b.n	800dd52 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800de0e:	bd70      	pop	{r4, r5, r6, pc}
 800de10:	2000d3b8 	.word	0x2000d3b8
 800de14:	2000d3b4 	.word	0x2000d3b4

0800de18 <_ZN8touchgfx11ApplicationD1Ev>:
 800de18:	4770      	bx	lr

0800de1a <_ZN8touchgfx11ApplicationD0Ev>:
 800de1a:	b510      	push	{r4, lr}
 800de1c:	f44f 719c 	mov.w	r1, #312	; 0x138
 800de20:	4604      	mov	r4, r0
 800de22:	f010 f8b2 	bl	801df8a <_ZdlPvj>
 800de26:	4620      	mov	r0, r4
 800de28:	bd10      	pop	{r4, pc}
	...

0800de2c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800de2c:	b570      	push	{r4, r5, r6, lr}
 800de2e:	4606      	mov	r6, r0
 800de30:	460c      	mov	r4, r1
 800de32:	b929      	cbnz	r1, 800de40 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800de34:	4b0c      	ldr	r3, [pc, #48]	; (800de68 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800de36:	4a0d      	ldr	r2, [pc, #52]	; (800de6c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800de38:	480d      	ldr	r0, [pc, #52]	; (800de70 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800de3a:	2164      	movs	r1, #100	; 0x64
 800de3c:	f010 f8d4 	bl	801dfe8 <__assert_func>
 800de40:	4d0c      	ldr	r5, [pc, #48]	; (800de74 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800de42:	2300      	movs	r3, #0
 800de44:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800de48:	6828      	ldr	r0, [r5, #0]
 800de4a:	b110      	cbz	r0, 800de52 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800de4c:	6803      	ldr	r3, [r0, #0]
 800de4e:	695b      	ldr	r3, [r3, #20]
 800de50:	4798      	blx	r3
 800de52:	602c      	str	r4, [r5, #0]
 800de54:	6823      	ldr	r3, [r4, #0]
 800de56:	4620      	mov	r0, r4
 800de58:	68db      	ldr	r3, [r3, #12]
 800de5a:	4798      	blx	r3
 800de5c:	6833      	ldr	r3, [r6, #0]
 800de5e:	4630      	mov	r0, r6
 800de60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de66:	4718      	bx	r3
 800de68:	080217b5 	.word	0x080217b5
 800de6c:	080218b0 	.word	0x080218b0
 800de70:	080217bf 	.word	0x080217bf
 800de74:	2000d3b4 	.word	0x2000d3b4

0800de78 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800de78:	b510      	push	{r4, lr}
 800de7a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800de7e:	888a      	ldrh	r2, [r1, #4]
 800de80:	f9b0 3000 	ldrsh.w	r3, [r0]
 800de84:	4422      	add	r2, r4
 800de86:	b212      	sxth	r2, r2
 800de88:	4293      	cmp	r3, r2
 800de8a:	da15      	bge.n	800deb8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de8c:	8882      	ldrh	r2, [r0, #4]
 800de8e:	4413      	add	r3, r2
 800de90:	b21b      	sxth	r3, r3
 800de92:	429c      	cmp	r4, r3
 800de94:	da10      	bge.n	800deb8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800de96:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800de9a:	88c9      	ldrh	r1, [r1, #6]
 800de9c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800dea0:	4419      	add	r1, r3
 800dea2:	b209      	sxth	r1, r1
 800dea4:	428a      	cmp	r2, r1
 800dea6:	da07      	bge.n	800deb8 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dea8:	88c0      	ldrh	r0, [r0, #6]
 800deaa:	4410      	add	r0, r2
 800deac:	b200      	sxth	r0, r0
 800deae:	4283      	cmp	r3, r0
 800deb0:	bfac      	ite	ge
 800deb2:	2000      	movge	r0, #0
 800deb4:	2001      	movlt	r0, #1
 800deb6:	bd10      	pop	{r4, pc}
 800deb8:	2000      	movs	r0, #0
 800deba:	e7fc      	b.n	800deb6 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800debc <_ZNK8touchgfx4Rect8includesERKS0_>:
 800debc:	b570      	push	{r4, r5, r6, lr}
 800debe:	f9b1 4000 	ldrsh.w	r4, [r1]
 800dec2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800dec6:	42ac      	cmp	r4, r5
 800dec8:	db18      	blt.n	800defc <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800deca:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800dece:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ded2:	429a      	cmp	r2, r3
 800ded4:	db12      	blt.n	800defc <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ded6:	8886      	ldrh	r6, [r0, #4]
 800ded8:	4435      	add	r5, r6
 800deda:	888e      	ldrh	r6, [r1, #4]
 800dedc:	4434      	add	r4, r6
 800dede:	b22d      	sxth	r5, r5
 800dee0:	b224      	sxth	r4, r4
 800dee2:	42a5      	cmp	r5, r4
 800dee4:	db0a      	blt.n	800defc <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800dee6:	88c0      	ldrh	r0, [r0, #6]
 800dee8:	4418      	add	r0, r3
 800deea:	88cb      	ldrh	r3, [r1, #6]
 800deec:	441a      	add	r2, r3
 800deee:	b200      	sxth	r0, r0
 800def0:	b212      	sxth	r2, r2
 800def2:	4290      	cmp	r0, r2
 800def4:	bfb4      	ite	lt
 800def6:	2000      	movlt	r0, #0
 800def8:	2001      	movge	r0, #1
 800defa:	bd70      	pop	{r4, r5, r6, pc}
 800defc:	2000      	movs	r0, #0
 800defe:	e7fc      	b.n	800defa <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800df00 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800df00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df02:	4604      	mov	r4, r0
 800df04:	4608      	mov	r0, r1
 800df06:	460d      	mov	r5, r1
 800df08:	f7fb fea9 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800df0c:	b978      	cbnz	r0, 800df2e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800df0e:	4620      	mov	r0, r4
 800df10:	f7fb fea5 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800df14:	f9b5 6000 	ldrsh.w	r6, [r5]
 800df18:	b150      	cbz	r0, 800df30 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800df1a:	8026      	strh	r6, [r4, #0]
 800df1c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800df20:	8063      	strh	r3, [r4, #2]
 800df22:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800df26:	80a3      	strh	r3, [r4, #4]
 800df28:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800df2c:	80e3      	strh	r3, [r4, #6]
 800df2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800df30:	f9b4 1000 	ldrsh.w	r1, [r4]
 800df34:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800df38:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800df3c:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800df40:	88ed      	ldrh	r5, [r5, #6]
 800df42:	42b1      	cmp	r1, r6
 800df44:	460f      	mov	r7, r1
 800df46:	bfa8      	it	ge
 800df48:	4637      	movge	r7, r6
 800df4a:	4293      	cmp	r3, r2
 800df4c:	4618      	mov	r0, r3
 800df4e:	4466      	add	r6, ip
 800df50:	bfa8      	it	ge
 800df52:	4610      	movge	r0, r2
 800df54:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800df58:	8027      	strh	r7, [r4, #0]
 800df5a:	442a      	add	r2, r5
 800df5c:	88e5      	ldrh	r5, [r4, #6]
 800df5e:	8060      	strh	r0, [r4, #2]
 800df60:	4461      	add	r1, ip
 800df62:	442b      	add	r3, r5
 800df64:	b236      	sxth	r6, r6
 800df66:	b209      	sxth	r1, r1
 800df68:	b212      	sxth	r2, r2
 800df6a:	b21b      	sxth	r3, r3
 800df6c:	428e      	cmp	r6, r1
 800df6e:	bfac      	ite	ge
 800df70:	ebc7 0106 	rsbge	r1, r7, r6
 800df74:	ebc7 0101 	rsblt	r1, r7, r1
 800df78:	429a      	cmp	r2, r3
 800df7a:	bfac      	ite	ge
 800df7c:	ebc0 0202 	rsbge	r2, r0, r2
 800df80:	ebc0 0203 	rsblt	r2, r0, r3
 800df84:	80a1      	strh	r1, [r4, #4]
 800df86:	80e2      	strh	r2, [r4, #6]
 800df88:	e7d1      	b.n	800df2e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800df8c <_ZN8touchgfx11Application11getInstanceEv>:
 800df8c:	4b01      	ldr	r3, [pc, #4]	; (800df94 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800df8e:	6818      	ldr	r0, [r3, #0]
 800df90:	4770      	bx	lr
 800df92:	bf00      	nop
 800df94:	2000d3c4 	.word	0x2000d3c4

0800df98 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800df98:	b570      	push	{r4, r5, r6, lr}
 800df9a:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800df9e:	1d04      	adds	r4, r0, #4
 800dfa0:	2200      	movs	r2, #0
 800dfa2:	b295      	uxth	r5, r2
 800dfa4:	42ab      	cmp	r3, r5
 800dfa6:	d90f      	bls.n	800dfc8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800dfa8:	f854 6b04 	ldr.w	r6, [r4], #4
 800dfac:	428e      	cmp	r6, r1
 800dfae:	4615      	mov	r5, r2
 800dfb0:	f102 0201 	add.w	r2, r2, #1
 800dfb4:	d1f5      	bne.n	800dfa2 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800dfb6:	4428      	add	r0, r5
 800dfb8:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800dfbc:	2bff      	cmp	r3, #255	; 0xff
 800dfbe:	d002      	beq.n	800dfc6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800dfc0:	3301      	adds	r3, #1
 800dfc2:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800dfc6:	bd70      	pop	{r4, r5, r6, pc}
 800dfc8:	2b20      	cmp	r3, #32
 800dfca:	d106      	bne.n	800dfda <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800dfcc:	4b08      	ldr	r3, [pc, #32]	; (800dff0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800dfce:	4a09      	ldr	r2, [pc, #36]	; (800dff4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800dfd0:	4809      	ldr	r0, [pc, #36]	; (800dff8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800dfd2:	f44f 7117 	mov.w	r1, #604	; 0x25c
 800dfd6:	f010 f807 	bl	801dfe8 <__assert_func>
 800dfda:	18c2      	adds	r2, r0, r3
 800dfdc:	2401      	movs	r4, #1
 800dfde:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800dfe2:	191a      	adds	r2, r3, r4
 800dfe4:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800dfe8:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800dfec:	6041      	str	r1, [r0, #4]
 800dfee:	e7ea      	b.n	800dfc6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800dff0:	080217e9 	.word	0x080217e9
 800dff4:	080218f4 	.word	0x080218f4
 800dff8:	080217bf 	.word	0x080217bf

0800dffc <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800dffc:	b570      	push	{r4, r5, r6, lr}
 800dffe:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800e002:	1d04      	adds	r4, r0, #4
 800e004:	2300      	movs	r3, #0
 800e006:	b29a      	uxth	r2, r3
 800e008:	4296      	cmp	r6, r2
 800e00a:	d90a      	bls.n	800e022 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800e00c:	f854 2b04 	ldr.w	r2, [r4], #4
 800e010:	428a      	cmp	r2, r1
 800e012:	d107      	bne.n	800e024 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800e014:	18c5      	adds	r5, r0, r3
 800e016:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800e01a:	b11a      	cbz	r2, 800e024 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800e01c:	3a01      	subs	r2, #1
 800e01e:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800e022:	bd70      	pop	{r4, r5, r6, pc}
 800e024:	3301      	adds	r3, #1
 800e026:	e7ee      	b.n	800e006 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800e028 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800e028:	2300      	movs	r3, #0
 800e02a:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800e02e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800e032:	30a8      	adds	r0, #168	; 0xa8
 800e034:	f802 3b01 	strb.w	r3, [r2], #1
 800e038:	4282      	cmp	r2, r0
 800e03a:	d1fb      	bne.n	800e034 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800e03c:	4770      	bx	lr

0800e03e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e03e:	4603      	mov	r3, r0
 800e040:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e044:	2200      	movs	r2, #0
 800e046:	801a      	strh	r2, [r3, #0]
 800e048:	805a      	strh	r2, [r3, #2]
 800e04a:	809a      	strh	r2, [r3, #4]
 800e04c:	80da      	strh	r2, [r3, #6]
 800e04e:	3308      	adds	r3, #8
 800e050:	428b      	cmp	r3, r1
 800e052:	d1f8      	bne.n	800e046 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e054:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e058:	4770      	bx	lr
	...

0800e05c <_ZN8touchgfx11ApplicationC1Ev>:
 800e05c:	b570      	push	{r4, r5, r6, lr}
 800e05e:	4b1a      	ldr	r3, [pc, #104]	; (800e0c8 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800e060:	6003      	str	r3, [r0, #0]
 800e062:	2500      	movs	r5, #0
 800e064:	4604      	mov	r4, r0
 800e066:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800e06a:	30a8      	adds	r0, #168	; 0xa8
 800e06c:	f7ff ffe7 	bl	800e03e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e070:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800e074:	f7ff ffe3 	bl	800e03e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e078:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800e07c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800e080:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800e084:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800e088:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800e08c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800e090:	490e      	ldr	r1, [pc, #56]	; (800e0cc <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800e092:	480f      	ldr	r0, [pc, #60]	; (800e0d0 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800e094:	4e0f      	ldr	r6, [pc, #60]	; (800e0d4 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e096:	f00e fa4b 	bl	801c530 <CRC_Lock>
 800e09a:	4b0f      	ldr	r3, [pc, #60]	; (800e0d8 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e09c:	b158      	cbz	r0, 800e0b6 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800e09e:	801d      	strh	r5, [r3, #0]
 800e0a0:	4a0e      	ldr	r2, [pc, #56]	; (800e0dc <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e0a2:	2300      	movs	r3, #0
 800e0a4:	6013      	str	r3, [r2, #0]
 800e0a6:	4a0e      	ldr	r2, [pc, #56]	; (800e0e0 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800e0a8:	6033      	str	r3, [r6, #0]
 800e0aa:	4620      	mov	r0, r4
 800e0ac:	6013      	str	r3, [r2, #0]
 800e0ae:	f7ff ffbb 	bl	800e028 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800e0b2:	4620      	mov	r0, r4
 800e0b4:	bd70      	pop	{r4, r5, r6, pc}
 800e0b6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e0ba:	2002      	movs	r0, #2
 800e0bc:	801a      	strh	r2, [r3, #0]
 800e0be:	6030      	str	r0, [r6, #0]
 800e0c0:	f001 fb30 	bl	800f724 <_ZN8touchgfx6Screen4drawEv>
 800e0c4:	e7ec      	b.n	800e0a0 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800e0c6:	bf00      	nop
 800e0c8:	08021874 	.word	0x08021874
 800e0cc:	b5e8b5cd 	.word	0xb5e8b5cd
 800e0d0:	f407a5c2 	.word	0xf407a5c2
 800e0d4:	2000d3b4 	.word	0x2000d3b4
 800e0d8:	20000060 	.word	0x20000060
 800e0dc:	2000d3c4 	.word	0x2000d3c4
 800e0e0:	2000d3b8 	.word	0x2000d3b8

0800e0e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e0e4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800e0e8:	428b      	cmp	r3, r1
 800e0ea:	b510      	push	{r4, lr}
 800e0ec:	d90e      	bls.n	800e10c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800e0ee:	3b01      	subs	r3, #1
 800e0f0:	b29b      	uxth	r3, r3
 800e0f2:	428b      	cmp	r3, r1
 800e0f4:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800e0f8:	d908      	bls.n	800e10c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800e0fa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e0fe:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e102:	681a      	ldr	r2, [r3, #0]
 800e104:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e108:	685a      	ldr	r2, [r3, #4]
 800e10a:	6062      	str	r2, [r4, #4]
 800e10c:	bd10      	pop	{r4, pc}
	...

0800e110 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800e110:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e112:	466b      	mov	r3, sp
 800e114:	e883 0006 	stmia.w	r3, {r1, r2}
 800e118:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800e11c:	2a07      	cmp	r2, #7
 800e11e:	4604      	mov	r4, r0
 800e120:	d906      	bls.n	800e130 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800e122:	4b09      	ldr	r3, [pc, #36]	; (800e148 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800e124:	4a09      	ldr	r2, [pc, #36]	; (800e14c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800e126:	480a      	ldr	r0, [pc, #40]	; (800e150 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800e128:	f240 118f 	movw	r1, #399	; 0x18f
 800e12c:	f00f ff5c 	bl	801dfe8 <__assert_func>
 800e130:	1c51      	adds	r1, r2, #1
 800e132:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e136:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800e13a:	cb03      	ldmia	r3!, {r0, r1}
 800e13c:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800e140:	6069      	str	r1, [r5, #4]
 800e142:	b003      	add	sp, #12
 800e144:	bd30      	pop	{r4, r5, pc}
 800e146:	bf00      	nop
 800e148:	08021811 	.word	0x08021811
 800e14c:	08021939 	.word	0x08021939
 800e150:	08021840 	.word	0x08021840

0800e154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e158:	b08d      	sub	sp, #52	; 0x34
 800e15a:	ac08      	add	r4, sp, #32
 800e15c:	4683      	mov	fp, r0
 800e15e:	4620      	mov	r0, r4
 800e160:	e884 0006 	stmia.w	r4, {r1, r2}
 800e164:	f7fb fd7b 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800e168:	2800      	cmp	r0, #0
 800e16a:	d16a      	bne.n	800e242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e16c:	9402      	str	r4, [sp, #8]
 800e16e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e172:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e176:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800e17a:	2400      	movs	r4, #0
 800e17c:	9301      	str	r3, [sp, #4]
 800e17e:	36a0      	adds	r6, #160	; 0xa0
 800e180:	42a5      	cmp	r5, r4
 800e182:	d00d      	beq.n	800e1a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800e184:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800e188:	9802      	ldr	r0, [sp, #8]
 800e18a:	f7ff fe97 	bl	800debc <_ZNK8touchgfx4Rect8includesERKS0_>
 800e18e:	b128      	cbz	r0, 800e19c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800e190:	1e69      	subs	r1, r5, #1
 800e192:	1b09      	subs	r1, r1, r4
 800e194:	b289      	uxth	r1, r1
 800e196:	9801      	ldr	r0, [sp, #4]
 800e198:	f7ff ffa4 	bl	800e0e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e19c:	3401      	adds	r4, #1
 800e19e:	e7ef      	b.n	800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e1a0:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e1a4:	9703      	str	r7, [sp, #12]
 800e1a6:	1e7b      	subs	r3, r7, #1
 800e1a8:	9300      	str	r3, [sp, #0]
 800e1aa:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800e1ae:	2400      	movs	r4, #0
 800e1b0:	4655      	mov	r5, sl
 800e1b2:	9704      	str	r7, [sp, #16]
 800e1b4:	4626      	mov	r6, r4
 800e1b6:	9b04      	ldr	r3, [sp, #16]
 800e1b8:	2b00      	cmp	r3, #0
 800e1ba:	d078      	beq.n	800e2ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800e1bc:	9902      	ldr	r1, [sp, #8]
 800e1be:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e1c2:	f7ff fe59 	bl	800de78 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e1c6:	b360      	cbz	r0, 800e222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800e1c8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800e1cc:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800e1d0:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800e1d4:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800e1d8:	45e6      	cmp	lr, ip
 800e1da:	db35      	blt.n	800e248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800e1dc:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e1e0:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e1e4:	4472      	add	r2, lr
 800e1e6:	4463      	add	r3, ip
 800e1e8:	b212      	sxth	r2, r2
 800e1ea:	b21b      	sxth	r3, r3
 800e1ec:	429a      	cmp	r2, r3
 800e1ee:	dc2b      	bgt.n	800e248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800e1f0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e1f4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e1f8:	fa1f f288 	uxth.w	r2, r8
 800e1fc:	4413      	add	r3, r2
 800e1fe:	b29b      	uxth	r3, r3
 800e200:	45c1      	cmp	r9, r8
 800e202:	fa0f fe83 	sxth.w	lr, r3
 800e206:	fa1f fc89 	uxth.w	ip, r9
 800e20a:	db0f      	blt.n	800e22c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800e20c:	eba3 030c 	sub.w	r3, r3, ip
 800e210:	1ac9      	subs	r1, r1, r3
 800e212:	b209      	sxth	r1, r1
 800e214:	2900      	cmp	r1, #0
 800e216:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e21a:	dd12      	ble.n	800e242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e21c:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800e220:	4604      	mov	r4, r0
 800e222:	9b04      	ldr	r3, [sp, #16]
 800e224:	3b01      	subs	r3, #1
 800e226:	9304      	str	r3, [sp, #16]
 800e228:	3d08      	subs	r5, #8
 800e22a:	e7c4      	b.n	800e1b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800e22c:	4461      	add	r1, ip
 800e22e:	b209      	sxth	r1, r1
 800e230:	4571      	cmp	r1, lr
 800e232:	dc3a      	bgt.n	800e2aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e234:	eba2 020c 	sub.w	r2, r2, ip
 800e238:	b212      	sxth	r2, r2
 800e23a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e23e:	2a00      	cmp	r2, #0
 800e240:	dcee      	bgt.n	800e220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800e242:	b00d      	add	sp, #52	; 0x34
 800e244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e248:	45c1      	cmp	r9, r8
 800e24a:	db2e      	blt.n	800e2aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e24c:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800e250:	4499      	add	r9, r3
 800e252:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e256:	4498      	add	r8, r3
 800e258:	fa0f f989 	sxth.w	r9, r9
 800e25c:	fa0f f888 	sxth.w	r8, r8
 800e260:	45c1      	cmp	r9, r8
 800e262:	dc22      	bgt.n	800e2aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e264:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e268:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800e26c:	fa1f f28c 	uxth.w	r2, ip
 800e270:	4413      	add	r3, r2
 800e272:	b29b      	uxth	r3, r3
 800e274:	45e6      	cmp	lr, ip
 800e276:	fa1f f88e 	uxth.w	r8, lr
 800e27a:	fa0f f983 	sxth.w	r9, r3
 800e27e:	db0a      	blt.n	800e296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800e280:	eba3 0308 	sub.w	r3, r3, r8
 800e284:	1ac9      	subs	r1, r1, r3
 800e286:	b209      	sxth	r1, r1
 800e288:	2900      	cmp	r1, #0
 800e28a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e28e:	ddd8      	ble.n	800e242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e290:	f8ad 9020 	strh.w	r9, [sp, #32]
 800e294:	e7c4      	b.n	800e220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800e296:	4441      	add	r1, r8
 800e298:	b209      	sxth	r1, r1
 800e29a:	4549      	cmp	r1, r9
 800e29c:	dc05      	bgt.n	800e2aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800e29e:	eba2 0208 	sub.w	r2, r2, r8
 800e2a2:	b212      	sxth	r2, r2
 800e2a4:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800e2a8:	e7c9      	b.n	800e23e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e2aa:	4606      	mov	r6, r0
 800e2ac:	e7b9      	b.n	800e222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800e2ae:	2c00      	cmp	r4, #0
 800e2b0:	f47f af7d 	bne.w	800e1ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800e2b4:	2e00      	cmp	r6, #0
 800e2b6:	f000 81dd 	beq.w	800e674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800e2ba:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800e2be:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800e2c2:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800e2c6:	b2b9      	uxth	r1, r7
 800e2c8:	9104      	str	r1, [sp, #16]
 800e2ca:	9804      	ldr	r0, [sp, #16]
 800e2cc:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e2d0:	4401      	add	r1, r0
 800e2d2:	b2b3      	uxth	r3, r6
 800e2d4:	b289      	uxth	r1, r1
 800e2d6:	441a      	add	r2, r3
 800e2d8:	9105      	str	r1, [sp, #20]
 800e2da:	b292      	uxth	r2, r2
 800e2dc:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800e2e0:	fa0f f882 	sxth.w	r8, r2
 800e2e4:	4655      	mov	r5, sl
 800e2e6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800e2ea:	9b03      	ldr	r3, [sp, #12]
 800e2ec:	2b00      	cmp	r3, #0
 800e2ee:	d054      	beq.n	800e39a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800e2f0:	9902      	ldr	r1, [sp, #8]
 800e2f2:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e2f6:	f7ff fdbf 	bl	800de78 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e2fa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e2fe:	b1d8      	cbz	r0, 800e338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e300:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800e304:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800e308:	4576      	cmp	r6, lr
 800e30a:	dc26      	bgt.n	800e35a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e30c:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800e310:	44f4      	add	ip, lr
 800e312:	fa0f fc8c 	sxth.w	ip, ip
 800e316:	45e0      	cmp	r8, ip
 800e318:	db1f      	blt.n	800e35a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800e31a:	428f      	cmp	r7, r1
 800e31c:	fa1f fc81 	uxth.w	ip, r1
 800e320:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800e324:	dc0f      	bgt.n	800e346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800e326:	9805      	ldr	r0, [sp, #20]
 800e328:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800e32c:	eba0 0c0c 	sub.w	ip, r0, ip
 800e330:	eba1 010c 	sub.w	r1, r1, ip
 800e334:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800e338:	4620      	mov	r0, r4
 800e33a:	9903      	ldr	r1, [sp, #12]
 800e33c:	3901      	subs	r1, #1
 800e33e:	9103      	str	r1, [sp, #12]
 800e340:	3d08      	subs	r5, #8
 800e342:	4604      	mov	r4, r0
 800e344:	e7cf      	b.n	800e2e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800e346:	4461      	add	r1, ip
 800e348:	b209      	sxth	r1, r1
 800e34a:	4549      	cmp	r1, r9
 800e34c:	dcf5      	bgt.n	800e33a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e34e:	9904      	ldr	r1, [sp, #16]
 800e350:	eba1 0c0c 	sub.w	ip, r1, ip
 800e354:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800e358:	e7ee      	b.n	800e338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e35a:	428f      	cmp	r7, r1
 800e35c:	dced      	bgt.n	800e33a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e35e:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800e362:	4461      	add	r1, ip
 800e364:	b209      	sxth	r1, r1
 800e366:	4589      	cmp	r9, r1
 800e368:	dbe7      	blt.n	800e33a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e36a:	4576      	cmp	r6, lr
 800e36c:	fa1f fc8e 	uxth.w	ip, lr
 800e370:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800e374:	dc08      	bgt.n	800e388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800e376:	eba2 0c0c 	sub.w	ip, r2, ip
 800e37a:	eba1 010c 	sub.w	r1, r1, ip
 800e37e:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800e382:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800e386:	e7d7      	b.n	800e338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e388:	4461      	add	r1, ip
 800e38a:	b209      	sxth	r1, r1
 800e38c:	4588      	cmp	r8, r1
 800e38e:	dbd4      	blt.n	800e33a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800e390:	eba3 0c0c 	sub.w	ip, r3, ip
 800e394:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800e398:	e7ce      	b.n	800e338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800e39a:	2c00      	cmp	r4, #0
 800e39c:	f000 816a 	beq.w	800e674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800e3a0:	9b00      	ldr	r3, [sp, #0]
 800e3a2:	3301      	adds	r3, #1
 800e3a4:	f000 8166 	beq.w	800e674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800e3a8:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800e3ac:	4621      	mov	r1, r4
 800e3ae:	9802      	ldr	r0, [sp, #8]
 800e3b0:	f7ff fd84 	bl	800debc <_ZNK8touchgfx4Rect8includesERKS0_>
 800e3b4:	b120      	cbz	r0, 800e3c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800e3b6:	f8bd 1000 	ldrh.w	r1, [sp]
 800e3ba:	9801      	ldr	r0, [sp, #4]
 800e3bc:	f7ff fe92 	bl	800e0e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e3c0:	9902      	ldr	r1, [sp, #8]
 800e3c2:	4620      	mov	r0, r4
 800e3c4:	f7ff fd58 	bl	800de78 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e3c8:	2800      	cmp	r0, #0
 800e3ca:	f000 809b 	beq.w	800e504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800e3ce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800e3d2:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800e3d6:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800e3da:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800e3de:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800e3e2:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800e3e6:	fa1f f288 	uxth.w	r2, r8
 800e3ea:	19d5      	adds	r5, r2, r7
 800e3ec:	fa1f f985 	uxth.w	r9, r5
 800e3f0:	fa0f f589 	sxth.w	r5, r9
 800e3f4:	b2a1      	uxth	r1, r4
 800e3f6:	440b      	add	r3, r1
 800e3f8:	9503      	str	r5, [sp, #12]
 800e3fa:	45a0      	cmp	r8, r4
 800e3fc:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e400:	9507      	str	r5, [sp, #28]
 800e402:	b29b      	uxth	r3, r3
 800e404:	f340 809d 	ble.w	800e542 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800e408:	1a52      	subs	r2, r2, r1
 800e40a:	b292      	uxth	r2, r2
 800e40c:	4584      	cmp	ip, r0
 800e40e:	fa0f fe83 	sxth.w	lr, r3
 800e412:	b215      	sxth	r5, r2
 800e414:	dd2f      	ble.n	800e476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800e416:	9e00      	ldr	r6, [sp, #0]
 800e418:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800e41c:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800e420:	9e03      	ldr	r6, [sp, #12]
 800e422:	eba6 060e 	sub.w	r6, r6, lr
 800e426:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800e42a:	fa1f fc8c 	uxth.w	ip, ip
 800e42e:	b280      	uxth	r0, r0
 800e430:	ebac 0300 	sub.w	r3, ip, r0
 800e434:	448c      	add	ip, r1
 800e436:	4470      	add	r0, lr
 800e438:	b29b      	uxth	r3, r3
 800e43a:	fa0f fc8c 	sxth.w	ip, ip
 800e43e:	b200      	sxth	r0, r0
 800e440:	b21c      	sxth	r4, r3
 800e442:	ebac 0000 	sub.w	r0, ip, r0
 800e446:	4366      	muls	r6, r4
 800e448:	4368      	muls	r0, r5
 800e44a:	4286      	cmp	r6, r0
 800e44c:	db09      	blt.n	800e462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800e44e:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800e452:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800e456:	4417      	add	r7, r2
 800e458:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e45c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e460:	e685      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e462:	440b      	add	r3, r1
 800e464:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e468:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800e46c:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800e470:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e474:	e67b      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e476:	9e03      	ldr	r6, [sp, #12]
 800e478:	45b6      	cmp	lr, r6
 800e47a:	da28      	bge.n	800e4ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800e47c:	9b00      	ldr	r3, [sp, #0]
 800e47e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800e482:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800e486:	eb04 030c 	add.w	r3, r4, ip
 800e48a:	fa1f f883 	uxth.w	r8, r3
 800e48e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800e492:	4403      	add	r3, r0
 800e494:	eba3 0308 	sub.w	r3, r3, r8
 800e498:	b29b      	uxth	r3, r3
 800e49a:	fa0f f988 	sxth.w	r9, r8
 800e49e:	eba0 000c 	sub.w	r0, r0, ip
 800e4a2:	fa0f f883 	sxth.w	r8, r3
 800e4a6:	eba6 060e 	sub.w	r6, r6, lr
 800e4aa:	4368      	muls	r0, r5
 800e4ac:	fb08 f606 	mul.w	r6, r8, r6
 800e4b0:	42b0      	cmp	r0, r6
 800e4b2:	dc06      	bgt.n	800e4c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800e4b4:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800e4b8:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800e4bc:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800e4c0:	e7c9      	b.n	800e456 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800e4c2:	4423      	add	r3, r4
 800e4c4:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800e4c8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800e4cc:	e64f      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e4ce:	9807      	ldr	r0, [sp, #28]
 800e4d0:	eba3 0309 	sub.w	r3, r3, r9
 800e4d4:	b29b      	uxth	r3, r3
 800e4d6:	2806      	cmp	r0, #6
 800e4d8:	fa0f fc83 	sxth.w	ip, r3
 800e4dc:	d818      	bhi.n	800e510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800e4de:	4652      	mov	r2, sl
 800e4e0:	ab0a      	add	r3, sp, #40	; 0x28
 800e4e2:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800e4e6:	6851      	ldr	r1, [r2, #4]
 800e4e8:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800e4ec:	c303      	stmia	r3!, {r0, r1}
 800e4ee:	9b03      	ldr	r3, [sp, #12]
 800e4f0:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800e4f4:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800e4f8:	ab0a      	add	r3, sp, #40	; 0x28
 800e4fa:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e4fe:	9801      	ldr	r0, [sp, #4]
 800e500:	f7ff fe06 	bl	800e110 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e504:	9b00      	ldr	r3, [sp, #0]
 800e506:	3b01      	subs	r3, #1
 800e508:	9300      	str	r3, [sp, #0]
 800e50a:	f1aa 0a08 	sub.w	sl, sl, #8
 800e50e:	e747      	b.n	800e3a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800e510:	9800      	ldr	r0, [sp, #0]
 800e512:	45ac      	cmp	ip, r5
 800e514:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e518:	db0c      	blt.n	800e534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800e51a:	4417      	add	r7, r2
 800e51c:	b2bf      	uxth	r7, r7
 800e51e:	4458      	add	r0, fp
 800e520:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e524:	440f      	add	r7, r1
 800e526:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e52a:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800e52e:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800e532:	e61c      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e534:	4458      	add	r0, fp
 800e536:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800e53a:	443b      	add	r3, r7
 800e53c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800e540:	e615      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e542:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800e546:	fa1f f18c 	uxth.w	r1, ip
 800e54a:	eb01 0e05 	add.w	lr, r1, r5
 800e54e:	b282      	uxth	r2, r0
 800e550:	fa1f fe8e 	uxth.w	lr, lr
 800e554:	9204      	str	r2, [sp, #16]
 800e556:	fa0f f28e 	sxth.w	r2, lr
 800e55a:	9205      	str	r2, [sp, #20]
 800e55c:	9e04      	ldr	r6, [sp, #16]
 800e55e:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800e562:	4432      	add	r2, r6
 800e564:	b292      	uxth	r2, r2
 800e566:	4584      	cmp	ip, r0
 800e568:	9206      	str	r2, [sp, #24]
 800e56a:	da26      	bge.n	800e5ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800e56c:	eba3 0309 	sub.w	r3, r3, r9
 800e570:	eba2 020e 	sub.w	r2, r2, lr
 800e574:	b29b      	uxth	r3, r3
 800e576:	b292      	uxth	r2, r2
 800e578:	fa0f fa83 	sxth.w	sl, r3
 800e57c:	b211      	sxth	r1, r2
 800e57e:	eba0 000c 	sub.w	r0, r0, ip
 800e582:	eba4 0408 	sub.w	r4, r4, r8
 800e586:	fb0a f000 	mul.w	r0, sl, r0
 800e58a:	434c      	muls	r4, r1
 800e58c:	42a0      	cmp	r0, r4
 800e58e:	9800      	ldr	r0, [sp, #0]
 800e590:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e594:	dc06      	bgt.n	800e5a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800e596:	4458      	add	r0, fp
 800e598:	9a05      	ldr	r2, [sp, #20]
 800e59a:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800e59e:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800e5a2:	e7ca      	b.n	800e53a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800e5a4:	eb0b 0300 	add.w	r3, fp, r0
 800e5a8:	9903      	ldr	r1, [sp, #12]
 800e5aa:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800e5ae:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800e5b2:	442a      	add	r2, r5
 800e5b4:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e5b8:	e5d9      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e5ba:	9e04      	ldr	r6, [sp, #16]
 800e5bc:	9a03      	ldr	r2, [sp, #12]
 800e5be:	1b89      	subs	r1, r1, r6
 800e5c0:	b21e      	sxth	r6, r3
 800e5c2:	b289      	uxth	r1, r1
 800e5c4:	4296      	cmp	r6, r2
 800e5c6:	fa0f fc81 	sxth.w	ip, r1
 800e5ca:	dd26      	ble.n	800e61a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800e5cc:	eba3 0309 	sub.w	r3, r3, r9
 800e5d0:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800e5d4:	9e05      	ldr	r6, [sp, #20]
 800e5d6:	b29b      	uxth	r3, r3
 800e5d8:	eba6 0902 	sub.w	r9, r6, r2
 800e5dc:	b218      	sxth	r0, r3
 800e5de:	eba4 0408 	sub.w	r4, r4, r8
 800e5e2:	fb0c f404 	mul.w	r4, ip, r4
 800e5e6:	fb00 f909 	mul.w	r9, r0, r9
 800e5ea:	9a00      	ldr	r2, [sp, #0]
 800e5ec:	454c      	cmp	r4, r9
 800e5ee:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e5f2:	db03      	blt.n	800e5fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800e5f4:	445a      	add	r2, fp
 800e5f6:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800e5fa:	e79e      	b.n	800e53a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800e5fc:	eb0b 0302 	add.w	r3, fp, r2
 800e600:	9a03      	ldr	r2, [sp, #12]
 800e602:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800e606:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800e60a:	4429      	add	r1, r5
 800e60c:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800e610:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800e614:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e618:	e5a9      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e61a:	9b06      	ldr	r3, [sp, #24]
 800e61c:	9c07      	ldr	r4, [sp, #28]
 800e61e:	eba3 020e 	sub.w	r2, r3, lr
 800e622:	b292      	uxth	r2, r2
 800e624:	2c06      	cmp	r4, #6
 800e626:	b213      	sxth	r3, r2
 800e628:	d80d      	bhi.n	800e646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800e62a:	4651      	mov	r1, sl
 800e62c:	aa0a      	add	r2, sp, #40	; 0x28
 800e62e:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800e632:	6849      	ldr	r1, [r1, #4]
 800e634:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800e638:	9b05      	ldr	r3, [sp, #20]
 800e63a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800e63e:	c203      	stmia	r2!, {r0, r1}
 800e640:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800e644:	e758      	b.n	800e4f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800e646:	9c00      	ldr	r4, [sp, #0]
 800e648:	4563      	cmp	r3, ip
 800e64a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800e64e:	db0d      	blt.n	800e66c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800e650:	4429      	add	r1, r5
 800e652:	9a04      	ldr	r2, [sp, #16]
 800e654:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800e658:	b289      	uxth	r1, r1
 800e65a:	445c      	add	r4, fp
 800e65c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800e660:	4411      	add	r1, r2
 800e662:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800e666:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800e66a:	e580      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e66c:	445c      	add	r4, fp
 800e66e:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800e672:	e79e      	b.n	800e5b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800e674:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e678:	2f07      	cmp	r7, #7
 800e67a:	d806      	bhi.n	800e68a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800e67c:	ab08      	add	r3, sp, #32
 800e67e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e682:	9801      	ldr	r0, [sp, #4]
 800e684:	f7ff fd44 	bl	800e110 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e688:	e5db      	b.n	800e242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800e68a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e68e:	f107 39ff 	add.w	r9, r7, #4294967295
 800e692:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800e696:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800e69a:	f04f 35ff 	mov.w	r5, #4294967295
 800e69e:	2400      	movs	r4, #0
 800e6a0:	9304      	str	r3, [sp, #16]
 800e6a2:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800e6a6:	9300      	str	r3, [sp, #0]
 800e6a8:	f109 32ff 	add.w	r2, r9, #4294967295
 800e6ac:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800e6b0:	9303      	str	r3, [sp, #12]
 800e6b2:	4690      	mov	r8, r2
 800e6b4:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800e6b8:	f1b8 3fff 	cmp.w	r8, #4294967295
 800e6bc:	bf14      	ite	ne
 800e6be:	9904      	ldrne	r1, [sp, #16]
 800e6c0:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800e6c4:	6818      	ldr	r0, [r3, #0]
 800e6c6:	9206      	str	r2, [sp, #24]
 800e6c8:	bf18      	it	ne
 800e6ca:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800e6ce:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800e6d2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e6d6:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800e6da:	9305      	str	r3, [sp, #20]
 800e6dc:	fb16 f601 	smulbb	r6, r6, r1
 800e6e0:	6859      	ldr	r1, [r3, #4]
 800e6e2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e6e6:	4671      	mov	r1, lr
 800e6e8:	a80a      	add	r0, sp, #40	; 0x28
 800e6ea:	f7ff fc09 	bl	800df00 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e6ee:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800e6f2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800e6f6:	9b03      	ldr	r3, [sp, #12]
 800e6f8:	9a00      	ldr	r2, [sp, #0]
 800e6fa:	fb11 f100 	smulbb	r1, r1, r0
 800e6fe:	fb02 6603 	mla	r6, r2, r3, r6
 800e702:	1b8e      	subs	r6, r1, r6
 800e704:	2008      	movs	r0, #8
 800e706:	fb91 f1f0 	sdiv	r1, r1, r0
 800e70a:	42b1      	cmp	r1, r6
 800e70c:	dc21      	bgt.n	800e752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800e70e:	4556      	cmp	r6, sl
 800e710:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800e714:	da03      	bge.n	800e71e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800e716:	b1e6      	cbz	r6, 800e752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800e718:	46b2      	mov	sl, r6
 800e71a:	4645      	mov	r5, r8
 800e71c:	464c      	mov	r4, r9
 800e71e:	f108 38ff 	add.w	r8, r8, #4294967295
 800e722:	f118 0f02 	cmn.w	r8, #2
 800e726:	d1c7      	bne.n	800e6b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800e728:	f1b2 3fff 	cmp.w	r2, #4294967295
 800e72c:	f1a7 0708 	sub.w	r7, r7, #8
 800e730:	4691      	mov	r9, r2
 800e732:	d1b6      	bne.n	800e6a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800e734:	9b01      	ldr	r3, [sp, #4]
 800e736:	b2a6      	uxth	r6, r4
 800e738:	00e4      	lsls	r4, r4, #3
 800e73a:	1918      	adds	r0, r3, r4
 800e73c:	1c6b      	adds	r3, r5, #1
 800e73e:	d10b      	bne.n	800e758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800e740:	4601      	mov	r1, r0
 800e742:	9802      	ldr	r0, [sp, #8]
 800e744:	f7ff fbdc 	bl	800df00 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e748:	4631      	mov	r1, r6
 800e74a:	9801      	ldr	r0, [sp, #4]
 800e74c:	f7ff fcca 	bl	800e0e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e750:	e50d      	b.n	800e16e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800e752:	4645      	mov	r5, r8
 800e754:	464c      	mov	r4, r9
 800e756:	e7ed      	b.n	800e734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800e758:	9b01      	ldr	r3, [sp, #4]
 800e75a:	00ed      	lsls	r5, r5, #3
 800e75c:	1959      	adds	r1, r3, r5
 800e75e:	f7ff fbcf 	bl	800df00 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e762:	9b02      	ldr	r3, [sp, #8]
 800e764:	cb03      	ldmia	r3!, {r0, r1}
 800e766:	445d      	add	r5, fp
 800e768:	445c      	add	r4, fp
 800e76a:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800e76e:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800e772:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800e776:	9b02      	ldr	r3, [sp, #8]
 800e778:	6861      	ldr	r1, [r4, #4]
 800e77a:	c303      	stmia	r3!, {r0, r1}
 800e77c:	e7e4      	b.n	800e748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800e780 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800e780:	b530      	push	{r4, r5, lr}
 800e782:	4b1d      	ldr	r3, [pc, #116]	; (800e7f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800e784:	b085      	sub	sp, #20
 800e786:	460c      	mov	r4, r1
 800e788:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e78c:	4b1b      	ldr	r3, [pc, #108]	; (800e7fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800e78e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e792:	2100      	movs	r1, #0
 800e794:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e798:	9100      	str	r1, [sp, #0]
 800e79a:	4605      	mov	r5, r0
 800e79c:	6861      	ldr	r1, [r4, #4]
 800e79e:	6820      	ldr	r0, [r4, #0]
 800e7a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e7a4:	ab02      	add	r3, sp, #8
 800e7a6:	c303      	stmia	r3!, {r0, r1}
 800e7a8:	4669      	mov	r1, sp
 800e7aa:	a802      	add	r0, sp, #8
 800e7ac:	f7fb fa14 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800e7b0:	ab02      	add	r3, sp, #8
 800e7b2:	cb03      	ldmia	r3!, {r0, r1}
 800e7b4:	4b12      	ldr	r3, [pc, #72]	; (800e800 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800e7b6:	6020      	str	r0, [r4, #0]
 800e7b8:	6818      	ldr	r0, [r3, #0]
 800e7ba:	6061      	str	r1, [r4, #4]
 800e7bc:	b138      	cbz	r0, 800e7ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e7be:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800e7c2:	b133      	cbz	r3, 800e7d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800e7c4:	6821      	ldr	r1, [r4, #0]
 800e7c6:	6862      	ldr	r2, [r4, #4]
 800e7c8:	4628      	mov	r0, r5
 800e7ca:	f7ff fcc3 	bl	800e154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e7ce:	b005      	add	sp, #20
 800e7d0:	bd30      	pop	{r4, r5, pc}
 800e7d2:	6803      	ldr	r3, [r0, #0]
 800e7d4:	4621      	mov	r1, r4
 800e7d6:	689b      	ldr	r3, [r3, #8]
 800e7d8:	4798      	blx	r3
 800e7da:	4b0a      	ldr	r3, [pc, #40]	; (800e804 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800e7dc:	6818      	ldr	r0, [r3, #0]
 800e7de:	b118      	cbz	r0, 800e7e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800e7e0:	6803      	ldr	r3, [r0, #0]
 800e7e2:	4621      	mov	r1, r4
 800e7e4:	689b      	ldr	r3, [r3, #8]
 800e7e6:	4798      	blx	r3
 800e7e8:	4b07      	ldr	r3, [pc, #28]	; (800e808 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800e7ea:	6818      	ldr	r0, [r3, #0]
 800e7ec:	6803      	ldr	r3, [r0, #0]
 800e7ee:	4621      	mov	r1, r4
 800e7f0:	695b      	ldr	r3, [r3, #20]
 800e7f2:	4798      	blx	r3
 800e7f4:	e7eb      	b.n	800e7ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800e7f6:	bf00      	nop
 800e7f8:	2000d34c 	.word	0x2000d34c
 800e7fc:	2000d34e 	.word	0x2000d34e
 800e800:	2000d3b4 	.word	0x2000d3b4
 800e804:	2000d3b0 	.word	0x2000d3b0
 800e808:	2000d358 	.word	0x2000d358

0800e80c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800e80c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e810:	4604      	mov	r4, r0
 800e812:	b09b      	sub	sp, #108	; 0x6c
 800e814:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800e818:	b129      	cbz	r1, 800e826 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800e81a:	2300      	movs	r3, #0
 800e81c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800e820:	b01b      	add	sp, #108	; 0x6c
 800e822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e826:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800e82a:	4630      	mov	r0, r6
 800e82c:	f7fb fa17 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800e830:	4605      	mov	r5, r0
 800e832:	b940      	cbnz	r0, 800e846 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800e834:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e838:	4620      	mov	r0, r4
 800e83a:	f7ff fc8b 	bl	800e154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e83e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e842:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e846:	4ba6      	ldr	r3, [pc, #664]	; (800eae0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 800e848:	681b      	ldr	r3, [r3, #0]
 800e84a:	b33b      	cbz	r3, 800e89c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800e84c:	4da5      	ldr	r5, [pc, #660]	; (800eae4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800e84e:	4628      	mov	r0, r5
 800e850:	f7fb fa05 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800e854:	4606      	mov	r6, r0
 800e856:	bb08      	cbnz	r0, 800e89c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800e858:	4628      	mov	r0, r5
 800e85a:	f7ff f98d 	bl	800db78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e85e:	6829      	ldr	r1, [r5, #0]
 800e860:	686a      	ldr	r2, [r5, #4]
 800e862:	4620      	mov	r0, r4
 800e864:	f7ff fc76 	bl	800e154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e868:	802e      	strh	r6, [r5, #0]
 800e86a:	806e      	strh	r6, [r5, #2]
 800e86c:	80ae      	strh	r6, [r5, #4]
 800e86e:	80ee      	strh	r6, [r5, #6]
 800e870:	4f9d      	ldr	r7, [pc, #628]	; (800eae8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800e872:	a809      	add	r0, sp, #36	; 0x24
 800e874:	f7ff fbe3 	bl	800e03e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e878:	883d      	ldrh	r5, [r7, #0]
 800e87a:	462e      	mov	r6, r5
 800e87c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e880:	42b3      	cmp	r3, r6
 800e882:	d910      	bls.n	800e8a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800e884:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e888:	a809      	add	r0, sp, #36	; 0x24
 800e88a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800e88e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800e892:	3601      	adds	r6, #1
 800e894:	f7ff fc3c 	bl	800e110 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e898:	b2b6      	uxth	r6, r6
 800e89a:	e7ef      	b.n	800e87c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800e89c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d1e5      	bne.n	800e870 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800e8a4:	e7bc      	b.n	800e820 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e8a6:	462e      	mov	r6, r5
 800e8a8:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e8ac:	42b3      	cmp	r3, r6
 800e8ae:	d90b      	bls.n	800e8c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800e8b0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800e8b4:	4620      	mov	r0, r4
 800e8b6:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e8ba:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e8be:	3601      	adds	r6, #1
 800e8c0:	f7ff fc48 	bl	800e154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e8c4:	b2b6      	uxth	r6, r6
 800e8c6:	e7ef      	b.n	800e8a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800e8c8:	4a88      	ldr	r2, [pc, #544]	; (800eaec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800e8ca:	6813      	ldr	r3, [r2, #0]
 800e8cc:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e8d0:	2b01      	cmp	r3, #1
 800e8d2:	4690      	mov	r8, r2
 800e8d4:	f040 8093 	bne.w	800e9fe <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 800e8d8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e8dc:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800e8e0:	33aa      	adds	r3, #170	; 0xaa
 800e8e2:	f04f 0900 	mov.w	r9, #0
 800e8e6:	42a8      	cmp	r0, r5
 800e8e8:	f103 0308 	add.w	r3, r3, #8
 800e8ec:	dd0a      	ble.n	800e904 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800e8ee:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e8f2:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800e8f6:	440a      	add	r2, r1
 800e8f8:	b212      	sxth	r2, r2
 800e8fa:	4591      	cmp	r9, r2
 800e8fc:	bfb8      	it	lt
 800e8fe:	4691      	movlt	r9, r2
 800e900:	3501      	adds	r5, #1
 800e902:	e7f0      	b.n	800e8e6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800e904:	4b7a      	ldr	r3, [pc, #488]	; (800eaf0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800e906:	4e7b      	ldr	r6, [pc, #492]	; (800eaf4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800e908:	881d      	ldrh	r5, [r3, #0]
 800e90a:	2300      	movs	r3, #0
 800e90c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e910:	2d0f      	cmp	r5, #15
 800e912:	bf8c      	ite	hi
 800e914:	08ed      	lsrhi	r5, r5, #3
 800e916:	2501      	movls	r5, #1
 800e918:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e91c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800e920:	f8d8 0000 	ldr.w	r0, [r8]
 800e924:	440b      	add	r3, r1
 800e926:	b21b      	sxth	r3, r3
 800e928:	4599      	cmp	r9, r3
 800e92a:	6802      	ldr	r2, [r0, #0]
 800e92c:	dd4a      	ble.n	800e9c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 800e92e:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800e932:	4798      	blx	r3
 800e934:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800e938:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e93c:	4413      	add	r3, r2
 800e93e:	b21b      	sxth	r3, r3
 800e940:	195a      	adds	r2, r3, r5
 800e942:	4290      	cmp	r0, r2
 800e944:	da07      	bge.n	800e956 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800e946:	4581      	cmp	r9, r0
 800e948:	dd05      	ble.n	800e956 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800e94a:	4298      	cmp	r0, r3
 800e94c:	da33      	bge.n	800e9b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800e94e:	2b00      	cmp	r3, #0
 800e950:	dd31      	ble.n	800e9b6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800e952:	4648      	mov	r0, r9
 800e954:	e004      	b.n	800e960 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800e956:	4298      	cmp	r0, r3
 800e958:	dbfb      	blt.n	800e952 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800e95a:	4548      	cmp	r0, r9
 800e95c:	bfa8      	it	ge
 800e95e:	4648      	movge	r0, r9
 800e960:	f9b6 2000 	ldrsh.w	r2, [r6]
 800e964:	f8b7 a000 	ldrh.w	sl, [r7]
 800e968:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e96c:	2100      	movs	r1, #0
 800e96e:	1ac0      	subs	r0, r0, r3
 800e970:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e974:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e978:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e97c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e980:	4553      	cmp	r3, sl
 800e982:	d9c9      	bls.n	800e918 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800e984:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800e988:	ab07      	add	r3, sp, #28
 800e98a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e98e:	6851      	ldr	r1, [r2, #4]
 800e990:	c303      	stmia	r3!, {r0, r1}
 800e992:	a807      	add	r0, sp, #28
 800e994:	a905      	add	r1, sp, #20
 800e996:	f7fb f91f 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800e99a:	a807      	add	r0, sp, #28
 800e99c:	f7fb f95f 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800e9a0:	b920      	cbnz	r0, 800e9ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800e9a2:	6823      	ldr	r3, [r4, #0]
 800e9a4:	a907      	add	r1, sp, #28
 800e9a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e9a8:	4620      	mov	r0, r4
 800e9aa:	4798      	blx	r3
 800e9ac:	f10a 0a01 	add.w	sl, sl, #1
 800e9b0:	fa1f fa8a 	uxth.w	sl, sl
 800e9b4:	e7e2      	b.n	800e97c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800e9b6:	f8d8 0000 	ldr.w	r0, [r8]
 800e9ba:	6803      	ldr	r3, [r0, #0]
 800e9bc:	2101      	movs	r1, #1
 800e9be:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e9c0:	4798      	blx	r3
 800e9c2:	e7a9      	b.n	800e918 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800e9c4:	69d3      	ldr	r3, [r2, #28]
 800e9c6:	4798      	blx	r3
 800e9c8:	4b4b      	ldr	r3, [pc, #300]	; (800eaf8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800e9ca:	781b      	ldrb	r3, [r3, #0]
 800e9cc:	2b00      	cmp	r3, #0
 800e9ce:	f43f af27 	beq.w	800e820 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e9d2:	2300      	movs	r3, #0
 800e9d4:	883d      	ldrh	r5, [r7, #0]
 800e9d6:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800e9da:	34ea      	adds	r4, #234	; 0xea
 800e9dc:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800e9e0:	42ab      	cmp	r3, r5
 800e9e2:	f67f af1d 	bls.w	800e820 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800e9e6:	ab1a      	add	r3, sp, #104	; 0x68
 800e9e8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e9ec:	3b44      	subs	r3, #68	; 0x44
 800e9ee:	e893 0006 	ldmia.w	r3, {r1, r2}
 800e9f2:	4620      	mov	r0, r4
 800e9f4:	3501      	adds	r5, #1
 800e9f6:	f7ff fb8b 	bl	800e110 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800e9fa:	b2ad      	uxth	r5, r5
 800e9fc:	e7ee      	b.n	800e9dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 800e9fe:	2b02      	cmp	r3, #2
 800ea00:	f040 813c 	bne.w	800ec7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>
 800ea04:	4b3d      	ldr	r3, [pc, #244]	; (800eafc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800ea06:	781b      	ldrb	r3, [r3, #0]
 800ea08:	2b01      	cmp	r3, #1
 800ea0a:	d02c      	beq.n	800ea66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 800ea0c:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800ea10:	883a      	ldrh	r2, [r7, #0]
 800ea12:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800ea16:	3201      	adds	r2, #1
 800ea18:	b292      	uxth	r2, r2
 800ea1a:	2900      	cmp	r1, #0
 800ea1c:	d0d4      	beq.n	800e9c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800ea1e:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800ea22:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800ea26:	441d      	add	r5, r3
 800ea28:	b22d      	sxth	r5, r5
 800ea2a:	4610      	mov	r0, r2
 800ea2c:	f04f 0a00 	mov.w	sl, #0
 800ea30:	b283      	uxth	r3, r0
 800ea32:	4299      	cmp	r1, r3
 800ea34:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800ea38:	f240 80c4 	bls.w	800ebc4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 800ea3c:	4426      	add	r6, r4
 800ea3e:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800ea42:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800ea46:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800ea4a:	4573      	cmp	r3, lr
 800ea4c:	4684      	mov	ip, r0
 800ea4e:	f340 80a6 	ble.w	800eb9e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 800ea52:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800ea56:	4475      	add	r5, lr
 800ea58:	b22d      	sxth	r5, r5
 800ea5a:	429d      	cmp	r5, r3
 800ea5c:	bfa8      	it	ge
 800ea5e:	461d      	movge	r5, r3
 800ea60:	3001      	adds	r0, #1
 800ea62:	46e2      	mov	sl, ip
 800ea64:	e7e4      	b.n	800ea30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 800ea66:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800ea6a:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800ea6e:	f1bb 0f00 	cmp.w	fp, #0
 800ea72:	d0a9      	beq.n	800e9c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800ea74:	883b      	ldrh	r3, [r7, #0]
 800ea76:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800ea7a:	3301      	adds	r3, #1
 800ea7c:	b29b      	uxth	r3, r3
 800ea7e:	2600      	movs	r6, #0
 800ea80:	b299      	uxth	r1, r3
 800ea82:	458b      	cmp	fp, r1
 800ea84:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800ea88:	d93a      	bls.n	800eb00 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800ea8a:	4425      	add	r5, r4
 800ea8c:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800ea90:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800ea94:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800ea98:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800ea9c:	4408      	add	r0, r1
 800ea9e:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800eaa2:	4471      	add	r1, lr
 800eaa4:	b200      	sxth	r0, r0
 800eaa6:	b209      	sxth	r1, r1
 800eaa8:	4288      	cmp	r0, r1
 800eaaa:	469c      	mov	ip, r3
 800eaac:	da06      	bge.n	800eabc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b0>
 800eaae:	4586      	cmp	lr, r0
 800eab0:	4672      	mov	r2, lr
 800eab2:	bfb8      	it	lt
 800eab4:	4602      	movlt	r2, r0
 800eab6:	3301      	adds	r3, #1
 800eab8:	4666      	mov	r6, ip
 800eaba:	e7e1      	b.n	800ea80 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 800eabc:	d10b      	bne.n	800ead6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ca>
 800eabe:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800eac2:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800eac6:	458c      	cmp	ip, r1
 800eac8:	bfb4      	ite	lt
 800eaca:	469c      	movlt	ip, r3
 800eacc:	46b4      	movge	ip, r6
 800eace:	4572      	cmp	r2, lr
 800ead0:	bfb8      	it	lt
 800ead2:	4672      	movlt	r2, lr
 800ead4:	e7ef      	b.n	800eab6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800ead6:	428a      	cmp	r2, r1
 800ead8:	bfb8      	it	lt
 800eada:	460a      	movlt	r2, r1
 800eadc:	46b4      	mov	ip, r6
 800eade:	e7ea      	b.n	800eab6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800eae0:	2000d3b0 	.word	0x2000d3b0
 800eae4:	2000d3bc 	.word	0x2000d3bc
 800eae8:	20000060 	.word	0x20000060
 800eaec:	2000d358 	.word	0x2000d358
 800eaf0:	2000d34e 	.word	0x2000d34e
 800eaf4:	2000d34c 	.word	0x2000d34c
 800eaf8:	2000d356 	.word	0x2000d356
 800eafc:	2000d350 	.word	0x2000d350
 800eb00:	1961      	adds	r1, r4, r5
 800eb02:	ab07      	add	r3, sp, #28
 800eb04:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800eb08:	6849      	ldr	r1, [r1, #4]
 800eb0a:	c303      	stmia	r3!, {r0, r1}
 800eb0c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800eb10:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800eb14:	2b13      	cmp	r3, #19
 800eb16:	bfd8      	it	le
 800eb18:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800eb1c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800eb20:	440b      	add	r3, r1
 800eb22:	1a9b      	subs	r3, r3, r2
 800eb24:	a807      	add	r0, sp, #28
 800eb26:	f8ad 3020 	strh.w	r3, [sp, #32]
 800eb2a:	f7ff f89b 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800eb2e:	a807      	add	r0, sp, #28
 800eb30:	f7fb f895 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb34:	2800      	cmp	r0, #0
 800eb36:	d198      	bne.n	800ea6a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800eb38:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800eb3c:	f8d8 0000 	ldr.w	r0, [r8]
 800eb40:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800eb44:	f8d0 e000 	ldr.w	lr, [r0]
 800eb48:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800eb4c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800eb50:	f1bc 0f14 	cmp.w	ip, #20
 800eb54:	bfa8      	it	ge
 800eb56:	f04f 0c14 	movge.w	ip, #20
 800eb5a:	fa1f fc8c 	uxth.w	ip, ip
 800eb5e:	f8cd c000 	str.w	ip, [sp]
 800eb62:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 800eb66:	47d0      	blx	sl
 800eb68:	4682      	mov	sl, r0
 800eb6a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800eb6e:	a807      	add	r0, sp, #28
 800eb70:	f7ff f802 	bl	800db78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800eb74:	6823      	ldr	r3, [r4, #0]
 800eb76:	4425      	add	r5, r4
 800eb78:	4620      	mov	r0, r4
 800eb7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eb7c:	a907      	add	r1, sp, #28
 800eb7e:	4798      	blx	r3
 800eb80:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800eb84:	eba0 000a 	sub.w	r0, r0, sl
 800eb88:	b200      	sxth	r0, r0
 800eb8a:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800eb8e:	2800      	cmp	r0, #0
 800eb90:	f47f af6b 	bne.w	800ea6a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800eb94:	b2b1      	uxth	r1, r6
 800eb96:	4648      	mov	r0, r9
 800eb98:	f7ff faa4 	bl	800e0e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800eb9c:	e765      	b.n	800ea6a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800eb9e:	d10c      	bne.n	800ebba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 800eba0:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800eba4:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800eba8:	45b4      	cmp	ip, r6
 800ebaa:	bfb4      	ite	lt
 800ebac:	4684      	movlt	ip, r0
 800ebae:	46d4      	movge	ip, sl
 800ebb0:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800ebb4:	4433      	add	r3, r6
 800ebb6:	b21b      	sxth	r3, r3
 800ebb8:	e74f      	b.n	800ea5a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 800ebba:	4575      	cmp	r5, lr
 800ebbc:	bfa8      	it	ge
 800ebbe:	4675      	movge	r5, lr
 800ebc0:	46d4      	mov	ip, sl
 800ebc2:	e74d      	b.n	800ea60 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 800ebc4:	eb0b 0006 	add.w	r0, fp, r6
 800ebc8:	4426      	add	r6, r4
 800ebca:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800ebce:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800ebd2:	f1b9 0f13 	cmp.w	r9, #19
 800ebd6:	bfde      	ittt	le
 800ebd8:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800ebdc:	444d      	addle	r5, r9
 800ebde:	b22d      	sxthle	r5, r5
 800ebe0:	f7fb f83d 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ebe4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ebe8:	2800      	cmp	r0, #0
 800ebea:	f47f af16 	bne.w	800ea1a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 800ebee:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800ebf2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ebf6:	eba5 050c 	sub.w	r5, r5, ip
 800ebfa:	fa1f f28c 	uxth.w	r2, ip
 800ebfe:	fa1f f989 	uxth.w	r9, r9
 800ec02:	eb02 0009 	add.w	r0, r2, r9
 800ec06:	2d14      	cmp	r5, #20
 800ec08:	bfa8      	it	ge
 800ec0a:	2514      	movge	r5, #20
 800ec0c:	b200      	sxth	r0, r0
 800ec0e:	fa1f fe85 	uxth.w	lr, r5
 800ec12:	eba0 000c 	sub.w	r0, r0, ip
 800ec16:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800ec1a:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800ec1e:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ec22:	4586      	cmp	lr, r0
 800ec24:	f8d8 0000 	ldr.w	r0, [r8]
 800ec28:	f8ad c01e 	strh.w	ip, [sp, #30]
 800ec2c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ec30:	bfb8      	it	lt
 800ec32:	46f1      	movlt	r9, lr
 800ec34:	6805      	ldr	r5, [r0, #0]
 800ec36:	f8cd 9000 	str.w	r9, [sp]
 800ec3a:	b29b      	uxth	r3, r3
 800ec3c:	b289      	uxth	r1, r1
 800ec3e:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 800ec40:	47a8      	blx	r5
 800ec42:	6823      	ldr	r3, [r4, #0]
 800ec44:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ec48:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ec4a:	a907      	add	r1, sp, #28
 800ec4c:	4620      	mov	r0, r4
 800ec4e:	4798      	blx	r3
 800ec50:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800ec54:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800ec58:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800ec5c:	1a5b      	subs	r3, r3, r1
 800ec5e:	440a      	add	r2, r1
 800ec60:	b21b      	sxth	r3, r3
 800ec62:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800ec66:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800ec6a:	2b00      	cmp	r3, #0
 800ec6c:	f47f aed0 	bne.w	800ea10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800ec70:	fa1f f18a 	uxth.w	r1, sl
 800ec74:	4658      	mov	r0, fp
 800ec76:	f7ff fa35 	bl	800e0e4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ec7a:	e6c9      	b.n	800ea10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800ec7c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ec80:	42ab      	cmp	r3, r5
 800ec82:	f67f aea1 	bls.w	800e9c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800ec86:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800ec8a:	ab07      	add	r3, sp, #28
 800ec8c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ec90:	6851      	ldr	r1, [r2, #4]
 800ec92:	c303      	stmia	r3!, {r0, r1}
 800ec94:	a807      	add	r0, sp, #28
 800ec96:	f7fa ffe2 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec9a:	b920      	cbnz	r0, 800eca6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49a>
 800ec9c:	6823      	ldr	r3, [r4, #0]
 800ec9e:	a907      	add	r1, sp, #28
 800eca0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800eca2:	4620      	mov	r0, r4
 800eca4:	4798      	blx	r3
 800eca6:	3501      	adds	r5, #1
 800eca8:	b2ad      	uxth	r5, r5
 800ecaa:	e7e7      	b.n	800ec7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>

0800ecac <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ecac:	4b03      	ldr	r3, [pc, #12]	; (800ecbc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ecae:	2200      	movs	r2, #0
 800ecb0:	801a      	strh	r2, [r3, #0]
 800ecb2:	805a      	strh	r2, [r3, #2]
 800ecb4:	809a      	strh	r2, [r3, #4]
 800ecb6:	80da      	strh	r2, [r3, #6]
 800ecb8:	4770      	bx	lr
 800ecba:	bf00      	nop
 800ecbc:	2000d3bc 	.word	0x2000d3bc

0800ecc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ecc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecc4:	4607      	mov	r7, r0
 800ecc6:	b099      	sub	sp, #100	; 0x64
 800ecc8:	a802      	add	r0, sp, #8
 800ecca:	4614      	mov	r4, r2
 800eccc:	461d      	mov	r5, r3
 800ecce:	468a      	mov	sl, r1
 800ecd0:	f000 fed9 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800ecd4:	683b      	ldr	r3, [r7, #0]
 800ecd6:	4638      	mov	r0, r7
 800ecd8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ecda:	4798      	blx	r3
 800ecdc:	462a      	mov	r2, r5
 800ecde:	4603      	mov	r3, r0
 800ece0:	4621      	mov	r1, r4
 800ece2:	a802      	add	r0, sp, #8
 800ece4:	f000 ff14 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ece8:	2500      	movs	r5, #0
 800ecea:	462c      	mov	r4, r5
 800ecec:	46a9      	mov	r9, r5
 800ecee:	46a8      	mov	r8, r5
 800ecf0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ecf4:	2300      	movs	r3, #0
 800ecf6:	9301      	str	r3, [sp, #4]
 800ecf8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ecfc:	429c      	cmp	r4, r3
 800ecfe:	d002      	beq.n	800ed06 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800ed00:	455c      	cmp	r4, fp
 800ed02:	bf18      	it	ne
 800ed04:	4625      	movne	r5, r4
 800ed06:	ab01      	add	r3, sp, #4
 800ed08:	463a      	mov	r2, r7
 800ed0a:	4651      	mov	r1, sl
 800ed0c:	a802      	add	r0, sp, #8
 800ed0e:	f001 f9f9 	bl	8010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ed12:	4604      	mov	r4, r0
 800ed14:	b108      	cbz	r0, 800ed1a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800ed16:	280a      	cmp	r0, #10
 800ed18:	d10a      	bne.n	800ed30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800ed1a:	45c1      	cmp	r9, r8
 800ed1c:	bf38      	it	cc
 800ed1e:	46c1      	movcc	r9, r8
 800ed20:	f04f 0800 	mov.w	r8, #0
 800ed24:	2c00      	cmp	r4, #0
 800ed26:	d1e5      	bne.n	800ecf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800ed28:	4648      	mov	r0, r9
 800ed2a:	b019      	add	sp, #100	; 0x64
 800ed2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed30:	9a01      	ldr	r2, [sp, #4]
 800ed32:	2a00      	cmp	r2, #0
 800ed34:	d0de      	beq.n	800ecf4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800ed36:	7b56      	ldrb	r6, [r2, #13]
 800ed38:	683b      	ldr	r3, [r7, #0]
 800ed3a:	8894      	ldrh	r4, [r2, #4]
 800ed3c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ed3e:	0076      	lsls	r6, r6, #1
 800ed40:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800ed44:	7a96      	ldrb	r6, [r2, #10]
 800ed46:	4629      	mov	r1, r5
 800ed48:	4306      	orrs	r6, r0
 800ed4a:	4638      	mov	r0, r7
 800ed4c:	4798      	blx	r3
 800ed4e:	4430      	add	r0, r6
 800ed50:	4480      	add	r8, r0
 800ed52:	fa1f f888 	uxth.w	r8, r8
 800ed56:	e7e5      	b.n	800ed24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800ed58 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ed58:	b508      	push	{r3, lr}
 800ed5a:	6803      	ldr	r3, [r0, #0]
 800ed5c:	68db      	ldr	r3, [r3, #12]
 800ed5e:	4798      	blx	r3
 800ed60:	b128      	cbz	r0, 800ed6e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ed62:	7b43      	ldrb	r3, [r0, #13]
 800ed64:	7a80      	ldrb	r0, [r0, #10]
 800ed66:	005b      	lsls	r3, r3, #1
 800ed68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ed6c:	4318      	orrs	r0, r3
 800ed6e:	bd08      	pop	{r3, pc}

0800ed70 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ed70:	b40e      	push	{r1, r2, r3}
 800ed72:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed74:	b098      	sub	sp, #96	; 0x60
 800ed76:	ab1d      	add	r3, sp, #116	; 0x74
 800ed78:	4605      	mov	r5, r0
 800ed7a:	f853 4b04 	ldr.w	r4, [r3], #4
 800ed7e:	9300      	str	r3, [sp, #0]
 800ed80:	a802      	add	r0, sp, #8
 800ed82:	f000 fe80 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800ed86:	682b      	ldr	r3, [r5, #0]
 800ed88:	4628      	mov	r0, r5
 800ed8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed8c:	4798      	blx	r3
 800ed8e:	ae18      	add	r6, sp, #96	; 0x60
 800ed90:	4603      	mov	r3, r0
 800ed92:	4621      	mov	r1, r4
 800ed94:	9a00      	ldr	r2, [sp, #0]
 800ed96:	2400      	movs	r4, #0
 800ed98:	a802      	add	r0, sp, #8
 800ed9a:	f000 feb9 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ed9e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800eda2:	462a      	mov	r2, r5
 800eda4:	4633      	mov	r3, r6
 800eda6:	4621      	mov	r1, r4
 800eda8:	a802      	add	r0, sp, #8
 800edaa:	f001 f9ab 	bl	8010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edae:	b1f0      	cbz	r0, 800edee <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800edb0:	280a      	cmp	r0, #10
 800edb2:	d018      	beq.n	800ede6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800edb4:	9f01      	ldr	r7, [sp, #4]
 800edb6:	b1b7      	cbz	r7, 800ede6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800edb8:	7b78      	ldrb	r0, [r7, #13]
 800edba:	7a3b      	ldrb	r3, [r7, #8]
 800edbc:	88aa      	ldrh	r2, [r5, #4]
 800edbe:	00c1      	lsls	r1, r0, #3
 800edc0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800edc4:	4319      	orrs	r1, r3
 800edc6:	0643      	lsls	r3, r0, #25
 800edc8:	bf44      	itt	mi
 800edca:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800edce:	b219      	sxthmi	r1, r3
 800edd0:	0100      	lsls	r0, r0, #4
 800edd2:	79fb      	ldrb	r3, [r7, #7]
 800edd4:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800edd8:	4303      	orrs	r3, r0
 800edda:	4413      	add	r3, r2
 800eddc:	1a5b      	subs	r3, r3, r1
 800edde:	b29b      	uxth	r3, r3
 800ede0:	42a3      	cmp	r3, r4
 800ede2:	bfc8      	it	gt
 800ede4:	b21c      	sxthgt	r4, r3
 800ede6:	4633      	mov	r3, r6
 800ede8:	462a      	mov	r2, r5
 800edea:	2100      	movs	r1, #0
 800edec:	e7dc      	b.n	800eda8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800edee:	b2a0      	uxth	r0, r4
 800edf0:	b018      	add	sp, #96	; 0x60
 800edf2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800edf6:	b003      	add	sp, #12
 800edf8:	4770      	bx	lr

0800edfa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800edfa:	b40e      	push	{r1, r2, r3}
 800edfc:	b530      	push	{r4, r5, lr}
 800edfe:	b098      	sub	sp, #96	; 0x60
 800ee00:	ab1b      	add	r3, sp, #108	; 0x6c
 800ee02:	4604      	mov	r4, r0
 800ee04:	f853 5b04 	ldr.w	r5, [r3], #4
 800ee08:	9301      	str	r3, [sp, #4]
 800ee0a:	a802      	add	r0, sp, #8
 800ee0c:	f000 fe3b 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800ee10:	6823      	ldr	r3, [r4, #0]
 800ee12:	4620      	mov	r0, r4
 800ee14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ee16:	4798      	blx	r3
 800ee18:	9a01      	ldr	r2, [sp, #4]
 800ee1a:	4603      	mov	r3, r0
 800ee1c:	4629      	mov	r1, r5
 800ee1e:	a802      	add	r0, sp, #8
 800ee20:	f000 fe76 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ee24:	a802      	add	r0, sp, #8
 800ee26:	f001 fa65 	bl	80102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ee2a:	2401      	movs	r4, #1
 800ee2c:	b2a3      	uxth	r3, r4
 800ee2e:	b140      	cbz	r0, 800ee42 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800ee30:	280a      	cmp	r0, #10
 800ee32:	bf08      	it	eq
 800ee34:	3301      	addeq	r3, #1
 800ee36:	a802      	add	r0, sp, #8
 800ee38:	bf08      	it	eq
 800ee3a:	b21c      	sxtheq	r4, r3
 800ee3c:	f001 fa5a 	bl	80102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ee40:	e7f4      	b.n	800ee2c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800ee42:	4618      	mov	r0, r3
 800ee44:	b018      	add	sp, #96	; 0x60
 800ee46:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ee4a:	b003      	add	sp, #12
 800ee4c:	4770      	bx	lr

0800ee4e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ee4e:	b40e      	push	{r1, r2, r3}
 800ee50:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee52:	b098      	sub	sp, #96	; 0x60
 800ee54:	ab1d      	add	r3, sp, #116	; 0x74
 800ee56:	4604      	mov	r4, r0
 800ee58:	f853 5b04 	ldr.w	r5, [r3], #4
 800ee5c:	9300      	str	r3, [sp, #0]
 800ee5e:	a802      	add	r0, sp, #8
 800ee60:	f000 fe11 	bl	800fa86 <_ZN8touchgfx12TextProviderC1Ev>
 800ee64:	6823      	ldr	r3, [r4, #0]
 800ee66:	4620      	mov	r0, r4
 800ee68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ee6a:	4798      	blx	r3
 800ee6c:	4629      	mov	r1, r5
 800ee6e:	4603      	mov	r3, r0
 800ee70:	9a00      	ldr	r2, [sp, #0]
 800ee72:	a802      	add	r0, sp, #8
 800ee74:	ad18      	add	r5, sp, #96	; 0x60
 800ee76:	f000 fe4b 	bl	800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ee7a:	2100      	movs	r1, #0
 800ee7c:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800ee80:	4622      	mov	r2, r4
 800ee82:	462b      	mov	r3, r5
 800ee84:	a802      	add	r0, sp, #8
 800ee86:	f001 f93d 	bl	8010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ee8a:	26ff      	movs	r6, #255	; 0xff
 800ee8c:	b1d8      	cbz	r0, 800eec6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800ee8e:	280a      	cmp	r0, #10
 800ee90:	d012      	beq.n	800eeb8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800ee92:	9801      	ldr	r0, [sp, #4]
 800ee94:	b180      	cbz	r0, 800eeb8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800ee96:	7b47      	ldrb	r7, [r0, #13]
 800ee98:	7922      	ldrb	r2, [r4, #4]
 800ee9a:	00fb      	lsls	r3, r7, #3
 800ee9c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800eea0:	7a03      	ldrb	r3, [r0, #8]
 800eea2:	430b      	orrs	r3, r1
 800eea4:	0679      	lsls	r1, r7, #25
 800eea6:	bf44      	itt	mi
 800eea8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eeac:	b21b      	sxthmi	r3, r3
 800eeae:	1ad3      	subs	r3, r2, r3
 800eeb0:	b2db      	uxtb	r3, r3
 800eeb2:	429e      	cmp	r6, r3
 800eeb4:	bf28      	it	cs
 800eeb6:	461e      	movcs	r6, r3
 800eeb8:	462b      	mov	r3, r5
 800eeba:	4622      	mov	r2, r4
 800eebc:	2100      	movs	r1, #0
 800eebe:	a802      	add	r0, sp, #8
 800eec0:	f001 f920 	bl	8010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800eec4:	e7e2      	b.n	800ee8c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800eec6:	4630      	mov	r0, r6
 800eec8:	b018      	add	sp, #96	; 0x60
 800eeca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eece:	b003      	add	sp, #12
 800eed0:	4770      	bx	lr

0800eed2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800eed2:	b513      	push	{r0, r1, r4, lr}
 800eed4:	1d01      	adds	r1, r0, #4
 800eed6:	4603      	mov	r3, r0
 800eed8:	c903      	ldmia	r1, {r0, r1}
 800eeda:	466a      	mov	r2, sp
 800eedc:	e882 0003 	stmia.w	r2, {r0, r1}
 800eee0:	2100      	movs	r1, #0
 800eee2:	9100      	str	r1, [sp, #0]
 800eee4:	6819      	ldr	r1, [r3, #0]
 800eee6:	4618      	mov	r0, r3
 800eee8:	690c      	ldr	r4, [r1, #16]
 800eeea:	4611      	mov	r1, r2
 800eeec:	47a0      	blx	r4
 800eeee:	b002      	add	sp, #8
 800eef0:	bd10      	pop	{r4, pc}

0800eef2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800eef2:	b538      	push	{r3, r4, r5, lr}
 800eef4:	680b      	ldr	r3, [r1, #0]
 800eef6:	460c      	mov	r4, r1
 800eef8:	68db      	ldr	r3, [r3, #12]
 800eefa:	4605      	mov	r5, r0
 800eefc:	4798      	blx	r3
 800eefe:	6823      	ldr	r3, [r4, #0]
 800ef00:	4620      	mov	r0, r4
 800ef02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ef04:	4629      	mov	r1, r5
 800ef06:	4798      	blx	r3
 800ef08:	4628      	mov	r0, r5
 800ef0a:	bd38      	pop	{r3, r4, r5, pc}

0800ef0c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800ef0c:	b410      	push	{r4}
 800ef0e:	880a      	ldrh	r2, [r1, #0]
 800ef10:	8884      	ldrh	r4, [r0, #4]
 800ef12:	4422      	add	r2, r4
 800ef14:	800a      	strh	r2, [r1, #0]
 800ef16:	88c4      	ldrh	r4, [r0, #6]
 800ef18:	884a      	ldrh	r2, [r1, #2]
 800ef1a:	4422      	add	r2, r4
 800ef1c:	804a      	strh	r2, [r1, #2]
 800ef1e:	6940      	ldr	r0, [r0, #20]
 800ef20:	b120      	cbz	r0, 800ef2c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800ef22:	6803      	ldr	r3, [r0, #0]
 800ef24:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ef28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ef2a:	4718      	bx	r3
 800ef2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ef30:	4770      	bx	lr

0800ef32 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ef32:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef34:	460b      	mov	r3, r1
 800ef36:	b085      	sub	sp, #20
 800ef38:	4604      	mov	r4, r0
 800ef3a:	b901      	cbnz	r1, 800ef3e <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ef3c:	b322      	cbz	r2, 800ef88 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800ef3e:	1d27      	adds	r7, r4, #4
 800ef40:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ef44:	466e      	mov	r6, sp
 800ef46:	e886 0003 	stmia.w	r6, {r0, r1}
 800ef4a:	88a1      	ldrh	r1, [r4, #4]
 800ef4c:	88e5      	ldrh	r5, [r4, #6]
 800ef4e:	4419      	add	r1, r3
 800ef50:	6823      	ldr	r3, [r4, #0]
 800ef52:	442a      	add	r2, r5
 800ef54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ef56:	b209      	sxth	r1, r1
 800ef58:	4620      	mov	r0, r4
 800ef5a:	b215      	sxth	r5, r2
 800ef5c:	4798      	blx	r3
 800ef5e:	6823      	ldr	r3, [r4, #0]
 800ef60:	4629      	mov	r1, r5
 800ef62:	4620      	mov	r0, r4
 800ef64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ef66:	4798      	blx	r3
 800ef68:	e897 0003 	ldmia.w	r7, {r0, r1}
 800ef6c:	ad02      	add	r5, sp, #8
 800ef6e:	e885 0003 	stmia.w	r5, {r0, r1}
 800ef72:	6960      	ldr	r0, [r4, #20]
 800ef74:	b150      	cbz	r0, 800ef8c <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800ef76:	6803      	ldr	r3, [r0, #0]
 800ef78:	4631      	mov	r1, r6
 800ef7a:	691b      	ldr	r3, [r3, #16]
 800ef7c:	4798      	blx	r3
 800ef7e:	6960      	ldr	r0, [r4, #20]
 800ef80:	6803      	ldr	r3, [r0, #0]
 800ef82:	691b      	ldr	r3, [r3, #16]
 800ef84:	4629      	mov	r1, r5
 800ef86:	4798      	blx	r3
 800ef88:	b005      	add	sp, #20
 800ef8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ef8c:	f7fe fffe 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 800ef90:	6803      	ldr	r3, [r0, #0]
 800ef92:	4631      	mov	r1, r6
 800ef94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ef96:	4798      	blx	r3
 800ef98:	f7fe fff8 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 800ef9c:	6803      	ldr	r3, [r0, #0]
 800ef9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800efa0:	e7f0      	b.n	800ef84 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800efa2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800efa2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800efa4:	8882      	ldrh	r2, [r0, #4]
 800efa6:	880b      	ldrh	r3, [r1, #0]
 800efa8:	4413      	add	r3, r2
 800efaa:	800b      	strh	r3, [r1, #0]
 800efac:	88c2      	ldrh	r2, [r0, #6]
 800efae:	884b      	ldrh	r3, [r1, #2]
 800efb0:	4413      	add	r3, r2
 800efb2:	4602      	mov	r2, r0
 800efb4:	804b      	strh	r3, [r1, #2]
 800efb6:	4605      	mov	r5, r0
 800efb8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800efbc:	460c      	mov	r4, r1
 800efbe:	6851      	ldr	r1, [r2, #4]
 800efc0:	466b      	mov	r3, sp
 800efc2:	c303      	stmia	r3!, {r0, r1}
 800efc4:	4621      	mov	r1, r4
 800efc6:	4668      	mov	r0, sp
 800efc8:	f7fa fe06 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800efcc:	466b      	mov	r3, sp
 800efce:	cb03      	ldmia	r3!, {r0, r1}
 800efd0:	6020      	str	r0, [r4, #0]
 800efd2:	6061      	str	r1, [r4, #4]
 800efd4:	6968      	ldr	r0, [r5, #20]
 800efd6:	b128      	cbz	r0, 800efe4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800efd8:	6803      	ldr	r3, [r0, #0]
 800efda:	691b      	ldr	r3, [r3, #16]
 800efdc:	4621      	mov	r1, r4
 800efde:	4798      	blx	r3
 800efe0:	b003      	add	sp, #12
 800efe2:	bd30      	pop	{r4, r5, pc}
 800efe4:	f7fe ffd2 	bl	800df8c <_ZN8touchgfx11Application11getInstanceEv>
 800efe8:	6803      	ldr	r3, [r0, #0]
 800efea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800efec:	e7f6      	b.n	800efdc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800efee <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800efee:	b570      	push	{r4, r5, r6, lr}
 800eff0:	8882      	ldrh	r2, [r0, #4]
 800eff2:	880b      	ldrh	r3, [r1, #0]
 800eff4:	4413      	add	r3, r2
 800eff6:	800b      	strh	r3, [r1, #0]
 800eff8:	88c2      	ldrh	r2, [r0, #6]
 800effa:	884b      	ldrh	r3, [r1, #2]
 800effc:	460c      	mov	r4, r1
 800effe:	4413      	add	r3, r2
 800f000:	804b      	strh	r3, [r1, #2]
 800f002:	4605      	mov	r5, r0
 800f004:	1d01      	adds	r1, r0, #4
 800f006:	4620      	mov	r0, r4
 800f008:	f7fa fde6 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800f00c:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f010:	2b00      	cmp	r3, #0
 800f012:	dd0b      	ble.n	800f02c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f014:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f018:	2b00      	cmp	r3, #0
 800f01a:	dd07      	ble.n	800f02c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f01c:	6968      	ldr	r0, [r5, #20]
 800f01e:	b128      	cbz	r0, 800f02c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f020:	6803      	ldr	r3, [r0, #0]
 800f022:	4621      	mov	r1, r4
 800f024:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f026:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f02a:	4718      	bx	r3
 800f02c:	bd70      	pop	{r4, r5, r6, pc}

0800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f02e:	b510      	push	{r4, lr}
 800f030:	4604      	mov	r4, r0
 800f032:	4608      	mov	r0, r1
 800f034:	2300      	movs	r3, #0
 800f036:	8023      	strh	r3, [r4, #0]
 800f038:	8063      	strh	r3, [r4, #2]
 800f03a:	6803      	ldr	r3, [r0, #0]
 800f03c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f040:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f044:	80a1      	strh	r1, [r4, #4]
 800f046:	80e2      	strh	r2, [r4, #6]
 800f048:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f04a:	4621      	mov	r1, r4
 800f04c:	4798      	blx	r3
 800f04e:	4620      	mov	r0, r4
 800f050:	bd10      	pop	{r4, pc}
	...

0800f054 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800f054:	b530      	push	{r4, r5, lr}
 800f056:	8083      	strh	r3, [r0, #4]
 800f058:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800f05c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800f060:	7183      	strb	r3, [r0, #6]
 800f062:	79c3      	ldrb	r3, [r0, #7]
 800f064:	6101      	str	r1, [r0, #16]
 800f066:	f365 0306 	bfi	r3, r5, #0, #7
 800f06a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800f06e:	8282      	strh	r2, [r0, #20]
 800f070:	f365 13c7 	bfi	r3, r5, #7, #1
 800f074:	71c3      	strb	r3, [r0, #7]
 800f076:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800f07a:	7203      	strb	r3, [r0, #8]
 800f07c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800f080:	7243      	strb	r3, [r0, #9]
 800f082:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800f086:	8143      	strh	r3, [r0, #10]
 800f088:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800f08c:	8183      	strh	r3, [r0, #12]
 800f08e:	4b01      	ldr	r3, [pc, #4]	; (800f094 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800f090:	6003      	str	r3, [r0, #0]
 800f092:	bd30      	pop	{r4, r5, pc}
 800f094:	080219a8 	.word	0x080219a8

0800f098 <_ZNK8touchgfx9ConstFont4findEt>:
 800f098:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f09a:	6904      	ldr	r4, [r0, #16]
 800f09c:	b3bc      	cbz	r4, 800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f09e:	88a3      	ldrh	r3, [r4, #4]
 800f0a0:	8a82      	ldrh	r2, [r0, #20]
 800f0a2:	1acb      	subs	r3, r1, r3
 800f0a4:	f102 32ff 	add.w	r2, r2, #4294967295
 800f0a8:	d431      	bmi.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f0aa:	4293      	cmp	r3, r2
 800f0ac:	dd0c      	ble.n	800f0c8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800f0ae:	230e      	movs	r3, #14
 800f0b0:	fb03 4302 	mla	r3, r3, r2, r4
 800f0b4:	889b      	ldrh	r3, [r3, #4]
 800f0b6:	1a5b      	subs	r3, r3, r1
 800f0b8:	1ad3      	subs	r3, r2, r3
 800f0ba:	429a      	cmp	r2, r3
 800f0bc:	db27      	blt.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f0be:	2b00      	cmp	r3, #0
 800f0c0:	bfbc      	itt	lt
 800f0c2:	2302      	movlt	r3, #2
 800f0c4:	fb92 f3f3 	sdivlt	r3, r2, r3
 800f0c8:	2500      	movs	r5, #0
 800f0ca:	260e      	movs	r6, #14
 800f0cc:	4295      	cmp	r5, r2
 800f0ce:	dc1e      	bgt.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f0d0:	fb06 4003 	mla	r0, r6, r3, r4
 800f0d4:	8887      	ldrh	r7, [r0, #4]
 800f0d6:	42b9      	cmp	r1, r7
 800f0d8:	d01a      	beq.n	800f110 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f0da:	d20d      	bcs.n	800f0f8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f0dc:	1e5a      	subs	r2, r3, #1
 800f0de:	4295      	cmp	r5, r2
 800f0e0:	dc15      	bgt.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f0e2:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f0e6:	1a5b      	subs	r3, r3, r1
 800f0e8:	1ad3      	subs	r3, r2, r3
 800f0ea:	429a      	cmp	r2, r3
 800f0ec:	db0f      	blt.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f0ee:	429d      	cmp	r5, r3
 800f0f0:	ddec      	ble.n	800f0cc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f0f2:	1953      	adds	r3, r2, r5
 800f0f4:	105b      	asrs	r3, r3, #1
 800f0f6:	e7e9      	b.n	800f0cc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f0f8:	1c5d      	adds	r5, r3, #1
 800f0fa:	42aa      	cmp	r2, r5
 800f0fc:	db07      	blt.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f0fe:	8a43      	ldrh	r3, [r0, #18]
 800f100:	1acb      	subs	r3, r1, r3
 800f102:	442b      	add	r3, r5
 800f104:	429d      	cmp	r5, r3
 800f106:	dc02      	bgt.n	800f10e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f108:	429a      	cmp	r2, r3
 800f10a:	dadf      	bge.n	800f0cc <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f10c:	e7f1      	b.n	800f0f2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f10e:	2000      	movs	r0, #0
 800f110:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f112 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f112:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f114:	4604      	mov	r4, r0
 800f116:	4617      	mov	r7, r2
 800f118:	461e      	mov	r6, r3
 800f11a:	b911      	cbnz	r1, 800f122 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f11c:	2500      	movs	r5, #0
 800f11e:	4628      	mov	r0, r5
 800f120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f122:	290a      	cmp	r1, #10
 800f124:	d0fa      	beq.n	800f11c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f126:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f12a:	4291      	cmp	r1, r2
 800f12c:	d0f6      	beq.n	800f11c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f12e:	f242 020b 	movw	r2, #8203	; 0x200b
 800f132:	4291      	cmp	r1, r2
 800f134:	d0f2      	beq.n	800f11c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f136:	f7ff ffaf 	bl	800f098 <_ZNK8touchgfx9ConstFont4findEt>
 800f13a:	4605      	mov	r5, r0
 800f13c:	b950      	cbnz	r0, 800f154 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f13e:	6823      	ldr	r3, [r4, #0]
 800f140:	4620      	mov	r0, r4
 800f142:	691b      	ldr	r3, [r3, #16]
 800f144:	4798      	blx	r3
 800f146:	4601      	mov	r1, r0
 800f148:	4620      	mov	r0, r4
 800f14a:	f7ff ffa5 	bl	800f098 <_ZNK8touchgfx9ConstFont4findEt>
 800f14e:	4605      	mov	r5, r0
 800f150:	2800      	cmp	r0, #0
 800f152:	d0e3      	beq.n	800f11c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f154:	6823      	ldr	r3, [r4, #0]
 800f156:	4629      	mov	r1, r5
 800f158:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f15a:	4620      	mov	r0, r4
 800f15c:	4798      	blx	r3
 800f15e:	6038      	str	r0, [r7, #0]
 800f160:	6823      	ldr	r3, [r4, #0]
 800f162:	4620      	mov	r0, r4
 800f164:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f166:	4798      	blx	r3
 800f168:	7030      	strb	r0, [r6, #0]
 800f16a:	e7d8      	b.n	800f11e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f16c <_ZN8touchgfx6memsetEPvhm>:
 800f16c:	4402      	add	r2, r0
 800f16e:	4290      	cmp	r0, r2
 800f170:	d002      	beq.n	800f178 <_ZN8touchgfx6memsetEPvhm+0xc>
 800f172:	f800 1b01 	strb.w	r1, [r0], #1
 800f176:	e7fa      	b.n	800f16e <_ZN8touchgfx6memsetEPvhm+0x2>
 800f178:	4770      	bx	lr

0800f17a <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800f17a:	b538      	push	{r3, r4, r5, lr}
 800f17c:	4605      	mov	r5, r0
 800f17e:	f001 fe7f 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f182:	4604      	mov	r4, r0
 800f184:	4628      	mov	r0, r5
 800f186:	f001 fdb7 	bl	8010cf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800f18a:	2800      	cmp	r0, #0
 800f18c:	bf14      	ite	ne
 800f18e:	2002      	movne	r0, #2
 800f190:	2000      	moveq	r0, #0
 800f192:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800f196:	b280      	uxth	r0, r0
 800f198:	bd38      	pop	{r3, r4, r5, pc}

0800f19a <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800f19a:	b538      	push	{r3, r4, r5, lr}
 800f19c:	4605      	mov	r5, r0
 800f19e:	f001 fe6f 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f1a2:	4604      	mov	r4, r0
 800f1a4:	4628      	mov	r0, r5
 800f1a6:	f001 fda7 	bl	8010cf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800f1aa:	2800      	cmp	r0, #0
 800f1ac:	bf14      	ite	ne
 800f1ae:	2002      	movne	r0, #2
 800f1b0:	2000      	moveq	r0, #0
 800f1b2:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800f1b6:	f040 0001 	orr.w	r0, r0, #1
 800f1ba:	b280      	uxth	r0, r0
 800f1bc:	bd38      	pop	{r3, r4, r5, pc}

0800f1be <_ZN8touchgfx4clzuEm>:
 800f1be:	4603      	mov	r3, r0
 800f1c0:	b1c8      	cbz	r0, 800f1f6 <_ZN8touchgfx4clzuEm+0x38>
 800f1c2:	0c02      	lsrs	r2, r0, #16
 800f1c4:	0412      	lsls	r2, r2, #16
 800f1c6:	b9a2      	cbnz	r2, 800f1f2 <_ZN8touchgfx4clzuEm+0x34>
 800f1c8:	0403      	lsls	r3, r0, #16
 800f1ca:	2010      	movs	r0, #16
 800f1cc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800f1d0:	bf04      	itt	eq
 800f1d2:	021b      	lsleq	r3, r3, #8
 800f1d4:	3008      	addeq	r0, #8
 800f1d6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800f1da:	bf04      	itt	eq
 800f1dc:	011b      	lsleq	r3, r3, #4
 800f1de:	3004      	addeq	r0, #4
 800f1e0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800f1e4:	bf04      	itt	eq
 800f1e6:	009b      	lsleq	r3, r3, #2
 800f1e8:	3002      	addeq	r0, #2
 800f1ea:	2b00      	cmp	r3, #0
 800f1ec:	db04      	blt.n	800f1f8 <_ZN8touchgfx4clzuEm+0x3a>
 800f1ee:	3001      	adds	r0, #1
 800f1f0:	4770      	bx	lr
 800f1f2:	2000      	movs	r0, #0
 800f1f4:	e7ea      	b.n	800f1cc <_ZN8touchgfx4clzuEm+0xe>
 800f1f6:	2020      	movs	r0, #32
 800f1f8:	4770      	bx	lr

0800f1fa <_ZN8touchgfx7muldivuEmmmRm>:
 800f1fa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1fe:	4680      	mov	r8, r0
 800f200:	460f      	mov	r7, r1
 800f202:	4615      	mov	r5, r2
 800f204:	461e      	mov	r6, r3
 800f206:	f7ff ffda 	bl	800f1be <_ZN8touchgfx4clzuEm>
 800f20a:	b998      	cbnz	r0, 800f234 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 800f20c:	4608      	mov	r0, r1
 800f20e:	f7ff ffd6 	bl	800f1be <_ZN8touchgfx4clzuEm>
 800f212:	2800      	cmp	r0, #0
 800f214:	dd08      	ble.n	800f228 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 800f216:	4633      	mov	r3, r6
 800f218:	462a      	mov	r2, r5
 800f21a:	4641      	mov	r1, r8
 800f21c:	4638      	mov	r0, r7
 800f21e:	f7ff ffec 	bl	800f1fa <_ZN8touchgfx7muldivuEmmmRm>
 800f222:	b003      	add	sp, #12
 800f224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f228:	f04f 33ff 	mov.w	r3, #4294967295
 800f22c:	6033      	str	r3, [r6, #0]
 800f22e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800f232:	e7f6      	b.n	800f222 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 800f234:	fa31 f900 	lsrs.w	r9, r1, r0
 800f238:	fb01 f308 	mul.w	r3, r1, r8
 800f23c:	d105      	bne.n	800f24a <_ZN8touchgfx7muldivuEmmmRm+0x50>
 800f23e:	fbb3 f0f5 	udiv	r0, r3, r5
 800f242:	fb05 3510 	mls	r5, r5, r0, r3
 800f246:	6035      	str	r5, [r6, #0]
 800f248:	e7eb      	b.n	800f222 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 800f24a:	2301      	movs	r3, #1
 800f24c:	fa08 fb00 	lsl.w	fp, r8, r0
 800f250:	fa03 f000 	lsl.w	r0, r3, r0
 800f254:	3801      	subs	r0, #1
 800f256:	462a      	mov	r2, r5
 800f258:	4633      	mov	r3, r6
 800f25a:	4641      	mov	r1, r8
 800f25c:	4038      	ands	r0, r7
 800f25e:	f7ff ffcc 	bl	800f1fa <_ZN8touchgfx7muldivuEmmmRm>
 800f262:	fbbb faf5 	udiv	sl, fp, r5
 800f266:	462a      	mov	r2, r5
 800f268:	4607      	mov	r7, r0
 800f26a:	ab01      	add	r3, sp, #4
 800f26c:	fb05 b11a 	mls	r1, r5, sl, fp
 800f270:	4648      	mov	r0, r9
 800f272:	f7ff ffc2 	bl	800f1fa <_ZN8touchgfx7muldivuEmmmRm>
 800f276:	9b01      	ldr	r3, [sp, #4]
 800f278:	6832      	ldr	r2, [r6, #0]
 800f27a:	fb09 f40a 	mul.w	r4, r9, sl
 800f27e:	441a      	add	r2, r3
 800f280:	fbb2 f3f5 	udiv	r3, r2, r5
 800f284:	441c      	add	r4, r3
 800f286:	443c      	add	r4, r7
 800f288:	4420      	add	r0, r4
 800f28a:	fb05 2513 	mls	r5, r5, r3, r2
 800f28e:	e7da      	b.n	800f246 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0800f290 <_ZN8touchgfx6muldivElllRl>:
 800f290:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f292:	2800      	cmp	r0, #0
 800f294:	bfba      	itte	lt
 800f296:	4240      	neglt	r0, r0
 800f298:	f04f 34ff 	movlt.w	r4, #4294967295
 800f29c:	2401      	movge	r4, #1
 800f29e:	2900      	cmp	r1, #0
 800f2a0:	bfbc      	itt	lt
 800f2a2:	4249      	neglt	r1, r1
 800f2a4:	4264      	neglt	r4, r4
 800f2a6:	2a00      	cmp	r2, #0
 800f2a8:	bfb6      	itet	lt
 800f2aa:	4265      	neglt	r5, r4
 800f2ac:	4625      	movge	r5, r4
 800f2ae:	4252      	neglt	r2, r2
 800f2b0:	4288      	cmp	r0, r1
 800f2b2:	461e      	mov	r6, r3
 800f2b4:	bfc2      	ittt	gt
 800f2b6:	4603      	movgt	r3, r0
 800f2b8:	4608      	movgt	r0, r1
 800f2ba:	4619      	movgt	r1, r3
 800f2bc:	ab01      	add	r3, sp, #4
 800f2be:	f7ff ff9c 	bl	800f1fa <_ZN8touchgfx7muldivuEmmmRm>
 800f2c2:	9b01      	ldr	r3, [sp, #4]
 800f2c4:	4368      	muls	r0, r5
 800f2c6:	435c      	muls	r4, r3
 800f2c8:	6034      	str	r4, [r6, #0]
 800f2ca:	b002      	add	sp, #8
 800f2cc:	bd70      	pop	{r4, r5, r6, pc}

0800f2ce <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800f2ce:	2000      	movs	r0, #0
 800f2d0:	4770      	bx	lr

0800f2d2 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800f2d2:	2001      	movs	r0, #1
 800f2d4:	4770      	bx	lr

0800f2d6 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800f2d6:	2002      	movs	r0, #2
 800f2d8:	4770      	bx	lr

0800f2da <_ZN8touchgfx6ScreenD1Ev>:
 800f2da:	4770      	bx	lr

0800f2dc <_ZN8touchgfx12GestureEventD1Ev>:
 800f2dc:	4770      	bx	lr

0800f2de <_ZN8touchgfx9DragEventD1Ev>:
 800f2de:	4770      	bx	lr

0800f2e0 <_ZN8touchgfx10ClickEventD1Ev>:
 800f2e0:	4770      	bx	lr

0800f2e2 <_ZN8touchgfx10ClickEventD0Ev>:
 800f2e2:	b510      	push	{r4, lr}
 800f2e4:	210c      	movs	r1, #12
 800f2e6:	4604      	mov	r4, r0
 800f2e8:	f00e fe4f 	bl	801df8a <_ZdlPvj>
 800f2ec:	4620      	mov	r0, r4
 800f2ee:	bd10      	pop	{r4, pc}

0800f2f0 <_ZN8touchgfx9DragEventD0Ev>:
 800f2f0:	b510      	push	{r4, lr}
 800f2f2:	2110      	movs	r1, #16
 800f2f4:	4604      	mov	r4, r0
 800f2f6:	f00e fe48 	bl	801df8a <_ZdlPvj>
 800f2fa:	4620      	mov	r0, r4
 800f2fc:	bd10      	pop	{r4, pc}

0800f2fe <_ZN8touchgfx12GestureEventD0Ev>:
 800f2fe:	b510      	push	{r4, lr}
 800f300:	210c      	movs	r1, #12
 800f302:	4604      	mov	r4, r0
 800f304:	f00e fe41 	bl	801df8a <_ZdlPvj>
 800f308:	4620      	mov	r0, r4
 800f30a:	bd10      	pop	{r4, pc}

0800f30c <_ZN8touchgfx6ScreenD0Ev>:
 800f30c:	b510      	push	{r4, lr}
 800f30e:	213c      	movs	r1, #60	; 0x3c
 800f310:	4604      	mov	r4, r0
 800f312:	f00e fe3a 	bl	801df8a <_ZdlPvj>
 800f316:	4620      	mov	r0, r4
 800f318:	bd10      	pop	{r4, pc}
	...

0800f31c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f31c:	b530      	push	{r4, r5, lr}
 800f31e:	460d      	mov	r5, r1
 800f320:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f322:	b087      	sub	sp, #28
 800f324:	4604      	mov	r4, r0
 800f326:	b301      	cbz	r1, 800f36a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f328:	a801      	add	r0, sp, #4
 800f32a:	f7ff fe80 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f32e:	892a      	ldrh	r2, [r5, #8]
 800f330:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f334:	7928      	ldrb	r0, [r5, #4]
 800f336:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f33a:	f88d 0010 	strb.w	r0, [sp, #16]
 800f33e:	1ad2      	subs	r2, r2, r3
 800f340:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f342:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f344:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f348:	441a      	add	r2, r3
 800f34a:	896b      	ldrh	r3, [r5, #10]
 800f34c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f350:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f354:	1b5b      	subs	r3, r3, r5
 800f356:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f358:	442b      	add	r3, r5
 800f35a:	4d05      	ldr	r5, [pc, #20]	; (800f370 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f35c:	9503      	str	r5, [sp, #12]
 800f35e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f362:	6803      	ldr	r3, [r0, #0]
 800f364:	a903      	add	r1, sp, #12
 800f366:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f368:	4798      	blx	r3
 800f36a:	b007      	add	sp, #28
 800f36c:	bd30      	pop	{r4, r5, pc}
 800f36e:	bf00      	nop
 800f370:	08021a24 	.word	0x08021a24

0800f374 <_ZNK8touchgfx4Rect9intersectEss>:
 800f374:	b510      	push	{r4, lr}
 800f376:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f37a:	428b      	cmp	r3, r1
 800f37c:	dc10      	bgt.n	800f3a0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800f37e:	8884      	ldrh	r4, [r0, #4]
 800f380:	4423      	add	r3, r4
 800f382:	b21b      	sxth	r3, r3
 800f384:	4299      	cmp	r1, r3
 800f386:	da0b      	bge.n	800f3a0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800f388:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f38c:	4293      	cmp	r3, r2
 800f38e:	dc07      	bgt.n	800f3a0 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800f390:	88c0      	ldrh	r0, [r0, #6]
 800f392:	4418      	add	r0, r3
 800f394:	b200      	sxth	r0, r0
 800f396:	4282      	cmp	r2, r0
 800f398:	bfac      	ite	ge
 800f39a:	2000      	movge	r0, #0
 800f39c:	2001      	movlt	r0, #1
 800f39e:	bd10      	pop	{r4, pc}
 800f3a0:	2000      	movs	r0, #0
 800f3a2:	e7fc      	b.n	800f39e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800f3a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f3a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3a6:	460c      	mov	r4, r1
 800f3a8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f3aa:	b089      	sub	sp, #36	; 0x24
 800f3ac:	4605      	mov	r5, r0
 800f3ae:	2900      	cmp	r1, #0
 800f3b0:	d054      	beq.n	800f45c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800f3b2:	4668      	mov	r0, sp
 800f3b4:	f7ff fe3b 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f3b8:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800f3ba:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800f3bc:	8922      	ldrh	r2, [r4, #8]
 800f3be:	88e1      	ldrh	r1, [r4, #6]
 800f3c0:	443a      	add	r2, r7
 800f3c2:	4431      	add	r1, r6
 800f3c4:	b212      	sxth	r2, r2
 800f3c6:	b209      	sxth	r1, r1
 800f3c8:	4668      	mov	r0, sp
 800f3ca:	f7ff ffd3 	bl	800f374 <_ZNK8touchgfx4Rect9intersectEss>
 800f3ce:	b1d0      	cbz	r0, 800f406 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800f3d0:	89a2      	ldrh	r2, [r4, #12]
 800f3d2:	8961      	ldrh	r1, [r4, #10]
 800f3d4:	443a      	add	r2, r7
 800f3d6:	4431      	add	r1, r6
 800f3d8:	b212      	sxth	r2, r2
 800f3da:	b209      	sxth	r1, r1
 800f3dc:	4668      	mov	r0, sp
 800f3de:	f7ff ffc9 	bl	800f374 <_ZNK8touchgfx4Rect9intersectEss>
 800f3e2:	4603      	mov	r3, r0
 800f3e4:	b978      	cbnz	r0, 800f406 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800f3e6:	4a1e      	ldr	r2, [pc, #120]	; (800f460 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800f3e8:	9204      	str	r2, [sp, #16]
 800f3ea:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f3ec:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f3f0:	2202      	movs	r2, #2
 800f3f2:	f88d 2014 	strb.w	r2, [sp, #20]
 800f3f6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f3fa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f3fe:	6803      	ldr	r3, [r0, #0]
 800f400:	a904      	add	r1, sp, #16
 800f402:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f404:	4798      	blx	r3
 800f406:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800f408:	a802      	add	r0, sp, #8
 800f40a:	f7ff fe10 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f40e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f412:	88e0      	ldrh	r0, [r4, #6]
 800f414:	8961      	ldrh	r1, [r4, #10]
 800f416:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f41a:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800f41e:	8923      	ldrh	r3, [r4, #8]
 800f420:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f422:	7927      	ldrb	r7, [r4, #4]
 800f424:	f88d 7014 	strb.w	r7, [sp, #20]
 800f428:	1a80      	subs	r0, r0, r2
 800f42a:	1a89      	subs	r1, r1, r2
 800f42c:	89a2      	ldrh	r2, [r4, #12]
 800f42e:	4c0d      	ldr	r4, [pc, #52]	; (800f464 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800f430:	9404      	str	r4, [sp, #16]
 800f432:	4460      	add	r0, ip
 800f434:	eba3 030e 	sub.w	r3, r3, lr
 800f438:	eba2 020e 	sub.w	r2, r2, lr
 800f43c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f440:	4433      	add	r3, r6
 800f442:	4461      	add	r1, ip
 800f444:	4432      	add	r2, r6
 800f446:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f448:	f8ad 101a 	strh.w	r1, [sp, #26]
 800f44c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f450:	f8ad 201c 	strh.w	r2, [sp, #28]
 800f454:	6803      	ldr	r3, [r0, #0]
 800f456:	a904      	add	r1, sp, #16
 800f458:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f45a:	4798      	blx	r3
 800f45c:	b009      	add	sp, #36	; 0x24
 800f45e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f460:	080219fc 	.word	0x080219fc
 800f464:	08021a10 	.word	0x08021a10

0800f468 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f46c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800f470:	790b      	ldrb	r3, [r1, #4]
 800f472:	b0a1      	sub	sp, #132	; 0x84
 800f474:	4604      	mov	r4, r0
 800f476:	460d      	mov	r5, r1
 800f478:	f1b9 0f00 	cmp.w	r9, #0
 800f47c:	d00f      	beq.n	800f49e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800f47e:	2b00      	cmp	r3, #0
 800f480:	f040 80a0 	bne.w	800f5c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f484:	b021      	add	sp, #132	; 0x84
 800f486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f48a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f48e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f492:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f496:	1d20      	adds	r0, r4, #4
 800f498:	f7fa fae4 	bl	8009a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f49c:	e092      	b.n	800f5c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800f49e:	2b00      	cmp	r3, #0
 800f4a0:	d1f0      	bne.n	800f484 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f4a2:	4b5e      	ldr	r3, [pc, #376]	; (800f61c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800f4a4:	681b      	ldr	r3, [r3, #0]
 800f4a6:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800f4aa:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800f4ae:	f1ba 0f03 	cmp.w	sl, #3
 800f4b2:	ddea      	ble.n	800f48a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800f4b4:	f1ba 0f0c 	cmp.w	sl, #12
 800f4b8:	f04f 0303 	mov.w	r3, #3
 800f4bc:	bfdc      	itt	le
 800f4be:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800f4c2:	fb92 f3f3 	sdivle	r3, r2, r3
 800f4c6:	9301      	str	r3, [sp, #4]
 800f4c8:	4b55      	ldr	r3, [pc, #340]	; (800f620 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800f4ca:	4956      	ldr	r1, [pc, #344]	; (800f624 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800f4cc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f4d0:	4b55      	ldr	r3, [pc, #340]	; (800f628 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800f4d2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800f4d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f4da:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f4de:	ab0e      	add	r3, sp, #56	; 0x38
 800f4e0:	2248      	movs	r2, #72	; 0x48
 800f4e2:	2600      	movs	r6, #0
 800f4e4:	4618      	mov	r0, r3
 800f4e6:	960a      	str	r6, [sp, #40]	; 0x28
 800f4e8:	f00e fdfc 	bl	801e0e4 <memcpy>
 800f4ec:	f04f 32ff 	mov.w	r2, #4294967295
 800f4f0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800f4f4:	f8cd a008 	str.w	sl, [sp, #8]
 800f4f8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f4fc:	fb93 f3f2 	sdiv	r3, r3, r2
 800f500:	b29b      	uxth	r3, r3
 800f502:	46b3      	mov	fp, r6
 800f504:	9303      	str	r3, [sp, #12]
 800f506:	2300      	movs	r3, #0
 800f508:	9309      	str	r3, [sp, #36]	; 0x24
 800f50a:	9b07      	ldr	r3, [sp, #28]
 800f50c:	9a03      	ldr	r2, [sp, #12]
 800f50e:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800f512:	88ef      	ldrh	r7, [r5, #6]
 800f514:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800f518:	fb13 f302 	smulbb	r3, r3, r2
 800f51c:	b29b      	uxth	r3, r3
 800f51e:	9304      	str	r3, [sp, #16]
 800f520:	9b07      	ldr	r3, [sp, #28]
 800f522:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800f526:	a80a      	add	r0, sp, #40	; 0x28
 800f528:	685b      	ldr	r3, [r3, #4]
 800f52a:	fb13 f302 	smulbb	r3, r3, r2
 800f52e:	b29b      	uxth	r3, r3
 800f530:	9305      	str	r3, [sp, #20]
 800f532:	9b04      	ldr	r3, [sp, #16]
 800f534:	441f      	add	r7, r3
 800f536:	9b05      	ldr	r3, [sp, #20]
 800f538:	4498      	add	r8, r3
 800f53a:	b23f      	sxth	r7, r7
 800f53c:	fa0f f888 	sxth.w	r8, r8
 800f540:	4642      	mov	r2, r8
 800f542:	4639      	mov	r1, r7
 800f544:	f7ff ff16 	bl	800f374 <_ZNK8touchgfx4Rect9intersectEss>
 800f548:	b380      	cbz	r0, 800f5ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f54a:	4639      	mov	r1, r7
 800f54c:	ab09      	add	r3, sp, #36	; 0x24
 800f54e:	4642      	mov	r2, r8
 800f550:	1d20      	adds	r0, r4, #4
 800f552:	f7fa fa87 	bl	8009a64 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f556:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f558:	b341      	cbz	r1, 800f5ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f55a:	4549      	cmp	r1, r9
 800f55c:	d026      	beq.n	800f5ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f55e:	a80c      	add	r0, sp, #48	; 0x30
 800f560:	f7ff fd65 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f564:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800f568:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f56c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800f570:	2002      	movs	r0, #2
 800f572:	fb92 f2f0 	sdiv	r2, r2, r0
 800f576:	440a      	add	r2, r1
 800f578:	1a99      	subs	r1, r3, r2
 800f57a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800f57e:	fb93 f3f0 	sdiv	r3, r3, r0
 800f582:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800f586:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800f58a:	4403      	add	r3, r0
 800f58c:	1ad3      	subs	r3, r2, r3
 800f58e:	435b      	muls	r3, r3
 800f590:	9a06      	ldr	r2, [sp, #24]
 800f592:	fb01 3301 	mla	r3, r1, r1, r3
 800f596:	4293      	cmp	r3, r2
 800f598:	d208      	bcs.n	800f5ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800f59a:	9a04      	ldr	r2, [sp, #16]
 800f59c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800f5a0:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f5a2:	9a05      	ldr	r2, [sp, #20]
 800f5a4:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800f5a8:	86e2      	strh	r2, [r4, #54]	; 0x36
 800f5aa:	9306      	str	r3, [sp, #24]
 800f5ac:	f10b 0b02 	add.w	fp, fp, #2
 800f5b0:	f1bb 0f08 	cmp.w	fp, #8
 800f5b4:	dda7      	ble.n	800f506 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f5b6:	9b02      	ldr	r3, [sp, #8]
 800f5b8:	4453      	add	r3, sl
 800f5ba:	9302      	str	r3, [sp, #8]
 800f5bc:	9b01      	ldr	r3, [sp, #4]
 800f5be:	3601      	adds	r6, #1
 800f5c0:	42b3      	cmp	r3, r6
 800f5c2:	d199      	bne.n	800f4f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800f5c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f5c6:	2900      	cmp	r1, #0
 800f5c8:	f43f af5c 	beq.w	800f484 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f5cc:	a80c      	add	r0, sp, #48	; 0x30
 800f5ce:	f7ff fd2e 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f5d2:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800f5d6:	88ea      	ldrh	r2, [r5, #6]
 800f5d8:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800f5dc:	7929      	ldrb	r1, [r5, #4]
 800f5de:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800f5e2:	1ad2      	subs	r2, r2, r3
 800f5e4:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f5e6:	441a      	add	r2, r3
 800f5e8:	892b      	ldrh	r3, [r5, #8]
 800f5ea:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800f5ee:	1a1b      	subs	r3, r3, r0
 800f5f0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800f5f2:	4403      	add	r3, r0
 800f5f4:	480d      	ldr	r0, [pc, #52]	; (800f62c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800f5f6:	900e      	str	r0, [sp, #56]	; 0x38
 800f5f8:	2600      	movs	r6, #0
 800f5fa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f5fc:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800f600:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800f604:	6803      	ldr	r3, [r0, #0]
 800f606:	a90e      	add	r1, sp, #56	; 0x38
 800f608:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800f60a:	4798      	blx	r3
 800f60c:	792b      	ldrb	r3, [r5, #4]
 800f60e:	2b00      	cmp	r3, #0
 800f610:	f43f af38 	beq.w	800f484 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f614:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f618:	e734      	b.n	800f484 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800f61a:	bf00      	nop
 800f61c:	2000d358 	.word	0x2000d358
 800f620:	2000d34c 	.word	0x2000d34c
 800f624:	0801f160 	.word	0x0801f160
 800f628:	2000d34e 	.word	0x2000d34e
 800f62c:	080219fc 	.word	0x080219fc

0800f630 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f630:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f632:	4604      	mov	r4, r0
 800f634:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f638:	3201      	adds	r2, #1
 800f63a:	d112      	bne.n	800f662 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f63c:	6803      	ldr	r3, [r0, #0]
 800f63e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f642:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f646:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f64a:	2500      	movs	r5, #0
 800f64c:	9500      	str	r5, [sp, #0]
 800f64e:	466d      	mov	r5, sp
 800f650:	4629      	mov	r1, r5
 800f652:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f656:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f658:	4798      	blx	r3
 800f65a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f65e:	e884 0003 	stmia.w	r4, {r0, r1}
 800f662:	4620      	mov	r0, r4
 800f664:	b003      	add	sp, #12
 800f666:	bd30      	pop	{r4, r5, pc}

0800f668 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f668:	b513      	push	{r0, r1, r4, lr}
 800f66a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f66e:	3301      	adds	r3, #1
 800f670:	4604      	mov	r4, r0
 800f672:	d109      	bne.n	800f688 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f674:	4601      	mov	r1, r0
 800f676:	4668      	mov	r0, sp
 800f678:	f7ff fcd9 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f67c:	f8bd 3000 	ldrh.w	r3, [sp]
 800f680:	8423      	strh	r3, [r4, #32]
 800f682:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f686:	8463      	strh	r3, [r4, #34]	; 0x22
 800f688:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f68c:	b002      	add	sp, #8
 800f68e:	bd10      	pop	{r4, pc}

0800f690 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f690:	b513      	push	{r0, r1, r4, lr}
 800f692:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f696:	3301      	adds	r3, #1
 800f698:	4604      	mov	r4, r0
 800f69a:	d109      	bne.n	800f6b0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f69c:	4601      	mov	r1, r0
 800f69e:	4668      	mov	r0, sp
 800f6a0:	f7ff fcc5 	bl	800f02e <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f6a4:	f8bd 3000 	ldrh.w	r3, [sp]
 800f6a8:	8423      	strh	r3, [r4, #32]
 800f6aa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f6ae:	8463      	strh	r3, [r4, #34]	; 0x22
 800f6b0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f6b4:	b002      	add	sp, #8
 800f6b6:	bd10      	pop	{r4, pc}

0800f6b8 <_ZN8touchgfx6ScreenC1Ev>:
 800f6b8:	b570      	push	{r4, r5, r6, lr}
 800f6ba:	4605      	mov	r5, r0
 800f6bc:	4b15      	ldr	r3, [pc, #84]	; (800f714 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 800f6be:	f845 3b04 	str.w	r3, [r5], #4
 800f6c2:	2300      	movs	r3, #0
 800f6c4:	8103      	strh	r3, [r0, #8]
 800f6c6:	8143      	strh	r3, [r0, #10]
 800f6c8:	8183      	strh	r3, [r0, #12]
 800f6ca:	81c3      	strh	r3, [r0, #14]
 800f6cc:	8203      	strh	r3, [r0, #16]
 800f6ce:	8243      	strh	r3, [r0, #18]
 800f6d0:	8283      	strh	r3, [r0, #20]
 800f6d2:	82c3      	strh	r3, [r0, #22]
 800f6d4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f6d8:	6203      	str	r3, [r0, #32]
 800f6da:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800f6de:	4a0e      	ldr	r2, [pc, #56]	; (800f718 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f6e0:	6343      	str	r3, [r0, #52]	; 0x34
 800f6e2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800f6e6:	4b0d      	ldr	r3, [pc, #52]	; (800f71c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f6e8:	6042      	str	r2, [r0, #4]
 800f6ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f6ee:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800f6f0:	4a0b      	ldr	r2, [pc, #44]	; (800f720 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f6f2:	4604      	mov	r4, r0
 800f6f4:	2101      	movs	r1, #1
 800f6f6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800f6fa:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800f6fe:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f702:	4628      	mov	r0, r5
 800f704:	4798      	blx	r3
 800f706:	6863      	ldr	r3, [r4, #4]
 800f708:	4628      	mov	r0, r5
 800f70a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f70c:	4631      	mov	r1, r6
 800f70e:	4798      	blx	r3
 800f710:	4620      	mov	r0, r4
 800f712:	bd70      	pop	{r4, r5, r6, pc}
 800f714:	08021a38 	.word	0x08021a38
 800f718:	08020970 	.word	0x08020970
 800f71c:	2000d34e 	.word	0x2000d34e
 800f720:	2000d34c 	.word	0x2000d34c

0800f724 <_ZN8touchgfx6Screen4drawEv>:
 800f724:	b507      	push	{r0, r1, r2, lr}
 800f726:	4b09      	ldr	r3, [pc, #36]	; (800f74c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f728:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f72c:	4b08      	ldr	r3, [pc, #32]	; (800f750 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f72e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f732:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f736:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f73a:	6803      	ldr	r3, [r0, #0]
 800f73c:	2100      	movs	r1, #0
 800f73e:	9100      	str	r1, [sp, #0]
 800f740:	689b      	ldr	r3, [r3, #8]
 800f742:	4669      	mov	r1, sp
 800f744:	4798      	blx	r3
 800f746:	b003      	add	sp, #12
 800f748:	f85d fb04 	ldr.w	pc, [sp], #4
 800f74c:	2000d34c 	.word	0x2000d34c
 800f750:	2000d34e 	.word	0x2000d34e

0800f754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f758:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f75c:	2b00      	cmp	r3, #0
 800f75e:	b089      	sub	sp, #36	; 0x24
 800f760:	4680      	mov	r8, r0
 800f762:	460c      	mov	r4, r1
 800f764:	4615      	mov	r5, r2
 800f766:	dd0e      	ble.n	800f786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f768:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f76c:	2b00      	cmp	r3, #0
 800f76e:	dd0a      	ble.n	800f786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f770:	4628      	mov	r0, r5
 800f772:	f7ff ff5d 	bl	800f630 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f776:	4621      	mov	r1, r4
 800f778:	f7fe fb7e 	bl	800de78 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f77c:	69eb      	ldr	r3, [r5, #28]
 800f77e:	b928      	cbnz	r0, 800f78c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f780:	461d      	mov	r5, r3
 800f782:	2b00      	cmp	r3, #0
 800f784:	d1f4      	bne.n	800f770 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f786:	b009      	add	sp, #36	; 0x24
 800f788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f78c:	ae04      	add	r6, sp, #16
 800f78e:	2b00      	cmp	r3, #0
 800f790:	f000 80b5 	beq.w	800f8fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f794:	682b      	ldr	r3, [r5, #0]
 800f796:	4629      	mov	r1, r5
 800f798:	68db      	ldr	r3, [r3, #12]
 800f79a:	a802      	add	r0, sp, #8
 800f79c:	4798      	blx	r3
 800f79e:	4628      	mov	r0, r5
 800f7a0:	f7ff ff62 	bl	800f668 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f7a4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f7a8:	4407      	add	r7, r0
 800f7aa:	4628      	mov	r0, r5
 800f7ac:	f7ff ff70 	bl	800f690 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f7b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f7b4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f7b8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f7bc:	4418      	add	r0, r3
 800f7be:	4621      	mov	r1, r4
 800f7c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f7c4:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f7c8:	b23f      	sxth	r7, r7
 800f7ca:	4630      	mov	r0, r6
 800f7cc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f7d0:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f7d4:	f7fa fa00 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800f7d8:	4628      	mov	r0, r5
 800f7da:	f7ff ff29 	bl	800f630 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f7de:	4602      	mov	r2, r0
 800f7e0:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f7e4:	ab06      	add	r3, sp, #24
 800f7e6:	e883 0003 	stmia.w	r3, {r0, r1}
 800f7ea:	4611      	mov	r1, r2
 800f7ec:	4618      	mov	r0, r3
 800f7ee:	f7fa f9f3 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800f7f2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f7f6:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f7fa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f7fe:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f802:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f806:	4299      	cmp	r1, r3
 800f808:	d10b      	bne.n	800f822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f80a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f80e:	4552      	cmp	r2, sl
 800f810:	d107      	bne.n	800f822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f812:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f816:	455a      	cmp	r2, fp
 800f818:	d103      	bne.n	800f822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f81a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f81e:	454a      	cmp	r2, r9
 800f820:	d06d      	beq.n	800f8fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f822:	f1bb 0f00 	cmp.w	fp, #0
 800f826:	dd65      	ble.n	800f8f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f828:	f1b9 0f00 	cmp.w	r9, #0
 800f82c:	dd62      	ble.n	800f8f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f82e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f832:	fa1f f08a 	uxth.w	r0, sl
 800f836:	4552      	cmp	r2, sl
 800f838:	9000      	str	r0, [sp, #0]
 800f83a:	da12      	bge.n	800f862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f83c:	9301      	str	r3, [sp, #4]
 800f83e:	9b00      	ldr	r3, [sp, #0]
 800f840:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f844:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f848:	1a9a      	subs	r2, r3, r2
 800f84a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f84e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f852:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f856:	69ea      	ldr	r2, [r5, #28]
 800f858:	4631      	mov	r1, r6
 800f85a:	4640      	mov	r0, r8
 800f85c:	f7ff ff7a 	bl	800f754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f860:	9b01      	ldr	r3, [sp, #4]
 800f862:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f866:	429a      	cmp	r2, r3
 800f868:	b29f      	uxth	r7, r3
 800f86a:	da0d      	bge.n	800f888 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f86c:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f870:	1aba      	subs	r2, r7, r2
 800f872:	f8ad a012 	strh.w	sl, [sp, #18]
 800f876:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f87a:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f87e:	69ea      	ldr	r2, [r5, #28]
 800f880:	4631      	mov	r1, r6
 800f882:	4640      	mov	r0, r8
 800f884:	f7ff ff66 	bl	800f754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f888:	8822      	ldrh	r2, [r4, #0]
 800f88a:	88a3      	ldrh	r3, [r4, #4]
 800f88c:	445f      	add	r7, fp
 800f88e:	4413      	add	r3, r2
 800f890:	b29b      	uxth	r3, r3
 800f892:	b2bf      	uxth	r7, r7
 800f894:	b23a      	sxth	r2, r7
 800f896:	b219      	sxth	r1, r3
 800f898:	4291      	cmp	r1, r2
 800f89a:	dd0d      	ble.n	800f8b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f89c:	1bdb      	subs	r3, r3, r7
 800f89e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f8a2:	f8ad a012 	strh.w	sl, [sp, #18]
 800f8a6:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f8aa:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f8ae:	69ea      	ldr	r2, [r5, #28]
 800f8b0:	4631      	mov	r1, r6
 800f8b2:	4640      	mov	r0, r8
 800f8b4:	f7ff ff4e 	bl	800f754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f8b8:	88e2      	ldrh	r2, [r4, #6]
 800f8ba:	8863      	ldrh	r3, [r4, #2]
 800f8bc:	4413      	add	r3, r2
 800f8be:	9a00      	ldr	r2, [sp, #0]
 800f8c0:	444a      	add	r2, r9
 800f8c2:	b29b      	uxth	r3, r3
 800f8c4:	fa1f f982 	uxth.w	r9, r2
 800f8c8:	fa0f f289 	sxth.w	r2, r9
 800f8cc:	b219      	sxth	r1, r3
 800f8ce:	428a      	cmp	r2, r1
 800f8d0:	da15      	bge.n	800f8fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f8d2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f8d6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f8da:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f8de:	eba3 0309 	sub.w	r3, r3, r9
 800f8e2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f8e6:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f8ea:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f8ee:	69ea      	ldr	r2, [r5, #28]
 800f8f0:	4631      	mov	r1, r6
 800f8f2:	e001      	b.n	800f8f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f8f4:	69ea      	ldr	r2, [r5, #28]
 800f8f6:	4621      	mov	r1, r4
 800f8f8:	4640      	mov	r0, r8
 800f8fa:	f7ff ff2b 	bl	800f754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f8fe:	4628      	mov	r0, r5
 800f900:	f7ff fe96 	bl	800f630 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f904:	6861      	ldr	r1, [r4, #4]
 800f906:	4602      	mov	r2, r0
 800f908:	6820      	ldr	r0, [r4, #0]
 800f90a:	4633      	mov	r3, r6
 800f90c:	c303      	stmia	r3!, {r0, r1}
 800f90e:	4611      	mov	r1, r2
 800f910:	4630      	mov	r0, r6
 800f912:	f7fa f961 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800f916:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f91a:	2b00      	cmp	r3, #0
 800f91c:	f77f af33 	ble.w	800f786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f920:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f924:	2b00      	cmp	r3, #0
 800f926:	f77f af2e 	ble.w	800f786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f92a:	4628      	mov	r0, r5
 800f92c:	f7ff fe9c 	bl	800f668 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f930:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f934:	1a18      	subs	r0, r3, r0
 800f936:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f93a:	4628      	mov	r0, r5
 800f93c:	f7ff fea8 	bl	800f690 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f940:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f944:	1a18      	subs	r0, r3, r0
 800f946:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f94a:	682b      	ldr	r3, [r5, #0]
 800f94c:	4631      	mov	r1, r6
 800f94e:	689b      	ldr	r3, [r3, #8]
 800f950:	4628      	mov	r0, r5
 800f952:	4798      	blx	r3
 800f954:	e717      	b.n	800f786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f956 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f956:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f958:	aa02      	add	r2, sp, #8
 800f95a:	2300      	movs	r3, #0
 800f95c:	f842 3d04 	str.w	r3, [r2, #-4]!
 800f960:	4604      	mov	r4, r0
 800f962:	3004      	adds	r0, #4
 800f964:	460d      	mov	r5, r1
 800f966:	f7fa fa0f 	bl	8009d88 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f96a:	9a01      	ldr	r2, [sp, #4]
 800f96c:	b11a      	cbz	r2, 800f976 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800f96e:	4629      	mov	r1, r5
 800f970:	4620      	mov	r0, r4
 800f972:	f7ff feef 	bl	800f754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f976:	b003      	add	sp, #12
 800f978:	bd30      	pop	{r4, r5, pc}

0800f97a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f97a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f97c:	4602      	mov	r2, r0
 800f97e:	4604      	mov	r4, r0
 800f980:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f984:	460d      	mov	r5, r1
 800f986:	6851      	ldr	r1, [r2, #4]
 800f988:	466b      	mov	r3, sp
 800f98a:	c303      	stmia	r3!, {r0, r1}
 800f98c:	4629      	mov	r1, r5
 800f98e:	4668      	mov	r0, sp
 800f990:	f7fa f922 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 800f994:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f998:	4669      	mov	r1, sp
 800f99a:	b123      	cbz	r3, 800f9a6 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800f99c:	4620      	mov	r0, r4
 800f99e:	f7ff ffda 	bl	800f956 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f9a2:	b003      	add	sp, #12
 800f9a4:	bd30      	pop	{r4, r5, pc}
 800f9a6:	1d20      	adds	r0, r4, #4
 800f9a8:	f7fa f9b5 	bl	8009d16 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f9ac:	e7f9      	b.n	800f9a2 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800f9ae <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f9ae:	680a      	ldr	r2, [r1, #0]
 800f9b0:	460b      	mov	r3, r1
 800f9b2:	6992      	ldr	r2, [r2, #24]
 800f9b4:	1d01      	adds	r1, r0, #4
 800f9b6:	4618      	mov	r0, r3
 800f9b8:	4710      	bx	r2

0800f9ba <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 800f9ba:	b510      	push	{r4, lr}
 800f9bc:	4298      	cmp	r0, r3
 800f9be:	eb01 0402 	add.w	r4, r1, r2
 800f9c2:	b224      	sxth	r4, r4
 800f9c4:	d22c      	bcs.n	800fa20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800f9c6:	b35b      	cbz	r3, 800fa20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 800f9c8:	ee07 0a90 	vmov	s15, r0
 800f9cc:	eeb8 6a67 	vcvt.f32.u32	s12, s15
 800f9d0:	ee07 3a90 	vmov	s15, r3
 800f9d4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800f9d8:	ee07 2a90 	vmov	s15, r2
 800f9dc:	ee86 7a26 	vdiv.f32	s14, s12, s13
 800f9e0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f9e4:	ee37 7a66 	vsub.f32	s14, s14, s13
 800f9e8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800f9ec:	ee67 5a07 	vmul.f32	s11, s14, s14
 800f9f0:	ee07 1a90 	vmov	s15, r1
 800f9f4:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f9f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f9fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800fa00:	eee6 7a26 	vfma.f32	s15, s12, s13
 800fa04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fa08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa0c:	bfcc      	ite	gt
 800fa0e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800fa12:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800fa16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fa1a:	ee17 3a90 	vmov	r3, s15
 800fa1e:	b21c      	sxth	r4, r3
 800fa20:	4620      	mov	r0, r4
 800fa22:	bd10      	pop	{r4, pc}

0800fa24 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800fa24:	b510      	push	{r4, lr}
 800fa26:	4298      	cmp	r0, r3
 800fa28:	eb01 0402 	add.w	r4, r1, r2
 800fa2c:	b224      	sxth	r4, r4
 800fa2e:	d226      	bcs.n	800fa7e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800fa30:	b32b      	cbz	r3, 800fa7e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800fa32:	ee07 2a90 	vmov	s15, r2
 800fa36:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800fa3a:	ee07 0a90 	vmov	s15, r0
 800fa3e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800fa42:	ee07 3a90 	vmov	s15, r3
 800fa46:	ee67 6a26 	vmul.f32	s13, s14, s13
 800fa4a:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800fa4e:	ee07 1a90 	vmov	s15, r1
 800fa52:	ee86 7a86 	vdiv.f32	s14, s13, s12
 800fa56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800fa5a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fa5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800fa62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800fa66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa6a:	bfcc      	ite	gt
 800fa6c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800fa70:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800fa74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fa78:	ee17 3a90 	vmov	r3, s15
 800fa7c:	b21c      	sxth	r4, r3
 800fa7e:	4620      	mov	r0, r4
 800fa80:	bd10      	pop	{r4, pc}

0800fa82 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 800fa82:	f7ff bfcf 	b.w	800fa24 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

0800fa86 <_ZN8touchgfx12TextProviderC1Ev>:
 800fa86:	b510      	push	{r4, lr}
 800fa88:	2300      	movs	r3, #0
 800fa8a:	2201      	movs	r2, #1
 800fa8c:	4604      	mov	r4, r0
 800fa8e:	e9c0 3300 	strd	r3, r3, [r0]
 800fa92:	60c3      	str	r3, [r0, #12]
 800fa94:	7403      	strb	r3, [r0, #16]
 800fa96:	82c3      	strh	r3, [r0, #22]
 800fa98:	8303      	strh	r3, [r0, #24]
 800fa9a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fa9c:	8603      	strh	r3, [r0, #48]	; 0x30
 800fa9e:	86c3      	strh	r3, [r0, #54]	; 0x36
 800faa0:	8703      	strh	r3, [r0, #56]	; 0x38
 800faa2:	63c3      	str	r3, [r0, #60]	; 0x3c
 800faa4:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800faa8:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800faac:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800fab0:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800fab4:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800fab8:	f7f3 fc76 	bl	80033a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800fabc:	4620      	mov	r0, r4
 800fabe:	bd10      	pop	{r4, pc}

0800fac0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800fac0:	b530      	push	{r4, r5, lr}
 800fac2:	2500      	movs	r5, #0
 800fac4:	2401      	movs	r4, #1
 800fac6:	6843      	ldr	r3, [r0, #4]
 800fac8:	b913      	cbnz	r3, 800fad0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800faca:	6803      	ldr	r3, [r0, #0]
 800facc:	b1f3      	cbz	r3, 800fb0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800face:	6043      	str	r3, [r0, #4]
 800fad0:	7c03      	ldrb	r3, [r0, #16]
 800fad2:	b143      	cbz	r3, 800fae6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800fad4:	68c3      	ldr	r3, [r0, #12]
 800fad6:	b12b      	cbz	r3, 800fae4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fad8:	881a      	ldrh	r2, [r3, #0]
 800fada:	b11a      	cbz	r2, 800fae4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800fadc:	1c9a      	adds	r2, r3, #2
 800fade:	60c2      	str	r2, [r0, #12]
 800fae0:	8818      	ldrh	r0, [r3, #0]
 800fae2:	bd30      	pop	{r4, r5, pc}
 800fae4:	7405      	strb	r5, [r0, #16]
 800fae6:	6843      	ldr	r3, [r0, #4]
 800fae8:	8819      	ldrh	r1, [r3, #0]
 800faea:	b179      	cbz	r1, 800fb0c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800faec:	1c9a      	adds	r2, r3, #2
 800faee:	2902      	cmp	r1, #2
 800faf0:	6042      	str	r2, [r0, #4]
 800faf2:	d1f5      	bne.n	800fae0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800faf4:	6883      	ldr	r3, [r0, #8]
 800faf6:	1d1a      	adds	r2, r3, #4
 800faf8:	6082      	str	r2, [r0, #8]
 800fafa:	681b      	ldr	r3, [r3, #0]
 800fafc:	60c3      	str	r3, [r0, #12]
 800fafe:	2b00      	cmp	r3, #0
 800fb00:	d0e1      	beq.n	800fac6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fb02:	881b      	ldrh	r3, [r3, #0]
 800fb04:	2b00      	cmp	r3, #0
 800fb06:	d0de      	beq.n	800fac6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fb08:	7404      	strb	r4, [r0, #16]
 800fb0a:	e7dc      	b.n	800fac6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800fb0c:	2000      	movs	r0, #0
 800fb0e:	e7e8      	b.n	800fae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800fb10 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800fb10:	b410      	push	{r4}
 800fb12:	63c3      	str	r3, [r0, #60]	; 0x3c
 800fb14:	2300      	movs	r3, #0
 800fb16:	6082      	str	r2, [r0, #8]
 800fb18:	6001      	str	r1, [r0, #0]
 800fb1a:	6043      	str	r3, [r0, #4]
 800fb1c:	60c3      	str	r3, [r0, #12]
 800fb1e:	7403      	strb	r3, [r0, #16]
 800fb20:	8603      	strh	r3, [r0, #48]	; 0x30
 800fb22:	8303      	strh	r3, [r0, #24]
 800fb24:	8703      	strh	r3, [r0, #56]	; 0x38
 800fb26:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fb2a:	f7f3 bc3d 	b.w	80033a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800fb2e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800fb2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb30:	4605      	mov	r5, r0
 800fb32:	4608      	mov	r0, r1
 800fb34:	b1e9      	cbz	r1, 800fb72 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800fb36:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800fb3a:	460b      	mov	r3, r1
 800fb3c:	f101 0708 	add.w	r7, r1, #8
 800fb40:	4622      	mov	r2, r4
 800fb42:	6818      	ldr	r0, [r3, #0]
 800fb44:	6859      	ldr	r1, [r3, #4]
 800fb46:	4626      	mov	r6, r4
 800fb48:	c603      	stmia	r6!, {r0, r1}
 800fb4a:	3308      	adds	r3, #8
 800fb4c:	42bb      	cmp	r3, r7
 800fb4e:	4634      	mov	r4, r6
 800fb50:	d1f7      	bne.n	800fb42 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800fb52:	6818      	ldr	r0, [r3, #0]
 800fb54:	6030      	str	r0, [r6, #0]
 800fb56:	889b      	ldrh	r3, [r3, #4]
 800fb58:	80b3      	strh	r3, [r6, #4]
 800fb5a:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800fb5e:	015b      	lsls	r3, r3, #5
 800fb60:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fb64:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800fb68:	430b      	orrs	r3, r1
 800fb6a:	425b      	negs	r3, r3
 800fb6c:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800fb70:	4610      	mov	r0, r2
 800fb72:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fb74 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800fb74:	b538      	push	{r3, r4, r5, lr}
 800fb76:	460c      	mov	r4, r1
 800fb78:	6811      	ldr	r1, [r2, #0]
 800fb7a:	4610      	mov	r0, r2
 800fb7c:	68cd      	ldr	r5, [r1, #12]
 800fb7e:	4619      	mov	r1, r3
 800fb80:	47a8      	blx	r5
 800fb82:	2800      	cmp	r0, #0
 800fb84:	bf08      	it	eq
 800fb86:	4620      	moveq	r0, r4
 800fb88:	bd38      	pop	{r3, r4, r5, pc}
	...

0800fb8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800fb8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb8e:	4604      	mov	r4, r0
 800fb90:	4615      	mov	r5, r2
 800fb92:	4608      	mov	r0, r1
 800fb94:	b93a      	cbnz	r2, 800fba6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800fb96:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800fb9a:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800fb9e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800fba2:	4628      	mov	r0, r5
 800fba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fba6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800fbaa:	8893      	ldrh	r3, [r2, #4]
 800fbac:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800fbb0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fbb4:	79ee      	ldrb	r6, [r5, #7]
 800fbb6:	4316      	orrs	r6, r2
 800fbb8:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800fbbc:	189a      	adds	r2, r3, r2
 800fbbe:	b291      	uxth	r1, r2
 800fbc0:	291d      	cmp	r1, #29
 800fbc2:	b2b7      	uxth	r7, r6
 800fbc4:	f200 8083 	bhi.w	800fcce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800fbc8:	2201      	movs	r2, #1
 800fbca:	408a      	lsls	r2, r1
 800fbcc:	4978      	ldr	r1, [pc, #480]	; (800fdb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800fbce:	420a      	tst	r2, r1
 800fbd0:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800fbd4:	d12d      	bne.n	800fc32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800fbd6:	f412 7f60 	tst.w	r2, #896	; 0x380
 800fbda:	d078      	beq.n	800fcce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800fbdc:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800fbe0:	462b      	mov	r3, r5
 800fbe2:	f105 0e08 	add.w	lr, r5, #8
 800fbe6:	4615      	mov	r5, r2
 800fbe8:	6818      	ldr	r0, [r3, #0]
 800fbea:	6859      	ldr	r1, [r3, #4]
 800fbec:	4694      	mov	ip, r2
 800fbee:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fbf2:	3308      	adds	r3, #8
 800fbf4:	4573      	cmp	r3, lr
 800fbf6:	4662      	mov	r2, ip
 800fbf8:	d1f6      	bne.n	800fbe8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800fbfa:	6818      	ldr	r0, [r3, #0]
 800fbfc:	f8cc 0000 	str.w	r0, [ip]
 800fc00:	889b      	ldrh	r3, [r3, #4]
 800fc02:	f8ac 3004 	strh.w	r3, [ip, #4]
 800fc06:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800fc0a:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800fc0e:	b2b3      	uxth	r3, r6
 800fc10:	1aca      	subs	r2, r1, r3
 800fc12:	b292      	uxth	r2, r2
 800fc14:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800fc18:	10d2      	asrs	r2, r2, #3
 800fc1a:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800fc1e:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800fc22:	4302      	orrs	r2, r0
 800fc24:	1bcf      	subs	r7, r1, r7
 800fc26:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800fc2a:	1afb      	subs	r3, r7, r3
 800fc2c:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800fc30:	e7b7      	b.n	800fba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fc32:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800fc34:	b92b      	cbnz	r3, 800fc42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800fc36:	4b5f      	ldr	r3, [pc, #380]	; (800fdb4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800fc38:	4a5f      	ldr	r2, [pc, #380]	; (800fdb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800fc3a:	4860      	ldr	r0, [pc, #384]	; (800fdbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800fc3c:	21c0      	movs	r1, #192	; 0xc0
 800fc3e:	f00e f9d3 	bl	801dfe8 <__assert_func>
 800fc42:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800fc44:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fc48:	8b59      	ldrh	r1, [r3, #26]
 800fc4a:	f640 6333 	movw	r3, #3635	; 0xe33
 800fc4e:	4299      	cmp	r1, r3
 800fc50:	d110      	bne.n	800fc74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800fc52:	6803      	ldr	r3, [r0, #0]
 800fc54:	68db      	ldr	r3, [r3, #12]
 800fc56:	4798      	blx	r3
 800fc58:	7b41      	ldrb	r1, [r0, #13]
 800fc5a:	00cb      	lsls	r3, r1, #3
 800fc5c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fc60:	7a03      	ldrb	r3, [r0, #8]
 800fc62:	0648      	lsls	r0, r1, #25
 800fc64:	ea43 0302 	orr.w	r3, r3, r2
 800fc68:	bf44      	itt	mi
 800fc6a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fc6e:	b21b      	sxthmi	r3, r3
 800fc70:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800fc74:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800fc78:	443b      	add	r3, r7
 800fc7a:	4433      	add	r3, r6
 800fc7c:	b29b      	uxth	r3, r3
 800fc7e:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800fc82:	462a      	mov	r2, r5
 800fc84:	f105 0c08 	add.w	ip, r5, #8
 800fc88:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800fc8c:	4635      	mov	r5, r6
 800fc8e:	6810      	ldr	r0, [r2, #0]
 800fc90:	6851      	ldr	r1, [r2, #4]
 800fc92:	4637      	mov	r7, r6
 800fc94:	c703      	stmia	r7!, {r0, r1}
 800fc96:	3208      	adds	r2, #8
 800fc98:	4562      	cmp	r2, ip
 800fc9a:	463e      	mov	r6, r7
 800fc9c:	d1f7      	bne.n	800fc8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800fc9e:	6810      	ldr	r0, [r2, #0]
 800fca0:	6038      	str	r0, [r7, #0]
 800fca2:	8892      	ldrh	r2, [r2, #4]
 800fca4:	80ba      	strh	r2, [r7, #4]
 800fca6:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800fcaa:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800fcae:	10db      	asrs	r3, r3, #3
 800fcb0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fcb4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fcb8:	4313      	orrs	r3, r2
 800fcba:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800fcbe:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800fcc2:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800fcc6:	1a9b      	subs	r3, r3, r2
 800fcc8:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800fccc:	e769      	b.n	800fba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fcce:	f023 0204 	bic.w	r2, r3, #4
 800fcd2:	f640 611b 	movw	r1, #3611	; 0xe1b
 800fcd6:	428a      	cmp	r2, r1
 800fcd8:	d003      	beq.n	800fce2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800fcda:	f640 621d 	movw	r2, #3613	; 0xe1d
 800fcde:	4293      	cmp	r3, r2
 800fce0:	d120      	bne.n	800fd24 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800fce2:	3b01      	subs	r3, #1
 800fce4:	4602      	mov	r2, r0
 800fce6:	b29b      	uxth	r3, r3
 800fce8:	4629      	mov	r1, r5
 800fcea:	4620      	mov	r0, r4
 800fcec:	f7ff ff42 	bl	800fb74 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fcf0:	7b41      	ldrb	r1, [r0, #13]
 800fcf2:	00cb      	lsls	r3, r1, #3
 800fcf4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fcf8:	7a03      	ldrb	r3, [r0, #8]
 800fcfa:	0649      	lsls	r1, r1, #25
 800fcfc:	ea43 0302 	orr.w	r3, r3, r2
 800fd00:	bf44      	itt	mi
 800fd02:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fd06:	b21b      	sxthmi	r3, r3
 800fd08:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800fd0c:	7b6b      	ldrb	r3, [r5, #13]
 800fd0e:	7aaa      	ldrb	r2, [r5, #10]
 800fd10:	005b      	lsls	r3, r3, #1
 800fd12:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fd16:	4313      	orrs	r3, r2
 800fd18:	115a      	asrs	r2, r3, #5
 800fd1a:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800fd1e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fd22:	e036      	b.n	800fd92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800fd24:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800fd28:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800fd2c:	7a2a      	ldrb	r2, [r5, #8]
 800fd2e:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800fd32:	ea42 0201 	orr.w	r2, r2, r1
 800fd36:	bf1c      	itt	ne
 800fd38:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800fd3c:	b212      	sxthne	r2, r2
 800fd3e:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800fd42:	f640 6109 	movw	r1, #3593	; 0xe09
 800fd46:	f023 0210 	bic.w	r2, r3, #16
 800fd4a:	428a      	cmp	r2, r1
 800fd4c:	d003      	beq.n	800fd56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800fd4e:	f640 6213 	movw	r2, #3603	; 0xe13
 800fd52:	4293      	cmp	r3, r2
 800fd54:	d12a      	bne.n	800fdac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800fd56:	7b6e      	ldrb	r6, [r5, #13]
 800fd58:	0076      	lsls	r6, r6, #1
 800fd5a:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fd5e:	7aae      	ldrb	r6, [r5, #10]
 800fd60:	4316      	orrs	r6, r2
 800fd62:	f640 6213 	movw	r2, #3603	; 0xe13
 800fd66:	4293      	cmp	r3, r2
 800fd68:	bf18      	it	ne
 800fd6a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800fd6e:	4602      	mov	r2, r0
 800fd70:	bf14      	ite	ne
 800fd72:	b29b      	uxthne	r3, r3
 800fd74:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800fd78:	4629      	mov	r1, r5
 800fd7a:	4620      	mov	r0, r4
 800fd7c:	f7ff fefa 	bl	800fb74 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fd80:	7b43      	ldrb	r3, [r0, #13]
 800fd82:	7a82      	ldrb	r2, [r0, #10]
 800fd84:	005b      	lsls	r3, r3, #1
 800fd86:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fd8a:	4313      	orrs	r3, r2
 800fd8c:	1af6      	subs	r6, r6, r3
 800fd8e:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800fd92:	7b69      	ldrb	r1, [r5, #13]
 800fd94:	00cb      	lsls	r3, r1, #3
 800fd96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fd9a:	7a2b      	ldrb	r3, [r5, #8]
 800fd9c:	4313      	orrs	r3, r2
 800fd9e:	064a      	lsls	r2, r1, #25
 800fda0:	bf44      	itt	mi
 800fda2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fda6:	b21b      	sxthmi	r3, r3
 800fda8:	1bdb      	subs	r3, r3, r7
 800fdaa:	e73f      	b.n	800fc2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800fdac:	2300      	movs	r3, #0
 800fdae:	e7b6      	b.n	800fd1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800fdb0:	3fc00079 	.word	0x3fc00079
 800fdb4:	08020210 	.word	0x08020210
 800fdb8:	08021c93 	.word	0x08021c93
 800fdbc:	080202e2 	.word	0x080202e2

0800fdc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fdc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fdc4:	4604      	mov	r4, r0
 800fdc6:	b942      	cbnz	r2, 800fdda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fdc8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800fdcc:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800fdd0:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800fdd4:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fdd8:	e046      	b.n	800fe68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800fdda:	7b51      	ldrb	r1, [r2, #13]
 800fddc:	8893      	ldrh	r3, [r2, #4]
 800fdde:	010f      	lsls	r7, r1, #4
 800fde0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800fde4:	79d7      	ldrb	r7, [r2, #7]
 800fde6:	4307      	orrs	r7, r0
 800fde8:	2f04      	cmp	r7, #4
 800fdea:	b2bd      	uxth	r5, r7
 800fdec:	bfcc      	ite	gt
 800fdee:	08bf      	lsrgt	r7, r7, #2
 800fdf0:	2701      	movle	r7, #1
 800fdf2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800fdf6:	f200 80ab 	bhi.w	800ff50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800fdfa:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800fdfe:	4283      	cmp	r3, r0
 800fe00:	d216      	bcs.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe02:	f240 605b 	movw	r0, #1627	; 0x65b
 800fe06:	4283      	cmp	r3, r0
 800fe08:	d859      	bhi.n	800febe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800fe0a:	f240 6057 	movw	r0, #1623	; 0x657
 800fe0e:	4283      	cmp	r3, r0
 800fe10:	d20e      	bcs.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe12:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fe16:	d24a      	bcs.n	800feae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800fe18:	f240 604e 	movw	r0, #1614	; 0x64e
 800fe1c:	4283      	cmp	r3, r0
 800fe1e:	d207      	bcs.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe20:	f240 601a 	movw	r0, #1562	; 0x61a
 800fe24:	4283      	cmp	r3, r0
 800fe26:	d02a      	beq.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fe28:	d821      	bhi.n	800fe6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800fe2a:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800fe2e:	d35b      	bcc.n	800fee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fe30:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800fe34:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fe38:	f040 80d0 	bne.w	800ffdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fe3c:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800fe40:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fe44:	f040 80ca 	bne.w	800ffdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800fe48:	00cb      	lsls	r3, r1, #3
 800fe4a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fe4e:	7a13      	ldrb	r3, [r2, #8]
 800fe50:	0649      	lsls	r1, r1, #25
 800fe52:	ea43 0300 	orr.w	r3, r3, r0
 800fe56:	bf44      	itt	mi
 800fe58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fe5c:	b21b      	sxthmi	r3, r3
 800fe5e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800fe62:	1b5d      	subs	r5, r3, r5
 800fe64:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800fe68:	4610      	mov	r0, r2
 800fe6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe6e:	f240 604b 	movw	r0, #1611	; 0x64b
 800fe72:	4283      	cmp	r3, r0
 800fe74:	d338      	bcc.n	800fee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fe76:	f240 604c 	movw	r0, #1612	; 0x64c
 800fe7a:	4283      	cmp	r3, r0
 800fe7c:	d9d8      	bls.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fe7e:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800fe82:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800fe86:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fe8a:	f040 80f1 	bne.w	8010070 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fe8e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fe92:	f040 80ed 	bne.w	8010070 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800fe96:	00cb      	lsls	r3, r1, #3
 800fe98:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fe9c:	7a13      	ldrb	r3, [r2, #8]
 800fe9e:	064e      	lsls	r6, r1, #25
 800fea0:	ea43 0300 	orr.w	r3, r3, r0
 800fea4:	bf44      	itt	mi
 800fea6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800feaa:	b21b      	sxthmi	r3, r3
 800feac:	e7d9      	b.n	800fe62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800feae:	f240 6054 	movw	r0, #1620	; 0x654
 800feb2:	4283      	cmp	r3, r0
 800feb4:	d8e3      	bhi.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800feb6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800feba:	d9e0      	bls.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800febc:	e7b8      	b.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800febe:	f240 6074 	movw	r0, #1652	; 0x674
 800fec2:	4283      	cmp	r3, r0
 800fec4:	d0b4      	beq.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fec6:	d82d      	bhi.n	800ff24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800fec8:	f240 605e 	movw	r0, #1630	; 0x65e
 800fecc:	4283      	cmp	r3, r0
 800fece:	d804      	bhi.n	800feda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800fed0:	f240 605d 	movw	r0, #1629	; 0x65d
 800fed4:	4283      	cmp	r3, r0
 800fed6:	d3d2      	bcc.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fed8:	e7aa      	b.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800feda:	f240 605f 	movw	r0, #1631	; 0x65f
 800fede:	4283      	cmp	r3, r0
 800fee0:	d0cd      	beq.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800fee2:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800fee6:	d0a3      	beq.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800fee8:	00cb      	lsls	r3, r1, #3
 800feea:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800feee:	7a13      	ldrb	r3, [r2, #8]
 800fef0:	0649      	lsls	r1, r1, #25
 800fef2:	ea43 0300 	orr.w	r3, r3, r0
 800fef6:	bf44      	itt	mi
 800fef8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fefc:	b21b      	sxthmi	r3, r3
 800fefe:	1b5d      	subs	r5, r3, r5
 800ff00:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ff04:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800ff08:	7b53      	ldrb	r3, [r2, #13]
 800ff0a:	015b      	lsls	r3, r3, #5
 800ff0c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ff10:	7993      	ldrb	r3, [r2, #6]
 800ff12:	430b      	orrs	r3, r1
 800ff14:	005b      	lsls	r3, r3, #1
 800ff16:	2105      	movs	r1, #5
 800ff18:	fb93 f3f1 	sdiv	r3, r3, r1
 800ff1c:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ff20:	440b      	add	r3, r1
 800ff22:	e757      	b.n	800fdd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ff24:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ff28:	4283      	cmp	r3, r0
 800ff2a:	d809      	bhi.n	800ff40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800ff2c:	f240 60df 	movw	r0, #1759	; 0x6df
 800ff30:	4283      	cmp	r3, r0
 800ff32:	f4bf af7d 	bcs.w	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ff36:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ff3a:	2b05      	cmp	r3, #5
 800ff3c:	d8d4      	bhi.n	800fee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ff3e:	e777      	b.n	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ff40:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ff44:	4283      	cmp	r3, r0
 800ff46:	d09a      	beq.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ff48:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ff4c:	4283      	cmp	r3, r0
 800ff4e:	e7ca      	b.n	800fee6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800ff50:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ff54:	d22b      	bcs.n	800ffae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800ff56:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ff5a:	4283      	cmp	r3, r0
 800ff5c:	d28f      	bcs.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ff5e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ff62:	4283      	cmp	r3, r0
 800ff64:	d816      	bhi.n	800ff94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800ff66:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ff6a:	4283      	cmp	r3, r0
 800ff6c:	f4bf af60 	bcs.w	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ff70:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800ff74:	4283      	cmp	r3, r0
 800ff76:	d80a      	bhi.n	800ff8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800ff78:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800ff7c:	4283      	cmp	r3, r0
 800ff7e:	f4bf af57 	bcs.w	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ff82:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800ff86:	4283      	cmp	r3, r0
 800ff88:	f43f af79 	beq.w	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ff8c:	e7ac      	b.n	800fee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ff8e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800ff92:	e7f8      	b.n	800ff86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800ff94:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800ff98:	4283      	cmp	r3, r0
 800ff9a:	d802      	bhi.n	800ffa2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800ff9c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800ffa0:	e798      	b.n	800fed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800ffa2:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800ffa6:	4283      	cmp	r3, r0
 800ffa8:	f47f af42 	bne.w	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ffac:	e767      	b.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ffae:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800ffb2:	4283      	cmp	r3, r0
 800ffb4:	f43f af63 	beq.w	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ffb8:	d802      	bhi.n	800ffc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800ffba:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800ffbe:	e7f2      	b.n	800ffa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800ffc0:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800ffc4:	4283      	cmp	r3, r0
 800ffc6:	d805      	bhi.n	800ffd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800ffc8:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800ffcc:	4283      	cmp	r3, r0
 800ffce:	f4ff af2f 	bcc.w	800fe30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ffd2:	e754      	b.n	800fe7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ffd4:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800ffd8:	4283      	cmp	r3, r0
 800ffda:	e7af      	b.n	800ff3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800ffdc:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800ffe0:	4617      	mov	r7, r2
 800ffe2:	f102 0808 	add.w	r8, r2, #8
 800ffe6:	4666      	mov	r6, ip
 800ffe8:	6838      	ldr	r0, [r7, #0]
 800ffea:	6879      	ldr	r1, [r7, #4]
 800ffec:	46e6      	mov	lr, ip
 800ffee:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fff2:	3708      	adds	r7, #8
 800fff4:	4547      	cmp	r7, r8
 800fff6:	46f4      	mov	ip, lr
 800fff8:	d1f6      	bne.n	800ffe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800fffa:	6838      	ldr	r0, [r7, #0]
 800fffc:	f8ce 0000 	str.w	r0, [lr]
 8010000:	88b9      	ldrh	r1, [r7, #4]
 8010002:	f8ae 1004 	strh.w	r1, [lr, #4]
 8010006:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 801000a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801000e:	d009      	beq.n	8010024 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 8010010:	7b51      	ldrb	r1, [r2, #13]
 8010012:	7992      	ldrb	r2, [r2, #6]
 8010014:	0149      	lsls	r1, r1, #5
 8010016:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801001a:	4311      	orrs	r1, r2
 801001c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8010020:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 8010024:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8010028:	d00d      	beq.n	8010046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 801002a:	442b      	add	r3, r5
 801002c:	b29b      	uxth	r3, r3
 801002e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 8010032:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 8010036:	10db      	asrs	r3, r3, #3
 8010038:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801003c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8010040:	4313      	orrs	r3, r2
 8010042:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 8010046:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801004a:	00cb      	lsls	r3, r1, #3
 801004c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010050:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8010054:	064f      	lsls	r7, r1, #25
 8010056:	ea43 0302 	orr.w	r3, r3, r2
 801005a:	bf44      	itt	mi
 801005c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8010060:	b21b      	sxthmi	r3, r3
 8010062:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8010066:	1b5d      	subs	r5, r3, r5
 8010068:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 801006c:	4632      	mov	r2, r6
 801006e:	e6fb      	b.n	800fe68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 8010070:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 8010074:	4694      	mov	ip, r2
 8010076:	f102 0908 	add.w	r9, r2, #8
 801007a:	4676      	mov	r6, lr
 801007c:	f8dc 0000 	ldr.w	r0, [ip]
 8010080:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8010084:	46f0      	mov	r8, lr
 8010086:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801008a:	f10c 0c08 	add.w	ip, ip, #8
 801008e:	45cc      	cmp	ip, r9
 8010090:	46c6      	mov	lr, r8
 8010092:	d1f3      	bne.n	801007c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 8010094:	f8dc 0000 	ldr.w	r0, [ip]
 8010098:	f8c8 0000 	str.w	r0, [r8]
 801009c:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80100a0:	f8a8 1004 	strh.w	r1, [r8, #4]
 80100a4:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 80100a8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80100ac:	d009      	beq.n	80100c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 80100ae:	7b51      	ldrb	r1, [r2, #13]
 80100b0:	7992      	ldrb	r2, [r2, #6]
 80100b2:	0149      	lsls	r1, r1, #5
 80100b4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80100b8:	4311      	orrs	r1, r2
 80100ba:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80100be:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 80100c2:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80100c6:	d00d      	beq.n	80100e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80100c8:	1bdb      	subs	r3, r3, r7
 80100ca:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 80100ce:	b29b      	uxth	r3, r3
 80100d0:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 80100d4:	10db      	asrs	r3, r3, #3
 80100d6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80100da:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80100de:	4313      	orrs	r3, r2
 80100e0:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80100e4:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 80100e8:	00cb      	lsls	r3, r1, #3
 80100ea:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80100ee:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 80100f2:	0648      	lsls	r0, r1, #25
 80100f4:	ea43 0302 	orr.w	r3, r3, r2
 80100f8:	bf44      	itt	mi
 80100fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80100fe:	b21b      	sxthmi	r3, r3
 8010100:	e7b1      	b.n	8010066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08010104 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8010104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010108:	461e      	mov	r6, r3
 801010a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801010c:	4604      	mov	r4, r0
 801010e:	4617      	mov	r7, r2
 8010110:	b92b      	cbnz	r3, 801011e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 8010112:	4b25      	ldr	r3, [pc, #148]	; (80101a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8010114:	4a25      	ldr	r2, [pc, #148]	; (80101ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8010116:	4826      	ldr	r0, [pc, #152]	; (80101b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8010118:	21c0      	movs	r1, #192	; 0xc0
 801011a:	f00d ff65 	bl	801dfe8 <__assert_func>
 801011e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8010120:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8010124:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8010128:	f7f3 f8fc 	bl	8003324 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801012c:	4605      	mov	r5, r0
 801012e:	b918      	cbnz	r0, 8010138 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 8010130:	6030      	str	r0, [r6, #0]
 8010132:	4628      	mov	r0, r5
 8010134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010138:	683b      	ldr	r3, [r7, #0]
 801013a:	4601      	mov	r1, r0
 801013c:	68db      	ldr	r3, [r3, #12]
 801013e:	4638      	mov	r0, r7
 8010140:	4798      	blx	r3
 8010142:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8010146:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801014a:	4602      	mov	r2, r0
 801014c:	6030      	str	r0, [r6, #0]
 801014e:	d213      	bcs.n	8010178 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 8010150:	4643      	mov	r3, r8
 8010152:	4639      	mov	r1, r7
 8010154:	4620      	mov	r0, r4
 8010156:	f7ff fe33 	bl	800fdc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801015a:	6030      	str	r0, [r6, #0]
 801015c:	6833      	ldr	r3, [r6, #0]
 801015e:	b143      	cbz	r3, 8010172 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 8010160:	7b5a      	ldrb	r2, [r3, #13]
 8010162:	7a9b      	ldrb	r3, [r3, #10]
 8010164:	0052      	lsls	r2, r2, #1
 8010166:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801016a:	4313      	orrs	r3, r2
 801016c:	bf0c      	ite	eq
 801016e:	2301      	moveq	r3, #1
 8010170:	2300      	movne	r3, #0
 8010172:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8010176:	e7dc      	b.n	8010132 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8010178:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801017c:	b29b      	uxth	r3, r3
 801017e:	2b7f      	cmp	r3, #127	; 0x7f
 8010180:	d804      	bhi.n	801018c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 8010182:	4639      	mov	r1, r7
 8010184:	4620      	mov	r0, r4
 8010186:	f7ff fd01 	bl	800fb8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801018a:	e7e6      	b.n	801015a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801018c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8010190:	2b00      	cmp	r3, #0
 8010192:	d0e3      	beq.n	801015c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 8010194:	f640 1302 	movw	r3, #2306	; 0x902
 8010198:	429d      	cmp	r5, r3
 801019a:	d1df      	bne.n	801015c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801019c:	4601      	mov	r1, r0
 801019e:	4620      	mov	r0, r4
 80101a0:	f7ff fcc5 	bl	800fb2e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80101a4:	e7d9      	b.n	801015a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80101a6:	bf00      	nop
 80101a8:	08020210 	.word	0x08020210
 80101ac:	08021c93 	.word	0x08021c93
 80101b0:	080202e2 	.word	0x080202e2

080101b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80101b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80101b8:	461e      	mov	r6, r3
 80101ba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80101bc:	4604      	mov	r4, r0
 80101be:	4617      	mov	r7, r2
 80101c0:	b92b      	cbnz	r3, 80101ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 80101c2:	4b26      	ldr	r3, [pc, #152]	; (801025c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 80101c4:	4a26      	ldr	r2, [pc, #152]	; (8010260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 80101c6:	4827      	ldr	r0, [pc, #156]	; (8010264 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 80101c8:	21c0      	movs	r1, #192	; 0xc0
 80101ca:	f00d ff0d 	bl	801dfe8 <__assert_func>
 80101ce:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80101d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80101d4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 80101d8:	f7f3 f8a4 	bl	8003324 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80101dc:	4605      	mov	r5, r0
 80101de:	b918      	cbnz	r0, 80101e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 80101e0:	6030      	str	r0, [r6, #0]
 80101e2:	4628      	mov	r0, r5
 80101e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80101e8:	683b      	ldr	r3, [r7, #0]
 80101ea:	4601      	mov	r1, r0
 80101ec:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80101f0:	4638      	mov	r0, r7
 80101f2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80101f6:	47c8      	blx	r9
 80101f8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80101fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8010200:	4602      	mov	r2, r0
 8010202:	6030      	str	r0, [r6, #0]
 8010204:	d213      	bcs.n	801022e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8010206:	4643      	mov	r3, r8
 8010208:	4639      	mov	r1, r7
 801020a:	4620      	mov	r0, r4
 801020c:	f7ff fdd8 	bl	800fdc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010210:	6030      	str	r0, [r6, #0]
 8010212:	6833      	ldr	r3, [r6, #0]
 8010214:	b143      	cbz	r3, 8010228 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8010216:	7b5a      	ldrb	r2, [r3, #13]
 8010218:	7a9b      	ldrb	r3, [r3, #10]
 801021a:	0052      	lsls	r2, r2, #1
 801021c:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010220:	4313      	orrs	r3, r2
 8010222:	bf0c      	ite	eq
 8010224:	2301      	moveq	r3, #1
 8010226:	2300      	movne	r3, #0
 8010228:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801022c:	e7d9      	b.n	80101e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801022e:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8010232:	b29b      	uxth	r3, r3
 8010234:	2b7f      	cmp	r3, #127	; 0x7f
 8010236:	d804      	bhi.n	8010242 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8010238:	4639      	mov	r1, r7
 801023a:	4620      	mov	r0, r4
 801023c:	f7ff fca6 	bl	800fb8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010240:	e7e6      	b.n	8010210 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8010242:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8010246:	2b00      	cmp	r3, #0
 8010248:	d0e3      	beq.n	8010212 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801024a:	f640 1302 	movw	r3, #2306	; 0x902
 801024e:	429d      	cmp	r5, r3
 8010250:	d1df      	bne.n	8010212 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8010252:	4601      	mov	r1, r0
 8010254:	4620      	mov	r0, r4
 8010256:	f7ff fc6a 	bl	800fb2e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801025a:	e7d9      	b.n	8010210 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801025c:	08020210 	.word	0x08020210
 8010260:	08021c93 	.word	0x08021c93
 8010264:	080202e2 	.word	0x080202e2

08010268 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8010268:	b510      	push	{r4, lr}
 801026a:	4604      	mov	r4, r0
 801026c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801026e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8010270:	b9d9      	cbnz	r1, 80102aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 8010272:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8010274:	2b0a      	cmp	r3, #10
 8010276:	d036      	beq.n	80102e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 8010278:	4620      	mov	r0, r4
 801027a:	f7ff fc21 	bl	800fac0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801027e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8010280:	2b09      	cmp	r3, #9
 8010282:	d906      	bls.n	8010292 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 8010284:	4b18      	ldr	r3, [pc, #96]	; (80102e8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 8010286:	4a19      	ldr	r2, [pc, #100]	; (80102ec <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8010288:	4819      	ldr	r0, [pc, #100]	; (80102f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801028a:	f44f 7182 	mov.w	r1, #260	; 0x104
 801028e:	f00d feab 	bl	801dfe8 <__assert_func>
 8010292:	1c5a      	adds	r2, r3, #1
 8010294:	8622      	strh	r2, [r4, #48]	; 0x30
 8010296:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8010298:	4413      	add	r3, r2
 801029a:	b29b      	uxth	r3, r3
 801029c:	2b09      	cmp	r3, #9
 801029e:	bf88      	it	hi
 80102a0:	3b0a      	subhi	r3, #10
 80102a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80102a6:	8358      	strh	r0, [r3, #26]
 80102a8:	e7e3      	b.n	8010272 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 80102aa:	2b0a      	cmp	r3, #10
 80102ac:	d01b      	beq.n	80102e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 80102ae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80102b0:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80102b4:	3901      	subs	r1, #1
 80102b6:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 80102b8:	8721      	strh	r1, [r4, #56]	; 0x38
 80102ba:	1c51      	adds	r1, r2, #1
 80102bc:	b289      	uxth	r1, r1
 80102be:	2901      	cmp	r1, #1
 80102c0:	bf8a      	itet	hi
 80102c2:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80102c6:	86e1      	strhls	r1, [r4, #54]	; 0x36
 80102c8:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 80102ca:	2b09      	cmp	r3, #9
 80102cc:	d8da      	bhi.n	8010284 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 80102ce:	1c5a      	adds	r2, r3, #1
 80102d0:	8622      	strh	r2, [r4, #48]	; 0x30
 80102d2:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80102d4:	4413      	add	r3, r2
 80102d6:	b29b      	uxth	r3, r3
 80102d8:	2b09      	cmp	r3, #9
 80102da:	bf88      	it	hi
 80102dc:	3b0a      	subhi	r3, #10
 80102de:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80102e2:	8358      	strh	r0, [r3, #26]
 80102e4:	e7c2      	b.n	801026c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80102e6:	bd10      	pop	{r4, pc}
 80102e8:	08021a64 	.word	0x08021a64
 80102ec:	08021de9 	.word	0x08021de9
 80102f0:	080202e2 	.word	0x080202e2

080102f4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80102f4:	b538      	push	{r3, r4, r5, lr}
 80102f6:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 80102f8:	4604      	mov	r4, r0
 80102fa:	b92a      	cbnz	r2, 8010308 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 80102fc:	4b13      	ldr	r3, [pc, #76]	; (801034c <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 80102fe:	4a14      	ldr	r2, [pc, #80]	; (8010350 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 8010300:	4814      	ldr	r0, [pc, #80]	; (8010354 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 8010302:	21d5      	movs	r1, #213	; 0xd5
 8010304:	f00d fe70 	bl	801dfe8 <__assert_func>
 8010308:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801030a:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801030e:	3a01      	subs	r2, #1
 8010310:	8b4d      	ldrh	r5, [r1, #26]
 8010312:	8602      	strh	r2, [r0, #48]	; 0x30
 8010314:	1c5a      	adds	r2, r3, #1
 8010316:	b292      	uxth	r2, r2
 8010318:	2a09      	cmp	r2, #9
 801031a:	bf86      	itte	hi
 801031c:	3b09      	subhi	r3, #9
 801031e:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 8010320:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 8010322:	f7ff ffa1 	bl	8010268 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8010326:	8b23      	ldrh	r3, [r4, #24]
 8010328:	2b01      	cmp	r3, #1
 801032a:	bf9c      	itt	ls
 801032c:	3301      	addls	r3, #1
 801032e:	8323      	strhls	r3, [r4, #24]
 8010330:	8ae3      	ldrh	r3, [r4, #22]
 8010332:	b90b      	cbnz	r3, 8010338 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8010334:	2302      	movs	r3, #2
 8010336:	82e3      	strh	r3, [r4, #22]
 8010338:	8ae3      	ldrh	r3, [r4, #22]
 801033a:	3b01      	subs	r3, #1
 801033c:	b29b      	uxth	r3, r3
 801033e:	82e3      	strh	r3, [r4, #22]
 8010340:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010344:	4628      	mov	r0, r5
 8010346:	8265      	strh	r5, [r4, #18]
 8010348:	bd38      	pop	{r3, r4, r5, pc}
 801034a:	bf00      	nop
 801034c:	08020210 	.word	0x08020210
 8010350:	08021d3e 	.word	0x08021d3e
 8010354:	080202e2 	.word	0x080202e2

08010358 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8010358:	b538      	push	{r3, r4, r5, lr}
 801035a:	428a      	cmp	r2, r1
 801035c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 801035e:	d90c      	bls.n	801037a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 8010360:	b92c      	cbnz	r4, 801036e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 8010362:	4b1c      	ldr	r3, [pc, #112]	; (80103d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8010364:	4a1c      	ldr	r2, [pc, #112]	; (80103d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8010366:	21e1      	movs	r1, #225	; 0xe1
 8010368:	481c      	ldr	r0, [pc, #112]	; (80103dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801036a:	f00d fe3d 	bl	801dfe8 <__assert_func>
 801036e:	3c01      	subs	r4, #1
 8010370:	8604      	strh	r4, [r0, #48]	; 0x30
 8010372:	4b1b      	ldr	r3, [pc, #108]	; (80103e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8010374:	4a1b      	ldr	r2, [pc, #108]	; (80103e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8010376:	21c5      	movs	r1, #197	; 0xc5
 8010378:	e7f6      	b.n	8010368 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801037a:	428c      	cmp	r4, r1
 801037c:	d203      	bcs.n	8010386 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801037e:	4b1a      	ldr	r3, [pc, #104]	; (80103e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 8010380:	4a1a      	ldr	r2, [pc, #104]	; (80103ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 8010382:	21cb      	movs	r1, #203	; 0xcb
 8010384:	e7f0      	b.n	8010368 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8010386:	1a64      	subs	r4, r4, r1
 8010388:	8604      	strh	r4, [r0, #48]	; 0x30
 801038a:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 801038c:	4421      	add	r1, r4
 801038e:	b289      	uxth	r1, r1
 8010390:	2909      	cmp	r1, #9
 8010392:	bf88      	it	hi
 8010394:	390a      	subhi	r1, #10
 8010396:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010398:	250a      	movs	r5, #10
 801039a:	b1ba      	cbz	r2, 80103cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801039c:	3a01      	subs	r2, #1
 801039e:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 80103a0:	b292      	uxth	r2, r2
 80103a2:	2909      	cmp	r1, #9
 80103a4:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80103a8:	d903      	bls.n	80103b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 80103aa:	4b11      	ldr	r3, [pc, #68]	; (80103f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 80103ac:	4a11      	ldr	r2, [pc, #68]	; (80103f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 80103ae:	21e6      	movs	r1, #230	; 0xe6
 80103b0:	e7da      	b.n	8010368 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80103b2:	3101      	adds	r1, #1
 80103b4:	8601      	strh	r1, [r0, #48]	; 0x30
 80103b6:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80103b8:	b901      	cbnz	r1, 80103bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 80103ba:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80103bc:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80103be:	3901      	subs	r1, #1
 80103c0:	b289      	uxth	r1, r1
 80103c2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80103c4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80103c8:	834c      	strh	r4, [r1, #26]
 80103ca:	e7e6      	b.n	801039a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 80103cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80103d0:	f7ff bf4a 	b.w	8010268 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80103d4:	08020210 	.word	0x08020210
 80103d8:	08021b17 	.word	0x08021b17
 80103dc:	080202e2 	.word	0x080202e2
 80103e0:	0802030e 	.word	0x0802030e
 80103e4:	08021bc1 	.word	0x08021bc1
 80103e8:	08021a70 	.word	0x08021a70
 80103ec:	08021e98 	.word	0x08021e98
 80103f0:	08021a7c 	.word	0x08021a7c
 80103f4:	08021a8f 	.word	0x08021a8f

080103f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80103f8:	3a01      	subs	r2, #1
 80103fa:	b570      	push	{r4, r5, r6, lr}
 80103fc:	b292      	uxth	r2, r2
 80103fe:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8010402:	42b2      	cmp	r2, r6
 8010404:	d019      	beq.n	801043a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8010406:	8b04      	ldrh	r4, [r0, #24]
 8010408:	f831 5b02 	ldrh.w	r5, [r1], #2
 801040c:	4294      	cmp	r4, r2
 801040e:	d805      	bhi.n	801041c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 8010410:	4b19      	ldr	r3, [pc, #100]	; (8010478 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8010412:	4a1a      	ldr	r2, [pc, #104]	; (801047c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8010414:	481a      	ldr	r0, [pc, #104]	; (8010480 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8010416:	21c5      	movs	r1, #197	; 0xc5
 8010418:	f00d fde6 	bl	801dfe8 <__assert_func>
 801041c:	8ac4      	ldrh	r4, [r0, #22]
 801041e:	4414      	add	r4, r2
 8010420:	b2a4      	uxth	r4, r4
 8010422:	2c01      	cmp	r4, #1
 8010424:	bf88      	it	hi
 8010426:	3c02      	subhi	r4, #2
 8010428:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801042c:	3a01      	subs	r2, #1
 801042e:	8a64      	ldrh	r4, [r4, #18]
 8010430:	42ac      	cmp	r4, r5
 8010432:	b292      	uxth	r2, r2
 8010434:	d0e5      	beq.n	8010402 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8010436:	2000      	movs	r0, #0
 8010438:	bd70      	pop	{r4, r5, r6, pc}
 801043a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801043e:	2400      	movs	r4, #0
 8010440:	4413      	add	r3, r2
 8010442:	b2a2      	uxth	r2, r4
 8010444:	429a      	cmp	r2, r3
 8010446:	da14      	bge.n	8010472 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8010448:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 801044a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801044e:	4296      	cmp	r6, r2
 8010450:	d802      	bhi.n	8010458 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 8010452:	4b09      	ldr	r3, [pc, #36]	; (8010478 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8010454:	4a0b      	ldr	r2, [pc, #44]	; (8010484 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8010456:	e7dd      	b.n	8010414 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8010458:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 801045a:	4432      	add	r2, r6
 801045c:	b292      	uxth	r2, r2
 801045e:	2a09      	cmp	r2, #9
 8010460:	bf88      	it	hi
 8010462:	3a0a      	subhi	r2, #10
 8010464:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010468:	3401      	adds	r4, #1
 801046a:	8b52      	ldrh	r2, [r2, #26]
 801046c:	42aa      	cmp	r2, r5
 801046e:	d0e8      	beq.n	8010442 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 8010470:	e7e1      	b.n	8010436 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 8010472:	2001      	movs	r0, #1
 8010474:	e7e0      	b.n	8010438 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8010476:	bf00      	nop
 8010478:	0802030e 	.word	0x0802030e
 801047c:	08021f1c 	.word	0x08021f1c
 8010480:	080202e2 	.word	0x080202e2
 8010484:	08021bc1 	.word	0x08021bc1

08010488 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8010488:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801048c:	4605      	mov	r5, r0
 801048e:	4616      	mov	r6, r2
 8010490:	1c8c      	adds	r4, r1, #2
 8010492:	8809      	ldrh	r1, [r1, #0]
 8010494:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8010498:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801049c:	42b3      	cmp	r3, r6
 801049e:	d124      	bne.n	80104ea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80104a0:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80104a4:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80104a8:	f001 070f 	and.w	r7, r1, #15
 80104ac:	f8cd 8000 	str.w	r8, [sp]
 80104b0:	464b      	mov	r3, r9
 80104b2:	4652      	mov	r2, sl
 80104b4:	4621      	mov	r1, r4
 80104b6:	4628      	mov	r0, r5
 80104b8:	f7ff ff9e 	bl	80103f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80104bc:	4683      	mov	fp, r0
 80104be:	b168      	cbz	r0, 80104dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80104c0:	eb0a 0109 	add.w	r1, sl, r9
 80104c4:	4441      	add	r1, r8
 80104c6:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80104ca:	463a      	mov	r2, r7
 80104cc:	4649      	mov	r1, r9
 80104ce:	4628      	mov	r0, r5
 80104d0:	f7ff ff42 	bl	8010358 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80104d4:	4658      	mov	r0, fp
 80104d6:	b003      	add	sp, #12
 80104d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104dc:	eb07 010a 	add.w	r1, r7, sl
 80104e0:	4449      	add	r1, r9
 80104e2:	4441      	add	r1, r8
 80104e4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80104e8:	e7d2      	b.n	8010490 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80104ea:	f04f 0b00 	mov.w	fp, #0
 80104ee:	e7f1      	b.n	80104d4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080104f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80104f0:	b570      	push	{r4, r5, r6, lr}
 80104f2:	8810      	ldrh	r0, [r2, #0]
 80104f4:	4298      	cmp	r0, r3
 80104f6:	d817      	bhi.n	8010528 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80104f8:	1e48      	subs	r0, r1, #1
 80104fa:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80104fe:	4298      	cmp	r0, r3
 8010500:	d312      	bcc.n	8010528 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010502:	2400      	movs	r4, #0
 8010504:	428c      	cmp	r4, r1
 8010506:	d20f      	bcs.n	8010528 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010508:	1860      	adds	r0, r4, r1
 801050a:	1040      	asrs	r0, r0, #1
 801050c:	0085      	lsls	r5, r0, #2
 801050e:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8010512:	42b3      	cmp	r3, r6
 8010514:	d902      	bls.n	801051c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8010516:	3001      	adds	r0, #1
 8010518:	b284      	uxth	r4, r0
 801051a:	e7f3      	b.n	8010504 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801051c:	d201      	bcs.n	8010522 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801051e:	b281      	uxth	r1, r0
 8010520:	e7f0      	b.n	8010504 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8010522:	442a      	add	r2, r5
 8010524:	8850      	ldrh	r0, [r2, #2]
 8010526:	bd70      	pop	{r4, r5, r6, pc}
 8010528:	2000      	movs	r0, #0
 801052a:	e7fc      	b.n	8010526 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801052c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801052c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010530:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8010532:	886f      	ldrh	r7, [r5, #2]
 8010534:	4604      	mov	r4, r0
 8010536:	087f      	lsrs	r7, r7, #1
 8010538:	260b      	movs	r6, #11
 801053a:	3e01      	subs	r6, #1
 801053c:	d01b      	beq.n	8010576 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801053e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8010540:	b92b      	cbnz	r3, 801054e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 8010542:	4b0e      	ldr	r3, [pc, #56]	; (801057c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8010544:	4a0e      	ldr	r2, [pc, #56]	; (8010580 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8010546:	480f      	ldr	r0, [pc, #60]	; (8010584 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8010548:	21c0      	movs	r1, #192	; 0xc0
 801054a:	f00d fd4d 	bl	801dfe8 <__assert_func>
 801054e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8010550:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010554:	462a      	mov	r2, r5
 8010556:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 801055a:	4639      	mov	r1, r7
 801055c:	4643      	mov	r3, r8
 801055e:	4620      	mov	r0, r4
 8010560:	f7ff ffc6 	bl	80104f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8010564:	b138      	cbz	r0, 8010576 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8010566:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801056a:	4642      	mov	r2, r8
 801056c:	4620      	mov	r0, r4
 801056e:	f7ff ff8b 	bl	8010488 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8010572:	2800      	cmp	r0, #0
 8010574:	d1e1      	bne.n	801053a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8010576:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801057a:	bf00      	nop
 801057c:	08020210 	.word	0x08020210
 8010580:	08021c93 	.word	0x08021c93
 8010584:	080202e2 	.word	0x080202e2

08010588 <_ZN8touchgfx8ceil28_4El>:
 8010588:	f110 030f 	adds.w	r3, r0, #15
 801058c:	d401      	bmi.n	8010592 <_ZN8touchgfx8ceil28_4El+0xa>
 801058e:	1118      	asrs	r0, r3, #4
 8010590:	4770      	bx	lr
 8010592:	f1c0 0001 	rsb	r0, r0, #1
 8010596:	f010 000f 	ands.w	r0, r0, #15
 801059a:	bf18      	it	ne
 801059c:	2001      	movne	r0, #1
 801059e:	2210      	movs	r2, #16
 80105a0:	fb93 f3f2 	sdiv	r3, r3, r2
 80105a4:	1a18      	subs	r0, r3, r0
 80105a6:	4770      	bx	lr

080105a8 <_ZN8touchgfx11floorDivModEllRlS0_>:
 80105a8:	2900      	cmp	r1, #0
 80105aa:	b538      	push	{r3, r4, r5, lr}
 80105ac:	dc05      	bgt.n	80105ba <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 80105ae:	4b0f      	ldr	r3, [pc, #60]	; (80105ec <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 80105b0:	4a0f      	ldr	r2, [pc, #60]	; (80105f0 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 80105b2:	4810      	ldr	r0, [pc, #64]	; (80105f4 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 80105b4:	21fa      	movs	r1, #250	; 0xfa
 80105b6:	f00d fd17 	bl	801dfe8 <__assert_func>
 80105ba:	2800      	cmp	r0, #0
 80105bc:	db06      	blt.n	80105cc <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 80105be:	fb90 f4f1 	sdiv	r4, r0, r1
 80105c2:	6014      	str	r4, [r2, #0]
 80105c4:	fb01 0114 	mls	r1, r1, r4, r0
 80105c8:	6019      	str	r1, [r3, #0]
 80105ca:	bd38      	pop	{r3, r4, r5, pc}
 80105cc:	4240      	negs	r0, r0
 80105ce:	fb90 f4f1 	sdiv	r4, r0, r1
 80105d2:	4265      	negs	r5, r4
 80105d4:	fb01 0014 	mls	r0, r1, r4, r0
 80105d8:	6015      	str	r5, [r2, #0]
 80105da:	6018      	str	r0, [r3, #0]
 80105dc:	2800      	cmp	r0, #0
 80105de:	d0f4      	beq.n	80105ca <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 80105e0:	6810      	ldr	r0, [r2, #0]
 80105e2:	3801      	subs	r0, #1
 80105e4:	6010      	str	r0, [r2, #0]
 80105e6:	6818      	ldr	r0, [r3, #0]
 80105e8:	1a09      	subs	r1, r1, r0
 80105ea:	e7ed      	b.n	80105c8 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 80105ec:	08021fed 	.word	0x08021fed
 80105f0:	0802202c 	.word	0x0802202c
 80105f4:	08021ffd 	.word	0x08021ffd

080105f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80105f8:	b570      	push	{r4, r5, r6, lr}
 80105fa:	694a      	ldr	r2, [r1, #20]
 80105fc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80105fe:	684b      	ldr	r3, [r1, #4]
 8010600:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8010602:	1b54      	subs	r4, r2, r5
 8010604:	f000 8106 	beq.w	8010814 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8010608:	1b9b      	subs	r3, r3, r6
 801060a:	d003      	beq.n	8010614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801060c:	4363      	muls	r3, r4
 801060e:	2210      	movs	r2, #16
 8010610:	fb93 f3f2 	sdiv	r3, r3, r2
 8010614:	680c      	ldr	r4, [r1, #0]
 8010616:	698a      	ldr	r2, [r1, #24]
 8010618:	1b65      	subs	r5, r4, r5
 801061a:	f000 80fd 	beq.w	8010818 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801061e:	1b92      	subs	r2, r2, r6
 8010620:	d003      	beq.n	801062a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010622:	436a      	muls	r2, r5
 8010624:	2410      	movs	r4, #16
 8010626:	fb92 f2f4 	sdiv	r2, r2, r4
 801062a:	1a9b      	subs	r3, r3, r2
 801062c:	ee07 3a90 	vmov	s15, r3
 8010630:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8010854 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010634:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010638:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801063c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8010640:	460a      	mov	r2, r1
 8010642:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8010646:	4603      	mov	r3, r0
 8010648:	f100 040c 	add.w	r4, r0, #12
 801064c:	eeb1 6a43 	vneg.f32	s12, s6
 8010650:	edd2 7a02 	vldr	s15, [r2, #8]
 8010654:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8010658:	3214      	adds	r2, #20
 801065a:	ece3 6a01 	vstmia	r3!, {s13}
 801065e:	ed52 7a02 	vldr	s15, [r2, #-8]
 8010662:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010666:	429c      	cmp	r4, r3
 8010668:	edc3 7a02 	vstr	s15, [r3, #8]
 801066c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8010670:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010674:	edc3 7a05 	vstr	s15, [r3, #20]
 8010678:	d1ea      	bne.n	8010650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801067a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801067c:	698b      	ldr	r3, [r1, #24]
 801067e:	edd0 4a02 	vldr	s9, [r0, #8]
 8010682:	edd0 3a00 	vldr	s7, [r0]
 8010686:	edd0 6a01 	vldr	s13, [r0, #4]
 801068a:	ed90 5a05 	vldr	s10, [r0, #20]
 801068e:	ed90 2a03 	vldr	s4, [r0, #12]
 8010692:	edd0 5a04 	vldr	s11, [r0, #16]
 8010696:	ed90 1a07 	vldr	s2, [r0, #28]
 801069a:	edd0 2a06 	vldr	s5, [r0, #24]
 801069e:	1a9b      	subs	r3, r3, r2
 80106a0:	ee07 3a90 	vmov	s15, r3
 80106a4:	684b      	ldr	r3, [r1, #4]
 80106a6:	1a9b      	subs	r3, r3, r2
 80106a8:	ee07 3a10 	vmov	s14, r3
 80106ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80106b0:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80106b4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80106b8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80106bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80106c0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80106c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80106c8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80106cc:	eee6 7a87 	vfma.f32	s15, s13, s14
 80106d0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80106d4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80106d8:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80106dc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80106de:	694a      	ldr	r2, [r1, #20]
 80106e0:	1b13      	subs	r3, r2, r4
 80106e2:	ee07 3a10 	vmov	s14, r3
 80106e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80106ea:	680b      	ldr	r3, [r1, #0]
 80106ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 80106f0:	1b1b      	subs	r3, r3, r4
 80106f2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80106f6:	ee07 3a10 	vmov	s14, r3
 80106fa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80106fe:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010702:	eee6 4a87 	vfma.f32	s9, s13, s14
 8010706:	ee64 4a86 	vmul.f32	s9, s9, s12
 801070a:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801070e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010710:	698b      	ldr	r3, [r1, #24]
 8010712:	1a9b      	subs	r3, r3, r2
 8010714:	ee06 3a90 	vmov	s13, r3
 8010718:	684b      	ldr	r3, [r1, #4]
 801071a:	1a9b      	subs	r3, r3, r2
 801071c:	ee07 3a10 	vmov	s14, r3
 8010720:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010724:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010728:	ee66 6a84 	vmul.f32	s13, s13, s8
 801072c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010730:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010734:	eee5 6a87 	vfma.f32	s13, s11, s14
 8010738:	ee66 6a83 	vmul.f32	s13, s13, s6
 801073c:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8010740:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010742:	694a      	ldr	r2, [r1, #20]
 8010744:	1b13      	subs	r3, r2, r4
 8010746:	ee07 3a10 	vmov	s14, r3
 801074a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801074e:	680b      	ldr	r3, [r1, #0]
 8010750:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010754:	1b1b      	subs	r3, r3, r4
 8010756:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801075a:	ee07 3a10 	vmov	s14, r3
 801075e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010762:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010766:	eea5 5a87 	vfma.f32	s10, s11, s14
 801076a:	edd0 5a08 	vldr	s11, [r0, #32]
 801076e:	ee25 5a06 	vmul.f32	s10, s10, s12
 8010772:	ee31 1a65 	vsub.f32	s2, s2, s11
 8010776:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801077a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801077c:	698b      	ldr	r3, [r1, #24]
 801077e:	1a9b      	subs	r3, r3, r2
 8010780:	ee07 3a10 	vmov	s14, r3
 8010784:	684b      	ldr	r3, [r1, #4]
 8010786:	1a9b      	subs	r3, r3, r2
 8010788:	ee01 3a90 	vmov	s3, r3
 801078c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010790:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8010794:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010798:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801079c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80107a0:	ee61 1a84 	vmul.f32	s3, s3, s8
 80107a4:	eea1 7a21 	vfma.f32	s14, s2, s3
 80107a8:	ee27 7a03 	vmul.f32	s14, s14, s6
 80107ac:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80107b0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80107b2:	694a      	ldr	r2, [r1, #20]
 80107b4:	1b13      	subs	r3, r2, r4
 80107b6:	ee03 3a10 	vmov	s6, r3
 80107ba:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80107be:	680b      	ldr	r3, [r1, #0]
 80107c0:	ee23 3a04 	vmul.f32	s6, s6, s8
 80107c4:	1b1b      	subs	r3, r3, r4
 80107c6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80107ca:	ee03 3a10 	vmov	s6, r3
 80107ce:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80107d2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80107d6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80107da:	ee25 6a86 	vmul.f32	s12, s11, s12
 80107de:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80107e2:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80107e6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80107ea:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80107ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80107f2:	dd13      	ble.n	801081c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80107f4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80107f8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80107fc:	63c3      	str	r3, [r0, #60]	; 0x3c
 80107fe:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010802:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801080a:	dd15      	ble.n	8010838 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801080c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010810:	6403      	str	r3, [r0, #64]	; 0x40
 8010812:	bd70      	pop	{r4, r5, r6, pc}
 8010814:	4623      	mov	r3, r4
 8010816:	e6fd      	b.n	8010614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010818:	462a      	mov	r2, r5
 801081a:	e706      	b.n	801062a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801081c:	d502      	bpl.n	8010824 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801081e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010822:	e7e9      	b.n	80107f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8010824:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8010828:	eea3 2a85 	vfma.f32	s4, s7, s10
 801082c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010834:	dade      	bge.n	80107f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8010836:	e7f2      	b.n	801081e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8010838:	d502      	bpl.n	8010840 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801083a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801083e:	e7e7      	b.n	8010810 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8010840:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8010844:	eee3 4a86 	vfma.f32	s9, s7, s12
 8010848:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801084c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010850:	dadc      	bge.n	801080c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8010852:	e7f2      	b.n	801083a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8010854:	3d800000 	.word	0x3d800000

08010858 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8010858:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801085c:	f04f 0814 	mov.w	r8, #20
 8010860:	fb08 f903 	mul.w	r9, r8, r3
 8010864:	eb02 0a09 	add.w	sl, r2, r9
 8010868:	4604      	mov	r4, r0
 801086a:	f8da 0004 	ldr.w	r0, [sl, #4]
 801086e:	4617      	mov	r7, r2
 8010870:	460d      	mov	r5, r1
 8010872:	461e      	mov	r6, r3
 8010874:	f7ff fe88 	bl	8010588 <_ZN8touchgfx8ceil28_4El>
 8010878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801087a:	6160      	str	r0, [r4, #20]
 801087c:	fb08 f803 	mul.w	r8, r8, r3
 8010880:	eb07 0b08 	add.w	fp, r7, r8
 8010884:	9001      	str	r0, [sp, #4]
 8010886:	f8db 0004 	ldr.w	r0, [fp, #4]
 801088a:	f7ff fe7d 	bl	8010588 <_ZN8touchgfx8ceil28_4El>
 801088e:	9a01      	ldr	r2, [sp, #4]
 8010890:	1a80      	subs	r0, r0, r2
 8010892:	61a0      	str	r0, [r4, #24]
 8010894:	2800      	cmp	r0, #0
 8010896:	f000 8088 	beq.w	80109aa <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 801089a:	f857 3009 	ldr.w	r3, [r7, r9]
 801089e:	f857 c008 	ldr.w	ip, [r7, r8]
 80108a2:	f8da 1004 	ldr.w	r1, [sl, #4]
 80108a6:	f8db 0004 	ldr.w	r0, [fp, #4]
 80108aa:	ebac 0c03 	sub.w	ip, ip, r3
 80108ae:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 80108b2:	fb0b f202 	mul.w	r2, fp, r2
 80108b6:	fb0c 2211 	mls	r2, ip, r1, r2
 80108ba:	1a40      	subs	r0, r0, r1
 80108bc:	ea4f 1800 	mov.w	r8, r0, lsl #4
 80108c0:	fb00 2003 	mla	r0, r0, r3, r2
 80108c4:	3801      	subs	r0, #1
 80108c6:	f104 0310 	add.w	r3, r4, #16
 80108ca:	4622      	mov	r2, r4
 80108cc:	4641      	mov	r1, r8
 80108ce:	4440      	add	r0, r8
 80108d0:	f7ff fe6a 	bl	80105a8 <_ZN8touchgfx11floorDivModEllRlS0_>
 80108d4:	f104 0308 	add.w	r3, r4, #8
 80108d8:	1d22      	adds	r2, r4, #4
 80108da:	4641      	mov	r1, r8
 80108dc:	4658      	mov	r0, fp
 80108de:	f7ff fe63 	bl	80105a8 <_ZN8touchgfx11floorDivModEllRlS0_>
 80108e2:	f8c4 800c 	str.w	r8, [r4, #12]
 80108e6:	f8da 3004 	ldr.w	r3, [sl, #4]
 80108ea:	6962      	ldr	r2, [r4, #20]
 80108ec:	eddf 6a31 	vldr	s13, [pc, #196]	; 80109b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80108f0:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 80108f4:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 80108f8:	ee07 3a10 	vmov	s14, r3
 80108fc:	6822      	ldr	r2, [r4, #0]
 80108fe:	f857 3009 	ldr.w	r3, [r7, r9]
 8010902:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8010906:	ee07 3a90 	vmov	s15, r3
 801090a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801090e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010912:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8010916:	ee27 7a26 	vmul.f32	s14, s14, s13
 801091a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801091e:	edd3 6a00 	vldr	s13, [r3]
 8010922:	eee6 6a07 	vfma.f32	s13, s12, s14
 8010926:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801092a:	eee6 6a27 	vfma.f32	s13, s12, s15
 801092e:	edc4 6a07 	vstr	s13, [r4, #28]
 8010932:	edd4 6a01 	vldr	s13, [r4, #4]
 8010936:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 801093a:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801093e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010942:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010946:	ed84 6a08 	vstr	s12, [r4, #32]
 801094a:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 801094c:	6262      	str	r2, [r4, #36]	; 0x24
 801094e:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8010952:	ed93 6a03 	vldr	s12, [r3, #12]
 8010956:	eea5 6a87 	vfma.f32	s12, s11, s14
 801095a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 801095e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8010962:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8010966:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 801096a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 801096e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010972:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8010976:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8010978:	6322      	str	r2, [r4, #48]	; 0x30
 801097a:	ed93 6a06 	vldr	s12, [r3, #24]
 801097e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8010982:	eea5 6a87 	vfma.f32	s12, s11, s14
 8010986:	eeb0 7a46 	vmov.f32	s14, s12
 801098a:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 801098e:	eea6 7a27 	vfma.f32	s14, s12, s15
 8010992:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8010996:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 801099a:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 801099e:	eee6 7a87 	vfma.f32	s15, s13, s14
 80109a2:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 80109a6:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80109a8:	63e3      	str	r3, [r4, #60]	; 0x3c
 80109aa:	4620      	mov	r0, r4
 80109ac:	b003      	add	sp, #12
 80109ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109b2:	bf00      	nop
 80109b4:	3d800000 	.word	0x3d800000

080109b8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80109b8:	4b01      	ldr	r3, [pc, #4]	; (80109c0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80109ba:	6018      	str	r0, [r3, #0]
 80109bc:	4770      	bx	lr
 80109be:	bf00      	nop
 80109c0:	2000d3d8 	.word	0x2000d3d8

080109c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80109c4:	4b06      	ldr	r3, [pc, #24]	; (80109e0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80109c6:	881a      	ldrh	r2, [r3, #0]
 80109c8:	4282      	cmp	r2, r0
 80109ca:	d807      	bhi.n	80109dc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80109cc:	4b05      	ldr	r3, [pc, #20]	; (80109e4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80109ce:	881b      	ldrh	r3, [r3, #0]
 80109d0:	4413      	add	r3, r2
 80109d2:	4298      	cmp	r0, r3
 80109d4:	bfac      	ite	ge
 80109d6:	2000      	movge	r0, #0
 80109d8:	2001      	movlt	r0, #1
 80109da:	4770      	bx	lr
 80109dc:	2000      	movs	r0, #0
 80109de:	4770      	bx	lr
 80109e0:	2000d3f8 	.word	0x2000d3f8
 80109e4:	2000d3fc 	.word	0x2000d3fc

080109e8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80109e8:	b508      	push	{r3, lr}
 80109ea:	4601      	mov	r1, r0
 80109ec:	f7ff ffea 	bl	80109c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80109f0:	b118      	cbz	r0, 80109fa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80109f2:	4b02      	ldr	r3, [pc, #8]	; (80109fc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80109f4:	681b      	ldr	r3, [r3, #0]
 80109f6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80109fa:	bd08      	pop	{r3, pc}
 80109fc:	2000d3dc 	.word	0x2000d3dc

08010a00 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010a00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a04:	4d28      	ldr	r5, [pc, #160]	; (8010aa8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010a06:	682b      	ldr	r3, [r5, #0]
 8010a08:	2b00      	cmp	r3, #0
 8010a0a:	d04a      	beq.n	8010aa2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8010a0c:	4a27      	ldr	r2, [pc, #156]	; (8010aac <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010a0e:	4e28      	ldr	r6, [pc, #160]	; (8010ab0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010a10:	8810      	ldrh	r0, [r2, #0]
 8010a12:	f8b6 8000 	ldrh.w	r8, [r6]
 8010a16:	4c27      	ldr	r4, [pc, #156]	; (8010ab4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010a18:	4f27      	ldr	r7, [pc, #156]	; (8010ab8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010a1a:	4440      	add	r0, r8
 8010a1c:	1c41      	adds	r1, r0, #1
 8010a1e:	f021 0101 	bic.w	r1, r1, #1
 8010a22:	0409      	lsls	r1, r1, #16
 8010a24:	0c09      	lsrs	r1, r1, #16
 8010a26:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 8010a2a:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8010a2e:	eb03 020e 	add.w	r2, r3, lr
 8010a32:	eb0e 010c 	add.w	r1, lr, ip
 8010a36:	6022      	str	r2, [r4, #0]
 8010a38:	185a      	adds	r2, r3, r1
 8010a3a:	603a      	str	r2, [r7, #0]
 8010a3c:	220e      	movs	r2, #14
 8010a3e:	fb02 f208 	mul.w	r2, r2, r8
 8010a42:	3203      	adds	r2, #3
 8010a44:	f022 0203 	bic.w	r2, r2, #3
 8010a48:	4411      	add	r1, r2
 8010a4a:	440b      	add	r3, r1
 8010a4c:	491b      	ldr	r1, [pc, #108]	; (8010abc <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8010a4e:	600b      	str	r3, [r1, #0]
 8010a50:	491b      	ldr	r1, [pc, #108]	; (8010ac0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8010a52:	2300      	movs	r3, #0
 8010a54:	800b      	strh	r3, [r1, #0]
 8010a56:	491b      	ldr	r1, [pc, #108]	; (8010ac4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 8010a58:	6809      	ldr	r1, [r1, #0]
 8010a5a:	eba1 010e 	sub.w	r1, r1, lr
 8010a5e:	eba1 010c 	sub.w	r1, r1, ip
 8010a62:	1a8a      	subs	r2, r1, r2
 8010a64:	4918      	ldr	r1, [pc, #96]	; (8010ac8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 8010a66:	600a      	str	r2, [r1, #0]
 8010a68:	4a18      	ldr	r2, [pc, #96]	; (8010acc <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 8010a6a:	469c      	mov	ip, r3
 8010a6c:	8013      	strh	r3, [r2, #0]
 8010a6e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010a72:	4283      	cmp	r3, r0
 8010a74:	d10d      	bne.n	8010a92 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 8010a76:	8835      	ldrh	r5, [r6, #0]
 8010a78:	6838      	ldr	r0, [r7, #0]
 8010a7a:	2300      	movs	r3, #0
 8010a7c:	240e      	movs	r4, #14
 8010a7e:	429d      	cmp	r5, r3
 8010a80:	d90f      	bls.n	8010aa2 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8010a82:	fb04 0203 	mla	r2, r4, r3, r0
 8010a86:	3301      	adds	r3, #1
 8010a88:	7b11      	ldrb	r1, [r2, #12]
 8010a8a:	f36f 1145 	bfc	r1, #5, #1
 8010a8e:	7311      	strb	r1, [r2, #12]
 8010a90:	e7f5      	b.n	8010a7e <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8010a92:	682a      	ldr	r2, [r5, #0]
 8010a94:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010a98:	6822      	ldr	r2, [r4, #0]
 8010a9a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8010a9e:	3301      	adds	r3, #1
 8010aa0:	e7e7      	b.n	8010a72 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 8010aa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010aa6:	bf00      	nop
 8010aa8:	2000d3dc 	.word	0x2000d3dc
 8010aac:	2000d3f8 	.word	0x2000d3f8
 8010ab0:	2000d3fc 	.word	0x2000d3fc
 8010ab4:	2000d3f0 	.word	0x2000d3f0
 8010ab8:	2000d3e0 	.word	0x2000d3e0
 8010abc:	2000d3e8 	.word	0x2000d3e8
 8010ac0:	2000d3fa 	.word	0x2000d3fa
 8010ac4:	2000d3e4 	.word	0x2000d3e4
 8010ac8:	2000d3f4 	.word	0x2000d3f4
 8010acc:	2000d3ec 	.word	0x2000d3ec

08010ad0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8010ad0:	b510      	push	{r4, lr}
 8010ad2:	4b10      	ldr	r3, [pc, #64]	; (8010b14 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8010ad4:	681b      	ldr	r3, [r3, #0]
 8010ad6:	b9db      	cbnz	r3, 8010b10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010ad8:	b1d1      	cbz	r1, 8010b10 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8010ada:	4b0f      	ldr	r3, [pc, #60]	; (8010b18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8010adc:	801a      	strh	r2, [r3, #0]
 8010ade:	4b0f      	ldr	r3, [pc, #60]	; (8010b1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8010ae0:	881b      	ldrh	r3, [r3, #0]
 8010ae2:	b292      	uxth	r2, r2
 8010ae4:	240e      	movs	r4, #14
 8010ae6:	4413      	add	r3, r2
 8010ae8:	4362      	muls	r2, r4
 8010aea:	2406      	movs	r4, #6
 8010aec:	fb04 2203 	mla	r2, r4, r3, r2
 8010af0:	428a      	cmp	r2, r1
 8010af2:	d305      	bcc.n	8010b00 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8010af4:	4b0a      	ldr	r3, [pc, #40]	; (8010b20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8010af6:	4a0b      	ldr	r2, [pc, #44]	; (8010b24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8010af8:	480b      	ldr	r0, [pc, #44]	; (8010b28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8010afa:	2137      	movs	r1, #55	; 0x37
 8010afc:	f00d fa74 	bl	801dfe8 <__assert_func>
 8010b00:	4b0a      	ldr	r3, [pc, #40]	; (8010b2c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8010b02:	6019      	str	r1, [r3, #0]
 8010b04:	4b0a      	ldr	r3, [pc, #40]	; (8010b30 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8010b06:	6018      	str	r0, [r3, #0]
 8010b08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b0c:	f7ff bf78 	b.w	8010a00 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8010b10:	bd10      	pop	{r4, pc}
 8010b12:	bf00      	nop
 8010b14:	2000d3e8 	.word	0x2000d3e8
 8010b18:	2000d3fc 	.word	0x2000d3fc
 8010b1c:	2000d3f8 	.word	0x2000d3f8
 8010b20:	080220ca 	.word	0x080220ca
 8010b24:	08022123 	.word	0x08022123
 8010b28:	080220a5 	.word	0x080220a5
 8010b2c:	2000d3e4 	.word	0x2000d3e4
 8010b30:	2000d3dc 	.word	0x2000d3dc

08010b34 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010b34:	b470      	push	{r4, r5, r6}
 8010b36:	4c07      	ldr	r4, [pc, #28]	; (8010b54 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010b38:	6826      	ldr	r6, [r4, #0]
 8010b3a:	4605      	mov	r5, r0
 8010b3c:	4610      	mov	r0, r2
 8010b3e:	9a03      	ldr	r2, [sp, #12]
 8010b40:	b936      	cbnz	r6, 8010b50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010b42:	6025      	str	r5, [r4, #0]
 8010b44:	4c04      	ldr	r4, [pc, #16]	; (8010b58 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010b46:	8021      	strh	r1, [r4, #0]
 8010b48:	bc70      	pop	{r4, r5, r6}
 8010b4a:	4619      	mov	r1, r3
 8010b4c:	f7ff bfc0 	b.w	8010ad0 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010b50:	bc70      	pop	{r4, r5, r6}
 8010b52:	4770      	bx	lr
 8010b54:	2000d400 	.word	0x2000d400
 8010b58:	2000d3f8 	.word	0x2000d3f8

08010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010b5c:	b508      	push	{r3, lr}
 8010b5e:	4b14      	ldr	r3, [pc, #80]	; (8010bb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010b60:	6819      	ldr	r1, [r3, #0]
 8010b62:	b931      	cbnz	r1, 8010b72 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8010b64:	4b13      	ldr	r3, [pc, #76]	; (8010bb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010b66:	4a14      	ldr	r2, [pc, #80]	; (8010bb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010b68:	4814      	ldr	r0, [pc, #80]	; (8010bbc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010b6a:	f240 3187 	movw	r1, #903	; 0x387
 8010b6e:	f00d fa3b 	bl	801dfe8 <__assert_func>
 8010b72:	4a13      	ldr	r2, [pc, #76]	; (8010bc0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010b74:	8803      	ldrh	r3, [r0, #0]
 8010b76:	8812      	ldrh	r2, [r2, #0]
 8010b78:	4293      	cmp	r3, r2
 8010b7a:	d204      	bcs.n	8010b86 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8010b7c:	2214      	movs	r2, #20
 8010b7e:	fb02 1303 	mla	r3, r2, r3, r1
 8010b82:	8918      	ldrh	r0, [r3, #8]
 8010b84:	bd08      	pop	{r3, pc}
 8010b86:	490f      	ldr	r1, [pc, #60]	; (8010bc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8010b88:	8809      	ldrh	r1, [r1, #0]
 8010b8a:	4411      	add	r1, r2
 8010b8c:	428b      	cmp	r3, r1
 8010b8e:	da06      	bge.n	8010b9e <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8010b90:	1a9b      	subs	r3, r3, r2
 8010b92:	4a0d      	ldr	r2, [pc, #52]	; (8010bc8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8010b94:	6812      	ldr	r2, [r2, #0]
 8010b96:	210e      	movs	r1, #14
 8010b98:	fb01 2303 	mla	r3, r1, r3, r2
 8010b9c:	e7f1      	b.n	8010b82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8010b9e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010ba2:	4293      	cmp	r3, r2
 8010ba4:	bf0a      	itet	eq
 8010ba6:	4b09      	ldreq	r3, [pc, #36]	; (8010bcc <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8010ba8:	2000      	movne	r0, #0
 8010baa:	8818      	ldrheq	r0, [r3, #0]
 8010bac:	e7ea      	b.n	8010b84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8010bae:	bf00      	nop
 8010bb0:	2000d400 	.word	0x2000d400
 8010bb4:	080214a0 	.word	0x080214a0
 8010bb8:	080221d0 	.word	0x080221d0
 8010bbc:	080220a5 	.word	0x080220a5
 8010bc0:	2000d3f8 	.word	0x2000d3f8
 8010bc4:	2000d3fc 	.word	0x2000d3fc
 8010bc8:	2000d3e0 	.word	0x2000d3e0
 8010bcc:	2000d34c 	.word	0x2000d34c

08010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010bd0:	b508      	push	{r3, lr}
 8010bd2:	4b14      	ldr	r3, [pc, #80]	; (8010c24 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8010bd4:	6819      	ldr	r1, [r3, #0]
 8010bd6:	b931      	cbnz	r1, 8010be6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8010bd8:	4b13      	ldr	r3, [pc, #76]	; (8010c28 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8010bda:	4a14      	ldr	r2, [pc, #80]	; (8010c2c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8010bdc:	4814      	ldr	r0, [pc, #80]	; (8010c30 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8010bde:	f240 319b 	movw	r1, #923	; 0x39b
 8010be2:	f00d fa01 	bl	801dfe8 <__assert_func>
 8010be6:	4a13      	ldr	r2, [pc, #76]	; (8010c34 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8010be8:	8803      	ldrh	r3, [r0, #0]
 8010bea:	8812      	ldrh	r2, [r2, #0]
 8010bec:	4293      	cmp	r3, r2
 8010bee:	d204      	bcs.n	8010bfa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8010bf0:	2214      	movs	r2, #20
 8010bf2:	fb02 1303 	mla	r3, r2, r3, r1
 8010bf6:	8958      	ldrh	r0, [r3, #10]
 8010bf8:	bd08      	pop	{r3, pc}
 8010bfa:	490f      	ldr	r1, [pc, #60]	; (8010c38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8010bfc:	8809      	ldrh	r1, [r1, #0]
 8010bfe:	4411      	add	r1, r2
 8010c00:	428b      	cmp	r3, r1
 8010c02:	da06      	bge.n	8010c12 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8010c04:	1a9b      	subs	r3, r3, r2
 8010c06:	4a0d      	ldr	r2, [pc, #52]	; (8010c3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8010c08:	6812      	ldr	r2, [r2, #0]
 8010c0a:	210e      	movs	r1, #14
 8010c0c:	fb01 2303 	mla	r3, r1, r3, r2
 8010c10:	e7f1      	b.n	8010bf6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 8010c12:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010c16:	4293      	cmp	r3, r2
 8010c18:	bf0a      	itet	eq
 8010c1a:	4b09      	ldreq	r3, [pc, #36]	; (8010c40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8010c1c:	2000      	movne	r0, #0
 8010c1e:	8818      	ldrheq	r0, [r3, #0]
 8010c20:	e7ea      	b.n	8010bf8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 8010c22:	bf00      	nop
 8010c24:	2000d400 	.word	0x2000d400
 8010c28:	080214a0 	.word	0x080214a0
 8010c2c:	080221fc 	.word	0x080221fc
 8010c30:	080220a5 	.word	0x080220a5
 8010c34:	2000d3f8 	.word	0x2000d3f8
 8010c38:	2000d3fc 	.word	0x2000d3fc
 8010c3c:	2000d3e0 	.word	0x2000d3e0
 8010c40:	2000d34e 	.word	0x2000d34e

08010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8010c44:	b510      	push	{r4, lr}
 8010c46:	4b23      	ldr	r3, [pc, #140]	; (8010cd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8010c48:	681c      	ldr	r4, [r3, #0]
 8010c4a:	b934      	cbnz	r4, 8010c5a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8010c4c:	4b22      	ldr	r3, [pc, #136]	; (8010cd8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8010c4e:	4a23      	ldr	r2, [pc, #140]	; (8010cdc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8010c50:	4823      	ldr	r0, [pc, #140]	; (8010ce0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8010c52:	f240 31af 	movw	r1, #943	; 0x3af
 8010c56:	f00d f9c7 	bl	801dfe8 <__assert_func>
 8010c5a:	4a22      	ldr	r2, [pc, #136]	; (8010ce4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8010c5c:	880b      	ldrh	r3, [r1, #0]
 8010c5e:	8812      	ldrh	r2, [r2, #0]
 8010c60:	4293      	cmp	r3, r2
 8010c62:	d211      	bcs.n	8010c88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8010c64:	2214      	movs	r2, #20
 8010c66:	fb02 4303 	mla	r3, r2, r3, r4
 8010c6a:	8a1a      	ldrh	r2, [r3, #16]
 8010c6c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8010c70:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8010c74:	8a5b      	ldrh	r3, [r3, #18]
 8010c76:	8004      	strh	r4, [r0, #0]
 8010c78:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010c7c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8010c80:	8041      	strh	r1, [r0, #2]
 8010c82:	8082      	strh	r2, [r0, #4]
 8010c84:	80c3      	strh	r3, [r0, #6]
 8010c86:	e00e      	b.n	8010ca6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010c88:	4917      	ldr	r1, [pc, #92]	; (8010ce8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8010c8a:	8809      	ldrh	r1, [r1, #0]
 8010c8c:	4411      	add	r1, r2
 8010c8e:	428b      	cmp	r3, r1
 8010c90:	da0a      	bge.n	8010ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 8010c92:	1a9b      	subs	r3, r3, r2
 8010c94:	4a15      	ldr	r2, [pc, #84]	; (8010cec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 8010c96:	6812      	ldr	r2, [r2, #0]
 8010c98:	210e      	movs	r1, #14
 8010c9a:	fb01 2303 	mla	r3, r1, r3, r2
 8010c9e:	681a      	ldr	r2, [r3, #0]
 8010ca0:	6002      	str	r2, [r0, #0]
 8010ca2:	685a      	ldr	r2, [r3, #4]
 8010ca4:	6042      	str	r2, [r0, #4]
 8010ca6:	bd10      	pop	{r4, pc}
 8010ca8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010cac:	4293      	cmp	r3, r2
 8010cae:	d10b      	bne.n	8010cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 8010cb0:	4b0f      	ldr	r3, [pc, #60]	; (8010cf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 8010cb2:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010cb6:	4b0f      	ldr	r3, [pc, #60]	; (8010cf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 8010cb8:	8081      	strh	r1, [r0, #4]
 8010cba:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010cbe:	80c2      	strh	r2, [r0, #6]
 8010cc0:	2300      	movs	r3, #0
 8010cc2:	8003      	strh	r3, [r0, #0]
 8010cc4:	8043      	strh	r3, [r0, #2]
 8010cc6:	e7ee      	b.n	8010ca6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8010cc8:	2300      	movs	r3, #0
 8010cca:	8003      	strh	r3, [r0, #0]
 8010ccc:	8043      	strh	r3, [r0, #2]
 8010cce:	8083      	strh	r3, [r0, #4]
 8010cd0:	e7d8      	b.n	8010c84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 8010cd2:	bf00      	nop
 8010cd4:	2000d400 	.word	0x2000d400
 8010cd8:	080214a0 	.word	0x080214a0
 8010cdc:	08022169 	.word	0x08022169
 8010ce0:	080220a5 	.word	0x080220a5
 8010ce4:	2000d3f8 	.word	0x2000d3f8
 8010ce8:	2000d3fc 	.word	0x2000d3fc
 8010cec:	2000d3e0 	.word	0x2000d3e0
 8010cf0:	2000d34c 	.word	0x2000d34c
 8010cf4:	2000d34e 	.word	0x2000d34e

08010cf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8010cf8:	4b18      	ldr	r3, [pc, #96]	; (8010d5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8010cfa:	681b      	ldr	r3, [r3, #0]
 8010cfc:	b34b      	cbz	r3, 8010d52 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010cfe:	4a18      	ldr	r2, [pc, #96]	; (8010d60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8010d00:	8800      	ldrh	r0, [r0, #0]
 8010d02:	8812      	ldrh	r2, [r2, #0]
 8010d04:	4290      	cmp	r0, r2
 8010d06:	d211      	bcs.n	8010d2c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8010d08:	2214      	movs	r2, #20
 8010d0a:	fb02 3300 	mla	r3, r2, r0, r3
 8010d0e:	8a1a      	ldrh	r2, [r3, #16]
 8010d10:	8919      	ldrh	r1, [r3, #8]
 8010d12:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8010d16:	428a      	cmp	r2, r1
 8010d18:	db1d      	blt.n	8010d56 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010d1a:	8a58      	ldrh	r0, [r3, #18]
 8010d1c:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8010d20:	895b      	ldrh	r3, [r3, #10]
 8010d22:	4298      	cmp	r0, r3
 8010d24:	bfac      	ite	ge
 8010d26:	2000      	movge	r0, #0
 8010d28:	2001      	movlt	r0, #1
 8010d2a:	4770      	bx	lr
 8010d2c:	4b0d      	ldr	r3, [pc, #52]	; (8010d64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8010d2e:	881b      	ldrh	r3, [r3, #0]
 8010d30:	4413      	add	r3, r2
 8010d32:	4298      	cmp	r0, r3
 8010d34:	da0d      	bge.n	8010d52 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8010d36:	4b0c      	ldr	r3, [pc, #48]	; (8010d68 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8010d38:	681b      	ldr	r3, [r3, #0]
 8010d3a:	1a80      	subs	r0, r0, r2
 8010d3c:	220e      	movs	r2, #14
 8010d3e:	fb02 3300 	mla	r3, r2, r0, r3
 8010d42:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8010d46:	891a      	ldrh	r2, [r3, #8]
 8010d48:	4291      	cmp	r1, r2
 8010d4a:	db04      	blt.n	8010d56 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8010d4c:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8010d50:	e7e6      	b.n	8010d20 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 8010d52:	2000      	movs	r0, #0
 8010d54:	4770      	bx	lr
 8010d56:	2001      	movs	r0, #1
 8010d58:	4770      	bx	lr
 8010d5a:	bf00      	nop
 8010d5c:	2000d400 	.word	0x2000d400
 8010d60:	2000d3f8 	.word	0x2000d3f8
 8010d64:	2000d3fc 	.word	0x2000d3fc
 8010d68:	2000d3e0 	.word	0x2000d3e0

08010d6c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8010d6c:	b508      	push	{r3, lr}
 8010d6e:	4b12      	ldr	r3, [pc, #72]	; (8010db8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8010d70:	6819      	ldr	r1, [r3, #0]
 8010d72:	b931      	cbnz	r1, 8010d82 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8010d74:	4b11      	ldr	r3, [pc, #68]	; (8010dbc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8010d76:	4a12      	ldr	r2, [pc, #72]	; (8010dc0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8010d78:	4812      	ldr	r0, [pc, #72]	; (8010dc4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8010d7a:	f240 31d3 	movw	r1, #979	; 0x3d3
 8010d7e:	f00d f933 	bl	801dfe8 <__assert_func>
 8010d82:	8803      	ldrh	r3, [r0, #0]
 8010d84:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010d88:	4293      	cmp	r3, r2
 8010d8a:	d012      	beq.n	8010db2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8010d8c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010d90:	4293      	cmp	r3, r2
 8010d92:	d103      	bne.n	8010d9c <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 8010d94:	4b0c      	ldr	r3, [pc, #48]	; (8010dc8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8010d96:	681b      	ldr	r3, [r3, #0]
 8010d98:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8010d9a:	bd08      	pop	{r3, pc}
 8010d9c:	4a0b      	ldr	r2, [pc, #44]	; (8010dcc <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 8010d9e:	6812      	ldr	r2, [r2, #0]
 8010da0:	b11a      	cbz	r2, 8010daa <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 8010da2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010da6:	2800      	cmp	r0, #0
 8010da8:	d1f7      	bne.n	8010d9a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010daa:	2214      	movs	r2, #20
 8010dac:	4353      	muls	r3, r2
 8010dae:	58c8      	ldr	r0, [r1, r3]
 8010db0:	e7f3      	b.n	8010d9a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010db2:	2000      	movs	r0, #0
 8010db4:	e7f1      	b.n	8010d9a <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 8010db6:	bf00      	nop
 8010db8:	2000d400 	.word	0x2000d400
 8010dbc:	080214a0 	.word	0x080214a0
 8010dc0:	0802219f 	.word	0x0802219f
 8010dc4:	080220a5 	.word	0x080220a5
 8010dc8:	2000d358 	.word	0x2000d358
 8010dcc:	2000d3dc 	.word	0x2000d3dc

08010dd0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8010dd0:	8802      	ldrh	r2, [r0, #0]
 8010dd2:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 8010dd6:	429a      	cmp	r2, r3
 8010dd8:	d845      	bhi.n	8010e66 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010dda:	4b24      	ldr	r3, [pc, #144]	; (8010e6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8010ddc:	8818      	ldrh	r0, [r3, #0]
 8010dde:	4282      	cmp	r2, r0
 8010de0:	d221      	bcs.n	8010e26 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 8010de2:	4b23      	ldr	r3, [pc, #140]	; (8010e70 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8010de4:	6819      	ldr	r1, [r3, #0]
 8010de6:	2314      	movs	r3, #20
 8010de8:	fb03 1302 	mla	r3, r3, r2, r1
 8010dec:	6858      	ldr	r0, [r3, #4]
 8010dee:	2800      	cmp	r0, #0
 8010df0:	d03a      	beq.n	8010e68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010df2:	4920      	ldr	r1, [pc, #128]	; (8010e74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010df4:	6809      	ldr	r1, [r1, #0]
 8010df6:	2900      	cmp	r1, #0
 8010df8:	d036      	beq.n	8010e68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010dfa:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8010dfe:	2900      	cmp	r1, #0
 8010e00:	d032      	beq.n	8010e68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8010e02:	891a      	ldrh	r2, [r3, #8]
 8010e04:	8958      	ldrh	r0, [r3, #10]
 8010e06:	4350      	muls	r0, r2
 8010e08:	7c5a      	ldrb	r2, [r3, #17]
 8010e0a:	7cdb      	ldrb	r3, [r3, #19]
 8010e0c:	0952      	lsrs	r2, r2, #5
 8010e0e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8010e12:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8010e16:	2b0b      	cmp	r3, #11
 8010e18:	bf18      	it	ne
 8010e1a:	0040      	lslne	r0, r0, #1
 8010e1c:	3003      	adds	r0, #3
 8010e1e:	f020 0003 	bic.w	r0, r0, #3
 8010e22:	4408      	add	r0, r1
 8010e24:	4770      	bx	lr
 8010e26:	4b14      	ldr	r3, [pc, #80]	; (8010e78 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8010e28:	881b      	ldrh	r3, [r3, #0]
 8010e2a:	4403      	add	r3, r0
 8010e2c:	429a      	cmp	r2, r3
 8010e2e:	da1a      	bge.n	8010e66 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010e30:	4b12      	ldr	r3, [pc, #72]	; (8010e7c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 8010e32:	681b      	ldr	r3, [r3, #0]
 8010e34:	1a10      	subs	r0, r2, r0
 8010e36:	210e      	movs	r1, #14
 8010e38:	fb01 3000 	mla	r0, r1, r0, r3
 8010e3c:	7b03      	ldrb	r3, [r0, #12]
 8010e3e:	f003 031f 	and.w	r3, r3, #31
 8010e42:	2b0b      	cmp	r3, #11
 8010e44:	d10b      	bne.n	8010e5e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8010e46:	8903      	ldrh	r3, [r0, #8]
 8010e48:	8940      	ldrh	r0, [r0, #10]
 8010e4a:	4358      	muls	r0, r3
 8010e4c:	4b09      	ldr	r3, [pc, #36]	; (8010e74 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8010e4e:	6819      	ldr	r1, [r3, #0]
 8010e50:	3003      	adds	r0, #3
 8010e52:	f020 0303 	bic.w	r3, r0, #3
 8010e56:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8010e5a:	4418      	add	r0, r3
 8010e5c:	4770      	bx	lr
 8010e5e:	2b0d      	cmp	r3, #13
 8010e60:	d101      	bne.n	8010e66 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 8010e62:	300d      	adds	r0, #13
 8010e64:	4770      	bx	lr
 8010e66:	2000      	movs	r0, #0
 8010e68:	4770      	bx	lr
 8010e6a:	bf00      	nop
 8010e6c:	2000d3f8 	.word	0x2000d3f8
 8010e70:	2000d400 	.word	0x2000d400
 8010e74:	2000d3dc 	.word	0x2000d3dc
 8010e78:	2000d3fc 	.word	0x2000d3fc
 8010e7c:	2000d3e0 	.word	0x2000d3e0

08010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8010e80:	4b19      	ldr	r3, [pc, #100]	; (8010ee8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8010e82:	6819      	ldr	r1, [r3, #0]
 8010e84:	8803      	ldrh	r3, [r0, #0]
 8010e86:	b1e9      	cbz	r1, 8010ec4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010e88:	4a18      	ldr	r2, [pc, #96]	; (8010eec <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8010e8a:	8812      	ldrh	r2, [r2, #0]
 8010e8c:	429a      	cmp	r2, r3
 8010e8e:	d90a      	bls.n	8010ea6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8010e90:	2214      	movs	r2, #20
 8010e92:	fb02 1303 	mla	r3, r2, r3, r1
 8010e96:	7c58      	ldrb	r0, [r3, #17]
 8010e98:	0942      	lsrs	r2, r0, #5
 8010e9a:	7cd8      	ldrb	r0, [r3, #19]
 8010e9c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8010ea0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8010ea4:	4770      	bx	lr
 8010ea6:	4912      	ldr	r1, [pc, #72]	; (8010ef0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 8010ea8:	8809      	ldrh	r1, [r1, #0]
 8010eaa:	4411      	add	r1, r2
 8010eac:	428b      	cmp	r3, r1
 8010eae:	da09      	bge.n	8010ec4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8010eb0:	1a9b      	subs	r3, r3, r2
 8010eb2:	4a10      	ldr	r2, [pc, #64]	; (8010ef4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 8010eb4:	6812      	ldr	r2, [r2, #0]
 8010eb6:	210e      	movs	r1, #14
 8010eb8:	fb01 2303 	mla	r3, r1, r3, r2
 8010ebc:	7b18      	ldrb	r0, [r3, #12]
 8010ebe:	f000 001f 	and.w	r0, r0, #31
 8010ec2:	4770      	bx	lr
 8010ec4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010ec8:	4293      	cmp	r3, r2
 8010eca:	d10a      	bne.n	8010ee2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 8010ecc:	4b0a      	ldr	r3, [pc, #40]	; (8010ef8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 8010ece:	681b      	ldr	r3, [r3, #0]
 8010ed0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8010ed4:	b10a      	cbz	r2, 8010eda <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8010ed6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8010ed8:	b900      	cbnz	r0, 8010edc <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 8010eda:	6898      	ldr	r0, [r3, #8]
 8010edc:	6803      	ldr	r3, [r0, #0]
 8010ede:	6a1b      	ldr	r3, [r3, #32]
 8010ee0:	4718      	bx	r3
 8010ee2:	2000      	movs	r0, #0
 8010ee4:	4770      	bx	lr
 8010ee6:	bf00      	nop
 8010ee8:	2000d400 	.word	0x2000d400
 8010eec:	2000d3f8 	.word	0x2000d3f8
 8010ef0:	2000d3fc 	.word	0x2000d3fc
 8010ef4:	2000d3e0 	.word	0x2000d3e0
 8010ef8:	2000d358 	.word	0x2000d358

08010efc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8010efc:	2010      	movs	r0, #16
 8010efe:	4770      	bx	lr

08010f00 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8010f00:	2000      	movs	r0, #0
 8010f02:	4770      	bx	lr

08010f04 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 8010f04:	00d2      	lsls	r2, r2, #3
 8010f06:	0209      	lsls	r1, r1, #8
 8010f08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010f0c:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 8010f10:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8010f14:	4310      	orrs	r0, r2
 8010f16:	4770      	bx	lr

08010f18 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 8010f18:	0a09      	lsrs	r1, r1, #8
 8010f1a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 8010f1e:	4770      	bx	lr

08010f20 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 8010f20:	08c9      	lsrs	r1, r1, #3
 8010f22:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 8010f26:	4770      	bx	lr

08010f28 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 8010f28:	00c9      	lsls	r1, r1, #3
 8010f2a:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 8010f2e:	4770      	bx	lr

08010f30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8010f30:	2bff      	cmp	r3, #255	; 0xff
 8010f32:	d050      	beq.n	8010fd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8010f34:	2a0b      	cmp	r2, #11
 8010f36:	d04a      	beq.n	8010fce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010f38:	d80e      	bhi.n	8010f58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8010f3a:	2a03      	cmp	r2, #3
 8010f3c:	d03f      	beq.n	8010fbe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8010f3e:	d804      	bhi.n	8010f4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010f40:	2a01      	cmp	r2, #1
 8010f42:	d03e      	beq.n	8010fc2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8010f44:	d93f      	bls.n	8010fc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8010f46:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010f48:	4770      	bx	lr
 8010f4a:	2a09      	cmp	r2, #9
 8010f4c:	d03f      	beq.n	8010fce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010f4e:	d83c      	bhi.n	8010fca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010f50:	2a08      	cmp	r2, #8
 8010f52:	d03a      	beq.n	8010fca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010f54:	2000      	movs	r0, #0
 8010f56:	4770      	bx	lr
 8010f58:	2a2f      	cmp	r2, #47	; 0x2f
 8010f5a:	d024      	beq.n	8010fa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010f5c:	d80d      	bhi.n	8010f7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8010f5e:	2a2d      	cmp	r2, #45	; 0x2d
 8010f60:	d014      	beq.n	8010f8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8010f62:	d826      	bhi.n	8010fb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8010f64:	2a2c      	cmp	r2, #44	; 0x2c
 8010f66:	d1f5      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010f68:	684b      	ldr	r3, [r1, #4]
 8010f6a:	781b      	ldrb	r3, [r3, #0]
 8010f6c:	2b01      	cmp	r3, #1
 8010f6e:	d018      	beq.n	8010fa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010f70:	d323      	bcc.n	8010fba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8010f72:	2b02      	cmp	r3, #2
 8010f74:	d1ee      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010f76:	6880      	ldr	r0, [r0, #8]
 8010f78:	4770      	bx	lr
 8010f7a:	2a31      	cmp	r2, #49	; 0x31
 8010f7c:	d004      	beq.n	8010f88 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8010f7e:	d328      	bcc.n	8010fd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010f80:	2a32      	cmp	r2, #50	; 0x32
 8010f82:	d026      	beq.n	8010fd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010f84:	2a33      	cmp	r2, #51	; 0x33
 8010f86:	d1e5      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010f88:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010f8a:	4770      	bx	lr
 8010f8c:	684b      	ldr	r3, [r1, #4]
 8010f8e:	781b      	ldrb	r3, [r3, #0]
 8010f90:	2b01      	cmp	r3, #1
 8010f92:	d004      	beq.n	8010f9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8010f94:	d30b      	bcc.n	8010fae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8010f96:	2b02      	cmp	r3, #2
 8010f98:	d1dc      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010f9a:	6900      	ldr	r0, [r0, #16]
 8010f9c:	4770      	bx	lr
 8010f9e:	6a00      	ldr	r0, [r0, #32]
 8010fa0:	4770      	bx	lr
 8010fa2:	6980      	ldr	r0, [r0, #24]
 8010fa4:	4770      	bx	lr
 8010fa6:	684b      	ldr	r3, [r1, #4]
 8010fa8:	781b      	ldrb	r3, [r3, #0]
 8010faa:	2b00      	cmp	r3, #0
 8010fac:	d1d2      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010fae:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010fb0:	4770      	bx	lr
 8010fb2:	684b      	ldr	r3, [r1, #4]
 8010fb4:	781b      	ldrb	r3, [r3, #0]
 8010fb6:	2b00      	cmp	r3, #0
 8010fb8:	d1cc      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010fba:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010fbc:	4770      	bx	lr
 8010fbe:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010fc0:	4770      	bx	lr
 8010fc2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8010fc4:	4770      	bx	lr
 8010fc6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010fc8:	4770      	bx	lr
 8010fca:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010fcc:	4770      	bx	lr
 8010fce:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010fd0:	4770      	bx	lr
 8010fd2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8010fd4:	4770      	bx	lr
 8010fd6:	2a0b      	cmp	r2, #11
 8010fd8:	d049      	beq.n	801106e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010fda:	d80e      	bhi.n	8010ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8010fdc:	2a03      	cmp	r2, #3
 8010fde:	d040      	beq.n	8011062 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8010fe0:	d804      	bhi.n	8010fec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8010fe2:	2a01      	cmp	r2, #1
 8010fe4:	d03f      	beq.n	8011066 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8010fe6:	d940      	bls.n	801106a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8010fe8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8010fea:	4770      	bx	lr
 8010fec:	2a09      	cmp	r2, #9
 8010fee:	d03e      	beq.n	801106e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8010ff0:	d801      	bhi.n	8010ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8010ff2:	2a08      	cmp	r2, #8
 8010ff4:	d1ae      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010ff6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8010ff8:	4770      	bx	lr
 8010ffa:	2a2f      	cmp	r2, #47	; 0x2f
 8010ffc:	d024      	beq.n	8011048 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8010ffe:	d80d      	bhi.n	801101c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8011000:	2a2d      	cmp	r2, #45	; 0x2d
 8011002:	d014      	beq.n	801102e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8011004:	d826      	bhi.n	8011054 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8011006:	2a2c      	cmp	r2, #44	; 0x2c
 8011008:	d1a4      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801100a:	684b      	ldr	r3, [r1, #4]
 801100c:	781b      	ldrb	r3, [r3, #0]
 801100e:	2b01      	cmp	r3, #1
 8011010:	d018      	beq.n	8011044 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8011012:	d324      	bcc.n	801105e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8011014:	2b02      	cmp	r3, #2
 8011016:	d19d      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011018:	68c0      	ldr	r0, [r0, #12]
 801101a:	4770      	bx	lr
 801101c:	2a31      	cmp	r2, #49	; 0x31
 801101e:	d004      	beq.n	801102a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8011020:	d327      	bcc.n	8011072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011022:	2a32      	cmp	r2, #50	; 0x32
 8011024:	d025      	beq.n	8011072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8011026:	2a33      	cmp	r2, #51	; 0x33
 8011028:	d194      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801102a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801102c:	4770      	bx	lr
 801102e:	684b      	ldr	r3, [r1, #4]
 8011030:	781b      	ldrb	r3, [r3, #0]
 8011032:	2b01      	cmp	r3, #1
 8011034:	d004      	beq.n	8011040 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8011036:	d30b      	bcc.n	8011050 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8011038:	2b02      	cmp	r3, #2
 801103a:	d18b      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801103c:	6940      	ldr	r0, [r0, #20]
 801103e:	4770      	bx	lr
 8011040:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8011042:	4770      	bx	lr
 8011044:	69c0      	ldr	r0, [r0, #28]
 8011046:	4770      	bx	lr
 8011048:	684b      	ldr	r3, [r1, #4]
 801104a:	781b      	ldrb	r3, [r3, #0]
 801104c:	2b00      	cmp	r3, #0
 801104e:	d181      	bne.n	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011050:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8011052:	4770      	bx	lr
 8011054:	684b      	ldr	r3, [r1, #4]
 8011056:	781b      	ldrb	r3, [r3, #0]
 8011058:	2b00      	cmp	r3, #0
 801105a:	f47f af7b 	bne.w	8010f54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801105e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8011060:	4770      	bx	lr
 8011062:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011064:	4770      	bx	lr
 8011066:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8011068:	4770      	bx	lr
 801106a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801106c:	4770      	bx	lr
 801106e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8011070:	4770      	bx	lr
 8011072:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8011074:	4770      	bx	lr

08011076 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011076:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801107a:	b087      	sub	sp, #28
 801107c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801107e:	9205      	str	r2, [sp, #20]
 8011080:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011084:	9202      	str	r2, [sp, #8]
 8011086:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801108a:	9101      	str	r1, [sp, #4]
 801108c:	6841      	ldr	r1, [r0, #4]
 801108e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011092:	fb01 2404 	mla	r4, r1, r4, r2
 8011096:	6802      	ldr	r2, [r0, #0]
 8011098:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801109c:	f8de 2000 	ldr.w	r2, [lr]
 80110a0:	9203      	str	r2, [sp, #12]
 80110a2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80110a6:	3204      	adds	r2, #4
 80110a8:	9204      	str	r2, [sp, #16]
 80110aa:	9a02      	ldr	r2, [sp, #8]
 80110ac:	43d6      	mvns	r6, r2
 80110ae:	b2f6      	uxtb	r6, r6
 80110b0:	9a01      	ldr	r2, [sp, #4]
 80110b2:	2a00      	cmp	r2, #0
 80110b4:	dc03      	bgt.n	80110be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80110b6:	9a05      	ldr	r2, [sp, #20]
 80110b8:	2a00      	cmp	r2, #0
 80110ba:	f340 8129 	ble.w	8011310 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80110be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80110c0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80110c4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80110c8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80110cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80110ce:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80110d2:	2b00      	cmp	r3, #0
 80110d4:	dd0e      	ble.n	80110f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80110d6:	1408      	asrs	r0, r1, #16
 80110d8:	d405      	bmi.n	80110e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80110da:	4560      	cmp	r0, ip
 80110dc:	da03      	bge.n	80110e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80110de:	1410      	asrs	r0, r2, #16
 80110e0:	d401      	bmi.n	80110e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80110e2:	42b8      	cmp	r0, r7
 80110e4:	db07      	blt.n	80110f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80110e6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80110e8:	4401      	add	r1, r0
 80110ea:	9814      	ldr	r0, [sp, #80]	; 0x50
 80110ec:	3b01      	subs	r3, #1
 80110ee:	4402      	add	r2, r0
 80110f0:	3402      	adds	r4, #2
 80110f2:	e7ee      	b.n	80110d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80110f4:	d071      	beq.n	80111da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80110f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80110f8:	1e58      	subs	r0, r3, #1
 80110fa:	fb05 1500 	mla	r5, r5, r0, r1
 80110fe:	142d      	asrs	r5, r5, #16
 8011100:	d45f      	bmi.n	80111c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011102:	4565      	cmp	r5, ip
 8011104:	da5d      	bge.n	80111c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011106:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011108:	fb05 2000 	mla	r0, r5, r0, r2
 801110c:	1400      	asrs	r0, r0, #16
 801110e:	d458      	bmi.n	80111c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011110:	42b8      	cmp	r0, r7
 8011112:	da56      	bge.n	80111c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8011114:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8011118:	4699      	mov	r9, r3
 801111a:	46a2      	mov	sl, r4
 801111c:	f1b9 0f00 	cmp.w	r9, #0
 8011120:	dd57      	ble.n	80111d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8011122:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011126:	9803      	ldr	r0, [sp, #12]
 8011128:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801112c:	140d      	asrs	r5, r1, #16
 801112e:	fb07 000c 	mla	r0, r7, ip, r0
 8011132:	f109 39ff 	add.w	r9, r9, #4294967295
 8011136:	5d40      	ldrb	r0, [r0, r5]
 8011138:	9d04      	ldr	r5, [sp, #16]
 801113a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801113e:	f8ba 5000 	ldrh.w	r5, [sl]
 8011142:	122f      	asrs	r7, r5, #8
 8011144:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011148:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801114c:	fb17 f706 	smulbb	r7, r7, r6
 8011150:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011154:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011158:	00ed      	lsls	r5, r5, #3
 801115a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801115e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011162:	10c7      	asrs	r7, r0, #3
 8011164:	b2ed      	uxtb	r5, r5
 8011166:	00c0      	lsls	r0, r0, #3
 8011168:	fb18 f806 	smulbb	r8, r8, r6
 801116c:	fb15 f506 	smulbb	r5, r5, r6
 8011170:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011174:	b2c0      	uxtb	r0, r0
 8011176:	fa1f fc8c 	uxth.w	ip, ip
 801117a:	fb07 870b 	mla	r7, r7, fp, r8
 801117e:	fb00 500b 	mla	r0, r0, fp, r5
 8011182:	b280      	uxth	r0, r0
 8011184:	b2bf      	uxth	r7, r7
 8011186:	f10c 0501 	add.w	r5, ip, #1
 801118a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801118e:	f107 0801 	add.w	r8, r7, #1
 8011192:	1c45      	adds	r5, r0, #1
 8011194:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011198:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801119c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801119e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111a2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80111a6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80111aa:	ea4c 0c05 	orr.w	ip, ip, r5
 80111ae:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80111b2:	4401      	add	r1, r0
 80111b4:	9814      	ldr	r0, [sp, #80]	; 0x50
 80111b6:	ea4c 0c08 	orr.w	ip, ip, r8
 80111ba:	f82a cb02 	strh.w	ip, [sl], #2
 80111be:	4402      	add	r2, r0
 80111c0:	e7ac      	b.n	801111c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80111c2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80111c6:	f04f 0800 	mov.w	r8, #0
 80111ca:	eb03 0008 	add.w	r0, r3, r8
 80111ce:	2800      	cmp	r0, #0
 80111d0:	dc41      	bgt.n	8011256 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80111d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80111d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80111da:	9b01      	ldr	r3, [sp, #4]
 80111dc:	2b00      	cmp	r3, #0
 80111de:	f340 8097 	ble.w	8011310 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80111e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80111e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80111ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80111ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80111f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80111f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80111f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80111fc:	eef0 6a62 	vmov.f32	s13, s5
 8011200:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011204:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011208:	ee77 2a62 	vsub.f32	s5, s14, s5
 801120c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8011210:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011214:	eef0 6a43 	vmov.f32	s13, s6
 8011218:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801121c:	ee12 2a90 	vmov	r2, s5
 8011220:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011224:	fb92 f3f3 	sdiv	r3, r2, r3
 8011228:	ee13 2a10 	vmov	r2, s6
 801122c:	9313      	str	r3, [sp, #76]	; 0x4c
 801122e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011230:	fb92 f3f3 	sdiv	r3, r2, r3
 8011234:	9314      	str	r3, [sp, #80]	; 0x50
 8011236:	9b01      	ldr	r3, [sp, #4]
 8011238:	9a05      	ldr	r2, [sp, #20]
 801123a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801123e:	3b01      	subs	r3, #1
 8011240:	9301      	str	r3, [sp, #4]
 8011242:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8011246:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011248:	eeb0 3a67 	vmov.f32	s6, s15
 801124c:	bf08      	it	eq
 801124e:	4613      	moveq	r3, r2
 8011250:	eef0 2a47 	vmov.f32	s5, s14
 8011254:	e72c      	b.n	80110b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8011256:	140f      	asrs	r7, r1, #16
 8011258:	d453      	bmi.n	8011302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801125a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801125e:	42bd      	cmp	r5, r7
 8011260:	dd4f      	ble.n	8011302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011262:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011266:	d44c      	bmi.n	8011302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011268:	f8de 000c 	ldr.w	r0, [lr, #12]
 801126c:	4560      	cmp	r0, ip
 801126e:	dd48      	ble.n	8011302 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011270:	9803      	ldr	r0, [sp, #12]
 8011272:	b22d      	sxth	r5, r5
 8011274:	fb0c 0505 	mla	r5, ip, r5, r0
 8011278:	5de8      	ldrb	r0, [r5, r7]
 801127a:	9d04      	ldr	r5, [sp, #16]
 801127c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011280:	f06f 0501 	mvn.w	r5, #1
 8011284:	fb05 fb08 	mul.w	fp, r5, r8
 8011288:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801128c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011290:	122f      	asrs	r7, r5, #8
 8011292:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011296:	fb17 f706 	smulbb	r7, r7, r6
 801129a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801129e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112a2:	00ed      	lsls	r5, r5, #3
 80112a4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80112a8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80112ac:	10c7      	asrs	r7, r0, #3
 80112ae:	b2ed      	uxtb	r5, r5
 80112b0:	00c0      	lsls	r0, r0, #3
 80112b2:	fb19 f906 	smulbb	r9, r9, r6
 80112b6:	fb15 f506 	smulbb	r5, r5, r6
 80112ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80112be:	b2c0      	uxtb	r0, r0
 80112c0:	fa1f fc8c 	uxth.w	ip, ip
 80112c4:	fb07 970a 	mla	r7, r7, sl, r9
 80112c8:	fb00 500a 	mla	r0, r0, sl, r5
 80112cc:	b2bf      	uxth	r7, r7
 80112ce:	b280      	uxth	r0, r0
 80112d0:	f10c 0501 	add.w	r5, ip, #1
 80112d4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80112d8:	f107 0901 	add.w	r9, r7, #1
 80112dc:	1c45      	adds	r5, r0, #1
 80112de:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80112e2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80112e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80112ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80112ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80112f2:	ea4c 0c05 	orr.w	ip, ip, r5
 80112f6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80112fa:	ea4c 0c09 	orr.w	ip, ip, r9
 80112fe:	f824 c00b 	strh.w	ip, [r4, fp]
 8011302:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011304:	4401      	add	r1, r0
 8011306:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011308:	f108 38ff 	add.w	r8, r8, #4294967295
 801130c:	4402      	add	r2, r0
 801130e:	e75c      	b.n	80111ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8011310:	b007      	add	sp, #28
 8011312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011316 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011316:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801131a:	b085      	sub	sp, #20
 801131c:	4693      	mov	fp, r2
 801131e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011320:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011322:	6870      	ldr	r0, [r6, #4]
 8011324:	9100      	str	r1, [sp, #0]
 8011326:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801132a:	fb00 2404 	mla	r4, r0, r4, r2
 801132e:	6832      	ldr	r2, [r6, #0]
 8011330:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011334:	682a      	ldr	r2, [r5, #0]
 8011336:	9201      	str	r2, [sp, #4]
 8011338:	686a      	ldr	r2, [r5, #4]
 801133a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801133e:	3204      	adds	r2, #4
 8011340:	9202      	str	r2, [sp, #8]
 8011342:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011346:	9a00      	ldr	r2, [sp, #0]
 8011348:	2a00      	cmp	r2, #0
 801134a:	dc03      	bgt.n	8011354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801134c:	f1bb 0f00 	cmp.w	fp, #0
 8011350:	f340 80a0 	ble.w	8011494 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011354:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011356:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801135a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801135e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011362:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011364:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011368:	2b00      	cmp	r3, #0
 801136a:	dd0c      	ble.n	8011386 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801136c:	1406      	asrs	r6, r0, #16
 801136e:	d405      	bmi.n	801137c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011370:	454e      	cmp	r6, r9
 8011372:	da03      	bge.n	801137c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011374:	1416      	asrs	r6, r2, #16
 8011376:	d401      	bmi.n	801137c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011378:	4546      	cmp	r6, r8
 801137a:	db05      	blt.n	8011388 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801137c:	4470      	add	r0, lr
 801137e:	4462      	add	r2, ip
 8011380:	3b01      	subs	r3, #1
 8011382:	3402      	adds	r4, #2
 8011384:	e7f0      	b.n	8011368 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8011386:	d00f      	beq.n	80113a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011388:	1e5e      	subs	r6, r3, #1
 801138a:	fb0e 0706 	mla	r7, lr, r6, r0
 801138e:	143f      	asrs	r7, r7, #16
 8011390:	d541      	bpl.n	8011416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8011392:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8011396:	4698      	mov	r8, r3
 8011398:	9603      	str	r6, [sp, #12]
 801139a:	f1b8 0f00 	cmp.w	r8, #0
 801139e:	dc59      	bgt.n	8011454 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80113a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80113a8:	9b00      	ldr	r3, [sp, #0]
 80113aa:	2b00      	cmp	r3, #0
 80113ac:	dd72      	ble.n	8011494 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80113ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113b6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80113bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113c4:	eeb0 6a62 	vmov.f32	s12, s5
 80113c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80113d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113dc:	eeb0 6a43 	vmov.f32	s12, s6
 80113e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113e4:	ee12 2a90 	vmov	r2, s5
 80113e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113ec:	fb92 fef3 	sdiv	lr, r2, r3
 80113f0:	ee13 2a10 	vmov	r2, s6
 80113f4:	fb92 fcf3 	sdiv	ip, r2, r3
 80113f8:	9b00      	ldr	r3, [sp, #0]
 80113fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113fe:	3b01      	subs	r3, #1
 8011400:	9300      	str	r3, [sp, #0]
 8011402:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011406:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011408:	eeb0 3a67 	vmov.f32	s6, s15
 801140c:	bf08      	it	eq
 801140e:	465b      	moveq	r3, fp
 8011410:	eef0 2a47 	vmov.f32	s5, s14
 8011414:	e797      	b.n	8011346 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011416:	454f      	cmp	r7, r9
 8011418:	dabb      	bge.n	8011392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801141a:	fb0c 2606 	mla	r6, ip, r6, r2
 801141e:	1436      	asrs	r6, r6, #16
 8011420:	d4b7      	bmi.n	8011392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011422:	4546      	cmp	r6, r8
 8011424:	dab5      	bge.n	8011392 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011426:	461e      	mov	r6, r3
 8011428:	46a0      	mov	r8, r4
 801142a:	2e00      	cmp	r6, #0
 801142c:	ddb8      	ble.n	80113a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801142e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8011432:	9901      	ldr	r1, [sp, #4]
 8011434:	1417      	asrs	r7, r2, #16
 8011436:	ea4f 4920 	mov.w	r9, r0, asr #16
 801143a:	fb0a 1707 	mla	r7, sl, r7, r1
 801143e:	9902      	ldr	r1, [sp, #8]
 8011440:	f817 7009 	ldrb.w	r7, [r7, r9]
 8011444:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011448:	f828 7b02 	strh.w	r7, [r8], #2
 801144c:	4470      	add	r0, lr
 801144e:	4462      	add	r2, ip
 8011450:	3e01      	subs	r6, #1
 8011452:	e7ea      	b.n	801142a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8011454:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011458:	d417      	bmi.n	801148a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801145a:	68ae      	ldr	r6, [r5, #8]
 801145c:	454e      	cmp	r6, r9
 801145e:	dd14      	ble.n	801148a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011460:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011464:	d411      	bmi.n	801148a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011466:	68ef      	ldr	r7, [r5, #12]
 8011468:	4557      	cmp	r7, sl
 801146a:	dd0e      	ble.n	801148a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801146c:	9f01      	ldr	r7, [sp, #4]
 801146e:	b236      	sxth	r6, r6
 8011470:	fb0a 7606 	mla	r6, sl, r6, r7
 8011474:	9f02      	ldr	r7, [sp, #8]
 8011476:	f816 6009 	ldrb.w	r6, [r6, r9]
 801147a:	f06f 0101 	mvn.w	r1, #1
 801147e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011482:	fb01 f608 	mul.w	r6, r1, r8
 8011486:	9903      	ldr	r1, [sp, #12]
 8011488:	538f      	strh	r7, [r1, r6]
 801148a:	4470      	add	r0, lr
 801148c:	4462      	add	r2, ip
 801148e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011492:	e782      	b.n	801139a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011494:	b005      	add	sp, #20
 8011496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801149a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801149a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801149e:	b087      	sub	sp, #28
 80114a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80114a2:	9205      	str	r2, [sp, #20]
 80114a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80114a8:	9203      	str	r2, [sp, #12]
 80114aa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80114ae:	9102      	str	r1, [sp, #8]
 80114b0:	6861      	ldr	r1, [r4, #4]
 80114b2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80114b6:	fb01 2000 	mla	r0, r1, r0, r2
 80114ba:	6822      	ldr	r2, [r4, #0]
 80114bc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80114c0:	9200      	str	r2, [sp, #0]
 80114c2:	f8dc 2000 	ldr.w	r2, [ip]
 80114c6:	9204      	str	r2, [sp, #16]
 80114c8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80114cc:	3204      	adds	r2, #4
 80114ce:	9201      	str	r2, [sp, #4]
 80114d0:	9a03      	ldr	r2, [sp, #12]
 80114d2:	43d5      	mvns	r5, r2
 80114d4:	b2ed      	uxtb	r5, r5
 80114d6:	9a02      	ldr	r2, [sp, #8]
 80114d8:	2a00      	cmp	r2, #0
 80114da:	dc03      	bgt.n	80114e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80114dc:	9a05      	ldr	r2, [sp, #20]
 80114de:	2a00      	cmp	r2, #0
 80114e0:	f340 812c 	ble.w	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80114e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80114e6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80114ea:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80114ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80114f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80114f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80114f8:	2b00      	cmp	r3, #0
 80114fa:	dd10      	ble.n	801151e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80114fc:	140c      	asrs	r4, r1, #16
 80114fe:	d405      	bmi.n	801150c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011500:	4574      	cmp	r4, lr
 8011502:	da03      	bge.n	801150c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011504:	1414      	asrs	r4, r2, #16
 8011506:	d401      	bmi.n	801150c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011508:	42bc      	cmp	r4, r7
 801150a:	db09      	blt.n	8011520 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801150c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801150e:	9800      	ldr	r0, [sp, #0]
 8011510:	4421      	add	r1, r4
 8011512:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011514:	3002      	adds	r0, #2
 8011516:	4422      	add	r2, r4
 8011518:	3b01      	subs	r3, #1
 801151a:	9000      	str	r0, [sp, #0]
 801151c:	e7ec      	b.n	80114f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801151e:	d071      	beq.n	8011604 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8011520:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011522:	1e5c      	subs	r4, r3, #1
 8011524:	fb06 1604 	mla	r6, r6, r4, r1
 8011528:	1436      	asrs	r6, r6, #16
 801152a:	d45d      	bmi.n	80115e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801152c:	4576      	cmp	r6, lr
 801152e:	da5b      	bge.n	80115e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011530:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8011532:	fb06 2404 	mla	r4, r6, r4, r2
 8011536:	1424      	asrs	r4, r4, #16
 8011538:	d456      	bmi.n	80115e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801153a:	42bc      	cmp	r4, r7
 801153c:	da54      	bge.n	80115e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801153e:	f8dd 9000 	ldr.w	r9, [sp]
 8011542:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8011546:	4698      	mov	r8, r3
 8011548:	f1b8 0f00 	cmp.w	r8, #0
 801154c:	dd54      	ble.n	80115f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801154e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011552:	9804      	ldr	r0, [sp, #16]
 8011554:	1414      	asrs	r4, r2, #16
 8011556:	fb07 0404 	mla	r4, r7, r4, r0
 801155a:	140e      	asrs	r6, r1, #16
 801155c:	9801      	ldr	r0, [sp, #4]
 801155e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8011562:	f8b9 4000 	ldrh.w	r4, [r9]
 8011566:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801156a:	eb00 0b0e 	add.w	fp, r0, lr
 801156e:	1227      	asrs	r7, r4, #8
 8011570:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011574:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011578:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801157c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801157e:	fb16 f60a 	smulbb	r6, r6, sl
 8011582:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011586:	fb07 6705 	mla	r7, r7, r5, r6
 801158a:	10e6      	asrs	r6, r4, #3
 801158c:	00e4      	lsls	r4, r4, #3
 801158e:	b2e4      	uxtb	r4, r4
 8011590:	fb1b fb0a 	smulbb	fp, fp, sl
 8011594:	fb14 f405 	smulbb	r4, r4, r5
 8011598:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801159c:	b2bf      	uxth	r7, r7
 801159e:	fb06 b605 	mla	r6, r6, r5, fp
 80115a2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80115a6:	b2b6      	uxth	r6, r6
 80115a8:	fa1f fe8e 	uxth.w	lr, lr
 80115ac:	1c7c      	adds	r4, r7, #1
 80115ae:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80115b2:	f106 0b01 	add.w	fp, r6, #1
 80115b6:	f10e 0401 	add.w	r4, lr, #1
 80115ba:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80115be:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80115c2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80115c6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80115ca:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80115ce:	4327      	orrs	r7, r4
 80115d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80115d4:	4401      	add	r1, r0
 80115d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80115d8:	ea47 070b 	orr.w	r7, r7, fp
 80115dc:	f829 7b02 	strh.w	r7, [r9], #2
 80115e0:	4402      	add	r2, r0
 80115e2:	f108 38ff 	add.w	r8, r8, #4294967295
 80115e6:	e7af      	b.n	8011548 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80115e8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80115ec:	f04f 0e00 	mov.w	lr, #0
 80115f0:	eb03 040e 	add.w	r4, r3, lr
 80115f4:	2c00      	cmp	r4, #0
 80115f6:	dc43      	bgt.n	8011680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80115f8:	9a00      	ldr	r2, [sp, #0]
 80115fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80115fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011602:	9300      	str	r3, [sp, #0]
 8011604:	9b02      	ldr	r3, [sp, #8]
 8011606:	2b00      	cmp	r3, #0
 8011608:	f340 8098 	ble.w	801173c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801160c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011610:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011614:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011618:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801161a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801161e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011622:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011626:	eef0 6a62 	vmov.f32	s13, s5
 801162a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801162e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011632:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011636:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801163a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801163e:	eef0 6a43 	vmov.f32	s13, s6
 8011642:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011646:	ee12 2a90 	vmov	r2, s5
 801164a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801164e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011652:	ee13 2a10 	vmov	r2, s6
 8011656:	9313      	str	r3, [sp, #76]	; 0x4c
 8011658:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801165a:	fb92 f3f3 	sdiv	r3, r2, r3
 801165e:	9314      	str	r3, [sp, #80]	; 0x50
 8011660:	9b02      	ldr	r3, [sp, #8]
 8011662:	9a05      	ldr	r2, [sp, #20]
 8011664:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011668:	3b01      	subs	r3, #1
 801166a:	9302      	str	r3, [sp, #8]
 801166c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8011670:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011672:	eeb0 3a67 	vmov.f32	s6, s15
 8011676:	bf08      	it	eq
 8011678:	4613      	moveq	r3, r2
 801167a:	eef0 2a47 	vmov.f32	s5, s14
 801167e:	e72a      	b.n	80114d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011680:	140f      	asrs	r7, r1, #16
 8011682:	d454      	bmi.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011684:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011688:	42be      	cmp	r6, r7
 801168a:	dd50      	ble.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801168c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8011690:	d44d      	bmi.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011692:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011696:	4544      	cmp	r4, r8
 8011698:	dd49      	ble.n	801172e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801169a:	9c04      	ldr	r4, [sp, #16]
 801169c:	b236      	sxth	r6, r6
 801169e:	fb08 4606 	mla	r6, r8, r6, r4
 80116a2:	f06f 0001 	mvn.w	r0, #1
 80116a6:	f816 8007 	ldrb.w	r8, [r6, r7]
 80116aa:	9c01      	ldr	r4, [sp, #4]
 80116ac:	fb00 fa0e 	mul.w	sl, r0, lr
 80116b0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80116b4:	9800      	ldr	r0, [sp, #0]
 80116b6:	eb04 0b08 	add.w	fp, r4, r8
 80116ba:	f830 400a 	ldrh.w	r4, [r0, sl]
 80116be:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80116c2:	9801      	ldr	r0, [sp, #4]
 80116c4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80116c8:	f810 8008 	ldrb.w	r8, [r0, r8]
 80116cc:	9800      	ldr	r0, [sp, #0]
 80116ce:	1227      	asrs	r7, r4, #8
 80116d0:	fb16 f609 	smulbb	r6, r6, r9
 80116d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116d8:	fb07 6705 	mla	r7, r7, r5, r6
 80116dc:	10e6      	asrs	r6, r4, #3
 80116de:	00e4      	lsls	r4, r4, #3
 80116e0:	b2e4      	uxtb	r4, r4
 80116e2:	fb1b fb09 	smulbb	fp, fp, r9
 80116e6:	fb14 f405 	smulbb	r4, r4, r5
 80116ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80116ee:	b2bf      	uxth	r7, r7
 80116f0:	fb06 b605 	mla	r6, r6, r5, fp
 80116f4:	fb08 4809 	mla	r8, r8, r9, r4
 80116f8:	b2b6      	uxth	r6, r6
 80116fa:	fa1f f888 	uxth.w	r8, r8
 80116fe:	1c7c      	adds	r4, r7, #1
 8011700:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011704:	f106 0b01 	add.w	fp, r6, #1
 8011708:	f108 0401 	add.w	r4, r8, #1
 801170c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8011710:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011714:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011718:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801171c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011720:	4327      	orrs	r7, r4
 8011722:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011726:	ea47 070b 	orr.w	r7, r7, fp
 801172a:	f820 700a 	strh.w	r7, [r0, sl]
 801172e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011730:	4401      	add	r1, r0
 8011732:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011734:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011738:	4402      	add	r2, r0
 801173a:	e759      	b.n	80115f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801173c:	b007      	add	sp, #28
 801173e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011744 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011748:	b085      	sub	sp, #20
 801174a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801174e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011750:	9203      	str	r2, [sp, #12]
 8011752:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011756:	6870      	ldr	r0, [r6, #4]
 8011758:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801175a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801175e:	686f      	ldr	r7, [r5, #4]
 8011760:	9101      	str	r1, [sp, #4]
 8011762:	fb00 2404 	mla	r4, r0, r4, r2
 8011766:	6832      	ldr	r2, [r6, #0]
 8011768:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801176c:	682a      	ldr	r2, [r5, #0]
 801176e:	9202      	str	r2, [sp, #8]
 8011770:	3704      	adds	r7, #4
 8011772:	9a01      	ldr	r2, [sp, #4]
 8011774:	2a00      	cmp	r2, #0
 8011776:	dc03      	bgt.n	8011780 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011778:	9a03      	ldr	r2, [sp, #12]
 801177a:	2a00      	cmp	r2, #0
 801177c:	f340 80cc 	ble.w	8011918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011780:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011782:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011786:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801178a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801178e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011790:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011794:	2b00      	cmp	r3, #0
 8011796:	dd0d      	ble.n	80117b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011798:	1406      	asrs	r6, r0, #16
 801179a:	d405      	bmi.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801179c:	454e      	cmp	r6, r9
 801179e:	da03      	bge.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80117a0:	1416      	asrs	r6, r2, #16
 80117a2:	d401      	bmi.n	80117a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80117a4:	4546      	cmp	r6, r8
 80117a6:	db06      	blt.n	80117b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80117a8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80117aa:	4460      	add	r0, ip
 80117ac:	4432      	add	r2, r6
 80117ae:	3b01      	subs	r3, #1
 80117b0:	3402      	adds	r4, #2
 80117b2:	e7ef      	b.n	8011794 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80117b4:	d00f      	beq.n	80117d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80117b6:	1e5e      	subs	r6, r3, #1
 80117b8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80117bc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80117c0:	d543      	bpl.n	801184a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80117c2:	4698      	mov	r8, r3
 80117c4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80117c8:	f1b8 0f00 	cmp.w	r8, #0
 80117cc:	dc71      	bgt.n	80118b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80117ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80117d6:	9b01      	ldr	r3, [sp, #4]
 80117d8:	2b00      	cmp	r3, #0
 80117da:	f340 809d 	ble.w	8011918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80117de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80117ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117f4:	eeb0 6a62 	vmov.f32	s12, s5
 80117f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011800:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011804:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011808:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801180c:	eeb0 6a43 	vmov.f32	s12, s6
 8011810:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011814:	ee12 2a90 	vmov	r2, s5
 8011818:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801181c:	fb92 fcf3 	sdiv	ip, r2, r3
 8011820:	ee13 2a10 	vmov	r2, s6
 8011824:	fb92 f3f3 	sdiv	r3, r2, r3
 8011828:	9312      	str	r3, [sp, #72]	; 0x48
 801182a:	9b01      	ldr	r3, [sp, #4]
 801182c:	9a03      	ldr	r2, [sp, #12]
 801182e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011832:	3b01      	subs	r3, #1
 8011834:	9301      	str	r3, [sp, #4]
 8011836:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801183a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801183c:	eeb0 3a67 	vmov.f32	s6, s15
 8011840:	bf08      	it	eq
 8011842:	4613      	moveq	r3, r2
 8011844:	eef0 2a47 	vmov.f32	s5, s14
 8011848:	e793      	b.n	8011772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801184a:	45ce      	cmp	lr, r9
 801184c:	dab9      	bge.n	80117c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801184e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011850:	fb01 2606 	mla	r6, r1, r6, r2
 8011854:	1436      	asrs	r6, r6, #16
 8011856:	d4b4      	bmi.n	80117c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011858:	4546      	cmp	r6, r8
 801185a:	dab2      	bge.n	80117c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801185c:	4698      	mov	r8, r3
 801185e:	46a2      	mov	sl, r4
 8011860:	f1b8 0f00 	cmp.w	r8, #0
 8011864:	ddb3      	ble.n	80117ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011866:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801186a:	9902      	ldr	r1, [sp, #8]
 801186c:	1416      	asrs	r6, r2, #16
 801186e:	fb09 1606 	mla	r6, r9, r6, r1
 8011872:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011876:	492a      	ldr	r1, [pc, #168]	; (8011920 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011878:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801187c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011880:	eb07 0b0e 	add.w	fp, r7, lr
 8011884:	4460      	add	r0, ip
 8011886:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801188a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801188e:	00f6      	lsls	r6, r6, #3
 8011890:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011894:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011898:	ea49 0606 	orr.w	r6, r9, r6
 801189c:	f817 900e 	ldrb.w	r9, [r7, lr]
 80118a0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80118a2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80118a6:	f82a 6b02 	strh.w	r6, [sl], #2
 80118aa:	440a      	add	r2, r1
 80118ac:	f108 38ff 	add.w	r8, r8, #4294967295
 80118b0:	e7d6      	b.n	8011860 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80118b2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80118b6:	d429      	bmi.n	801190c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80118b8:	68ae      	ldr	r6, [r5, #8]
 80118ba:	454e      	cmp	r6, r9
 80118bc:	dd26      	ble.n	801190c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80118be:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80118c2:	d423      	bmi.n	801190c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80118c4:	68e9      	ldr	r1, [r5, #12]
 80118c6:	4559      	cmp	r1, fp
 80118c8:	dd20      	ble.n	801190c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80118ca:	9902      	ldr	r1, [sp, #8]
 80118cc:	fa0f fe86 	sxth.w	lr, r6
 80118d0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80118d4:	f06f 0101 	mvn.w	r1, #1
 80118d8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80118dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80118e0:	eb07 060e 	add.w	r6, r7, lr
 80118e4:	fb01 f908 	mul.w	r9, r1, r8
 80118e8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80118ec:	7876      	ldrb	r6, [r6, #1]
 80118ee:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80118f2:	00f6      	lsls	r6, r6, #3
 80118f4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80118f8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80118fc:	ea4b 0606 	orr.w	r6, fp, r6
 8011900:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011904:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011908:	f82a 6009 	strh.w	r6, [sl, r9]
 801190c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801190e:	4460      	add	r0, ip
 8011910:	440a      	add	r2, r1
 8011912:	f108 38ff 	add.w	r8, r8, #4294967295
 8011916:	e757      	b.n	80117c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011918:	b005      	add	sp, #20
 801191a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801191e:	bf00      	nop
 8011920:	fffff800 	.word	0xfffff800

08011924 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011928:	b087      	sub	sp, #28
 801192a:	468b      	mov	fp, r1
 801192c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801192e:	9204      	str	r2, [sp, #16]
 8011930:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011934:	9205      	str	r2, [sp, #20]
 8011936:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801193a:	6841      	ldr	r1, [r0, #4]
 801193c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8011940:	fb01 2404 	mla	r4, r1, r4, r2
 8011944:	6802      	ldr	r2, [r0, #0]
 8011946:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801194a:	f8dc 2000 	ldr.w	r2, [ip]
 801194e:	9201      	str	r2, [sp, #4]
 8011950:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011954:	3204      	adds	r2, #4
 8011956:	9202      	str	r2, [sp, #8]
 8011958:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801195c:	f1bb 0f00 	cmp.w	fp, #0
 8011960:	dc03      	bgt.n	801196a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8011962:	9a04      	ldr	r2, [sp, #16]
 8011964:	2a00      	cmp	r2, #0
 8011966:	f340 8138 	ble.w	8011bda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801196a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801196c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011970:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011974:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011978:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801197a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801197e:	2b00      	cmp	r3, #0
 8011980:	dd0e      	ble.n	80119a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011982:	1402      	asrs	r2, r0, #16
 8011984:	d405      	bmi.n	8011992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011986:	42ba      	cmp	r2, r7
 8011988:	da03      	bge.n	8011992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801198a:	140a      	asrs	r2, r1, #16
 801198c:	d401      	bmi.n	8011992 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801198e:	42b2      	cmp	r2, r6
 8011990:	db07      	blt.n	80119a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011992:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011994:	4410      	add	r0, r2
 8011996:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011998:	3b01      	subs	r3, #1
 801199a:	4411      	add	r1, r2
 801199c:	3402      	adds	r4, #2
 801199e:	e7ee      	b.n	801197e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80119a0:	d019      	beq.n	80119d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80119a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80119a4:	1e5a      	subs	r2, r3, #1
 80119a6:	fb05 0502 	mla	r5, r5, r2, r0
 80119aa:	142d      	asrs	r5, r5, #16
 80119ac:	d409      	bmi.n	80119c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80119ae:	42bd      	cmp	r5, r7
 80119b0:	da07      	bge.n	80119c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80119b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80119b4:	fb05 1202 	mla	r2, r5, r2, r1
 80119b8:	1412      	asrs	r2, r2, #16
 80119ba:	d402      	bmi.n	80119c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80119bc:	42b2      	cmp	r2, r6
 80119be:	f2c0 80ac 	blt.w	8011b1a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80119c2:	f04f 0e00 	mov.w	lr, #0
 80119c6:	eb03 020e 	add.w	r2, r3, lr
 80119ca:	2a00      	cmp	r2, #0
 80119cc:	dc3e      	bgt.n	8011a4c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80119ce:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80119d6:	f1bb 0f00 	cmp.w	fp, #0
 80119da:	f340 80fe 	ble.w	8011bda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80119de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119e6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80119ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80119ec:	f1bb 0b01 	subs.w	fp, fp, #1
 80119f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119f8:	eeb0 6a62 	vmov.f32	s12, s5
 80119fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a04:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a08:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011a0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a10:	eeb0 6a43 	vmov.f32	s12, s6
 8011a14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a18:	ee12 2a90 	vmov	r2, s5
 8011a1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a20:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a24:	ee13 2a10 	vmov	r2, s6
 8011a28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a2c:	9313      	str	r3, [sp, #76]	; 0x4c
 8011a2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a30:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a34:	9a04      	ldr	r2, [sp, #16]
 8011a36:	9314      	str	r3, [sp, #80]	; 0x50
 8011a38:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011a3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a3e:	eeb0 3a67 	vmov.f32	s6, s15
 8011a42:	bf08      	it	eq
 8011a44:	4613      	moveq	r3, r2
 8011a46:	eef0 2a47 	vmov.f32	s5, s14
 8011a4a:	e787      	b.n	801195c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011a4c:	1406      	asrs	r6, r0, #16
 8011a4e:	d45d      	bmi.n	8011b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011a50:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8011a54:	42b5      	cmp	r5, r6
 8011a56:	dd59      	ble.n	8011b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011a58:	140f      	asrs	r7, r1, #16
 8011a5a:	d457      	bmi.n	8011b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011a5c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011a60:	42ba      	cmp	r2, r7
 8011a62:	dd53      	ble.n	8011b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011a64:	9a01      	ldr	r2, [sp, #4]
 8011a66:	b22d      	sxth	r5, r5
 8011a68:	fb07 2505 	mla	r5, r7, r5, r2
 8011a6c:	5daa      	ldrb	r2, [r5, r6]
 8011a6e:	9d02      	ldr	r5, [sp, #8]
 8011a70:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011a74:	0e2e      	lsrs	r6, r5, #24
 8011a76:	d049      	beq.n	8011b0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011a78:	f06f 0201 	mvn.w	r2, #1
 8011a7c:	fb02 f20e 	mul.w	r2, r2, lr
 8011a80:	9203      	str	r2, [sp, #12]
 8011a82:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011a86:	9a05      	ldr	r2, [sp, #20]
 8011a88:	4356      	muls	r6, r2
 8011a8a:	1c72      	adds	r2, r6, #1
 8011a8c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011a90:	1212      	asrs	r2, r2, #8
 8011a92:	fa1f f982 	uxth.w	r9, r2
 8011a96:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011a9a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011a9e:	43d2      	mvns	r2, r2
 8011aa0:	b2d2      	uxtb	r2, r2
 8011aa2:	fb16 f609 	smulbb	r6, r6, r9
 8011aa6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011aaa:	fb07 6702 	mla	r7, r7, r2, r6
 8011aae:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011ab2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011ab6:	b2ed      	uxtb	r5, r5
 8011ab8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011abc:	fa5f f888 	uxtb.w	r8, r8
 8011ac0:	fb15 f509 	smulbb	r5, r5, r9
 8011ac4:	fb08 5502 	mla	r5, r8, r2, r5
 8011ac8:	b2bf      	uxth	r7, r7
 8011aca:	fb1a fa09 	smulbb	sl, sl, r9
 8011ace:	b2ad      	uxth	r5, r5
 8011ad0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011ad4:	fb06 a602 	mla	r6, r6, r2, sl
 8011ad8:	1c7a      	adds	r2, r7, #1
 8011ada:	f105 0a01 	add.w	sl, r5, #1
 8011ade:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011ae2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ae6:	b2b6      	uxth	r6, r6
 8011ae8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011aec:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011af0:	ea47 070a 	orr.w	r7, r7, sl
 8011af4:	f106 0a01 	add.w	sl, r6, #1
 8011af8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011afc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011b00:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011b04:	9a03      	ldr	r2, [sp, #12]
 8011b06:	ea47 070a 	orr.w	r7, r7, sl
 8011b0a:	52a7      	strh	r7, [r4, r2]
 8011b0c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011b0e:	4410      	add	r0, r2
 8011b10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011b12:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011b16:	4411      	add	r1, r2
 8011b18:	e755      	b.n	80119c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011b1a:	f04f 0800 	mov.w	r8, #0
 8011b1e:	eba3 0208 	sub.w	r2, r3, r8
 8011b22:	2a00      	cmp	r2, #0
 8011b24:	f77f af53 	ble.w	80119ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011b28:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8011b2c:	9f01      	ldr	r7, [sp, #4]
 8011b2e:	140a      	asrs	r2, r1, #16
 8011b30:	1405      	asrs	r5, r0, #16
 8011b32:	fb06 7202 	mla	r2, r6, r2, r7
 8011b36:	5d52      	ldrb	r2, [r2, r5]
 8011b38:	9d02      	ldr	r5, [sp, #8]
 8011b3a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011b3e:	0e2e      	lsrs	r6, r5, #24
 8011b40:	d044      	beq.n	8011bcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8011b42:	9a05      	ldr	r2, [sp, #20]
 8011b44:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011b48:	4356      	muls	r6, r2
 8011b4a:	1c72      	adds	r2, r6, #1
 8011b4c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011b50:	1212      	asrs	r2, r2, #8
 8011b52:	fa1f f982 	uxth.w	r9, r2
 8011b56:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011b5a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011b5e:	43d2      	mvns	r2, r2
 8011b60:	b2d2      	uxtb	r2, r2
 8011b62:	fb16 f609 	smulbb	r6, r6, r9
 8011b66:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011b6a:	fb07 6702 	mla	r7, r7, r2, r6
 8011b6e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011b72:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011b76:	b2ed      	uxtb	r5, r5
 8011b78:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b7c:	fa5f fe8e 	uxtb.w	lr, lr
 8011b80:	fb15 f509 	smulbb	r5, r5, r9
 8011b84:	fb0e 5502 	mla	r5, lr, r2, r5
 8011b88:	b2bf      	uxth	r7, r7
 8011b8a:	fb1a fa09 	smulbb	sl, sl, r9
 8011b8e:	b2ad      	uxth	r5, r5
 8011b90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011b94:	fb06 a602 	mla	r6, r6, r2, sl
 8011b98:	1c7a      	adds	r2, r7, #1
 8011b9a:	f105 0a01 	add.w	sl, r5, #1
 8011b9e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011ba2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011ba6:	b2b6      	uxth	r6, r6
 8011ba8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011bac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011bb0:	ea47 070a 	orr.w	r7, r7, sl
 8011bb4:	f106 0a01 	add.w	sl, r6, #1
 8011bb8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011bbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011bc0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011bc4:	ea47 070a 	orr.w	r7, r7, sl
 8011bc8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011bcc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011bce:	4410      	add	r0, r2
 8011bd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011bd2:	f108 0801 	add.w	r8, r8, #1
 8011bd6:	4411      	add	r1, r2
 8011bd8:	e7a1      	b.n	8011b1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8011bda:	b007      	add	sp, #28
 8011bdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011be0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011be4:	b085      	sub	sp, #20
 8011be6:	468b      	mov	fp, r1
 8011be8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011bea:	9203      	str	r2, [sp, #12]
 8011bec:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011bf0:	6841      	ldr	r1, [r0, #4]
 8011bf2:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011bf6:	fb01 2404 	mla	r4, r1, r4, r2
 8011bfa:	6802      	ldr	r2, [r0, #0]
 8011bfc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c00:	f8de 2000 	ldr.w	r2, [lr]
 8011c04:	9200      	str	r2, [sp, #0]
 8011c06:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011c0a:	3204      	adds	r2, #4
 8011c0c:	9201      	str	r2, [sp, #4]
 8011c0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c12:	f1bb 0f00 	cmp.w	fp, #0
 8011c16:	dc03      	bgt.n	8011c20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011c18:	9a03      	ldr	r2, [sp, #12]
 8011c1a:	2a00      	cmp	r2, #0
 8011c1c:	f340 8153 	ble.w	8011ec6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011c20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011c22:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011c26:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011c2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011c2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011c30:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011c34:	2b00      	cmp	r3, #0
 8011c36:	dd0e      	ble.n	8011c56 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011c38:	1408      	asrs	r0, r1, #16
 8011c3a:	d405      	bmi.n	8011c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011c3c:	42b8      	cmp	r0, r7
 8011c3e:	da03      	bge.n	8011c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011c40:	1410      	asrs	r0, r2, #16
 8011c42:	d401      	bmi.n	8011c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011c44:	42b0      	cmp	r0, r6
 8011c46:	db07      	blt.n	8011c58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8011c48:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011c4a:	4401      	add	r1, r0
 8011c4c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011c4e:	3b01      	subs	r3, #1
 8011c50:	4402      	add	r2, r0
 8011c52:	3402      	adds	r4, #2
 8011c54:	e7ee      	b.n	8011c34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8011c56:	d017      	beq.n	8011c88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8011c58:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011c5a:	1e58      	subs	r0, r3, #1
 8011c5c:	fb05 1500 	mla	r5, r5, r0, r1
 8011c60:	142d      	asrs	r5, r5, #16
 8011c62:	d409      	bmi.n	8011c78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011c64:	42bd      	cmp	r5, r7
 8011c66:	da07      	bge.n	8011c78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011c68:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011c6a:	fb05 2000 	mla	r0, r5, r0, r2
 8011c6e:	1400      	asrs	r0, r0, #16
 8011c70:	d402      	bmi.n	8011c78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011c72:	42b0      	cmp	r0, r6
 8011c74:	f2c0 80bc 	blt.w	8011df0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8011c78:	2600      	movs	r6, #0
 8011c7a:	1998      	adds	r0, r3, r6
 8011c7c:	2800      	cmp	r0, #0
 8011c7e:	dc3e      	bgt.n	8011cfe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8011c80:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011c84:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011c88:	f1bb 0f00 	cmp.w	fp, #0
 8011c8c:	f340 811b 	ble.w	8011ec6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011c90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011c94:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011c98:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011c9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011c9e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011ca2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ca6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011caa:	eeb0 6a62 	vmov.f32	s12, s5
 8011cae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011cb2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011cba:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011cbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011cc2:	eeb0 6a43 	vmov.f32	s12, s6
 8011cc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011cca:	ee12 2a90 	vmov	r2, s5
 8011cce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011cd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011cd6:	ee13 2a10 	vmov	r2, s6
 8011cda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cde:	9311      	str	r3, [sp, #68]	; 0x44
 8011ce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ce2:	fb92 f3f3 	sdiv	r3, r2, r3
 8011ce6:	9a03      	ldr	r2, [sp, #12]
 8011ce8:	9312      	str	r3, [sp, #72]	; 0x48
 8011cea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011cee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011cf0:	eeb0 3a67 	vmov.f32	s6, s15
 8011cf4:	bf08      	it	eq
 8011cf6:	4613      	moveq	r3, r2
 8011cf8:	eef0 2a47 	vmov.f32	s5, s14
 8011cfc:	e789      	b.n	8011c12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011cfe:	140f      	asrs	r7, r1, #16
 8011d00:	d45e      	bmi.n	8011dc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011d02:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011d06:	42bd      	cmp	r5, r7
 8011d08:	dd5a      	ble.n	8011dc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011d0a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011d0e:	d457      	bmi.n	8011dc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011d10:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011d14:	4560      	cmp	r0, ip
 8011d16:	dd53      	ble.n	8011dc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011d18:	9800      	ldr	r0, [sp, #0]
 8011d1a:	b22d      	sxth	r5, r5
 8011d1c:	fb0c 0505 	mla	r5, ip, r5, r0
 8011d20:	5de8      	ldrb	r0, [r5, r7]
 8011d22:	9d01      	ldr	r5, [sp, #4]
 8011d24:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011d28:	0e07      	lsrs	r7, r0, #24
 8011d2a:	2fff      	cmp	r7, #255	; 0xff
 8011d2c:	d04e      	beq.n	8011dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8011d2e:	b2fd      	uxtb	r5, r7
 8011d30:	2f00      	cmp	r7, #0
 8011d32:	d045      	beq.n	8011dc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011d34:	f06f 0701 	mvn.w	r7, #1
 8011d38:	4377      	muls	r7, r6
 8011d3a:	fa1f f985 	uxth.w	r9, r5
 8011d3e:	f834 8007 	ldrh.w	r8, [r4, r7]
 8011d42:	9702      	str	r7, [sp, #8]
 8011d44:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8011d48:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011d4c:	43ed      	mvns	r5, r5
 8011d4e:	b2ed      	uxtb	r5, r5
 8011d50:	fb17 f709 	smulbb	r7, r7, r9
 8011d54:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011d58:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011d5c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011d60:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8011d64:	b2c0      	uxtb	r0, r0
 8011d66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011d6a:	fa5f f888 	uxtb.w	r8, r8
 8011d6e:	fb10 f009 	smulbb	r0, r0, r9
 8011d72:	fb08 0005 	mla	r0, r8, r5, r0
 8011d76:	b280      	uxth	r0, r0
 8011d78:	fa1f fc8c 	uxth.w	ip, ip
 8011d7c:	fb1a fa09 	smulbb	sl, sl, r9
 8011d80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011d84:	fb07 a705 	mla	r7, r7, r5, sl
 8011d88:	f100 0a01 	add.w	sl, r0, #1
 8011d8c:	f10c 0501 	add.w	r5, ip, #1
 8011d90:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011d94:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011d98:	b2bf      	uxth	r7, r7
 8011d9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011d9e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011da2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011da6:	f107 0a01 	add.w	sl, r7, #1
 8011daa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011dae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011db2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011db6:	9802      	ldr	r0, [sp, #8]
 8011db8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011dbc:	f824 c000 	strh.w	ip, [r4, r0]
 8011dc0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011dc2:	4401      	add	r1, r0
 8011dc4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011dc6:	3e01      	subs	r6, #1
 8011dc8:	4402      	add	r2, r0
 8011dca:	e756      	b.n	8011c7a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8011dcc:	f06f 0501 	mvn.w	r5, #1
 8011dd0:	fb05 f706 	mul.w	r7, r5, r6
 8011dd4:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011dd8:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011ddc:	0945      	lsrs	r5, r0, #5
 8011dde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011de2:	ea4c 0505 	orr.w	r5, ip, r5
 8011de6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011dea:	4305      	orrs	r5, r0
 8011dec:	53e5      	strh	r5, [r4, r7]
 8011dee:	e7e7      	b.n	8011dc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011df0:	f04f 0800 	mov.w	r8, #0
 8011df4:	eba3 0008 	sub.w	r0, r3, r8
 8011df8:	2800      	cmp	r0, #0
 8011dfa:	f77f af41 	ble.w	8011c80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011dfe:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8011e02:	9f00      	ldr	r7, [sp, #0]
 8011e04:	1410      	asrs	r0, r2, #16
 8011e06:	140d      	asrs	r5, r1, #16
 8011e08:	fb06 7000 	mla	r0, r6, r0, r7
 8011e0c:	5d40      	ldrb	r0, [r0, r5]
 8011e0e:	9d01      	ldr	r5, [sp, #4]
 8011e10:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8011e14:	0e06      	lsrs	r6, r0, #24
 8011e16:	2eff      	cmp	r6, #255	; 0xff
 8011e18:	d048      	beq.n	8011eac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8011e1a:	b2f5      	uxtb	r5, r6
 8011e1c:	2e00      	cmp	r6, #0
 8011e1e:	d03e      	beq.n	8011e9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8011e20:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8011e24:	fa1f f985 	uxth.w	r9, r5
 8011e28:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011e2c:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8011e30:	43ed      	mvns	r5, r5
 8011e32:	b2ed      	uxtb	r5, r5
 8011e34:	fb16 f609 	smulbb	r6, r6, r9
 8011e38:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e3c:	fb07 6705 	mla	r7, r7, r5, r6
 8011e40:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011e44:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011e48:	b2c0      	uxtb	r0, r0
 8011e4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011e4e:	fa5f fc8c 	uxtb.w	ip, ip
 8011e52:	fb10 f009 	smulbb	r0, r0, r9
 8011e56:	fb0c 0005 	mla	r0, ip, r5, r0
 8011e5a:	b2bf      	uxth	r7, r7
 8011e5c:	fb1a fa09 	smulbb	sl, sl, r9
 8011e60:	b280      	uxth	r0, r0
 8011e62:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011e66:	fb06 a605 	mla	r6, r6, r5, sl
 8011e6a:	1c7d      	adds	r5, r7, #1
 8011e6c:	f100 0a01 	add.w	sl, r0, #1
 8011e70:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011e74:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011e78:	b2b6      	uxth	r6, r6
 8011e7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011e7e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011e82:	ea47 070a 	orr.w	r7, r7, sl
 8011e86:	f106 0a01 	add.w	sl, r6, #1
 8011e8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011e8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011e96:	ea47 070a 	orr.w	r7, r7, sl
 8011e9a:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011e9e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011ea0:	4401      	add	r1, r0
 8011ea2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011ea4:	f108 0801 	add.w	r8, r8, #1
 8011ea8:	4402      	add	r2, r0
 8011eaa:	e7a3      	b.n	8011df4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8011eac:	4d07      	ldr	r5, [pc, #28]	; (8011ecc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8011eae:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8011eb2:	0945      	lsrs	r5, r0, #5
 8011eb4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011eb8:	4335      	orrs	r5, r6
 8011eba:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011ebe:	4305      	orrs	r5, r0
 8011ec0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8011ec4:	e7eb      	b.n	8011e9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8011ec6:	b005      	add	sp, #20
 8011ec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ecc:	fffff800 	.word	0xfffff800

08011ed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ed4:	b087      	sub	sp, #28
 8011ed6:	468b      	mov	fp, r1
 8011ed8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011eda:	9204      	str	r2, [sp, #16]
 8011edc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011ee0:	9205      	str	r2, [sp, #20]
 8011ee2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011ee6:	6861      	ldr	r1, [r4, #4]
 8011ee8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011eec:	fb01 2000 	mla	r0, r1, r0, r2
 8011ef0:	6822      	ldr	r2, [r4, #0]
 8011ef2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011ef6:	f8de 2000 	ldr.w	r2, [lr]
 8011efa:	9201      	str	r2, [sp, #4]
 8011efc:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011f00:	9202      	str	r2, [sp, #8]
 8011f02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f06:	f1bb 0f00 	cmp.w	fp, #0
 8011f0a:	dc03      	bgt.n	8011f14 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8011f0c:	9a04      	ldr	r2, [sp, #16]
 8011f0e:	2a00      	cmp	r2, #0
 8011f10:	f340 8142 	ble.w	8012198 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011f14:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011f16:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011f1a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011f1e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011f22:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011f24:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011f28:	2b00      	cmp	r3, #0
 8011f2a:	dd0e      	ble.n	8011f4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8011f2c:	140c      	asrs	r4, r1, #16
 8011f2e:	d405      	bmi.n	8011f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011f30:	42bc      	cmp	r4, r7
 8011f32:	da03      	bge.n	8011f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011f34:	1414      	asrs	r4, r2, #16
 8011f36:	d401      	bmi.n	8011f3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011f38:	42b4      	cmp	r4, r6
 8011f3a:	db07      	blt.n	8011f4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011f3c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011f3e:	4421      	add	r1, r4
 8011f40:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011f42:	3b01      	subs	r3, #1
 8011f44:	4422      	add	r2, r4
 8011f46:	3002      	adds	r0, #2
 8011f48:	e7ee      	b.n	8011f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011f4a:	d019      	beq.n	8011f80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011f4c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011f4e:	1e5c      	subs	r4, r3, #1
 8011f50:	fb05 1504 	mla	r5, r5, r4, r1
 8011f54:	142d      	asrs	r5, r5, #16
 8011f56:	d409      	bmi.n	8011f6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011f58:	42bd      	cmp	r5, r7
 8011f5a:	da07      	bge.n	8011f6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011f5c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011f5e:	fb05 2404 	mla	r4, r5, r4, r2
 8011f62:	1424      	asrs	r4, r4, #16
 8011f64:	d402      	bmi.n	8011f6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011f66:	42b4      	cmp	r4, r6
 8011f68:	f2c0 80b1 	blt.w	80120ce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011f6c:	f04f 0800 	mov.w	r8, #0
 8011f70:	eb03 0408 	add.w	r4, r3, r8
 8011f74:	2c00      	cmp	r4, #0
 8011f76:	dc3e      	bgt.n	8011ff6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011f78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011f7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011f80:	f1bb 0f00 	cmp.w	fp, #0
 8011f84:	f340 8108 	ble.w	8012198 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011f88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011f8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011f90:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011f94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011f96:	f1bb 0b01 	subs.w	fp, fp, #1
 8011f9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011f9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011fa2:	eeb0 6a62 	vmov.f32	s12, s5
 8011fa6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011faa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011fae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011fb2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011fb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011fba:	eeb0 6a43 	vmov.f32	s12, s6
 8011fbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011fc2:	ee12 2a90 	vmov	r2, s5
 8011fc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011fca:	fb92 f3f3 	sdiv	r3, r2, r3
 8011fce:	ee13 2a10 	vmov	r2, s6
 8011fd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011fd6:	9313      	str	r3, [sp, #76]	; 0x4c
 8011fd8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fda:	fb92 f3f3 	sdiv	r3, r2, r3
 8011fde:	9a04      	ldr	r2, [sp, #16]
 8011fe0:	9314      	str	r3, [sp, #80]	; 0x50
 8011fe2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011fe6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fe8:	eeb0 3a67 	vmov.f32	s6, s15
 8011fec:	bf08      	it	eq
 8011fee:	4613      	moveq	r3, r2
 8011ff0:	eef0 2a47 	vmov.f32	s5, s14
 8011ff4:	e787      	b.n	8011f06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8011ff6:	140e      	asrs	r6, r1, #16
 8011ff8:	d462      	bmi.n	80120c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8011ffa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011ffe:	42b5      	cmp	r5, r6
 8012000:	dd5e      	ble.n	80120c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012002:	1417      	asrs	r7, r2, #16
 8012004:	d45c      	bmi.n	80120c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8012006:	f8de 400c 	ldr.w	r4, [lr, #12]
 801200a:	42bc      	cmp	r4, r7
 801200c:	dd58      	ble.n	80120c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801200e:	b22d      	sxth	r5, r5
 8012010:	fb07 6505 	mla	r5, r7, r5, r6
 8012014:	9c02      	ldr	r4, [sp, #8]
 8012016:	5d66      	ldrb	r6, [r4, r5]
 8012018:	2e00      	cmp	r6, #0
 801201a:	d051      	beq.n	80120c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801201c:	9c01      	ldr	r4, [sp, #4]
 801201e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8012022:	f06f 0401 	mvn.w	r4, #1
 8012026:	fb04 f408 	mul.w	r4, r4, r8
 801202a:	9403      	str	r4, [sp, #12]
 801202c:	5b05      	ldrh	r5, [r0, r4]
 801202e:	9c05      	ldr	r4, [sp, #20]
 8012030:	4366      	muls	r6, r4
 8012032:	1c74      	adds	r4, r6, #1
 8012034:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012038:	1224      	asrs	r4, r4, #8
 801203a:	b2a7      	uxth	r7, r4
 801203c:	122e      	asrs	r6, r5, #8
 801203e:	43e4      	mvns	r4, r4
 8012040:	b2e4      	uxtb	r4, r4
 8012042:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8012046:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801204a:	fb16 f604 	smulbb	r6, r6, r4
 801204e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012052:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012056:	00ed      	lsls	r5, r5, #3
 8012058:	fb0c 6c07 	mla	ip, ip, r7, r6
 801205c:	b2ed      	uxtb	r5, r5
 801205e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8012062:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012066:	fb15 f504 	smulbb	r5, r5, r4
 801206a:	fa5f f989 	uxtb.w	r9, r9
 801206e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012072:	fb09 5507 	mla	r5, r9, r7, r5
 8012076:	fb1a fa04 	smulbb	sl, sl, r4
 801207a:	fa1f fc8c 	uxth.w	ip, ip
 801207e:	b2ad      	uxth	r5, r5
 8012080:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012084:	fb06 a607 	mla	r6, r6, r7, sl
 8012088:	f10c 0401 	add.w	r4, ip, #1
 801208c:	f105 0a01 	add.w	sl, r5, #1
 8012090:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012094:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012098:	b2b6      	uxth	r6, r6
 801209a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801209e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80120a2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80120a6:	f106 0a01 	add.w	sl, r6, #1
 80120aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80120ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80120b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80120b6:	9c03      	ldr	r4, [sp, #12]
 80120b8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80120bc:	f820 c004 	strh.w	ip, [r0, r4]
 80120c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80120c2:	4421      	add	r1, r4
 80120c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80120c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80120ca:	4422      	add	r2, r4
 80120cc:	e750      	b.n	8011f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80120ce:	f04f 0900 	mov.w	r9, #0
 80120d2:	eba3 0409 	sub.w	r4, r3, r9
 80120d6:	2c00      	cmp	r4, #0
 80120d8:	f77f af4e 	ble.w	8011f78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80120dc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80120e0:	140d      	asrs	r5, r1, #16
 80120e2:	1414      	asrs	r4, r2, #16
 80120e4:	fb06 5404 	mla	r4, r6, r4, r5
 80120e8:	9d02      	ldr	r5, [sp, #8]
 80120ea:	5d2e      	ldrb	r6, [r5, r4]
 80120ec:	2e00      	cmp	r6, #0
 80120ee:	d04c      	beq.n	801218a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80120f0:	9d01      	ldr	r5, [sp, #4]
 80120f2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80120f6:	9c05      	ldr	r4, [sp, #20]
 80120f8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80120fc:	4366      	muls	r6, r4
 80120fe:	1c74      	adds	r4, r6, #1
 8012100:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8012104:	1224      	asrs	r4, r4, #8
 8012106:	b2a7      	uxth	r7, r4
 8012108:	122e      	asrs	r6, r5, #8
 801210a:	43e4      	mvns	r4, r4
 801210c:	b2e4      	uxtb	r4, r4
 801210e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8012112:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012116:	fb16 f604 	smulbb	r6, r6, r4
 801211a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801211e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012122:	00ed      	lsls	r5, r5, #3
 8012124:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012128:	b2ed      	uxtb	r5, r5
 801212a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801212e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012132:	fb15 f504 	smulbb	r5, r5, r4
 8012136:	fa5f f888 	uxtb.w	r8, r8
 801213a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801213e:	fb08 5507 	mla	r5, r8, r7, r5
 8012142:	fb1a fa04 	smulbb	sl, sl, r4
 8012146:	fa1f fc8c 	uxth.w	ip, ip
 801214a:	b2ad      	uxth	r5, r5
 801214c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012150:	fb06 a607 	mla	r6, r6, r7, sl
 8012154:	f10c 0401 	add.w	r4, ip, #1
 8012158:	f105 0a01 	add.w	sl, r5, #1
 801215c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012160:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012164:	b2b6      	uxth	r6, r6
 8012166:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801216a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801216e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012172:	f106 0a01 	add.w	sl, r6, #1
 8012176:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801217a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801217e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012182:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012186:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801218a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801218c:	4421      	add	r1, r4
 801218e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012190:	f109 0901 	add.w	r9, r9, #1
 8012194:	4422      	add	r2, r4
 8012196:	e79c      	b.n	80120d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012198:	b007      	add	sp, #28
 801219a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801219e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801219e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121a2:	b085      	sub	sp, #20
 80121a4:	468b      	mov	fp, r1
 80121a6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80121a8:	9203      	str	r2, [sp, #12]
 80121aa:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80121ae:	6861      	ldr	r1, [r4, #4]
 80121b0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80121b4:	fb01 2000 	mla	r0, r1, r0, r2
 80121b8:	6822      	ldr	r2, [r4, #0]
 80121ba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80121be:	f8d8 2000 	ldr.w	r2, [r8]
 80121c2:	9200      	str	r2, [sp, #0]
 80121c4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80121c8:	9201      	str	r2, [sp, #4]
 80121ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80121ce:	f1bb 0f00 	cmp.w	fp, #0
 80121d2:	dc03      	bgt.n	80121dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80121d4:	9a03      	ldr	r2, [sp, #12]
 80121d6:	2a00      	cmp	r2, #0
 80121d8:	f340 8146 	ble.w	8012468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80121dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80121de:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80121e2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80121e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80121ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80121ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80121f0:	2b00      	cmp	r3, #0
 80121f2:	dd0e      	ble.n	8012212 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80121f4:	140c      	asrs	r4, r1, #16
 80121f6:	d405      	bmi.n	8012204 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80121f8:	42bc      	cmp	r4, r7
 80121fa:	da03      	bge.n	8012204 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80121fc:	1414      	asrs	r4, r2, #16
 80121fe:	d401      	bmi.n	8012204 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012200:	42b4      	cmp	r4, r6
 8012202:	db07      	blt.n	8012214 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012204:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012206:	4421      	add	r1, r4
 8012208:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801220a:	3b01      	subs	r3, #1
 801220c:	4422      	add	r2, r4
 801220e:	3002      	adds	r0, #2
 8012210:	e7ee      	b.n	80121f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012212:	d017      	beq.n	8012244 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012214:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012216:	1e5c      	subs	r4, r3, #1
 8012218:	fb05 1504 	mla	r5, r5, r4, r1
 801221c:	142d      	asrs	r5, r5, #16
 801221e:	d409      	bmi.n	8012234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012220:	42bd      	cmp	r5, r7
 8012222:	da07      	bge.n	8012234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012224:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012226:	fb05 2404 	mla	r4, r5, r4, r2
 801222a:	1424      	asrs	r4, r4, #16
 801222c:	d402      	bmi.n	8012234 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801222e:	42b4      	cmp	r4, r6
 8012230:	f2c0 80b3 	blt.w	801239a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8012234:	2600      	movs	r6, #0
 8012236:	199c      	adds	r4, r3, r6
 8012238:	2c00      	cmp	r4, #0
 801223a:	dc3e      	bgt.n	80122ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801223c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012240:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012244:	f1bb 0f00 	cmp.w	fp, #0
 8012248:	f340 810e 	ble.w	8012468 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801224c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012250:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012254:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012258:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801225a:	f1bb 0b01 	subs.w	fp, fp, #1
 801225e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012262:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012266:	eeb0 6a62 	vmov.f32	s12, s5
 801226a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801226e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012272:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012276:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801227a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801227e:	eeb0 6a43 	vmov.f32	s12, s6
 8012282:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012286:	ee12 2a90 	vmov	r2, s5
 801228a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801228e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012292:	ee13 2a10 	vmov	r2, s6
 8012296:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801229a:	9311      	str	r3, [sp, #68]	; 0x44
 801229c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801229e:	fb92 f3f3 	sdiv	r3, r2, r3
 80122a2:	9a03      	ldr	r2, [sp, #12]
 80122a4:	9312      	str	r3, [sp, #72]	; 0x48
 80122a6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80122aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80122ac:	eeb0 3a67 	vmov.f32	s6, s15
 80122b0:	bf08      	it	eq
 80122b2:	4613      	moveq	r3, r2
 80122b4:	eef0 2a47 	vmov.f32	s5, s14
 80122b8:	e789      	b.n	80121ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80122ba:	140f      	asrs	r7, r1, #16
 80122bc:	d45f      	bmi.n	801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80122be:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80122c2:	42bd      	cmp	r5, r7
 80122c4:	dd5b      	ble.n	801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80122c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80122ca:	d458      	bmi.n	801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80122cc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80122d0:	4564      	cmp	r4, ip
 80122d2:	dd54      	ble.n	801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80122d4:	b22d      	sxth	r5, r5
 80122d6:	fb0c 7505 	mla	r5, ip, r5, r7
 80122da:	9c01      	ldr	r4, [sp, #4]
 80122dc:	5d64      	ldrb	r4, [r4, r5]
 80122de:	2cff      	cmp	r4, #255	; 0xff
 80122e0:	d053      	beq.n	801238a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80122e2:	2c00      	cmp	r4, #0
 80122e4:	d04b      	beq.n	801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80122e6:	9f00      	ldr	r7, [sp, #0]
 80122e8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80122ec:	f06f 0501 	mvn.w	r5, #1
 80122f0:	4375      	muls	r5, r6
 80122f2:	9502      	str	r5, [sp, #8]
 80122f4:	5b45      	ldrh	r5, [r0, r5]
 80122f6:	fa1f fc84 	uxth.w	ip, r4
 80122fa:	122f      	asrs	r7, r5, #8
 80122fc:	43e4      	mvns	r4, r4
 80122fe:	b2e4      	uxtb	r4, r4
 8012300:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8012304:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012308:	fb17 f704 	smulbb	r7, r7, r4
 801230c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012310:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012314:	00ed      	lsls	r5, r5, #3
 8012316:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801231a:	b2ed      	uxtb	r5, r5
 801231c:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012320:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012324:	fb15 f504 	smulbb	r5, r5, r4
 8012328:	fa5f f989 	uxtb.w	r9, r9
 801232c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012330:	fb09 550c 	mla	r5, r9, ip, r5
 8012334:	fb1a fa04 	smulbb	sl, sl, r4
 8012338:	fa1f fe8e 	uxth.w	lr, lr
 801233c:	b2ad      	uxth	r5, r5
 801233e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012342:	fb07 a70c 	mla	r7, r7, ip, sl
 8012346:	f10e 0401 	add.w	r4, lr, #1
 801234a:	f105 0a01 	add.w	sl, r5, #1
 801234e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8012352:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012356:	b2bf      	uxth	r7, r7
 8012358:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801235c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012360:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012364:	f107 0a01 	add.w	sl, r7, #1
 8012368:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801236c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012370:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012374:	9c02      	ldr	r4, [sp, #8]
 8012376:	ea4e 0e0a 	orr.w	lr, lr, sl
 801237a:	f820 e004 	strh.w	lr, [r0, r4]
 801237e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012380:	4421      	add	r1, r4
 8012382:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012384:	3e01      	subs	r6, #1
 8012386:	4422      	add	r2, r4
 8012388:	e755      	b.n	8012236 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801238a:	9c00      	ldr	r4, [sp, #0]
 801238c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012390:	f06f 0401 	mvn.w	r4, #1
 8012394:	4374      	muls	r4, r6
 8012396:	5305      	strh	r5, [r0, r4]
 8012398:	e7f1      	b.n	801237e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801239a:	f04f 0900 	mov.w	r9, #0
 801239e:	eba3 0409 	sub.w	r4, r3, r9
 80123a2:	2c00      	cmp	r4, #0
 80123a4:	f77f af4a 	ble.w	801223c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80123a8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80123ac:	1414      	asrs	r4, r2, #16
 80123ae:	140d      	asrs	r5, r1, #16
 80123b0:	fb06 5504 	mla	r5, r6, r4, r5
 80123b4:	9c01      	ldr	r4, [sp, #4]
 80123b6:	5d64      	ldrb	r4, [r4, r5]
 80123b8:	2cff      	cmp	r4, #255	; 0xff
 80123ba:	d04f      	beq.n	801245c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80123bc:	2c00      	cmp	r4, #0
 80123be:	d046      	beq.n	801244e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80123c0:	9e00      	ldr	r6, [sp, #0]
 80123c2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80123c6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80123ca:	b2a7      	uxth	r7, r4
 80123cc:	122e      	asrs	r6, r5, #8
 80123ce:	43e4      	mvns	r4, r4
 80123d0:	b2e4      	uxtb	r4, r4
 80123d2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80123d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80123da:	fb16 f604 	smulbb	r6, r6, r4
 80123de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80123e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80123e6:	00ed      	lsls	r5, r5, #3
 80123e8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80123ec:	b2ed      	uxtb	r5, r5
 80123ee:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80123f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80123f6:	fb15 f504 	smulbb	r5, r5, r4
 80123fa:	fa5f fe8e 	uxtb.w	lr, lr
 80123fe:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012402:	fb0e 5507 	mla	r5, lr, r7, r5
 8012406:	fb1a fa04 	smulbb	sl, sl, r4
 801240a:	fa1f fc8c 	uxth.w	ip, ip
 801240e:	b2ad      	uxth	r5, r5
 8012410:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012414:	fb06 a607 	mla	r6, r6, r7, sl
 8012418:	f10c 0401 	add.w	r4, ip, #1
 801241c:	f105 0a01 	add.w	sl, r5, #1
 8012420:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012424:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012428:	b2b6      	uxth	r6, r6
 801242a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801242e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012432:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012436:	f106 0a01 	add.w	sl, r6, #1
 801243a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801243e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012442:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012446:	ea4c 0c0a 	orr.w	ip, ip, sl
 801244a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801244e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012450:	4421      	add	r1, r4
 8012452:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012454:	f109 0901 	add.w	r9, r9, #1
 8012458:	4422      	add	r2, r4
 801245a:	e7a0      	b.n	801239e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801245c:	9c00      	ldr	r4, [sp, #0]
 801245e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8012462:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8012466:	e7f2      	b.n	801244e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8012468:	b005      	add	sp, #20
 801246a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801246e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801246e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012472:	b085      	sub	sp, #20
 8012474:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012476:	9203      	str	r2, [sp, #12]
 8012478:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801247c:	9201      	str	r2, [sp, #4]
 801247e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012482:	9100      	str	r1, [sp, #0]
 8012484:	6841      	ldr	r1, [r0, #4]
 8012486:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801248a:	fb01 2404 	mla	r4, r1, r4, r2
 801248e:	6802      	ldr	r2, [r0, #0]
 8012490:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012494:	f8de 2000 	ldr.w	r2, [lr]
 8012498:	9202      	str	r2, [sp, #8]
 801249a:	9a01      	ldr	r2, [sp, #4]
 801249c:	43d6      	mvns	r6, r2
 801249e:	b2f6      	uxtb	r6, r6
 80124a0:	9a00      	ldr	r2, [sp, #0]
 80124a2:	2a00      	cmp	r2, #0
 80124a4:	dc03      	bgt.n	80124ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80124a6:	9a03      	ldr	r2, [sp, #12]
 80124a8:	2a00      	cmp	r2, #0
 80124aa:	f340 8124 	ble.w	80126f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80124ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80124b0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80124b4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80124b8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80124bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80124be:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80124c2:	2b00      	cmp	r3, #0
 80124c4:	dd0e      	ble.n	80124e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80124c6:	1408      	asrs	r0, r1, #16
 80124c8:	d405      	bmi.n	80124d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80124ca:	4560      	cmp	r0, ip
 80124cc:	da03      	bge.n	80124d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80124ce:	1410      	asrs	r0, r2, #16
 80124d0:	d401      	bmi.n	80124d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80124d2:	42b8      	cmp	r0, r7
 80124d4:	db07      	blt.n	80124e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80124d6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80124d8:	4401      	add	r1, r0
 80124da:	9812      	ldr	r0, [sp, #72]	; 0x48
 80124dc:	3b01      	subs	r3, #1
 80124de:	4402      	add	r2, r0
 80124e0:	3402      	adds	r4, #2
 80124e2:	e7ee      	b.n	80124c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80124e4:	d06e      	beq.n	80125c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80124e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80124e8:	1e58      	subs	r0, r3, #1
 80124ea:	fb05 1500 	mla	r5, r5, r0, r1
 80124ee:	142d      	asrs	r5, r5, #16
 80124f0:	d45c      	bmi.n	80125ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80124f2:	4565      	cmp	r5, ip
 80124f4:	da5a      	bge.n	80125ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80124f6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80124f8:	fb05 2000 	mla	r0, r5, r0, r2
 80124fc:	1400      	asrs	r0, r0, #16
 80124fe:	d455      	bmi.n	80125ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012500:	42b8      	cmp	r0, r7
 8012502:	da53      	bge.n	80125ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012504:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8012508:	4699      	mov	r9, r3
 801250a:	46a2      	mov	sl, r4
 801250c:	f1b9 0f00 	cmp.w	r9, #0
 8012510:	dd54      	ble.n	80125bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012512:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012516:	140d      	asrs	r5, r1, #16
 8012518:	1410      	asrs	r0, r2, #16
 801251a:	fb07 5000 	mla	r0, r7, r0, r5
 801251e:	9d02      	ldr	r5, [sp, #8]
 8012520:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012524:	f8ba 5000 	ldrh.w	r5, [sl]
 8012528:	122f      	asrs	r7, r5, #8
 801252a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801252e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012532:	fb17 f706 	smulbb	r7, r7, r6
 8012536:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801253a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801253e:	00ed      	lsls	r5, r5, #3
 8012540:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012544:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012548:	10c7      	asrs	r7, r0, #3
 801254a:	b2ed      	uxtb	r5, r5
 801254c:	00c0      	lsls	r0, r0, #3
 801254e:	fb18 f806 	smulbb	r8, r8, r6
 8012552:	fb15 f506 	smulbb	r5, r5, r6
 8012556:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801255a:	b2c0      	uxtb	r0, r0
 801255c:	fa1f fc8c 	uxth.w	ip, ip
 8012560:	fb07 870b 	mla	r7, r7, fp, r8
 8012564:	fb00 500b 	mla	r0, r0, fp, r5
 8012568:	b280      	uxth	r0, r0
 801256a:	b2bf      	uxth	r7, r7
 801256c:	f10c 0501 	add.w	r5, ip, #1
 8012570:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012574:	f107 0801 	add.w	r8, r7, #1
 8012578:	1c45      	adds	r5, r0, #1
 801257a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801257e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012582:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012584:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012588:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801258c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012590:	ea4c 0c05 	orr.w	ip, ip, r5
 8012594:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8012598:	4401      	add	r1, r0
 801259a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801259c:	ea4c 0c08 	orr.w	ip, ip, r8
 80125a0:	f82a cb02 	strh.w	ip, [sl], #2
 80125a4:	4402      	add	r2, r0
 80125a6:	f109 39ff 	add.w	r9, r9, #4294967295
 80125aa:	e7af      	b.n	801250c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80125ac:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80125b0:	f04f 0800 	mov.w	r8, #0
 80125b4:	eb03 0008 	add.w	r0, r3, r8
 80125b8:	2800      	cmp	r0, #0
 80125ba:	dc41      	bgt.n	8012640 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80125bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80125c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80125c4:	9b00      	ldr	r3, [sp, #0]
 80125c6:	2b00      	cmp	r3, #0
 80125c8:	f340 8095 	ble.w	80126f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80125cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80125d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80125d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80125d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80125da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80125de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80125e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80125e6:	eef0 6a62 	vmov.f32	s13, s5
 80125ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80125ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80125f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80125f6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80125fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80125fe:	eef0 6a43 	vmov.f32	s13, s6
 8012602:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012606:	ee12 2a90 	vmov	r2, s5
 801260a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801260e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012612:	ee13 2a10 	vmov	r2, s6
 8012616:	9311      	str	r3, [sp, #68]	; 0x44
 8012618:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801261a:	fb92 f3f3 	sdiv	r3, r2, r3
 801261e:	9312      	str	r3, [sp, #72]	; 0x48
 8012620:	9b00      	ldr	r3, [sp, #0]
 8012622:	9a03      	ldr	r2, [sp, #12]
 8012624:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012628:	3b01      	subs	r3, #1
 801262a:	9300      	str	r3, [sp, #0]
 801262c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8012630:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012632:	eeb0 3a67 	vmov.f32	s6, s15
 8012636:	bf08      	it	eq
 8012638:	4613      	moveq	r3, r2
 801263a:	eef0 2a47 	vmov.f32	s5, s14
 801263e:	e72f      	b.n	80124a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012640:	140f      	asrs	r7, r1, #16
 8012642:	d451      	bmi.n	80126e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012644:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012648:	42bd      	cmp	r5, r7
 801264a:	dd4d      	ble.n	80126e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801264c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012650:	d44a      	bmi.n	80126e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012652:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012656:	4560      	cmp	r0, ip
 8012658:	dd46      	ble.n	80126e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801265a:	b22d      	sxth	r5, r5
 801265c:	fb0c 7505 	mla	r5, ip, r5, r7
 8012660:	9802      	ldr	r0, [sp, #8]
 8012662:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8012666:	f06f 0501 	mvn.w	r5, #1
 801266a:	fb05 fb08 	mul.w	fp, r5, r8
 801266e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012672:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012676:	122f      	asrs	r7, r5, #8
 8012678:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801267c:	fb17 f706 	smulbb	r7, r7, r6
 8012680:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012684:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012688:	00ed      	lsls	r5, r5, #3
 801268a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801268e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012692:	10c7      	asrs	r7, r0, #3
 8012694:	b2ed      	uxtb	r5, r5
 8012696:	00c0      	lsls	r0, r0, #3
 8012698:	fb19 f906 	smulbb	r9, r9, r6
 801269c:	fb15 f506 	smulbb	r5, r5, r6
 80126a0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80126a4:	b2c0      	uxtb	r0, r0
 80126a6:	fa1f fc8c 	uxth.w	ip, ip
 80126aa:	fb07 970a 	mla	r7, r7, sl, r9
 80126ae:	fb00 500a 	mla	r0, r0, sl, r5
 80126b2:	b2bf      	uxth	r7, r7
 80126b4:	b280      	uxth	r0, r0
 80126b6:	f10c 0501 	add.w	r5, ip, #1
 80126ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80126be:	f107 0901 	add.w	r9, r7, #1
 80126c2:	1c45      	adds	r5, r0, #1
 80126c4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80126c8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80126cc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80126d0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80126d4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80126d8:	ea4c 0c05 	orr.w	ip, ip, r5
 80126dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80126e0:	ea4c 0c09 	orr.w	ip, ip, r9
 80126e4:	f824 c00b 	strh.w	ip, [r4, fp]
 80126e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80126ea:	4401      	add	r1, r0
 80126ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 80126ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80126f2:	4402      	add	r2, r0
 80126f4:	e75e      	b.n	80125b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80126f6:	b005      	add	sp, #20
 80126f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080126fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80126fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012700:	b085      	sub	sp, #20
 8012702:	4693      	mov	fp, r2
 8012704:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012706:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012708:	6870      	ldr	r0, [r6, #4]
 801270a:	9101      	str	r1, [sp, #4]
 801270c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012710:	fb00 2404 	mla	r4, r0, r4, r2
 8012714:	6832      	ldr	r2, [r6, #0]
 8012716:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801271a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801271e:	682a      	ldr	r2, [r5, #0]
 8012720:	9202      	str	r2, [sp, #8]
 8012722:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012726:	9a01      	ldr	r2, [sp, #4]
 8012728:	2a00      	cmp	r2, #0
 801272a:	dc03      	bgt.n	8012734 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801272c:	f1bb 0f00 	cmp.w	fp, #0
 8012730:	f340 809a 	ble.w	8012868 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012734:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012736:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801273a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801273e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012742:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012744:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012748:	2b00      	cmp	r3, #0
 801274a:	dd0c      	ble.n	8012766 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801274c:	1406      	asrs	r6, r0, #16
 801274e:	d405      	bmi.n	801275c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012750:	454e      	cmp	r6, r9
 8012752:	da03      	bge.n	801275c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012754:	1416      	asrs	r6, r2, #16
 8012756:	d401      	bmi.n	801275c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012758:	4546      	cmp	r6, r8
 801275a:	db05      	blt.n	8012768 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801275c:	4470      	add	r0, lr
 801275e:	4462      	add	r2, ip
 8012760:	3b01      	subs	r3, #1
 8012762:	3402      	adds	r4, #2
 8012764:	e7f0      	b.n	8012748 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012766:	d00f      	beq.n	8012788 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8012768:	1e5e      	subs	r6, r3, #1
 801276a:	fb0e 0706 	mla	r7, lr, r6, r0
 801276e:	143f      	asrs	r7, r7, #16
 8012770:	d541      	bpl.n	80127f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8012772:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012776:	4698      	mov	r8, r3
 8012778:	9603      	str	r6, [sp, #12]
 801277a:	f1b8 0f00 	cmp.w	r8, #0
 801277e:	dc56      	bgt.n	801282e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8012780:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012784:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012788:	9b01      	ldr	r3, [sp, #4]
 801278a:	2b00      	cmp	r3, #0
 801278c:	dd6c      	ble.n	8012868 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801278e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012792:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012796:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801279a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801279c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80127a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80127a4:	eeb0 6a62 	vmov.f32	s12, s5
 80127a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80127ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80127b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80127b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80127bc:	eeb0 6a43 	vmov.f32	s12, s6
 80127c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80127c4:	ee12 2a90 	vmov	r2, s5
 80127c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80127cc:	fb92 fef3 	sdiv	lr, r2, r3
 80127d0:	ee13 2a10 	vmov	r2, s6
 80127d4:	fb92 fcf3 	sdiv	ip, r2, r3
 80127d8:	9b01      	ldr	r3, [sp, #4]
 80127da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127de:	3b01      	subs	r3, #1
 80127e0:	9301      	str	r3, [sp, #4]
 80127e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80127e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80127e8:	eeb0 3a67 	vmov.f32	s6, s15
 80127ec:	bf08      	it	eq
 80127ee:	465b      	moveq	r3, fp
 80127f0:	eef0 2a47 	vmov.f32	s5, s14
 80127f4:	e797      	b.n	8012726 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80127f6:	454f      	cmp	r7, r9
 80127f8:	dabb      	bge.n	8012772 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80127fa:	fb0c 2606 	mla	r6, ip, r6, r2
 80127fe:	1436      	asrs	r6, r6, #16
 8012800:	d4b7      	bmi.n	8012772 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012802:	4546      	cmp	r6, r8
 8012804:	dab5      	bge.n	8012772 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012806:	461e      	mov	r6, r3
 8012808:	46a0      	mov	r8, r4
 801280a:	2e00      	cmp	r6, #0
 801280c:	ddb8      	ble.n	8012780 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801280e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012812:	9902      	ldr	r1, [sp, #8]
 8012814:	1417      	asrs	r7, r2, #16
 8012816:	ea4f 4920 	mov.w	r9, r0, asr #16
 801281a:	fb0a 9707 	mla	r7, sl, r7, r9
 801281e:	4470      	add	r0, lr
 8012820:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012824:	f828 7b02 	strh.w	r7, [r8], #2
 8012828:	4462      	add	r2, ip
 801282a:	3e01      	subs	r6, #1
 801282c:	e7ed      	b.n	801280a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801282e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012832:	d414      	bmi.n	801285e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012834:	68ae      	ldr	r6, [r5, #8]
 8012836:	454e      	cmp	r6, r9
 8012838:	dd11      	ble.n	801285e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801283a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801283e:	d40e      	bmi.n	801285e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012840:	68ef      	ldr	r7, [r5, #12]
 8012842:	4557      	cmp	r7, sl
 8012844:	dd0b      	ble.n	801285e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012846:	b236      	sxth	r6, r6
 8012848:	fb0a 9606 	mla	r6, sl, r6, r9
 801284c:	9f02      	ldr	r7, [sp, #8]
 801284e:	f06f 0101 	mvn.w	r1, #1
 8012852:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012856:	fb01 f608 	mul.w	r6, r1, r8
 801285a:	9903      	ldr	r1, [sp, #12]
 801285c:	538f      	strh	r7, [r1, r6]
 801285e:	4470      	add	r0, lr
 8012860:	4462      	add	r2, ip
 8012862:	f108 38ff 	add.w	r8, r8, #4294967295
 8012866:	e788      	b.n	801277a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012868:	b005      	add	sp, #20
 801286a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801286e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801286e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012872:	b085      	sub	sp, #20
 8012874:	468b      	mov	fp, r1
 8012876:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012878:	9202      	str	r2, [sp, #8]
 801287a:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801287e:	9203      	str	r2, [sp, #12]
 8012880:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012884:	6841      	ldr	r1, [r0, #4]
 8012886:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801288a:	fb01 2404 	mla	r4, r1, r4, r2
 801288e:	6802      	ldr	r2, [r0, #0]
 8012890:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012894:	f8d8 2000 	ldr.w	r2, [r8]
 8012898:	9200      	str	r2, [sp, #0]
 801289a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801289e:	f1bb 0f00 	cmp.w	fp, #0
 80128a2:	dc03      	bgt.n	80128ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80128a4:	9a02      	ldr	r2, [sp, #8]
 80128a6:	2a00      	cmp	r2, #0
 80128a8:	f340 8134 	ble.w	8012b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80128ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80128ae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80128b2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80128b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80128ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80128bc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80128c0:	2b00      	cmp	r3, #0
 80128c2:	dd0e      	ble.n	80128e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80128c4:	1402      	asrs	r2, r0, #16
 80128c6:	d405      	bmi.n	80128d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80128c8:	42ba      	cmp	r2, r7
 80128ca:	da03      	bge.n	80128d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80128cc:	140a      	asrs	r2, r1, #16
 80128ce:	d401      	bmi.n	80128d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80128d0:	42b2      	cmp	r2, r6
 80128d2:	db07      	blt.n	80128e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80128d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80128d6:	4410      	add	r0, r2
 80128d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80128da:	3b01      	subs	r3, #1
 80128dc:	4411      	add	r1, r2
 80128de:	3402      	adds	r4, #2
 80128e0:	e7ee      	b.n	80128c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80128e2:	d019      	beq.n	8012918 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80128e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80128e6:	1e5a      	subs	r2, r3, #1
 80128e8:	fb05 0502 	mla	r5, r5, r2, r0
 80128ec:	142d      	asrs	r5, r5, #16
 80128ee:	d409      	bmi.n	8012904 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80128f0:	42bd      	cmp	r5, r7
 80128f2:	da07      	bge.n	8012904 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80128f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80128f6:	fb05 1202 	mla	r2, r5, r2, r1
 80128fa:	1412      	asrs	r2, r2, #16
 80128fc:	d402      	bmi.n	8012904 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80128fe:	42b2      	cmp	r2, r6
 8012900:	f2c0 80aa 	blt.w	8012a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8012904:	f04f 0c00 	mov.w	ip, #0
 8012908:	eb03 020c 	add.w	r2, r3, ip
 801290c:	2a00      	cmp	r2, #0
 801290e:	dc3e      	bgt.n	801298e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8012910:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012914:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012918:	f1bb 0f00 	cmp.w	fp, #0
 801291c:	f340 80fa 	ble.w	8012b14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8012920:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012924:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012928:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801292c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801292e:	f1bb 0b01 	subs.w	fp, fp, #1
 8012932:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012936:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801293a:	eeb0 6a62 	vmov.f32	s12, s5
 801293e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012942:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012946:	ee77 2a62 	vsub.f32	s5, s14, s5
 801294a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801294e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012952:	eeb0 6a43 	vmov.f32	s12, s6
 8012956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801295a:	ee12 2a90 	vmov	r2, s5
 801295e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012962:	fb92 f3f3 	sdiv	r3, r2, r3
 8012966:	ee13 2a10 	vmov	r2, s6
 801296a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801296e:	9311      	str	r3, [sp, #68]	; 0x44
 8012970:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012972:	fb92 f3f3 	sdiv	r3, r2, r3
 8012976:	9a02      	ldr	r2, [sp, #8]
 8012978:	9312      	str	r3, [sp, #72]	; 0x48
 801297a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801297e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012980:	eeb0 3a67 	vmov.f32	s6, s15
 8012984:	bf08      	it	eq
 8012986:	4613      	moveq	r3, r2
 8012988:	eef0 2a47 	vmov.f32	s5, s14
 801298c:	e787      	b.n	801289e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801298e:	1406      	asrs	r6, r0, #16
 8012990:	d45b      	bmi.n	8012a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8012992:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012996:	42b5      	cmp	r5, r6
 8012998:	dd57      	ble.n	8012a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801299a:	140f      	asrs	r7, r1, #16
 801299c:	d455      	bmi.n	8012a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801299e:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80129a2:	42ba      	cmp	r2, r7
 80129a4:	dd51      	ble.n	8012a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80129a6:	b22d      	sxth	r5, r5
 80129a8:	fb07 6505 	mla	r5, r7, r5, r6
 80129ac:	9a00      	ldr	r2, [sp, #0]
 80129ae:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80129b2:	0e2e      	lsrs	r6, r5, #24
 80129b4:	d049      	beq.n	8012a4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80129b6:	f06f 0201 	mvn.w	r2, #1
 80129ba:	fb02 f20c 	mul.w	r2, r2, ip
 80129be:	9201      	str	r2, [sp, #4]
 80129c0:	f834 e002 	ldrh.w	lr, [r4, r2]
 80129c4:	9a03      	ldr	r2, [sp, #12]
 80129c6:	4356      	muls	r6, r2
 80129c8:	1c72      	adds	r2, r6, #1
 80129ca:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80129ce:	1212      	asrs	r2, r2, #8
 80129d0:	fa1f f982 	uxth.w	r9, r2
 80129d4:	ea4f 272e 	mov.w	r7, lr, asr #8
 80129d8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80129dc:	43d2      	mvns	r2, r2
 80129de:	b2d2      	uxtb	r2, r2
 80129e0:	fb16 f609 	smulbb	r6, r6, r9
 80129e4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80129e8:	fb07 6702 	mla	r7, r7, r2, r6
 80129ec:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80129f0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80129f4:	b2ed      	uxtb	r5, r5
 80129f6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80129fa:	fa5f fe8e 	uxtb.w	lr, lr
 80129fe:	fb15 f509 	smulbb	r5, r5, r9
 8012a02:	fb0e 5502 	mla	r5, lr, r2, r5
 8012a06:	b2bf      	uxth	r7, r7
 8012a08:	fb1a fa09 	smulbb	sl, sl, r9
 8012a0c:	b2ad      	uxth	r5, r5
 8012a0e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012a12:	fb06 a602 	mla	r6, r6, r2, sl
 8012a16:	1c7a      	adds	r2, r7, #1
 8012a18:	f105 0a01 	add.w	sl, r5, #1
 8012a1c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012a20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012a24:	b2b6      	uxth	r6, r6
 8012a26:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012a2a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012a2e:	ea47 070a 	orr.w	r7, r7, sl
 8012a32:	f106 0a01 	add.w	sl, r6, #1
 8012a36:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012a3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012a3e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012a42:	9a01      	ldr	r2, [sp, #4]
 8012a44:	ea47 070a 	orr.w	r7, r7, sl
 8012a48:	52a7      	strh	r7, [r4, r2]
 8012a4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012a4c:	4410      	add	r0, r2
 8012a4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012a50:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012a54:	4411      	add	r1, r2
 8012a56:	e757      	b.n	8012908 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8012a58:	f04f 0e00 	mov.w	lr, #0
 8012a5c:	eba3 020e 	sub.w	r2, r3, lr
 8012a60:	2a00      	cmp	r2, #0
 8012a62:	f77f af55 	ble.w	8012910 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012a66:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012a6a:	1405      	asrs	r5, r0, #16
 8012a6c:	140a      	asrs	r2, r1, #16
 8012a6e:	fb06 5202 	mla	r2, r6, r2, r5
 8012a72:	9d00      	ldr	r5, [sp, #0]
 8012a74:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012a78:	0e2e      	lsrs	r6, r5, #24
 8012a7a:	d044      	beq.n	8012b06 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8012a7c:	9a03      	ldr	r2, [sp, #12]
 8012a7e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8012a82:	4356      	muls	r6, r2
 8012a84:	1c72      	adds	r2, r6, #1
 8012a86:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012a8a:	1212      	asrs	r2, r2, #8
 8012a8c:	fa1f f982 	uxth.w	r9, r2
 8012a90:	ea4f 272c 	mov.w	r7, ip, asr #8
 8012a94:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012a98:	43d2      	mvns	r2, r2
 8012a9a:	b2d2      	uxtb	r2, r2
 8012a9c:	fb16 f609 	smulbb	r6, r6, r9
 8012aa0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012aa4:	fb07 6702 	mla	r7, r7, r2, r6
 8012aa8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012aac:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012ab0:	b2ed      	uxtb	r5, r5
 8012ab2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012ab6:	fa5f fc8c 	uxtb.w	ip, ip
 8012aba:	fb15 f509 	smulbb	r5, r5, r9
 8012abe:	fb0c 5502 	mla	r5, ip, r2, r5
 8012ac2:	b2bf      	uxth	r7, r7
 8012ac4:	fb1a fa09 	smulbb	sl, sl, r9
 8012ac8:	b2ad      	uxth	r5, r5
 8012aca:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ace:	fb06 a602 	mla	r6, r6, r2, sl
 8012ad2:	1c7a      	adds	r2, r7, #1
 8012ad4:	f105 0a01 	add.w	sl, r5, #1
 8012ad8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012adc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012ae0:	b2b6      	uxth	r6, r6
 8012ae2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012ae6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012aea:	ea47 070a 	orr.w	r7, r7, sl
 8012aee:	f106 0a01 	add.w	sl, r6, #1
 8012af2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012af6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012afa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012afe:	ea47 070a 	orr.w	r7, r7, sl
 8012b02:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8012b06:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012b08:	4410      	add	r0, r2
 8012b0a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012b0c:	f10e 0e01 	add.w	lr, lr, #1
 8012b10:	4411      	add	r1, r2
 8012b12:	e7a3      	b.n	8012a5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8012b14:	b005      	add	sp, #20
 8012b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012b1c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b20:	b085      	sub	sp, #20
 8012b22:	468b      	mov	fp, r1
 8012b24:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012b26:	9203      	str	r2, [sp, #12]
 8012b28:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8012b2c:	6861      	ldr	r1, [r4, #4]
 8012b2e:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8012b32:	fb01 2000 	mla	r0, r1, r0, r2
 8012b36:	6822      	ldr	r2, [r4, #0]
 8012b38:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012b3c:	f8d9 2000 	ldr.w	r2, [r9]
 8012b40:	9200      	str	r2, [sp, #0]
 8012b42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b46:	f1bb 0f00 	cmp.w	fp, #0
 8012b4a:	dc03      	bgt.n	8012b54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012b4c:	9a03      	ldr	r2, [sp, #12]
 8012b4e:	2a00      	cmp	r2, #0
 8012b50:	f340 8154 	ble.w	8012dfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8012b54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012b56:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012b5a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012b5e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012b62:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012b64:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012b68:	2b00      	cmp	r3, #0
 8012b6a:	dd0e      	ble.n	8012b8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012b6c:	140c      	asrs	r4, r1, #16
 8012b6e:	d405      	bmi.n	8012b7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b70:	42bc      	cmp	r4, r7
 8012b72:	da03      	bge.n	8012b7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b74:	1414      	asrs	r4, r2, #16
 8012b76:	d401      	bmi.n	8012b7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b78:	42b4      	cmp	r4, r6
 8012b7a:	db07      	blt.n	8012b8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012b7c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012b7e:	4421      	add	r1, r4
 8012b80:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012b82:	3b01      	subs	r3, #1
 8012b84:	4422      	add	r2, r4
 8012b86:	3002      	adds	r0, #2
 8012b88:	e7ee      	b.n	8012b68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012b8a:	d017      	beq.n	8012bbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012b8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012b8e:	1e5c      	subs	r4, r3, #1
 8012b90:	fb05 1504 	mla	r5, r5, r4, r1
 8012b94:	142d      	asrs	r5, r5, #16
 8012b96:	d409      	bmi.n	8012bac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012b98:	42bd      	cmp	r5, r7
 8012b9a:	da07      	bge.n	8012bac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012b9c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012b9e:	fb05 2404 	mla	r4, r5, r4, r2
 8012ba2:	1424      	asrs	r4, r4, #16
 8012ba4:	d402      	bmi.n	8012bac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012ba6:	42b4      	cmp	r4, r6
 8012ba8:	f2c0 80c0 	blt.w	8012d2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8012bac:	2700      	movs	r7, #0
 8012bae:	19dc      	adds	r4, r3, r7
 8012bb0:	2c00      	cmp	r4, #0
 8012bb2:	dc3e      	bgt.n	8012c32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012bb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012bb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012bbc:	f1bb 0f00 	cmp.w	fp, #0
 8012bc0:	f340 811c 	ble.w	8012dfc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8012bc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012bc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012bcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012bd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012bd2:	f1bb 0b01 	subs.w	fp, fp, #1
 8012bd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012bda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012bde:	eeb0 6a62 	vmov.f32	s12, s5
 8012be2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012be6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012bea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012bee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012bf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012bf6:	eeb0 6a43 	vmov.f32	s12, s6
 8012bfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012bfe:	ee12 2a90 	vmov	r2, s5
 8012c02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012c06:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c0a:	ee13 2a10 	vmov	r2, s6
 8012c0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c12:	9311      	str	r3, [sp, #68]	; 0x44
 8012c14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c16:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c1a:	9a03      	ldr	r2, [sp, #12]
 8012c1c:	9312      	str	r3, [sp, #72]	; 0x48
 8012c1e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012c22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c24:	eeb0 3a67 	vmov.f32	s6, s15
 8012c28:	bf08      	it	eq
 8012c2a:	4613      	moveq	r3, r2
 8012c2c:	eef0 2a47 	vmov.f32	s5, s14
 8012c30:	e789      	b.n	8012b46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012c32:	140e      	asrs	r6, r1, #16
 8012c34:	d461      	bmi.n	8012cfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8012c36:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8012c3a:	42b5      	cmp	r5, r6
 8012c3c:	dd5d      	ble.n	8012cfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8012c3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012c42:	d45a      	bmi.n	8012cfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8012c44:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8012c48:	4564      	cmp	r4, ip
 8012c4a:	dd56      	ble.n	8012cfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8012c4c:	b22d      	sxth	r5, r5
 8012c4e:	fb0c 6505 	mla	r5, ip, r5, r6
 8012c52:	9c00      	ldr	r4, [sp, #0]
 8012c54:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 8012c58:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8012c5c:	d04d      	beq.n	8012cfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8012c5e:	0a26      	lsrs	r6, r4, #8
 8012c60:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8012c64:	fa5f f58e 	uxtb.w	r5, lr
 8012c68:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8012c6c:	9601      	str	r6, [sp, #4]
 8012c6e:	d04a      	beq.n	8012d06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8012c70:	f06f 0601 	mvn.w	r6, #1
 8012c74:	437e      	muls	r6, r7
 8012c76:	fa1f fa85 	uxth.w	sl, r5
 8012c7a:	f830 8006 	ldrh.w	r8, [r0, r6]
 8012c7e:	9602      	str	r6, [sp, #8]
 8012c80:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012c84:	43ed      	mvns	r5, r5
 8012c86:	fa5f fc8c 	uxtb.w	ip, ip
 8012c8a:	b2ed      	uxtb	r5, r5
 8012c8c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012c90:	fb1c fc0a 	smulbb	ip, ip, sl
 8012c94:	fb0e cc05 	mla	ip, lr, r5, ip
 8012c98:	b2e4      	uxtb	r4, r4
 8012c9a:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8012c9e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012ca2:	f89d 6004 	ldrb.w	r6, [sp, #4]
 8012ca6:	fa5f f888 	uxtb.w	r8, r8
 8012caa:	fb14 f40a 	smulbb	r4, r4, sl
 8012cae:	fb08 4405 	mla	r4, r8, r5, r4
 8012cb2:	b2a4      	uxth	r4, r4
 8012cb4:	fa1f fc8c 	uxth.w	ip, ip
 8012cb8:	fb16 f60a 	smulbb	r6, r6, sl
 8012cbc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012cc0:	fb0e 6e05 	mla	lr, lr, r5, r6
 8012cc4:	1c66      	adds	r6, r4, #1
 8012cc6:	f10c 0501 	add.w	r5, ip, #1
 8012cca:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012cce:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012cd2:	fa1f fe8e 	uxth.w	lr, lr
 8012cd6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012cda:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012cde:	ea4c 0c06 	orr.w	ip, ip, r6
 8012ce2:	f10e 0601 	add.w	r6, lr, #1
 8012ce6:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8012cea:	0976      	lsrs	r6, r6, #5
 8012cec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012cf0:	9c02      	ldr	r4, [sp, #8]
 8012cf2:	ea4c 0c06 	orr.w	ip, ip, r6
 8012cf6:	f820 c004 	strh.w	ip, [r0, r4]
 8012cfa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012cfc:	4421      	add	r1, r4
 8012cfe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012d00:	3f01      	subs	r7, #1
 8012d02:	4422      	add	r2, r4
 8012d04:	e753      	b.n	8012bae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012d06:	4e3f      	ldr	r6, [pc, #252]	; (8012e04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8012d08:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012d0c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8012d10:	ea4c 0c04 	orr.w	ip, ip, r4
 8012d14:	9c01      	ldr	r4, [sp, #4]
 8012d16:	f06f 0501 	mvn.w	r5, #1
 8012d1a:	00e6      	lsls	r6, r4, #3
 8012d1c:	437d      	muls	r5, r7
 8012d1e:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8012d22:	ea4c 0c04 	orr.w	ip, ip, r4
 8012d26:	f820 c005 	strh.w	ip, [r0, r5]
 8012d2a:	e7e6      	b.n	8012cfa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8012d2c:	f04f 0800 	mov.w	r8, #0
 8012d30:	eba3 0408 	sub.w	r4, r3, r8
 8012d34:	2c00      	cmp	r4, #0
 8012d36:	f77f af3d 	ble.w	8012bb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012d3a:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012d3e:	140d      	asrs	r5, r1, #16
 8012d40:	1414      	asrs	r4, r2, #16
 8012d42:	fb06 5404 	mla	r4, r6, r4, r5
 8012d46:	9d00      	ldr	r5, [sp, #0]
 8012d48:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8012d4c:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8012d50:	d042      	beq.n	8012dd8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8012d52:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8012d56:	fa5f f58c 	uxtb.w	r5, ip
 8012d5a:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8012d5e:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8012d62:	d040      	beq.n	8012de6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012d64:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8012d68:	fa1f fa85 	uxth.w	sl, r5
 8012d6c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012d70:	43ed      	mvns	r5, r5
 8012d72:	b2ff      	uxtb	r7, r7
 8012d74:	b2ed      	uxtb	r5, r5
 8012d76:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012d7a:	fb17 f70a 	smulbb	r7, r7, sl
 8012d7e:	fb0c 7705 	mla	r7, ip, r5, r7
 8012d82:	b2e4      	uxtb	r4, r4
 8012d84:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8012d88:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012d8c:	fa5f fe8e 	uxtb.w	lr, lr
 8012d90:	fb14 f40a 	smulbb	r4, r4, sl
 8012d94:	fb0e 4405 	mla	r4, lr, r5, r4
 8012d98:	b2f6      	uxtb	r6, r6
 8012d9a:	b2bf      	uxth	r7, r7
 8012d9c:	fb16 f60a 	smulbb	r6, r6, sl
 8012da0:	b2a4      	uxth	r4, r4
 8012da2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012da6:	fb0c 6c05 	mla	ip, ip, r5, r6
 8012daa:	1c7d      	adds	r5, r7, #1
 8012dac:	1c66      	adds	r6, r4, #1
 8012dae:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012db2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012db6:	fa1f fc8c 	uxth.w	ip, ip
 8012dba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012dbe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012dc2:	4337      	orrs	r7, r6
 8012dc4:	f10c 0601 	add.w	r6, ip, #1
 8012dc8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012dcc:	0976      	lsrs	r6, r6, #5
 8012dce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012dd2:	4337      	orrs	r7, r6
 8012dd4:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8012dd8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8012dda:	4421      	add	r1, r4
 8012ddc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012dde:	f108 0801 	add.w	r8, r8, #1
 8012de2:	4422      	add	r2, r4
 8012de4:	e7a4      	b.n	8012d30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012de6:	4d07      	ldr	r5, [pc, #28]	; (8012e04 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8012de8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012dec:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8012df0:	00f6      	lsls	r6, r6, #3
 8012df2:	4327      	orrs	r7, r4
 8012df4:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8012df8:	4327      	orrs	r7, r4
 8012dfa:	e7eb      	b.n	8012dd4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8012dfc:	b005      	add	sp, #20
 8012dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e02:	bf00      	nop
 8012e04:	fffff800 	.word	0xfffff800

08012e08 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e0c:	b087      	sub	sp, #28
 8012e0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012e12:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012e14:	9204      	str	r2, [sp, #16]
 8012e16:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012e1a:	9205      	str	r2, [sp, #20]
 8012e1c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012e20:	9101      	str	r1, [sp, #4]
 8012e22:	6841      	ldr	r1, [r0, #4]
 8012e24:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8012e28:	fb01 2404 	mla	r4, r1, r4, r2
 8012e2c:	6802      	ldr	r2, [r0, #0]
 8012e2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012e32:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8012e36:	3201      	adds	r2, #1
 8012e38:	f022 0201 	bic.w	r2, r2, #1
 8012e3c:	9202      	str	r2, [sp, #8]
 8012e3e:	f8d8 2000 	ldr.w	r2, [r8]
 8012e42:	9203      	str	r2, [sp, #12]
 8012e44:	9a01      	ldr	r2, [sp, #4]
 8012e46:	2a00      	cmp	r2, #0
 8012e48:	dc03      	bgt.n	8012e52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012e4a:	9a04      	ldr	r2, [sp, #16]
 8012e4c:	2a00      	cmp	r2, #0
 8012e4e:	f340 814d 	ble.w	80130ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8012e52:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012e54:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012e58:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012e5c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012e60:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012e62:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012e66:	2b00      	cmp	r3, #0
 8012e68:	dd0e      	ble.n	8012e88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012e6a:	1402      	asrs	r2, r0, #16
 8012e6c:	d405      	bmi.n	8012e7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012e6e:	42ba      	cmp	r2, r7
 8012e70:	da03      	bge.n	8012e7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012e72:	140a      	asrs	r2, r1, #16
 8012e74:	d401      	bmi.n	8012e7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012e76:	42b2      	cmp	r2, r6
 8012e78:	db07      	blt.n	8012e8a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8012e7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012e7c:	4410      	add	r0, r2
 8012e7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012e80:	3b01      	subs	r3, #1
 8012e82:	4411      	add	r1, r2
 8012e84:	3402      	adds	r4, #2
 8012e86:	e7ee      	b.n	8012e66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8012e88:	d019      	beq.n	8012ebe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8012e8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012e8c:	1e5a      	subs	r2, r3, #1
 8012e8e:	fb05 0502 	mla	r5, r5, r2, r0
 8012e92:	142d      	asrs	r5, r5, #16
 8012e94:	d409      	bmi.n	8012eaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012e96:	42bd      	cmp	r5, r7
 8012e98:	da07      	bge.n	8012eaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012e9a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012e9c:	fb05 1202 	mla	r2, r5, r2, r1
 8012ea0:	1412      	asrs	r2, r2, #16
 8012ea2:	d402      	bmi.n	8012eaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012ea4:	42b2      	cmp	r2, r6
 8012ea6:	f2c0 80b7 	blt.w	8013018 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8012eaa:	f04f 0c00 	mov.w	ip, #0
 8012eae:	eb03 020c 	add.w	r2, r3, ip
 8012eb2:	2a00      	cmp	r2, #0
 8012eb4:	dc3f      	bgt.n	8012f36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 8012eb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012eba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ebe:	9b01      	ldr	r3, [sp, #4]
 8012ec0:	2b00      	cmp	r3, #0
 8012ec2:	f340 8113 	ble.w	80130ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8012ec6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012eca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ece:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012ed2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ed4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ed8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012edc:	eeb0 6a62 	vmov.f32	s12, s5
 8012ee0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012ee4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ee8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012eec:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012ef0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ef4:	eeb0 6a43 	vmov.f32	s12, s6
 8012ef8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012efc:	ee12 2a90 	vmov	r2, s5
 8012f00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012f04:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f08:	ee13 2a10 	vmov	r2, s6
 8012f0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8012f0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f10:	fb92 f3f3 	sdiv	r3, r2, r3
 8012f14:	9314      	str	r3, [sp, #80]	; 0x50
 8012f16:	9b01      	ldr	r3, [sp, #4]
 8012f18:	9a04      	ldr	r2, [sp, #16]
 8012f1a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012f1e:	3b01      	subs	r3, #1
 8012f20:	9301      	str	r3, [sp, #4]
 8012f22:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012f26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f28:	eeb0 3a67 	vmov.f32	s6, s15
 8012f2c:	bf08      	it	eq
 8012f2e:	4613      	moveq	r3, r2
 8012f30:	eef0 2a47 	vmov.f32	s5, s14
 8012f34:	e786      	b.n	8012e44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012f36:	1405      	asrs	r5, r0, #16
 8012f38:	d467      	bmi.n	801300a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012f3a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8012f3e:	42aa      	cmp	r2, r5
 8012f40:	dd63      	ble.n	801300a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012f42:	140e      	asrs	r6, r1, #16
 8012f44:	d461      	bmi.n	801300a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012f46:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8012f4a:	42b2      	cmp	r2, r6
 8012f4c:	dd5d      	ble.n	801300a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012f4e:	9a02      	ldr	r2, [sp, #8]
 8012f50:	fb06 5502 	mla	r5, r6, r2, r5
 8012f54:	086a      	lsrs	r2, r5, #1
 8012f56:	9e03      	ldr	r6, [sp, #12]
 8012f58:	5cb2      	ldrb	r2, [r6, r2]
 8012f5a:	07ee      	lsls	r6, r5, #31
 8012f5c:	bf54      	ite	pl
 8012f5e:	f002 020f 	andpl.w	r2, r2, #15
 8012f62:	1112      	asrmi	r2, r2, #4
 8012f64:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012f68:	b2d2      	uxtb	r2, r2
 8012f6a:	2a00      	cmp	r2, #0
 8012f6c:	d04d      	beq.n	801300a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8012f6e:	f06f 0601 	mvn.w	r6, #1
 8012f72:	fb06 fb0c 	mul.w	fp, r6, ip
 8012f76:	9e05      	ldr	r6, [sp, #20]
 8012f78:	4d5e      	ldr	r5, [pc, #376]	; (80130f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8012f7a:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8012f7e:	682d      	ldr	r5, [r5, #0]
 8012f80:	4372      	muls	r2, r6
 8012f82:	1c56      	adds	r6, r2, #1
 8012f84:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012f88:	1212      	asrs	r2, r2, #8
 8012f8a:	0a2f      	lsrs	r7, r5, #8
 8012f8c:	fa1f fa82 	uxth.w	sl, r2
 8012f90:	ea4f 262e 	mov.w	r6, lr, asr #8
 8012f94:	43d2      	mvns	r2, r2
 8012f96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012f9a:	b2d2      	uxtb	r2, r2
 8012f9c:	fb17 f70a 	smulbb	r7, r7, sl
 8012fa0:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8012fa4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012fa8:	fb06 7602 	mla	r6, r6, r2, r7
 8012fac:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012fb0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012fb4:	fb19 f90a 	smulbb	r9, r9, sl
 8012fb8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012fbc:	00ed      	lsls	r5, r5, #3
 8012fbe:	fb07 9702 	mla	r7, r7, r2, r9
 8012fc2:	b2ed      	uxtb	r5, r5
 8012fc4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012fc8:	b2bf      	uxth	r7, r7
 8012fca:	fa5f fe8e 	uxtb.w	lr, lr
 8012fce:	fb15 f50a 	smulbb	r5, r5, sl
 8012fd2:	b2b6      	uxth	r6, r6
 8012fd4:	fb0e 5502 	mla	r5, lr, r2, r5
 8012fd8:	f107 0901 	add.w	r9, r7, #1
 8012fdc:	b2ad      	uxth	r5, r5
 8012fde:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8012fe2:	f106 0901 	add.w	r9, r6, #1
 8012fe6:	097f      	lsrs	r7, r7, #5
 8012fe8:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8012fec:	f105 0e01 	add.w	lr, r5, #1
 8012ff0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8012ff4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012ff8:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8012ffc:	4337      	orrs	r7, r6
 8012ffe:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013002:	ea47 070e 	orr.w	r7, r7, lr
 8013006:	f824 700b 	strh.w	r7, [r4, fp]
 801300a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801300c:	4410      	add	r0, r2
 801300e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013010:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013014:	4411      	add	r1, r2
 8013016:	e74a      	b.n	8012eae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013018:	f04f 0e00 	mov.w	lr, #0
 801301c:	eba3 020e 	sub.w	r2, r3, lr
 8013020:	2a00      	cmp	r2, #0
 8013022:	f77f af48 	ble.w	8012eb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8013026:	9e02      	ldr	r6, [sp, #8]
 8013028:	1402      	asrs	r2, r0, #16
 801302a:	140d      	asrs	r5, r1, #16
 801302c:	fb06 2505 	mla	r5, r6, r5, r2
 8013030:	086a      	lsrs	r2, r5, #1
 8013032:	9e03      	ldr	r6, [sp, #12]
 8013034:	5cb2      	ldrb	r2, [r6, r2]
 8013036:	07ed      	lsls	r5, r5, #31
 8013038:	bf54      	ite	pl
 801303a:	f002 020f 	andpl.w	r2, r2, #15
 801303e:	1112      	asrmi	r2, r2, #4
 8013040:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013044:	b2d2      	uxtb	r2, r2
 8013046:	2a00      	cmp	r2, #0
 8013048:	d049      	beq.n	80130de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801304a:	9e05      	ldr	r6, [sp, #20]
 801304c:	4d29      	ldr	r5, [pc, #164]	; (80130f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801304e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013052:	682d      	ldr	r5, [r5, #0]
 8013054:	4372      	muls	r2, r6
 8013056:	1c56      	adds	r6, r2, #1
 8013058:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801305c:	1212      	asrs	r2, r2, #8
 801305e:	0a2f      	lsrs	r7, r5, #8
 8013060:	fa1f fa82 	uxth.w	sl, r2
 8013064:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013068:	43d2      	mvns	r2, r2
 801306a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801306e:	b2d2      	uxtb	r2, r2
 8013070:	fb17 f70a 	smulbb	r7, r7, sl
 8013074:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8013078:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801307c:	fb06 7602 	mla	r6, r6, r2, r7
 8013080:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013084:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8013088:	fb19 f90a 	smulbb	r9, r9, sl
 801308c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013090:	00ed      	lsls	r5, r5, #3
 8013092:	fb07 9702 	mla	r7, r7, r2, r9
 8013096:	b2ed      	uxtb	r5, r5
 8013098:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801309c:	b2bf      	uxth	r7, r7
 801309e:	fa5f fc8c 	uxtb.w	ip, ip
 80130a2:	fb15 f50a 	smulbb	r5, r5, sl
 80130a6:	b2b6      	uxth	r6, r6
 80130a8:	fb0c 5502 	mla	r5, ip, r2, r5
 80130ac:	f107 0901 	add.w	r9, r7, #1
 80130b0:	b2ad      	uxth	r5, r5
 80130b2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80130b6:	f106 0b01 	add.w	fp, r6, #1
 80130ba:	097f      	lsrs	r7, r7, #5
 80130bc:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80130c0:	f105 0c01 	add.w	ip, r5, #1
 80130c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80130c8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80130cc:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80130d0:	4337      	orrs	r7, r6
 80130d2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80130d6:	ea47 070c 	orr.w	r7, r7, ip
 80130da:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80130de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80130e0:	4410      	add	r0, r2
 80130e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80130e4:	f10e 0e01 	add.w	lr, lr, #1
 80130e8:	4411      	add	r1, r2
 80130ea:	e797      	b.n	801301c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80130ec:	b007      	add	sp, #28
 80130ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130f2:	bf00      	nop
 80130f4:	2000d380 	.word	0x2000d380

080130f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80130f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130fc:	b087      	sub	sp, #28
 80130fe:	468b      	mov	fp, r1
 8013100:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013102:	9205      	str	r2, [sp, #20]
 8013104:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013108:	6841      	ldr	r1, [r0, #4]
 801310a:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801310e:	fb01 2404 	mla	r4, r1, r4, r2
 8013112:	6802      	ldr	r2, [r0, #0]
 8013114:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013118:	f8d8 2008 	ldr.w	r2, [r8, #8]
 801311c:	3201      	adds	r2, #1
 801311e:	f022 0201 	bic.w	r2, r2, #1
 8013122:	9201      	str	r2, [sp, #4]
 8013124:	f8d8 2000 	ldr.w	r2, [r8]
 8013128:	9202      	str	r2, [sp, #8]
 801312a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801312e:	f1bb 0f00 	cmp.w	fp, #0
 8013132:	dc03      	bgt.n	801313c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013134:	9a05      	ldr	r2, [sp, #20]
 8013136:	2a00      	cmp	r2, #0
 8013138:	f340 8156 	ble.w	80133e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801313c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801313e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013142:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013146:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801314a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801314c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013150:	2b00      	cmp	r3, #0
 8013152:	dd0e      	ble.n	8013172 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013154:	1402      	asrs	r2, r0, #16
 8013156:	d405      	bmi.n	8013164 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013158:	42ba      	cmp	r2, r7
 801315a:	da03      	bge.n	8013164 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801315c:	140a      	asrs	r2, r1, #16
 801315e:	d401      	bmi.n	8013164 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013160:	42b2      	cmp	r2, r6
 8013162:	db07      	blt.n	8013174 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013164:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013166:	4410      	add	r0, r2
 8013168:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801316a:	3b01      	subs	r3, #1
 801316c:	4411      	add	r1, r2
 801316e:	3402      	adds	r4, #2
 8013170:	e7ee      	b.n	8013150 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013172:	d017      	beq.n	80131a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8013174:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013176:	1e5a      	subs	r2, r3, #1
 8013178:	fb05 0502 	mla	r5, r5, r2, r0
 801317c:	142d      	asrs	r5, r5, #16
 801317e:	d409      	bmi.n	8013194 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013180:	42bd      	cmp	r5, r7
 8013182:	da07      	bge.n	8013194 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013184:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013186:	fb05 1202 	mla	r2, r5, r2, r1
 801318a:	1412      	asrs	r2, r2, #16
 801318c:	d402      	bmi.n	8013194 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801318e:	42b2      	cmp	r2, r6
 8013190:	f2c0 80be 	blt.w	8013310 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8013194:	2600      	movs	r6, #0
 8013196:	199a      	adds	r2, r3, r6
 8013198:	2a00      	cmp	r2, #0
 801319a:	dc3e      	bgt.n	801321a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 801319c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80131a0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80131a4:	f1bb 0f00 	cmp.w	fp, #0
 80131a8:	f340 811e 	ble.w	80133e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80131ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80131b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80131b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80131b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80131ba:	f1bb 0b01 	subs.w	fp, fp, #1
 80131be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80131c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80131c6:	eeb0 6a62 	vmov.f32	s12, s5
 80131ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80131ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80131d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80131d6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80131da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80131de:	eeb0 6a43 	vmov.f32	s12, s6
 80131e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80131e6:	ee12 2a90 	vmov	r2, s5
 80131ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80131ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80131f2:	ee13 2a10 	vmov	r2, s6
 80131f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80131fa:	9313      	str	r3, [sp, #76]	; 0x4c
 80131fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80131fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8013202:	9a05      	ldr	r2, [sp, #20]
 8013204:	9314      	str	r3, [sp, #80]	; 0x50
 8013206:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801320a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801320c:	eeb0 3a67 	vmov.f32	s6, s15
 8013210:	bf08      	it	eq
 8013212:	4613      	moveq	r3, r2
 8013214:	eef0 2a47 	vmov.f32	s5, s14
 8013218:	e789      	b.n	801312e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801321a:	1405      	asrs	r5, r0, #16
 801321c:	d465      	bmi.n	80132ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801321e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8013222:	42aa      	cmp	r2, r5
 8013224:	dd61      	ble.n	80132ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013226:	140f      	asrs	r7, r1, #16
 8013228:	d45f      	bmi.n	80132ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801322a:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801322e:	42ba      	cmp	r2, r7
 8013230:	dd5b      	ble.n	80132ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013232:	9a01      	ldr	r2, [sp, #4]
 8013234:	fb07 5502 	mla	r5, r7, r2, r5
 8013238:	086a      	lsrs	r2, r5, #1
 801323a:	9f02      	ldr	r7, [sp, #8]
 801323c:	5cba      	ldrb	r2, [r7, r2]
 801323e:	07ef      	lsls	r7, r5, #31
 8013240:	bf54      	ite	pl
 8013242:	f002 020f 	andpl.w	r2, r2, #15
 8013246:	1112      	asrmi	r2, r2, #4
 8013248:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801324c:	b2d2      	uxtb	r2, r2
 801324e:	2a00      	cmp	r2, #0
 8013250:	d04b      	beq.n	80132ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013252:	4d67      	ldr	r5, [pc, #412]	; (80133f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8013254:	682f      	ldr	r7, [r5, #0]
 8013256:	08fd      	lsrs	r5, r7, #3
 8013258:	ea4f 2917 	mov.w	r9, r7, lsr #8
 801325c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013260:	00ff      	lsls	r7, r7, #3
 8013262:	2aff      	cmp	r2, #255	; 0xff
 8013264:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013268:	9503      	str	r5, [sp, #12]
 801326a:	b2ff      	uxtb	r7, r7
 801326c:	d043      	beq.n	80132f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801326e:	f06f 0501 	mvn.w	r5, #1
 8013272:	4375      	muls	r5, r6
 8013274:	fa1f fa82 	uxth.w	sl, r2
 8013278:	f834 e005 	ldrh.w	lr, [r4, r5]
 801327c:	9504      	str	r5, [sp, #16]
 801327e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013282:	43d2      	mvns	r2, r2
 8013284:	b2d2      	uxtb	r2, r2
 8013286:	fb19 f90a 	smulbb	r9, r9, sl
 801328a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801328e:	9d03      	ldr	r5, [sp, #12]
 8013290:	fb0c 9c02 	mla	ip, ip, r2, r9
 8013294:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8013298:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801329c:	fb15 f50a 	smulbb	r5, r5, sl
 80132a0:	fb09 5502 	mla	r5, r9, r2, r5
 80132a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80132a8:	b2ad      	uxth	r5, r5
 80132aa:	fa5f fe8e 	uxtb.w	lr, lr
 80132ae:	fb17 f70a 	smulbb	r7, r7, sl
 80132b2:	fa1f fc8c 	uxth.w	ip, ip
 80132b6:	fb0e 7702 	mla	r7, lr, r2, r7
 80132ba:	f105 0901 	add.w	r9, r5, #1
 80132be:	b2bf      	uxth	r7, r7
 80132c0:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80132c4:	f10c 0901 	add.w	r9, ip, #1
 80132c8:	1c7a      	adds	r2, r7, #1
 80132ca:	096d      	lsrs	r5, r5, #5
 80132cc:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80132d0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80132d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80132d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80132dc:	ea45 050c 	orr.w	r5, r5, ip
 80132e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80132e4:	9a04      	ldr	r2, [sp, #16]
 80132e6:	433d      	orrs	r5, r7
 80132e8:	52a5      	strh	r5, [r4, r2]
 80132ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80132ec:	4410      	add	r0, r2
 80132ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80132f0:	3e01      	subs	r6, #1
 80132f2:	4411      	add	r1, r2
 80132f4:	e74f      	b.n	8013196 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80132f6:	f06f 0201 	mvn.w	r2, #1
 80132fa:	fb02 fe06 	mul.w	lr, r2, r6
 80132fe:	9a03      	ldr	r2, [sp, #12]
 8013300:	00d5      	lsls	r5, r2, #3
 8013302:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8013306:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 801330a:	f824 500e 	strh.w	r5, [r4, lr]
 801330e:	e7ec      	b.n	80132ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8013310:	f04f 0e00 	mov.w	lr, #0
 8013314:	eba3 020e 	sub.w	r2, r3, lr
 8013318:	2a00      	cmp	r2, #0
 801331a:	f77f af3f 	ble.w	801319c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801331e:	9e01      	ldr	r6, [sp, #4]
 8013320:	1402      	asrs	r2, r0, #16
 8013322:	140d      	asrs	r5, r1, #16
 8013324:	fb06 2505 	mla	r5, r6, r5, r2
 8013328:	086a      	lsrs	r2, r5, #1
 801332a:	9e02      	ldr	r6, [sp, #8]
 801332c:	5cb2      	ldrb	r2, [r6, r2]
 801332e:	07ed      	lsls	r5, r5, #31
 8013330:	bf54      	ite	pl
 8013332:	f002 020f 	andpl.w	r2, r2, #15
 8013336:	1112      	asrmi	r2, r2, #4
 8013338:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801333c:	b2d2      	uxtb	r2, r2
 801333e:	2a00      	cmp	r2, #0
 8013340:	d045      	beq.n	80133ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8013342:	4d2b      	ldr	r5, [pc, #172]	; (80133f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8013344:	682e      	ldr	r6, [r5, #0]
 8013346:	2aff      	cmp	r2, #255	; 0xff
 8013348:	ea4f 2916 	mov.w	r9, r6, lsr #8
 801334c:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 8013350:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8013354:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013358:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801335c:	b2f6      	uxtb	r6, r6
 801335e:	d03d      	beq.n	80133dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8013360:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013364:	fa1f fa82 	uxth.w	sl, r2
 8013368:	ea4f 272c 	mov.w	r7, ip, asr #8
 801336c:	43d2      	mvns	r2, r2
 801336e:	b2d2      	uxtb	r2, r2
 8013370:	fb19 f90a 	smulbb	r9, r9, sl
 8013374:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013378:	fb07 9702 	mla	r7, r7, r2, r9
 801337c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8013380:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013384:	fb15 f50a 	smulbb	r5, r5, sl
 8013388:	fb09 5502 	mla	r5, r9, r2, r5
 801338c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013390:	b2ad      	uxth	r5, r5
 8013392:	fa5f fc8c 	uxtb.w	ip, ip
 8013396:	fb16 f60a 	smulbb	r6, r6, sl
 801339a:	b2bf      	uxth	r7, r7
 801339c:	fb0c 6602 	mla	r6, ip, r2, r6
 80133a0:	f105 0901 	add.w	r9, r5, #1
 80133a4:	b2b6      	uxth	r6, r6
 80133a6:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80133aa:	f107 0901 	add.w	r9, r7, #1
 80133ae:	096d      	lsrs	r5, r5, #5
 80133b0:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80133b4:	1c72      	adds	r2, r6, #1
 80133b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80133ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80133be:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80133c2:	433d      	orrs	r5, r7
 80133c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80133c8:	4335      	orrs	r5, r6
 80133ca:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80133ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80133d0:	4410      	add	r0, r2
 80133d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80133d4:	f10e 0e01 	add.w	lr, lr, #1
 80133d8:	4411      	add	r1, r2
 80133da:	e79b      	b.n	8013314 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 80133dc:	00ed      	lsls	r5, r5, #3
 80133de:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 80133e2:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 80133e6:	e7f0      	b.n	80133ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80133e8:	b007      	add	sp, #28
 80133ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133ee:	bf00      	nop
 80133f0:	2000d380 	.word	0x2000d380

080133f4 <_ZN8touchgfx8LCD16bppD1Ev>:
 80133f4:	4770      	bx	lr

080133f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80133f6:	4770      	bx	lr

080133f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80133f8:	4770      	bx	lr

080133fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80133fa:	4770      	bx	lr

080133fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80133fc:	4770      	bx	lr

080133fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80133fe:	4770      	bx	lr

08013400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013400:	4770      	bx	lr

08013402 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013402:	4770      	bx	lr

08013404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013404:	4770      	bx	lr

08013406 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013406:	4770      	bx	lr

08013408 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013408:	4770      	bx	lr

0801340a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801340a:	4770      	bx	lr

0801340c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801340c:	4770      	bx	lr

0801340e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801340e:	4770      	bx	lr

08013410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013410:	4770      	bx	lr

08013412 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013412:	4770      	bx	lr

08013414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013414:	4770      	bx	lr

08013416 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013416:	4770      	bx	lr

08013418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013418:	4770      	bx	lr

0801341a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801341a:	4770      	bx	lr

0801341c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801341c:	4770      	bx	lr

0801341e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801341e:	4770      	bx	lr

08013420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8013420:	4770      	bx	lr

08013422 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013422:	4770      	bx	lr

08013424 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8013424:	4770      	bx	lr

08013426 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013426:	4770      	bx	lr

08013428 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8013428:	4770      	bx	lr

0801342a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801342a:	4770      	bx	lr

0801342c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801342c:	4770      	bx	lr
	...

08013430 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013430:	b508      	push	{r3, lr}
 8013432:	4b06      	ldr	r3, [pc, #24]	; (801344c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8013434:	8818      	ldrh	r0, [r3, #0]
 8013436:	b928      	cbnz	r0, 8013444 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8013438:	4b05      	ldr	r3, [pc, #20]	; (8013450 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801343a:	4a06      	ldr	r2, [pc, #24]	; (8013454 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 801343c:	4806      	ldr	r0, [pc, #24]	; (8013458 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801343e:	2154      	movs	r1, #84	; 0x54
 8013440:	f00a fdd2 	bl	801dfe8 <__assert_func>
 8013444:	0040      	lsls	r0, r0, #1
 8013446:	b280      	uxth	r0, r0
 8013448:	bd08      	pop	{r3, pc}
 801344a:	bf00      	nop
 801344c:	2000d352 	.word	0x2000d352
 8013450:	080225f6 	.word	0x080225f6
 8013454:	08022b7b 	.word	0x08022b7b
 8013458:	08022638 	.word	0x08022638

0801345c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801345c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013460:	b08b      	sub	sp, #44	; 0x2c
 8013462:	460f      	mov	r7, r1
 8013464:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8013468:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801346c:	4616      	mov	r6, r2
 801346e:	f1bb 0f00 	cmp.w	fp, #0
 8013472:	d046      	beq.n	8013502 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8013474:	6810      	ldr	r0, [r2, #0]
 8013476:	6851      	ldr	r1, [r2, #4]
 8013478:	ad06      	add	r5, sp, #24
 801347a:	c503      	stmia	r5!, {r0, r1}
 801347c:	6818      	ldr	r0, [r3, #0]
 801347e:	6859      	ldr	r1, [r3, #4]
 8013480:	ad08      	add	r5, sp, #32
 8013482:	c503      	stmia	r5!, {r0, r1}
 8013484:	a806      	add	r0, sp, #24
 8013486:	f7fa fbed 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801348a:	4631      	mov	r1, r6
 801348c:	a808      	add	r0, sp, #32
 801348e:	f7fa fbd1 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013492:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013496:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801349a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801349e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80134a2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80134a6:	fb16 2103 	smlabb	r1, r6, r3, r2
 80134aa:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80134ae:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80134b2:	4f5d      	ldr	r7, [pc, #372]	; (8013628 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 80134b4:	440a      	add	r2, r1
 80134b6:	f8ad 2020 	strh.w	r2, [sp, #32]
 80134ba:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80134be:	6838      	ldr	r0, [r7, #0]
 80134c0:	4413      	add	r3, r2
 80134c2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80134c6:	6803      	ldr	r3, [r0, #0]
 80134c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80134ca:	4798      	blx	r3
 80134cc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80134d0:	46b9      	mov	r9, r7
 80134d2:	d019      	beq.n	8013508 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80134d4:	f010 0f04 	tst.w	r0, #4
 80134d8:	d01a      	beq.n	8013510 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80134da:	f8d9 0000 	ldr.w	r0, [r9]
 80134de:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80134e2:	6801      	ldr	r1, [r0, #0]
 80134e4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80134e8:	e9cd b403 	strd	fp, r4, [sp, #12]
 80134ec:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80134f0:	9402      	str	r4, [sp, #8]
 80134f2:	b2ad      	uxth	r5, r5
 80134f4:	fa1f f488 	uxth.w	r4, r8
 80134f8:	9501      	str	r5, [sp, #4]
 80134fa:	9400      	str	r4, [sp, #0]
 80134fc:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 80134fe:	4631      	mov	r1, r6
 8013500:	47a0      	blx	r4
 8013502:	b00b      	add	sp, #44	; 0x2c
 8013504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013508:	b914      	cbnz	r4, 8013510 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801350a:	f010 0f01 	tst.w	r0, #1
 801350e:	e7e3      	b.n	80134d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8013510:	f8d9 0000 	ldr.w	r0, [r9]
 8013514:	6803      	ldr	r3, [r0, #0]
 8013516:	6a1b      	ldr	r3, [r3, #32]
 8013518:	4798      	blx	r3
 801351a:	4b44      	ldr	r3, [pc, #272]	; (801362c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 801351c:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8013520:	881a      	ldrh	r2, [r3, #0]
 8013522:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013526:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801352a:	fb02 1404 	mla	r4, r2, r4, r1
 801352e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013532:	469a      	mov	sl, r3
 8013534:	fb05 f502 	mul.w	r5, r5, r2
 8013538:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801353c:	d058      	beq.n	80135f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 801353e:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8013542:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013546:	fa1f f28b 	uxth.w	r2, fp
 801354a:	fa1f f989 	uxth.w	r9, r9
 801354e:	469e      	mov	lr, r3
 8013550:	42ac      	cmp	r4, r5
 8013552:	d263      	bcs.n	801361c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8013554:	eb04 0a07 	add.w	sl, r4, r7
 8013558:	4554      	cmp	r4, sl
 801355a:	d23c      	bcs.n	80135d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 801355c:	8821      	ldrh	r1, [r4, #0]
 801355e:	f836 3b02 	ldrh.w	r3, [r6], #2
 8013562:	1208      	asrs	r0, r1, #8
 8013564:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013568:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801356c:	fb10 f009 	smulbb	r0, r0, r9
 8013570:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8013574:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013578:	00c9      	lsls	r1, r1, #3
 801357a:	fb0c 0c02 	mla	ip, ip, r2, r0
 801357e:	b2c9      	uxtb	r1, r1
 8013580:	10d8      	asrs	r0, r3, #3
 8013582:	00db      	lsls	r3, r3, #3
 8013584:	fb11 f109 	smulbb	r1, r1, r9
 8013588:	b2db      	uxtb	r3, r3
 801358a:	fa1f fc8c 	uxth.w	ip, ip
 801358e:	fb03 1302 	mla	r3, r3, r2, r1
 8013592:	b29b      	uxth	r3, r3
 8013594:	f10c 0101 	add.w	r1, ip, #1
 8013598:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801359c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80135a0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80135a4:	fb1b fb09 	smulbb	fp, fp, r9
 80135a8:	1c59      	adds	r1, r3, #1
 80135aa:	fb00 b002 	mla	r0, r0, r2, fp
 80135ae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80135b2:	b280      	uxth	r0, r0
 80135b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80135b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80135bc:	ea4c 0c03 	orr.w	ip, ip, r3
 80135c0:	1c43      	adds	r3, r0, #1
 80135c2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80135c6:	0940      	lsrs	r0, r0, #5
 80135c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80135cc:	ea4c 0c00 	orr.w	ip, ip, r0
 80135d0:	f824 cb02 	strh.w	ip, [r4], #2
 80135d4:	e7c0      	b.n	8013558 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 80135d6:	f8be 3000 	ldrh.w	r3, [lr]
 80135da:	eba3 0308 	sub.w	r3, r3, r8
 80135de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80135e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80135e6:	eba3 0308 	sub.w	r3, r3, r8
 80135ea:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80135ee:	e7af      	b.n	8013550 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 80135f0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80135f4:	f8d9 0000 	ldr.w	r0, [r9]
 80135f8:	42ac      	cmp	r4, r5
 80135fa:	6803      	ldr	r3, [r0, #0]
 80135fc:	d20e      	bcs.n	801361c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 80135fe:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 8013602:	4632      	mov	r2, r6
 8013604:	463b      	mov	r3, r7
 8013606:	4621      	mov	r1, r4
 8013608:	47c0      	blx	r8
 801360a:	f8ba 3000 	ldrh.w	r3, [sl]
 801360e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013612:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013616:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801361a:	e7eb      	b.n	80135f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 801361c:	4b02      	ldr	r3, [pc, #8]	; (8013628 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 801361e:	6818      	ldr	r0, [r3, #0]
 8013620:	6803      	ldr	r3, [r0, #0]
 8013622:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013624:	4798      	blx	r3
 8013626:	e76c      	b.n	8013502 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8013628:	2000d358 	.word	0x2000d358
 801362c:	2000d352 	.word	0x2000d352

08013630 <_ZN8touchgfx8LCD16bppD0Ev>:
 8013630:	b510      	push	{r4, lr}
 8013632:	2178      	movs	r1, #120	; 0x78
 8013634:	4604      	mov	r4, r0
 8013636:	f00a fca8 	bl	801df8a <_ZdlPvj>
 801363a:	4620      	mov	r0, r4
 801363c:	bd10      	pop	{r4, pc}

0801363e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801363e:	b510      	push	{r4, lr}
 8013640:	2104      	movs	r1, #4
 8013642:	4604      	mov	r4, r0
 8013644:	f00a fca1 	bl	801df8a <_ZdlPvj>
 8013648:	4620      	mov	r0, r4
 801364a:	bd10      	pop	{r4, pc}

0801364c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801364c:	b510      	push	{r4, lr}
 801364e:	2104      	movs	r1, #4
 8013650:	4604      	mov	r4, r0
 8013652:	f00a fc9a 	bl	801df8a <_ZdlPvj>
 8013656:	4620      	mov	r0, r4
 8013658:	bd10      	pop	{r4, pc}

0801365a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801365a:	b510      	push	{r4, lr}
 801365c:	2104      	movs	r1, #4
 801365e:	4604      	mov	r4, r0
 8013660:	f00a fc93 	bl	801df8a <_ZdlPvj>
 8013664:	4620      	mov	r0, r4
 8013666:	bd10      	pop	{r4, pc}

08013668 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013668:	b510      	push	{r4, lr}
 801366a:	2104      	movs	r1, #4
 801366c:	4604      	mov	r4, r0
 801366e:	f00a fc8c 	bl	801df8a <_ZdlPvj>
 8013672:	4620      	mov	r0, r4
 8013674:	bd10      	pop	{r4, pc}

08013676 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013676:	b510      	push	{r4, lr}
 8013678:	2104      	movs	r1, #4
 801367a:	4604      	mov	r4, r0
 801367c:	f00a fc85 	bl	801df8a <_ZdlPvj>
 8013680:	4620      	mov	r0, r4
 8013682:	bd10      	pop	{r4, pc}

08013684 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013684:	b510      	push	{r4, lr}
 8013686:	2104      	movs	r1, #4
 8013688:	4604      	mov	r4, r0
 801368a:	f00a fc7e 	bl	801df8a <_ZdlPvj>
 801368e:	4620      	mov	r0, r4
 8013690:	bd10      	pop	{r4, pc}

08013692 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013692:	b510      	push	{r4, lr}
 8013694:	2104      	movs	r1, #4
 8013696:	4604      	mov	r4, r0
 8013698:	f00a fc77 	bl	801df8a <_ZdlPvj>
 801369c:	4620      	mov	r0, r4
 801369e:	bd10      	pop	{r4, pc}

080136a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80136a0:	b510      	push	{r4, lr}
 80136a2:	2104      	movs	r1, #4
 80136a4:	4604      	mov	r4, r0
 80136a6:	f00a fc70 	bl	801df8a <_ZdlPvj>
 80136aa:	4620      	mov	r0, r4
 80136ac:	bd10      	pop	{r4, pc}

080136ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80136ae:	b510      	push	{r4, lr}
 80136b0:	2104      	movs	r1, #4
 80136b2:	4604      	mov	r4, r0
 80136b4:	f00a fc69 	bl	801df8a <_ZdlPvj>
 80136b8:	4620      	mov	r0, r4
 80136ba:	bd10      	pop	{r4, pc}

080136bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80136bc:	b510      	push	{r4, lr}
 80136be:	2104      	movs	r1, #4
 80136c0:	4604      	mov	r4, r0
 80136c2:	f00a fc62 	bl	801df8a <_ZdlPvj>
 80136c6:	4620      	mov	r0, r4
 80136c8:	bd10      	pop	{r4, pc}

080136ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80136ca:	b510      	push	{r4, lr}
 80136cc:	2104      	movs	r1, #4
 80136ce:	4604      	mov	r4, r0
 80136d0:	f00a fc5b 	bl	801df8a <_ZdlPvj>
 80136d4:	4620      	mov	r0, r4
 80136d6:	bd10      	pop	{r4, pc}

080136d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80136d8:	b510      	push	{r4, lr}
 80136da:	2104      	movs	r1, #4
 80136dc:	4604      	mov	r4, r0
 80136de:	f00a fc54 	bl	801df8a <_ZdlPvj>
 80136e2:	4620      	mov	r0, r4
 80136e4:	bd10      	pop	{r4, pc}

080136e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80136e6:	b510      	push	{r4, lr}
 80136e8:	2104      	movs	r1, #4
 80136ea:	4604      	mov	r4, r0
 80136ec:	f00a fc4d 	bl	801df8a <_ZdlPvj>
 80136f0:	4620      	mov	r0, r4
 80136f2:	bd10      	pop	{r4, pc}

080136f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80136f4:	b510      	push	{r4, lr}
 80136f6:	2104      	movs	r1, #4
 80136f8:	4604      	mov	r4, r0
 80136fa:	f00a fc46 	bl	801df8a <_ZdlPvj>
 80136fe:	4620      	mov	r0, r4
 8013700:	bd10      	pop	{r4, pc}

08013702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013702:	b510      	push	{r4, lr}
 8013704:	2104      	movs	r1, #4
 8013706:	4604      	mov	r4, r0
 8013708:	f00a fc3f 	bl	801df8a <_ZdlPvj>
 801370c:	4620      	mov	r0, r4
 801370e:	bd10      	pop	{r4, pc}

08013710 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013710:	b510      	push	{r4, lr}
 8013712:	2104      	movs	r1, #4
 8013714:	4604      	mov	r4, r0
 8013716:	f00a fc38 	bl	801df8a <_ZdlPvj>
 801371a:	4620      	mov	r0, r4
 801371c:	bd10      	pop	{r4, pc}

0801371e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801371e:	b510      	push	{r4, lr}
 8013720:	2104      	movs	r1, #4
 8013722:	4604      	mov	r4, r0
 8013724:	f00a fc31 	bl	801df8a <_ZdlPvj>
 8013728:	4620      	mov	r0, r4
 801372a:	bd10      	pop	{r4, pc}

0801372c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801372c:	b510      	push	{r4, lr}
 801372e:	2104      	movs	r1, #4
 8013730:	4604      	mov	r4, r0
 8013732:	f00a fc2a 	bl	801df8a <_ZdlPvj>
 8013736:	4620      	mov	r0, r4
 8013738:	bd10      	pop	{r4, pc}

0801373a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801373a:	b510      	push	{r4, lr}
 801373c:	2104      	movs	r1, #4
 801373e:	4604      	mov	r4, r0
 8013740:	f00a fc23 	bl	801df8a <_ZdlPvj>
 8013744:	4620      	mov	r0, r4
 8013746:	bd10      	pop	{r4, pc}

08013748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013748:	b510      	push	{r4, lr}
 801374a:	2104      	movs	r1, #4
 801374c:	4604      	mov	r4, r0
 801374e:	f00a fc1c 	bl	801df8a <_ZdlPvj>
 8013752:	4620      	mov	r0, r4
 8013754:	bd10      	pop	{r4, pc}

08013756 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013756:	b510      	push	{r4, lr}
 8013758:	2104      	movs	r1, #4
 801375a:	4604      	mov	r4, r0
 801375c:	f00a fc15 	bl	801df8a <_ZdlPvj>
 8013760:	4620      	mov	r0, r4
 8013762:	bd10      	pop	{r4, pc}

08013764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013764:	b510      	push	{r4, lr}
 8013766:	2104      	movs	r1, #4
 8013768:	4604      	mov	r4, r0
 801376a:	f00a fc0e 	bl	801df8a <_ZdlPvj>
 801376e:	4620      	mov	r0, r4
 8013770:	bd10      	pop	{r4, pc}

08013772 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013772:	b510      	push	{r4, lr}
 8013774:	2104      	movs	r1, #4
 8013776:	4604      	mov	r4, r0
 8013778:	f00a fc07 	bl	801df8a <_ZdlPvj>
 801377c:	4620      	mov	r0, r4
 801377e:	bd10      	pop	{r4, pc}

08013780 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013780:	b510      	push	{r4, lr}
 8013782:	2104      	movs	r1, #4
 8013784:	4604      	mov	r4, r0
 8013786:	f00a fc00 	bl	801df8a <_ZdlPvj>
 801378a:	4620      	mov	r0, r4
 801378c:	bd10      	pop	{r4, pc}

0801378e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801378e:	b510      	push	{r4, lr}
 8013790:	2104      	movs	r1, #4
 8013792:	4604      	mov	r4, r0
 8013794:	f00a fbf9 	bl	801df8a <_ZdlPvj>
 8013798:	4620      	mov	r0, r4
 801379a:	bd10      	pop	{r4, pc}

0801379c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801379c:	b510      	push	{r4, lr}
 801379e:	2104      	movs	r1, #4
 80137a0:	4604      	mov	r4, r0
 80137a2:	f00a fbf2 	bl	801df8a <_ZdlPvj>
 80137a6:	4620      	mov	r0, r4
 80137a8:	bd10      	pop	{r4, pc}

080137aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80137aa:	b510      	push	{r4, lr}
 80137ac:	2104      	movs	r1, #4
 80137ae:	4604      	mov	r4, r0
 80137b0:	f00a fbeb 	bl	801df8a <_ZdlPvj>
 80137b4:	4620      	mov	r0, r4
 80137b6:	bd10      	pop	{r4, pc}

080137b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80137b8:	b510      	push	{r4, lr}
 80137ba:	2104      	movs	r1, #4
 80137bc:	4604      	mov	r4, r0
 80137be:	f00a fbe4 	bl	801df8a <_ZdlPvj>
 80137c2:	4620      	mov	r0, r4
 80137c4:	bd10      	pop	{r4, pc}
	...

080137c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80137c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80137cc:	460d      	mov	r5, r1
 80137ce:	b087      	sub	sp, #28
 80137d0:	4614      	mov	r4, r2
 80137d2:	4698      	mov	r8, r3
 80137d4:	b333      	cbz	r3, 8013824 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80137d6:	4608      	mov	r0, r1
 80137d8:	f7f6 fa41 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 80137dc:	bb10      	cbnz	r0, 8013824 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80137de:	6828      	ldr	r0, [r5, #0]
 80137e0:	6869      	ldr	r1, [r5, #4]
 80137e2:	4e73      	ldr	r6, [pc, #460]	; (80139b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 80137e4:	ab04      	add	r3, sp, #16
 80137e6:	c303      	stmia	r3!, {r0, r1}
 80137e8:	a804      	add	r0, sp, #16
 80137ea:	f7fa fa3b 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80137ee:	6830      	ldr	r0, [r6, #0]
 80137f0:	6803      	ldr	r3, [r0, #0]
 80137f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80137f4:	4798      	blx	r3
 80137f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80137fa:	d016      	beq.n	801382a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 80137fc:	f010 0f08 	tst.w	r0, #8
 8013800:	d016      	beq.n	8013830 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 8013802:	6830      	ldr	r0, [r6, #0]
 8013804:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 8013808:	6801      	ldr	r1, [r0, #0]
 801380a:	9501      	str	r5, [sp, #4]
 801380c:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8013810:	f8cd 8008 	str.w	r8, [sp, #8]
 8013814:	9500      	str	r5, [sp, #0]
 8013816:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8013818:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801381c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013820:	4621      	mov	r1, r4
 8013822:	47a8      	blx	r5
 8013824:	b007      	add	sp, #28
 8013826:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801382a:	f010 0f02 	tst.w	r0, #2
 801382e:	e7e7      	b.n	8013800 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 8013830:	6830      	ldr	r0, [r6, #0]
 8013832:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8013836:	6803      	ldr	r3, [r0, #0]
 8013838:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801383c:	6a1b      	ldr	r3, [r3, #32]
 801383e:	4798      	blx	r3
 8013840:	495c      	ldr	r1, [pc, #368]	; (80139b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 8013842:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8013846:	880b      	ldrh	r3, [r1, #0]
 8013848:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801384c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013850:	fb03 c202 	mla	r2, r3, r2, ip
 8013854:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013858:	468e      	mov	lr, r1
 801385a:	fb07 f203 	mul.w	r2, r7, r3
 801385e:	d053      	beq.n	8013908 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8013860:	fa1f f388 	uxth.w	r3, r8
 8013864:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 8013868:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 801386c:	ea4f 2814 	mov.w	r8, r4, lsr #8
 8013870:	00e4      	lsls	r4, r4, #3
 8013872:	b2e4      	uxtb	r4, r4
 8013874:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8013878:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801387c:	fb08 f803 	mul.w	r8, r8, r3
 8013880:	fb09 f903 	mul.w	r9, r9, r3
 8013884:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 8013888:	4363      	muls	r3, r4
 801388a:	006d      	lsls	r5, r5, #1
 801388c:	b2bc      	uxth	r4, r7
 801388e:	4288      	cmp	r0, r1
 8013890:	f080 8088 	bcs.w	80139a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8013894:	eb00 0a05 	add.w	sl, r0, r5
 8013898:	4550      	cmp	r0, sl
 801389a:	d22f      	bcs.n	80138fc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 801389c:	8802      	ldrh	r2, [r0, #0]
 801389e:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80138a2:	10d7      	asrs	r7, r2, #3
 80138a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80138a8:	00d2      	lsls	r2, r2, #3
 80138aa:	fb1c fc04 	smulbb	ip, ip, r4
 80138ae:	b2d2      	uxtb	r2, r2
 80138b0:	44c4      	add	ip, r8
 80138b2:	fb12 f204 	smulbb	r2, r2, r4
 80138b6:	fa1f fc8c 	uxth.w	ip, ip
 80138ba:	441a      	add	r2, r3
 80138bc:	b292      	uxth	r2, r2
 80138be:	f10c 0b01 	add.w	fp, ip, #1
 80138c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80138c6:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80138ca:	fb17 f704 	smulbb	r7, r7, r4
 80138ce:	f102 0b01 	add.w	fp, r2, #1
 80138d2:	444f      	add	r7, r9
 80138d4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80138d8:	b2bf      	uxth	r7, r7
 80138da:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80138de:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80138e2:	ea4c 0202 	orr.w	r2, ip, r2
 80138e6:	f107 0c01 	add.w	ip, r7, #1
 80138ea:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 80138ee:	097f      	lsrs	r7, r7, #5
 80138f0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80138f4:	433a      	orrs	r2, r7
 80138f6:	f820 2b02 	strh.w	r2, [r0], #2
 80138fa:	e7cd      	b.n	8013898 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 80138fc:	f8be 2000 	ldrh.w	r2, [lr]
 8013900:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8013904:	4410      	add	r0, r2
 8013906:	e7c2      	b.n	801388e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 8013908:	07db      	lsls	r3, r3, #31
 801390a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801390e:	d50e      	bpl.n	801392e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 8013910:	006d      	lsls	r5, r5, #1
 8013912:	4290      	cmp	r0, r2
 8013914:	d246      	bcs.n	80139a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8013916:	1943      	adds	r3, r0, r5
 8013918:	4298      	cmp	r0, r3
 801391a:	d202      	bcs.n	8013922 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 801391c:	f820 4b02 	strh.w	r4, [r0], #2
 8013920:	e7fa      	b.n	8013918 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 8013922:	f8be 3000 	ldrh.w	r3, [lr]
 8013926:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 801392a:	4418      	add	r0, r3
 801392c:	e7f1      	b.n	8013912 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 801392e:	0787      	lsls	r7, r0, #30
 8013930:	462b      	mov	r3, r5
 8013932:	d00a      	beq.n	801394a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8013934:	4603      	mov	r3, r0
 8013936:	4293      	cmp	r3, r2
 8013938:	d205      	bcs.n	8013946 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 801393a:	801c      	strh	r4, [r3, #0]
 801393c:	f8be 1000 	ldrh.w	r1, [lr]
 8013940:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013944:	e7f7      	b.n	8013936 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 8013946:	3002      	adds	r0, #2
 8013948:	1e6b      	subs	r3, r5, #1
 801394a:	07dd      	lsls	r5, r3, #31
 801394c:	d50d      	bpl.n	801396a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 801394e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8013952:	3901      	subs	r1, #1
 8013954:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013958:	4291      	cmp	r1, r2
 801395a:	d205      	bcs.n	8013968 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 801395c:	800c      	strh	r4, [r1, #0]
 801395e:	f8be 5000 	ldrh.w	r5, [lr]
 8013962:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 8013966:	e7f7      	b.n	8013958 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 8013968:	3b01      	subs	r3, #1
 801396a:	b1db      	cbz	r3, 80139a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 801396c:	b2a1      	uxth	r1, r4
 801396e:	105b      	asrs	r3, r3, #1
 8013970:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8013974:	009b      	lsls	r3, r3, #2
 8013976:	4290      	cmp	r0, r2
 8013978:	d214      	bcs.n	80139a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 801397a:	0781      	lsls	r1, r0, #30
 801397c:	d006      	beq.n	801398c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 801397e:	4b0e      	ldr	r3, [pc, #56]	; (80139b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 8013980:	4a0e      	ldr	r2, [pc, #56]	; (80139bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 8013982:	480f      	ldr	r0, [pc, #60]	; (80139c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 8013984:	f44f 7162 	mov.w	r1, #904	; 0x388
 8013988:	f00a fb2e 	bl	801dfe8 <__assert_func>
 801398c:	18c5      	adds	r5, r0, r3
 801398e:	4601      	mov	r1, r0
 8013990:	42a9      	cmp	r1, r5
 8013992:	d202      	bcs.n	801399a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 8013994:	f841 4b04 	str.w	r4, [r1], #4
 8013998:	e7fa      	b.n	8013990 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 801399a:	f8be 1000 	ldrh.w	r1, [lr]
 801399e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80139a2:	e7e8      	b.n	8013976 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 80139a4:	6830      	ldr	r0, [r6, #0]
 80139a6:	6803      	ldr	r3, [r0, #0]
 80139a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80139aa:	4798      	blx	r3
 80139ac:	e73a      	b.n	8013824 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80139ae:	bf00      	nop
 80139b0:	2000d358 	.word	0x2000d358
 80139b4:	2000d352 	.word	0x2000d352
 80139b8:	08022595 	.word	0x08022595
 80139bc:	08022d48 	.word	0x08022d48
 80139c0:	080225c4 	.word	0x080225c4

080139c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80139c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139c8:	4f97      	ldr	r7, [pc, #604]	; (8013c28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80139ca:	4616      	mov	r6, r2
 80139cc:	683a      	ldr	r2, [r7, #0]
 80139ce:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80139d2:	2a02      	cmp	r2, #2
 80139d4:	b08f      	sub	sp, #60	; 0x3c
 80139d6:	4604      	mov	r4, r0
 80139d8:	4689      	mov	r9, r1
 80139da:	d106      	bne.n	80139ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80139dc:	4b93      	ldr	r3, [pc, #588]	; (8013c2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 80139de:	4a94      	ldr	r2, [pc, #592]	; (8013c30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80139e0:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 80139e4:	4893      	ldr	r0, [pc, #588]	; (8013c34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 80139e6:	f00a faff 	bl	801dfe8 <__assert_func>
 80139ea:	ad0e      	add	r5, sp, #56	; 0x38
 80139ec:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80139f0:	4628      	mov	r0, r5
 80139f2:	f7fd fa45 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80139f6:	6823      	ldr	r3, [r4, #0]
 80139f8:	4680      	mov	r8, r0
 80139fa:	6a1b      	ldr	r3, [r3, #32]
 80139fc:	4620      	mov	r0, r4
 80139fe:	4798      	blx	r3
 8013a00:	4580      	cmp	r8, r0
 8013a02:	d004      	beq.n	8013a0e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8013a04:	4b8c      	ldr	r3, [pc, #560]	; (8013c38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8013a06:	4a8a      	ldr	r2, [pc, #552]	; (8013c30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013a08:	f240 21ca 	movw	r1, #714	; 0x2ca
 8013a0c:	e7ea      	b.n	80139e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013a0e:	4628      	mov	r0, r5
 8013a10:	f7fd f9ac 	bl	8010d6c <_ZNK8touchgfx6Bitmap7getDataEv>
 8013a14:	4680      	mov	r8, r0
 8013a16:	b920      	cbnz	r0, 8013a22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8013a18:	4b88      	ldr	r3, [pc, #544]	; (8013c3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8013a1a:	4a85      	ldr	r2, [pc, #532]	; (8013c30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013a1c:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 8013a20:	e7e0      	b.n	80139e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013a22:	6830      	ldr	r0, [r6, #0]
 8013a24:	6871      	ldr	r1, [r6, #4]
 8013a26:	f9b6 a000 	ldrsh.w	sl, [r6]
 8013a2a:	ab06      	add	r3, sp, #24
 8013a2c:	c303      	stmia	r3!, {r0, r1}
 8013a2e:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8013a32:	f8d9 0000 	ldr.w	r0, [r9]
 8013a36:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8013a3a:	ab08      	add	r3, sp, #32
 8013a3c:	c303      	stmia	r3!, {r0, r1}
 8013a3e:	4628      	mov	r0, r5
 8013a40:	f7fd f88c 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a44:	4606      	mov	r6, r0
 8013a46:	4628      	mov	r0, r5
 8013a48:	f7fd f8c2 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a4c:	f10d 0b20 	add.w	fp, sp, #32
 8013a50:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8013a54:	a806      	add	r0, sp, #24
 8013a56:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8013a5a:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8013a5e:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8013a62:	f7fa f8ff 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013a66:	4658      	mov	r0, fp
 8013a68:	f7fa f8fc 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013a6c:	a80a      	add	r0, sp, #40	; 0x28
 8013a6e:	f7fa f8f9 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013a72:	4d73      	ldr	r5, [pc, #460]	; (8013c40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8013a74:	4b73      	ldr	r3, [pc, #460]	; (8013c44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8013a76:	f9b5 2000 	ldrsh.w	r2, [r5]
 8013a7a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013a7e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013a82:	2100      	movs	r1, #0
 8013a84:	910c      	str	r1, [sp, #48]	; 0x30
 8013a86:	4658      	mov	r0, fp
 8013a88:	a90c      	add	r1, sp, #48	; 0x30
 8013a8a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013a8e:	f7f6 f8a3 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 8013a92:	4658      	mov	r0, fp
 8013a94:	f7f6 f8e3 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8013a98:	2800      	cmp	r0, #0
 8013a9a:	f040 8099 	bne.w	8013bd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013a9e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8013aa2:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8013aa6:	4288      	cmp	r0, r1
 8013aa8:	db37      	blt.n	8013b1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013aaa:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8013aae:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013ab2:	429a      	cmp	r2, r3
 8013ab4:	db31      	blt.n	8013b1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013ab6:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8013aba:	4430      	add	r0, r6
 8013abc:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013ac0:	4431      	add	r1, r6
 8013ac2:	b200      	sxth	r0, r0
 8013ac4:	b209      	sxth	r1, r1
 8013ac6:	4288      	cmp	r0, r1
 8013ac8:	dc27      	bgt.n	8013b1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013aca:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8013ace:	440a      	add	r2, r1
 8013ad0:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8013ad4:	440b      	add	r3, r1
 8013ad6:	b212      	sxth	r2, r2
 8013ad8:	b21b      	sxth	r3, r3
 8013ada:	429a      	cmp	r2, r3
 8013adc:	dc1d      	bgt.n	8013b1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8013ade:	6823      	ldr	r3, [r4, #0]
 8013ae0:	4620      	mov	r0, r4
 8013ae2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013ae4:	4798      	blx	r3
 8013ae6:	4682      	mov	sl, r0
 8013ae8:	6838      	ldr	r0, [r7, #0]
 8013aea:	6803      	ldr	r3, [r0, #0]
 8013aec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013aee:	4798      	blx	r3
 8013af0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8013af4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013af8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8013afc:	1a5b      	subs	r3, r3, r1
 8013afe:	b29b      	uxth	r3, r3
 8013b00:	b21c      	sxth	r4, r3
 8013b02:	2c00      	cmp	r4, #0
 8013b04:	dc0e      	bgt.n	8013b24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 8013b06:	bf1f      	itttt	ne
 8013b08:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8013b0c:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8013b10:	185b      	addne	r3, r3, r1
 8013b12:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8013b16:	4644      	mov	r4, r8
 8013b18:	e009      	b.n	8013b2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8013b1a:	4b4b      	ldr	r3, [pc, #300]	; (8013c48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8013b1c:	4a44      	ldr	r2, [pc, #272]	; (8013c30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8013b1e:	f240 21da 	movw	r1, #730	; 0x2da
 8013b22:	e75f      	b.n	80139e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8013b24:	1ad3      	subs	r3, r2, r3
 8013b26:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8013b2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8013b2e:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8013b32:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8013b36:	1b9b      	subs	r3, r3, r6
 8013b38:	b29b      	uxth	r3, r3
 8013b3a:	b219      	sxth	r1, r3
 8013b3c:	2900      	cmp	r1, #0
 8013b3e:	dd4b      	ble.n	8013bd8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8013b40:	4351      	muls	r1, r2
 8013b42:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8013b46:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8013b4a:	1acb      	subs	r3, r1, r3
 8013b4c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013b50:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8013b54:	2e00      	cmp	r6, #0
 8013b56:	dd3b      	ble.n	8013bd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013b58:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8013b5c:	2b00      	cmp	r3, #0
 8013b5e:	dd37      	ble.n	8013bd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013b60:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8013b64:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013b68:	fb0a f90c 	mul.w	r9, sl, ip
 8013b6c:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8013b70:	4481      	add	r9, r0
 8013b72:	8828      	ldrh	r0, [r5, #0]
 8013b74:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8013b78:	42ae      	cmp	r6, r5
 8013b7a:	bfa8      	it	ge
 8013b7c:	462e      	movge	r6, r5
 8013b7e:	1a41      	subs	r1, r0, r1
 8013b80:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8013b84:	428e      	cmp	r6, r1
 8013b86:	bfa8      	it	ge
 8013b88:	460e      	movge	r6, r1
 8013b8a:	429d      	cmp	r5, r3
 8013b8c:	bfa8      	it	ge
 8013b8e:	461d      	movge	r5, r3
 8013b90:	4b2c      	ldr	r3, [pc, #176]	; (8013c44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8013b92:	881b      	ldrh	r3, [r3, #0]
 8013b94:	eba3 030c 	sub.w	r3, r3, ip
 8013b98:	429d      	cmp	r5, r3
 8013b9a:	bfa8      	it	ge
 8013b9c:	461d      	movge	r5, r3
 8013b9e:	42b0      	cmp	r0, r6
 8013ba0:	d12c      	bne.n	8013bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8013ba2:	4290      	cmp	r0, r2
 8013ba4:	d12a      	bne.n	8013bfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8013ba6:	6838      	ldr	r0, [r7, #0]
 8013ba8:	9203      	str	r2, [sp, #12]
 8013baa:	6803      	ldr	r3, [r0, #0]
 8013bac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013bae:	4798      	blx	r3
 8013bb0:	07c3      	lsls	r3, r0, #31
 8013bb2:	d51a      	bpl.n	8013bea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8013bb4:	9a03      	ldr	r2, [sp, #12]
 8013bb6:	6838      	ldr	r0, [r7, #0]
 8013bb8:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8013bbc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8013bc0:	6803      	ldr	r3, [r0, #0]
 8013bc2:	9200      	str	r2, [sp, #0]
 8013bc4:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8013bc6:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8013bca:	4623      	mov	r3, r4
 8013bcc:	47a8      	blx	r5
 8013bce:	4680      	mov	r8, r0
 8013bd0:	4640      	mov	r0, r8
 8013bd2:	b00f      	add	sp, #60	; 0x3c
 8013bd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bd8:	bf1f      	itttt	ne
 8013bda:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8013bde:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8013be2:	185b      	addne	r3, r3, r1
 8013be4:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8013be8:	e7b2      	b.n	8013b50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 8013bea:	6838      	ldr	r0, [r7, #0]
 8013bec:	6803      	ldr	r3, [r0, #0]
 8013bee:	464a      	mov	r2, r9
 8013bf0:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8013bf2:	4621      	mov	r1, r4
 8013bf4:	fb05 f30a 	mul.w	r3, r5, sl
 8013bf8:	47b0      	blx	r6
 8013bfa:	e7e9      	b.n	8013bd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013bfc:	4355      	muls	r5, r2
 8013bfe:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8013c02:	9303      	str	r3, [sp, #12]
 8013c04:	0076      	lsls	r6, r6, #1
 8013c06:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8013c0a:	9b03      	ldr	r3, [sp, #12]
 8013c0c:	429c      	cmp	r4, r3
 8013c0e:	d2df      	bcs.n	8013bd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8013c10:	6838      	ldr	r0, [r7, #0]
 8013c12:	6803      	ldr	r3, [r0, #0]
 8013c14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c16:	464a      	mov	r2, r9
 8013c18:	461d      	mov	r5, r3
 8013c1a:	4621      	mov	r1, r4
 8013c1c:	4633      	mov	r3, r6
 8013c1e:	47a8      	blx	r5
 8013c20:	44d1      	add	r9, sl
 8013c22:	445c      	add	r4, fp
 8013c24:	e7f1      	b.n	8013c0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8013c26:	bf00      	nop
 8013c28:	2000d358 	.word	0x2000d358
 8013c2c:	080223bb 	.word	0x080223bb
 8013c30:	08022c2b 	.word	0x08022c2b
 8013c34:	080225c4 	.word	0x080225c4
 8013c38:	0802246d 	.word	0x0802246d
 8013c3c:	080224c2 	.word	0x080224c2
 8013c40:	2000d352 	.word	0x2000d352
 8013c44:	2000d354 	.word	0x2000d354
 8013c48:	08022500 	.word	0x08022500

08013c4c <_ZN8touchgfx8LCD16bppC1Ev>:
 8013c4c:	2200      	movs	r2, #0
 8013c4e:	4910      	ldr	r1, [pc, #64]	; (8013c90 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8013c50:	6042      	str	r2, [r0, #4]
 8013c52:	6001      	str	r1, [r0, #0]
 8013c54:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8013c58:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8013c5c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8013c60:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8013c64:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8013c68:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8013c6c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8013c70:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8013c74:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8013c78:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8013c7c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8013c80:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8013c84:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8013c88:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8013c8c:	4770      	bx	lr
 8013c8e:	bf00      	nop
 8013c90:	080228a4 	.word	0x080228a4

08013c94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8013c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c98:	460d      	mov	r5, r1
 8013c9a:	b08b      	sub	sp, #44	; 0x2c
 8013c9c:	4604      	mov	r4, r0
 8013c9e:	6808      	ldr	r0, [r1, #0]
 8013ca0:	6849      	ldr	r1, [r1, #4]
 8013ca2:	4699      	mov	r9, r3
 8013ca4:	ab06      	add	r3, sp, #24
 8013ca6:	c303      	stmia	r3!, {r0, r1}
 8013ca8:	6810      	ldr	r0, [r2, #0]
 8013caa:	6851      	ldr	r1, [r2, #4]
 8013cac:	ab08      	add	r3, sp, #32
 8013cae:	c303      	stmia	r3!, {r0, r1}
 8013cb0:	a806      	add	r0, sp, #24
 8013cb2:	f7f9 ffd7 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013cb6:	4629      	mov	r1, r5
 8013cb8:	a808      	add	r0, sp, #32
 8013cba:	f7f9 ffbb 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013cbe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013cc2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013cc6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8013cca:	4d5f      	ldr	r5, [pc, #380]	; (8013e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8013ccc:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8013cd0:	6828      	ldr	r0, [r5, #0]
 8013cd2:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 8013cd6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013cda:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8013cde:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8013ce2:	440a      	add	r2, r1
 8013ce4:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013ce8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013cec:	4413      	add	r3, r2
 8013cee:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013cf2:	6803      	ldr	r3, [r0, #0]
 8013cf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013cf6:	4798      	blx	r3
 8013cf8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013cfc:	d118      	bne.n	8013d30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8013cfe:	f010 0f20 	tst.w	r0, #32
 8013d02:	6828      	ldr	r0, [r5, #0]
 8013d04:	d017      	beq.n	8013d36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8013d06:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8013d0a:	6801      	ldr	r1, [r0, #0]
 8013d0c:	9502      	str	r5, [sp, #8]
 8013d0e:	b2b6      	uxth	r6, r6
 8013d10:	fa1f f588 	uxth.w	r5, r8
 8013d14:	f8cd 900c 	str.w	r9, [sp, #12]
 8013d18:	9601      	str	r6, [sp, #4]
 8013d1a:	9500      	str	r5, [sp, #0]
 8013d1c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8013d1e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8013d22:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8013d26:	4621      	mov	r1, r4
 8013d28:	47a8      	blx	r5
 8013d2a:	b00b      	add	sp, #44	; 0x2c
 8013d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d30:	f010 0f40 	tst.w	r0, #64	; 0x40
 8013d34:	e7e5      	b.n	8013d02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8013d36:	6803      	ldr	r3, [r0, #0]
 8013d38:	6a1b      	ldr	r3, [r3, #32]
 8013d3a:	4798      	blx	r3
 8013d3c:	4a43      	ldr	r2, [pc, #268]	; (8013e4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8013d3e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013d42:	f8b2 e000 	ldrh.w	lr, [r2]
 8013d46:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013d4a:	fb0e 1303 	mla	r3, lr, r3, r1
 8013d4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013d52:	fb0e fe06 	mul.w	lr, lr, r6
 8013d56:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8013d5a:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8013d5e:	9305      	str	r3, [sp, #20]
 8013d60:	4692      	mov	sl, r2
 8013d62:	4570      	cmp	r0, lr
 8013d64:	d26a      	bcs.n	8013e3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 8013d66:	9b05      	ldr	r3, [sp, #20]
 8013d68:	4621      	mov	r1, r4
 8013d6a:	eb00 0b03 	add.w	fp, r0, r3
 8013d6e:	4558      	cmp	r0, fp
 8013d70:	d257      	bcs.n	8013e22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 8013d72:	f851 4b04 	ldr.w	r4, [r1], #4
 8013d76:	0e22      	lsrs	r2, r4, #24
 8013d78:	d012      	beq.n	8013da0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8013d7a:	2aff      	cmp	r2, #255	; 0xff
 8013d7c:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8013d80:	d110      	bne.n	8013da4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8013d82:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013d86:	d10d      	bne.n	8013da4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8013d88:	0963      	lsrs	r3, r4, #5
 8013d8a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8013d8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013d92:	f027 0707 	bic.w	r7, r7, #7
 8013d96:	431f      	orrs	r7, r3
 8013d98:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8013d9c:	433c      	orrs	r4, r7
 8013d9e:	8004      	strh	r4, [r0, #0]
 8013da0:	3002      	adds	r0, #2
 8013da2:	e7e4      	b.n	8013d6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8013da4:	fb09 f302 	mul.w	r3, r9, r2
 8013da8:	1c5a      	adds	r2, r3, #1
 8013daa:	f8b0 c000 	ldrh.w	ip, [r0]
 8013dae:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8013db2:	1212      	asrs	r2, r2, #8
 8013db4:	b293      	uxth	r3, r2
 8013db6:	ea4f 262c 	mov.w	r6, ip, asr #8
 8013dba:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8013dbe:	43d2      	mvns	r2, r2
 8013dc0:	b2d2      	uxtb	r2, r2
 8013dc2:	fb15 f503 	smulbb	r5, r5, r3
 8013dc6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013dca:	fb06 5602 	mla	r6, r6, r2, r5
 8013dce:	b2ff      	uxtb	r7, r7
 8013dd0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013dd4:	b2e4      	uxtb	r4, r4
 8013dd6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013dda:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013dde:	fb17 f703 	smulbb	r7, r7, r3
 8013de2:	fa5f fc8c 	uxtb.w	ip, ip
 8013de6:	fb14 f403 	smulbb	r4, r4, r3
 8013dea:	fb05 7702 	mla	r7, r5, r2, r7
 8013dee:	fb0c 4202 	mla	r2, ip, r2, r4
 8013df2:	b2b6      	uxth	r6, r6
 8013df4:	b2bf      	uxth	r7, r7
 8013df6:	b292      	uxth	r2, r2
 8013df8:	1c73      	adds	r3, r6, #1
 8013dfa:	f102 0c01 	add.w	ip, r2, #1
 8013dfe:	1c7d      	adds	r5, r7, #1
 8013e00:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8013e04:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013e08:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8013e0c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013e10:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013e14:	097f      	lsrs	r7, r7, #5
 8013e16:	4316      	orrs	r6, r2
 8013e18:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8013e1c:	433e      	orrs	r6, r7
 8013e1e:	8006      	strh	r6, [r0, #0]
 8013e20:	e7be      	b.n	8013da0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8013e22:	f8ba 3000 	ldrh.w	r3, [sl]
 8013e26:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8013e2a:	eba3 0308 	sub.w	r3, r3, r8
 8013e2e:	eba4 0408 	sub.w	r4, r4, r8
 8013e32:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013e36:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8013e3a:	e792      	b.n	8013d62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8013e3c:	4b02      	ldr	r3, [pc, #8]	; (8013e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8013e3e:	6818      	ldr	r0, [r3, #0]
 8013e40:	6803      	ldr	r3, [r0, #0]
 8013e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013e44:	4798      	blx	r3
 8013e46:	e770      	b.n	8013d2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8013e48:	2000d358 	.word	0x2000d358
 8013e4c:	2000d352 	.word	0x2000d352

08013e50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013e50:	b570      	push	{r4, r5, r6, lr}
 8013e52:	9d04      	ldr	r5, [sp, #16]
 8013e54:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8013e58:	460c      	mov	r4, r1
 8013e5a:	4619      	mov	r1, r3
 8013e5c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013e60:	2a0d      	cmp	r2, #13
 8013e62:	d820      	bhi.n	8013ea6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8013e64:	e8df f002 	tbb	[pc, r2]
 8013e68:	18121807 	.word	0x18121807
 8013e6c:	18181818 	.word	0x18181818
 8013e70:	18181818 	.word	0x18181818
 8013e74:	1818      	.short	0x1818
 8013e76:	6802      	ldr	r2, [r0, #0]
 8013e78:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8013e7c:	68d6      	ldr	r6, [r2, #12]
 8013e7e:	462b      	mov	r3, r5
 8013e80:	460a      	mov	r2, r1
 8013e82:	46b4      	mov	ip, r6
 8013e84:	4621      	mov	r1, r4
 8013e86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013e8a:	4760      	bx	ip
 8013e8c:	462a      	mov	r2, r5
 8013e8e:	4620      	mov	r0, r4
 8013e90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013e94:	f7ff befe 	b.w	8013c94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013e98:	4b03      	ldr	r3, [pc, #12]	; (8013ea8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8013e9a:	4a04      	ldr	r2, [pc, #16]	; (8013eac <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8013e9c:	4804      	ldr	r0, [pc, #16]	; (8013eb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8013e9e:	f240 21c1 	movw	r1, #705	; 0x2c1
 8013ea2:	f00a f8a1 	bl	801dfe8 <__assert_func>
 8013ea6:	bd70      	pop	{r4, r5, r6, pc}
 8013ea8:	08022560 	.word	0x08022560
 8013eac:	08022cb1 	.word	0x08022cb1
 8013eb0:	080225c4 	.word	0x080225c4

08013eb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8013eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013eb8:	b093      	sub	sp, #76	; 0x4c
 8013eba:	880f      	ldrh	r7, [r1, #0]
 8013ebc:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8013ec0:	4604      	mov	r4, r0
 8013ec2:	4688      	mov	r8, r1
 8013ec4:	4616      	mov	r6, r2
 8013ec6:	b12f      	cbz	r7, 8013ed4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8013ec8:	4b6f      	ldr	r3, [pc, #444]	; (8014088 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8013eca:	4a70      	ldr	r2, [pc, #448]	; (801408c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8013ecc:	4870      	ldr	r0, [pc, #448]	; (8014090 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8013ece:	21e2      	movs	r1, #226	; 0xe2
 8013ed0:	f00a f88a 	bl	801dfe8 <__assert_func>
 8013ed4:	6810      	ldr	r0, [r2, #0]
 8013ed6:	6851      	ldr	r1, [r2, #4]
 8013ed8:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8014098 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 8013edc:	ad0e      	add	r5, sp, #56	; 0x38
 8013ede:	c503      	stmia	r5!, {r0, r1}
 8013ee0:	6818      	ldr	r0, [r3, #0]
 8013ee2:	6859      	ldr	r1, [r3, #4]
 8013ee4:	ad10      	add	r5, sp, #64	; 0x40
 8013ee6:	c503      	stmia	r5!, {r0, r1}
 8013ee8:	a80e      	add	r0, sp, #56	; 0x38
 8013eea:	f7f9 febb 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013eee:	4631      	mov	r1, r6
 8013ef0:	a810      	add	r0, sp, #64	; 0x40
 8013ef2:	f7f9 fe9f 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013ef6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8013efa:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013efe:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8013f02:	f8db 0000 	ldr.w	r0, [fp]
 8013f06:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 8013f0a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8013f0e:	4e61      	ldr	r6, [pc, #388]	; (8014094 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8013f10:	fb11 2103 	smlabb	r1, r1, r3, r2
 8013f14:	440c      	add	r4, r1
 8013f16:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8013f1a:	440a      	add	r2, r1
 8013f1c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013f20:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013f24:	4413      	add	r3, r2
 8013f26:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8013f2a:	6803      	ldr	r3, [r0, #0]
 8013f2c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013f30:	4798      	blx	r3
 8013f32:	2801      	cmp	r0, #1
 8013f34:	d11d      	bne.n	8013f72 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8013f36:	220b      	movs	r2, #11
 8013f38:	9708      	str	r7, [sp, #32]
 8013f3a:	9207      	str	r2, [sp, #28]
 8013f3c:	8832      	ldrh	r2, [r6, #0]
 8013f3e:	f8cd a010 	str.w	sl, [sp, #16]
 8013f42:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8013f46:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8013f4a:	9203      	str	r2, [sp, #12]
 8013f4c:	fa1f f289 	uxth.w	r2, r9
 8013f50:	9201      	str	r2, [sp, #4]
 8013f52:	b2ad      	uxth	r5, r5
 8013f54:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013f58:	9200      	str	r2, [sp, #0]
 8013f5a:	9502      	str	r5, [sp, #8]
 8013f5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013f60:	f8db 0000 	ldr.w	r0, [fp]
 8013f64:	4642      	mov	r2, r8
 8013f66:	4621      	mov	r1, r4
 8013f68:	f7f6 fa8a 	bl	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8013f6c:	b013      	add	sp, #76	; 0x4c
 8013f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f72:	f8db 0000 	ldr.w	r0, [fp]
 8013f76:	6803      	ldr	r3, [r0, #0]
 8013f78:	6a1b      	ldr	r3, [r3, #32]
 8013f7a:	4798      	blx	r3
 8013f7c:	8832      	ldrh	r2, [r6, #0]
 8013f7e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8013f82:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8013f86:	960d      	str	r6, [sp, #52]	; 0x34
 8013f88:	fb02 1303 	mla	r3, r2, r3, r1
 8013f8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013f90:	4355      	muls	r5, r2
 8013f92:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 8013f96:	930c      	str	r3, [sp, #48]	; 0x30
 8013f98:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8013f9c:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f9e:	f04f 0e04 	mov.w	lr, #4
 8013fa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013fa4:	4298      	cmp	r0, r3
 8013fa6:	d269      	bcs.n	801407c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8013fa8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013faa:	4621      	mov	r1, r4
 8013fac:	eb00 0b03 	add.w	fp, r0, r3
 8013fb0:	4558      	cmp	r0, fp
 8013fb2:	460b      	mov	r3, r1
 8013fb4:	d256      	bcs.n	8014064 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 8013fb6:	781b      	ldrb	r3, [r3, #0]
 8013fb8:	fb1e e303 	smlabb	r3, lr, r3, lr
 8013fbc:	3101      	adds	r1, #1
 8013fbe:	f858 2003 	ldr.w	r2, [r8, r3]
 8013fc2:	0e14      	lsrs	r4, r2, #24
 8013fc4:	d012      	beq.n	8013fec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8013fc6:	2cff      	cmp	r4, #255	; 0xff
 8013fc8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8013fcc:	d110      	bne.n	8013ff0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8013fce:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013fd2:	d10d      	bne.n	8013ff0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8013fd4:	0953      	lsrs	r3, r2, #5
 8013fd6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013fda:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013fde:	f026 0607 	bic.w	r6, r6, #7
 8013fe2:	431e      	orrs	r6, r3
 8013fe4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8013fe8:	4332      	orrs	r2, r6
 8013fea:	8002      	strh	r2, [r0, #0]
 8013fec:	3002      	adds	r0, #2
 8013fee:	e7df      	b.n	8013fb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 8013ff0:	fb0a f404 	mul.w	r4, sl, r4
 8013ff4:	1c63      	adds	r3, r4, #1
 8013ff6:	8807      	ldrh	r7, [r0, #0]
 8013ff8:	eb03 2324 	add.w	r3, r3, r4, asr #8
 8013ffc:	121b      	asrs	r3, r3, #8
 8013ffe:	fa1f fc83 	uxth.w	ip, r3
 8014002:	123d      	asrs	r5, r7, #8
 8014004:	f3c2 4407 	ubfx	r4, r2, #16, #8
 8014008:	43db      	mvns	r3, r3
 801400a:	b2db      	uxtb	r3, r3
 801400c:	fb14 f40c 	smulbb	r4, r4, ip
 8014010:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014014:	fb05 4503 	mla	r5, r5, r3, r4
 8014018:	b2d2      	uxtb	r2, r2
 801401a:	10fc      	asrs	r4, r7, #3
 801401c:	00ff      	lsls	r7, r7, #3
 801401e:	b2ff      	uxtb	r7, r7
 8014020:	fb12 f20c 	smulbb	r2, r2, ip
 8014024:	fb07 2203 	mla	r2, r7, r3, r2
 8014028:	b2f6      	uxtb	r6, r6
 801402a:	b2ad      	uxth	r5, r5
 801402c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8014030:	b292      	uxth	r2, r2
 8014032:	fb16 f60c 	smulbb	r6, r6, ip
 8014036:	fb04 6603 	mla	r6, r4, r3, r6
 801403a:	1c6b      	adds	r3, r5, #1
 801403c:	1c54      	adds	r4, r2, #1
 801403e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8014042:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8014046:	b2b6      	uxth	r6, r6
 8014048:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801404c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8014050:	4325      	orrs	r5, r4
 8014052:	1c74      	adds	r4, r6, #1
 8014054:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8014058:	0976      	lsrs	r6, r6, #5
 801405a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801405e:	4335      	orrs	r5, r6
 8014060:	8005      	strh	r5, [r0, #0]
 8014062:	e7c3      	b.n	8013fec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8014064:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014066:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 801406a:	881b      	ldrh	r3, [r3, #0]
 801406c:	eba4 0409 	sub.w	r4, r4, r9
 8014070:	eba3 0309 	sub.w	r3, r3, r9
 8014074:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014078:	440c      	add	r4, r1
 801407a:	e792      	b.n	8013fa2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801407c:	4b06      	ldr	r3, [pc, #24]	; (8014098 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801407e:	6818      	ldr	r0, [r3, #0]
 8014080:	6803      	ldr	r3, [r0, #0]
 8014082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014084:	4798      	blx	r3
 8014086:	e771      	b.n	8013f6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014088:	0802236b 	.word	0x0802236b
 801408c:	08022a82 	.word	0x08022a82
 8014090:	080225c4 	.word	0x080225c4
 8014094:	2000d352 	.word	0x2000d352
 8014098:	2000d358 	.word	0x2000d358

0801409c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801409c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140a0:	4614      	mov	r4, r2
 80140a2:	880a      	ldrh	r2, [r1, #0]
 80140a4:	b091      	sub	sp, #68	; 0x44
 80140a6:	2a02      	cmp	r2, #2
 80140a8:	4607      	mov	r7, r0
 80140aa:	4689      	mov	r9, r1
 80140ac:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 80140b0:	d006      	beq.n	80140c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 80140b2:	4b77      	ldr	r3, [pc, #476]	; (8014290 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 80140b4:	4a77      	ldr	r2, [pc, #476]	; (8014294 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 80140b6:	4878      	ldr	r0, [pc, #480]	; (8014298 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 80140b8:	f240 113b 	movw	r1, #315	; 0x13b
 80140bc:	f009 ff94 	bl	801dfe8 <__assert_func>
 80140c0:	2e00      	cmp	r6, #0
 80140c2:	d04b      	beq.n	801415c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80140c4:	6820      	ldr	r0, [r4, #0]
 80140c6:	6861      	ldr	r1, [r4, #4]
 80140c8:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 80142a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 80140cc:	ad0c      	add	r5, sp, #48	; 0x30
 80140ce:	c503      	stmia	r5!, {r0, r1}
 80140d0:	6818      	ldr	r0, [r3, #0]
 80140d2:	6859      	ldr	r1, [r3, #4]
 80140d4:	ad0e      	add	r5, sp, #56	; 0x38
 80140d6:	c503      	stmia	r5!, {r0, r1}
 80140d8:	a80c      	add	r0, sp, #48	; 0x30
 80140da:	f7f9 fdc3 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80140de:	4621      	mov	r1, r4
 80140e0:	a80e      	add	r0, sp, #56	; 0x38
 80140e2:	f7f9 fda7 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80140e6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80140ea:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80140ee:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80140f2:	f8da 0000 	ldr.w	r0, [sl]
 80140f6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80140fa:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80140fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014102:	187c      	adds	r4, r7, r1
 8014104:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014108:	4f64      	ldr	r7, [pc, #400]	; (801429c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 801410a:	440a      	add	r2, r1
 801410c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8014110:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014114:	4413      	add	r3, r2
 8014116:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801411a:	6803      	ldr	r3, [r0, #0]
 801411c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014120:	4798      	blx	r3
 8014122:	2801      	cmp	r0, #1
 8014124:	d11d      	bne.n	8014162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8014126:	2200      	movs	r2, #0
 8014128:	210b      	movs	r1, #11
 801412a:	e9cd 1207 	strd	r1, r2, [sp, #28]
 801412e:	8839      	ldrh	r1, [r7, #0]
 8014130:	9604      	str	r6, [sp, #16]
 8014132:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014136:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801413a:	9203      	str	r2, [sp, #12]
 801413c:	fa1f f288 	uxth.w	r2, r8
 8014140:	9201      	str	r2, [sp, #4]
 8014142:	b2ad      	uxth	r5, r5
 8014144:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014148:	9200      	str	r2, [sp, #0]
 801414a:	9502      	str	r5, [sp, #8]
 801414c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014150:	f8da 0000 	ldr.w	r0, [sl]
 8014154:	464a      	mov	r2, r9
 8014156:	4621      	mov	r1, r4
 8014158:	f7f6 f992 	bl	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 801415c:	b011      	add	sp, #68	; 0x44
 801415e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014162:	f8da 0000 	ldr.w	r0, [sl]
 8014166:	6803      	ldr	r3, [r0, #0]
 8014168:	6a1b      	ldr	r3, [r3, #32]
 801416a:	4798      	blx	r3
 801416c:	8839      	ldrh	r1, [r7, #0]
 801416e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8014172:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014176:	2eff      	cmp	r6, #255	; 0xff
 8014178:	fb01 2303 	mla	r3, r1, r3, r2
 801417c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014180:	f109 0204 	add.w	r2, r9, #4
 8014184:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8014188:	fb05 f501 	mul.w	r5, r5, r1
 801418c:	d05f      	beq.n	801424e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 801418e:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8014192:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8014196:	b2b6      	uxth	r6, r6
 8014198:	fa1f f989 	uxth.w	r9, r9
 801419c:	970b      	str	r7, [sp, #44]	; 0x2c
 801419e:	42a8      	cmp	r0, r5
 80141a0:	d26f      	bcs.n	8014282 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 80141a2:	eb00 010b 	add.w	r1, r0, fp
 80141a6:	4288      	cmp	r0, r1
 80141a8:	4623      	mov	r3, r4
 80141aa:	d244      	bcs.n	8014236 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 80141ac:	781b      	ldrb	r3, [r3, #0]
 80141ae:	8807      	ldrh	r7, [r0, #0]
 80141b0:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80141b4:	ea4f 2c27 	mov.w	ip, r7, asr #8
 80141b8:	ea4f 2e23 	mov.w	lr, r3, asr #8
 80141bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80141c0:	fb1c fc09 	smulbb	ip, ip, r9
 80141c4:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 80141c8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80141cc:	00ff      	lsls	r7, r7, #3
 80141ce:	fb0e ce06 	mla	lr, lr, r6, ip
 80141d2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80141d6:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 80141da:	b2ff      	uxtb	r7, r7
 80141dc:	00db      	lsls	r3, r3, #3
 80141de:	fa1f fe8e 	uxth.w	lr, lr
 80141e2:	fb1a fa09 	smulbb	sl, sl, r9
 80141e6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80141ea:	b2db      	uxtb	r3, r3
 80141ec:	fb17 f709 	smulbb	r7, r7, r9
 80141f0:	fb0c ac06 	mla	ip, ip, r6, sl
 80141f4:	fb03 7306 	mla	r3, r3, r6, r7
 80141f8:	f10e 0a01 	add.w	sl, lr, #1
 80141fc:	b29b      	uxth	r3, r3
 80141fe:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8014202:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 8014206:	f103 0e01 	add.w	lr, r3, #1
 801420a:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 801420e:	fa1f fc8c 	uxth.w	ip, ip
 8014212:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014216:	ea4a 0e03 	orr.w	lr, sl, r3
 801421a:	f10c 0a01 	add.w	sl, ip, #1
 801421e:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8014222:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014226:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801422a:	ea4e 0e0c 	orr.w	lr, lr, ip
 801422e:	3401      	adds	r4, #1
 8014230:	f820 eb02 	strh.w	lr, [r0], #2
 8014234:	e7b7      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 8014236:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014238:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 801423c:	881b      	ldrh	r3, [r3, #0]
 801423e:	eba1 0108 	sub.w	r1, r1, r8
 8014242:	eba3 0308 	sub.w	r3, r3, r8
 8014246:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801424a:	440c      	add	r4, r1
 801424c:	e7a7      	b.n	801419e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 801424e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8014252:	42a8      	cmp	r0, r5
 8014254:	d215      	bcs.n	8014282 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8014256:	eb00 010b 	add.w	r1, r0, fp
 801425a:	4288      	cmp	r0, r1
 801425c:	d206      	bcs.n	801426c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 801425e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8014262:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8014266:	f820 3b02 	strh.w	r3, [r0], #2
 801426a:	e7f6      	b.n	801425a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 801426c:	883b      	ldrh	r3, [r7, #0]
 801426e:	eba3 0308 	sub.w	r3, r3, r8
 8014272:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014276:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801427a:	eba3 0308 	sub.w	r3, r3, r8
 801427e:	441c      	add	r4, r3
 8014280:	e7e7      	b.n	8014252 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 8014282:	4b07      	ldr	r3, [pc, #28]	; (80142a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8014284:	6818      	ldr	r0, [r3, #0]
 8014286:	6803      	ldr	r3, [r0, #0]
 8014288:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801428a:	4798      	blx	r3
 801428c:	e766      	b.n	801415c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801428e:	bf00      	nop
 8014290:	08022229 	.word	0x08022229
 8014294:	080228ec 	.word	0x080228ec
 8014298:	080225c4 	.word	0x080225c4
 801429c:	2000d352 	.word	0x2000d352
 80142a0:	2000d358 	.word	0x2000d358

080142a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80142a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142a8:	4614      	mov	r4, r2
 80142aa:	880a      	ldrh	r2, [r1, #0]
 80142ac:	b091      	sub	sp, #68	; 0x44
 80142ae:	2a01      	cmp	r2, #1
 80142b0:	4606      	mov	r6, r0
 80142b2:	4688      	mov	r8, r1
 80142b4:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 80142b8:	d006      	beq.n	80142c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 80142ba:	4b7c      	ldr	r3, [pc, #496]	; (80144ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 80142bc:	4a7c      	ldr	r2, [pc, #496]	; (80144b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 80142be:	487d      	ldr	r0, [pc, #500]	; (80144b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 80142c0:	f240 1197 	movw	r1, #407	; 0x197
 80142c4:	f009 fe90 	bl	801dfe8 <__assert_func>
 80142c8:	2f00      	cmp	r7, #0
 80142ca:	d04b      	beq.n	8014364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80142cc:	6820      	ldr	r0, [r4, #0]
 80142ce:	6861      	ldr	r1, [r4, #4]
 80142d0:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80144c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80142d4:	ad0c      	add	r5, sp, #48	; 0x30
 80142d6:	c503      	stmia	r5!, {r0, r1}
 80142d8:	6818      	ldr	r0, [r3, #0]
 80142da:	6859      	ldr	r1, [r3, #4]
 80142dc:	ad0e      	add	r5, sp, #56	; 0x38
 80142de:	c503      	stmia	r5!, {r0, r1}
 80142e0:	a80c      	add	r0, sp, #48	; 0x30
 80142e2:	f7f9 fcbf 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80142e6:	4621      	mov	r1, r4
 80142e8:	a80e      	add	r0, sp, #56	; 0x38
 80142ea:	f7f9 fca3 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80142ee:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80142f2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80142f6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80142fa:	f8da 0000 	ldr.w	r0, [sl]
 80142fe:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 8014302:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 8014306:	fb11 2103 	smlabb	r1, r1, r3, r2
 801430a:	1874      	adds	r4, r6, r1
 801430c:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014310:	4e69      	ldr	r6, [pc, #420]	; (80144b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 8014312:	440a      	add	r2, r1
 8014314:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8014318:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801431c:	4413      	add	r3, r2
 801431e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8014322:	6803      	ldr	r3, [r0, #0]
 8014324:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8014328:	4798      	blx	r3
 801432a:	2801      	cmp	r0, #1
 801432c:	d11d      	bne.n	801436a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 801432e:	220b      	movs	r2, #11
 8014330:	2100      	movs	r1, #0
 8014332:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8014336:	8832      	ldrh	r2, [r6, #0]
 8014338:	9704      	str	r7, [sp, #16]
 801433a:	e9cd 0205 	strd	r0, r2, [sp, #20]
 801433e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8014342:	9203      	str	r2, [sp, #12]
 8014344:	fa1f f289 	uxth.w	r2, r9
 8014348:	9202      	str	r2, [sp, #8]
 801434a:	b2ad      	uxth	r5, r5
 801434c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014350:	9200      	str	r2, [sp, #0]
 8014352:	9501      	str	r5, [sp, #4]
 8014354:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014358:	f8da 0000 	ldr.w	r0, [sl]
 801435c:	4642      	mov	r2, r8
 801435e:	4621      	mov	r1, r4
 8014360:	f7f6 f88e 	bl	800a480 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8014364:	b011      	add	sp, #68	; 0x44
 8014366:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801436a:	f8da 0000 	ldr.w	r0, [sl]
 801436e:	6803      	ldr	r3, [r0, #0]
 8014370:	6a1b      	ldr	r3, [r3, #32]
 8014372:	4798      	blx	r3
 8014374:	8832      	ldrh	r2, [r6, #0]
 8014376:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801437a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801437e:	2fff      	cmp	r7, #255	; 0xff
 8014380:	fb02 1303 	mla	r3, r2, r3, r1
 8014384:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014388:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 801438c:	fb09 f902 	mul.w	r9, r9, r2
 8014390:	d056      	beq.n	8014440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8014392:	ea6f 0c07 	mvn.w	ip, r7
 8014396:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 801439a:	b2bb      	uxth	r3, r7
 801439c:	fa5f fc8c 	uxtb.w	ip, ip
 80143a0:	960b      	str	r6, [sp, #44]	; 0x2c
 80143a2:	4548      	cmp	r0, r9
 80143a4:	d27b      	bcs.n	801449e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 80143a6:	eb00 0a0e 	add.w	sl, r0, lr
 80143aa:	4550      	cmp	r0, sl
 80143ac:	4622      	mov	r2, r4
 80143ae:	d23d      	bcs.n	801442c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 80143b0:	7811      	ldrb	r1, [r2, #0]
 80143b2:	2604      	movs	r6, #4
 80143b4:	2203      	movs	r2, #3
 80143b6:	fb12 6101 	smlabb	r1, r2, r1, r6
 80143ba:	eb08 0b01 	add.w	fp, r8, r1
 80143be:	8802      	ldrh	r2, [r0, #0]
 80143c0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80143c4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80143c8:	f818 1001 	ldrb.w	r1, [r8, r1]
 80143cc:	1217      	asrs	r7, r2, #8
 80143ce:	fb16 f603 	smulbb	r6, r6, r3
 80143d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80143d6:	fb07 670c 	mla	r7, r7, ip, r6
 80143da:	10d6      	asrs	r6, r2, #3
 80143dc:	00d2      	lsls	r2, r2, #3
 80143de:	b2d2      	uxtb	r2, r2
 80143e0:	fb1b fb03 	smulbb	fp, fp, r3
 80143e4:	fb12 f20c 	smulbb	r2, r2, ip
 80143e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80143ec:	b2bf      	uxth	r7, r7
 80143ee:	fb06 b60c 	mla	r6, r6, ip, fp
 80143f2:	fb01 2103 	mla	r1, r1, r3, r2
 80143f6:	b2b6      	uxth	r6, r6
 80143f8:	b289      	uxth	r1, r1
 80143fa:	1c7a      	adds	r2, r7, #1
 80143fc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014400:	f106 0b01 	add.w	fp, r6, #1
 8014404:	1c4a      	adds	r2, r1, #1
 8014406:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801440a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801440e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014412:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014416:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801441a:	4317      	orrs	r7, r2
 801441c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014420:	ea47 070b 	orr.w	r7, r7, fp
 8014424:	3401      	adds	r4, #1
 8014426:	f820 7b02 	strh.w	r7, [r0], #2
 801442a:	e7be      	b.n	80143aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 801442c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801442e:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8014432:	8812      	ldrh	r2, [r2, #0]
 8014434:	1b49      	subs	r1, r1, r5
 8014436:	1b52      	subs	r2, r2, r5
 8014438:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801443c:	440c      	add	r4, r1
 801443e:	e7b0      	b.n	80143a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 8014440:	491e      	ldr	r1, [pc, #120]	; (80144bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8014442:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8014446:	2203      	movs	r2, #3
 8014448:	2704      	movs	r7, #4
 801444a:	4548      	cmp	r0, r9
 801444c:	d227      	bcs.n	801449e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 801444e:	eb00 0c0e 	add.w	ip, r0, lr
 8014452:	4560      	cmp	r0, ip
 8014454:	4623      	mov	r3, r4
 8014456:	d219      	bcs.n	801448c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8014458:	f893 a000 	ldrb.w	sl, [r3]
 801445c:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 8014460:	eb08 0b0a 	add.w	fp, r8, sl
 8014464:	f818 a00a 	ldrb.w	sl, [r8, sl]
 8014468:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801446c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014470:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014474:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014478:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801447c:	ea43 030b 	orr.w	r3, r3, fp
 8014480:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 8014484:	3401      	adds	r4, #1
 8014486:	f820 3b02 	strh.w	r3, [r0], #2
 801448a:	e7e2      	b.n	8014452 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 801448c:	8833      	ldrh	r3, [r6, #0]
 801448e:	1b5b      	subs	r3, r3, r5
 8014490:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014494:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014498:	1b5b      	subs	r3, r3, r5
 801449a:	441c      	add	r4, r3
 801449c:	e7d5      	b.n	801444a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 801449e:	4b08      	ldr	r3, [pc, #32]	; (80144c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80144a0:	6818      	ldr	r0, [r3, #0]
 80144a2:	6803      	ldr	r3, [r0, #0]
 80144a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80144a6:	4798      	blx	r3
 80144a8:	e75c      	b.n	8014364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80144aa:	bf00      	nop
 80144ac:	08022277 	.word	0x08022277
 80144b0:	08022975 	.word	0x08022975
 80144b4:	080225c4 	.word	0x080225c4
 80144b8:	2000d352 	.word	0x2000d352
 80144bc:	fffff800 	.word	0xfffff800
 80144c0:	2000d358 	.word	0x2000d358

080144c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80144c4:	b430      	push	{r4, r5}
 80144c6:	780d      	ldrb	r5, [r1, #0]
 80144c8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80144cc:	2d01      	cmp	r5, #1
 80144ce:	d00a      	beq.n	80144e6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80144d0:	d305      	bcc.n	80144de <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80144d2:	2d02      	cmp	r5, #2
 80144d4:	d10b      	bne.n	80144ee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80144d6:	9402      	str	r4, [sp, #8]
 80144d8:	bc30      	pop	{r4, r5}
 80144da:	f7ff bddf 	b.w	801409c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80144de:	9402      	str	r4, [sp, #8]
 80144e0:	bc30      	pop	{r4, r5}
 80144e2:	f7ff bce7 	b.w	8013eb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80144e6:	9402      	str	r4, [sp, #8]
 80144e8:	bc30      	pop	{r4, r5}
 80144ea:	f7ff bedb 	b.w	80142a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80144ee:	bc30      	pop	{r4, r5}
 80144f0:	4770      	bx	lr
	...

080144f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80144f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144f8:	4604      	mov	r4, r0
 80144fa:	b087      	sub	sp, #28
 80144fc:	6810      	ldr	r0, [r2, #0]
 80144fe:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8014502:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801473c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8014506:	460e      	mov	r6, r1
 8014508:	6851      	ldr	r1, [r2, #4]
 801450a:	ad02      	add	r5, sp, #8
 801450c:	c503      	stmia	r5!, {r0, r1}
 801450e:	6818      	ldr	r0, [r3, #0]
 8014510:	6859      	ldr	r1, [r3, #4]
 8014512:	ad04      	add	r5, sp, #16
 8014514:	4617      	mov	r7, r2
 8014516:	c503      	stmia	r5!, {r0, r1}
 8014518:	a802      	add	r0, sp, #8
 801451a:	f7f9 fba3 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801451e:	4639      	mov	r1, r7
 8014520:	a804      	add	r0, sp, #16
 8014522:	f7f9 fb87 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014526:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801452a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801452e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8014532:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014536:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801453a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801453e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8014542:	440e      	add	r6, r1
 8014544:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014548:	440a      	add	r2, r1
 801454a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801454e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014552:	4413      	add	r3, r2
 8014554:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014558:	4b77      	ldr	r3, [pc, #476]	; (8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801455a:	6818      	ldr	r0, [r3, #0]
 801455c:	6803      	ldr	r3, [r0, #0]
 801455e:	6a1b      	ldr	r3, [r3, #32]
 8014560:	4798      	blx	r3
 8014562:	f8b9 b000 	ldrh.w	fp, [r9]
 8014566:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801456a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801456e:	fb0b 2303 	mla	r3, fp, r3, r2
 8014572:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014576:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801457a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801457e:	fb05 f50b 	mul.w	r5, r5, fp
 8014582:	9300      	str	r3, [sp, #0]
 8014584:	d068      	beq.n	8014658 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 8014586:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801458a:	4558      	cmp	r0, fp
 801458c:	f080 80cc 	bcs.w	8014728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014590:	9b00      	ldr	r3, [sp, #0]
 8014592:	18c3      	adds	r3, r0, r3
 8014594:	9301      	str	r3, [sp, #4]
 8014596:	4631      	mov	r1, r6
 8014598:	9b01      	ldr	r3, [sp, #4]
 801459a:	4298      	cmp	r0, r3
 801459c:	d24e      	bcs.n	801463c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 801459e:	f811 2b01 	ldrb.w	r2, [r1], #1
 80145a2:	2a00      	cmp	r2, #0
 80145a4:	d047      	beq.n	8014636 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80145a6:	fb0a f202 	mul.w	r2, sl, r2
 80145aa:	1c53      	adds	r3, r2, #1
 80145ac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80145b0:	121b      	asrs	r3, r3, #8
 80145b2:	d040      	beq.n	8014636 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80145b4:	8802      	ldrh	r2, [r0, #0]
 80145b6:	f8b4 c000 	ldrh.w	ip, [r4]
 80145ba:	b29e      	uxth	r6, r3
 80145bc:	1215      	asrs	r5, r2, #8
 80145be:	43db      	mvns	r3, r3
 80145c0:	b2db      	uxtb	r3, r3
 80145c2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80145c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80145ca:	fb15 f503 	smulbb	r5, r5, r3
 80145ce:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80145d2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80145d6:	00d2      	lsls	r2, r2, #3
 80145d8:	fb07 5706 	mla	r7, r7, r6, r5
 80145dc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80145e0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80145e4:	b2d2      	uxtb	r2, r2
 80145e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80145ea:	fb1e fe03 	smulbb	lr, lr, r3
 80145ee:	fb12 f203 	smulbb	r2, r2, r3
 80145f2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80145f6:	fa5f fc8c 	uxtb.w	ip, ip
 80145fa:	fb05 e506 	mla	r5, r5, r6, lr
 80145fe:	fb0c 2c06 	mla	ip, ip, r6, r2
 8014602:	b2bf      	uxth	r7, r7
 8014604:	b2ad      	uxth	r5, r5
 8014606:	fa1f fc8c 	uxth.w	ip, ip
 801460a:	1c7b      	adds	r3, r7, #1
 801460c:	f10c 0601 	add.w	r6, ip, #1
 8014610:	f105 0e01 	add.w	lr, r5, #1
 8014614:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8014618:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 801461c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8014620:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014624:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014628:	096d      	lsrs	r5, r5, #5
 801462a:	ea47 070c 	orr.w	r7, r7, ip
 801462e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014632:	432f      	orrs	r7, r5
 8014634:	8007      	strh	r7, [r0, #0]
 8014636:	3002      	adds	r0, #2
 8014638:	3402      	adds	r4, #2
 801463a:	e7ad      	b.n	8014598 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801463c:	f8b9 3000 	ldrh.w	r3, [r9]
 8014640:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014644:	eba3 0308 	sub.w	r3, r3, r8
 8014648:	eba6 0608 	sub.w	r6, r6, r8
 801464c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014650:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014654:	440e      	add	r6, r1
 8014656:	e798      	b.n	801458a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8014658:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801465c:	42a8      	cmp	r0, r5
 801465e:	d263      	bcs.n	8014728 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014660:	9b00      	ldr	r3, [sp, #0]
 8014662:	4631      	mov	r1, r6
 8014664:	eb00 0b03 	add.w	fp, r0, r3
 8014668:	4558      	cmp	r0, fp
 801466a:	d24f      	bcs.n	801470c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801466c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014670:	b12b      	cbz	r3, 801467e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8014672:	2bff      	cmp	r3, #255	; 0xff
 8014674:	f8b4 e000 	ldrh.w	lr, [r4]
 8014678:	d104      	bne.n	8014684 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 801467a:	f8a0 e000 	strh.w	lr, [r0]
 801467e:	3002      	adds	r0, #2
 8014680:	3402      	adds	r4, #2
 8014682:	e7f1      	b.n	8014668 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 8014684:	8802      	ldrh	r2, [r0, #0]
 8014686:	b29f      	uxth	r7, r3
 8014688:	1216      	asrs	r6, r2, #8
 801468a:	43db      	mvns	r3, r3
 801468c:	b2db      	uxtb	r3, r3
 801468e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014692:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014696:	fb16 f603 	smulbb	r6, r6, r3
 801469a:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801469e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80146a2:	00d2      	lsls	r2, r2, #3
 80146a4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80146a8:	b2d2      	uxtb	r2, r2
 80146aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80146ae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80146b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80146b6:	fb1a fa03 	smulbb	sl, sl, r3
 80146ba:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80146be:	fb12 f303 	smulbb	r3, r2, r3
 80146c2:	fa5f fe8e 	uxtb.w	lr, lr
 80146c6:	fb06 a607 	mla	r6, r6, r7, sl
 80146ca:	fb0e 3e07 	mla	lr, lr, r7, r3
 80146ce:	fa1f fc8c 	uxth.w	ip, ip
 80146d2:	b2b6      	uxth	r6, r6
 80146d4:	fa1f fe8e 	uxth.w	lr, lr
 80146d8:	f10c 0201 	add.w	r2, ip, #1
 80146dc:	f10e 0301 	add.w	r3, lr, #1
 80146e0:	f106 0a01 	add.w	sl, r6, #1
 80146e4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80146e8:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 80146ec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80146f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80146f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80146f8:	0976      	lsrs	r6, r6, #5
 80146fa:	ea4c 0c0e 	orr.w	ip, ip, lr
 80146fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014702:	ea4c 0c06 	orr.w	ip, ip, r6
 8014706:	f8a0 c000 	strh.w	ip, [r0]
 801470a:	e7b8      	b.n	801467e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 801470c:	f8b9 3000 	ldrh.w	r3, [r9]
 8014710:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014714:	eba3 0308 	sub.w	r3, r3, r8
 8014718:	eba6 0608 	sub.w	r6, r6, r8
 801471c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014720:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014724:	440e      	add	r6, r1
 8014726:	e799      	b.n	801465c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 8014728:	4b03      	ldr	r3, [pc, #12]	; (8014738 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801472a:	6818      	ldr	r0, [r3, #0]
 801472c:	6803      	ldr	r3, [r0, #0]
 801472e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014730:	4798      	blx	r3
 8014732:	b007      	add	sp, #28
 8014734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014738:	2000d358 	.word	0x2000d358
 801473c:	2000d352 	.word	0x2000d352

08014740 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8014740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014744:	b089      	sub	sp, #36	; 0x24
 8014746:	4682      	mov	sl, r0
 8014748:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801474c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801474e:	460d      	mov	r5, r1
 8014750:	4691      	mov	r9, r2
 8014752:	4698      	mov	r8, r3
 8014754:	b3ae      	cbz	r6, 80147c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8014756:	4608      	mov	r0, r1
 8014758:	f7fc fa00 	bl	8010b5c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801475c:	4607      	mov	r7, r0
 801475e:	4628      	mov	r0, r5
 8014760:	f7fc fa36 	bl	8010bd0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014764:	f8ad 000e 	strh.w	r0, [sp, #14]
 8014768:	4628      	mov	r0, r5
 801476a:	f8ad 9008 	strh.w	r9, [sp, #8]
 801476e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8014772:	f8ad 700c 	strh.w	r7, [sp, #12]
 8014776:	f7fc fb83 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801477a:	b178      	cbz	r0, 801479c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801477c:	4628      	mov	r0, r5
 801477e:	f7fc fb7f 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014782:	2802      	cmp	r0, #2
 8014784:	d00a      	beq.n	801479c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8014786:	4628      	mov	r0, r5
 8014788:	f7fc fb7a 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801478c:	280b      	cmp	r0, #11
 801478e:	d005      	beq.n	801479c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8014790:	4b69      	ldr	r3, [pc, #420]	; (8014938 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8014792:	4a6a      	ldr	r2, [pc, #424]	; (801493c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8014794:	486a      	ldr	r0, [pc, #424]	; (8014940 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8014796:	214b      	movs	r1, #75	; 0x4b
 8014798:	f009 fc26 	bl	801dfe8 <__assert_func>
 801479c:	4628      	mov	r0, r5
 801479e:	f7fc fae5 	bl	8010d6c <_ZNK8touchgfx6Bitmap7getDataEv>
 80147a2:	4607      	mov	r7, r0
 80147a4:	4628      	mov	r0, r5
 80147a6:	f7fc fb13 	bl	8010dd0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80147aa:	4681      	mov	r9, r0
 80147ac:	4628      	mov	r0, r5
 80147ae:	f7fc fb67 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80147b2:	2802      	cmp	r0, #2
 80147b4:	d108      	bne.n	80147c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80147b6:	4633      	mov	r3, r6
 80147b8:	4622      	mov	r2, r4
 80147ba:	a902      	add	r1, sp, #8
 80147bc:	4638      	mov	r0, r7
 80147be:	f7ff fa69 	bl	8013c94 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80147c2:	b009      	add	sp, #36	; 0x24
 80147c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147c8:	4628      	mov	r0, r5
 80147ca:	f7fc fb59 	bl	8010e80 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80147ce:	280b      	cmp	r0, #11
 80147d0:	d107      	bne.n	80147e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 80147d2:	9600      	str	r6, [sp, #0]
 80147d4:	4623      	mov	r3, r4
 80147d6:	aa02      	add	r2, sp, #8
 80147d8:	4649      	mov	r1, r9
 80147da:	4638      	mov	r0, r7
 80147dc:	f7ff fe72 	bl	80144c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80147e0:	e7ef      	b.n	80147c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80147e2:	4628      	mov	r0, r5
 80147e4:	f7fc fa88 	bl	8010cf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80147e8:	b950      	cbnz	r0, 8014800 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80147ea:	e9cd 6000 	strd	r6, r0, [sp]
 80147ee:	f8da 3000 	ldr.w	r3, [sl]
 80147f2:	aa02      	add	r2, sp, #8
 80147f4:	68dd      	ldr	r5, [r3, #12]
 80147f6:	4639      	mov	r1, r7
 80147f8:	4623      	mov	r3, r4
 80147fa:	4650      	mov	r0, sl
 80147fc:	47a8      	blx	r5
 80147fe:	e7e0      	b.n	80147c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8014800:	f10d 0818 	add.w	r8, sp, #24
 8014804:	4629      	mov	r1, r5
 8014806:	4640      	mov	r0, r8
 8014808:	f7fc fa1c 	bl	8010c44 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801480c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014810:	ad04      	add	r5, sp, #16
 8014812:	e885 0003 	stmia.w	r5, {r0, r1}
 8014816:	4628      	mov	r0, r5
 8014818:	4621      	mov	r1, r4
 801481a:	f7f5 f9dd 	bl	8009bd8 <_ZN8touchgfx4RectaNERKS0_>
 801481e:	4628      	mov	r0, r5
 8014820:	f7f5 fa1d 	bl	8009c5e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014824:	b138      	cbz	r0, 8014836 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8014826:	9600      	str	r6, [sp, #0]
 8014828:	4623      	mov	r3, r4
 801482a:	aa02      	add	r2, sp, #8
 801482c:	4649      	mov	r1, r9
 801482e:	4638      	mov	r0, r7
 8014830:	f7ff fe60 	bl	80144f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014834:	e7c5      	b.n	80147c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8014836:	e9cd 6000 	strd	r6, r0, [sp]
 801483a:	f8da 3000 	ldr.w	r3, [sl]
 801483e:	aa02      	add	r2, sp, #8
 8014840:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8014844:	4639      	mov	r1, r7
 8014846:	462b      	mov	r3, r5
 8014848:	4650      	mov	r0, sl
 801484a:	47d8      	blx	fp
 801484c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014850:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014854:	4293      	cmp	r3, r2
 8014856:	dd13      	ble.n	8014880 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8014858:	f9b4 0000 	ldrsh.w	r0, [r4]
 801485c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014860:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014864:	1a9b      	subs	r3, r3, r2
 8014866:	f8ad 201a 	strh.w	r2, [sp, #26]
 801486a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801486e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014872:	9600      	str	r6, [sp, #0]
 8014874:	4643      	mov	r3, r8
 8014876:	aa02      	add	r2, sp, #8
 8014878:	4649      	mov	r1, r9
 801487a:	4638      	mov	r0, r7
 801487c:	f7ff fe3a 	bl	80144f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8014880:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014884:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014888:	4293      	cmp	r3, r2
 801488a:	dd13      	ble.n	80148b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801488c:	1a9b      	subs	r3, r3, r2
 801488e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014892:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014896:	f8ad 2018 	strh.w	r2, [sp, #24]
 801489a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801489e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80148a2:	f8ad 101e 	strh.w	r1, [sp, #30]
 80148a6:	9600      	str	r6, [sp, #0]
 80148a8:	4643      	mov	r3, r8
 80148aa:	aa02      	add	r2, sp, #8
 80148ac:	4649      	mov	r1, r9
 80148ae:	4638      	mov	r0, r7
 80148b0:	f7ff fe20 	bl	80144f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80148b4:	88a2      	ldrh	r2, [r4, #4]
 80148b6:	8823      	ldrh	r3, [r4, #0]
 80148b8:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80148bc:	4413      	add	r3, r2
 80148be:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80148c2:	440a      	add	r2, r1
 80148c4:	b29b      	uxth	r3, r3
 80148c6:	b292      	uxth	r2, r2
 80148c8:	b211      	sxth	r1, r2
 80148ca:	b218      	sxth	r0, r3
 80148cc:	4288      	cmp	r0, r1
 80148ce:	dd13      	ble.n	80148f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 80148d0:	1a9b      	subs	r3, r3, r2
 80148d2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80148d6:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 80148da:	f8ad 1018 	strh.w	r1, [sp, #24]
 80148de:	f8ad 301c 	strh.w	r3, [sp, #28]
 80148e2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80148e6:	9600      	str	r6, [sp, #0]
 80148e8:	4643      	mov	r3, r8
 80148ea:	aa02      	add	r2, sp, #8
 80148ec:	4649      	mov	r1, r9
 80148ee:	4638      	mov	r0, r7
 80148f0:	f8ad 501a 	strh.w	r5, [sp, #26]
 80148f4:	f7ff fdfe 	bl	80144f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80148f8:	88e2      	ldrh	r2, [r4, #6]
 80148fa:	8863      	ldrh	r3, [r4, #2]
 80148fc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8014900:	4413      	add	r3, r2
 8014902:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014906:	440a      	add	r2, r1
 8014908:	b29b      	uxth	r3, r3
 801490a:	b292      	uxth	r2, r2
 801490c:	b211      	sxth	r1, r2
 801490e:	b218      	sxth	r0, r3
 8014910:	4288      	cmp	r0, r1
 8014912:	f77f af56 	ble.w	80147c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8014916:	f9b4 5000 	ldrsh.w	r5, [r4]
 801491a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801491e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8014922:	1a9b      	subs	r3, r3, r2
 8014924:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014928:	f8ad 101a 	strh.w	r1, [sp, #26]
 801492c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014930:	9600      	str	r6, [sp, #0]
 8014932:	4643      	mov	r3, r8
 8014934:	e779      	b.n	801482a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8014936:	bf00      	nop
 8014938:	080222c5 	.word	0x080222c5
 801493c:	080229fe 	.word	0x080229fe
 8014940:	080225c4 	.word	0x080225c4

08014944 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8014944:	b508      	push	{r3, lr}
 8014946:	b180      	cbz	r0, 801496a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8014948:	2902      	cmp	r1, #2
 801494a:	d014      	beq.n	8014976 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801494c:	2903      	cmp	r1, #3
 801494e:	d01d      	beq.n	801498c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8014950:	2901      	cmp	r1, #1
 8014952:	d101      	bne.n	8014958 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014954:	2001      	movs	r0, #1
 8014956:	bd08      	pop	{r3, pc}
 8014958:	4b0e      	ldr	r3, [pc, #56]	; (8014994 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801495a:	8818      	ldrh	r0, [r3, #0]
 801495c:	b990      	cbnz	r0, 8014984 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801495e:	4b0e      	ldr	r3, [pc, #56]	; (8014998 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8014960:	4a0e      	ldr	r2, [pc, #56]	; (801499c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8014962:	480f      	ldr	r0, [pc, #60]	; (80149a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8014964:	2154      	movs	r1, #84	; 0x54
 8014966:	f009 fb3f 	bl	801dfe8 <__assert_func>
 801496a:	2902      	cmp	r1, #2
 801496c:	d00e      	beq.n	801498c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801496e:	2903      	cmp	r1, #3
 8014970:	d0f2      	beq.n	8014958 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8014972:	2901      	cmp	r1, #1
 8014974:	d1ee      	bne.n	8014954 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8014976:	4b07      	ldr	r3, [pc, #28]	; (8014994 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8014978:	8818      	ldrh	r0, [r3, #0]
 801497a:	2800      	cmp	r0, #0
 801497c:	d0ef      	beq.n	801495e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801497e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014982:	e7e8      	b.n	8014956 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014984:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8014988:	4240      	negs	r0, r0
 801498a:	e7e4      	b.n	8014956 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801498c:	f04f 30ff 	mov.w	r0, #4294967295
 8014990:	e7e1      	b.n	8014956 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8014992:	bf00      	nop
 8014994:	2000d352 	.word	0x2000d352
 8014998:	080225f6 	.word	0x080225f6
 801499c:	08022b7b 	.word	0x08022b7b
 80149a0:	08022638 	.word	0x08022638

080149a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80149a4:	b508      	push	{r3, lr}
 80149a6:	b180      	cbz	r0, 80149ca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80149a8:	2902      	cmp	r1, #2
 80149aa:	d014      	beq.n	80149d6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80149ac:	2903      	cmp	r1, #3
 80149ae:	d018      	beq.n	80149e2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80149b0:	2901      	cmp	r1, #1
 80149b2:	d001      	beq.n	80149b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80149b4:	2001      	movs	r0, #1
 80149b6:	e013      	b.n	80149e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80149b8:	4b0e      	ldr	r3, [pc, #56]	; (80149f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80149ba:	8818      	ldrh	r0, [r3, #0]
 80149bc:	b970      	cbnz	r0, 80149dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80149be:	4b0e      	ldr	r3, [pc, #56]	; (80149f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80149c0:	4a0e      	ldr	r2, [pc, #56]	; (80149fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80149c2:	480f      	ldr	r0, [pc, #60]	; (8014a00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80149c4:	2154      	movs	r1, #84	; 0x54
 80149c6:	f009 fb0f 	bl	801dfe8 <__assert_func>
 80149ca:	2902      	cmp	r1, #2
 80149cc:	d009      	beq.n	80149e2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80149ce:	2903      	cmp	r1, #3
 80149d0:	d0f0      	beq.n	80149b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 80149d2:	2901      	cmp	r1, #1
 80149d4:	d1f0      	bne.n	80149b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80149d6:	f04f 30ff 	mov.w	r0, #4294967295
 80149da:	e001      	b.n	80149e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80149dc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80149e0:	bd08      	pop	{r3, pc}
 80149e2:	4b04      	ldr	r3, [pc, #16]	; (80149f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80149e4:	8818      	ldrh	r0, [r3, #0]
 80149e6:	2800      	cmp	r0, #0
 80149e8:	d0e9      	beq.n	80149be <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 80149ea:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80149ee:	4240      	negs	r0, r0
 80149f0:	e7f6      	b.n	80149e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80149f2:	bf00      	nop
 80149f4:	2000d352 	.word	0x2000d352
 80149f8:	080225f6 	.word	0x080225f6
 80149fc:	08022b7b 	.word	0x08022b7b
 8014a00:	08022638 	.word	0x08022638

08014a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8014a04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a08:	b099      	sub	sp, #100	; 0x64
 8014a0a:	910b      	str	r1, [sp, #44]	; 0x2c
 8014a0c:	a914      	add	r1, sp, #80	; 0x50
 8014a0e:	e881 000c 	stmia.w	r1, {r2, r3}
 8014a12:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8014a16:	9308      	str	r3, [sp, #32]
 8014a18:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 8014a1c:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 8014a20:	f893 b00d 	ldrb.w	fp, [r3, #13]
 8014a24:	910c      	str	r1, [sp, #48]	; 0x30
 8014a26:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 8014a2a:	910d      	str	r1, [sp, #52]	; 0x34
 8014a2c:	7998      	ldrb	r0, [r3, #6]
 8014a2e:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8014a32:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8014a36:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8014a3a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8014a3e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8014a42:	ea4f 114b 	mov.w	r1, fp, lsl #5
 8014a46:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8014a4a:	4301      	orrs	r1, r0
 8014a4c:	9109      	str	r1, [sp, #36]	; 0x24
 8014a4e:	f000 81e2 	beq.w	8014e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8014a52:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 8014a56:	79d9      	ldrb	r1, [r3, #7]
 8014a58:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8014a5c:	ea51 0b0b 	orrs.w	fp, r1, fp
 8014a60:	f000 81d9 	beq.w	8014e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8014a64:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8014a68:	b29b      	uxth	r3, r3
 8014a6a:	2e00      	cmp	r6, #0
 8014a6c:	f000 80fc 	beq.w	8014c68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x264>
 8014a70:	1af6      	subs	r6, r6, r3
 8014a72:	b2b6      	uxth	r6, r6
 8014a74:	0433      	lsls	r3, r6, #16
 8014a76:	d502      	bpl.n	8014a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8014a78:	1bad      	subs	r5, r5, r6
 8014a7a:	b22d      	sxth	r5, r5
 8014a7c:	2600      	movs	r6, #0
 8014a7e:	f9b2 1000 	ldrsh.w	r1, [r2]
 8014a82:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8014a86:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8014a8a:	428d      	cmp	r5, r1
 8014a8c:	b28b      	uxth	r3, r1
 8014a8e:	bfbf      	itttt	lt
 8014a90:	18f6      	addlt	r6, r6, r3
 8014a92:	1b75      	sublt	r5, r6, r5
 8014a94:	b2ae      	uxthlt	r6, r5
 8014a96:	460d      	movlt	r5, r1
 8014a98:	8891      	ldrh	r1, [r2, #4]
 8014a9a:	440b      	add	r3, r1
 8014a9c:	b21b      	sxth	r3, r3
 8014a9e:	9311      	str	r3, [sp, #68]	; 0x44
 8014aa0:	8853      	ldrh	r3, [r2, #2]
 8014aa2:	88d2      	ldrh	r2, [r2, #6]
 8014aa4:	4413      	add	r3, r2
 8014aa6:	b21b      	sxth	r3, r3
 8014aa8:	9310      	str	r3, [sp, #64]	; 0x40
 8014aaa:	4bb2      	ldr	r3, [pc, #712]	; (8014d74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>)
 8014aac:	9a08      	ldr	r2, [sp, #32]
 8014aae:	f893 9000 	ldrb.w	r9, [r3]
 8014ab2:	f109 3cff 	add.w	ip, r9, #4294967295
 8014ab6:	f1dc 0300 	rsbs	r3, ip, #0
 8014aba:	eb43 030c 	adc.w	r3, r3, ip
 8014abe:	930f      	str	r3, [sp, #60]	; 0x3c
 8014ac0:	4629      	mov	r1, r5
 8014ac2:	4653      	mov	r3, sl
 8014ac4:	a814      	add	r0, sp, #80	; 0x50
 8014ac6:	f7f8 ff09 	bl	800d8dc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8014aca:	4629      	mov	r1, r5
 8014acc:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8014ad0:	4653      	mov	r3, sl
 8014ad2:	9a08      	ldr	r2, [sp, #32]
 8014ad4:	a814      	add	r0, sp, #80	; 0x50
 8014ad6:	f7f8 ff19 	bl	800d90c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8014ada:	a918      	add	r1, sp, #96	; 0x60
 8014adc:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014ae0:	a817      	add	r0, sp, #92	; 0x5c
 8014ae2:	f7f9 f875 	bl	800dbd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8014ae6:	f1ba 0f00 	cmp.w	sl, #0
 8014aea:	f040 80c0 	bne.w	8014c6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8014aee:	f1b9 0f01 	cmp.w	r9, #1
 8014af2:	f040 80c4 	bne.w	8014c7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27a>
 8014af6:	2301      	movs	r3, #1
 8014af8:	fa03 f308 	lsl.w	r3, r3, r8
 8014afc:	3b01      	subs	r3, #1
 8014afe:	b2db      	uxtb	r3, r3
 8014b00:	f1b8 0f01 	cmp.w	r8, #1
 8014b04:	930a      	str	r3, [sp, #40]	; 0x28
 8014b06:	f000 80e5 	beq.w	8014cd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8014b0a:	f1b8 0f02 	cmp.w	r8, #2
 8014b0e:	f000 80e4 	beq.w	8014cda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d6>
 8014b12:	f1b8 0f04 	cmp.w	r8, #4
 8014b16:	bf15      	itete	ne
 8014b18:	46c1      	movne	r9, r8
 8014b1a:	f04f 0904 	moveq.w	r9, #4
 8014b1e:	2301      	movne	r3, #1
 8014b20:	2311      	moveq	r3, #17
 8014b22:	9307      	str	r3, [sp, #28]
 8014b24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014b26:	b153      	cbz	r3, 8014b3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13a>
 8014b28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014b2a:	2408      	movs	r4, #8
 8014b2c:	fb94 f3f9 	sdiv	r3, r4, r9
 8014b30:	1e5c      	subs	r4, r3, #1
 8014b32:	4414      	add	r4, r2
 8014b34:	fb94 f4f3 	sdiv	r4, r4, r3
 8014b38:	fb14 f403 	smulbb	r4, r4, r3
 8014b3c:	b2a4      	uxth	r4, r4
 8014b3e:	b906      	cbnz	r6, 8014b42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8014b40:	b16f      	cbz	r7, 8014b5e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8014b42:	fb07 6304 	mla	r3, r7, r4, r6
 8014b46:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014b48:	fb08 f303 	mul.w	r3, r8, r3
 8014b4c:	4639      	mov	r1, r7
 8014b4e:	f003 0707 	and.w	r7, r3, #7
 8014b52:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 8014b56:	9328      	str	r3, [sp, #160]	; 0xa0
 8014b58:	ebab 0301 	sub.w	r3, fp, r1
 8014b5c:	930e      	str	r3, [sp, #56]	; 0x38
 8014b5e:	4651      	mov	r1, sl
 8014b60:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014b62:	f7ff feef 	bl	8014944 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8014b66:	4651      	mov	r1, sl
 8014b68:	4683      	mov	fp, r0
 8014b6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014b6c:	f7ff ff1a 	bl	80149a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8014b70:	9a08      	ldr	r2, [sp, #32]
 8014b72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b74:	1a9b      	subs	r3, r3, r2
 8014b76:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014b78:	429a      	cmp	r2, r3
 8014b7a:	bfa8      	it	ge
 8014b7c:	461a      	movge	r2, r3
 8014b7e:	2a00      	cmp	r2, #0
 8014b80:	4682      	mov	sl, r0
 8014b82:	9208      	str	r2, [sp, #32]
 8014b84:	f340 8147 	ble.w	8014e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8014b88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014b8a:	1bad      	subs	r5, r5, r6
 8014b8c:	1b5d      	subs	r5, r3, r5
 8014b8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b90:	429d      	cmp	r5, r3
 8014b92:	bfd4      	ite	le
 8014b94:	ebc6 0605 	rsble	r6, r6, r5
 8014b98:	ebc6 0603 	rsbgt	r6, r6, r3
 8014b9c:	2e00      	cmp	r6, #0
 8014b9e:	f340 813a 	ble.w	8014e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8014ba2:	1ba4      	subs	r4, r4, r6
 8014ba4:	fb09 f304 	mul.w	r3, r9, r4
 8014ba8:	930e      	str	r3, [sp, #56]	; 0x38
 8014baa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014bac:	2b00      	cmp	r3, #0
 8014bae:	f040 809d 	bne.w	8014cec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8014bb2:	4b71      	ldr	r3, [pc, #452]	; (8014d78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 8014bb4:	6818      	ldr	r0, [r3, #0]
 8014bb6:	6803      	ldr	r3, [r0, #0]
 8014bb8:	6a1b      	ldr	r3, [r3, #32]
 8014bba:	4798      	blx	r3
 8014bbc:	496f      	ldr	r1, [pc, #444]	; (8014d7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8014bbe:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8014bc2:	880c      	ldrh	r4, [r1, #0]
 8014bc4:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 8014bc8:	fb04 1303 	mla	r3, r4, r3, r1
 8014bcc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014bd0:	9309      	str	r3, [sp, #36]	; 0x24
 8014bd2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014bd4:	7819      	ldrb	r1, [r3, #0]
 8014bd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014bd8:	0a1b      	lsrs	r3, r3, #8
 8014bda:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8014bde:	930f      	str	r3, [sp, #60]	; 0x3c
 8014be0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014be2:	08db      	lsrs	r3, r3, #3
 8014be4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8014be8:	9310      	str	r3, [sp, #64]	; 0x40
 8014bea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014bec:	00db      	lsls	r3, r3, #3
 8014bee:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8014bf2:	9311      	str	r3, [sp, #68]	; 0x44
 8014bf4:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8014bf8:	fb0b ab16 	mls	fp, fp, r6, sl
 8014bfc:	fb03 fa06 	mul.w	sl, r3, r6
 8014c00:	930c      	str	r3, [sp, #48]	; 0x30
 8014c02:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 8014c06:	9312      	str	r3, [sp, #72]	; 0x48
 8014c08:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c0a:	4139      	asrs	r1, r7
 8014c0c:	b29b      	uxth	r3, r3
 8014c0e:	b2c9      	uxtb	r1, r1
 8014c10:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c12:	9b08      	ldr	r3, [sp, #32]
 8014c14:	3b01      	subs	r3, #1
 8014c16:	9308      	str	r3, [sp, #32]
 8014c18:	3301      	adds	r3, #1
 8014c1a:	f000 80c3 	beq.w	8014da4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8014c1e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014c22:	46b2      	mov	sl, r6
 8014c24:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014c28:	f0c0 80aa 	bcc.w	8014d80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8014c2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c2e:	400b      	ands	r3, r1
 8014c30:	d00a      	beq.n	8014c48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x244>
 8014c32:	9807      	ldr	r0, [sp, #28]
 8014c34:	fb13 f300 	smulbb	r3, r3, r0
 8014c38:	2bfe      	cmp	r3, #254	; 0xfe
 8014c3a:	dd59      	ble.n	8014cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8014c3c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014c3e:	28ff      	cmp	r0, #255	; 0xff
 8014c40:	d156      	bne.n	8014cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8014c42:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014c44:	f8ae 4000 	strh.w	r4, [lr]
 8014c48:	4447      	add	r7, r8
 8014c4a:	b2bf      	uxth	r7, r7
 8014c4c:	2f07      	cmp	r7, #7
 8014c4e:	bf81      	itttt	hi
 8014c50:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8014c52:	7859      	ldrbhi	r1, [r3, #1]
 8014c54:	3301      	addhi	r3, #1
 8014c56:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8014c58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c5a:	bf9a      	itte	ls
 8014c5c:	fa41 f109 	asrls.w	r1, r1, r9
 8014c60:	b2c9      	uxtbls	r1, r1
 8014c62:	2700      	movhi	r7, #0
 8014c64:	449e      	add	lr, r3
 8014c66:	e7dd      	b.n	8014c24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x220>
 8014c68:	441d      	add	r5, r3
 8014c6a:	b22d      	sxth	r5, r5
 8014c6c:	e707      	b.n	8014a7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8014c6e:	f1ba 0f01 	cmp.w	sl, #1
 8014c72:	f47f af40 	bne.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014c76:	f1b9 0f01 	cmp.w	r9, #1
 8014c7a:	f47f af3c 	bne.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014c7e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8014d78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8014c82:	f8d9 0000 	ldr.w	r0, [r9]
 8014c86:	6803      	ldr	r3, [r0, #0]
 8014c88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014c8a:	4798      	blx	r3
 8014c8c:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8014c90:	464a      	mov	r2, r9
 8014c92:	d006      	beq.n	8014ca2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8014c94:	f1b8 0f04 	cmp.w	r8, #4
 8014c98:	d11a      	bne.n	8014cd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 8014c9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c9c:	3300      	adds	r3, #0
 8014c9e:	bf18      	it	ne
 8014ca0:	2301      	movne	r3, #1
 8014ca2:	05c0      	lsls	r0, r0, #23
 8014ca4:	f140 8087 	bpl.w	8014db6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 8014ca8:	f1b8 0f08 	cmp.w	r8, #8
 8014cac:	f040 8083 	bne.w	8014db6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 8014cb0:	2b00      	cmp	r3, #0
 8014cb2:	bf14      	ite	ne
 8014cb4:	2180      	movne	r1, #128	; 0x80
 8014cb6:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8014cba:	2e00      	cmp	r6, #0
 8014cbc:	f040 80ae 	bne.w	8014e1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x418>
 8014cc0:	2f00      	cmp	r7, #0
 8014cc2:	f000 8082 	beq.w	8014dca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 8014cc6:	23ff      	movs	r3, #255	; 0xff
 8014cc8:	930a      	str	r3, [sp, #40]	; 0x28
 8014cca:	46c1      	mov	r9, r8
 8014ccc:	2301      	movs	r3, #1
 8014cce:	e728      	b.n	8014b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8014cd0:	2300      	movs	r3, #0
 8014cd2:	e7e6      	b.n	8014ca2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8014cd4:	46c1      	mov	r9, r8
 8014cd6:	23ff      	movs	r3, #255	; 0xff
 8014cd8:	e723      	b.n	8014b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8014cda:	46c1      	mov	r9, r8
 8014cdc:	2355      	movs	r3, #85	; 0x55
 8014cde:	e720      	b.n	8014b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8014ce0:	23ff      	movs	r3, #255	; 0xff
 8014ce2:	930a      	str	r3, [sp, #40]	; 0x28
 8014ce4:	2301      	movs	r3, #1
 8014ce6:	46c1      	mov	r9, r8
 8014ce8:	9307      	str	r3, [sp, #28]
 8014cea:	e71d      	b.n	8014b28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x124>
 8014cec:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014cee:	e765      	b.n	8014bbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1b8>
 8014cf0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014cf2:	f8be 5000 	ldrh.w	r5, [lr]
 8014cf6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014cf8:	fb10 f303 	smulbb	r3, r0, r3
 8014cfc:	b29b      	uxth	r3, r3
 8014cfe:	1c58      	adds	r0, r3, #1
 8014d00:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8014d04:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014d08:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014d0a:	fa1f fc83 	uxth.w	ip, r3
 8014d0e:	122c      	asrs	r4, r5, #8
 8014d10:	43db      	mvns	r3, r3
 8014d12:	b2db      	uxtb	r3, r3
 8014d14:	fb1c fb02 	smulbb	fp, ip, r2
 8014d18:	fb10 f00c 	smulbb	r0, r0, ip
 8014d1c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8014d20:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014d22:	fb04 0403 	mla	r4, r4, r3, r0
 8014d26:	10e8      	asrs	r0, r5, #3
 8014d28:	00ed      	lsls	r5, r5, #3
 8014d2a:	b2ed      	uxtb	r5, r5
 8014d2c:	fb1c fc02 	smulbb	ip, ip, r2
 8014d30:	fb05 cc03 	mla	ip, r5, r3, ip
 8014d34:	b2a4      	uxth	r4, r4
 8014d36:	fa1f fc8c 	uxth.w	ip, ip
 8014d3a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8014d3e:	fb00 b003 	mla	r0, r0, r3, fp
 8014d42:	1c63      	adds	r3, r4, #1
 8014d44:	f10c 0b01 	add.w	fp, ip, #1
 8014d48:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8014d4c:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8014d50:	b280      	uxth	r0, r0
 8014d52:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8014d56:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8014d5a:	ea44 040b 	orr.w	r4, r4, fp
 8014d5e:	f100 0b01 	add.w	fp, r0, #1
 8014d62:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8014d66:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014d6a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014d6e:	ea44 040b 	orr.w	r4, r4, fp
 8014d72:	e767      	b.n	8014c44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x240>
 8014d74:	2000d350 	.word	0x2000d350
 8014d78:	2000d358 	.word	0x2000d358
 8014d7c:	2000d352 	.word	0x2000d352
 8014d80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d82:	b153      	cbz	r3, 8014d9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8014d84:	441f      	add	r7, r3
 8014d86:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014d88:	b2bf      	uxth	r7, r7
 8014d8a:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8014d8e:	f007 0707 	and.w	r7, r7, #7
 8014d92:	7819      	ldrb	r1, [r3, #0]
 8014d94:	9328      	str	r3, [sp, #160]	; 0xa0
 8014d96:	4139      	asrs	r1, r7
 8014d98:	b2c9      	uxtb	r1, r1
 8014d9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014d9e:	441a      	add	r2, r3
 8014da0:	9209      	str	r2, [sp, #36]	; 0x24
 8014da2:	e736      	b.n	8014c12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20e>
 8014da4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014da6:	2b00      	cmp	r3, #0
 8014da8:	d135      	bne.n	8014e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8014daa:	4b21      	ldr	r3, [pc, #132]	; (8014e30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x42c>)
 8014dac:	6818      	ldr	r0, [r3, #0]
 8014dae:	6803      	ldr	r3, [r0, #0]
 8014db0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014db2:	4798      	blx	r3
 8014db4:	e02f      	b.n	8014e16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8014db6:	2b00      	cmp	r3, #0
 8014db8:	f43f ae9d 	beq.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014dbc:	2e00      	cmp	r6, #0
 8014dbe:	f47f ae9a 	bne.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014dc2:	2f00      	cmp	r7, #0
 8014dc4:	f47f ae97 	bne.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014dc8:	2180      	movs	r1, #128	; 0x80
 8014dca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014dcc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014dce:	18eb      	adds	r3, r5, r3
 8014dd0:	4283      	cmp	r3, r0
 8014dd2:	f73f ae90 	bgt.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014dd6:	9b08      	ldr	r3, [sp, #32]
 8014dd8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014dda:	445b      	add	r3, fp
 8014ddc:	4283      	cmp	r3, r0
 8014dde:	f73f ae8a 	bgt.w	8014af6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8014de2:	6810      	ldr	r0, [r2, #0]
 8014de4:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8014de8:	6805      	ldr	r5, [r0, #0]
 8014dea:	9105      	str	r1, [sp, #20]
 8014dec:	f1b8 0f08 	cmp.w	r8, #8
 8014df0:	bf18      	it	ne
 8014df2:	3401      	addne	r4, #1
 8014df4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014df6:	9104      	str	r1, [sp, #16]
 8014df8:	bf18      	it	ne
 8014dfa:	f024 0401 	bicne.w	r4, r4, #1
 8014dfe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014e00:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8014e04:	bf18      	it	ne
 8014e06:	b2a4      	uxthne	r4, r4
 8014e08:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8014e0c:	e9cd 4b00 	strd	r4, fp, [sp]
 8014e10:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8014e12:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8014e14:	47a0      	blx	r4
 8014e16:	b019      	add	sp, #100	; 0x64
 8014e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e1e:	2b00      	cmp	r3, #0
 8014e20:	f47f af5e 	bne.w	8014ce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8014e24:	23ff      	movs	r3, #255	; 0xff
 8014e26:	930a      	str	r3, [sp, #40]	; 0x28
 8014e28:	2301      	movs	r3, #1
 8014e2a:	46c1      	mov	r9, r8
 8014e2c:	9307      	str	r3, [sp, #28]
 8014e2e:	e688      	b.n	8014b42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8014e30:	2000d358 	.word	0x2000d358

08014e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014e34:	b538      	push	{r3, r4, r5, lr}
 8014e36:	4c15      	ldr	r4, [pc, #84]	; (8014e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014e38:	7823      	ldrb	r3, [r4, #0]
 8014e3a:	f3bf 8f5b 	dmb	ish
 8014e3e:	07da      	lsls	r2, r3, #31
 8014e40:	4605      	mov	r5, r0
 8014e42:	d40b      	bmi.n	8014e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014e44:	4620      	mov	r0, r4
 8014e46:	f009 f8a2 	bl	801df8e <__cxa_guard_acquire>
 8014e4a:	b138      	cbz	r0, 8014e5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014e4c:	4620      	mov	r0, r4
 8014e4e:	f009 f8aa 	bl	801dfa6 <__cxa_guard_release>
 8014e52:	4a0f      	ldr	r2, [pc, #60]	; (8014e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014e54:	490f      	ldr	r1, [pc, #60]	; (8014e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8014e56:	4810      	ldr	r0, [pc, #64]	; (8014e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014e58:	f009 f892 	bl	801df80 <__aeabi_atexit>
 8014e5c:	4c0f      	ldr	r4, [pc, #60]	; (8014e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8014e5e:	7823      	ldrb	r3, [r4, #0]
 8014e60:	f3bf 8f5b 	dmb	ish
 8014e64:	07db      	lsls	r3, r3, #31
 8014e66:	d40b      	bmi.n	8014e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014e68:	4620      	mov	r0, r4
 8014e6a:	f009 f890 	bl	801df8e <__cxa_guard_acquire>
 8014e6e:	b138      	cbz	r0, 8014e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8014e70:	4620      	mov	r0, r4
 8014e72:	f009 f898 	bl	801dfa6 <__cxa_guard_release>
 8014e76:	4a06      	ldr	r2, [pc, #24]	; (8014e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014e78:	4909      	ldr	r1, [pc, #36]	; (8014ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8014e7a:	480a      	ldr	r0, [pc, #40]	; (8014ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014e7c:	f009 f880 	bl	801df80 <__aeabi_atexit>
 8014e80:	4b05      	ldr	r3, [pc, #20]	; (8014e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014e82:	612b      	str	r3, [r5, #16]
 8014e84:	4b07      	ldr	r3, [pc, #28]	; (8014ea4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8014e86:	616b      	str	r3, [r5, #20]
 8014e88:	bd38      	pop	{r3, r4, r5, pc}
 8014e8a:	bf00      	nop
 8014e8c:	2000d444 	.word	0x2000d444
 8014e90:	20000000 	.word	0x20000000
 8014e94:	08013429 	.word	0x08013429
 8014e98:	200000a4 	.word	0x200000a4
 8014e9c:	2000d448 	.word	0x2000d448
 8014ea0:	08013427 	.word	0x08013427
 8014ea4:	200000a8 	.word	0x200000a8

08014ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8014ea8:	b538      	push	{r3, r4, r5, lr}
 8014eaa:	4c15      	ldr	r4, [pc, #84]	; (8014f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8014eac:	7823      	ldrb	r3, [r4, #0]
 8014eae:	f3bf 8f5b 	dmb	ish
 8014eb2:	07da      	lsls	r2, r3, #31
 8014eb4:	4605      	mov	r5, r0
 8014eb6:	d40b      	bmi.n	8014ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014eb8:	4620      	mov	r0, r4
 8014eba:	f009 f868 	bl	801df8e <__cxa_guard_acquire>
 8014ebe:	b138      	cbz	r0, 8014ed0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8014ec0:	4620      	mov	r0, r4
 8014ec2:	f009 f870 	bl	801dfa6 <__cxa_guard_release>
 8014ec6:	4a0f      	ldr	r2, [pc, #60]	; (8014f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014ec8:	490f      	ldr	r1, [pc, #60]	; (8014f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8014eca:	4810      	ldr	r0, [pc, #64]	; (8014f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014ecc:	f009 f858 	bl	801df80 <__aeabi_atexit>
 8014ed0:	4c0f      	ldr	r4, [pc, #60]	; (8014f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8014ed2:	7823      	ldrb	r3, [r4, #0]
 8014ed4:	f3bf 8f5b 	dmb	ish
 8014ed8:	07db      	lsls	r3, r3, #31
 8014eda:	d40b      	bmi.n	8014ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014edc:	4620      	mov	r0, r4
 8014ede:	f009 f856 	bl	801df8e <__cxa_guard_acquire>
 8014ee2:	b138      	cbz	r0, 8014ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014ee4:	4620      	mov	r0, r4
 8014ee6:	f009 f85e 	bl	801dfa6 <__cxa_guard_release>
 8014eea:	4a06      	ldr	r2, [pc, #24]	; (8014f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014eec:	4909      	ldr	r1, [pc, #36]	; (8014f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8014eee:	480a      	ldr	r0, [pc, #40]	; (8014f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014ef0:	f009 f846 	bl	801df80 <__aeabi_atexit>
 8014ef4:	4b05      	ldr	r3, [pc, #20]	; (8014f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014ef6:	60ab      	str	r3, [r5, #8]
 8014ef8:	4b07      	ldr	r3, [pc, #28]	; (8014f18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014efa:	60eb      	str	r3, [r5, #12]
 8014efc:	bd38      	pop	{r3, r4, r5, pc}
 8014efe:	bf00      	nop
 8014f00:	2000d41c 	.word	0x2000d41c
 8014f04:	20000000 	.word	0x20000000
 8014f08:	0801342d 	.word	0x0801342d
 8014f0c:	2000007c 	.word	0x2000007c
 8014f10:	2000d420 	.word	0x2000d420
 8014f14:	0801342b 	.word	0x0801342b
 8014f18:	20000080 	.word	0x20000080

08014f1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014f1c:	b510      	push	{r4, lr}
 8014f1e:	4604      	mov	r4, r0
 8014f20:	f7ff ff88 	bl	8014e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014f24:	4620      	mov	r0, r4
 8014f26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014f2a:	f7ff bfbd 	b.w	8014ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08014f30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8014f30:	b538      	push	{r3, r4, r5, lr}
 8014f32:	4c15      	ldr	r4, [pc, #84]	; (8014f88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014f34:	7823      	ldrb	r3, [r4, #0]
 8014f36:	f3bf 8f5b 	dmb	ish
 8014f3a:	07da      	lsls	r2, r3, #31
 8014f3c:	4605      	mov	r5, r0
 8014f3e:	d40b      	bmi.n	8014f58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014f40:	4620      	mov	r0, r4
 8014f42:	f009 f824 	bl	801df8e <__cxa_guard_acquire>
 8014f46:	b138      	cbz	r0, 8014f58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014f48:	4620      	mov	r0, r4
 8014f4a:	f009 f82c 	bl	801dfa6 <__cxa_guard_release>
 8014f4e:	4a0f      	ldr	r2, [pc, #60]	; (8014f8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014f50:	490f      	ldr	r1, [pc, #60]	; (8014f90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8014f52:	4810      	ldr	r0, [pc, #64]	; (8014f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014f54:	f009 f814 	bl	801df80 <__aeabi_atexit>
 8014f58:	4c0f      	ldr	r4, [pc, #60]	; (8014f98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8014f5a:	7823      	ldrb	r3, [r4, #0]
 8014f5c:	f3bf 8f5b 	dmb	ish
 8014f60:	07db      	lsls	r3, r3, #31
 8014f62:	d40b      	bmi.n	8014f7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014f64:	4620      	mov	r0, r4
 8014f66:	f009 f812 	bl	801df8e <__cxa_guard_acquire>
 8014f6a:	b138      	cbz	r0, 8014f7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8014f6c:	4620      	mov	r0, r4
 8014f6e:	f009 f81a 	bl	801dfa6 <__cxa_guard_release>
 8014f72:	4a06      	ldr	r2, [pc, #24]	; (8014f8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8014f74:	4909      	ldr	r1, [pc, #36]	; (8014f9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8014f76:	480a      	ldr	r0, [pc, #40]	; (8014fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014f78:	f009 f802 	bl	801df80 <__aeabi_atexit>
 8014f7c:	4b05      	ldr	r3, [pc, #20]	; (8014f94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014f7e:	622b      	str	r3, [r5, #32]
 8014f80:	4b07      	ldr	r3, [pc, #28]	; (8014fa0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8014f82:	626b      	str	r3, [r5, #36]	; 0x24
 8014f84:	bd38      	pop	{r3, r4, r5, pc}
 8014f86:	bf00      	nop
 8014f88:	2000d44c 	.word	0x2000d44c
 8014f8c:	20000000 	.word	0x20000000
 8014f90:	08013421 	.word	0x08013421
 8014f94:	200000ac 	.word	0x200000ac
 8014f98:	2000d450 	.word	0x2000d450
 8014f9c:	0801341f 	.word	0x0801341f
 8014fa0:	200000b0 	.word	0x200000b0

08014fa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8014fa4:	b538      	push	{r3, r4, r5, lr}
 8014fa6:	4c15      	ldr	r4, [pc, #84]	; (8014ffc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8014fa8:	7823      	ldrb	r3, [r4, #0]
 8014faa:	f3bf 8f5b 	dmb	ish
 8014fae:	07da      	lsls	r2, r3, #31
 8014fb0:	4605      	mov	r5, r0
 8014fb2:	d40b      	bmi.n	8014fcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014fb4:	4620      	mov	r0, r4
 8014fb6:	f008 ffea 	bl	801df8e <__cxa_guard_acquire>
 8014fba:	b138      	cbz	r0, 8014fcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8014fbc:	4620      	mov	r0, r4
 8014fbe:	f008 fff2 	bl	801dfa6 <__cxa_guard_release>
 8014fc2:	4a0f      	ldr	r2, [pc, #60]	; (8015000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014fc4:	490f      	ldr	r1, [pc, #60]	; (8015004 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8014fc6:	4810      	ldr	r0, [pc, #64]	; (8015008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014fc8:	f008 ffda 	bl	801df80 <__aeabi_atexit>
 8014fcc:	4c0f      	ldr	r4, [pc, #60]	; (801500c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8014fce:	7823      	ldrb	r3, [r4, #0]
 8014fd0:	f3bf 8f5b 	dmb	ish
 8014fd4:	07db      	lsls	r3, r3, #31
 8014fd6:	d40b      	bmi.n	8014ff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014fd8:	4620      	mov	r0, r4
 8014fda:	f008 ffd8 	bl	801df8e <__cxa_guard_acquire>
 8014fde:	b138      	cbz	r0, 8014ff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014fe0:	4620      	mov	r0, r4
 8014fe2:	f008 ffe0 	bl	801dfa6 <__cxa_guard_release>
 8014fe6:	4a06      	ldr	r2, [pc, #24]	; (8015000 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014fe8:	4909      	ldr	r1, [pc, #36]	; (8015010 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8014fea:	480a      	ldr	r0, [pc, #40]	; (8015014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014fec:	f008 ffc8 	bl	801df80 <__aeabi_atexit>
 8014ff0:	4b05      	ldr	r3, [pc, #20]	; (8015008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014ff2:	61ab      	str	r3, [r5, #24]
 8014ff4:	4b07      	ldr	r3, [pc, #28]	; (8015014 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014ff6:	61eb      	str	r3, [r5, #28]
 8014ff8:	bd38      	pop	{r3, r4, r5, pc}
 8014ffa:	bf00      	nop
 8014ffc:	2000d424 	.word	0x2000d424
 8015000:	20000000 	.word	0x20000000
 8015004:	08013425 	.word	0x08013425
 8015008:	20000084 	.word	0x20000084
 801500c:	2000d428 	.word	0x2000d428
 8015010:	08013423 	.word	0x08013423
 8015014:	20000088 	.word	0x20000088

08015018 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8015018:	b510      	push	{r4, lr}
 801501a:	4604      	mov	r4, r0
 801501c:	f7ff ff88 	bl	8014f30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8015020:	4620      	mov	r0, r4
 8015022:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015026:	f7ff bfbd 	b.w	8014fa4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801502c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801502c:	b538      	push	{r3, r4, r5, lr}
 801502e:	4c15      	ldr	r4, [pc, #84]	; (8015084 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8015030:	7823      	ldrb	r3, [r4, #0]
 8015032:	f3bf 8f5b 	dmb	ish
 8015036:	07da      	lsls	r2, r3, #31
 8015038:	4605      	mov	r5, r0
 801503a:	d40b      	bmi.n	8015054 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801503c:	4620      	mov	r0, r4
 801503e:	f008 ffa6 	bl	801df8e <__cxa_guard_acquire>
 8015042:	b138      	cbz	r0, 8015054 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015044:	4620      	mov	r0, r4
 8015046:	f008 ffae 	bl	801dfa6 <__cxa_guard_release>
 801504a:	4a0f      	ldr	r2, [pc, #60]	; (8015088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801504c:	490f      	ldr	r1, [pc, #60]	; (801508c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801504e:	4810      	ldr	r0, [pc, #64]	; (8015090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8015050:	f008 ff96 	bl	801df80 <__aeabi_atexit>
 8015054:	4c0f      	ldr	r4, [pc, #60]	; (8015094 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015056:	7823      	ldrb	r3, [r4, #0]
 8015058:	f3bf 8f5b 	dmb	ish
 801505c:	07db      	lsls	r3, r3, #31
 801505e:	d40b      	bmi.n	8015078 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015060:	4620      	mov	r0, r4
 8015062:	f008 ff94 	bl	801df8e <__cxa_guard_acquire>
 8015066:	b138      	cbz	r0, 8015078 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8015068:	4620      	mov	r0, r4
 801506a:	f008 ff9c 	bl	801dfa6 <__cxa_guard_release>
 801506e:	4a06      	ldr	r2, [pc, #24]	; (8015088 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015070:	4909      	ldr	r1, [pc, #36]	; (8015098 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8015072:	480a      	ldr	r0, [pc, #40]	; (801509c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8015074:	f008 ff84 	bl	801df80 <__aeabi_atexit>
 8015078:	4b05      	ldr	r3, [pc, #20]	; (8015090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801507a:	632b      	str	r3, [r5, #48]	; 0x30
 801507c:	4b07      	ldr	r3, [pc, #28]	; (801509c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801507e:	636b      	str	r3, [r5, #52]	; 0x34
 8015080:	bd38      	pop	{r3, r4, r5, pc}
 8015082:	bf00      	nop
 8015084:	2000d45c 	.word	0x2000d45c
 8015088:	20000000 	.word	0x20000000
 801508c:	08013419 	.word	0x08013419
 8015090:	200000bc 	.word	0x200000bc
 8015094:	2000d460 	.word	0x2000d460
 8015098:	08013417 	.word	0x08013417
 801509c:	200000c0 	.word	0x200000c0

080150a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80150a0:	b538      	push	{r3, r4, r5, lr}
 80150a2:	4c15      	ldr	r4, [pc, #84]	; (80150f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80150a4:	7823      	ldrb	r3, [r4, #0]
 80150a6:	f3bf 8f5b 	dmb	ish
 80150aa:	07da      	lsls	r2, r3, #31
 80150ac:	4605      	mov	r5, r0
 80150ae:	d40b      	bmi.n	80150c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80150b0:	4620      	mov	r0, r4
 80150b2:	f008 ff6c 	bl	801df8e <__cxa_guard_acquire>
 80150b6:	b138      	cbz	r0, 80150c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80150b8:	4620      	mov	r0, r4
 80150ba:	f008 ff74 	bl	801dfa6 <__cxa_guard_release>
 80150be:	4a0f      	ldr	r2, [pc, #60]	; (80150fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80150c0:	490f      	ldr	r1, [pc, #60]	; (8015100 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80150c2:	4810      	ldr	r0, [pc, #64]	; (8015104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80150c4:	f008 ff5c 	bl	801df80 <__aeabi_atexit>
 80150c8:	4c0f      	ldr	r4, [pc, #60]	; (8015108 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80150ca:	7823      	ldrb	r3, [r4, #0]
 80150cc:	f3bf 8f5b 	dmb	ish
 80150d0:	07db      	lsls	r3, r3, #31
 80150d2:	d40b      	bmi.n	80150ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80150d4:	4620      	mov	r0, r4
 80150d6:	f008 ff5a 	bl	801df8e <__cxa_guard_acquire>
 80150da:	b138      	cbz	r0, 80150ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80150dc:	4620      	mov	r0, r4
 80150de:	f008 ff62 	bl	801dfa6 <__cxa_guard_release>
 80150e2:	4a06      	ldr	r2, [pc, #24]	; (80150fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80150e4:	4909      	ldr	r1, [pc, #36]	; (801510c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80150e6:	480a      	ldr	r0, [pc, #40]	; (8015110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80150e8:	f008 ff4a 	bl	801df80 <__aeabi_atexit>
 80150ec:	4b05      	ldr	r3, [pc, #20]	; (8015104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80150ee:	62ab      	str	r3, [r5, #40]	; 0x28
 80150f0:	4b07      	ldr	r3, [pc, #28]	; (8015110 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80150f2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80150f4:	bd38      	pop	{r3, r4, r5, pc}
 80150f6:	bf00      	nop
 80150f8:	2000d42c 	.word	0x2000d42c
 80150fc:	20000000 	.word	0x20000000
 8015100:	0801341d 	.word	0x0801341d
 8015104:	2000008c 	.word	0x2000008c
 8015108:	2000d430 	.word	0x2000d430
 801510c:	0801341b 	.word	0x0801341b
 8015110:	20000090 	.word	0x20000090

08015114 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8015114:	b510      	push	{r4, lr}
 8015116:	4604      	mov	r4, r0
 8015118:	f7ff ff88 	bl	801502c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801511c:	4620      	mov	r0, r4
 801511e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015122:	f7ff bfbd 	b.w	80150a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08015128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8015128:	b538      	push	{r3, r4, r5, lr}
 801512a:	4c15      	ldr	r4, [pc, #84]	; (8015180 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801512c:	7823      	ldrb	r3, [r4, #0]
 801512e:	f3bf 8f5b 	dmb	ish
 8015132:	07da      	lsls	r2, r3, #31
 8015134:	4605      	mov	r5, r0
 8015136:	d40b      	bmi.n	8015150 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015138:	4620      	mov	r0, r4
 801513a:	f008 ff28 	bl	801df8e <__cxa_guard_acquire>
 801513e:	b138      	cbz	r0, 8015150 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015140:	4620      	mov	r0, r4
 8015142:	f008 ff30 	bl	801dfa6 <__cxa_guard_release>
 8015146:	4a0f      	ldr	r2, [pc, #60]	; (8015184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015148:	490f      	ldr	r1, [pc, #60]	; (8015188 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801514a:	4810      	ldr	r0, [pc, #64]	; (801518c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801514c:	f008 ff18 	bl	801df80 <__aeabi_atexit>
 8015150:	4c0f      	ldr	r4, [pc, #60]	; (8015190 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8015152:	7823      	ldrb	r3, [r4, #0]
 8015154:	f3bf 8f5b 	dmb	ish
 8015158:	07db      	lsls	r3, r3, #31
 801515a:	d40b      	bmi.n	8015174 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801515c:	4620      	mov	r0, r4
 801515e:	f008 ff16 	bl	801df8e <__cxa_guard_acquire>
 8015162:	b138      	cbz	r0, 8015174 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015164:	4620      	mov	r0, r4
 8015166:	f008 ff1e 	bl	801dfa6 <__cxa_guard_release>
 801516a:	4a06      	ldr	r2, [pc, #24]	; (8015184 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801516c:	4909      	ldr	r1, [pc, #36]	; (8015194 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801516e:	480a      	ldr	r0, [pc, #40]	; (8015198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8015170:	f008 ff06 	bl	801df80 <__aeabi_atexit>
 8015174:	4b05      	ldr	r3, [pc, #20]	; (801518c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015176:	652b      	str	r3, [r5, #80]	; 0x50
 8015178:	4b07      	ldr	r3, [pc, #28]	; (8015198 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801517a:	656b      	str	r3, [r5, #84]	; 0x54
 801517c:	bd38      	pop	{r3, r4, r5, pc}
 801517e:	bf00      	nop
 8015180:	2000d464 	.word	0x2000d464
 8015184:	20000000 	.word	0x20000000
 8015188:	08013409 	.word	0x08013409
 801518c:	200000c4 	.word	0x200000c4
 8015190:	2000d468 	.word	0x2000d468
 8015194:	08013407 	.word	0x08013407
 8015198:	200000c8 	.word	0x200000c8

0801519c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801519c:	b538      	push	{r3, r4, r5, lr}
 801519e:	4c15      	ldr	r4, [pc, #84]	; (80151f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80151a0:	7823      	ldrb	r3, [r4, #0]
 80151a2:	f3bf 8f5b 	dmb	ish
 80151a6:	07da      	lsls	r2, r3, #31
 80151a8:	4605      	mov	r5, r0
 80151aa:	d40b      	bmi.n	80151c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80151ac:	4620      	mov	r0, r4
 80151ae:	f008 feee 	bl	801df8e <__cxa_guard_acquire>
 80151b2:	b138      	cbz	r0, 80151c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80151b4:	4620      	mov	r0, r4
 80151b6:	f008 fef6 	bl	801dfa6 <__cxa_guard_release>
 80151ba:	4a0f      	ldr	r2, [pc, #60]	; (80151f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80151bc:	490f      	ldr	r1, [pc, #60]	; (80151fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80151be:	4810      	ldr	r0, [pc, #64]	; (8015200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80151c0:	f008 fede 	bl	801df80 <__aeabi_atexit>
 80151c4:	4c0f      	ldr	r4, [pc, #60]	; (8015204 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80151c6:	7823      	ldrb	r3, [r4, #0]
 80151c8:	f3bf 8f5b 	dmb	ish
 80151cc:	07db      	lsls	r3, r3, #31
 80151ce:	d40b      	bmi.n	80151e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80151d0:	4620      	mov	r0, r4
 80151d2:	f008 fedc 	bl	801df8e <__cxa_guard_acquire>
 80151d6:	b138      	cbz	r0, 80151e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80151d8:	4620      	mov	r0, r4
 80151da:	f008 fee4 	bl	801dfa6 <__cxa_guard_release>
 80151de:	4a06      	ldr	r2, [pc, #24]	; (80151f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80151e0:	4909      	ldr	r1, [pc, #36]	; (8015208 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80151e2:	480a      	ldr	r0, [pc, #40]	; (801520c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80151e4:	f008 fecc 	bl	801df80 <__aeabi_atexit>
 80151e8:	4b05      	ldr	r3, [pc, #20]	; (8015200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80151ea:	64ab      	str	r3, [r5, #72]	; 0x48
 80151ec:	4b07      	ldr	r3, [pc, #28]	; (801520c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80151ee:	64eb      	str	r3, [r5, #76]	; 0x4c
 80151f0:	bd38      	pop	{r3, r4, r5, pc}
 80151f2:	bf00      	nop
 80151f4:	2000d46c 	.word	0x2000d46c
 80151f8:	20000000 	.word	0x20000000
 80151fc:	0801340d 	.word	0x0801340d
 8015200:	200000cc 	.word	0x200000cc
 8015204:	2000d470 	.word	0x2000d470
 8015208:	0801340b 	.word	0x0801340b
 801520c:	200000d0 	.word	0x200000d0

08015210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8015210:	b538      	push	{r3, r4, r5, lr}
 8015212:	4c15      	ldr	r4, [pc, #84]	; (8015268 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8015214:	7823      	ldrb	r3, [r4, #0]
 8015216:	f3bf 8f5b 	dmb	ish
 801521a:	07da      	lsls	r2, r3, #31
 801521c:	4605      	mov	r5, r0
 801521e:	d40b      	bmi.n	8015238 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015220:	4620      	mov	r0, r4
 8015222:	f008 feb4 	bl	801df8e <__cxa_guard_acquire>
 8015226:	b138      	cbz	r0, 8015238 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015228:	4620      	mov	r0, r4
 801522a:	f008 febc 	bl	801dfa6 <__cxa_guard_release>
 801522e:	4a0f      	ldr	r2, [pc, #60]	; (801526c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015230:	490f      	ldr	r1, [pc, #60]	; (8015270 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8015232:	4810      	ldr	r0, [pc, #64]	; (8015274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015234:	f008 fea4 	bl	801df80 <__aeabi_atexit>
 8015238:	4c0f      	ldr	r4, [pc, #60]	; (8015278 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801523a:	7823      	ldrb	r3, [r4, #0]
 801523c:	f3bf 8f5b 	dmb	ish
 8015240:	07db      	lsls	r3, r3, #31
 8015242:	d40b      	bmi.n	801525c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015244:	4620      	mov	r0, r4
 8015246:	f008 fea2 	bl	801df8e <__cxa_guard_acquire>
 801524a:	b138      	cbz	r0, 801525c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801524c:	4620      	mov	r0, r4
 801524e:	f008 feaa 	bl	801dfa6 <__cxa_guard_release>
 8015252:	4a06      	ldr	r2, [pc, #24]	; (801526c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015254:	4909      	ldr	r1, [pc, #36]	; (801527c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8015256:	480a      	ldr	r0, [pc, #40]	; (8015280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015258:	f008 fe92 	bl	801df80 <__aeabi_atexit>
 801525c:	4b05      	ldr	r3, [pc, #20]	; (8015274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801525e:	642b      	str	r3, [r5, #64]	; 0x40
 8015260:	4b07      	ldr	r3, [pc, #28]	; (8015280 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015262:	646b      	str	r3, [r5, #68]	; 0x44
 8015264:	bd38      	pop	{r3, r4, r5, pc}
 8015266:	bf00      	nop
 8015268:	2000d434 	.word	0x2000d434
 801526c:	20000000 	.word	0x20000000
 8015270:	08013411 	.word	0x08013411
 8015274:	20000094 	.word	0x20000094
 8015278:	2000d438 	.word	0x2000d438
 801527c:	0801340f 	.word	0x0801340f
 8015280:	20000098 	.word	0x20000098

08015284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015284:	b538      	push	{r3, r4, r5, lr}
 8015286:	4c15      	ldr	r4, [pc, #84]	; (80152dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015288:	7823      	ldrb	r3, [r4, #0]
 801528a:	f3bf 8f5b 	dmb	ish
 801528e:	07da      	lsls	r2, r3, #31
 8015290:	4605      	mov	r5, r0
 8015292:	d40b      	bmi.n	80152ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015294:	4620      	mov	r0, r4
 8015296:	f008 fe7a 	bl	801df8e <__cxa_guard_acquire>
 801529a:	b138      	cbz	r0, 80152ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801529c:	4620      	mov	r0, r4
 801529e:	f008 fe82 	bl	801dfa6 <__cxa_guard_release>
 80152a2:	4a0f      	ldr	r2, [pc, #60]	; (80152e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80152a4:	490f      	ldr	r1, [pc, #60]	; (80152e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80152a6:	4810      	ldr	r0, [pc, #64]	; (80152e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80152a8:	f008 fe6a 	bl	801df80 <__aeabi_atexit>
 80152ac:	4c0f      	ldr	r4, [pc, #60]	; (80152ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80152ae:	7823      	ldrb	r3, [r4, #0]
 80152b0:	f3bf 8f5b 	dmb	ish
 80152b4:	07db      	lsls	r3, r3, #31
 80152b6:	d40b      	bmi.n	80152d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80152b8:	4620      	mov	r0, r4
 80152ba:	f008 fe68 	bl	801df8e <__cxa_guard_acquire>
 80152be:	b138      	cbz	r0, 80152d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80152c0:	4620      	mov	r0, r4
 80152c2:	f008 fe70 	bl	801dfa6 <__cxa_guard_release>
 80152c6:	4a06      	ldr	r2, [pc, #24]	; (80152e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80152c8:	4909      	ldr	r1, [pc, #36]	; (80152f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80152ca:	480a      	ldr	r0, [pc, #40]	; (80152f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80152cc:	f008 fe58 	bl	801df80 <__aeabi_atexit>
 80152d0:	4b05      	ldr	r3, [pc, #20]	; (80152e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80152d2:	63ab      	str	r3, [r5, #56]	; 0x38
 80152d4:	4b07      	ldr	r3, [pc, #28]	; (80152f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80152d6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80152d8:	bd38      	pop	{r3, r4, r5, pc}
 80152da:	bf00      	nop
 80152dc:	2000d454 	.word	0x2000d454
 80152e0:	20000000 	.word	0x20000000
 80152e4:	08013415 	.word	0x08013415
 80152e8:	200000b4 	.word	0x200000b4
 80152ec:	2000d458 	.word	0x2000d458
 80152f0:	08013413 	.word	0x08013413
 80152f4:	200000b8 	.word	0x200000b8

080152f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80152f8:	b510      	push	{r4, lr}
 80152fa:	4604      	mov	r4, r0
 80152fc:	f7ff ff14 	bl	8015128 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8015300:	4620      	mov	r0, r4
 8015302:	f7ff ff85 	bl	8015210 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8015306:	4620      	mov	r0, r4
 8015308:	f7ff ff48 	bl	801519c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801530c:	4620      	mov	r0, r4
 801530e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015312:	f7ff bfb7 	b.w	8015284 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08015318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8015318:	b538      	push	{r3, r4, r5, lr}
 801531a:	4c15      	ldr	r4, [pc, #84]	; (8015370 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801531c:	7823      	ldrb	r3, [r4, #0]
 801531e:	f3bf 8f5b 	dmb	ish
 8015322:	07da      	lsls	r2, r3, #31
 8015324:	4605      	mov	r5, r0
 8015326:	d40b      	bmi.n	8015340 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015328:	4620      	mov	r0, r4
 801532a:	f008 fe30 	bl	801df8e <__cxa_guard_acquire>
 801532e:	b138      	cbz	r0, 8015340 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015330:	4620      	mov	r0, r4
 8015332:	f008 fe38 	bl	801dfa6 <__cxa_guard_release>
 8015336:	4a0f      	ldr	r2, [pc, #60]	; (8015374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015338:	490f      	ldr	r1, [pc, #60]	; (8015378 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801533a:	4810      	ldr	r0, [pc, #64]	; (801537c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801533c:	f008 fe20 	bl	801df80 <__aeabi_atexit>
 8015340:	4c0f      	ldr	r4, [pc, #60]	; (8015380 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8015342:	7823      	ldrb	r3, [r4, #0]
 8015344:	f3bf 8f5b 	dmb	ish
 8015348:	07db      	lsls	r3, r3, #31
 801534a:	d40b      	bmi.n	8015364 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801534c:	4620      	mov	r0, r4
 801534e:	f008 fe1e 	bl	801df8e <__cxa_guard_acquire>
 8015352:	b138      	cbz	r0, 8015364 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015354:	4620      	mov	r0, r4
 8015356:	f008 fe26 	bl	801dfa6 <__cxa_guard_release>
 801535a:	4a06      	ldr	r2, [pc, #24]	; (8015374 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801535c:	4909      	ldr	r1, [pc, #36]	; (8015384 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801535e:	480a      	ldr	r0, [pc, #40]	; (8015388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015360:	f008 fe0e 	bl	801df80 <__aeabi_atexit>
 8015364:	4b05      	ldr	r3, [pc, #20]	; (801537c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015366:	662b      	str	r3, [r5, #96]	; 0x60
 8015368:	4b07      	ldr	r3, [pc, #28]	; (8015388 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801536a:	666b      	str	r3, [r5, #100]	; 0x64
 801536c:	bd38      	pop	{r3, r4, r5, pc}
 801536e:	bf00      	nop
 8015370:	2000d43c 	.word	0x2000d43c
 8015374:	20000000 	.word	0x20000000
 8015378:	08013401 	.word	0x08013401
 801537c:	2000009c 	.word	0x2000009c
 8015380:	2000d440 	.word	0x2000d440
 8015384:	080133ff 	.word	0x080133ff
 8015388:	200000a0 	.word	0x200000a0

0801538c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801538c:	b538      	push	{r3, r4, r5, lr}
 801538e:	4c15      	ldr	r4, [pc, #84]	; (80153e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015390:	7823      	ldrb	r3, [r4, #0]
 8015392:	f3bf 8f5b 	dmb	ish
 8015396:	07da      	lsls	r2, r3, #31
 8015398:	4605      	mov	r5, r0
 801539a:	d40b      	bmi.n	80153b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801539c:	4620      	mov	r0, r4
 801539e:	f008 fdf6 	bl	801df8e <__cxa_guard_acquire>
 80153a2:	b138      	cbz	r0, 80153b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80153a4:	4620      	mov	r0, r4
 80153a6:	f008 fdfe 	bl	801dfa6 <__cxa_guard_release>
 80153aa:	4a0f      	ldr	r2, [pc, #60]	; (80153e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80153ac:	490f      	ldr	r1, [pc, #60]	; (80153ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80153ae:	4810      	ldr	r0, [pc, #64]	; (80153f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80153b0:	f008 fde6 	bl	801df80 <__aeabi_atexit>
 80153b4:	4c0f      	ldr	r4, [pc, #60]	; (80153f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80153b6:	7823      	ldrb	r3, [r4, #0]
 80153b8:	f3bf 8f5b 	dmb	ish
 80153bc:	07db      	lsls	r3, r3, #31
 80153be:	d40b      	bmi.n	80153d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80153c0:	4620      	mov	r0, r4
 80153c2:	f008 fde4 	bl	801df8e <__cxa_guard_acquire>
 80153c6:	b138      	cbz	r0, 80153d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80153c8:	4620      	mov	r0, r4
 80153ca:	f008 fdec 	bl	801dfa6 <__cxa_guard_release>
 80153ce:	4a06      	ldr	r2, [pc, #24]	; (80153e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80153d0:	4909      	ldr	r1, [pc, #36]	; (80153f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80153d2:	480a      	ldr	r0, [pc, #40]	; (80153fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80153d4:	f008 fdd4 	bl	801df80 <__aeabi_atexit>
 80153d8:	4b05      	ldr	r3, [pc, #20]	; (80153f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80153da:	65ab      	str	r3, [r5, #88]	; 0x58
 80153dc:	4b07      	ldr	r3, [pc, #28]	; (80153fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80153de:	65eb      	str	r3, [r5, #92]	; 0x5c
 80153e0:	bd38      	pop	{r3, r4, r5, pc}
 80153e2:	bf00      	nop
 80153e4:	2000d414 	.word	0x2000d414
 80153e8:	20000000 	.word	0x20000000
 80153ec:	08013405 	.word	0x08013405
 80153f0:	20000074 	.word	0x20000074
 80153f4:	2000d418 	.word	0x2000d418
 80153f8:	08013403 	.word	0x08013403
 80153fc:	20000078 	.word	0x20000078

08015400 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8015400:	b510      	push	{r4, lr}
 8015402:	4604      	mov	r4, r0
 8015404:	f7ff ff88 	bl	8015318 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8015408:	4620      	mov	r0, r4
 801540a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801540e:	f7ff bfbd 	b.w	801538c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08015414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8015414:	b538      	push	{r3, r4, r5, lr}
 8015416:	4c15      	ldr	r4, [pc, #84]	; (801546c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8015418:	7823      	ldrb	r3, [r4, #0]
 801541a:	f3bf 8f5b 	dmb	ish
 801541e:	07da      	lsls	r2, r3, #31
 8015420:	4605      	mov	r5, r0
 8015422:	d40b      	bmi.n	801543c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015424:	4620      	mov	r0, r4
 8015426:	f008 fdb2 	bl	801df8e <__cxa_guard_acquire>
 801542a:	b138      	cbz	r0, 801543c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801542c:	4620      	mov	r0, r4
 801542e:	f008 fdba 	bl	801dfa6 <__cxa_guard_release>
 8015432:	4a0f      	ldr	r2, [pc, #60]	; (8015470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015434:	490f      	ldr	r1, [pc, #60]	; (8015474 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8015436:	4810      	ldr	r0, [pc, #64]	; (8015478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015438:	f008 fda2 	bl	801df80 <__aeabi_atexit>
 801543c:	4c0f      	ldr	r4, [pc, #60]	; (801547c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801543e:	7823      	ldrb	r3, [r4, #0]
 8015440:	f3bf 8f5b 	dmb	ish
 8015444:	07db      	lsls	r3, r3, #31
 8015446:	d40b      	bmi.n	8015460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015448:	4620      	mov	r0, r4
 801544a:	f008 fda0 	bl	801df8e <__cxa_guard_acquire>
 801544e:	b138      	cbz	r0, 8015460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015450:	4620      	mov	r0, r4
 8015452:	f008 fda8 	bl	801dfa6 <__cxa_guard_release>
 8015456:	4a06      	ldr	r2, [pc, #24]	; (8015470 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015458:	4909      	ldr	r1, [pc, #36]	; (8015480 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801545a:	480a      	ldr	r0, [pc, #40]	; (8015484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801545c:	f008 fd90 	bl	801df80 <__aeabi_atexit>
 8015460:	4b05      	ldr	r3, [pc, #20]	; (8015478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015462:	672b      	str	r3, [r5, #112]	; 0x70
 8015464:	4b07      	ldr	r3, [pc, #28]	; (8015484 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015466:	676b      	str	r3, [r5, #116]	; 0x74
 8015468:	bd38      	pop	{r3, r4, r5, pc}
 801546a:	bf00      	nop
 801546c:	2000d40c 	.word	0x2000d40c
 8015470:	20000000 	.word	0x20000000
 8015474:	080133f9 	.word	0x080133f9
 8015478:	2000006c 	.word	0x2000006c
 801547c:	2000d410 	.word	0x2000d410
 8015480:	080133f7 	.word	0x080133f7
 8015484:	20000070 	.word	0x20000070

08015488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015488:	b538      	push	{r3, r4, r5, lr}
 801548a:	4c15      	ldr	r4, [pc, #84]	; (80154e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801548c:	7823      	ldrb	r3, [r4, #0]
 801548e:	f3bf 8f5b 	dmb	ish
 8015492:	07da      	lsls	r2, r3, #31
 8015494:	4605      	mov	r5, r0
 8015496:	d40b      	bmi.n	80154b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015498:	4620      	mov	r0, r4
 801549a:	f008 fd78 	bl	801df8e <__cxa_guard_acquire>
 801549e:	b138      	cbz	r0, 80154b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80154a0:	4620      	mov	r0, r4
 80154a2:	f008 fd80 	bl	801dfa6 <__cxa_guard_release>
 80154a6:	4a0f      	ldr	r2, [pc, #60]	; (80154e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80154a8:	490f      	ldr	r1, [pc, #60]	; (80154e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80154aa:	4810      	ldr	r0, [pc, #64]	; (80154ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80154ac:	f008 fd68 	bl	801df80 <__aeabi_atexit>
 80154b0:	4c0f      	ldr	r4, [pc, #60]	; (80154f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80154b2:	7823      	ldrb	r3, [r4, #0]
 80154b4:	f3bf 8f5b 	dmb	ish
 80154b8:	07db      	lsls	r3, r3, #31
 80154ba:	d40b      	bmi.n	80154d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80154bc:	4620      	mov	r0, r4
 80154be:	f008 fd66 	bl	801df8e <__cxa_guard_acquire>
 80154c2:	b138      	cbz	r0, 80154d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80154c4:	4620      	mov	r0, r4
 80154c6:	f008 fd6e 	bl	801dfa6 <__cxa_guard_release>
 80154ca:	4a06      	ldr	r2, [pc, #24]	; (80154e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80154cc:	4909      	ldr	r1, [pc, #36]	; (80154f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80154ce:	480a      	ldr	r0, [pc, #40]	; (80154f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80154d0:	f008 fd56 	bl	801df80 <__aeabi_atexit>
 80154d4:	4b05      	ldr	r3, [pc, #20]	; (80154ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80154d6:	66ab      	str	r3, [r5, #104]	; 0x68
 80154d8:	4b07      	ldr	r3, [pc, #28]	; (80154f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80154da:	66eb      	str	r3, [r5, #108]	; 0x6c
 80154dc:	bd38      	pop	{r3, r4, r5, pc}
 80154de:	bf00      	nop
 80154e0:	2000d404 	.word	0x2000d404
 80154e4:	20000000 	.word	0x20000000
 80154e8:	080133fd 	.word	0x080133fd
 80154ec:	20000064 	.word	0x20000064
 80154f0:	2000d408 	.word	0x2000d408
 80154f4:	080133fb 	.word	0x080133fb
 80154f8:	20000068 	.word	0x20000068

080154fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80154fc:	b510      	push	{r4, lr}
 80154fe:	4604      	mov	r4, r0
 8015500:	f7ff ff88 	bl	8015414 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8015504:	4620      	mov	r0, r4
 8015506:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801550a:	f7ff bfbd 	b.w	8015488 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801550e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801550e:	b510      	push	{r4, lr}
 8015510:	4604      	mov	r4, r0
 8015512:	f7ff fff3 	bl	80154fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8015516:	4620      	mov	r0, r4
 8015518:	f7ff ff72 	bl	8015400 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801551c:	4620      	mov	r0, r4
 801551e:	f7ff fdf9 	bl	8015114 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8015522:	4620      	mov	r0, r4
 8015524:	f7ff fcfa 	bl	8014f1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8015528:	4620      	mov	r0, r4
 801552a:	f7ff fd75 	bl	8015018 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801552e:	4620      	mov	r0, r4
 8015530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015534:	f7ff bee0 	b.w	80152f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08015538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8015538:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801553c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8015540:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8015544:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8015548:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801554c:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8015550:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8015554:	8808      	ldrh	r0, [r1, #0]
 8015556:	fb0e 4708 	mla	r7, lr, r8, r4
 801555a:	f1be 0f00 	cmp.w	lr, #0
 801555e:	eb02 0a07 	add.w	sl, r2, r7
 8015562:	db37      	blt.n	80155d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015564:	45f3      	cmp	fp, lr
 8015566:	dd35      	ble.n	80155d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8015568:	2c00      	cmp	r4, #0
 801556a:	db31      	blt.n	80155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801556c:	45a0      	cmp	r8, r4
 801556e:	dd2f      	ble.n	80155d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8015570:	5dd2      	ldrb	r2, [r2, r7]
 8015572:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8015576:	1c62      	adds	r2, r4, #1
 8015578:	d42f      	bmi.n	80155da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801557a:	4590      	cmp	r8, r2
 801557c:	dd2d      	ble.n	80155da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801557e:	b366      	cbz	r6, 80155da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8015580:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015584:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015588:	f11e 0e01 	adds.w	lr, lr, #1
 801558c:	d429      	bmi.n	80155e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801558e:	45f3      	cmp	fp, lr
 8015590:	dd27      	ble.n	80155e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8015592:	f1bc 0f00 	cmp.w	ip, #0
 8015596:	f000 80a0 	beq.w	80156da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 801559a:	2c00      	cmp	r4, #0
 801559c:	db1f      	blt.n	80155de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801559e:	45a0      	cmp	r8, r4
 80155a0:	dd1d      	ble.n	80155de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80155a2:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80155a6:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80155aa:	3401      	adds	r4, #1
 80155ac:	d41c      	bmi.n	80155e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80155ae:	45a0      	cmp	r8, r4
 80155b0:	dd1a      	ble.n	80155e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80155b2:	b1de      	cbz	r6, 80155ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80155b4:	44d0      	add	r8, sl
 80155b6:	f898 2001 	ldrb.w	r2, [r8, #1]
 80155ba:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80155be:	2e0f      	cmp	r6, #15
 80155c0:	d915      	bls.n	80155ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80155c2:	4b49      	ldr	r3, [pc, #292]	; (80156e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80155c4:	4a49      	ldr	r2, [pc, #292]	; (80156ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80155c6:	484a      	ldr	r0, [pc, #296]	; (80156f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80155c8:	f240 11ef 	movw	r1, #495	; 0x1ef
 80155cc:	f008 fd0c 	bl	801dfe8 <__assert_func>
 80155d0:	4681      	mov	r9, r0
 80155d2:	e7d0      	b.n	8015576 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80155d4:	4607      	mov	r7, r0
 80155d6:	4681      	mov	r9, r0
 80155d8:	e7d6      	b.n	8015588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80155da:	4607      	mov	r7, r0
 80155dc:	e7d4      	b.n	8015588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80155de:	4686      	mov	lr, r0
 80155e0:	e7e3      	b.n	80155aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80155e2:	4603      	mov	r3, r0
 80155e4:	4686      	mov	lr, r0
 80155e6:	e7ea      	b.n	80155be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80155e8:	4603      	mov	r3, r0
 80155ea:	e7e8      	b.n	80155be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80155ec:	4603      	mov	r3, r0
 80155ee:	f1bc 0f0f 	cmp.w	ip, #15
 80155f2:	d8e6      	bhi.n	80155c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80155f4:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80155f8:	fb16 f80c 	smulbb	r8, r6, ip
 80155fc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015600:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8015604:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015608:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801560c:	ea44 0909 	orr.w	r9, r4, r9
 8015610:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015614:	f1cc 0410 	rsb	r4, ip, #16
 8015618:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801561c:	1ba4      	subs	r4, r4, r6
 801561e:	041a      	lsls	r2, r3, #16
 8015620:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8015624:	ea4a 0707 	orr.w	r7, sl, r7
 8015628:	4377      	muls	r7, r6
 801562a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801562e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8015632:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015636:	fb04 7409 	mla	r4, r4, r9, r7
 801563a:	4313      	orrs	r3, r2
 801563c:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8015640:	fb08 4303 	mla	r3, r8, r3, r4
 8015644:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015648:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 801564c:	4322      	orrs	r2, r4
 801564e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015652:	fb0c 3202 	mla	r2, ip, r2, r3
 8015656:	0d53      	lsrs	r3, r2, #21
 8015658:	0952      	lsrs	r2, r2, #5
 801565a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801565e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015662:	431a      	orrs	r2, r3
 8015664:	b293      	uxth	r3, r2
 8015666:	b2af      	uxth	r7, r5
 8015668:	1202      	asrs	r2, r0, #8
 801566a:	43ed      	mvns	r5, r5
 801566c:	b2ed      	uxtb	r5, r5
 801566e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015672:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015676:	fb12 f205 	smulbb	r2, r2, r5
 801567a:	10c6      	asrs	r6, r0, #3
 801567c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015680:	fb0c 2c07 	mla	ip, ip, r7, r2
 8015684:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015688:	10da      	asrs	r2, r3, #3
 801568a:	fb16 f605 	smulbb	r6, r6, r5
 801568e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015692:	fb02 6207 	mla	r2, r2, r7, r6
 8015696:	b296      	uxth	r6, r2
 8015698:	00c2      	lsls	r2, r0, #3
 801569a:	00dc      	lsls	r4, r3, #3
 801569c:	b2d2      	uxtb	r2, r2
 801569e:	b2e4      	uxtb	r4, r4
 80156a0:	fb12 f205 	smulbb	r2, r2, r5
 80156a4:	fb04 2207 	mla	r2, r4, r7, r2
 80156a8:	fa1f fc8c 	uxth.w	ip, ip
 80156ac:	b292      	uxth	r2, r2
 80156ae:	f10c 0301 	add.w	r3, ip, #1
 80156b2:	1c50      	adds	r0, r2, #1
 80156b4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80156b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80156bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80156c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80156c4:	4313      	orrs	r3, r2
 80156c6:	1c72      	adds	r2, r6, #1
 80156c8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80156cc:	0952      	lsrs	r2, r2, #5
 80156ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80156d2:	4313      	orrs	r3, r2
 80156d4:	800b      	strh	r3, [r1, #0]
 80156d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156da:	2e0f      	cmp	r6, #15
 80156dc:	f63f af71 	bhi.w	80155c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80156e0:	4603      	mov	r3, r0
 80156e2:	4686      	mov	lr, r0
 80156e4:	e786      	b.n	80155f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80156e6:	bf00      	nop
 80156e8:	0802254f 	.word	0x0802254f
 80156ec:	08022bb6 	.word	0x08022bb6
 80156f0:	08022638 	.word	0x08022638

080156f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80156f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156f8:	ed2d 8b08 	vpush	{d8-d11}
 80156fc:	b099      	sub	sp, #100	; 0x64
 80156fe:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8015702:	9215      	str	r2, [sp, #84]	; 0x54
 8015704:	9309      	str	r3, [sp, #36]	; 0x24
 8015706:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015708:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801570c:	930d      	str	r3, [sp, #52]	; 0x34
 801570e:	910c      	str	r1, [sp, #48]	; 0x30
 8015710:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8015714:	9016      	str	r0, [sp, #88]	; 0x58
 8015716:	6850      	ldr	r0, [r2, #4]
 8015718:	6812      	ldr	r2, [r2, #0]
 801571a:	fb00 1303 	mla	r3, r0, r3, r1
 801571e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8015722:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015724:	681b      	ldr	r3, [r3, #0]
 8015726:	930b      	str	r3, [sp, #44]	; 0x2c
 8015728:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801572a:	685e      	ldr	r6, [r3, #4]
 801572c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801572e:	43db      	mvns	r3, r3
 8015730:	b2db      	uxtb	r3, r3
 8015732:	eeb0 aa40 	vmov.f32	s20, s0
 8015736:	eef0 9a60 	vmov.f32	s19, s1
 801573a:	eeb0 9a41 	vmov.f32	s18, s2
 801573e:	eeb0 8a62 	vmov.f32	s16, s5
 8015742:	eef0 8a43 	vmov.f32	s17, s6
 8015746:	eef0 ba44 	vmov.f32	s23, s8
 801574a:	eeb0 ba64 	vmov.f32	s22, s9
 801574e:	eef0 aa45 	vmov.f32	s21, s10
 8015752:	3604      	adds	r6, #4
 8015754:	930a      	str	r3, [sp, #40]	; 0x28
 8015756:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015758:	2b00      	cmp	r3, #0
 801575a:	dc03      	bgt.n	8015764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801575c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801575e:	2b00      	cmp	r3, #0
 8015760:	f340 8226 	ble.w	8015bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8015764:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015766:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801576a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801576e:	1e48      	subs	r0, r1, #1
 8015770:	1e57      	subs	r7, r2, #1
 8015772:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015774:	2b00      	cmp	r3, #0
 8015776:	f340 80e4 	ble.w	8015942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801577a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801577e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015782:	d406      	bmi.n	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015784:	4584      	cmp	ip, r0
 8015786:	da04      	bge.n	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015788:	2b00      	cmp	r3, #0
 801578a:	db02      	blt.n	8015792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801578c:	42bb      	cmp	r3, r7
 801578e:	f2c0 80d9 	blt.w	8015944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015792:	f11c 0c01 	adds.w	ip, ip, #1
 8015796:	f100 80ca 	bmi.w	801592e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801579a:	4561      	cmp	r1, ip
 801579c:	f2c0 80c7 	blt.w	801592e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80157a0:	3301      	adds	r3, #1
 80157a2:	f100 80c4 	bmi.w	801592e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80157a6:	429a      	cmp	r2, r3
 80157a8:	f2c0 80c1 	blt.w	801592e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80157ac:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80157b0:	4647      	mov	r7, r8
 80157b2:	f1bb 0f00 	cmp.w	fp, #0
 80157b6:	f340 80e4 	ble.w	8015982 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80157ba:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80157bc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80157be:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80157c2:	689b      	ldr	r3, [r3, #8]
 80157c4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80157c8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80157cc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80157d0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80157d4:	f100 8122 	bmi.w	8015a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80157d8:	f103 39ff 	add.w	r9, r3, #4294967295
 80157dc:	454a      	cmp	r2, r9
 80157de:	f280 811d 	bge.w	8015a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80157e2:	f1bc 0f00 	cmp.w	ip, #0
 80157e6:	f2c0 8119 	blt.w	8015a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80157ea:	f10e 39ff 	add.w	r9, lr, #4294967295
 80157ee:	45cc      	cmp	ip, r9
 80157f0:	f280 8114 	bge.w	8015a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80157f4:	b21b      	sxth	r3, r3
 80157f6:	fb0c 2203 	mla	r2, ip, r3, r2
 80157fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80157fc:	eb04 0902 	add.w	r9, r4, r2
 8015800:	5ca2      	ldrb	r2, [r4, r2]
 8015802:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8015806:	2800      	cmp	r0, #0
 8015808:	f000 80ff 	beq.w	8015a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 801580c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015810:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8015814:	9211      	str	r2, [sp, #68]	; 0x44
 8015816:	b151      	cbz	r1, 801582e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015818:	eb09 0203 	add.w	r2, r9, r3
 801581c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015820:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015824:	930f      	str	r3, [sp, #60]	; 0x3c
 8015826:	7853      	ldrb	r3, [r2, #1]
 8015828:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801582c:	9312      	str	r3, [sp, #72]	; 0x48
 801582e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015830:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015832:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015836:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801583a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801583e:	ea4c 0c03 	orr.w	ip, ip, r3
 8015842:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015844:	041b      	lsls	r3, r3, #16
 8015846:	fb10 f201 	smulbb	r2, r0, r1
 801584a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801584e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015852:	10d2      	asrs	r2, r2, #3
 8015854:	4323      	orrs	r3, r4
 8015856:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801585a:	4353      	muls	r3, r2
 801585c:	fb09 330c 	mla	r3, r9, ip, r3
 8015860:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015864:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015868:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801586c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015870:	f1c1 0c10 	rsb	ip, r1, #16
 8015874:	ebac 0c00 	sub.w	ip, ip, r0
 8015878:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801587c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015880:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015882:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015884:	0418      	lsls	r0, r3, #16
 8015886:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801588a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801588e:	4318      	orrs	r0, r3
 8015890:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015894:	fb02 c200 	mla	r2, r2, r0, ip
 8015898:	0d53      	lsrs	r3, r2, #21
 801589a:	0952      	lsrs	r2, r2, #5
 801589c:	f8b7 c000 	ldrh.w	ip, [r7]
 80158a0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80158a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80158a8:	431a      	orrs	r2, r3
 80158aa:	b292      	uxth	r2, r2
 80158ac:	ea4f 212c 	mov.w	r1, ip, asr #8
 80158b0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80158b4:	1210      	asrs	r0, r2, #8
 80158b6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80158ba:	fb11 f104 	smulbb	r1, r1, r4
 80158be:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80158c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80158c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80158ca:	fb00 1003 	mla	r0, r0, r3, r1
 80158ce:	fa5f fc8c 	uxtb.w	ip, ip
 80158d2:	10d1      	asrs	r1, r2, #3
 80158d4:	00d2      	lsls	r2, r2, #3
 80158d6:	fb1c fc04 	smulbb	ip, ip, r4
 80158da:	b2d2      	uxtb	r2, r2
 80158dc:	fb02 c203 	mla	r2, r2, r3, ip
 80158e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80158e4:	b280      	uxth	r0, r0
 80158e6:	b292      	uxth	r2, r2
 80158e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80158ec:	fb1e fe04 	smulbb	lr, lr, r4
 80158f0:	fb01 e103 	mla	r1, r1, r3, lr
 80158f4:	f102 0c01 	add.w	ip, r2, #1
 80158f8:	1c43      	adds	r3, r0, #1
 80158fa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80158fe:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015902:	b289      	uxth	r1, r1
 8015904:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015908:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801590c:	4313      	orrs	r3, r2
 801590e:	1c4a      	adds	r2, r1, #1
 8015910:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015914:	0949      	lsrs	r1, r1, #5
 8015916:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801591a:	430b      	orrs	r3, r1
 801591c:	803b      	strh	r3, [r7, #0]
 801591e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015920:	449a      	add	sl, r3
 8015922:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015924:	3702      	adds	r7, #2
 8015926:	441d      	add	r5, r3
 8015928:	f10b 3bff 	add.w	fp, fp, #4294967295
 801592c:	e741      	b.n	80157b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801592e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015930:	449a      	add	sl, r3
 8015932:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015934:	441d      	add	r5, r3
 8015936:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015938:	3b01      	subs	r3, #1
 801593a:	9309      	str	r3, [sp, #36]	; 0x24
 801593c:	f108 0802 	add.w	r8, r8, #2
 8015940:	e717      	b.n	8015772 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015942:	d023      	beq.n	801598c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8015944:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015946:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8015948:	3b01      	subs	r3, #1
 801594a:	fb00 a003 	mla	r0, r0, r3, sl
 801594e:	1400      	asrs	r0, r0, #16
 8015950:	f53f af2c 	bmi.w	80157ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015954:	3901      	subs	r1, #1
 8015956:	4288      	cmp	r0, r1
 8015958:	f6bf af28 	bge.w	80157ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801595c:	992e      	ldr	r1, [sp, #184]	; 0xb8
 801595e:	fb01 5303 	mla	r3, r1, r3, r5
 8015962:	141b      	asrs	r3, r3, #16
 8015964:	f53f af22 	bmi.w	80157ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015968:	3a01      	subs	r2, #1
 801596a:	4293      	cmp	r3, r2
 801596c:	f6bf af1e 	bge.w	80157ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8015970:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015974:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8015978:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801597c:	f1be 0f00 	cmp.w	lr, #0
 8015980:	dc6c      	bgt.n	8015a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8015982:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015984:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015988:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801598c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801598e:	2b00      	cmp	r3, #0
 8015990:	f340 810e 	ble.w	8015bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8015994:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015998:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801599c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80159a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80159a2:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80159a6:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80159aa:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80159ae:	eef0 6a48 	vmov.f32	s13, s16
 80159b2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80159b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159ba:	ee37 8a48 	vsub.f32	s16, s14, s16
 80159be:	ee16 aa90 	vmov	sl, s13
 80159c2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80159c6:	eef0 6a68 	vmov.f32	s13, s17
 80159ca:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80159ce:	ee18 2a10 	vmov	r2, s16
 80159d2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80159d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80159da:	ee18 2a90 	vmov	r2, s17
 80159de:	932d      	str	r3, [sp, #180]	; 0xb4
 80159e0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80159e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159e6:	932e      	str	r3, [sp, #184]	; 0xb8
 80159e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80159ea:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80159ec:	3b01      	subs	r3, #1
 80159ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80159f2:	930c      	str	r3, [sp, #48]	; 0x30
 80159f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80159f6:	bf08      	it	eq
 80159f8:	4613      	moveq	r3, r2
 80159fa:	ee16 5a90 	vmov	r5, s13
 80159fe:	9309      	str	r3, [sp, #36]	; 0x24
 8015a00:	eef0 8a67 	vmov.f32	s17, s15
 8015a04:	eeb0 8a47 	vmov.f32	s16, s14
 8015a08:	e6a5      	b.n	8015756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015a0a:	2900      	cmp	r1, #0
 8015a0c:	f43f af0f 	beq.w	801582e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015a10:	f819 3003 	ldrb.w	r3, [r9, r3]
 8015a14:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015a18:	930f      	str	r3, [sp, #60]	; 0x3c
 8015a1a:	e708      	b.n	801582e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8015a1c:	f112 0901 	adds.w	r9, r2, #1
 8015a20:	f53f af7d 	bmi.w	801591e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015a24:	454b      	cmp	r3, r9
 8015a26:	f6ff af7a 	blt.w	801591e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015a2a:	f11c 0901 	adds.w	r9, ip, #1
 8015a2e:	f53f af76 	bmi.w	801591e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015a32:	45ce      	cmp	lr, r9
 8015a34:	f6ff af73 	blt.w	801591e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015a38:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015a3a:	9202      	str	r2, [sp, #8]
 8015a3c:	b21b      	sxth	r3, r3
 8015a3e:	fa0f f28e 	sxth.w	r2, lr
 8015a42:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8015a46:	e9cd c003 	strd	ip, r0, [sp, #12]
 8015a4a:	9201      	str	r2, [sp, #4]
 8015a4c:	9300      	str	r3, [sp, #0]
 8015a4e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015a50:	9816      	ldr	r0, [sp, #88]	; 0x58
 8015a52:	4633      	mov	r3, r6
 8015a54:	4639      	mov	r1, r7
 8015a56:	f7ff fd6f 	bl	8015538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8015a5a:	e760      	b.n	801591e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015a5c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8015a5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015a60:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015a64:	ea4f 422a 	mov.w	r2, sl, asr #16
 8015a68:	1429      	asrs	r1, r5, #16
 8015a6a:	fb03 2101 	mla	r1, r3, r1, r2
 8015a6e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015a70:	440a      	add	r2, r1
 8015a72:	5c61      	ldrb	r1, [r4, r1]
 8015a74:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8015a78:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8015a7c:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8015a80:	f1bc 0f00 	cmp.w	ip, #0
 8015a84:	f000 808c 	beq.w	8015ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8015a88:	7857      	ldrb	r7, [r2, #1]
 8015a8a:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8015a8e:	9413      	str	r4, [sp, #76]	; 0x4c
 8015a90:	b140      	cbz	r0, 8015aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8015a92:	18d7      	adds	r7, r2, r3
 8015a94:	5cd3      	ldrb	r3, [r2, r3]
 8015a96:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015a9a:	9310      	str	r3, [sp, #64]	; 0x40
 8015a9c:	787b      	ldrb	r3, [r7, #1]
 8015a9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015aa2:	9314      	str	r3, [sp, #80]	; 0x50
 8015aa4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015aa6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015aa8:	fb1c f200 	smulbb	r2, ip, r0
 8015aac:	041f      	lsls	r7, r3, #16
 8015aae:	10d2      	asrs	r2, r2, #3
 8015ab0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015ab4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015ab8:	431f      	orrs	r7, r3
 8015aba:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8015abe:	9317      	str	r3, [sp, #92]	; 0x5c
 8015ac0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015ac2:	041b      	lsls	r3, r3, #16
 8015ac4:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8015ac8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015acc:	ea43 030b 	orr.w	r3, r3, fp
 8015ad0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8015ad2:	4353      	muls	r3, r2
 8015ad4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015ad8:	fb04 3707 	mla	r7, r4, r7, r3
 8015adc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015ae0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015ae4:	ea43 0b01 	orr.w	fp, r3, r1
 8015ae8:	f1c0 0110 	rsb	r1, r0, #16
 8015aec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015aee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015af0:	eba1 0c0c 	sub.w	ip, r1, ip
 8015af4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015af8:	fb0c 770b 	mla	r7, ip, fp, r7
 8015afc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015b00:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8015b04:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015b08:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8015b0c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015b10:	fb02 770c 	mla	r7, r2, ip, r7
 8015b14:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015b16:	0d79      	lsrs	r1, r7, #21
 8015b18:	097f      	lsrs	r7, r7, #5
 8015b1a:	8812      	ldrh	r2, [r2, #0]
 8015b1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015b20:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015b24:	430f      	orrs	r7, r1
 8015b26:	b2bb      	uxth	r3, r7
 8015b28:	1211      	asrs	r1, r2, #8
 8015b2a:	1218      	asrs	r0, r3, #8
 8015b2c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015b30:	fb11 f104 	smulbb	r1, r1, r4
 8015b34:	10d7      	asrs	r7, r2, #3
 8015b36:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015b3a:	00d2      	lsls	r2, r2, #3
 8015b3c:	fb00 1009 	mla	r0, r0, r9, r1
 8015b40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015b44:	10d9      	asrs	r1, r3, #3
 8015b46:	b2d2      	uxtb	r2, r2
 8015b48:	00db      	lsls	r3, r3, #3
 8015b4a:	fb17 f704 	smulbb	r7, r7, r4
 8015b4e:	fb12 f204 	smulbb	r2, r2, r4
 8015b52:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015b56:	b2db      	uxtb	r3, r3
 8015b58:	b280      	uxth	r0, r0
 8015b5a:	fb01 7109 	mla	r1, r1, r9, r7
 8015b5e:	fb03 2309 	mla	r3, r3, r9, r2
 8015b62:	b29b      	uxth	r3, r3
 8015b64:	b289      	uxth	r1, r1
 8015b66:	1c42      	adds	r2, r0, #1
 8015b68:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015b6c:	1c4f      	adds	r7, r1, #1
 8015b6e:	1c5a      	adds	r2, r3, #1
 8015b70:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015b74:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8015b78:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015b7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015b80:	0949      	lsrs	r1, r1, #5
 8015b82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b84:	4310      	orrs	r0, r2
 8015b86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015b8a:	4308      	orrs	r0, r1
 8015b8c:	f823 0b02 	strh.w	r0, [r3], #2
 8015b90:	930e      	str	r3, [sp, #56]	; 0x38
 8015b92:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015b94:	449a      	add	sl, r3
 8015b96:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015b98:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015b9c:	441d      	add	r5, r3
 8015b9e:	e6ed      	b.n	801597c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ba0:	2800      	cmp	r0, #0
 8015ba2:	f43f af7f 	beq.w	8015aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8015ba6:	5cd3      	ldrb	r3, [r2, r3]
 8015ba8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8015bac:	9310      	str	r3, [sp, #64]	; 0x40
 8015bae:	e779      	b.n	8015aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8015bb0:	b019      	add	sp, #100	; 0x64
 8015bb2:	ecbd 8b08 	vpop	{d8-d11}
 8015bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8015bbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015bc0:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8015bc4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8015bc8:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8015bcc:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8015bd0:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8015bd4:	8808      	ldrh	r0, [r1, #0]
 8015bd6:	fb06 570e 	mla	r7, r6, lr, r5
 8015bda:	2e00      	cmp	r6, #0
 8015bdc:	eb02 0807 	add.w	r8, r2, r7
 8015be0:	db38      	blt.n	8015c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8015be2:	45b1      	cmp	r9, r6
 8015be4:	dd36      	ble.n	8015c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8015be6:	2d00      	cmp	r5, #0
 8015be8:	db32      	blt.n	8015c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8015bea:	45ae      	cmp	lr, r5
 8015bec:	dd30      	ble.n	8015c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8015bee:	5dd2      	ldrb	r2, [r2, r7]
 8015bf0:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015bf4:	1c6a      	adds	r2, r5, #1
 8015bf6:	d430      	bmi.n	8015c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015bf8:	4596      	cmp	lr, r2
 8015bfa:	dd2e      	ble.n	8015c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015bfc:	b36c      	cbz	r4, 8015c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8015bfe:	f898 2001 	ldrb.w	r2, [r8, #1]
 8015c02:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015c06:	3601      	adds	r6, #1
 8015c08:	d42b      	bmi.n	8015c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8015c0a:	45b1      	cmp	r9, r6
 8015c0c:	dd29      	ble.n	8015c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8015c0e:	f1bc 0f00 	cmp.w	ip, #0
 8015c12:	d028      	beq.n	8015c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8015c14:	2d00      	cmp	r5, #0
 8015c16:	db22      	blt.n	8015c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8015c18:	45ae      	cmp	lr, r5
 8015c1a:	dd20      	ble.n	8015c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8015c1c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8015c20:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8015c24:	3501      	adds	r5, #1
 8015c26:	d407      	bmi.n	8015c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015c28:	45ae      	cmp	lr, r5
 8015c2a:	dd05      	ble.n	8015c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015c2c:	b134      	cbz	r4, 8015c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015c2e:	44c6      	add	lr, r8
 8015c30:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015c34:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8015c38:	2c0f      	cmp	r4, #15
 8015c3a:	d802      	bhi.n	8015c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015c3c:	f1bc 0f0f 	cmp.w	ip, #15
 8015c40:	d914      	bls.n	8015c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8015c42:	4b26      	ldr	r3, [pc, #152]	; (8015cdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8015c44:	4a26      	ldr	r2, [pc, #152]	; (8015ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8015c46:	4827      	ldr	r0, [pc, #156]	; (8015ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8015c48:	f240 11ef 	movw	r1, #495	; 0x1ef
 8015c4c:	f008 f9cc 	bl	801dfe8 <__assert_func>
 8015c50:	4607      	mov	r7, r0
 8015c52:	e7cf      	b.n	8015bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8015c54:	4602      	mov	r2, r0
 8015c56:	4607      	mov	r7, r0
 8015c58:	e7d5      	b.n	8015c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8015c5a:	4602      	mov	r2, r0
 8015c5c:	e7d3      	b.n	8015c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8015c5e:	4606      	mov	r6, r0
 8015c60:	e7e0      	b.n	8015c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8015c62:	4606      	mov	r6, r0
 8015c64:	e7e8      	b.n	8015c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8015c66:	2c0f      	cmp	r4, #15
 8015c68:	d8eb      	bhi.n	8015c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015c6a:	4606      	mov	r6, r0
 8015c6c:	043d      	lsls	r5, r7, #16
 8015c6e:	fb14 f30c 	smulbb	r3, r4, ip
 8015c72:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8015c76:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8015c7a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015c7e:	10db      	asrs	r3, r3, #3
 8015c80:	432f      	orrs	r7, r5
 8015c82:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015c86:	f1cc 0510 	rsb	r5, ip, #16
 8015c8a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015c8e:	1b2d      	subs	r5, r5, r4
 8015c90:	ea4e 0202 	orr.w	r2, lr, r2
 8015c94:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8015c98:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8015c9c:	4354      	muls	r4, r2
 8015c9e:	fb05 4507 	mla	r5, r5, r7, r4
 8015ca2:	0404      	lsls	r4, r0, #16
 8015ca4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015ca8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015cac:	4320      	orrs	r0, r4
 8015cae:	fb03 5400 	mla	r4, r3, r0, r5
 8015cb2:	0430      	lsls	r0, r6, #16
 8015cb4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015cb8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8015cbc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8015cc0:	4330      	orrs	r0, r6
 8015cc2:	fb03 4000 	mla	r0, r3, r0, r4
 8015cc6:	0d43      	lsrs	r3, r0, #21
 8015cc8:	0940      	lsrs	r0, r0, #5
 8015cca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015cce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015cd2:	4318      	orrs	r0, r3
 8015cd4:	8008      	strh	r0, [r1, #0]
 8015cd6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015cda:	bf00      	nop
 8015cdc:	0802254f 	.word	0x0802254f
 8015ce0:	08022bb6 	.word	0x08022bb6
 8015ce4:	08022638 	.word	0x08022638

08015ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cec:	ed2d 8b0a 	vpush	{d8-d12}
 8015cf0:	b093      	sub	sp, #76	; 0x4c
 8015cf2:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8015cf6:	920f      	str	r2, [sp, #60]	; 0x3c
 8015cf8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015cfa:	9108      	str	r1, [sp, #32]
 8015cfc:	9306      	str	r3, [sp, #24]
 8015cfe:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8015d02:	9010      	str	r0, [sp, #64]	; 0x40
 8015d04:	6850      	ldr	r0, [r2, #4]
 8015d06:	6812      	ldr	r2, [r2, #0]
 8015d08:	fb00 1303 	mla	r3, r0, r3, r1
 8015d0c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8015d10:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015d12:	681b      	ldr	r3, [r3, #0]
 8015d14:	9307      	str	r3, [sp, #28]
 8015d16:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015d18:	685f      	ldr	r7, [r3, #4]
 8015d1a:	eeb0 aa40 	vmov.f32	s20, s0
 8015d1e:	eef0 9a60 	vmov.f32	s19, s1
 8015d22:	eeb0 9a41 	vmov.f32	s18, s2
 8015d26:	eeb0 8a62 	vmov.f32	s16, s5
 8015d2a:	eef0 8a43 	vmov.f32	s17, s6
 8015d2e:	eeb0 ca44 	vmov.f32	s24, s8
 8015d32:	eef0 ba64 	vmov.f32	s23, s9
 8015d36:	eeb0 ba45 	vmov.f32	s22, s10
 8015d3a:	3704      	adds	r7, #4
 8015d3c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8015d40:	9b08      	ldr	r3, [sp, #32]
 8015d42:	2b00      	cmp	r3, #0
 8015d44:	dc03      	bgt.n	8015d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015d46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015d48:	2b00      	cmp	r3, #0
 8015d4a:	f340 81b2 	ble.w	80160b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015d4e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015d50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015d54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015d58:	1e48      	subs	r0, r1, #1
 8015d5a:	f102 3cff 	add.w	ip, r2, #4294967295
 8015d5e:	9b06      	ldr	r3, [sp, #24]
 8015d60:	2b00      	cmp	r3, #0
 8015d62:	f340 80a9 	ble.w	8015eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8015d66:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8015d6a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015d6e:	d406      	bmi.n	8015d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d70:	4586      	cmp	lr, r0
 8015d72:	da04      	bge.n	8015d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d74:	2b00      	cmp	r3, #0
 8015d76:	db02      	blt.n	8015d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015d78:	4563      	cmp	r3, ip
 8015d7a:	f2c0 809e 	blt.w	8015eba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015d7e:	f11e 0e01 	adds.w	lr, lr, #1
 8015d82:	f100 808f 	bmi.w	8015ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015d86:	4571      	cmp	r1, lr
 8015d88:	f2c0 808c 	blt.w	8015ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015d8c:	3301      	adds	r3, #1
 8015d8e:	f100 8089 	bmi.w	8015ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015d92:	429a      	cmp	r2, r3
 8015d94:	f2c0 8086 	blt.w	8015ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8015d98:	f8dd b018 	ldr.w	fp, [sp, #24]
 8015d9c:	46c8      	mov	r8, r9
 8015d9e:	f1bb 0f00 	cmp.w	fp, #0
 8015da2:	f340 80a6 	ble.w	8015ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8015da6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015da8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015daa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015dae:	689b      	ldr	r3, [r3, #8]
 8015db0:	1422      	asrs	r2, r4, #16
 8015db2:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8015db6:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8015dba:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015dbe:	f100 80e3 	bmi.w	8015f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015dc2:	f103 3aff 	add.w	sl, r3, #4294967295
 8015dc6:	4552      	cmp	r2, sl
 8015dc8:	f280 80de 	bge.w	8015f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015dcc:	f1bc 0f00 	cmp.w	ip, #0
 8015dd0:	f2c0 80da 	blt.w	8015f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015dd4:	f10e 3aff 	add.w	sl, lr, #4294967295
 8015dd8:	45d4      	cmp	ip, sl
 8015dda:	f280 80d5 	bge.w	8015f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8015dde:	b21b      	sxth	r3, r3
 8015de0:	fb0c 2203 	mla	r2, ip, r3, r2
 8015de4:	9d07      	ldr	r5, [sp, #28]
 8015de6:	eb05 0a02 	add.w	sl, r5, r2
 8015dea:	5caa      	ldrb	r2, [r5, r2]
 8015dec:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8015df0:	2800      	cmp	r0, #0
 8015df2:	f000 80c0 	beq.w	8015f76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8015df6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015dfa:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8015dfe:	920b      	str	r2, [sp, #44]	; 0x2c
 8015e00:	b151      	cbz	r1, 8015e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015e02:	eb0a 0203 	add.w	r2, sl, r3
 8015e06:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015e0a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015e0e:	9309      	str	r3, [sp, #36]	; 0x24
 8015e10:	7853      	ldrb	r3, [r2, #1]
 8015e12:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015e16:	930c      	str	r3, [sp, #48]	; 0x30
 8015e18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e1a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015e1c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8015e20:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015e24:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015e28:	ea4c 0c03 	orr.w	ip, ip, r3
 8015e2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e2e:	041b      	lsls	r3, r3, #16
 8015e30:	fb10 f201 	smulbb	r2, r0, r1
 8015e34:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015e38:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015e3c:	10d2      	asrs	r2, r2, #3
 8015e3e:	432b      	orrs	r3, r5
 8015e40:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8015e44:	4353      	muls	r3, r2
 8015e46:	fb0a 330c 	mla	r3, sl, ip, r3
 8015e4a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015e4e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015e52:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015e56:	ea4c 0e0e 	orr.w	lr, ip, lr
 8015e5a:	f1c1 0c10 	rsb	ip, r1, #16
 8015e5e:	ebac 0c00 	sub.w	ip, ip, r0
 8015e62:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015e66:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8015e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015e6c:	0418      	lsls	r0, r3, #16
 8015e6e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015e72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015e76:	4318      	orrs	r0, r3
 8015e78:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8015e7c:	fb02 c200 	mla	r2, r2, r0, ip
 8015e80:	0d53      	lsrs	r3, r2, #21
 8015e82:	0952      	lsrs	r2, r2, #5
 8015e84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015e88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015e8c:	431a      	orrs	r2, r3
 8015e8e:	f8a8 2000 	strh.w	r2, [r8]
 8015e92:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015e94:	441c      	add	r4, r3
 8015e96:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015e98:	f108 0802 	add.w	r8, r8, #2
 8015e9c:	441e      	add	r6, r3
 8015e9e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015ea2:	e77c      	b.n	8015d9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8015ea4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015ea6:	441c      	add	r4, r3
 8015ea8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015eaa:	441e      	add	r6, r3
 8015eac:	9b06      	ldr	r3, [sp, #24]
 8015eae:	3b01      	subs	r3, #1
 8015eb0:	9306      	str	r3, [sp, #24]
 8015eb2:	f109 0902 	add.w	r9, r9, #2
 8015eb6:	e752      	b.n	8015d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015eb8:	d020      	beq.n	8015efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015eba:	9b06      	ldr	r3, [sp, #24]
 8015ebc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8015ebe:	3b01      	subs	r3, #1
 8015ec0:	fb00 4003 	mla	r0, r0, r3, r4
 8015ec4:	1400      	asrs	r0, r0, #16
 8015ec6:	f53f af67 	bmi.w	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015eca:	3901      	subs	r1, #1
 8015ecc:	4288      	cmp	r0, r1
 8015ece:	f6bf af63 	bge.w	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015ed2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015ed4:	fb01 6303 	mla	r3, r1, r3, r6
 8015ed8:	141b      	asrs	r3, r3, #16
 8015eda:	f53f af5d 	bmi.w	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015ede:	3a01      	subs	r2, #1
 8015ee0:	4293      	cmp	r3, r2
 8015ee2:	f6bf af59 	bge.w	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015ee6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8015eea:	46ca      	mov	sl, r9
 8015eec:	f1b8 0f00 	cmp.w	r8, #0
 8015ef0:	dc67      	bgt.n	8015fc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8015ef2:	9b06      	ldr	r3, [sp, #24]
 8015ef4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8015ef8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8015efc:	9b08      	ldr	r3, [sp, #32]
 8015efe:	2b00      	cmp	r3, #0
 8015f00:	f340 80d7 	ble.w	80160b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015f04:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015f08:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015f0c:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8015f10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015f12:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015f16:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015f1a:	eef0 6a48 	vmov.f32	s13, s16
 8015f1e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015f22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f26:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015f2a:	ee16 4a90 	vmov	r4, s13
 8015f2e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015f32:	eef0 6a68 	vmov.f32	s13, s17
 8015f36:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015f3a:	ee18 2a10 	vmov	r2, s16
 8015f3e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015f42:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f46:	ee18 2a90 	vmov	r2, s17
 8015f4a:	9329      	str	r3, [sp, #164]	; 0xa4
 8015f4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015f4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f52:	932a      	str	r3, [sp, #168]	; 0xa8
 8015f54:	9b08      	ldr	r3, [sp, #32]
 8015f56:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015f58:	3b01      	subs	r3, #1
 8015f5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f5e:	9308      	str	r3, [sp, #32]
 8015f60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015f62:	bf08      	it	eq
 8015f64:	4613      	moveq	r3, r2
 8015f66:	ee16 6a90 	vmov	r6, s13
 8015f6a:	9306      	str	r3, [sp, #24]
 8015f6c:	eef0 8a67 	vmov.f32	s17, s15
 8015f70:	eeb0 8a47 	vmov.f32	s16, s14
 8015f74:	e6e4      	b.n	8015d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015f76:	2900      	cmp	r1, #0
 8015f78:	f43f af4e 	beq.w	8015e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015f7c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015f80:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015f84:	9309      	str	r3, [sp, #36]	; 0x24
 8015f86:	e747      	b.n	8015e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8015f88:	f112 0a01 	adds.w	sl, r2, #1
 8015f8c:	d481      	bmi.n	8015e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015f8e:	4553      	cmp	r3, sl
 8015f90:	f6ff af7f 	blt.w	8015e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015f94:	f11c 0a01 	adds.w	sl, ip, #1
 8015f98:	f53f af7b 	bmi.w	8015e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015f9c:	45d6      	cmp	lr, sl
 8015f9e:	f6ff af78 	blt.w	8015e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015fa2:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8015fa6:	b21b      	sxth	r3, r3
 8015fa8:	fa0f f28e 	sxth.w	r2, lr
 8015fac:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015fb0:	9201      	str	r2, [sp, #4]
 8015fb2:	9300      	str	r3, [sp, #0]
 8015fb4:	9a07      	ldr	r2, [sp, #28]
 8015fb6:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015fb8:	463b      	mov	r3, r7
 8015fba:	4641      	mov	r1, r8
 8015fbc:	f7ff fdfe 	bl	8015bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015fc0:	e767      	b.n	8015e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8015fc2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015fc4:	9d07      	ldr	r5, [sp, #28]
 8015fc6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8015fca:	1422      	asrs	r2, r4, #16
 8015fcc:	1431      	asrs	r1, r6, #16
 8015fce:	fb03 2101 	mla	r1, r3, r1, r2
 8015fd2:	9a07      	ldr	r2, [sp, #28]
 8015fd4:	440a      	add	r2, r1
 8015fd6:	5c69      	ldrb	r1, [r5, r1]
 8015fd8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8015fdc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015fe0:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8015fe4:	f1be 0f00 	cmp.w	lr, #0
 8015fe8:	d05c      	beq.n	80160a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8015fea:	f892 c001 	ldrb.w	ip, [r2, #1]
 8015fee:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8015ff2:	950d      	str	r5, [sp, #52]	; 0x34
 8015ff4:	b150      	cbz	r0, 801600c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8015ff6:	eb02 0c03 	add.w	ip, r2, r3
 8015ffa:	5cd3      	ldrb	r3, [r2, r3]
 8015ffc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016000:	930a      	str	r3, [sp, #40]	; 0x28
 8016002:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8016006:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801600a:	930e      	str	r3, [sp, #56]	; 0x38
 801600c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801600e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016010:	fb1e f200 	smulbb	r2, lr, r0
 8016014:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016018:	10d2      	asrs	r2, r2, #3
 801601a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801601e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016022:	ea4c 0c03 	orr.w	ip, ip, r3
 8016026:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801602a:	9311      	str	r3, [sp, #68]	; 0x44
 801602c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801602e:	041b      	lsls	r3, r3, #16
 8016030:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8016034:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016038:	ea43 030b 	orr.w	r3, r3, fp
 801603c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801603e:	4353      	muls	r3, r2
 8016040:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016044:	fb05 3c0c 	mla	ip, r5, ip, r3
 8016048:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801604c:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016050:	ea43 0b01 	orr.w	fp, r3, r1
 8016054:	f1c0 0110 	rsb	r1, r0, #16
 8016058:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801605a:	eba1 0e0e 	sub.w	lr, r1, lr
 801605e:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016062:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016066:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801606a:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801606e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016072:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016076:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801607a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801607e:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8016082:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016086:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801608a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801608e:	ea43 0c0c 	orr.w	ip, r3, ip
 8016092:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016094:	f82a cb02 	strh.w	ip, [sl], #2
 8016098:	441c      	add	r4, r3
 801609a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801609c:	f108 38ff 	add.w	r8, r8, #4294967295
 80160a0:	441e      	add	r6, r3
 80160a2:	e723      	b.n	8015eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80160a4:	2800      	cmp	r0, #0
 80160a6:	d0b1      	beq.n	801600c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80160a8:	5cd3      	ldrb	r3, [r2, r3]
 80160aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80160ae:	930a      	str	r3, [sp, #40]	; 0x28
 80160b0:	e7ac      	b.n	801600c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80160b2:	b013      	add	sp, #76	; 0x4c
 80160b4:	ecbd 8b0a 	vpop	{d8-d12}
 80160b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080160bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80160bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160c0:	468b      	mov	fp, r1
 80160c2:	8809      	ldrh	r1, [r1, #0]
 80160c4:	b089      	sub	sp, #36	; 0x24
 80160c6:	10cd      	asrs	r5, r1, #3
 80160c8:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80160cc:	ea4f 2921 	mov.w	r9, r1, asr #8
 80160d0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80160d4:	00c9      	lsls	r1, r1, #3
 80160d6:	9500      	str	r5, [sp, #0]
 80160d8:	b2c9      	uxtb	r1, r1
 80160da:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80160de:	9101      	str	r1, [sp, #4]
 80160e0:	9900      	ldr	r1, [sp, #0]
 80160e2:	9202      	str	r2, [sp, #8]
 80160e4:	fb04 650e 	mla	r5, r4, lr, r6
 80160e8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80160ec:	eb02 0805 	add.w	r8, r2, r5
 80160f0:	0209      	lsls	r1, r1, #8
 80160f2:	9a01      	ldr	r2, [sp, #4]
 80160f4:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80160f8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80160fc:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8016100:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8016104:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8016108:	4311      	orrs	r1, r2
 801610a:	2c00      	cmp	r4, #0
 801610c:	9107      	str	r1, [sp, #28]
 801610e:	db43      	blt.n	8016198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8016110:	45a2      	cmp	sl, r4
 8016112:	dd41      	ble.n	8016198 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8016114:	2e00      	cmp	r6, #0
 8016116:	db3d      	blt.n	8016194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8016118:	45b6      	cmp	lr, r6
 801611a:	dd3b      	ble.n	8016194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801611c:	9a02      	ldr	r2, [sp, #8]
 801611e:	5d55      	ldrb	r5, [r2, r5]
 8016120:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016124:	441d      	add	r5, r3
 8016126:	1c72      	adds	r2, r6, #1
 8016128:	d439      	bmi.n	801619e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801612a:	4596      	cmp	lr, r2
 801612c:	dd37      	ble.n	801619e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801612e:	2f00      	cmp	r7, #0
 8016130:	d035      	beq.n	801619e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8016132:	f898 1001 	ldrb.w	r1, [r8, #1]
 8016136:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801613a:	4419      	add	r1, r3
 801613c:	3401      	adds	r4, #1
 801613e:	d432      	bmi.n	80161a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8016140:	45a2      	cmp	sl, r4
 8016142:	dd30      	ble.n	80161a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8016144:	b378      	cbz	r0, 80161a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8016146:	2e00      	cmp	r6, #0
 8016148:	db2b      	blt.n	80161a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801614a:	45b6      	cmp	lr, r6
 801614c:	dd29      	ble.n	80161a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801614e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8016152:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016156:	441c      	add	r4, r3
 8016158:	3601      	adds	r6, #1
 801615a:	d427      	bmi.n	80161ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801615c:	45b6      	cmp	lr, r6
 801615e:	dd25      	ble.n	80161ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016160:	b327      	cbz	r7, 80161ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8016162:	44c6      	add	lr, r8
 8016164:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016168:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801616c:	4413      	add	r3, r2
 801616e:	782a      	ldrb	r2, [r5, #0]
 8016170:	9202      	str	r2, [sp, #8]
 8016172:	780a      	ldrb	r2, [r1, #0]
 8016174:	9203      	str	r2, [sp, #12]
 8016176:	7822      	ldrb	r2, [r4, #0]
 8016178:	9204      	str	r2, [sp, #16]
 801617a:	2f0f      	cmp	r7, #15
 801617c:	781a      	ldrb	r2, [r3, #0]
 801617e:	9205      	str	r2, [sp, #20]
 8016180:	d801      	bhi.n	8016186 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8016182:	280f      	cmp	r0, #15
 8016184:	d914      	bls.n	80161b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8016186:	4b3f      	ldr	r3, [pc, #252]	; (8016284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8016188:	4a3f      	ldr	r2, [pc, #252]	; (8016288 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801618a:	4840      	ldr	r0, [pc, #256]	; (801628c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801618c:	f240 210d 	movw	r1, #525	; 0x20d
 8016190:	f007 ff2a 	bl	801dfe8 <__assert_func>
 8016194:	ad07      	add	r5, sp, #28
 8016196:	e7c6      	b.n	8016126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8016198:	a907      	add	r1, sp, #28
 801619a:	460d      	mov	r5, r1
 801619c:	e7ce      	b.n	801613c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801619e:	a907      	add	r1, sp, #28
 80161a0:	e7cc      	b.n	801613c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80161a2:	ac07      	add	r4, sp, #28
 80161a4:	e7d8      	b.n	8016158 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80161a6:	ab07      	add	r3, sp, #28
 80161a8:	461c      	mov	r4, r3
 80161aa:	e7e0      	b.n	801616e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80161ac:	ab07      	add	r3, sp, #28
 80161ae:	e7de      	b.n	801616e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80161b0:	b2ba      	uxth	r2, r7
 80161b2:	b280      	uxth	r0, r0
 80161b4:	fb02 fa00 	mul.w	sl, r2, r0
 80161b8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80161bc:	0112      	lsls	r2, r2, #4
 80161be:	b280      	uxth	r0, r0
 80161c0:	f891 8002 	ldrb.w	r8, [r1, #2]
 80161c4:	7849      	ldrb	r1, [r1, #1]
 80161c6:	78ae      	ldrb	r6, [r5, #2]
 80161c8:	786d      	ldrb	r5, [r5, #1]
 80161ca:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80161ce:	eba2 020a 	sub.w	r2, r2, sl
 80161d2:	b292      	uxth	r2, r2
 80161d4:	ebae 0e00 	sub.w	lr, lr, r0
 80161d8:	fa1f fe8e 	uxth.w	lr, lr
 80161dc:	4351      	muls	r1, r2
 80161de:	fb02 f808 	mul.w	r8, r2, r8
 80161e2:	fb0e 8806 	mla	r8, lr, r6, r8
 80161e6:	fb0e 1505 	mla	r5, lr, r5, r1
 80161ea:	78a6      	ldrb	r6, [r4, #2]
 80161ec:	7861      	ldrb	r1, [r4, #1]
 80161ee:	fa1f f78c 	uxth.w	r7, ip
 80161f2:	fb00 8806 	mla	r8, r0, r6, r8
 80161f6:	fb00 5501 	mla	r5, r0, r1, r5
 80161fa:	789e      	ldrb	r6, [r3, #2]
 80161fc:	7859      	ldrb	r1, [r3, #1]
 80161fe:	9b00      	ldr	r3, [sp, #0]
 8016200:	ea6f 0c0c 	mvn.w	ip, ip
 8016204:	fa5f fc8c 	uxtb.w	ip, ip
 8016208:	fb0a 5101 	mla	r1, sl, r1, r5
 801620c:	fb13 f50c 	smulbb	r5, r3, ip
 8016210:	9b03      	ldr	r3, [sp, #12]
 8016212:	435a      	muls	r2, r3
 8016214:	9b02      	ldr	r3, [sp, #8]
 8016216:	fb0e 2203 	mla	r2, lr, r3, r2
 801621a:	9b04      	ldr	r3, [sp, #16]
 801621c:	fb00 2003 	mla	r0, r0, r3, r2
 8016220:	9b05      	ldr	r3, [sp, #20]
 8016222:	fb0a 8606 	mla	r6, sl, r6, r8
 8016226:	fb0a 0a03 	mla	sl, sl, r3, r0
 801622a:	9b01      	ldr	r3, [sp, #4]
 801622c:	fb19 f90c 	smulbb	r9, r9, ip
 8016230:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8016234:	fb13 fc0c 	smulbb	ip, r3, ip
 8016238:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801623c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016240:	fb06 9607 	mla	r6, r6, r7, r9
 8016244:	fb01 5107 	mla	r1, r1, r7, r5
 8016248:	fb0a c707 	mla	r7, sl, r7, ip
 801624c:	b2b6      	uxth	r6, r6
 801624e:	b289      	uxth	r1, r1
 8016250:	b2bf      	uxth	r7, r7
 8016252:	f106 0901 	add.w	r9, r6, #1
 8016256:	f107 0c01 	add.w	ip, r7, #1
 801625a:	1c4d      	adds	r5, r1, #1
 801625c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8016260:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8016264:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8016268:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801626c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016270:	0949      	lsrs	r1, r1, #5
 8016272:	433e      	orrs	r6, r7
 8016274:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016278:	430e      	orrs	r6, r1
 801627a:	f8ab 6000 	strh.w	r6, [fp]
 801627e:	b009      	add	sp, #36	; 0x24
 8016280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016284:	0802254f 	.word	0x0802254f
 8016288:	08022b0d 	.word	0x08022b0d
 801628c:	08022638 	.word	0x08022638

08016290 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016294:	ed2d 8b08 	vpush	{d8-d11}
 8016298:	b095      	sub	sp, #84	; 0x54
 801629a:	eeb0 aa40 	vmov.f32	s20, s0
 801629e:	9212      	str	r2, [sp, #72]	; 0x48
 80162a0:	9309      	str	r3, [sp, #36]	; 0x24
 80162a2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80162a4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80162a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80162aa:	910e      	str	r1, [sp, #56]	; 0x38
 80162ac:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80162b0:	9013      	str	r0, [sp, #76]	; 0x4c
 80162b2:	6850      	ldr	r0, [r2, #4]
 80162b4:	6812      	ldr	r2, [r2, #0]
 80162b6:	fb00 1303 	mla	r3, r0, r3, r1
 80162ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80162be:	930a      	str	r3, [sp, #40]	; 0x28
 80162c0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80162c2:	681b      	ldr	r3, [r3, #0]
 80162c4:	930d      	str	r3, [sp, #52]	; 0x34
 80162c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80162c8:	685c      	ldr	r4, [r3, #4]
 80162ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80162cc:	43db      	mvns	r3, r3
 80162ce:	b2db      	uxtb	r3, r3
 80162d0:	eef0 9a60 	vmov.f32	s19, s1
 80162d4:	eeb0 9a41 	vmov.f32	s18, s2
 80162d8:	eeb0 8a62 	vmov.f32	s16, s5
 80162dc:	eef0 8a43 	vmov.f32	s17, s6
 80162e0:	eef0 ba44 	vmov.f32	s23, s8
 80162e4:	eeb0 ba64 	vmov.f32	s22, s9
 80162e8:	eef0 aa45 	vmov.f32	s21, s10
 80162ec:	3404      	adds	r4, #4
 80162ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80162f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80162f2:	2b00      	cmp	r3, #0
 80162f4:	dc03      	bgt.n	80162fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80162f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80162f8:	2b00      	cmp	r3, #0
 80162fa:	f340 8258 	ble.w	80167ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 80162fe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016300:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016304:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016308:	1e48      	subs	r0, r1, #1
 801630a:	1e55      	subs	r5, r2, #1
 801630c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801630e:	2b00      	cmp	r3, #0
 8016310:	f340 80fc 	ble.w	801650c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016314:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8016316:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016318:	1436      	asrs	r6, r6, #16
 801631a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801631e:	d406      	bmi.n	801632e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016320:	4286      	cmp	r6, r0
 8016322:	da04      	bge.n	801632e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016324:	2b00      	cmp	r3, #0
 8016326:	db02      	blt.n	801632e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016328:	42ab      	cmp	r3, r5
 801632a:	f2c0 80f0 	blt.w	801650e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801632e:	3601      	adds	r6, #1
 8016330:	f100 80dd 	bmi.w	80164ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016334:	42b1      	cmp	r1, r6
 8016336:	f2c0 80da 	blt.w	80164ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801633a:	3301      	adds	r3, #1
 801633c:	f100 80d7 	bmi.w	80164ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016340:	429a      	cmp	r2, r3
 8016342:	f2c0 80d4 	blt.w	80164ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8016346:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016348:	9311      	str	r3, [sp, #68]	; 0x44
 801634a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801634c:	930c      	str	r3, [sp, #48]	; 0x30
 801634e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016350:	2b00      	cmp	r3, #0
 8016352:	f340 80fd 	ble.w	8016550 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8016356:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8016358:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801635a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801635c:	68c6      	ldr	r6, [r0, #12]
 801635e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8016360:	141d      	asrs	r5, r3, #16
 8016362:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016366:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016368:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801636a:	1400      	asrs	r0, r0, #16
 801636c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016370:	6892      	ldr	r2, [r2, #8]
 8016372:	f100 8141 	bmi.w	80165f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016376:	1e57      	subs	r7, r2, #1
 8016378:	42b8      	cmp	r0, r7
 801637a:	f280 813d 	bge.w	80165f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801637e:	2d00      	cmp	r5, #0
 8016380:	f2c0 813a 	blt.w	80165f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016384:	1e77      	subs	r7, r6, #1
 8016386:	42bd      	cmp	r5, r7
 8016388:	f280 8136 	bge.w	80165f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801638c:	b212      	sxth	r2, r2
 801638e:	fb05 0002 	mla	r0, r5, r2, r0
 8016392:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016394:	f815 a000 	ldrb.w	sl, [r5, r0]
 8016398:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801639c:	182e      	adds	r6, r5, r0
 801639e:	eb04 050a 	add.w	r5, r4, sl
 80163a2:	2b00      	cmp	r3, #0
 80163a4:	f000 811a 	beq.w	80165dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 80163a8:	f896 c001 	ldrb.w	ip, [r6, #1]
 80163ac:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80163b0:	44a4      	add	ip, r4
 80163b2:	2900      	cmp	r1, #0
 80163b4:	f000 811a 	beq.w	80165ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80163b8:	18b0      	adds	r0, r6, r2
 80163ba:	5cb2      	ldrb	r2, [r6, r2]
 80163bc:	7840      	ldrb	r0, [r0, #1]
 80163be:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80163c2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80163c6:	4422      	add	r2, r4
 80163c8:	4420      	add	r0, r4
 80163ca:	b29b      	uxth	r3, r3
 80163cc:	b289      	uxth	r1, r1
 80163ce:	fb03 f901 	mul.w	r9, r3, r1
 80163d2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80163d6:	011b      	lsls	r3, r3, #4
 80163d8:	b289      	uxth	r1, r1
 80163da:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80163de:	f895 b002 	ldrb.w	fp, [r5, #2]
 80163e2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80163e4:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80163e8:	f8b6 e000 	ldrh.w	lr, [r6]
 80163ec:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80163f0:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80163f4:	eba3 0309 	sub.w	r3, r3, r9
 80163f8:	b29b      	uxth	r3, r3
 80163fa:	eba8 0801 	sub.w	r8, r8, r1
 80163fe:	fa1f f888 	uxth.w	r8, r8
 8016402:	435f      	muls	r7, r3
 8016404:	fb08 770b 	mla	r7, r8, fp, r7
 8016408:	f892 b002 	ldrb.w	fp, [r2, #2]
 801640c:	9310      	str	r3, [sp, #64]	; 0x40
 801640e:	fb01 770b 	mla	r7, r1, fp, r7
 8016412:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016416:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016418:	fb09 770b 	mla	r7, r9, fp, r7
 801641c:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8016420:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016424:	fb1b fb03 	smulbb	fp, fp, r3
 8016428:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801642c:	fb07 b706 	mla	r7, r7, r6, fp
 8016430:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016432:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016436:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801643a:	f89c c000 	ldrb.w	ip, [ip]
 801643e:	435d      	muls	r5, r3
 8016440:	fb08 550b 	mla	r5, r8, fp, r5
 8016444:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016448:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801644a:	fb01 550b 	mla	r5, r1, fp, r5
 801644e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016452:	fb09 550b 	mla	r5, r9, fp, r5
 8016456:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801645a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801645e:	fb1b fb03 	smulbb	fp, fp, r3
 8016462:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016464:	fb03 f30c 	mul.w	r3, r3, ip
 8016468:	f892 c000 	ldrb.w	ip, [r2]
 801646c:	fb08 330a 	mla	r3, r8, sl, r3
 8016470:	fb01 330c 	mla	r3, r1, ip, r3
 8016474:	f890 c000 	ldrb.w	ip, [r0]
 8016478:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801647c:	fb09 3c0c 	mla	ip, r9, ip, r3
 8016480:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016482:	fa5f fe8e 	uxtb.w	lr, lr
 8016486:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801648a:	fb1e fe03 	smulbb	lr, lr, r3
 801648e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016492:	fb05 b506 	mla	r5, r5, r6, fp
 8016496:	fb0c ee06 	mla	lr, ip, r6, lr
 801649a:	b2bf      	uxth	r7, r7
 801649c:	b2ad      	uxth	r5, r5
 801649e:	fa1f fe8e 	uxth.w	lr, lr
 80164a2:	1c7a      	adds	r2, r7, #1
 80164a4:	f10e 0c01 	add.w	ip, lr, #1
 80164a8:	f105 0b01 	add.w	fp, r5, #1
 80164ac:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80164b0:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 80164b4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80164b8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80164bc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80164c0:	096d      	lsrs	r5, r5, #5
 80164c2:	ea47 070e 	orr.w	r7, r7, lr
 80164c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80164ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80164cc:	433d      	orrs	r5, r7
 80164ce:	801d      	strh	r5, [r3, #0]
 80164d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80164d2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80164d4:	3302      	adds	r3, #2
 80164d6:	930c      	str	r3, [sp, #48]	; 0x30
 80164d8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80164da:	4413      	add	r3, r2
 80164dc:	9327      	str	r3, [sp, #156]	; 0x9c
 80164de:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80164e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80164e2:	4413      	add	r3, r2
 80164e4:	9328      	str	r3, [sp, #160]	; 0xa0
 80164e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80164e8:	3b01      	subs	r3, #1
 80164ea:	9311      	str	r3, [sp, #68]	; 0x44
 80164ec:	e72f      	b.n	801634e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80164ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80164f0:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80164f2:	4433      	add	r3, r6
 80164f4:	9327      	str	r3, [sp, #156]	; 0x9c
 80164f6:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 80164f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80164fa:	4433      	add	r3, r6
 80164fc:	9328      	str	r3, [sp, #160]	; 0xa0
 80164fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016500:	3b01      	subs	r3, #1
 8016502:	9309      	str	r3, [sp, #36]	; 0x24
 8016504:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016506:	3302      	adds	r3, #2
 8016508:	930a      	str	r3, [sp, #40]	; 0x28
 801650a:	e6ff      	b.n	801630c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801650c:	d027      	beq.n	801655e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 801650e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016510:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8016512:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8016514:	3b01      	subs	r3, #1
 8016516:	fb00 5003 	mla	r0, r0, r3, r5
 801651a:	1400      	asrs	r0, r0, #16
 801651c:	f53f af13 	bmi.w	8016346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016520:	3901      	subs	r1, #1
 8016522:	4288      	cmp	r0, r1
 8016524:	f6bf af0f 	bge.w	8016346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016528:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801652a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801652c:	fb01 0303 	mla	r3, r1, r3, r0
 8016530:	141b      	asrs	r3, r3, #16
 8016532:	f53f af08 	bmi.w	8016346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8016536:	3a01      	subs	r2, #1
 8016538:	4293      	cmp	r3, r2
 801653a:	f6bf af04 	bge.w	8016346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801653e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016540:	9311      	str	r3, [sp, #68]	; 0x44
 8016542:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8016546:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016548:	930c      	str	r3, [sp, #48]	; 0x30
 801654a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801654c:	2b00      	cmp	r3, #0
 801654e:	dc70      	bgt.n	8016632 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 8016550:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016552:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016554:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016558:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801655c:	930a      	str	r3, [sp, #40]	; 0x28
 801655e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016560:	2b00      	cmp	r3, #0
 8016562:	f340 8124 	ble.w	80167ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8016566:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801656a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801656e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016572:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016574:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016578:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801657c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016580:	eef0 6a48 	vmov.f32	s13, s16
 8016584:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016588:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801658c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016590:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8016594:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016598:	eef0 6a68 	vmov.f32	s13, s17
 801659c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80165a0:	ee18 2a10 	vmov	r2, s16
 80165a4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80165a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80165ac:	ee18 2a90 	vmov	r2, s17
 80165b0:	9329      	str	r3, [sp, #164]	; 0xa4
 80165b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80165b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80165b8:	932a      	str	r3, [sp, #168]	; 0xa8
 80165ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80165bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80165be:	3b01      	subs	r3, #1
 80165c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80165c4:	930e      	str	r3, [sp, #56]	; 0x38
 80165c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80165c8:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80165cc:	bf08      	it	eq
 80165ce:	4613      	moveq	r3, r2
 80165d0:	9309      	str	r3, [sp, #36]	; 0x24
 80165d2:	eef0 8a67 	vmov.f32	s17, s15
 80165d6:	eeb0 8a47 	vmov.f32	s16, s14
 80165da:	e689      	b.n	80162f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165dc:	b149      	cbz	r1, 80165f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80165de:	5cb2      	ldrb	r2, [r6, r2]
 80165e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80165e4:	4422      	add	r2, r4
 80165e6:	4628      	mov	r0, r5
 80165e8:	46ac      	mov	ip, r5
 80165ea:	e6ee      	b.n	80163ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80165ec:	4628      	mov	r0, r5
 80165ee:	462a      	mov	r2, r5
 80165f0:	e6eb      	b.n	80163ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80165f2:	4628      	mov	r0, r5
 80165f4:	462a      	mov	r2, r5
 80165f6:	e7f7      	b.n	80165e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80165f8:	1c47      	adds	r7, r0, #1
 80165fa:	f53f af69 	bmi.w	80164d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 80165fe:	42ba      	cmp	r2, r7
 8016600:	f6ff af66 	blt.w	80164d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8016604:	1c6f      	adds	r7, r5, #1
 8016606:	f53f af63 	bmi.w	80164d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801660a:	42be      	cmp	r6, r7
 801660c:	f6ff af60 	blt.w	80164d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8016610:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016612:	9002      	str	r0, [sp, #8]
 8016614:	b236      	sxth	r6, r6
 8016616:	b212      	sxth	r2, r2
 8016618:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801661c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8016620:	9200      	str	r2, [sp, #0]
 8016622:	9601      	str	r6, [sp, #4]
 8016624:	4623      	mov	r3, r4
 8016626:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801662a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801662c:	f7ff fd46 	bl	80160bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8016630:	e74e      	b.n	80164d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8016632:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016634:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016636:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8016638:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801663a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801663e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016640:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016644:	142d      	asrs	r5, r5, #16
 8016646:	1400      	asrs	r0, r0, #16
 8016648:	fb02 5000 	mla	r0, r2, r0, r5
 801664c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801664e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8016652:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016656:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801665a:	182e      	adds	r6, r5, r0
 801665c:	eb04 0509 	add.w	r5, r4, r9
 8016660:	2b00      	cmp	r3, #0
 8016662:	f000 8096 	beq.w	8016792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 8016666:	7877      	ldrb	r7, [r6, #1]
 8016668:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801666c:	4427      	add	r7, r4
 801666e:	2900      	cmp	r1, #0
 8016670:	f000 8097 	beq.w	80167a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8016674:	18b0      	adds	r0, r6, r2
 8016676:	5cb2      	ldrb	r2, [r6, r2]
 8016678:	7840      	ldrb	r0, [r0, #1]
 801667a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801667e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016682:	4422      	add	r2, r4
 8016684:	4420      	add	r0, r4
 8016686:	b29b      	uxth	r3, r3
 8016688:	b289      	uxth	r1, r1
 801668a:	fb03 f801 	mul.w	r8, r3, r1
 801668e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016690:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016694:	f8b6 c000 	ldrh.w	ip, [r6]
 8016698:	78be      	ldrb	r6, [r7, #2]
 801669a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801669e:	011b      	lsls	r3, r3, #4
 80166a0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80166a4:	b289      	uxth	r1, r1
 80166a6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80166aa:	eba3 0308 	sub.w	r3, r3, r8
 80166ae:	b29b      	uxth	r3, r3
 80166b0:	ebae 0e01 	sub.w	lr, lr, r1
 80166b4:	fa1f fe8e 	uxth.w	lr, lr
 80166b8:	435e      	muls	r6, r3
 80166ba:	fb0e 660b 	mla	r6, lr, fp, r6
 80166be:	f892 b002 	ldrb.w	fp, [r2, #2]
 80166c2:	9310      	str	r3, [sp, #64]	; 0x40
 80166c4:	fb01 660b 	mla	r6, r1, fp, r6
 80166c8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80166cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166ce:	fb08 660b 	mla	r6, r8, fp, r6
 80166d2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80166d6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80166da:	fb1b fb03 	smulbb	fp, fp, r3
 80166de:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80166e2:	fb06 b60a 	mla	r6, r6, sl, fp
 80166e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166e8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80166ec:	787d      	ldrb	r5, [r7, #1]
 80166ee:	783f      	ldrb	r7, [r7, #0]
 80166f0:	435d      	muls	r5, r3
 80166f2:	fb0e 550b 	mla	r5, lr, fp, r5
 80166f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80166fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166fc:	fb01 550b 	mla	r5, r1, fp, r5
 8016700:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016704:	fb08 550b 	mla	r5, r8, fp, r5
 8016708:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801670c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016710:	fb1b fb03 	smulbb	fp, fp, r3
 8016714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016716:	437b      	muls	r3, r7
 8016718:	7817      	ldrb	r7, [r2, #0]
 801671a:	fb0e 3309 	mla	r3, lr, r9, r3
 801671e:	fb01 3307 	mla	r3, r1, r7, r3
 8016722:	7807      	ldrb	r7, [r0, #0]
 8016724:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016728:	fb08 3707 	mla	r7, r8, r7, r3
 801672c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801672e:	fa5f fc8c 	uxtb.w	ip, ip
 8016732:	fb1c fc03 	smulbb	ip, ip, r3
 8016736:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801673a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801673e:	fb05 b50a 	mla	r5, r5, sl, fp
 8016742:	fb07 c70a 	mla	r7, r7, sl, ip
 8016746:	b2b6      	uxth	r6, r6
 8016748:	b2ad      	uxth	r5, r5
 801674a:	b2bf      	uxth	r7, r7
 801674c:	1c73      	adds	r3, r6, #1
 801674e:	1c7a      	adds	r2, r7, #1
 8016750:	f105 0b01 	add.w	fp, r5, #1
 8016754:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016758:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801675c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016760:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016764:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016768:	096d      	lsrs	r5, r5, #5
 801676a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801676c:	4316      	orrs	r6, r2
 801676e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016772:	432e      	orrs	r6, r5
 8016774:	f823 6b02 	strh.w	r6, [r3], #2
 8016778:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801677a:	930c      	str	r3, [sp, #48]	; 0x30
 801677c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801677e:	4413      	add	r3, r2
 8016780:	9327      	str	r3, [sp, #156]	; 0x9c
 8016782:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016784:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016786:	4413      	add	r3, r2
 8016788:	9328      	str	r3, [sp, #160]	; 0xa0
 801678a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801678c:	3b01      	subs	r3, #1
 801678e:	9311      	str	r3, [sp, #68]	; 0x44
 8016790:	e6db      	b.n	801654a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016792:	b149      	cbz	r1, 80167a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8016794:	5cb2      	ldrb	r2, [r6, r2]
 8016796:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801679a:	4422      	add	r2, r4
 801679c:	4628      	mov	r0, r5
 801679e:	462f      	mov	r7, r5
 80167a0:	e771      	b.n	8016686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80167a2:	4628      	mov	r0, r5
 80167a4:	462a      	mov	r2, r5
 80167a6:	e76e      	b.n	8016686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80167a8:	4628      	mov	r0, r5
 80167aa:	462a      	mov	r2, r5
 80167ac:	e7f7      	b.n	801679e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 80167ae:	b015      	add	sp, #84	; 0x54
 80167b0:	ecbd 8b08 	vpop	{d8-d11}
 80167b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080167b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80167b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80167bc:	880e      	ldrh	r6, [r1, #0]
 80167be:	b085      	sub	sp, #20
 80167c0:	0230      	lsls	r0, r6, #8
 80167c2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80167c6:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80167ca:	0170      	lsls	r0, r6, #5
 80167cc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80167d0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80167d4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80167d8:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80167dc:	00f6      	lsls	r6, r6, #3
 80167de:	ea4b 0000 	orr.w	r0, fp, r0
 80167e2:	b2f6      	uxtb	r6, r6
 80167e4:	4691      	mov	r9, r2
 80167e6:	fb05 7a0c 	mla	sl, r5, ip, r7
 80167ea:	4306      	orrs	r6, r0
 80167ec:	2d00      	cmp	r5, #0
 80167ee:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80167f2:	9603      	str	r6, [sp, #12]
 80167f4:	eb09 0e0a 	add.w	lr, r9, sl
 80167f8:	db42      	blt.n	8016880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80167fa:	45a8      	cmp	r8, r5
 80167fc:	dd40      	ble.n	8016880 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 80167fe:	2f00      	cmp	r7, #0
 8016800:	db3c      	blt.n	801687c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8016802:	45bc      	cmp	ip, r7
 8016804:	dd3a      	ble.n	801687c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8016806:	f819 600a 	ldrb.w	r6, [r9, sl]
 801680a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801680e:	441e      	add	r6, r3
 8016810:	1c78      	adds	r0, r7, #1
 8016812:	d438      	bmi.n	8016886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8016814:	4584      	cmp	ip, r0
 8016816:	dd36      	ble.n	8016886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8016818:	b3aa      	cbz	r2, 8016886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801681a:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801681e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016822:	4418      	add	r0, r3
 8016824:	3501      	adds	r5, #1
 8016826:	d432      	bmi.n	801688e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8016828:	45a8      	cmp	r8, r5
 801682a:	dd30      	ble.n	801688e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801682c:	b37c      	cbz	r4, 801688e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801682e:	2f00      	cmp	r7, #0
 8016830:	db2b      	blt.n	801688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8016832:	45bc      	cmp	ip, r7
 8016834:	dd29      	ble.n	801688a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8016836:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801683a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801683e:	441d      	add	r5, r3
 8016840:	3701      	adds	r7, #1
 8016842:	d427      	bmi.n	8016894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8016844:	45bc      	cmp	ip, r7
 8016846:	dd25      	ble.n	8016894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8016848:	b322      	cbz	r2, 8016894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801684a:	44f4      	add	ip, lr
 801684c:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8016850:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016854:	443b      	add	r3, r7
 8016856:	781f      	ldrb	r7, [r3, #0]
 8016858:	f896 a000 	ldrb.w	sl, [r6]
 801685c:	f890 b000 	ldrb.w	fp, [r0]
 8016860:	f895 9000 	ldrb.w	r9, [r5]
 8016864:	9700      	str	r7, [sp, #0]
 8016866:	2a0f      	cmp	r2, #15
 8016868:	d801      	bhi.n	801686e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 801686a:	2c0f      	cmp	r4, #15
 801686c:	d914      	bls.n	8016898 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 801686e:	4b2c      	ldr	r3, [pc, #176]	; (8016920 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8016870:	4a2c      	ldr	r2, [pc, #176]	; (8016924 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8016872:	482d      	ldr	r0, [pc, #180]	; (8016928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8016874:	f240 210d 	movw	r1, #525	; 0x20d
 8016878:	f007 fbb6 	bl	801dfe8 <__assert_func>
 801687c:	ae03      	add	r6, sp, #12
 801687e:	e7c7      	b.n	8016810 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8016880:	a803      	add	r0, sp, #12
 8016882:	4606      	mov	r6, r0
 8016884:	e7ce      	b.n	8016824 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8016886:	a803      	add	r0, sp, #12
 8016888:	e7cc      	b.n	8016824 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 801688a:	ad03      	add	r5, sp, #12
 801688c:	e7d8      	b.n	8016840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 801688e:	ab03      	add	r3, sp, #12
 8016890:	461d      	mov	r5, r3
 8016892:	e7e0      	b.n	8016856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8016894:	ab03      	add	r3, sp, #12
 8016896:	e7de      	b.n	8016856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8016898:	b292      	uxth	r2, r2
 801689a:	b2a4      	uxth	r4, r4
 801689c:	fb02 f804 	mul.w	r8, r2, r4
 80168a0:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80168a4:	0112      	lsls	r2, r2, #4
 80168a6:	b2a4      	uxth	r4, r4
 80168a8:	f890 e002 	ldrb.w	lr, [r0, #2]
 80168ac:	78b7      	ldrb	r7, [r6, #2]
 80168ae:	7840      	ldrb	r0, [r0, #1]
 80168b0:	7876      	ldrb	r6, [r6, #1]
 80168b2:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80168b6:	eba2 0208 	sub.w	r2, r2, r8
 80168ba:	b292      	uxth	r2, r2
 80168bc:	ebac 0c04 	sub.w	ip, ip, r4
 80168c0:	fa1f fc8c 	uxth.w	ip, ip
 80168c4:	fb02 fe0e 	mul.w	lr, r2, lr
 80168c8:	fb0c ee07 	mla	lr, ip, r7, lr
 80168cc:	78af      	ldrb	r7, [r5, #2]
 80168ce:	fb04 ee07 	mla	lr, r4, r7, lr
 80168d2:	789f      	ldrb	r7, [r3, #2]
 80168d4:	785b      	ldrb	r3, [r3, #1]
 80168d6:	fb08 e707 	mla	r7, r8, r7, lr
 80168da:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80168de:	fb02 fe0b 	mul.w	lr, r2, fp
 80168e2:	4342      	muls	r2, r0
 80168e4:	7868      	ldrb	r0, [r5, #1]
 80168e6:	9701      	str	r7, [sp, #4]
 80168e8:	fb0c ee0a 	mla	lr, ip, sl, lr
 80168ec:	9f00      	ldr	r7, [sp, #0]
 80168ee:	fb0c 2206 	mla	r2, ip, r6, r2
 80168f2:	fb04 ee09 	mla	lr, r4, r9, lr
 80168f6:	fb04 2400 	mla	r4, r4, r0, r2
 80168fa:	fb08 ee07 	mla	lr, r8, r7, lr
 80168fe:	9f01      	ldr	r7, [sp, #4]
 8016900:	fb08 4803 	mla	r8, r8, r3, r4
 8016904:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8016908:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801690c:	ea47 070e 	orr.w	r7, r7, lr
 8016910:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016914:	ea47 0708 	orr.w	r7, r7, r8
 8016918:	800f      	strh	r7, [r1, #0]
 801691a:	b005      	add	sp, #20
 801691c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016920:	0802254f 	.word	0x0802254f
 8016924:	08022b0d 	.word	0x08022b0d
 8016928:	08022638 	.word	0x08022638

0801692c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801692c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016930:	ed2d 8b08 	vpush	{d8-d11}
 8016934:	b08f      	sub	sp, #60	; 0x3c
 8016936:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 801693a:	920c      	str	r2, [sp, #48]	; 0x30
 801693c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801693e:	910a      	str	r1, [sp, #40]	; 0x28
 8016940:	9306      	str	r3, [sp, #24]
 8016942:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8016946:	900d      	str	r0, [sp, #52]	; 0x34
 8016948:	6850      	ldr	r0, [r2, #4]
 801694a:	6812      	ldr	r2, [r2, #0]
 801694c:	fb00 1303 	mla	r3, r0, r3, r1
 8016950:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016954:	9307      	str	r3, [sp, #28]
 8016956:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016958:	681b      	ldr	r3, [r3, #0]
 801695a:	9308      	str	r3, [sp, #32]
 801695c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801695e:	685c      	ldr	r4, [r3, #4]
 8016960:	eeb0 aa40 	vmov.f32	s20, s0
 8016964:	eef0 9a60 	vmov.f32	s19, s1
 8016968:	eeb0 9a41 	vmov.f32	s18, s2
 801696c:	eeb0 8a62 	vmov.f32	s16, s5
 8016970:	eef0 8a43 	vmov.f32	s17, s6
 8016974:	eef0 ba44 	vmov.f32	s23, s8
 8016978:	eeb0 ba64 	vmov.f32	s22, s9
 801697c:	eef0 aa45 	vmov.f32	s21, s10
 8016980:	3404      	adds	r4, #4
 8016982:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016984:	2b00      	cmp	r3, #0
 8016986:	dc03      	bgt.n	8016990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8016988:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801698a:	2b00      	cmp	r3, #0
 801698c:	f340 81d6 	ble.w	8016d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016990:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016992:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016996:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801699a:	1e48      	subs	r0, r1, #1
 801699c:	1e56      	subs	r6, r2, #1
 801699e:	9b06      	ldr	r3, [sp, #24]
 80169a0:	2b00      	cmp	r3, #0
 80169a2:	f340 80b7 	ble.w	8016b14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80169a6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80169aa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80169ae:	d406      	bmi.n	80169be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80169b0:	4287      	cmp	r7, r0
 80169b2:	da04      	bge.n	80169be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80169b4:	2b00      	cmp	r3, #0
 80169b6:	db02      	blt.n	80169be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80169b8:	42b3      	cmp	r3, r6
 80169ba:	f2c0 80ac 	blt.w	8016b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80169be:	3701      	adds	r7, #1
 80169c0:	f100 809d 	bmi.w	8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80169c4:	42b9      	cmp	r1, r7
 80169c6:	f2c0 809a 	blt.w	8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80169ca:	3301      	adds	r3, #1
 80169cc:	f100 8097 	bmi.w	8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80169d0:	429a      	cmp	r2, r3
 80169d2:	f2c0 8094 	blt.w	8016afe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80169d6:	9b06      	ldr	r3, [sp, #24]
 80169d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80169da:	9b07      	ldr	r3, [sp, #28]
 80169dc:	9309      	str	r3, [sp, #36]	; 0x24
 80169de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80169e0:	2b00      	cmp	r3, #0
 80169e2:	f340 80b5 	ble.w	8016b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80169e6:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80169e8:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80169ea:	68c7      	ldr	r7, [r0, #12]
 80169ec:	6892      	ldr	r2, [r2, #8]
 80169ee:	ea5f 402b 	movs.w	r0, fp, asr #16
 80169f2:	ea4f 4625 	mov.w	r6, r5, asr #16
 80169f6:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80169fa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80169fe:	f100 80fb 	bmi.w	8016bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016a02:	f102 3cff 	add.w	ip, r2, #4294967295
 8016a06:	4560      	cmp	r0, ip
 8016a08:	f280 80f6 	bge.w	8016bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016a0c:	2e00      	cmp	r6, #0
 8016a0e:	f2c0 80f3 	blt.w	8016bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016a12:	f107 3cff 	add.w	ip, r7, #4294967295
 8016a16:	4566      	cmp	r6, ip
 8016a18:	f280 80ee 	bge.w	8016bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8016a1c:	b212      	sxth	r2, r2
 8016a1e:	fb06 0002 	mla	r0, r6, r2, r0
 8016a22:	9e08      	ldr	r6, [sp, #32]
 8016a24:	1837      	adds	r7, r6, r0
 8016a26:	5c30      	ldrb	r0, [r6, r0]
 8016a28:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8016a2c:	eb04 0c08 	add.w	ip, r4, r8
 8016a30:	2b00      	cmp	r3, #0
 8016a32:	f000 80d3 	beq.w	8016bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8016a36:	787e      	ldrb	r6, [r7, #1]
 8016a38:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016a3c:	4426      	add	r6, r4
 8016a3e:	2900      	cmp	r1, #0
 8016a40:	f000 80d4 	beq.w	8016bec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8016a44:	18b8      	adds	r0, r7, r2
 8016a46:	5cba      	ldrb	r2, [r7, r2]
 8016a48:	7840      	ldrb	r0, [r0, #1]
 8016a4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016a4e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016a52:	4422      	add	r2, r4
 8016a54:	4420      	add	r0, r4
 8016a56:	b29b      	uxth	r3, r3
 8016a58:	b289      	uxth	r1, r1
 8016a5a:	fb03 f901 	mul.w	r9, r3, r1
 8016a5e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016a62:	011b      	lsls	r3, r3, #4
 8016a64:	b289      	uxth	r1, r1
 8016a66:	78b7      	ldrb	r7, [r6, #2]
 8016a68:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016a6c:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016a70:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016a74:	eba3 0309 	sub.w	r3, r3, r9
 8016a78:	b29b      	uxth	r3, r3
 8016a7a:	ebae 0e01 	sub.w	lr, lr, r1
 8016a7e:	fa1f fe8e 	uxth.w	lr, lr
 8016a82:	435f      	muls	r7, r3
 8016a84:	fb0e 770a 	mla	r7, lr, sl, r7
 8016a88:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016a8c:	fb01 770a 	mla	r7, r1, sl, r7
 8016a90:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016a94:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016a98:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016a9c:	f896 8000 	ldrb.w	r8, [r6]
 8016aa0:	7876      	ldrb	r6, [r6, #1]
 8016aa2:	fb03 f808 	mul.w	r8, r3, r8
 8016aa6:	fb0e 8807 	mla	r8, lr, r7, r8
 8016aaa:	7817      	ldrb	r7, [r2, #0]
 8016aac:	fb01 8807 	mla	r8, r1, r7, r8
 8016ab0:	7807      	ldrb	r7, [r0, #0]
 8016ab2:	fb09 8707 	mla	r7, r9, r7, r8
 8016ab6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016aba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016abe:	ea4a 0707 	orr.w	r7, sl, r7
 8016ac2:	4373      	muls	r3, r6
 8016ac4:	f892 a001 	ldrb.w	sl, [r2, #1]
 8016ac8:	fb0e 330c 	mla	r3, lr, ip, r3
 8016acc:	fb01 310a 	mla	r1, r1, sl, r3
 8016ad0:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ad6:	fb09 1a0a 	mla	sl, r9, sl, r1
 8016ada:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016ade:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016ae2:	ea47 070a 	orr.w	r7, r7, sl
 8016ae6:	801f      	strh	r7, [r3, #0]
 8016ae8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016aea:	3302      	adds	r3, #2
 8016aec:	9309      	str	r3, [sp, #36]	; 0x24
 8016aee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016af0:	449b      	add	fp, r3
 8016af2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016af4:	441d      	add	r5, r3
 8016af6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016af8:	3b01      	subs	r3, #1
 8016afa:	930b      	str	r3, [sp, #44]	; 0x2c
 8016afc:	e76f      	b.n	80169de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016afe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016b00:	449b      	add	fp, r3
 8016b02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016b04:	441d      	add	r5, r3
 8016b06:	9b06      	ldr	r3, [sp, #24]
 8016b08:	3b01      	subs	r3, #1
 8016b0a:	9306      	str	r3, [sp, #24]
 8016b0c:	9b07      	ldr	r3, [sp, #28]
 8016b0e:	3302      	adds	r3, #2
 8016b10:	9307      	str	r3, [sp, #28]
 8016b12:	e744      	b.n	801699e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016b14:	d023      	beq.n	8016b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8016b16:	9b06      	ldr	r3, [sp, #24]
 8016b18:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8016b1a:	3b01      	subs	r3, #1
 8016b1c:	fb00 b003 	mla	r0, r0, r3, fp
 8016b20:	1400      	asrs	r0, r0, #16
 8016b22:	f53f af58 	bmi.w	80169d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016b26:	3901      	subs	r1, #1
 8016b28:	4288      	cmp	r0, r1
 8016b2a:	f6bf af54 	bge.w	80169d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016b2e:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016b30:	fb01 5303 	mla	r3, r1, r3, r5
 8016b34:	141b      	asrs	r3, r3, #16
 8016b36:	f53f af4e 	bmi.w	80169d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016b3a:	3a01      	subs	r2, #1
 8016b3c:	4293      	cmp	r3, r2
 8016b3e:	f6bf af4a 	bge.w	80169d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016b42:	9b06      	ldr	r3, [sp, #24]
 8016b44:	9309      	str	r3, [sp, #36]	; 0x24
 8016b46:	9b07      	ldr	r3, [sp, #28]
 8016b48:	930b      	str	r3, [sp, #44]	; 0x2c
 8016b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b4c:	2b00      	cmp	r3, #0
 8016b4e:	dc70      	bgt.n	8016c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8016b50:	9b06      	ldr	r3, [sp, #24]
 8016b52:	9a07      	ldr	r2, [sp, #28]
 8016b54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016b5c:	9307      	str	r3, [sp, #28]
 8016b5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016b60:	2b00      	cmp	r3, #0
 8016b62:	f340 80eb 	ble.w	8016d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8016b66:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016b6a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016b6e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016b72:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016b74:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016b78:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016b7c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016b80:	eef0 6a48 	vmov.f32	s13, s16
 8016b84:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016b88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b8c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016b90:	ee16 ba90 	vmov	fp, s13
 8016b94:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016b98:	eef0 6a68 	vmov.f32	s13, s17
 8016b9c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016ba0:	ee18 2a10 	vmov	r2, s16
 8016ba4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016ba8:	fb92 f3f3 	sdiv	r3, r2, r3
 8016bac:	ee18 2a90 	vmov	r2, s17
 8016bb0:	9323      	str	r3, [sp, #140]	; 0x8c
 8016bb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016bb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8016bb8:	9324      	str	r3, [sp, #144]	; 0x90
 8016bba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016bbc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016bbe:	3b01      	subs	r3, #1
 8016bc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016bc4:	930a      	str	r3, [sp, #40]	; 0x28
 8016bc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016bc8:	bf08      	it	eq
 8016bca:	4613      	moveq	r3, r2
 8016bcc:	ee16 5a90 	vmov	r5, s13
 8016bd0:	9306      	str	r3, [sp, #24]
 8016bd2:	eef0 8a67 	vmov.f32	s17, s15
 8016bd6:	eeb0 8a47 	vmov.f32	s16, s14
 8016bda:	e6d2      	b.n	8016982 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8016bdc:	b149      	cbz	r1, 8016bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8016bde:	5cba      	ldrb	r2, [r7, r2]
 8016be0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016be4:	4422      	add	r2, r4
 8016be6:	4660      	mov	r0, ip
 8016be8:	4666      	mov	r6, ip
 8016bea:	e734      	b.n	8016a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8016bec:	4660      	mov	r0, ip
 8016bee:	4662      	mov	r2, ip
 8016bf0:	e731      	b.n	8016a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8016bf2:	4660      	mov	r0, ip
 8016bf4:	4662      	mov	r2, ip
 8016bf6:	e7f7      	b.n	8016be8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8016bf8:	f110 0c01 	adds.w	ip, r0, #1
 8016bfc:	f53f af74 	bmi.w	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016c00:	4562      	cmp	r2, ip
 8016c02:	f6ff af71 	blt.w	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016c06:	f116 0c01 	adds.w	ip, r6, #1
 8016c0a:	f53f af6d 	bmi.w	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016c0e:	4567      	cmp	r7, ip
 8016c10:	f6ff af6a 	blt.w	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016c14:	b23f      	sxth	r7, r7
 8016c16:	b212      	sxth	r2, r2
 8016c18:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8016c1c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8016c20:	9200      	str	r2, [sp, #0]
 8016c22:	9701      	str	r7, [sp, #4]
 8016c24:	4623      	mov	r3, r4
 8016c26:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016c2a:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016c2c:	f7ff fdc4 	bl	80167b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8016c30:	e75a      	b.n	8016ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8016c32:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016c34:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016c38:	ea4f 462b 	mov.w	r6, fp, asr #16
 8016c3c:	1428      	asrs	r0, r5, #16
 8016c3e:	fb02 6000 	mla	r0, r2, r0, r6
 8016c42:	9e08      	ldr	r6, [sp, #32]
 8016c44:	f816 8000 	ldrb.w	r8, [r6, r0]
 8016c48:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8016c4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016c50:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016c54:	1837      	adds	r7, r6, r0
 8016c56:	eb04 0c08 	add.w	ip, r4, r8
 8016c5a:	2b00      	cmp	r3, #0
 8016c5c:	d060      	beq.n	8016d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8016c5e:	787e      	ldrb	r6, [r7, #1]
 8016c60:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8016c64:	4426      	add	r6, r4
 8016c66:	2900      	cmp	r1, #0
 8016c68:	d062      	beq.n	8016d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8016c6a:	18b8      	adds	r0, r7, r2
 8016c6c:	5cba      	ldrb	r2, [r7, r2]
 8016c6e:	7840      	ldrb	r0, [r0, #1]
 8016c70:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016c74:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016c78:	4422      	add	r2, r4
 8016c7a:	4420      	add	r0, r4
 8016c7c:	b29b      	uxth	r3, r3
 8016c7e:	b289      	uxth	r1, r1
 8016c80:	fb03 f901 	mul.w	r9, r3, r1
 8016c84:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016c88:	011b      	lsls	r3, r3, #4
 8016c8a:	b289      	uxth	r1, r1
 8016c8c:	78b7      	ldrb	r7, [r6, #2]
 8016c8e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8016c92:	f89c c001 	ldrb.w	ip, [ip, #1]
 8016c96:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016c9a:	eba3 0309 	sub.w	r3, r3, r9
 8016c9e:	b29b      	uxth	r3, r3
 8016ca0:	ebae 0e01 	sub.w	lr, lr, r1
 8016ca4:	fa1f fe8e 	uxth.w	lr, lr
 8016ca8:	435f      	muls	r7, r3
 8016caa:	fb0e 770a 	mla	r7, lr, sl, r7
 8016cae:	f892 a002 	ldrb.w	sl, [r2, #2]
 8016cb2:	fb01 770a 	mla	r7, r1, sl, r7
 8016cb6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8016cba:	fb09 7a0a 	mla	sl, r9, sl, r7
 8016cbe:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016cc2:	f896 8000 	ldrb.w	r8, [r6]
 8016cc6:	7876      	ldrb	r6, [r6, #1]
 8016cc8:	fb03 f808 	mul.w	r8, r3, r8
 8016ccc:	fb0e 8807 	mla	r8, lr, r7, r8
 8016cd0:	7817      	ldrb	r7, [r2, #0]
 8016cd2:	fb01 8807 	mla	r8, r1, r7, r8
 8016cd6:	7807      	ldrb	r7, [r0, #0]
 8016cd8:	fb09 8707 	mla	r7, r9, r7, r8
 8016cdc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016ce0:	4373      	muls	r3, r6
 8016ce2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016ce6:	7856      	ldrb	r6, [r2, #1]
 8016ce8:	ea4a 0707 	orr.w	r7, sl, r7
 8016cec:	fb0e 330c 	mla	r3, lr, ip, r3
 8016cf0:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016cf4:	fb01 3306 	mla	r3, r1, r6, r3
 8016cf8:	fb09 3a0a 	mla	sl, r9, sl, r3
 8016cfc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016d02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d06:	ea47 070a 	orr.w	r7, r7, sl
 8016d0a:	f823 7b02 	strh.w	r7, [r3], #2
 8016d0e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016d10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016d12:	449b      	add	fp, r3
 8016d14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016d16:	441d      	add	r5, r3
 8016d18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d1a:	3b01      	subs	r3, #1
 8016d1c:	9309      	str	r3, [sp, #36]	; 0x24
 8016d1e:	e714      	b.n	8016b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 8016d20:	b149      	cbz	r1, 8016d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 8016d22:	5cba      	ldrb	r2, [r7, r2]
 8016d24:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016d28:	4422      	add	r2, r4
 8016d2a:	4660      	mov	r0, ip
 8016d2c:	4666      	mov	r6, ip
 8016d2e:	e7a5      	b.n	8016c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016d30:	4660      	mov	r0, ip
 8016d32:	4662      	mov	r2, ip
 8016d34:	e7a2      	b.n	8016c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8016d36:	4660      	mov	r0, ip
 8016d38:	4662      	mov	r2, ip
 8016d3a:	e7f7      	b.n	8016d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8016d3c:	b00f      	add	sp, #60	; 0x3c
 8016d3e:	ecbd 8b08 	vpop	{d8-d11}
 8016d42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016d48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d4c:	880e      	ldrh	r6, [r1, #0]
 8016d4e:	b085      	sub	sp, #20
 8016d50:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8016d54:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016d58:	4691      	mov	r9, r2
 8016d5a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016d5e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8016d62:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8016d66:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8016d6a:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8016d6e:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8016d72:	9200      	str	r2, [sp, #0]
 8016d74:	00f6      	lsls	r6, r6, #3
 8016d76:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8016d7a:	9201      	str	r2, [sp, #4]
 8016d7c:	2c00      	cmp	r4, #0
 8016d7e:	b2f2      	uxtb	r2, r6
 8016d80:	fb04 560c 	mla	r6, r4, ip, r5
 8016d84:	9202      	str	r2, [sp, #8]
 8016d86:	eb09 0e06 	add.w	lr, r9, r6
 8016d8a:	db3e      	blt.n	8016e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8016d8c:	45a0      	cmp	r8, r4
 8016d8e:	dd3c      	ble.n	8016e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8016d90:	2d00      	cmp	r5, #0
 8016d92:	db38      	blt.n	8016e06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016d94:	45ac      	cmp	ip, r5
 8016d96:	dd36      	ble.n	8016e06 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8016d98:	f819 2006 	ldrb.w	r2, [r9, r6]
 8016d9c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016da0:	1c6e      	adds	r6, r5, #1
 8016da2:	d435      	bmi.n	8016e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8016da4:	45b4      	cmp	ip, r6
 8016da6:	dd33      	ble.n	8016e10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8016da8:	b3a0      	cbz	r0, 8016e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8016daa:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8016dae:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8016db2:	3401      	adds	r4, #1
 8016db4:	d432      	bmi.n	8016e1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8016db6:	45a0      	cmp	r8, r4
 8016db8:	dd30      	ble.n	8016e1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8016dba:	b397      	cbz	r7, 8016e22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8016dbc:	2d00      	cmp	r5, #0
 8016dbe:	db2b      	blt.n	8016e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8016dc0:	45ac      	cmp	ip, r5
 8016dc2:	dd29      	ble.n	8016e18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8016dc4:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016dc8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8016dcc:	3501      	adds	r5, #1
 8016dce:	d42b      	bmi.n	8016e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8016dd0:	45ac      	cmp	ip, r5
 8016dd2:	dd29      	ble.n	8016e28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8016dd4:	b350      	cbz	r0, 8016e2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8016dd6:	44f4      	add	ip, lr
 8016dd8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016ddc:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8016de0:	280f      	cmp	r0, #15
 8016de2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016de6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016dea:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8016dee:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8016df2:	d801      	bhi.n	8016df8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8016df4:	2f0f      	cmp	r7, #15
 8016df6:	d91b      	bls.n	8016e30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8016df8:	4b84      	ldr	r3, [pc, #528]	; (801700c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8016dfa:	4a85      	ldr	r2, [pc, #532]	; (8017010 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8016dfc:	4885      	ldr	r0, [pc, #532]	; (8017014 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8016dfe:	f240 210d 	movw	r1, #525	; 0x20d
 8016e02:	f007 f8f1 	bl	801dfe8 <__assert_func>
 8016e06:	2200      	movs	r2, #0
 8016e08:	e7ca      	b.n	8016da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8016e0a:	2600      	movs	r6, #0
 8016e0c:	4632      	mov	r2, r6
 8016e0e:	e7d0      	b.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8016e10:	2600      	movs	r6, #0
 8016e12:	e7ce      	b.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8016e14:	4606      	mov	r6, r0
 8016e16:	e7cc      	b.n	8016db2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8016e18:	2400      	movs	r4, #0
 8016e1a:	e7d7      	b.n	8016dcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8016e1c:	2300      	movs	r3, #0
 8016e1e:	461c      	mov	r4, r3
 8016e20:	e7de      	b.n	8016de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8016e22:	463b      	mov	r3, r7
 8016e24:	463c      	mov	r4, r7
 8016e26:	e7db      	b.n	8016de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8016e28:	2300      	movs	r3, #0
 8016e2a:	e7d9      	b.n	8016de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8016e2c:	4603      	mov	r3, r0
 8016e2e:	e7d7      	b.n	8016de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8016e30:	b280      	uxth	r0, r0
 8016e32:	b2bf      	uxth	r7, r7
 8016e34:	fb00 fe07 	mul.w	lr, r0, r7
 8016e38:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016e3c:	0100      	lsls	r0, r0, #4
 8016e3e:	eba0 0c0e 	sub.w	ip, r0, lr
 8016e42:	b2bf      	uxth	r7, r7
 8016e44:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016e48:	fa1f fc8c 	uxth.w	ip, ip
 8016e4c:	1bed      	subs	r5, r5, r7
 8016e4e:	b2ad      	uxth	r5, r5
 8016e50:	fb0c f00a 	mul.w	r0, ip, sl
 8016e54:	fb05 000b 	mla	r0, r5, fp, r0
 8016e58:	fb07 0009 	mla	r0, r7, r9, r0
 8016e5c:	fb0e 0008 	mla	r0, lr, r8, r0
 8016e60:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016e64:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016e68:	9003      	str	r0, [sp, #12]
 8016e6a:	d018      	beq.n	8016e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8016e6c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016e70:	fb0b f000 	mul.w	r0, fp, r0
 8016e74:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016e78:	fb0b fb02 	mul.w	fp, fp, r2
 8016e7c:	0a02      	lsrs	r2, r0, #8
 8016e7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016e82:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8016e86:	4402      	add	r2, r0
 8016e88:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8016e8c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016e90:	0a12      	lsrs	r2, r2, #8
 8016e92:	0a00      	lsrs	r0, r0, #8
 8016e94:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8016e98:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016e9c:	4302      	orrs	r2, r0
 8016e9e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016ea2:	d019      	beq.n	8016ed8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8016ea4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8016ea8:	fb0a fb0b 	mul.w	fp, sl, fp
 8016eac:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016eb0:	fb0a fa06 	mul.w	sl, sl, r6
 8016eb4:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8016eb8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016ebc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016ec0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8016ec4:	445e      	add	r6, fp
 8016ec6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016eca:	0a36      	lsrs	r6, r6, #8
 8016ecc:	0a00      	lsrs	r0, r0, #8
 8016ece:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016ed2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016ed6:	4306      	orrs	r6, r0
 8016ed8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016edc:	d019      	beq.n	8016f12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8016ede:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8016ee2:	fb09 fa0a 	mul.w	sl, r9, sl
 8016ee6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016eea:	fb09 f904 	mul.w	r9, r9, r4
 8016eee:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8016ef2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016ef6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016efa:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8016efe:	4454      	add	r4, sl
 8016f00:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8016f04:	0a24      	lsrs	r4, r4, #8
 8016f06:	0a00      	lsrs	r0, r0, #8
 8016f08:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016f0c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016f10:	4304      	orrs	r4, r0
 8016f12:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016f16:	d019      	beq.n	8016f4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8016f18:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8016f1c:	fb08 f909 	mul.w	r9, r8, r9
 8016f20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016f24:	fb08 f803 	mul.w	r8, r8, r3
 8016f28:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8016f2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f30:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8016f34:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8016f38:	444b      	add	r3, r9
 8016f3a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8016f3e:	0a1b      	lsrs	r3, r3, #8
 8016f40:	0a00      	lsrs	r0, r0, #8
 8016f42:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f46:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016f4a:	4303      	orrs	r3, r0
 8016f4c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8016f50:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8016f54:	fb0c f808 	mul.w	r8, ip, r8
 8016f58:	fb05 8800 	mla	r8, r5, r0, r8
 8016f5c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8016f60:	fb07 8800 	mla	r8, r7, r0, r8
 8016f64:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8016f68:	fb0e 8000 	mla	r0, lr, r0, r8
 8016f6c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016f70:	fb0c f606 	mul.w	r6, ip, r6
 8016f74:	0a00      	lsrs	r0, r0, #8
 8016f76:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8016f7a:	fb05 6202 	mla	r2, r5, r2, r6
 8016f7e:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8016f82:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016f86:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8016f8a:	fb07 2700 	mla	r7, r7, r0, r2
 8016f8e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016f92:	9b03      	ldr	r3, [sp, #12]
 8016f94:	9c00      	ldr	r4, [sp, #0]
 8016f96:	b2ad      	uxth	r5, r5
 8016f98:	436b      	muls	r3, r5
 8016f9a:	fb0e 7000 	mla	r0, lr, r0, r7
 8016f9e:	1c5a      	adds	r2, r3, #1
 8016fa0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016fa4:	0a00      	lsrs	r0, r0, #8
 8016fa6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016faa:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8016fae:	ea48 0000 	orr.w	r0, r8, r0
 8016fb2:	b2d2      	uxtb	r2, r2
 8016fb4:	fb14 f602 	smulbb	r6, r4, r2
 8016fb8:	0c03      	lsrs	r3, r0, #16
 8016fba:	fb03 6305 	mla	r3, r3, r5, r6
 8016fbe:	b29e      	uxth	r6, r3
 8016fc0:	9b01      	ldr	r3, [sp, #4]
 8016fc2:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8016fc6:	fb13 f302 	smulbb	r3, r3, r2
 8016fca:	fb04 3405 	mla	r4, r4, r5, r3
 8016fce:	9b02      	ldr	r3, [sp, #8]
 8016fd0:	b2c0      	uxtb	r0, r0
 8016fd2:	fb13 f202 	smulbb	r2, r3, r2
 8016fd6:	fb00 2005 	mla	r0, r0, r5, r2
 8016fda:	b280      	uxth	r0, r0
 8016fdc:	b2a4      	uxth	r4, r4
 8016fde:	1c42      	adds	r2, r0, #1
 8016fe0:	1c73      	adds	r3, r6, #1
 8016fe2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016fe6:	1c62      	adds	r2, r4, #1
 8016fe8:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8016fec:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8016ff0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016ff4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016ff8:	0952      	lsrs	r2, r2, #5
 8016ffa:	4303      	orrs	r3, r0
 8016ffc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017000:	4313      	orrs	r3, r2
 8017002:	800b      	strh	r3, [r1, #0]
 8017004:	b005      	add	sp, #20
 8017006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801700a:	bf00      	nop
 801700c:	0802254f 	.word	0x0802254f
 8017010:	08022b0d 	.word	0x08022b0d
 8017014:	08022638 	.word	0x08022638

08017018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017018:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801701c:	ed2d 8b08 	vpush	{d8-d11}
 8017020:	b09f      	sub	sp, #124	; 0x7c
 8017022:	eeb0 aa40 	vmov.f32	s20, s0
 8017026:	921b      	str	r2, [sp, #108]	; 0x6c
 8017028:	9309      	str	r3, [sp, #36]	; 0x24
 801702a:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801702c:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8017030:	931c      	str	r3, [sp, #112]	; 0x70
 8017032:	9119      	str	r1, [sp, #100]	; 0x64
 8017034:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8017038:	901d      	str	r0, [sp, #116]	; 0x74
 801703a:	6850      	ldr	r0, [r2, #4]
 801703c:	6812      	ldr	r2, [r2, #0]
 801703e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8017040:	fb00 1303 	mla	r3, r0, r3, r1
 8017044:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017048:	930c      	str	r3, [sp, #48]	; 0x30
 801704a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801704c:	681b      	ldr	r3, [r3, #0]
 801704e:	9312      	str	r3, [sp, #72]	; 0x48
 8017050:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017052:	685e      	ldr	r6, [r3, #4]
 8017054:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8017058:	930d      	str	r3, [sp, #52]	; 0x34
 801705a:	eef0 9a60 	vmov.f32	s19, s1
 801705e:	eeb0 9a41 	vmov.f32	s18, s2
 8017062:	eeb0 8a62 	vmov.f32	s16, s5
 8017066:	eef0 8a43 	vmov.f32	s17, s6
 801706a:	eef0 ba44 	vmov.f32	s23, s8
 801706e:	eeb0 ba64 	vmov.f32	s22, s9
 8017072:	eef0 aa45 	vmov.f32	s21, s10
 8017076:	3604      	adds	r6, #4
 8017078:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801707a:	2b00      	cmp	r3, #0
 801707c:	dc03      	bgt.n	8017086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801707e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017080:	2b00      	cmp	r3, #0
 8017082:	f340 838e 	ble.w	80177a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8017086:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8017088:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801708c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017090:	1e48      	subs	r0, r1, #1
 8017092:	1e57      	subs	r7, r2, #1
 8017094:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017096:	2b00      	cmp	r3, #0
 8017098:	f340 819b 	ble.w	80173d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 801709c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 801709e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80170a2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80170a6:	d406      	bmi.n	80170b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80170a8:	4584      	cmp	ip, r0
 80170aa:	da04      	bge.n	80170b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80170ac:	2b00      	cmp	r3, #0
 80170ae:	db02      	blt.n	80170b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80170b0:	42bb      	cmp	r3, r7
 80170b2:	f2c0 818f 	blt.w	80173d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 80170b6:	f11c 0c01 	adds.w	ip, ip, #1
 80170ba:	f100 817d 	bmi.w	80173b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80170be:	4561      	cmp	r1, ip
 80170c0:	f2c0 817a 	blt.w	80173b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80170c4:	3301      	adds	r3, #1
 80170c6:	f100 8177 	bmi.w	80173b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80170ca:	429a      	cmp	r2, r3
 80170cc:	f2c0 8174 	blt.w	80173b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80170d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80170d2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80170d4:	931a      	str	r3, [sp, #104]	; 0x68
 80170d6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80170d8:	2b00      	cmp	r3, #0
 80170da:	f340 8199 	ble.w	8017410 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80170de:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80170e0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80170e4:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80170e6:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80170ea:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80170ec:	141b      	asrs	r3, r3, #16
 80170ee:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80170f2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80170f6:	f100 81dc 	bmi.w	80174b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80170fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80170fe:	4543      	cmp	r3, r8
 8017100:	f280 81d7 	bge.w	80174b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017104:	f1bc 0f00 	cmp.w	ip, #0
 8017108:	f2c0 81d3 	blt.w	80174b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801710c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017110:	45c4      	cmp	ip, r8
 8017112:	f280 81ce 	bge.w	80174b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8017116:	b200      	sxth	r0, r0
 8017118:	fb0c 3300 	mla	r3, ip, r0, r3
 801711c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801711e:	eb04 0803 	add.w	r8, r4, r3
 8017122:	5ce3      	ldrb	r3, [r4, r3]
 8017124:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017128:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801712c:	2a00      	cmp	r2, #0
 801712e:	f000 81b5 	beq.w	801749c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8017132:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017136:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801713a:	940e      	str	r4, [sp, #56]	; 0x38
 801713c:	0e24      	lsrs	r4, r4, #24
 801713e:	9415      	str	r4, [sp, #84]	; 0x54
 8017140:	b179      	cbz	r1, 8017162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8017142:	eb08 0c00 	add.w	ip, r8, r0
 8017146:	f818 0000 	ldrb.w	r0, [r8, r0]
 801714a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801714e:	900a      	str	r0, [sp, #40]	; 0x28
 8017150:	0e00      	lsrs	r0, r0, #24
 8017152:	9013      	str	r0, [sp, #76]	; 0x4c
 8017154:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8017158:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801715c:	900f      	str	r0, [sp, #60]	; 0x3c
 801715e:	0e00      	lsrs	r0, r0, #24
 8017160:	9016      	str	r0, [sp, #88]	; 0x58
 8017162:	b292      	uxth	r2, r2
 8017164:	b289      	uxth	r1, r1
 8017166:	fb02 f901 	mul.w	r9, r2, r1
 801716a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801716e:	0112      	lsls	r2, r2, #4
 8017170:	eba2 0809 	sub.w	r8, r2, r9
 8017174:	b289      	uxth	r1, r1
 8017176:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801717a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801717c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801717e:	fa1f f888 	uxth.w	r8, r8
 8017182:	1a52      	subs	r2, r2, r1
 8017184:	b292      	uxth	r2, r2
 8017186:	fb08 f000 	mul.w	r0, r8, r0
 801718a:	fb02 000e 	mla	r0, r2, lr, r0
 801718e:	fb01 0004 	mla	r0, r1, r4, r0
 8017192:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017194:	fb09 0004 	mla	r0, r9, r4, r0
 8017198:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801719c:	2800      	cmp	r0, #0
 801719e:	f000 8100 	beq.w	80173a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80171a2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80171a6:	d01b      	beq.n	80171e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80171a8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80171ac:	fb0e fa0a 	mul.w	sl, lr, sl
 80171b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80171b4:	fb0e fe03 	mul.w	lr, lr, r3
 80171b8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80171bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80171c0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80171c4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80171c8:	4453      	add	r3, sl
 80171ca:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80171ce:	0a1b      	lsrs	r3, r3, #8
 80171d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80171d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80171d8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80171dc:	ea43 030c 	orr.w	r3, r3, ip
 80171e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80171e2:	2cff      	cmp	r4, #255	; 0xff
 80171e4:	d021      	beq.n	801722a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80171e6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80171e8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80171ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80171ee:	fb04 fb0b 	mul.w	fp, r4, fp
 80171f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80171f4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80171f8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80171fa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80171fe:	fb04 fa0a 	mul.w	sl, r4, sl
 8017202:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017206:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801720a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801720e:	44de      	add	lr, fp
 8017210:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017214:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017218:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801721c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017220:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017224:	ea4e 040a 	orr.w	r4, lr, sl
 8017228:	940e      	str	r4, [sp, #56]	; 0x38
 801722a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801722c:	2cff      	cmp	r4, #255	; 0xff
 801722e:	d021      	beq.n	8017274 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8017230:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017232:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017236:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017238:	fb04 fb0b 	mul.w	fp, r4, fp
 801723c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801723e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017242:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017244:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017248:	fb04 fa0a 	mul.w	sl, r4, sl
 801724c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017250:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017254:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017258:	44de      	add	lr, fp
 801725a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801725e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017262:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017266:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801726a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801726e:	ea4e 040a 	orr.w	r4, lr, sl
 8017272:	940a      	str	r4, [sp, #40]	; 0x28
 8017274:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017276:	2cff      	cmp	r4, #255	; 0xff
 8017278:	d021      	beq.n	80172be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801727a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801727c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017280:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017282:	fb04 fb0b 	mul.w	fp, r4, fp
 8017286:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017288:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801728c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801728e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017292:	fb04 fa0a 	mul.w	sl, r4, sl
 8017296:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801729a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801729e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80172a2:	44de      	add	lr, fp
 80172a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80172a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80172ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80172b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80172b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80172b8:	ea4e 040a 	orr.w	r4, lr, sl
 80172bc:	940f      	str	r4, [sp, #60]	; 0x3c
 80172be:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80172c0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80172c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80172c6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80172ca:	fb08 fc0c 	mul.w	ip, r8, ip
 80172ce:	fb02 cc0e 	mla	ip, r2, lr, ip
 80172d2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80172d6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80172d8:	fb01 cc0e 	mla	ip, r1, lr, ip
 80172dc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80172e0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80172e2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80172e6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80172ea:	fb08 f80e 	mul.w	r8, r8, lr
 80172ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80172f2:	fb02 8303 	mla	r3, r2, r3, r8
 80172f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80172f8:	f8b7 e000 	ldrh.w	lr, [r7]
 80172fc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80172fe:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017302:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017304:	fb01 330a 	mla	r3, r1, sl, r3
 8017308:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801730c:	fb09 3901 	mla	r9, r9, r1, r3
 8017310:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017312:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017314:	4343      	muls	r3, r0
 8017316:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801731a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801731e:	1c58      	adds	r0, r3, #1
 8017320:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017324:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017328:	ea4c 0c09 	orr.w	ip, ip, r9
 801732c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017330:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8017334:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017338:	ea4f 232e 	mov.w	r3, lr, asr #8
 801733c:	b2c0      	uxtb	r0, r0
 801733e:	fb11 f102 	smulbb	r1, r1, r2
 8017342:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017346:	fb03 1300 	mla	r3, r3, r0, r1
 801734a:	b299      	uxth	r1, r3
 801734c:	ea4f 02ee 	mov.w	r2, lr, asr #3
 8017350:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8017354:	fb13 f304 	smulbb	r3, r3, r4
 8017358:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801735c:	fb02 3200 	mla	r2, r2, r0, r3
 8017360:	fa5f fc8c 	uxtb.w	ip, ip
 8017364:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8017368:	b2db      	uxtb	r3, r3
 801736a:	fb1c fc04 	smulbb	ip, ip, r4
 801736e:	fb03 cc00 	mla	ip, r3, r0, ip
 8017372:	b292      	uxth	r2, r2
 8017374:	fa1f fc8c 	uxth.w	ip, ip
 8017378:	1c4b      	adds	r3, r1, #1
 801737a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801737e:	f10c 0001 	add.w	r0, ip, #1
 8017382:	1c51      	adds	r1, r2, #1
 8017384:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8017388:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801738c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017390:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017394:	0952      	lsrs	r2, r2, #5
 8017396:	ea43 030c 	orr.w	r3, r3, ip
 801739a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801739e:	4313      	orrs	r3, r2
 80173a0:	803b      	strh	r3, [r7, #0]
 80173a2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80173a4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80173a6:	441a      	add	r2, r3
 80173a8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80173aa:	9231      	str	r2, [sp, #196]	; 0xc4
 80173ac:	441d      	add	r5, r3
 80173ae:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80173b0:	3b01      	subs	r3, #1
 80173b2:	3702      	adds	r7, #2
 80173b4:	931a      	str	r3, [sp, #104]	; 0x68
 80173b6:	e68e      	b.n	80170d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80173b8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80173ba:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80173bc:	441c      	add	r4, r3
 80173be:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80173c0:	9431      	str	r4, [sp, #196]	; 0xc4
 80173c2:	441d      	add	r5, r3
 80173c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80173c6:	3b01      	subs	r3, #1
 80173c8:	9309      	str	r3, [sp, #36]	; 0x24
 80173ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80173cc:	3302      	adds	r3, #2
 80173ce:	930c      	str	r3, [sp, #48]	; 0x30
 80173d0:	e660      	b.n	8017094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80173d2:	d024      	beq.n	801741e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 80173d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80173d6:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80173d8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80173da:	3b01      	subs	r3, #1
 80173dc:	fb00 4003 	mla	r0, r0, r3, r4
 80173e0:	1400      	asrs	r0, r0, #16
 80173e2:	f53f ae75 	bmi.w	80170d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80173e6:	3901      	subs	r1, #1
 80173e8:	4288      	cmp	r0, r1
 80173ea:	f6bf ae71 	bge.w	80170d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80173ee:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80173f0:	fb01 5303 	mla	r3, r1, r3, r5
 80173f4:	141b      	asrs	r3, r3, #16
 80173f6:	f53f ae6b 	bmi.w	80170d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80173fa:	3a01      	subs	r2, #1
 80173fc:	4293      	cmp	r3, r2
 80173fe:	f6bf ae67 	bge.w	80170d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8017402:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8017406:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801740a:	f1bb 0f00 	cmp.w	fp, #0
 801740e:	dc70      	bgt.n	80174f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 8017410:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017412:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017416:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017418:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801741c:	930c      	str	r3, [sp, #48]	; 0x30
 801741e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017420:	2b00      	cmp	r3, #0
 8017422:	f340 81be 	ble.w	80177a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8017426:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801742a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801742e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017432:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017434:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017438:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801743c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017440:	eef0 6a48 	vmov.f32	s13, s16
 8017444:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017448:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801744c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017450:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8017454:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017458:	eef0 6a68 	vmov.f32	s13, s17
 801745c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017460:	ee18 2a10 	vmov	r2, s16
 8017464:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017468:	fb92 f3f3 	sdiv	r3, r2, r3
 801746c:	ee18 2a90 	vmov	r2, s17
 8017470:	9333      	str	r3, [sp, #204]	; 0xcc
 8017472:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017474:	fb92 f3f3 	sdiv	r3, r2, r3
 8017478:	9334      	str	r3, [sp, #208]	; 0xd0
 801747a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801747c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801747e:	3b01      	subs	r3, #1
 8017480:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017484:	9319      	str	r3, [sp, #100]	; 0x64
 8017486:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017488:	bf08      	it	eq
 801748a:	4613      	moveq	r3, r2
 801748c:	ee16 5a90 	vmov	r5, s13
 8017490:	9309      	str	r3, [sp, #36]	; 0x24
 8017492:	eef0 8a67 	vmov.f32	s17, s15
 8017496:	eeb0 8a47 	vmov.f32	s16, s14
 801749a:	e5ed      	b.n	8017078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801749c:	2900      	cmp	r1, #0
 801749e:	f43f ae60 	beq.w	8017162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80174a2:	f818 0000 	ldrb.w	r0, [r8, r0]
 80174a6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80174aa:	900a      	str	r0, [sp, #40]	; 0x28
 80174ac:	0e00      	lsrs	r0, r0, #24
 80174ae:	9013      	str	r0, [sp, #76]	; 0x4c
 80174b0:	e657      	b.n	8017162 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80174b2:	f113 0801 	adds.w	r8, r3, #1
 80174b6:	f53f af74 	bmi.w	80173a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80174ba:	4540      	cmp	r0, r8
 80174bc:	f6ff af71 	blt.w	80173a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80174c0:	f11c 0801 	adds.w	r8, ip, #1
 80174c4:	f53f af6d 	bmi.w	80173a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80174c8:	45c6      	cmp	lr, r8
 80174ca:	f6ff af6a 	blt.w	80173a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80174ce:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80174d0:	9302      	str	r3, [sp, #8]
 80174d2:	b200      	sxth	r0, r0
 80174d4:	fa0f f38e 	sxth.w	r3, lr
 80174d8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80174dc:	e9cd c203 	strd	ip, r2, [sp, #12]
 80174e0:	9301      	str	r3, [sp, #4]
 80174e2:	9000      	str	r0, [sp, #0]
 80174e4:	4633      	mov	r3, r6
 80174e6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80174e8:	981d      	ldr	r0, [sp, #116]	; 0x74
 80174ea:	4639      	mov	r1, r7
 80174ec:	f7ff fc2c 	bl	8016d48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80174f0:	e757      	b.n	80173a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80174f2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80174f4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80174f6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80174fa:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80174fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017500:	1427      	asrs	r7, r4, #16
 8017502:	142b      	asrs	r3, r5, #16
 8017504:	fb01 7303 	mla	r3, r1, r3, r7
 8017508:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801750a:	18e7      	adds	r7, r4, r3
 801750c:	5ce3      	ldrb	r3, [r4, r3]
 801750e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017512:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017516:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801751a:	2a00      	cmp	r2, #0
 801751c:	f000 8137 	beq.w	801778e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 8017520:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017524:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017528:	9410      	str	r4, [sp, #64]	; 0x40
 801752a:	0e24      	lsrs	r4, r4, #24
 801752c:	9417      	str	r4, [sp, #92]	; 0x5c
 801752e:	b170      	cbz	r0, 801754e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8017530:	eb07 0e01 	add.w	lr, r7, r1
 8017534:	5c79      	ldrb	r1, [r7, r1]
 8017536:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801753a:	910b      	str	r1, [sp, #44]	; 0x2c
 801753c:	0e09      	lsrs	r1, r1, #24
 801753e:	9114      	str	r1, [sp, #80]	; 0x50
 8017540:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017544:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017548:	9111      	str	r1, [sp, #68]	; 0x44
 801754a:	0e09      	lsrs	r1, r1, #24
 801754c:	9118      	str	r1, [sp, #96]	; 0x60
 801754e:	b292      	uxth	r2, r2
 8017550:	b280      	uxth	r0, r0
 8017552:	fb02 f800 	mul.w	r8, r2, r0
 8017556:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801755a:	0112      	lsls	r2, r2, #4
 801755c:	eba2 0e08 	sub.w	lr, r2, r8
 8017560:	b280      	uxth	r0, r0
 8017562:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017566:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8017568:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801756a:	fa1f fe8e 	uxth.w	lr, lr
 801756e:	1a12      	subs	r2, r2, r0
 8017570:	b292      	uxth	r2, r2
 8017572:	fb0e f101 	mul.w	r1, lr, r1
 8017576:	fb02 110c 	mla	r1, r2, ip, r1
 801757a:	fb00 1104 	mla	r1, r0, r4, r1
 801757e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017580:	fb08 1104 	mla	r1, r8, r4, r1
 8017584:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017588:	2900      	cmp	r1, #0
 801758a:	f000 80f5 	beq.w	8017778 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801758e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017592:	d019      	beq.n	80175c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b0>
 8017594:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017598:	fb0c fa0a 	mul.w	sl, ip, sl
 801759c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80175a0:	fb0c fc03 	mul.w	ip, ip, r3
 80175a4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80175a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80175ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80175b0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80175b4:	4453      	add	r3, sl
 80175b6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80175ba:	0a1b      	lsrs	r3, r3, #8
 80175bc:	0a3f      	lsrs	r7, r7, #8
 80175be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80175c2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80175c6:	433b      	orrs	r3, r7
 80175c8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80175ca:	2cff      	cmp	r4, #255	; 0xff
 80175cc:	d020      	beq.n	8017610 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f8>
 80175ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80175d0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80175d4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80175d6:	4367      	muls	r7, r4
 80175d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80175da:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80175de:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80175e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80175e4:	fb04 fa0a 	mul.w	sl, r4, sl
 80175e8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80175ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80175f0:	44bc      	add	ip, r7
 80175f2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80175f6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80175fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80175fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017602:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017606:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801760a:	ea4c 040a 	orr.w	r4, ip, sl
 801760e:	9410      	str	r4, [sp, #64]	; 0x40
 8017610:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017612:	2cff      	cmp	r4, #255	; 0xff
 8017614:	d020      	beq.n	8017658 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 8017616:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017618:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801761c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801761e:	4367      	muls	r7, r4
 8017620:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017622:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017626:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017628:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801762c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017630:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017634:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017638:	44bc      	add	ip, r7
 801763a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801763e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017642:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017646:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801764a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801764e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017652:	ea4c 040a 	orr.w	r4, ip, sl
 8017656:	940b      	str	r4, [sp, #44]	; 0x2c
 8017658:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801765a:	2cff      	cmp	r4, #255	; 0xff
 801765c:	d020      	beq.n	80176a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801765e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017660:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017664:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017666:	4367      	muls	r7, r4
 8017668:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801766a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801766e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017670:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017674:	fb04 fa0a 	mul.w	sl, r4, sl
 8017678:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801767c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017680:	44bc      	add	ip, r7
 8017682:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017686:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801768a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801768e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017692:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017696:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801769a:	ea4c 040a 	orr.w	r4, ip, sl
 801769e:	9411      	str	r4, [sp, #68]	; 0x44
 80176a0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80176a2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80176a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80176a8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80176ac:	fb0e f707 	mul.w	r7, lr, r7
 80176b0:	fb02 770c 	mla	r7, r2, ip, r7
 80176b4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80176b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80176ba:	fb00 770c 	mla	r7, r0, ip, r7
 80176be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80176c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80176c4:	fb08 770c 	mla	r7, r8, ip, r7
 80176c8:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80176cc:	fb0e fe0c 	mul.w	lr, lr, ip
 80176d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80176d4:	fb02 e303 	mla	r3, r2, r3, lr
 80176d8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80176da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80176dc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80176e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80176e2:	fb00 330a 	mla	r3, r0, sl, r3
 80176e6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80176ea:	fb08 3c0c 	mla	ip, r8, ip, r3
 80176ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80176f0:	f8b9 0000 	ldrh.w	r0, [r9]
 80176f4:	434b      	muls	r3, r1
 80176f6:	0a3f      	lsrs	r7, r7, #8
 80176f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80176fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017700:	1c59      	adds	r1, r3, #1
 8017702:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017706:	ea47 070c 	orr.w	r7, r7, ip
 801770a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801770e:	1202      	asrs	r2, r0, #8
 8017710:	0c3b      	lsrs	r3, r7, #16
 8017712:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017716:	b2c9      	uxtb	r1, r1
 8017718:	fb13 f304 	smulbb	r3, r3, r4
 801771c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017720:	fb02 3201 	mla	r2, r2, r1, r3
 8017724:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8017728:	10c3      	asrs	r3, r0, #3
 801772a:	b2ff      	uxtb	r7, r7
 801772c:	00c0      	lsls	r0, r0, #3
 801772e:	b292      	uxth	r2, r2
 8017730:	fb1c fc04 	smulbb	ip, ip, r4
 8017734:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017738:	b2c0      	uxtb	r0, r0
 801773a:	fb17 f704 	smulbb	r7, r7, r4
 801773e:	fb03 c301 	mla	r3, r3, r1, ip
 8017742:	fb00 7001 	mla	r0, r0, r1, r7
 8017746:	f102 0c01 	add.w	ip, r2, #1
 801774a:	b280      	uxth	r0, r0
 801774c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017750:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8017754:	1c42      	adds	r2, r0, #1
 8017756:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801775a:	b29b      	uxth	r3, r3
 801775c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017760:	ea4c 0200 	orr.w	r2, ip, r0
 8017764:	f103 0c01 	add.w	ip, r3, #1
 8017768:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801776c:	095b      	lsrs	r3, r3, #5
 801776e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017772:	431a      	orrs	r2, r3
 8017774:	f8a9 2000 	strh.w	r2, [r9]
 8017778:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801777a:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801777c:	441a      	add	r2, r3
 801777e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017780:	9231      	str	r2, [sp, #196]	; 0xc4
 8017782:	f109 0902 	add.w	r9, r9, #2
 8017786:	441d      	add	r5, r3
 8017788:	f10b 3bff 	add.w	fp, fp, #4294967295
 801778c:	e63d      	b.n	801740a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801778e:	2800      	cmp	r0, #0
 8017790:	f43f aedd 	beq.w	801754e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8017794:	5c79      	ldrb	r1, [r7, r1]
 8017796:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801779a:	910b      	str	r1, [sp, #44]	; 0x2c
 801779c:	0e09      	lsrs	r1, r1, #24
 801779e:	9114      	str	r1, [sp, #80]	; 0x50
 80177a0:	e6d5      	b.n	801754e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 80177a2:	b01f      	add	sp, #124	; 0x7c
 80177a4:	ecbd 8b08 	vpop	{d8-d11}
 80177a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080177ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80177ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177b0:	880e      	ldrh	r6, [r1, #0]
 80177b2:	b085      	sub	sp, #20
 80177b4:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80177b8:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80177bc:	4691      	mov	r9, r2
 80177be:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80177c2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80177c6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80177ca:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80177ce:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 80177d2:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 80177d6:	9200      	str	r2, [sp, #0]
 80177d8:	00f6      	lsls	r6, r6, #3
 80177da:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 80177de:	9201      	str	r2, [sp, #4]
 80177e0:	2c00      	cmp	r4, #0
 80177e2:	b2f2      	uxtb	r2, r6
 80177e4:	fb04 560c 	mla	r6, r4, ip, r5
 80177e8:	9202      	str	r2, [sp, #8]
 80177ea:	eb09 0e06 	add.w	lr, r9, r6
 80177ee:	db3e      	blt.n	801786e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 80177f0:	45a0      	cmp	r8, r4
 80177f2:	dd3c      	ble.n	801786e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 80177f4:	2d00      	cmp	r5, #0
 80177f6:	db38      	blt.n	801786a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 80177f8:	45ac      	cmp	ip, r5
 80177fa:	dd36      	ble.n	801786a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 80177fc:	f819 2006 	ldrb.w	r2, [r9, r6]
 8017800:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8017804:	1c6e      	adds	r6, r5, #1
 8017806:	d435      	bmi.n	8017874 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8017808:	45b4      	cmp	ip, r6
 801780a:	dd33      	ble.n	8017874 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 801780c:	b3a0      	cbz	r0, 8017878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 801780e:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8017812:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8017816:	3401      	adds	r4, #1
 8017818:	d432      	bmi.n	8017880 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 801781a:	45a0      	cmp	r8, r4
 801781c:	dd30      	ble.n	8017880 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 801781e:	b397      	cbz	r7, 8017886 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8017820:	2d00      	cmp	r5, #0
 8017822:	db2b      	blt.n	801787c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8017824:	45ac      	cmp	ip, r5
 8017826:	dd29      	ble.n	801787c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8017828:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801782c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8017830:	3501      	adds	r5, #1
 8017832:	d42b      	bmi.n	801788c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8017834:	45ac      	cmp	ip, r5
 8017836:	dd29      	ble.n	801788c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8017838:	b350      	cbz	r0, 8017890 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 801783a:	44f4      	add	ip, lr
 801783c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017840:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8017844:	280f      	cmp	r0, #15
 8017846:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801784a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801784e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017852:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017856:	d801      	bhi.n	801785c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 8017858:	2f0f      	cmp	r7, #15
 801785a:	d91b      	bls.n	8017894 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 801785c:	4b7d      	ldr	r3, [pc, #500]	; (8017a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801785e:	4a7e      	ldr	r2, [pc, #504]	; (8017a58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8017860:	487e      	ldr	r0, [pc, #504]	; (8017a5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8017862:	f240 210d 	movw	r1, #525	; 0x20d
 8017866:	f006 fbbf 	bl	801dfe8 <__assert_func>
 801786a:	2200      	movs	r2, #0
 801786c:	e7ca      	b.n	8017804 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801786e:	2600      	movs	r6, #0
 8017870:	4632      	mov	r2, r6
 8017872:	e7d0      	b.n	8017816 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017874:	2600      	movs	r6, #0
 8017876:	e7ce      	b.n	8017816 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8017878:	4606      	mov	r6, r0
 801787a:	e7cc      	b.n	8017816 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801787c:	2400      	movs	r4, #0
 801787e:	e7d7      	b.n	8017830 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 8017880:	2300      	movs	r3, #0
 8017882:	461c      	mov	r4, r3
 8017884:	e7de      	b.n	8017844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8017886:	463b      	mov	r3, r7
 8017888:	463c      	mov	r4, r7
 801788a:	e7db      	b.n	8017844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 801788c:	2300      	movs	r3, #0
 801788e:	e7d9      	b.n	8017844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8017890:	4603      	mov	r3, r0
 8017892:	e7d7      	b.n	8017844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8017894:	b280      	uxth	r0, r0
 8017896:	b2bf      	uxth	r7, r7
 8017898:	fb00 fe07 	mul.w	lr, r0, r7
 801789c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80178a0:	0100      	lsls	r0, r0, #4
 80178a2:	eba0 0c0e 	sub.w	ip, r0, lr
 80178a6:	b2bf      	uxth	r7, r7
 80178a8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80178ac:	fa1f fc8c 	uxth.w	ip, ip
 80178b0:	1bed      	subs	r5, r5, r7
 80178b2:	b2ad      	uxth	r5, r5
 80178b4:	fb0c f00a 	mul.w	r0, ip, sl
 80178b8:	fb05 000b 	mla	r0, r5, fp, r0
 80178bc:	fb07 0009 	mla	r0, r7, r9, r0
 80178c0:	fb0e 0008 	mla	r0, lr, r8, r0
 80178c4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80178c8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80178cc:	9003      	str	r0, [sp, #12]
 80178ce:	d018      	beq.n	8017902 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x156>
 80178d0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80178d4:	fb0b f000 	mul.w	r0, fp, r0
 80178d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80178dc:	fb0b fb02 	mul.w	fp, fp, r2
 80178e0:	0a02      	lsrs	r2, r0, #8
 80178e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80178e6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80178ea:	4402      	add	r2, r0
 80178ec:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80178f0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80178f4:	0a12      	lsrs	r2, r2, #8
 80178f6:	0a00      	lsrs	r0, r0, #8
 80178f8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80178fc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017900:	4302      	orrs	r2, r0
 8017902:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017906:	d019      	beq.n	801793c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x190>
 8017908:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801790c:	fb0a fb0b 	mul.w	fp, sl, fp
 8017910:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017914:	fb0a fa06 	mul.w	sl, sl, r6
 8017918:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801791c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017920:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017924:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017928:	445e      	add	r6, fp
 801792a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801792e:	0a36      	lsrs	r6, r6, #8
 8017930:	0a00      	lsrs	r0, r0, #8
 8017932:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017936:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801793a:	4306      	orrs	r6, r0
 801793c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017940:	d019      	beq.n	8017976 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ca>
 8017942:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017946:	fb09 fa0a 	mul.w	sl, r9, sl
 801794a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801794e:	fb09 f904 	mul.w	r9, r9, r4
 8017952:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017956:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801795a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801795e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8017962:	4454      	add	r4, sl
 8017964:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017968:	0a24      	lsrs	r4, r4, #8
 801796a:	0a00      	lsrs	r0, r0, #8
 801796c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017970:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017974:	4304      	orrs	r4, r0
 8017976:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801797a:	d019      	beq.n	80179b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x204>
 801797c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017980:	fb08 f909 	mul.w	r9, r8, r9
 8017984:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017988:	fb08 f803 	mul.w	r8, r8, r3
 801798c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017990:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017994:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017998:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801799c:	444b      	add	r3, r9
 801799e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80179a2:	0a1b      	lsrs	r3, r3, #8
 80179a4:	0a00      	lsrs	r0, r0, #8
 80179a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80179aa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80179ae:	4303      	orrs	r3, r0
 80179b0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80179b4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80179b8:	fb0c f808 	mul.w	r8, ip, r8
 80179bc:	fb05 8800 	mla	r8, r5, r0, r8
 80179c0:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80179c4:	fb07 8800 	mla	r8, r7, r0, r8
 80179c8:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 80179cc:	fb0e 8000 	mla	r0, lr, r0, r8
 80179d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80179d4:	0a00      	lsrs	r0, r0, #8
 80179d6:	fb0c f606 	mul.w	r6, ip, r6
 80179da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80179de:	fb05 6202 	mla	r2, r5, r2, r6
 80179e2:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80179e6:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80179ea:	fb07 2700 	mla	r7, r7, r0, r2
 80179ee:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80179f2:	9b03      	ldr	r3, [sp, #12]
 80179f4:	9c02      	ldr	r4, [sp, #8]
 80179f6:	9d01      	ldr	r5, [sp, #4]
 80179f8:	fb0e 7000 	mla	r0, lr, r0, r7
 80179fc:	43da      	mvns	r2, r3
 80179fe:	9b00      	ldr	r3, [sp, #0]
 8017a00:	b2d2      	uxtb	r2, r2
 8017a02:	0a00      	lsrs	r0, r0, #8
 8017a04:	4353      	muls	r3, r2
 8017a06:	4354      	muls	r4, r2
 8017a08:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017a0c:	ea48 0000 	orr.w	r0, r8, r0
 8017a10:	4355      	muls	r5, r2
 8017a12:	4622      	mov	r2, r4
 8017a14:	1c5c      	adds	r4, r3, #1
 8017a16:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8017a1a:	0c03      	lsrs	r3, r0, #16
 8017a1c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8017a20:	4b0f      	ldr	r3, [pc, #60]	; (8017a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 8017a22:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 8017a26:	1c54      	adds	r4, r2, #1
 8017a28:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8017a2c:	b2c2      	uxtb	r2, r0
 8017a2e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017a32:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8017a36:	1c6a      	adds	r2, r5, #1
 8017a38:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017a3c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017a40:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017a44:	00c0      	lsls	r0, r0, #3
 8017a46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017a4a:	4318      	orrs	r0, r3
 8017a4c:	8008      	strh	r0, [r1, #0]
 8017a4e:	b005      	add	sp, #20
 8017a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a54:	0802254f 	.word	0x0802254f
 8017a58:	08022b0d 	.word	0x08022b0d
 8017a5c:	08022638 	.word	0x08022638
 8017a60:	fffff800 	.word	0xfffff800

08017a64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a68:	ed2d 8b08 	vpush	{d8-d11}
 8017a6c:	b09b      	sub	sp, #108	; 0x6c
 8017a6e:	eeb0 aa40 	vmov.f32	s20, s0
 8017a72:	9218      	str	r2, [sp, #96]	; 0x60
 8017a74:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017a76:	9116      	str	r1, [sp, #88]	; 0x58
 8017a78:	9307      	str	r3, [sp, #28]
 8017a7a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8017a7e:	9019      	str	r0, [sp, #100]	; 0x64
 8017a80:	6850      	ldr	r0, [r2, #4]
 8017a82:	6812      	ldr	r2, [r2, #0]
 8017a84:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8017a86:	fb00 1303 	mla	r3, r0, r3, r1
 8017a8a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017a8e:	930a      	str	r3, [sp, #40]	; 0x28
 8017a90:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017a92:	681b      	ldr	r3, [r3, #0]
 8017a94:	930f      	str	r3, [sp, #60]	; 0x3c
 8017a96:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017a98:	685e      	ldr	r6, [r3, #4]
 8017a9a:	eef0 9a60 	vmov.f32	s19, s1
 8017a9e:	eeb0 9a41 	vmov.f32	s18, s2
 8017aa2:	eeb0 8a62 	vmov.f32	s16, s5
 8017aa6:	eef0 8a43 	vmov.f32	s17, s6
 8017aaa:	eef0 ba44 	vmov.f32	s23, s8
 8017aae:	eeb0 ba64 	vmov.f32	s22, s9
 8017ab2:	eef0 aa45 	vmov.f32	s21, s10
 8017ab6:	3604      	adds	r6, #4
 8017ab8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017aba:	2b00      	cmp	r3, #0
 8017abc:	dc03      	bgt.n	8017ac6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8017abe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017ac0:	2b00      	cmp	r3, #0
 8017ac2:	f340 8371 	ble.w	80181a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8017ac6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017ac8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017acc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017ad0:	1e48      	subs	r0, r1, #1
 8017ad2:	1e57      	subs	r7, r2, #1
 8017ad4:	9b07      	ldr	r3, [sp, #28]
 8017ad6:	2b00      	cmp	r3, #0
 8017ad8:	f340 8189 	ble.w	8017dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017adc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017ade:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017ae2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017ae6:	d406      	bmi.n	8017af6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017ae8:	4584      	cmp	ip, r0
 8017aea:	da04      	bge.n	8017af6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017aec:	2b00      	cmp	r3, #0
 8017aee:	db02      	blt.n	8017af6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017af0:	42bb      	cmp	r3, r7
 8017af2:	f2c0 817d 	blt.w	8017df0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017af6:	f11c 0c01 	adds.w	ip, ip, #1
 8017afa:	f100 816b 	bmi.w	8017dd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017afe:	4561      	cmp	r1, ip
 8017b00:	f2c0 8168 	blt.w	8017dd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017b04:	3301      	adds	r3, #1
 8017b06:	f100 8165 	bmi.w	8017dd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017b0a:	429a      	cmp	r2, r3
 8017b0c:	f2c0 8162 	blt.w	8017dd4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8017b10:	9b07      	ldr	r3, [sp, #28]
 8017b12:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017b14:	9317      	str	r3, [sp, #92]	; 0x5c
 8017b16:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017b18:	2b00      	cmp	r3, #0
 8017b1a:	f340 8187 	ble.w	8017e2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8017b1e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017b20:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017b24:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017b26:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8017b2a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017b2c:	141b      	asrs	r3, r3, #16
 8017b2e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8017b32:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017b36:	f100 81ca 	bmi.w	8017ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b3a:	f101 38ff 	add.w	r8, r1, #4294967295
 8017b3e:	4543      	cmp	r3, r8
 8017b40:	f280 81c5 	bge.w	8017ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b44:	f1bc 0f00 	cmp.w	ip, #0
 8017b48:	f2c0 81c1 	blt.w	8017ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b4c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017b50:	45c4      	cmp	ip, r8
 8017b52:	f280 81bc 	bge.w	8017ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8017b56:	b209      	sxth	r1, r1
 8017b58:	fb0c 3301 	mla	r3, ip, r1, r3
 8017b5c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017b5e:	eb04 0803 	add.w	r8, r4, r3
 8017b62:	5ce3      	ldrb	r3, [r4, r3]
 8017b64:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017b68:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017b6c:	2a00      	cmp	r2, #0
 8017b6e:	f000 81a3 	beq.w	8017eb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8017b72:	f898 c001 	ldrb.w	ip, [r8, #1]
 8017b76:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017b7a:	940b      	str	r4, [sp, #44]	; 0x2c
 8017b7c:	0e24      	lsrs	r4, r4, #24
 8017b7e:	9412      	str	r4, [sp, #72]	; 0x48
 8017b80:	b178      	cbz	r0, 8017ba2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017b82:	eb08 0c01 	add.w	ip, r8, r1
 8017b86:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017b8a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017b8e:	9108      	str	r1, [sp, #32]
 8017b90:	0e09      	lsrs	r1, r1, #24
 8017b92:	9110      	str	r1, [sp, #64]	; 0x40
 8017b94:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8017b98:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017b9c:	910c      	str	r1, [sp, #48]	; 0x30
 8017b9e:	0e09      	lsrs	r1, r1, #24
 8017ba0:	9113      	str	r1, [sp, #76]	; 0x4c
 8017ba2:	b292      	uxth	r2, r2
 8017ba4:	b280      	uxth	r0, r0
 8017ba6:	fb02 f900 	mul.w	r9, r2, r0
 8017baa:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017bae:	0112      	lsls	r2, r2, #4
 8017bb0:	eba2 0809 	sub.w	r8, r2, r9
 8017bb4:	b280      	uxth	r0, r0
 8017bb6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017bba:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017bbc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017bbe:	fa1f f888 	uxth.w	r8, r8
 8017bc2:	1a12      	subs	r2, r2, r0
 8017bc4:	b292      	uxth	r2, r2
 8017bc6:	fb08 f101 	mul.w	r1, r8, r1
 8017bca:	fb02 110e 	mla	r1, r2, lr, r1
 8017bce:	fb00 1104 	mla	r1, r0, r4, r1
 8017bd2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017bd4:	fb09 1104 	mla	r1, r9, r4, r1
 8017bd8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017bdc:	2900      	cmp	r1, #0
 8017bde:	f000 80ee 	beq.w	8017dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017be2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017be6:	d01b      	beq.n	8017c20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017be8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017bec:	fb0e fa0a 	mul.w	sl, lr, sl
 8017bf0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017bf4:	fb0e fe03 	mul.w	lr, lr, r3
 8017bf8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017bfc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017c00:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017c04:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017c08:	4453      	add	r3, sl
 8017c0a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017c0e:	0a1b      	lsrs	r3, r3, #8
 8017c10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017c14:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017c18:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017c1c:	ea43 030c 	orr.w	r3, r3, ip
 8017c20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017c22:	2cff      	cmp	r4, #255	; 0xff
 8017c24:	d021      	beq.n	8017c6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8017c26:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017c28:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017c2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017c2e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017c32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017c34:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017c38:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017c3a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017c3e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017c46:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017c4a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017c4e:	44de      	add	lr, fp
 8017c50:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017c54:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017c58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017c5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017c60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017c64:	ea4e 040a 	orr.w	r4, lr, sl
 8017c68:	940b      	str	r4, [sp, #44]	; 0x2c
 8017c6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017c6c:	2cff      	cmp	r4, #255	; 0xff
 8017c6e:	d021      	beq.n	8017cb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017c70:	9c08      	ldr	r4, [sp, #32]
 8017c72:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017c76:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017c78:	fb04 fb0b 	mul.w	fp, r4, fp
 8017c7c:	9c08      	ldr	r4, [sp, #32]
 8017c7e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017c82:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017c84:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017c88:	fb04 fa0a 	mul.w	sl, r4, sl
 8017c8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017c90:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017c94:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017c98:	44de      	add	lr, fp
 8017c9a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017c9e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017ca2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017ca6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017caa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017cae:	ea4e 040a 	orr.w	r4, lr, sl
 8017cb2:	9408      	str	r4, [sp, #32]
 8017cb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017cb6:	2cff      	cmp	r4, #255	; 0xff
 8017cb8:	d021      	beq.n	8017cfe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017cba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017cbc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017cc0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017cc2:	fb04 fb0b 	mul.w	fp, r4, fp
 8017cc6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017cc8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017ccc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017cce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017cd2:	fb04 fa0a 	mul.w	sl, r4, sl
 8017cd6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017cda:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017cde:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017ce2:	44de      	add	lr, fp
 8017ce4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017ce8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017cec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017cf0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017cf4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017cf8:	ea4e 040a 	orr.w	r4, lr, sl
 8017cfc:	940c      	str	r4, [sp, #48]	; 0x30
 8017cfe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d00:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017d04:	9c08      	ldr	r4, [sp, #32]
 8017d06:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017d0a:	fb08 fc0c 	mul.w	ip, r8, ip
 8017d0e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8017d12:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017d16:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017d18:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017d1c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017d20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d22:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017d26:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017d2a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017d2e:	fb08 f80e 	mul.w	r8, r8, lr
 8017d32:	fb02 8303 	mla	r3, r2, r3, r8
 8017d36:	9a08      	ldr	r2, [sp, #32]
 8017d38:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017d3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017d3e:	fb00 330a 	mla	r3, r0, sl, r3
 8017d42:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8017d46:	fb09 3900 	mla	r9, r9, r0, r3
 8017d4a:	883b      	ldrh	r3, [r7, #0]
 8017d4c:	43c9      	mvns	r1, r1
 8017d4e:	1218      	asrs	r0, r3, #8
 8017d50:	b2c9      	uxtb	r1, r1
 8017d52:	10da      	asrs	r2, r3, #3
 8017d54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d58:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017d5c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017d60:	00db      	lsls	r3, r3, #3
 8017d62:	4348      	muls	r0, r1
 8017d64:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017d68:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017d6c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017d70:	b2db      	uxtb	r3, r3
 8017d72:	434b      	muls	r3, r1
 8017d74:	ea4c 0c09 	orr.w	ip, ip, r9
 8017d78:	434a      	muls	r2, r1
 8017d7a:	1c41      	adds	r1, r0, #1
 8017d7c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017d80:	ea4f 401c 	mov.w	r0, ip, lsr #16
 8017d84:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017d88:	4960      	ldr	r1, [pc, #384]	; (8017f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8017d8a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017d8e:	1c59      	adds	r1, r3, #1
 8017d90:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017d94:	fa5f f38c 	uxtb.w	r3, ip
 8017d98:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017d9c:	1c51      	adds	r1, r2, #1
 8017d9e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017da2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017da6:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8017daa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017dae:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8017db2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017db6:	ea43 0c0c 	orr.w	ip, r3, ip
 8017dba:	f8a7 c000 	strh.w	ip, [r7]
 8017dbe:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017dc0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017dc2:	441a      	add	r2, r3
 8017dc4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017dc6:	922d      	str	r2, [sp, #180]	; 0xb4
 8017dc8:	441d      	add	r5, r3
 8017dca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017dcc:	3b01      	subs	r3, #1
 8017dce:	3702      	adds	r7, #2
 8017dd0:	9317      	str	r3, [sp, #92]	; 0x5c
 8017dd2:	e6a0      	b.n	8017b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017dd4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017dd6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017dd8:	441c      	add	r4, r3
 8017dda:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017ddc:	942d      	str	r4, [sp, #180]	; 0xb4
 8017dde:	441d      	add	r5, r3
 8017de0:	9b07      	ldr	r3, [sp, #28]
 8017de2:	3b01      	subs	r3, #1
 8017de4:	9307      	str	r3, [sp, #28]
 8017de6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017de8:	3302      	adds	r3, #2
 8017dea:	930a      	str	r3, [sp, #40]	; 0x28
 8017dec:	e672      	b.n	8017ad4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017dee:	d024      	beq.n	8017e3a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8017df0:	9b07      	ldr	r3, [sp, #28]
 8017df2:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8017df4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017df6:	3b01      	subs	r3, #1
 8017df8:	fb00 4003 	mla	r0, r0, r3, r4
 8017dfc:	1400      	asrs	r0, r0, #16
 8017dfe:	f53f ae87 	bmi.w	8017b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017e02:	3901      	subs	r1, #1
 8017e04:	4288      	cmp	r0, r1
 8017e06:	f6bf ae83 	bge.w	8017b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017e0a:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8017e0c:	fb01 5303 	mla	r3, r1, r3, r5
 8017e10:	141b      	asrs	r3, r3, #16
 8017e12:	f53f ae7d 	bmi.w	8017b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017e16:	3a01      	subs	r2, #1
 8017e18:	4293      	cmp	r3, r2
 8017e1a:	f6bf ae79 	bge.w	8017b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017e1e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017e22:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017e26:	f1bb 0f00 	cmp.w	fp, #0
 8017e2a:	dc71      	bgt.n	8017f10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8017e2c:	9b07      	ldr	r3, [sp, #28]
 8017e2e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017e34:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017e38:	930a      	str	r3, [sp, #40]	; 0x28
 8017e3a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017e3c:	2b00      	cmp	r3, #0
 8017e3e:	f340 81b3 	ble.w	80181a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8017e42:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017e46:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017e4a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017e4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e50:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017e54:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017e58:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017e5c:	eef0 6a48 	vmov.f32	s13, s16
 8017e60:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017e64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e68:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017e6c:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8017e70:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017e74:	eef0 6a68 	vmov.f32	s13, s17
 8017e78:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017e7c:	ee18 2a10 	vmov	r2, s16
 8017e80:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017e84:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e88:	ee18 2a90 	vmov	r2, s17
 8017e8c:	932f      	str	r3, [sp, #188]	; 0xbc
 8017e8e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e90:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e94:	9330      	str	r3, [sp, #192]	; 0xc0
 8017e96:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017e98:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017e9a:	3b01      	subs	r3, #1
 8017e9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017ea0:	9316      	str	r3, [sp, #88]	; 0x58
 8017ea2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017ea4:	bf08      	it	eq
 8017ea6:	4613      	moveq	r3, r2
 8017ea8:	ee16 5a90 	vmov	r5, s13
 8017eac:	9307      	str	r3, [sp, #28]
 8017eae:	eef0 8a67 	vmov.f32	s17, s15
 8017eb2:	eeb0 8a47 	vmov.f32	s16, s14
 8017eb6:	e5ff      	b.n	8017ab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8017eb8:	2800      	cmp	r0, #0
 8017eba:	f43f ae72 	beq.w	8017ba2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017ebe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8017ec2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017ec6:	9108      	str	r1, [sp, #32]
 8017ec8:	0e09      	lsrs	r1, r1, #24
 8017eca:	9110      	str	r1, [sp, #64]	; 0x40
 8017ecc:	e669      	b.n	8017ba2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017ece:	f113 0801 	adds.w	r8, r3, #1
 8017ed2:	f53f af74 	bmi.w	8017dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017ed6:	4541      	cmp	r1, r8
 8017ed8:	f6ff af71 	blt.w	8017dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017edc:	f11c 0801 	adds.w	r8, ip, #1
 8017ee0:	f53f af6d 	bmi.w	8017dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017ee4:	45c6      	cmp	lr, r8
 8017ee6:	f6ff af6a 	blt.w	8017dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017eea:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8017eee:	b209      	sxth	r1, r1
 8017ef0:	fa0f f38e 	sxth.w	r3, lr
 8017ef4:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8017ef8:	9301      	str	r3, [sp, #4]
 8017efa:	9100      	str	r1, [sp, #0]
 8017efc:	4633      	mov	r3, r6
 8017efe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017f00:	9819      	ldr	r0, [sp, #100]	; 0x64
 8017f02:	4639      	mov	r1, r7
 8017f04:	f7ff fc52 	bl	80177ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017f08:	e759      	b.n	8017dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8017f0a:	bf00      	nop
 8017f0c:	fffff800 	.word	0xfffff800
 8017f10:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017f12:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8017f14:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017f18:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017f1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017f1e:	1427      	asrs	r7, r4, #16
 8017f20:	142b      	asrs	r3, r5, #16
 8017f22:	fb01 7303 	mla	r3, r1, r3, r7
 8017f26:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017f28:	18e7      	adds	r7, r4, r3
 8017f2a:	5ce3      	ldrb	r3, [r4, r3]
 8017f2c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017f30:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017f34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017f38:	2a00      	cmp	r2, #0
 8017f3a:	f000 812b 	beq.w	8018194 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8017f3e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017f42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017f46:	940d      	str	r4, [sp, #52]	; 0x34
 8017f48:	0e24      	lsrs	r4, r4, #24
 8017f4a:	9414      	str	r4, [sp, #80]	; 0x50
 8017f4c:	b170      	cbz	r0, 8017f6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8017f4e:	eb07 0e01 	add.w	lr, r7, r1
 8017f52:	5c79      	ldrb	r1, [r7, r1]
 8017f54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017f58:	9109      	str	r1, [sp, #36]	; 0x24
 8017f5a:	0e09      	lsrs	r1, r1, #24
 8017f5c:	9111      	str	r1, [sp, #68]	; 0x44
 8017f5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017f62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017f66:	910e      	str	r1, [sp, #56]	; 0x38
 8017f68:	0e09      	lsrs	r1, r1, #24
 8017f6a:	9115      	str	r1, [sp, #84]	; 0x54
 8017f6c:	b292      	uxth	r2, r2
 8017f6e:	b280      	uxth	r0, r0
 8017f70:	fb02 f800 	mul.w	r8, r2, r0
 8017f74:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8017f78:	0112      	lsls	r2, r2, #4
 8017f7a:	eba2 0e08 	sub.w	lr, r2, r8
 8017f7e:	b280      	uxth	r0, r0
 8017f80:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8017f84:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017f86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017f88:	fa1f fe8e 	uxth.w	lr, lr
 8017f8c:	1a09      	subs	r1, r1, r0
 8017f8e:	b289      	uxth	r1, r1
 8017f90:	fb0e f202 	mul.w	r2, lr, r2
 8017f94:	fb01 220c 	mla	r2, r1, ip, r2
 8017f98:	fb00 2204 	mla	r2, r0, r4, r2
 8017f9c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017f9e:	fb08 2204 	mla	r2, r8, r4, r2
 8017fa2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017fa6:	2a00      	cmp	r2, #0
 8017fa8:	f000 80e9 	beq.w	801817e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71a>
 8017fac:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017fb0:	d019      	beq.n	8017fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8017fb2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017fb6:	fb0c fa0a 	mul.w	sl, ip, sl
 8017fba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017fbe:	fb0c fc03 	mul.w	ip, ip, r3
 8017fc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017fc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017fca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017fce:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017fd2:	4453      	add	r3, sl
 8017fd4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017fd8:	0a1b      	lsrs	r3, r3, #8
 8017fda:	0a3f      	lsrs	r7, r7, #8
 8017fdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017fe0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017fe4:	433b      	orrs	r3, r7
 8017fe6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017fe8:	2cff      	cmp	r4, #255	; 0xff
 8017fea:	d020      	beq.n	801802e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8017fec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017fee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017ff2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017ff4:	4367      	muls	r7, r4
 8017ff6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017ff8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017ffc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017ffe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018002:	fb04 fa0a 	mul.w	sl, r4, sl
 8018006:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801800a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801800e:	44bc      	add	ip, r7
 8018010:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018014:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018018:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801801c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018020:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018024:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018028:	ea4c 040a 	orr.w	r4, ip, sl
 801802c:	940d      	str	r4, [sp, #52]	; 0x34
 801802e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018030:	2cff      	cmp	r4, #255	; 0xff
 8018032:	d020      	beq.n	8018076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 8018034:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018036:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801803a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801803c:	4367      	muls	r7, r4
 801803e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018040:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018044:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018046:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801804a:	fb04 fa0a 	mul.w	sl, r4, sl
 801804e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018052:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018056:	44bc      	add	ip, r7
 8018058:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801805c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018060:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018064:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018068:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801806c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018070:	ea4c 040a 	orr.w	r4, ip, sl
 8018074:	9409      	str	r4, [sp, #36]	; 0x24
 8018076:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018078:	2cff      	cmp	r4, #255	; 0xff
 801807a:	d020      	beq.n	80180be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 801807c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801807e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018082:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018084:	4367      	muls	r7, r4
 8018086:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018088:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801808c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801808e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018092:	fb04 fa0a 	mul.w	sl, r4, sl
 8018096:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801809a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801809e:	44bc      	add	ip, r7
 80180a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80180a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80180a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80180ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80180b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80180b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80180b8:	ea4c 040a 	orr.w	r4, ip, sl
 80180bc:	940e      	str	r4, [sp, #56]	; 0x38
 80180be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80180c0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80180c4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80180c6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80180ca:	fb0e f707 	mul.w	r7, lr, r7
 80180ce:	fb01 770c 	mla	r7, r1, ip, r7
 80180d2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80180d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80180d8:	fb00 770c 	mla	r7, r0, ip, r7
 80180dc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80180e0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80180e2:	fb08 770c 	mla	r7, r8, ip, r7
 80180e6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80180ea:	fb0e fe0c 	mul.w	lr, lr, ip
 80180ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80180f2:	fb01 e303 	mla	r3, r1, r3, lr
 80180f6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80180f8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80180fc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80180fe:	fb00 330a 	mla	r3, r0, sl, r3
 8018102:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8018106:	fb08 3c0c 	mla	ip, r8, ip, r3
 801810a:	f8b9 3000 	ldrh.w	r3, [r9]
 801810e:	43d2      	mvns	r2, r2
 8018110:	1218      	asrs	r0, r3, #8
 8018112:	b2d2      	uxtb	r2, r2
 8018114:	0a3f      	lsrs	r7, r7, #8
 8018116:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801811a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801811e:	4350      	muls	r0, r2
 8018120:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018124:	10d9      	asrs	r1, r3, #3
 8018126:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801812a:	00db      	lsls	r3, r3, #3
 801812c:	ea47 070c 	orr.w	r7, r7, ip
 8018130:	b2db      	uxtb	r3, r3
 8018132:	f100 0c01 	add.w	ip, r0, #1
 8018136:	4353      	muls	r3, r2
 8018138:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801813c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018140:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8018144:	4351      	muls	r1, r2
 8018146:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 801814a:	4a1a      	ldr	r2, [pc, #104]	; (80181b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801814c:	f103 0c01 	add.w	ip, r3, #1
 8018150:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8018154:	fa5f fc87 	uxtb.w	ip, r7
 8018158:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801815c:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8018160:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8018164:	1c4b      	adds	r3, r1, #1
 8018166:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801816a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801816e:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8018172:	00ff      	lsls	r7, r7, #3
 8018174:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018178:	4338      	orrs	r0, r7
 801817a:	f8a9 0000 	strh.w	r0, [r9]
 801817e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018180:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018182:	441a      	add	r2, r3
 8018184:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018186:	922d      	str	r2, [sp, #180]	; 0xb4
 8018188:	f109 0902 	add.w	r9, r9, #2
 801818c:	441d      	add	r5, r3
 801818e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018192:	e648      	b.n	8017e26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8018194:	2800      	cmp	r0, #0
 8018196:	f43f aee9 	beq.w	8017f6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801819a:	5c79      	ldrb	r1, [r7, r1]
 801819c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80181a0:	9109      	str	r1, [sp, #36]	; 0x24
 80181a2:	0e09      	lsrs	r1, r1, #24
 80181a4:	9111      	str	r1, [sp, #68]	; 0x44
 80181a6:	e6e1      	b.n	8017f6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80181a8:	b01b      	add	sp, #108	; 0x6c
 80181aa:	ecbd 8b08 	vpop	{d8-d11}
 80181ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181b2:	bf00      	nop
 80181b4:	fffff800 	.word	0xfffff800

080181b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80181b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181bc:	b085      	sub	sp, #20
 80181be:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80181c2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80181c6:	9103      	str	r1, [sp, #12]
 80181c8:	fb05 7106 	mla	r1, r5, r6, r7
 80181cc:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 80181d0:	2d00      	cmp	r5, #0
 80181d2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80181d6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80181da:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80181de:	9401      	str	r4, [sp, #4]
 80181e0:	eb03 0901 	add.w	r9, r3, r1
 80181e4:	f2c0 80c0 	blt.w	8018368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80181e8:	45a8      	cmp	r8, r5
 80181ea:	f340 80bd 	ble.w	8018368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80181ee:	2f00      	cmp	r7, #0
 80181f0:	f2c0 80b6 	blt.w	8018360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80181f4:	42be      	cmp	r6, r7
 80181f6:	f340 80b3 	ble.w	8018360 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 80181fa:	f813 c001 	ldrb.w	ip, [r3, r1]
 80181fe:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8018202:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018206:	d019      	beq.n	801823c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8018208:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801820c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018210:	435a      	muls	r2, r3
 8018212:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8018216:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801821a:	fb0c f403 	mul.w	r4, ip, r3
 801821e:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8018222:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018226:	441a      	add	r2, r3
 8018228:	f104 0320 	add.w	r3, r4, #32
 801822c:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018230:	0a1b      	lsrs	r3, r3, #8
 8018232:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8018236:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801823a:	4319      	orrs	r1, r3
 801823c:	b289      	uxth	r1, r1
 801823e:	1c7b      	adds	r3, r7, #1
 8018240:	f100 8097 	bmi.w	8018372 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8018244:	429e      	cmp	r6, r3
 8018246:	f340 8094 	ble.w	8018372 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 801824a:	2800      	cmp	r0, #0
 801824c:	f000 8094 	beq.w	8018378 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8018250:	f899 4001 	ldrb.w	r4, [r9, #1]
 8018254:	9b01      	ldr	r3, [sp, #4]
 8018256:	2cff      	cmp	r4, #255	; 0xff
 8018258:	885b      	ldrh	r3, [r3, #2]
 801825a:	d01b      	beq.n	8018294 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 801825c:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018260:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018264:	fb0a f202 	mul.w	r2, sl, r2
 8018268:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801826c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018270:	fb04 fa03 	mul.w	sl, r4, r3
 8018274:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018278:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801827c:	441a      	add	r2, r3
 801827e:	f10a 0320 	add.w	r3, sl, #32
 8018282:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018286:	0a1b      	lsrs	r3, r3, #8
 8018288:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801828c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018290:	ea4b 0303 	orr.w	r3, fp, r3
 8018294:	b29b      	uxth	r3, r3
 8018296:	3501      	adds	r5, #1
 8018298:	d474      	bmi.n	8018384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801829a:	45a8      	cmp	r8, r5
 801829c:	dd72      	ble.n	8018384 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801829e:	f1be 0f00 	cmp.w	lr, #0
 80182a2:	f000 8120 	beq.w	80184e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80182a6:	2f00      	cmp	r7, #0
 80182a8:	db69      	blt.n	801837e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80182aa:	42be      	cmp	r6, r7
 80182ac:	dd67      	ble.n	801837e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80182ae:	f819 5006 	ldrb.w	r5, [r9, r6]
 80182b2:	9a01      	ldr	r2, [sp, #4]
 80182b4:	2dff      	cmp	r5, #255	; 0xff
 80182b6:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80182ba:	d01c      	beq.n	80182f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80182bc:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80182c0:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80182c4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80182c8:	fb05 fa0b 	mul.w	sl, r5, fp
 80182cc:	fb08 f802 	mul.w	r8, r8, r2
 80182d0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80182d4:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80182d8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80182dc:	4490      	add	r8, r2
 80182de:	f10a 0220 	add.w	r2, sl, #32
 80182e2:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80182e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80182ea:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80182ee:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80182f2:	ea4b 0b0a 	orr.w	fp, fp, sl
 80182f6:	fa1f fb8b 	uxth.w	fp, fp
 80182fa:	3701      	adds	r7, #1
 80182fc:	d447      	bmi.n	801838e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80182fe:	42be      	cmp	r6, r7
 8018300:	dd45      	ble.n	801838e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8018302:	2800      	cmp	r0, #0
 8018304:	d046      	beq.n	8018394 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8018306:	3601      	adds	r6, #1
 8018308:	9a01      	ldr	r2, [sp, #4]
 801830a:	f819 7006 	ldrb.w	r7, [r9, r6]
 801830e:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8018312:	2fff      	cmp	r7, #255	; 0xff
 8018314:	d01a      	beq.n	801834c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8018316:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801831a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801831e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018322:	fb07 f902 	mul.w	r9, r7, r2
 8018326:	fb08 f806 	mul.w	r8, r8, r6
 801832a:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801832e:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8018332:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018336:	44b0      	add	r8, r6
 8018338:	f109 0620 	add.w	r6, r9, #32
 801833c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8018340:	0a36      	lsrs	r6, r6, #8
 8018342:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018346:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801834a:	4332      	orrs	r2, r6
 801834c:	b292      	uxth	r2, r2
 801834e:	280f      	cmp	r0, #15
 8018350:	d922      	bls.n	8018398 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8018352:	4b69      	ldr	r3, [pc, #420]	; (80184f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8018354:	4a69      	ldr	r2, [pc, #420]	; (80184fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8018356:	486a      	ldr	r0, [pc, #424]	; (8018500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8018358:	f240 210d 	movw	r1, #525	; 0x20d
 801835c:	f005 fe44 	bl	801dfe8 <__assert_func>
 8018360:	f04f 0c00 	mov.w	ip, #0
 8018364:	4661      	mov	r1, ip
 8018366:	e76a      	b.n	801823e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8018368:	2400      	movs	r4, #0
 801836a:	46a4      	mov	ip, r4
 801836c:	4623      	mov	r3, r4
 801836e:	4621      	mov	r1, r4
 8018370:	e791      	b.n	8018296 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018372:	2400      	movs	r4, #0
 8018374:	4623      	mov	r3, r4
 8018376:	e78e      	b.n	8018296 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8018378:	4604      	mov	r4, r0
 801837a:	4603      	mov	r3, r0
 801837c:	e78b      	b.n	8018296 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801837e:	2500      	movs	r5, #0
 8018380:	46ab      	mov	fp, r5
 8018382:	e7ba      	b.n	80182fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8018384:	2700      	movs	r7, #0
 8018386:	463d      	mov	r5, r7
 8018388:	463a      	mov	r2, r7
 801838a:	46bb      	mov	fp, r7
 801838c:	e7df      	b.n	801834e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801838e:	2700      	movs	r7, #0
 8018390:	463a      	mov	r2, r7
 8018392:	e7dc      	b.n	801834e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8018394:	4607      	mov	r7, r0
 8018396:	4602      	mov	r2, r0
 8018398:	f1be 0f0f 	cmp.w	lr, #15
 801839c:	d8d9      	bhi.n	8018352 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801839e:	b286      	uxth	r6, r0
 80183a0:	fa1f f98e 	uxth.w	r9, lr
 80183a4:	fb06 f809 	mul.w	r8, r6, r9
 80183a8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80183ac:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80183b0:	0136      	lsls	r6, r6, #4
 80183b2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183b6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80183ba:	9601      	str	r6, [sp, #4]
 80183bc:	ea4a 0101 	orr.w	r1, sl, r1
 80183c0:	fa1f f689 	uxth.w	r6, r9
 80183c4:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80183c8:	fb10 f90e 	smulbb	r9, r0, lr
 80183cc:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80183d0:	9602      	str	r6, [sp, #8]
 80183d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80183d6:	460e      	mov	r6, r1
 80183d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80183dc:	f1ce 0110 	rsb	r1, lr, #16
 80183e0:	1a09      	subs	r1, r1, r0
 80183e2:	ea4a 0303 	orr.w	r3, sl, r3
 80183e6:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80183ea:	4343      	muls	r3, r0
 80183ec:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80183f0:	9801      	ldr	r0, [sp, #4]
 80183f2:	fb01 3106 	mla	r1, r1, r6, r3
 80183f6:	9e02      	ldr	r6, [sp, #8]
 80183f8:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80183fc:	1b80      	subs	r0, r0, r6
 80183fe:	9e01      	ldr	r6, [sp, #4]
 8018400:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018404:	eba6 0608 	sub.w	r6, r6, r8
 8018408:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801840c:	b2b6      	uxth	r6, r6
 801840e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018412:	ea4a 0202 	orr.w	r2, sl, r2
 8018416:	b280      	uxth	r0, r0
 8018418:	4374      	muls	r4, r6
 801841a:	fb09 1302 	mla	r3, r9, r2, r1
 801841e:	fb0c 4400 	mla	r4, ip, r0, r4
 8018422:	9a03      	ldr	r2, [sp, #12]
 8018424:	9802      	ldr	r0, [sp, #8]
 8018426:	8811      	ldrh	r1, [r2, #0]
 8018428:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 801842c:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8018430:	fb00 4505 	mla	r5, r0, r5, r4
 8018434:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018438:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801843c:	fb08 5707 	mla	r7, r8, r7, r5
 8018440:	ea4a 0b0b 	orr.w	fp, sl, fp
 8018444:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018448:	b292      	uxth	r2, r2
 801844a:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801844e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018452:	4357      	muls	r7, r2
 8018454:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8018458:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801845c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018460:	f107 0801 	add.w	r8, r7, #1
 8018464:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018468:	ea43 0e0e 	orr.w	lr, r3, lr
 801846c:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8018470:	fa1f f38e 	uxth.w	r3, lr
 8018474:	1208      	asrs	r0, r1, #8
 8018476:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801847a:	b2ff      	uxtb	r7, r7
 801847c:	121c      	asrs	r4, r3, #8
 801847e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018482:	fb10 f007 	smulbb	r0, r0, r7
 8018486:	10cd      	asrs	r5, r1, #3
 8018488:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801848c:	00c9      	lsls	r1, r1, #3
 801848e:	fb04 0402 	mla	r4, r4, r2, r0
 8018492:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018496:	10d8      	asrs	r0, r3, #3
 8018498:	b2c9      	uxtb	r1, r1
 801849a:	00db      	lsls	r3, r3, #3
 801849c:	fb11 f107 	smulbb	r1, r1, r7
 80184a0:	fb15 f507 	smulbb	r5, r5, r7
 80184a4:	b2db      	uxtb	r3, r3
 80184a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80184aa:	fb00 5002 	mla	r0, r0, r2, r5
 80184ae:	fb03 1202 	mla	r2, r3, r2, r1
 80184b2:	b2a4      	uxth	r4, r4
 80184b4:	b292      	uxth	r2, r2
 80184b6:	1c63      	adds	r3, r4, #1
 80184b8:	1c51      	adds	r1, r2, #1
 80184ba:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80184be:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80184c2:	b280      	uxth	r0, r0
 80184c4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80184c8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80184cc:	4313      	orrs	r3, r2
 80184ce:	1c42      	adds	r2, r0, #1
 80184d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80184d4:	0940      	lsrs	r0, r0, #5
 80184d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184da:	9a03      	ldr	r2, [sp, #12]
 80184dc:	4303      	orrs	r3, r0
 80184de:	8013      	strh	r3, [r2, #0]
 80184e0:	b005      	add	sp, #20
 80184e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80184e6:	280f      	cmp	r0, #15
 80184e8:	f63f af33 	bhi.w	8018352 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80184ec:	4677      	mov	r7, lr
 80184ee:	4675      	mov	r5, lr
 80184f0:	4672      	mov	r2, lr
 80184f2:	46f3      	mov	fp, lr
 80184f4:	e753      	b.n	801839e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 80184f6:	bf00      	nop
 80184f8:	0802254f 	.word	0x0802254f
 80184fc:	08022b0d 	.word	0x08022b0d
 8018500:	08022638 	.word	0x08022638

08018504 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018508:	ed2d 8b08 	vpush	{d8-d11}
 801850c:	b097      	sub	sp, #92	; 0x5c
 801850e:	eeb0 aa40 	vmov.f32	s20, s0
 8018512:	9214      	str	r2, [sp, #80]	; 0x50
 8018514:	9308      	str	r3, [sp, #32]
 8018516:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018518:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801851c:	9312      	str	r3, [sp, #72]	; 0x48
 801851e:	9111      	str	r1, [sp, #68]	; 0x44
 8018520:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8018524:	9015      	str	r0, [sp, #84]	; 0x54
 8018526:	6850      	ldr	r0, [r2, #4]
 8018528:	6812      	ldr	r2, [r2, #0]
 801852a:	fb00 1303 	mla	r3, r0, r3, r1
 801852e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018532:	9309      	str	r3, [sp, #36]	; 0x24
 8018534:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018536:	681b      	ldr	r3, [r3, #0]
 8018538:	930b      	str	r3, [sp, #44]	; 0x2c
 801853a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801853c:	685b      	ldr	r3, [r3, #4]
 801853e:	930c      	str	r3, [sp, #48]	; 0x30
 8018540:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018544:	930a      	str	r3, [sp, #40]	; 0x28
 8018546:	eef0 9a60 	vmov.f32	s19, s1
 801854a:	eeb0 9a41 	vmov.f32	s18, s2
 801854e:	eeb0 8a62 	vmov.f32	s16, s5
 8018552:	eef0 8a43 	vmov.f32	s17, s6
 8018556:	eef0 ba44 	vmov.f32	s23, s8
 801855a:	eeb0 ba64 	vmov.f32	s22, s9
 801855e:	eef0 aa45 	vmov.f32	s21, s10
 8018562:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018564:	2b00      	cmp	r3, #0
 8018566:	dc03      	bgt.n	8018570 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018568:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801856a:	2b00      	cmp	r3, #0
 801856c:	f340 83cb 	ble.w	8018d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018570:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018572:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018576:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801857a:	1e48      	subs	r0, r1, #1
 801857c:	1e55      	subs	r5, r2, #1
 801857e:	9b08      	ldr	r3, [sp, #32]
 8018580:	2b00      	cmp	r3, #0
 8018582:	f340 81a3 	ble.w	80188cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8018586:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8018588:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801858a:	1436      	asrs	r6, r6, #16
 801858c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018590:	d406      	bmi.n	80185a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018592:	4286      	cmp	r6, r0
 8018594:	da04      	bge.n	80185a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018596:	2b00      	cmp	r3, #0
 8018598:	db02      	blt.n	80185a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801859a:	42ab      	cmp	r3, r5
 801859c:	f2c0 8197 	blt.w	80188ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80185a0:	3601      	adds	r6, #1
 80185a2:	f100 8184 	bmi.w	80188ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80185a6:	42b1      	cmp	r1, r6
 80185a8:	f2c0 8181 	blt.w	80188ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80185ac:	3301      	adds	r3, #1
 80185ae:	f100 817e 	bmi.w	80188ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80185b2:	429a      	cmp	r2, r3
 80185b4:	f2c0 817b 	blt.w	80188ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80185b8:	9b08      	ldr	r3, [sp, #32]
 80185ba:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80185bc:	9313      	str	r3, [sp, #76]	; 0x4c
 80185be:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80185c2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80185c4:	2b00      	cmp	r3, #0
 80185c6:	f340 81a4 	ble.w	8018912 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80185ca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80185cc:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80185ce:	1418      	asrs	r0, r3, #16
 80185d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80185d2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80185d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80185d8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80185dc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80185de:	142d      	asrs	r5, r5, #16
 80185e0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80185e4:	f100 81f8 	bmi.w	80189d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80185e8:	f102 3eff 	add.w	lr, r2, #4294967295
 80185ec:	4575      	cmp	r5, lr
 80185ee:	f280 81f3 	bge.w	80189d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80185f2:	2800      	cmp	r0, #0
 80185f4:	f2c0 81f0 	blt.w	80189d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80185f8:	f103 3eff 	add.w	lr, r3, #4294967295
 80185fc:	4570      	cmp	r0, lr
 80185fe:	f280 81eb 	bge.w	80189d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8018602:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018604:	b212      	sxth	r2, r2
 8018606:	fb00 5002 	mla	r0, r0, r2, r5
 801860a:	fa1f fe81 	uxth.w	lr, r1
 801860e:	eb03 0a00 	add.w	sl, r3, r0
 8018612:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018616:	f813 9000 	ldrb.w	r9, [r3, r0]
 801861a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801861e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018622:	b29b      	uxth	r3, r3
 8018624:	f1bc 0f00 	cmp.w	ip, #0
 8018628:	f000 81b9 	beq.w	801899e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801862c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018630:	940d      	str	r4, [sp, #52]	; 0x34
 8018632:	eb0a 0b02 	add.w	fp, sl, r2
 8018636:	fa1f fa8c 	uxth.w	sl, ip
 801863a:	fb0a fe0e 	mul.w	lr, sl, lr
 801863e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018642:	fa1f fa8a 	uxth.w	sl, sl
 8018646:	eba5 050e 	sub.w	r5, r5, lr
 801864a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801864e:	940e      	str	r4, [sp, #56]	; 0x38
 8018650:	eba3 030a 	sub.w	r3, r3, sl
 8018654:	b2ad      	uxth	r5, r5
 8018656:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018658:	b29b      	uxth	r3, r3
 801865a:	fb08 f505 	mul.w	r5, r8, r5
 801865e:	fb09 5303 	mla	r3, r9, r3, r5
 8018662:	fb0a 3304 	mla	r3, sl, r4, r3
 8018666:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018668:	fb0e 3304 	mla	r3, lr, r4, r3
 801866c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018670:	2b00      	cmp	r3, #0
 8018672:	f000 810f 	beq.w	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018676:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018678:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801867c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018680:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018684:	f000 8190 	beq.w	80189a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8018688:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801868c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018690:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018694:	fb09 f000 	mul.w	r0, r9, r0
 8018698:	fb0a fe0e 	mul.w	lr, sl, lr
 801869c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80186a0:	f100 0b20 	add.w	fp, r0, #32
 80186a4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80186a8:	44ce      	add	lr, r9
 80186aa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80186ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80186b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80186b6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80186ba:	ea4e 0909 	orr.w	r9, lr, r9
 80186be:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80186c2:	8868      	ldrh	r0, [r5, #2]
 80186c4:	d019      	beq.n	80186fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80186c6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80186ca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80186ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80186d2:	fb08 f800 	mul.w	r8, r8, r0
 80186d6:	fb0a fe0e 	mul.w	lr, sl, lr
 80186da:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80186de:	f108 0b20 	add.w	fp, r8, #32
 80186e2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80186e6:	4486      	add	lr, r0
 80186e8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80186ec:	0a00      	lsrs	r0, r0, #8
 80186ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80186f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80186f6:	ea4e 0000 	orr.w	r0, lr, r0
 80186fa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80186fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018702:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018706:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801870a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801870e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018712:	ea4e 0909 	orr.w	r9, lr, r9
 8018716:	ea4a 0000 	orr.w	r0, sl, r0
 801871a:	f1bc 0f00 	cmp.w	ip, #0
 801871e:	f000 8145 	beq.w	80189ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8018722:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018726:	3a01      	subs	r2, #1
 8018728:	0052      	lsls	r2, r2, #1
 801872a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801872c:	3202      	adds	r2, #2
 801872e:	2cff      	cmp	r4, #255	; 0xff
 8018730:	eb05 0e02 	add.w	lr, r5, r2
 8018734:	5aaa      	ldrh	r2, [r5, r2]
 8018736:	d018      	beq.n	801876a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8018738:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801873c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018740:	fb04 fa02 	mul.w	sl, r4, r2
 8018744:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018748:	fb08 f805 	mul.w	r8, r8, r5
 801874c:	f10a 0520 	add.w	r5, sl, #32
 8018750:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018754:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018758:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801875c:	4442      	add	r2, r8
 801875e:	0a2d      	lsrs	r5, r5, #8
 8018760:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018764:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018768:	432a      	orrs	r2, r5
 801876a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801876c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018770:	2cff      	cmp	r4, #255	; 0xff
 8018772:	d01a      	beq.n	80187aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018774:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018778:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801877c:	fb04 fa05 	mul.w	sl, r4, r5
 8018780:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018784:	fb08 f80e 	mul.w	r8, r8, lr
 8018788:	f10a 0e20 	add.w	lr, sl, #32
 801878c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018790:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018794:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018798:	4445      	add	r5, r8
 801879a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801879e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80187a2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80187a6:	ea45 050e 	orr.w	r5, r5, lr
 80187aa:	fb1c fe01 	smulbb	lr, ip, r1
 80187ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80187b2:	f1cc 0810 	rsb	r8, ip, #16
 80187b6:	eba8 0801 	sub.w	r8, r8, r1
 80187ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80187be:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80187c2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80187c6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80187ca:	4341      	muls	r1, r0
 80187cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80187d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80187d4:	ea4a 0202 	orr.w	r2, sl, r2
 80187d8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80187dc:	fb09 1108 	mla	r1, r9, r8, r1
 80187e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80187e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80187e8:	fb0c 1102 	mla	r1, ip, r2, r1
 80187ec:	ea4b 0505 	orr.w	r5, fp, r5
 80187f0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80187f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80187f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80187fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018800:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018804:	ea42 0e0e 	orr.w	lr, r2, lr
 8018808:	fa1f f28e 	uxth.w	r2, lr
 801880c:	2bff      	cmp	r3, #255	; 0xff
 801880e:	d103      	bne.n	8018818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8018810:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018812:	29ff      	cmp	r1, #255	; 0xff
 8018814:	f000 80de 	beq.w	80189d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8018818:	990a      	ldr	r1, [sp, #40]	; 0x28
 801881a:	8838      	ldrh	r0, [r7, #0]
 801881c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801881e:	434b      	muls	r3, r1
 8018820:	f103 0c01 	add.w	ip, r3, #1
 8018824:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8018828:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 801882c:	1205      	asrs	r5, r0, #8
 801882e:	fa5f fc8c 	uxtb.w	ip, ip
 8018832:	1213      	asrs	r3, r2, #8
 8018834:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018838:	fb15 f50c 	smulbb	r5, r5, ip
 801883c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018840:	fb03 5301 	mla	r3, r3, r1, r5
 8018844:	b29d      	uxth	r5, r3
 8018846:	10c3      	asrs	r3, r0, #3
 8018848:	00c0      	lsls	r0, r0, #3
 801884a:	10d1      	asrs	r1, r2, #3
 801884c:	b2c0      	uxtb	r0, r0
 801884e:	00d2      	lsls	r2, r2, #3
 8018850:	fb10 f00c 	smulbb	r0, r0, ip
 8018854:	b2d2      	uxtb	r2, r2
 8018856:	fb02 0204 	mla	r2, r2, r4, r0
 801885a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801885e:	fb13 f30c 	smulbb	r3, r3, ip
 8018862:	b292      	uxth	r2, r2
 8018864:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018868:	fb01 3104 	mla	r1, r1, r4, r3
 801886c:	1c50      	adds	r0, r2, #1
 801886e:	1c6b      	adds	r3, r5, #1
 8018870:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018874:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018878:	b289      	uxth	r1, r1
 801887a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801887e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018882:	4313      	orrs	r3, r2
 8018884:	1c4a      	adds	r2, r1, #1
 8018886:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801888a:	0949      	lsrs	r1, r1, #5
 801888c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018890:	430b      	orrs	r3, r1
 8018892:	803b      	strh	r3, [r7, #0]
 8018894:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018896:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018898:	4413      	add	r3, r2
 801889a:	9329      	str	r3, [sp, #164]	; 0xa4
 801889c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801889e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80188a0:	441a      	add	r2, r3
 80188a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80188a4:	922a      	str	r2, [sp, #168]	; 0xa8
 80188a6:	3b01      	subs	r3, #1
 80188a8:	3702      	adds	r7, #2
 80188aa:	9313      	str	r3, [sp, #76]	; 0x4c
 80188ac:	e689      	b.n	80185c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80188ae:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80188b0:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80188b2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80188b4:	4433      	add	r3, r6
 80188b6:	9329      	str	r3, [sp, #164]	; 0xa4
 80188b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80188ba:	441c      	add	r4, r3
 80188bc:	9b08      	ldr	r3, [sp, #32]
 80188be:	942a      	str	r4, [sp, #168]	; 0xa8
 80188c0:	3b01      	subs	r3, #1
 80188c2:	9308      	str	r3, [sp, #32]
 80188c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80188c6:	3302      	adds	r3, #2
 80188c8:	9309      	str	r3, [sp, #36]	; 0x24
 80188ca:	e658      	b.n	801857e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80188cc:	d028      	beq.n	8018920 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 80188ce:	9b08      	ldr	r3, [sp, #32]
 80188d0:	982b      	ldr	r0, [sp, #172]	; 0xac
 80188d2:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80188d4:	3b01      	subs	r3, #1
 80188d6:	fb00 5003 	mla	r0, r0, r3, r5
 80188da:	1400      	asrs	r0, r0, #16
 80188dc:	f53f ae6c 	bmi.w	80185b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80188e0:	3901      	subs	r1, #1
 80188e2:	4288      	cmp	r0, r1
 80188e4:	f6bf ae68 	bge.w	80185b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80188e8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80188ea:	982a      	ldr	r0, [sp, #168]	; 0xa8
 80188ec:	fb01 0303 	mla	r3, r1, r3, r0
 80188f0:	141b      	asrs	r3, r3, #16
 80188f2:	f53f ae61 	bmi.w	80185b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80188f6:	3a01      	subs	r2, #1
 80188f8:	4293      	cmp	r3, r2
 80188fa:	f6bf ae5d 	bge.w	80185b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80188fe:	9b08      	ldr	r3, [sp, #32]
 8018900:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018904:	9313      	str	r3, [sp, #76]	; 0x4c
 8018906:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801890a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801890c:	2b00      	cmp	r3, #0
 801890e:	f300 8082 	bgt.w	8018a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018912:	9b08      	ldr	r3, [sp, #32]
 8018914:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801891a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801891e:	9309      	str	r3, [sp, #36]	; 0x24
 8018920:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018922:	2b00      	cmp	r3, #0
 8018924:	f340 81ef 	ble.w	8018d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8018928:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801892c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018930:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018934:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018936:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801893a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801893e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018942:	eef0 6a48 	vmov.f32	s13, s16
 8018946:	ee69 7a27 	vmul.f32	s15, s18, s15
 801894a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801894e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018952:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8018956:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801895a:	eef0 6a68 	vmov.f32	s13, s17
 801895e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018962:	ee18 2a10 	vmov	r2, s16
 8018966:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801896a:	fb92 f3f3 	sdiv	r3, r2, r3
 801896e:	ee18 2a90 	vmov	r2, s17
 8018972:	932b      	str	r3, [sp, #172]	; 0xac
 8018974:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018976:	fb92 f3f3 	sdiv	r3, r2, r3
 801897a:	932c      	str	r3, [sp, #176]	; 0xb0
 801897c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801897e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018980:	3b01      	subs	r3, #1
 8018982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018986:	9311      	str	r3, [sp, #68]	; 0x44
 8018988:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801898a:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801898e:	bf08      	it	eq
 8018990:	4613      	moveq	r3, r2
 8018992:	9308      	str	r3, [sp, #32]
 8018994:	eef0 8a67 	vmov.f32	s17, s15
 8018998:	eeb0 8a47 	vmov.f32	s16, s14
 801899c:	e5e1      	b.n	8018562 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801899e:	fb08 f505 	mul.w	r5, r8, r5
 80189a2:	fb09 5303 	mla	r3, r9, r3, r5
 80189a6:	e661      	b.n	801866c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80189a8:	4681      	mov	r9, r0
 80189aa:	e688      	b.n	80186be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80189ac:	f1c1 0210 	rsb	r2, r1, #16
 80189b0:	4341      	muls	r1, r0
 80189b2:	fb09 1902 	mla	r9, r9, r2, r1
 80189b6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80189ba:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80189be:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80189c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80189c6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80189ca:	ea42 0909 	orr.w	r9, r2, r9
 80189ce:	fa1f f289 	uxth.w	r2, r9
 80189d2:	e71b      	b.n	801880c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 80189d4:	803a      	strh	r2, [r7, #0]
 80189d6:	e75d      	b.n	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80189d8:	f115 0e01 	adds.w	lr, r5, #1
 80189dc:	f53f af5a 	bmi.w	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80189e0:	4572      	cmp	r2, lr
 80189e2:	f6ff af57 	blt.w	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80189e6:	f110 0e01 	adds.w	lr, r0, #1
 80189ea:	f53f af53 	bmi.w	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80189ee:	4573      	cmp	r3, lr
 80189f0:	f6ff af50 	blt.w	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80189f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80189f6:	9502      	str	r5, [sp, #8]
 80189f8:	b21b      	sxth	r3, r3
 80189fa:	b212      	sxth	r2, r2
 80189fc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8018a00:	9301      	str	r3, [sp, #4]
 8018a02:	9200      	str	r2, [sp, #0]
 8018a04:	e9cd c405 	strd	ip, r4, [sp, #20]
 8018a08:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8018a0c:	4639      	mov	r1, r7
 8018a0e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018a10:	f7ff fbd2 	bl	80181b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8018a14:	e73e      	b.n	8018894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8018a16:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018a18:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018a1c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a1e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8018a22:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018a24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018a28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a2a:	141f      	asrs	r7, r3, #16
 8018a2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018a2e:	141b      	asrs	r3, r3, #16
 8018a30:	fb01 3707 	mla	r7, r1, r7, r3
 8018a34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018a36:	fa1f fc82 	uxth.w	ip, r2
 8018a3a:	eb03 0a07 	add.w	sl, r3, r7
 8018a3e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8018a42:	f813 9007 	ldrb.w	r9, [r3, r7]
 8018a46:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018a4a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018a4e:	b29b      	uxth	r3, r3
 8018a50:	2d00      	cmp	r5, #0
 8018a52:	f000 813d 	beq.w	8018cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8018a56:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018a5a:	940f      	str	r4, [sp, #60]	; 0x3c
 8018a5c:	eb0a 0b01 	add.w	fp, sl, r1
 8018a60:	fa1f fa85 	uxth.w	sl, r5
 8018a64:	fb0a fc0c 	mul.w	ip, sl, ip
 8018a68:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018a6c:	fa1f fa8a 	uxth.w	sl, sl
 8018a70:	eba0 000c 	sub.w	r0, r0, ip
 8018a74:	eba3 030a 	sub.w	r3, r3, sl
 8018a78:	b280      	uxth	r0, r0
 8018a7a:	fb08 f000 	mul.w	r0, r8, r0
 8018a7e:	b29b      	uxth	r3, r3
 8018a80:	fb09 0303 	mla	r3, r9, r3, r0
 8018a84:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018a86:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018a8a:	9410      	str	r4, [sp, #64]	; 0x40
 8018a8c:	fb0a 3300 	mla	r3, sl, r0, r3
 8018a90:	fb0c 3304 	mla	r3, ip, r4, r3
 8018a94:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018a98:	2b00      	cmp	r3, #0
 8018a9a:	f000 810b 	beq.w	8018cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8018a9e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018aa0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018aa2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018aa6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018aaa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018aae:	f000 8114 	beq.w	8018cda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8018ab2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018ab6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018aba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018abe:	fb09 f707 	mul.w	r7, r9, r7
 8018ac2:	fb0a fc0c 	mul.w	ip, sl, ip
 8018ac6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018aca:	f107 0b20 	add.w	fp, r7, #32
 8018ace:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018ad2:	44cc      	add	ip, r9
 8018ad4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018ad8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018adc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018ae0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018ae4:	ea4c 0909 	orr.w	r9, ip, r9
 8018ae8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018aec:	8847      	ldrh	r7, [r0, #2]
 8018aee:	d019      	beq.n	8018b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8018af0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018af4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018af8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018afc:	fb08 f807 	mul.w	r8, r8, r7
 8018b00:	fb0a fc0c 	mul.w	ip, sl, ip
 8018b04:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8018b08:	f108 0b20 	add.w	fp, r8, #32
 8018b0c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018b10:	44bc      	add	ip, r7
 8018b12:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8018b16:	0a3f      	lsrs	r7, r7, #8
 8018b18:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018b1c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018b20:	ea4c 0707 	orr.w	r7, ip, r7
 8018b24:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8018b28:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8018b2c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b30:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018b34:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018b38:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8018b3c:	ea4c 0909 	orr.w	r9, ip, r9
 8018b40:	ea4a 0707 	orr.w	r7, sl, r7
 8018b44:	2d00      	cmp	r5, #0
 8018b46:	f000 80ca 	beq.w	8018cde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8018b4a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018b4e:	3901      	subs	r1, #1
 8018b50:	0049      	lsls	r1, r1, #1
 8018b52:	3102      	adds	r1, #2
 8018b54:	eb00 0c01 	add.w	ip, r0, r1
 8018b58:	5a41      	ldrh	r1, [r0, r1]
 8018b5a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018b5c:	28ff      	cmp	r0, #255	; 0xff
 8018b5e:	d019      	beq.n	8018b94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8018b60:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018b62:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8018b66:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018b6a:	fb04 fa01 	mul.w	sl, r4, r1
 8018b6e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018b72:	fb08 f800 	mul.w	r8, r8, r0
 8018b76:	f10a 0020 	add.w	r0, sl, #32
 8018b7a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018b7e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018b82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018b86:	4441      	add	r1, r8
 8018b88:	0a00      	lsrs	r0, r0, #8
 8018b8a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018b8e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018b92:	4301      	orrs	r1, r0
 8018b94:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018b96:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018b9a:	2cff      	cmp	r4, #255	; 0xff
 8018b9c:	d01a      	beq.n	8018bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8018b9e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8018ba2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ba6:	fb04 fa00 	mul.w	sl, r4, r0
 8018baa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018bae:	fb08 f80c 	mul.w	r8, r8, ip
 8018bb2:	f10a 0c20 	add.w	ip, sl, #32
 8018bb6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018bba:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018bbe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018bc2:	4440      	add	r0, r8
 8018bc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bc8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018bcc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018bd0:	ea40 000c 	orr.w	r0, r0, ip
 8018bd4:	fb15 fc02 	smulbb	ip, r5, r2
 8018bd8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018bdc:	f1c5 0810 	rsb	r8, r5, #16
 8018be0:	eba8 0802 	sub.w	r8, r8, r2
 8018be4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018be8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8018bec:	437a      	muls	r2, r7
 8018bee:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018bf2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8018bf6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018bfa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018bfe:	fb09 2208 	mla	r2, r9, r8, r2
 8018c02:	ea4a 0101 	orr.w	r1, sl, r1
 8018c06:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8018c0a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018c0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018c12:	fb05 2201 	mla	r2, r5, r1, r2
 8018c16:	ea4b 0000 	orr.w	r0, fp, r0
 8018c1a:	fb0c 2200 	mla	r2, ip, r0, r2
 8018c1e:	0d57      	lsrs	r7, r2, #21
 8018c20:	0952      	lsrs	r2, r2, #5
 8018c22:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018c26:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018c2a:	433a      	orrs	r2, r7
 8018c2c:	2bff      	cmp	r3, #255	; 0xff
 8018c2e:	b292      	uxth	r2, r2
 8018c30:	d102      	bne.n	8018c38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8018c32:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018c34:	29ff      	cmp	r1, #255	; 0xff
 8018c36:	d063      	beq.n	8018d00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8018c38:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018c3a:	f8be 1000 	ldrh.w	r1, [lr]
 8018c3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018c40:	4343      	muls	r3, r0
 8018c42:	1c58      	adds	r0, r3, #1
 8018c44:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8018c48:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018c4c:	1208      	asrs	r0, r1, #8
 8018c4e:	b2db      	uxtb	r3, r3
 8018c50:	1215      	asrs	r5, r2, #8
 8018c52:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018c56:	fb10 f003 	smulbb	r0, r0, r3
 8018c5a:	10cf      	asrs	r7, r1, #3
 8018c5c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018c60:	00c9      	lsls	r1, r1, #3
 8018c62:	fb05 0504 	mla	r5, r5, r4, r0
 8018c66:	b2c9      	uxtb	r1, r1
 8018c68:	10d0      	asrs	r0, r2, #3
 8018c6a:	00d2      	lsls	r2, r2, #3
 8018c6c:	fb11 f103 	smulbb	r1, r1, r3
 8018c70:	b2d2      	uxtb	r2, r2
 8018c72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c76:	fb02 1204 	mla	r2, r2, r4, r1
 8018c7a:	fb17 f703 	smulbb	r7, r7, r3
 8018c7e:	b2ad      	uxth	r5, r5
 8018c80:	b292      	uxth	r2, r2
 8018c82:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018c86:	fb00 7004 	mla	r0, r0, r4, r7
 8018c8a:	1c6b      	adds	r3, r5, #1
 8018c8c:	1c57      	adds	r7, r2, #1
 8018c8e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018c92:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018c96:	b280      	uxth	r0, r0
 8018c98:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018c9c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018ca0:	433d      	orrs	r5, r7
 8018ca2:	1c47      	adds	r7, r0, #1
 8018ca4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018ca8:	097f      	lsrs	r7, r7, #5
 8018caa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018cae:	433d      	orrs	r5, r7
 8018cb0:	f8ae 5000 	strh.w	r5, [lr]
 8018cb4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018cb6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018cb8:	4413      	add	r3, r2
 8018cba:	9329      	str	r3, [sp, #164]	; 0xa4
 8018cbc:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018cbe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018cc0:	441a      	add	r2, r3
 8018cc2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018cc4:	922a      	str	r2, [sp, #168]	; 0xa8
 8018cc6:	3b01      	subs	r3, #1
 8018cc8:	f10e 0e02 	add.w	lr, lr, #2
 8018ccc:	9313      	str	r3, [sp, #76]	; 0x4c
 8018cce:	e61c      	b.n	801890a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8018cd0:	fb08 f000 	mul.w	r0, r8, r0
 8018cd4:	fb09 0303 	mla	r3, r9, r3, r0
 8018cd8:	e6dc      	b.n	8018a94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 8018cda:	46b9      	mov	r9, r7
 8018cdc:	e704      	b.n	8018ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8018cde:	f1c2 0110 	rsb	r1, r2, #16
 8018ce2:	437a      	muls	r2, r7
 8018ce4:	fb09 2901 	mla	r9, r9, r1, r2
 8018ce8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018cec:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018cf0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018cf4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018cf8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018cfc:	4302      	orrs	r2, r0
 8018cfe:	e795      	b.n	8018c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 8018d00:	f8ae 2000 	strh.w	r2, [lr]
 8018d04:	e7d6      	b.n	8018cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8018d06:	b017      	add	sp, #92	; 0x5c
 8018d08:	ecbd 8b08 	vpop	{d8-d11}
 8018d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d14:	b085      	sub	sp, #20
 8018d16:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8018d1a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018d1e:	9103      	str	r1, [sp, #12]
 8018d20:	fb05 7106 	mla	r1, r5, r6, r7
 8018d24:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 8018d28:	2d00      	cmp	r5, #0
 8018d2a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018d2e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8018d32:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8018d36:	9401      	str	r4, [sp, #4]
 8018d38:	eb02 0901 	add.w	r9, r2, r1
 8018d3c:	f2c0 80c0 	blt.w	8018ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018d40:	45a8      	cmp	r8, r5
 8018d42:	f340 80bd 	ble.w	8018ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8018d46:	2f00      	cmp	r7, #0
 8018d48:	f2c0 80b6 	blt.w	8018eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018d4c:	42be      	cmp	r6, r7
 8018d4e:	f340 80b3 	ble.w	8018eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8018d52:	f812 c001 	ldrb.w	ip, [r2, r1]
 8018d56:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8018d5a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018d5e:	d019      	beq.n	8018d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8018d60:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8018d64:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018d68:	435a      	muls	r2, r3
 8018d6a:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8018d6e:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8018d72:	fb0c f403 	mul.w	r4, ip, r3
 8018d76:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8018d7a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018d7e:	441a      	add	r2, r3
 8018d80:	f104 0320 	add.w	r3, r4, #32
 8018d84:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8018d88:	0a1b      	lsrs	r3, r3, #8
 8018d8a:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8018d8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d92:	4319      	orrs	r1, r3
 8018d94:	b289      	uxth	r1, r1
 8018d96:	1c7b      	adds	r3, r7, #1
 8018d98:	f100 8097 	bmi.w	8018eca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8018d9c:	429e      	cmp	r6, r3
 8018d9e:	f340 8094 	ble.w	8018eca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8018da2:	2800      	cmp	r0, #0
 8018da4:	f000 8094 	beq.w	8018ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8018da8:	f899 4001 	ldrb.w	r4, [r9, #1]
 8018dac:	9b01      	ldr	r3, [sp, #4]
 8018dae:	2cff      	cmp	r4, #255	; 0xff
 8018db0:	885b      	ldrh	r3, [r3, #2]
 8018db2:	d01b      	beq.n	8018dec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8018db4:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8018db8:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8018dbc:	fb0a f202 	mul.w	r2, sl, r2
 8018dc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018dc4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018dc8:	fb04 fa03 	mul.w	sl, r4, r3
 8018dcc:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8018dd0:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8018dd4:	441a      	add	r2, r3
 8018dd6:	f10a 0320 	add.w	r3, sl, #32
 8018dda:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018dde:	0a1b      	lsrs	r3, r3, #8
 8018de0:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8018de4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018de8:	ea4b 0303 	orr.w	r3, fp, r3
 8018dec:	b29b      	uxth	r3, r3
 8018dee:	3501      	adds	r5, #1
 8018df0:	d474      	bmi.n	8018edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8018df2:	45a8      	cmp	r8, r5
 8018df4:	dd72      	ble.n	8018edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8018df6:	f1be 0f00 	cmp.w	lr, #0
 8018dfa:	f000 8111 	beq.w	8019020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 8018dfe:	2f00      	cmp	r7, #0
 8018e00:	db69      	blt.n	8018ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8018e02:	42be      	cmp	r6, r7
 8018e04:	dd67      	ble.n	8018ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8018e06:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018e0a:	9a01      	ldr	r2, [sp, #4]
 8018e0c:	2dff      	cmp	r5, #255	; 0xff
 8018e0e:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8018e12:	d01c      	beq.n	8018e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8018e14:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8018e18:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018e1c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018e20:	fb05 fa0b 	mul.w	sl, r5, fp
 8018e24:	fb08 f802 	mul.w	r8, r8, r2
 8018e28:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018e2c:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8018e30:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018e34:	4490      	add	r8, r2
 8018e36:	f10a 0220 	add.w	r2, sl, #32
 8018e3a:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8018e3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018e42:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8018e46:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018e4a:	ea4b 0b0a 	orr.w	fp, fp, sl
 8018e4e:	fa1f fb8b 	uxth.w	fp, fp
 8018e52:	3701      	adds	r7, #1
 8018e54:	d447      	bmi.n	8018ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8018e56:	42be      	cmp	r6, r7
 8018e58:	dd45      	ble.n	8018ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8018e5a:	2800      	cmp	r0, #0
 8018e5c:	d046      	beq.n	8018eec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8018e5e:	3601      	adds	r6, #1
 8018e60:	9a01      	ldr	r2, [sp, #4]
 8018e62:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018e66:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8018e6a:	2fff      	cmp	r7, #255	; 0xff
 8018e6c:	d01a      	beq.n	8018ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8018e6e:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8018e72:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8018e76:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e7a:	fb07 f902 	mul.w	r9, r7, r2
 8018e7e:	fb08 f806 	mul.w	r8, r8, r6
 8018e82:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8018e86:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8018e8a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018e8e:	44b0      	add	r8, r6
 8018e90:	f109 0620 	add.w	r6, r9, #32
 8018e94:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8018e98:	0a36      	lsrs	r6, r6, #8
 8018e9a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8018e9e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018ea2:	4332      	orrs	r2, r6
 8018ea4:	b292      	uxth	r2, r2
 8018ea6:	280f      	cmp	r0, #15
 8018ea8:	d922      	bls.n	8018ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8018eaa:	4b61      	ldr	r3, [pc, #388]	; (8019030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8018eac:	4a61      	ldr	r2, [pc, #388]	; (8019034 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8018eae:	4862      	ldr	r0, [pc, #392]	; (8019038 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8018eb0:	f240 210d 	movw	r1, #525	; 0x20d
 8018eb4:	f005 f898 	bl	801dfe8 <__assert_func>
 8018eb8:	f04f 0c00 	mov.w	ip, #0
 8018ebc:	4661      	mov	r1, ip
 8018ebe:	e76a      	b.n	8018d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8018ec0:	2400      	movs	r4, #0
 8018ec2:	46a4      	mov	ip, r4
 8018ec4:	4623      	mov	r3, r4
 8018ec6:	4621      	mov	r1, r4
 8018ec8:	e791      	b.n	8018dee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018eca:	2400      	movs	r4, #0
 8018ecc:	4623      	mov	r3, r4
 8018ece:	e78e      	b.n	8018dee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018ed0:	4604      	mov	r4, r0
 8018ed2:	4603      	mov	r3, r0
 8018ed4:	e78b      	b.n	8018dee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8018ed6:	2500      	movs	r5, #0
 8018ed8:	46ab      	mov	fp, r5
 8018eda:	e7ba      	b.n	8018e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8018edc:	2700      	movs	r7, #0
 8018ede:	463d      	mov	r5, r7
 8018ee0:	463a      	mov	r2, r7
 8018ee2:	46bb      	mov	fp, r7
 8018ee4:	e7df      	b.n	8018ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8018ee6:	2700      	movs	r7, #0
 8018ee8:	463a      	mov	r2, r7
 8018eea:	e7dc      	b.n	8018ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8018eec:	4607      	mov	r7, r0
 8018eee:	4602      	mov	r2, r0
 8018ef0:	f1be 0f0f 	cmp.w	lr, #15
 8018ef4:	d8d9      	bhi.n	8018eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8018ef6:	b286      	uxth	r6, r0
 8018ef8:	fa1f f98e 	uxth.w	r9, lr
 8018efc:	fb06 f809 	mul.w	r8, r6, r9
 8018f00:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018f04:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8018f08:	0136      	lsls	r6, r6, #4
 8018f0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f0e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018f12:	9601      	str	r6, [sp, #4]
 8018f14:	ea4a 0101 	orr.w	r1, sl, r1
 8018f18:	fa1f f689 	uxth.w	r6, r9
 8018f1c:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018f20:	fb10 f90e 	smulbb	r9, r0, lr
 8018f24:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8018f28:	9602      	str	r6, [sp, #8]
 8018f2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f2e:	460e      	mov	r6, r1
 8018f30:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018f34:	f1ce 0110 	rsb	r1, lr, #16
 8018f38:	1a09      	subs	r1, r1, r0
 8018f3a:	ea4a 0303 	orr.w	r3, sl, r3
 8018f3e:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8018f42:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018f46:	4343      	muls	r3, r0
 8018f48:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8018f4c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f50:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018f54:	fb01 3106 	mla	r1, r1, r6, r3
 8018f58:	ea4a 0202 	orr.w	r2, sl, r2
 8018f5c:	fb09 1302 	mla	r3, r9, r2, r1
 8018f60:	9901      	ldr	r1, [sp, #4]
 8018f62:	9802      	ldr	r0, [sp, #8]
 8018f64:	9a03      	ldr	r2, [sp, #12]
 8018f66:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8018f6a:	1a09      	subs	r1, r1, r0
 8018f6c:	9801      	ldr	r0, [sp, #4]
 8018f6e:	8812      	ldrh	r2, [r2, #0]
 8018f70:	eba0 0608 	sub.w	r6, r0, r8
 8018f74:	b2b6      	uxth	r6, r6
 8018f76:	b289      	uxth	r1, r1
 8018f78:	4374      	muls	r4, r6
 8018f7a:	fb0c 4401 	mla	r4, ip, r1, r4
 8018f7e:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8018f82:	9902      	ldr	r1, [sp, #8]
 8018f84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018f88:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018f8c:	fb01 4505 	mla	r5, r1, r5, r4
 8018f90:	ea4a 0b0b 	orr.w	fp, sl, fp
 8018f94:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018f98:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8018f9c:	fb08 5707 	mla	r7, r8, r7, r5
 8018fa0:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8018fa4:	1211      	asrs	r1, r2, #8
 8018fa6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018faa:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8018fae:	b2ff      	uxtb	r7, r7
 8018fb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018fb4:	10d0      	asrs	r0, r2, #3
 8018fb6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018fba:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fbe:	00d2      	lsls	r2, r2, #3
 8018fc0:	4379      	muls	r1, r7
 8018fc2:	ea43 0e0e 	orr.w	lr, r3, lr
 8018fc6:	b2d2      	uxtb	r2, r2
 8018fc8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018fcc:	fa1f f38e 	uxth.w	r3, lr
 8018fd0:	4378      	muls	r0, r7
 8018fd2:	4357      	muls	r7, r2
 8018fd4:	1c4a      	adds	r2, r1, #1
 8018fd6:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8018fda:	1219      	asrs	r1, r3, #8
 8018fdc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018fe0:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8018fe4:	4a15      	ldr	r2, [pc, #84]	; (801903c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 8018fe6:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018fea:	1c42      	adds	r2, r0, #1
 8018fec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018ff0:	10da      	asrs	r2, r3, #3
 8018ff2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018ff6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018ffa:	00d2      	lsls	r2, r2, #3
 8018ffc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019000:	430a      	orrs	r2, r1
 8019002:	00db      	lsls	r3, r3, #3
 8019004:	1c79      	adds	r1, r7, #1
 8019006:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801900a:	b2db      	uxtb	r3, r3
 801900c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8019010:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8019014:	4313      	orrs	r3, r2
 8019016:	9a03      	ldr	r2, [sp, #12]
 8019018:	8013      	strh	r3, [r2, #0]
 801901a:	b005      	add	sp, #20
 801901c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019020:	280f      	cmp	r0, #15
 8019022:	f63f af42 	bhi.w	8018eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8019026:	4677      	mov	r7, lr
 8019028:	4675      	mov	r5, lr
 801902a:	4672      	mov	r2, lr
 801902c:	46f3      	mov	fp, lr
 801902e:	e762      	b.n	8018ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8019030:	0802254f 	.word	0x0802254f
 8019034:	08022b0d 	.word	0x08022b0d
 8019038:	08022638 	.word	0x08022638
 801903c:	fffff800 	.word	0xfffff800

08019040 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019044:	ed2d 8b08 	vpush	{d8-d11}
 8019048:	b093      	sub	sp, #76	; 0x4c
 801904a:	eeb0 aa40 	vmov.f32	s20, s0
 801904e:	9210      	str	r2, [sp, #64]	; 0x40
 8019050:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019052:	910e      	str	r1, [sp, #56]	; 0x38
 8019054:	9306      	str	r3, [sp, #24]
 8019056:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801905a:	9011      	str	r0, [sp, #68]	; 0x44
 801905c:	6850      	ldr	r0, [r2, #4]
 801905e:	6812      	ldr	r2, [r2, #0]
 8019060:	fb00 1303 	mla	r3, r0, r3, r1
 8019064:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019068:	9307      	str	r3, [sp, #28]
 801906a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801906c:	681b      	ldr	r3, [r3, #0]
 801906e:	9308      	str	r3, [sp, #32]
 8019070:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019072:	685b      	ldr	r3, [r3, #4]
 8019074:	9309      	str	r3, [sp, #36]	; 0x24
 8019076:	eef0 9a60 	vmov.f32	s19, s1
 801907a:	eeb0 9a41 	vmov.f32	s18, s2
 801907e:	eeb0 8a62 	vmov.f32	s16, s5
 8019082:	eef0 8a43 	vmov.f32	s17, s6
 8019086:	eef0 ba44 	vmov.f32	s23, s8
 801908a:	eeb0 ba64 	vmov.f32	s22, s9
 801908e:	eef0 aa45 	vmov.f32	s21, s10
 8019092:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019094:	2b00      	cmp	r3, #0
 8019096:	dc03      	bgt.n	80190a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019098:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801909a:	2b00      	cmp	r3, #0
 801909c:	f340 83b6 	ble.w	801980c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 80190a0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80190a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80190a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80190aa:	1e48      	subs	r0, r1, #1
 80190ac:	1e55      	subs	r5, r2, #1
 80190ae:	9b06      	ldr	r3, [sp, #24]
 80190b0:	2b00      	cmp	r3, #0
 80190b2:	f340 8199 	ble.w	80193e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 80190b6:	9e25      	ldr	r6, [sp, #148]	; 0x94
 80190b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80190ba:	1436      	asrs	r6, r6, #16
 80190bc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80190c0:	d406      	bmi.n	80190d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80190c2:	4286      	cmp	r6, r0
 80190c4:	da04      	bge.n	80190d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80190c6:	2b00      	cmp	r3, #0
 80190c8:	db02      	blt.n	80190d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80190ca:	42ab      	cmp	r3, r5
 80190cc:	f2c0 818d 	blt.w	80193ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80190d0:	3601      	adds	r6, #1
 80190d2:	f100 817a 	bmi.w	80193ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80190d6:	42b1      	cmp	r1, r6
 80190d8:	f2c0 8177 	blt.w	80193ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80190dc:	3301      	adds	r3, #1
 80190de:	f100 8174 	bmi.w	80193ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80190e2:	429a      	cmp	r2, r3
 80190e4:	f2c0 8171 	blt.w	80193ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80190e8:	9b06      	ldr	r3, [sp, #24]
 80190ea:	9f07      	ldr	r7, [sp, #28]
 80190ec:	930f      	str	r3, [sp, #60]	; 0x3c
 80190ee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80190f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80190f4:	2b00      	cmp	r3, #0
 80190f6:	f340 819a 	ble.w	801942e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80190fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80190fc:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80190fe:	1418      	asrs	r0, r3, #16
 8019100:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019102:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8019106:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019108:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801910c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801910e:	142d      	asrs	r5, r5, #16
 8019110:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8019114:	f100 81ee 	bmi.w	80194f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019118:	f102 3eff 	add.w	lr, r2, #4294967295
 801911c:	4575      	cmp	r5, lr
 801911e:	f280 81e9 	bge.w	80194f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019122:	2800      	cmp	r0, #0
 8019124:	f2c0 81e6 	blt.w	80194f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019128:	f103 3eff 	add.w	lr, r3, #4294967295
 801912c:	4570      	cmp	r0, lr
 801912e:	f280 81e1 	bge.w	80194f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8019132:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019134:	b212      	sxth	r2, r2
 8019136:	fb00 5002 	mla	r0, r0, r2, r5
 801913a:	fa1f fe81 	uxth.w	lr, r1
 801913e:	eb03 0a00 	add.w	sl, r3, r0
 8019142:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019146:	f813 9000 	ldrb.w	r9, [r3, r0]
 801914a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801914e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8019152:	b29b      	uxth	r3, r3
 8019154:	f1bc 0f00 	cmp.w	ip, #0
 8019158:	f000 81af 	beq.w	80194ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801915c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019160:	940a      	str	r4, [sp, #40]	; 0x28
 8019162:	eb0a 0b02 	add.w	fp, sl, r2
 8019166:	fa1f fa8c 	uxth.w	sl, ip
 801916a:	fb0a fe0e 	mul.w	lr, sl, lr
 801916e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019172:	fa1f fa8a 	uxth.w	sl, sl
 8019176:	eba5 050e 	sub.w	r5, r5, lr
 801917a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801917e:	940b      	str	r4, [sp, #44]	; 0x2c
 8019180:	eba3 030a 	sub.w	r3, r3, sl
 8019184:	b2ad      	uxth	r5, r5
 8019186:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019188:	b29b      	uxth	r3, r3
 801918a:	fb08 f505 	mul.w	r5, r8, r5
 801918e:	fb09 5303 	mla	r3, r9, r3, r5
 8019192:	fb0a 3304 	mla	r3, sl, r4, r3
 8019196:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019198:	fb0e 3304 	mla	r3, lr, r4, r3
 801919c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80191a0:	2b00      	cmp	r3, #0
 80191a2:	f000 8105 	beq.w	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80191a6:	9c08      	ldr	r4, [sp, #32]
 80191a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80191ac:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80191b0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80191b4:	f000 8186 	beq.w	80194c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80191b8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80191bc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80191c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80191c4:	fb09 f000 	mul.w	r0, r9, r0
 80191c8:	fb0a fe0e 	mul.w	lr, sl, lr
 80191cc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80191d0:	f100 0b20 	add.w	fp, r0, #32
 80191d4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80191d8:	44ce      	add	lr, r9
 80191da:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80191de:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80191e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80191e6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80191ea:	ea4e 0909 	orr.w	r9, lr, r9
 80191ee:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80191f2:	8868      	ldrh	r0, [r5, #2]
 80191f4:	d019      	beq.n	801922a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80191f6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80191fa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80191fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019202:	fb08 f800 	mul.w	r8, r8, r0
 8019206:	fb0a fe0e 	mul.w	lr, sl, lr
 801920a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801920e:	f108 0b20 	add.w	fp, r8, #32
 8019212:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019216:	4486      	add	lr, r0
 8019218:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801921c:	0a00      	lsrs	r0, r0, #8
 801921e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019222:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019226:	ea4e 0000 	orr.w	r0, lr, r0
 801922a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801922e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019232:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019236:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801923a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801923e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019242:	ea4e 0909 	orr.w	r9, lr, r9
 8019246:	ea4a 0000 	orr.w	r0, sl, r0
 801924a:	f1bc 0f00 	cmp.w	ip, #0
 801924e:	f000 813b 	beq.w	80194c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8019252:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8019256:	3a01      	subs	r2, #1
 8019258:	0052      	lsls	r2, r2, #1
 801925a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801925c:	3202      	adds	r2, #2
 801925e:	2cff      	cmp	r4, #255	; 0xff
 8019260:	eb05 0e02 	add.w	lr, r5, r2
 8019264:	5aaa      	ldrh	r2, [r5, r2]
 8019266:	d018      	beq.n	801929a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8019268:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801926c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019270:	fb04 fa02 	mul.w	sl, r4, r2
 8019274:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019278:	fb08 f805 	mul.w	r8, r8, r5
 801927c:	f10a 0520 	add.w	r5, sl, #32
 8019280:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019284:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019288:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801928c:	4442      	add	r2, r8
 801928e:	0a2d      	lsrs	r5, r5, #8
 8019290:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019294:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019298:	432a      	orrs	r2, r5
 801929a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801929c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80192a0:	2cff      	cmp	r4, #255	; 0xff
 80192a2:	d01a      	beq.n	80192da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80192a4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80192a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80192ac:	fb04 fa05 	mul.w	sl, r4, r5
 80192b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80192b4:	fb08 f80e 	mul.w	r8, r8, lr
 80192b8:	f10a 0e20 	add.w	lr, sl, #32
 80192bc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80192c0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80192c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80192c8:	4445      	add	r5, r8
 80192ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192ce:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80192d2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80192d6:	ea45 050e 	orr.w	r5, r5, lr
 80192da:	fb1c fe01 	smulbb	lr, ip, r1
 80192de:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80192e2:	f1cc 0810 	rsb	r8, ip, #16
 80192e6:	eba8 0801 	sub.w	r8, r8, r1
 80192ea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80192ee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80192f2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80192f6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80192fa:	4341      	muls	r1, r0
 80192fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019300:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019304:	ea4a 0202 	orr.w	r2, sl, r2
 8019308:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801930c:	fb09 1108 	mla	r1, r9, r8, r1
 8019310:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019314:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019318:	fb0c 1102 	mla	r1, ip, r2, r1
 801931c:	ea4b 0505 	orr.w	r5, fp, r5
 8019320:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019324:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019328:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801932c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019330:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019334:	ea42 0e0e 	orr.w	lr, r2, lr
 8019338:	fa1f f28e 	uxth.w	r2, lr
 801933c:	2bff      	cmp	r3, #255	; 0xff
 801933e:	f000 80d7 	beq.w	80194f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8019342:	f8b7 c000 	ldrh.w	ip, [r7]
 8019346:	43db      	mvns	r3, r3
 8019348:	ea4f 202c 	mov.w	r0, ip, asr #8
 801934c:	fa5f fe83 	uxtb.w	lr, r3
 8019350:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019354:	fb00 f00e 	mul.w	r0, r0, lr
 8019358:	1c41      	adds	r1, r0, #1
 801935a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801935e:	1210      	asrs	r0, r2, #8
 8019360:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019364:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019368:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801936c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019370:	496f      	ldr	r1, [pc, #444]	; (8019530 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 8019372:	fb05 f50e 	mul.w	r5, r5, lr
 8019376:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801937a:	1c69      	adds	r1, r5, #1
 801937c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019380:	10d1      	asrs	r1, r2, #3
 8019382:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019386:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801938a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801938e:	b2db      	uxtb	r3, r3
 8019390:	00c9      	lsls	r1, r1, #3
 8019392:	fb03 f30e 	mul.w	r3, r3, lr
 8019396:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801939a:	4301      	orrs	r1, r0
 801939c:	1c58      	adds	r0, r3, #1
 801939e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80193a2:	00d3      	lsls	r3, r2, #3
 80193a4:	b2db      	uxtb	r3, r3
 80193a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80193aa:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 80193ae:	803b      	strh	r3, [r7, #0]
 80193b0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80193b2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80193b4:	4413      	add	r3, r2
 80193b6:	9325      	str	r3, [sp, #148]	; 0x94
 80193b8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80193ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80193bc:	441a      	add	r2, r3
 80193be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80193c0:	9226      	str	r2, [sp, #152]	; 0x98
 80193c2:	3b01      	subs	r3, #1
 80193c4:	3702      	adds	r7, #2
 80193c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80193c8:	e693      	b.n	80190f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80193ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80193cc:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80193ce:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80193d0:	4433      	add	r3, r6
 80193d2:	9325      	str	r3, [sp, #148]	; 0x94
 80193d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80193d6:	441c      	add	r4, r3
 80193d8:	9b06      	ldr	r3, [sp, #24]
 80193da:	9426      	str	r4, [sp, #152]	; 0x98
 80193dc:	3b01      	subs	r3, #1
 80193de:	9306      	str	r3, [sp, #24]
 80193e0:	9b07      	ldr	r3, [sp, #28]
 80193e2:	3302      	adds	r3, #2
 80193e4:	9307      	str	r3, [sp, #28]
 80193e6:	e662      	b.n	80190ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80193e8:	d028      	beq.n	801943c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 80193ea:	9b06      	ldr	r3, [sp, #24]
 80193ec:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80193ee:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80193f0:	3b01      	subs	r3, #1
 80193f2:	fb00 5003 	mla	r0, r0, r3, r5
 80193f6:	1400      	asrs	r0, r0, #16
 80193f8:	f53f ae76 	bmi.w	80190e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80193fc:	3901      	subs	r1, #1
 80193fe:	4288      	cmp	r0, r1
 8019400:	f6bf ae72 	bge.w	80190e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019404:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019406:	9826      	ldr	r0, [sp, #152]	; 0x98
 8019408:	fb01 0303 	mla	r3, r1, r3, r0
 801940c:	141b      	asrs	r3, r3, #16
 801940e:	f53f ae6b 	bmi.w	80190e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019412:	3a01      	subs	r2, #1
 8019414:	4293      	cmp	r3, r2
 8019416:	f6bf ae67 	bge.w	80190e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801941a:	9b06      	ldr	r3, [sp, #24]
 801941c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8019420:	930f      	str	r3, [sp, #60]	; 0x3c
 8019422:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019426:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019428:	2b00      	cmp	r3, #0
 801942a:	f300 8083 	bgt.w	8019534 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801942e:	9b06      	ldr	r3, [sp, #24]
 8019430:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019434:	9b07      	ldr	r3, [sp, #28]
 8019436:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801943a:	9307      	str	r3, [sp, #28]
 801943c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801943e:	2b00      	cmp	r3, #0
 8019440:	f340 81e4 	ble.w	801980c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8019444:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019448:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801944c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019450:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019452:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019456:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801945a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801945e:	eef0 6a48 	vmov.f32	s13, s16
 8019462:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019466:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801946a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801946e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8019472:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019476:	eef0 6a68 	vmov.f32	s13, s17
 801947a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801947e:	ee18 2a10 	vmov	r2, s16
 8019482:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019486:	fb92 f3f3 	sdiv	r3, r2, r3
 801948a:	ee18 2a90 	vmov	r2, s17
 801948e:	9327      	str	r3, [sp, #156]	; 0x9c
 8019490:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019492:	fb92 f3f3 	sdiv	r3, r2, r3
 8019496:	9328      	str	r3, [sp, #160]	; 0xa0
 8019498:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801949a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801949c:	3b01      	subs	r3, #1
 801949e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80194a2:	930e      	str	r3, [sp, #56]	; 0x38
 80194a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80194a6:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 80194aa:	bf08      	it	eq
 80194ac:	4613      	moveq	r3, r2
 80194ae:	9306      	str	r3, [sp, #24]
 80194b0:	eef0 8a67 	vmov.f32	s17, s15
 80194b4:	eeb0 8a47 	vmov.f32	s16, s14
 80194b8:	e5eb      	b.n	8019092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80194ba:	fb08 f505 	mul.w	r5, r8, r5
 80194be:	fb09 5303 	mla	r3, r9, r3, r5
 80194c2:	e66b      	b.n	801919c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80194c4:	4681      	mov	r9, r0
 80194c6:	e692      	b.n	80191ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80194c8:	f1c1 0210 	rsb	r2, r1, #16
 80194cc:	4341      	muls	r1, r0
 80194ce:	fb09 1902 	mla	r9, r9, r2, r1
 80194d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80194d6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80194da:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80194de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80194e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80194e6:	ea42 0909 	orr.w	r9, r2, r9
 80194ea:	fa1f f289 	uxth.w	r2, r9
 80194ee:	e725      	b.n	801933c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80194f0:	803a      	strh	r2, [r7, #0]
 80194f2:	e75d      	b.n	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80194f4:	f115 0e01 	adds.w	lr, r5, #1
 80194f8:	f53f af5a 	bmi.w	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80194fc:	4572      	cmp	r2, lr
 80194fe:	f6ff af57 	blt.w	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019502:	f110 0e01 	adds.w	lr, r0, #1
 8019506:	f53f af53 	bmi.w	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801950a:	4573      	cmp	r3, lr
 801950c:	f6ff af50 	blt.w	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019510:	b21b      	sxth	r3, r3
 8019512:	b212      	sxth	r2, r2
 8019514:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8019518:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801951c:	9301      	str	r3, [sp, #4]
 801951e:	9200      	str	r2, [sp, #0]
 8019520:	4639      	mov	r1, r7
 8019522:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8019526:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019528:	f7ff fbf2 	bl	8018d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801952c:	e740      	b.n	80193b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801952e:	bf00      	nop
 8019530:	fffff800 	.word	0xfffff800
 8019534:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019536:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801953a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801953c:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019540:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019542:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019546:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019548:	141f      	asrs	r7, r3, #16
 801954a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801954c:	141b      	asrs	r3, r3, #16
 801954e:	fb01 3707 	mla	r7, r1, r7, r3
 8019552:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019554:	fa1f fc82 	uxth.w	ip, r2
 8019558:	eb03 0a07 	add.w	sl, r3, r7
 801955c:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019560:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019564:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019568:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801956c:	b29b      	uxth	r3, r3
 801956e:	2d00      	cmp	r5, #0
 8019570:	f000 8131 	beq.w	80197d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x796>
 8019574:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019578:	940c      	str	r4, [sp, #48]	; 0x30
 801957a:	eb0a 0b01 	add.w	fp, sl, r1
 801957e:	fa1f fa85 	uxth.w	sl, r5
 8019582:	fb0a fc0c 	mul.w	ip, sl, ip
 8019586:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801958a:	fa1f fa8a 	uxth.w	sl, sl
 801958e:	eba0 000c 	sub.w	r0, r0, ip
 8019592:	eba3 030a 	sub.w	r3, r3, sl
 8019596:	b280      	uxth	r0, r0
 8019598:	fb08 f000 	mul.w	r0, r8, r0
 801959c:	b29b      	uxth	r3, r3
 801959e:	fb09 0303 	mla	r3, r9, r3, r0
 80195a2:	980c      	ldr	r0, [sp, #48]	; 0x30
 80195a4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80195a8:	940d      	str	r4, [sp, #52]	; 0x34
 80195aa:	fb0a 3300 	mla	r3, sl, r0, r3
 80195ae:	fb0c 3304 	mla	r3, ip, r4, r3
 80195b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80195b6:	2b00      	cmp	r3, #0
 80195b8:	f000 80ff 	beq.w	80197ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 80195bc:	9808      	ldr	r0, [sp, #32]
 80195be:	9c08      	ldr	r4, [sp, #32]
 80195c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80195c4:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80195c8:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80195cc:	f000 8108 	beq.w	80197e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a0>
 80195d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80195d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80195d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80195dc:	fb09 f707 	mul.w	r7, r9, r7
 80195e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80195e4:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80195e8:	f107 0b20 	add.w	fp, r7, #32
 80195ec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80195f0:	44cc      	add	ip, r9
 80195f2:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80195f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80195fa:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80195fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019602:	ea4c 0909 	orr.w	r9, ip, r9
 8019606:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801960a:	8847      	ldrh	r7, [r0, #2]
 801960c:	d019      	beq.n	8019642 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801960e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019612:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019616:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801961a:	fb08 f807 	mul.w	r8, r8, r7
 801961e:	fb0a fc0c 	mul.w	ip, sl, ip
 8019622:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019626:	f108 0b20 	add.w	fp, r8, #32
 801962a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801962e:	44bc      	add	ip, r7
 8019630:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019634:	0a3f      	lsrs	r7, r7, #8
 8019636:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801963a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801963e:	ea4c 0707 	orr.w	r7, ip, r7
 8019642:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019646:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801964a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801964e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019652:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019656:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801965a:	ea4c 0909 	orr.w	r9, ip, r9
 801965e:	ea4a 0707 	orr.w	r7, sl, r7
 8019662:	2d00      	cmp	r5, #0
 8019664:	f000 80be 	beq.w	80197e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8019668:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801966c:	3901      	subs	r1, #1
 801966e:	0049      	lsls	r1, r1, #1
 8019670:	3102      	adds	r1, #2
 8019672:	eb00 0c01 	add.w	ip, r0, r1
 8019676:	5a41      	ldrh	r1, [r0, r1]
 8019678:	980c      	ldr	r0, [sp, #48]	; 0x30
 801967a:	28ff      	cmp	r0, #255	; 0xff
 801967c:	d019      	beq.n	80196b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 801967e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019680:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019684:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019688:	fb04 fa01 	mul.w	sl, r4, r1
 801968c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019690:	fb08 f800 	mul.w	r8, r8, r0
 8019694:	f10a 0020 	add.w	r0, sl, #32
 8019698:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801969c:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80196a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80196a4:	4441      	add	r1, r8
 80196a6:	0a00      	lsrs	r0, r0, #8
 80196a8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80196ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80196b0:	4301      	orrs	r1, r0
 80196b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80196b4:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80196b8:	2cff      	cmp	r4, #255	; 0xff
 80196ba:	d01a      	beq.n	80196f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 80196bc:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80196c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80196c4:	fb04 fa00 	mul.w	sl, r4, r0
 80196c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80196cc:	fb08 f80c 	mul.w	r8, r8, ip
 80196d0:	f10a 0c20 	add.w	ip, sl, #32
 80196d4:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80196d8:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80196dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80196e0:	4440      	add	r0, r8
 80196e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80196e6:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80196ea:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80196ee:	ea40 000c 	orr.w	r0, r0, ip
 80196f2:	fb15 fc02 	smulbb	ip, r5, r2
 80196f6:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80196fa:	f1c5 0810 	rsb	r8, r5, #16
 80196fe:	eba8 0802 	sub.w	r8, r8, r2
 8019702:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019706:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801970a:	437a      	muls	r2, r7
 801970c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019710:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019714:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019718:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801971c:	fb09 2208 	mla	r2, r9, r8, r2
 8019720:	ea4a 0101 	orr.w	r1, sl, r1
 8019724:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019728:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801972c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019730:	fb05 2201 	mla	r2, r5, r1, r2
 8019734:	ea4b 0000 	orr.w	r0, fp, r0
 8019738:	fb0c 2200 	mla	r2, ip, r0, r2
 801973c:	0d57      	lsrs	r7, r2, #21
 801973e:	0952      	lsrs	r2, r2, #5
 8019740:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019744:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019748:	433a      	orrs	r2, r7
 801974a:	2bff      	cmp	r3, #255	; 0xff
 801974c:	b292      	uxth	r2, r2
 801974e:	d05a      	beq.n	8019806 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c6>
 8019750:	f8be 7000 	ldrh.w	r7, [lr]
 8019754:	4c30      	ldr	r4, [pc, #192]	; (8019818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8019756:	43db      	mvns	r3, r3
 8019758:	1238      	asrs	r0, r7, #8
 801975a:	fa5f fc83 	uxtb.w	ip, r3
 801975e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019762:	10fd      	asrs	r5, r7, #3
 8019764:	fb00 f00c 	mul.w	r0, r0, ip
 8019768:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801976c:	fb05 f10c 	mul.w	r1, r5, ip
 8019770:	1c45      	adds	r5, r0, #1
 8019772:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019776:	1215      	asrs	r5, r2, #8
 8019778:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801977c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019780:	1c4d      	adds	r5, r1, #1
 8019782:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8019786:	10d1      	asrs	r1, r2, #3
 8019788:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801978c:	00fb      	lsls	r3, r7, #3
 801978e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019792:	b2db      	uxtb	r3, r3
 8019794:	00c9      	lsls	r1, r1, #3
 8019796:	fb03 f30c 	mul.w	r3, r3, ip
 801979a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801979e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80197a2:	4308      	orrs	r0, r1
 80197a4:	00d2      	lsls	r2, r2, #3
 80197a6:	1c59      	adds	r1, r3, #1
 80197a8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80197ac:	b2d1      	uxtb	r1, r2
 80197ae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80197b2:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80197b6:	f8ae 0000 	strh.w	r0, [lr]
 80197ba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80197bc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80197be:	4413      	add	r3, r2
 80197c0:	9325      	str	r3, [sp, #148]	; 0x94
 80197c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80197c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80197c6:	441a      	add	r2, r3
 80197c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80197ca:	9226      	str	r2, [sp, #152]	; 0x98
 80197cc:	3b01      	subs	r3, #1
 80197ce:	f10e 0e02 	add.w	lr, lr, #2
 80197d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80197d4:	e627      	b.n	8019426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80197d6:	fb08 f000 	mul.w	r0, r8, r0
 80197da:	fb09 0303 	mla	r3, r9, r3, r0
 80197de:	e6e8      	b.n	80195b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 80197e0:	46b9      	mov	r9, r7
 80197e2:	e710      	b.n	8019606 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 80197e4:	f1c2 0110 	rsb	r1, r2, #16
 80197e8:	437a      	muls	r2, r7
 80197ea:	fb09 2901 	mla	r9, r9, r1, r2
 80197ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80197f2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80197f6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80197fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80197fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019802:	4302      	orrs	r2, r0
 8019804:	e7a1      	b.n	801974a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8019806:	f8ae 2000 	strh.w	r2, [lr]
 801980a:	e7d6      	b.n	80197ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 801980c:	b013      	add	sp, #76	; 0x4c
 801980e:	ecbd 8b08 	vpop	{d8-d11}
 8019812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019816:	bf00      	nop
 8019818:	fffff800 	.word	0xfffff800

0801981c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801981c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019820:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8019824:	fb0c 4e03 	mla	lr, ip, r3, r4
 8019828:	f1bc 0f00 	cmp.w	ip, #0
 801982c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019830:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8019834:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8019838:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801983c:	8808      	ldrh	r0, [r1, #0]
 801983e:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8019842:	db2f      	blt.n	80198a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019844:	45e2      	cmp	sl, ip
 8019846:	dd2d      	ble.n	80198a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8019848:	2c00      	cmp	r4, #0
 801984a:	db29      	blt.n	80198a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801984c:	42a3      	cmp	r3, r4
 801984e:	dd27      	ble.n	80198a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8019850:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8019854:	1c62      	adds	r2, r4, #1
 8019856:	d428      	bmi.n	80198aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8019858:	4293      	cmp	r3, r2
 801985a:	dd26      	ble.n	80198aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801985c:	b32f      	cbz	r7, 80198aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801985e:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8019862:	f11c 0c01 	adds.w	ip, ip, #1
 8019866:	d424      	bmi.n	80198b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8019868:	45e2      	cmp	sl, ip
 801986a:	dd22      	ble.n	80198b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801986c:	2e00      	cmp	r6, #0
 801986e:	f000 809c 	beq.w	80199aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8019872:	2c00      	cmp	r4, #0
 8019874:	db1b      	blt.n	80198ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8019876:	42a3      	cmp	r3, r4
 8019878:	dd19      	ble.n	80198ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801987a:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801987e:	3401      	adds	r4, #1
 8019880:	d41a      	bmi.n	80198b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019882:	42a3      	cmp	r3, r4
 8019884:	dd18      	ble.n	80198b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8019886:	b1cf      	cbz	r7, 80198bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8019888:	3301      	adds	r3, #1
 801988a:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801988e:	2f0f      	cmp	r7, #15
 8019890:	d915      	bls.n	80198be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8019892:	4b49      	ldr	r3, [pc, #292]	; (80199b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8019894:	4a49      	ldr	r2, [pc, #292]	; (80199bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8019896:	484a      	ldr	r0, [pc, #296]	; (80199c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8019898:	f240 11ef 	movw	r1, #495	; 0x1ef
 801989c:	f004 fba4 	bl	801dfe8 <__assert_func>
 80198a0:	4681      	mov	r9, r0
 80198a2:	e7d7      	b.n	8019854 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80198a4:	4686      	mov	lr, r0
 80198a6:	4681      	mov	r9, r0
 80198a8:	e7db      	b.n	8019862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80198aa:	4686      	mov	lr, r0
 80198ac:	e7d9      	b.n	8019862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80198ae:	4684      	mov	ip, r0
 80198b0:	e7e5      	b.n	801987e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80198b2:	4603      	mov	r3, r0
 80198b4:	4684      	mov	ip, r0
 80198b6:	e7ea      	b.n	801988e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80198b8:	4603      	mov	r3, r0
 80198ba:	e7e8      	b.n	801988e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80198bc:	4603      	mov	r3, r0
 80198be:	2e0f      	cmp	r6, #15
 80198c0:	d8e7      	bhi.n	8019892 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80198c2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80198c6:	fb17 f806 	smulbb	r8, r7, r6
 80198ca:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80198ce:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80198d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80198d6:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80198da:	ea44 0909 	orr.w	r9, r4, r9
 80198de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80198e2:	f1c6 0410 	rsb	r4, r6, #16
 80198e6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80198ea:	1be4      	subs	r4, r4, r7
 80198ec:	041a      	lsls	r2, r3, #16
 80198ee:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 80198f2:	ea4a 0e0e 	orr.w	lr, sl, lr
 80198f6:	fb07 fe0e 	mul.w	lr, r7, lr
 80198fa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80198fe:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8019902:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019906:	fb04 e409 	mla	r4, r4, r9, lr
 801990a:	4313      	orrs	r3, r2
 801990c:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8019910:	fb08 4303 	mla	r3, r8, r3, r4
 8019914:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019918:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801991c:	4322      	orrs	r2, r4
 801991e:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8019922:	fb06 3202 	mla	r2, r6, r2, r3
 8019926:	0d53      	lsrs	r3, r2, #21
 8019928:	0952      	lsrs	r2, r2, #5
 801992a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801992e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019932:	431a      	orrs	r2, r3
 8019934:	b293      	uxth	r3, r2
 8019936:	b2af      	uxth	r7, r5
 8019938:	1202      	asrs	r2, r0, #8
 801993a:	43ed      	mvns	r5, r5
 801993c:	b2ed      	uxtb	r5, r5
 801993e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019942:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019946:	fb12 f205 	smulbb	r2, r2, r5
 801994a:	10c6      	asrs	r6, r0, #3
 801994c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019950:	fb0c 2c07 	mla	ip, ip, r7, r2
 8019954:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019958:	10da      	asrs	r2, r3, #3
 801995a:	fb16 f605 	smulbb	r6, r6, r5
 801995e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019962:	fb02 6207 	mla	r2, r2, r7, r6
 8019966:	b296      	uxth	r6, r2
 8019968:	00c2      	lsls	r2, r0, #3
 801996a:	00dc      	lsls	r4, r3, #3
 801996c:	b2d2      	uxtb	r2, r2
 801996e:	b2e4      	uxtb	r4, r4
 8019970:	fb12 f205 	smulbb	r2, r2, r5
 8019974:	fb04 2207 	mla	r2, r4, r7, r2
 8019978:	fa1f fc8c 	uxth.w	ip, ip
 801997c:	b292      	uxth	r2, r2
 801997e:	f10c 0301 	add.w	r3, ip, #1
 8019982:	1c50      	adds	r0, r2, #1
 8019984:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019988:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801998c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019990:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019994:	4313      	orrs	r3, r2
 8019996:	1c72      	adds	r2, r6, #1
 8019998:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801999c:	0952      	lsrs	r2, r2, #5
 801999e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80199a2:	4313      	orrs	r3, r2
 80199a4:	800b      	strh	r3, [r1, #0]
 80199a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80199aa:	2f0f      	cmp	r7, #15
 80199ac:	f63f af71 	bhi.w	8019892 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80199b0:	4603      	mov	r3, r0
 80199b2:	4684      	mov	ip, r0
 80199b4:	e785      	b.n	80198c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80199b6:	bf00      	nop
 80199b8:	0802254f 	.word	0x0802254f
 80199bc:	08022bb6 	.word	0x08022bb6
 80199c0:	08022638 	.word	0x08022638

080199c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199c8:	ed2d 8b08 	vpush	{d8-d11}
 80199cc:	b093      	sub	sp, #76	; 0x4c
 80199ce:	461d      	mov	r5, r3
 80199d0:	9210      	str	r2, [sp, #64]	; 0x40
 80199d2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80199d4:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 80199d8:	920b      	str	r2, [sp, #44]	; 0x2c
 80199da:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 80199de:	910a      	str	r1, [sp, #40]	; 0x28
 80199e0:	6859      	ldr	r1, [r3, #4]
 80199e2:	681b      	ldr	r3, [r3, #0]
 80199e4:	9011      	str	r0, [sp, #68]	; 0x44
 80199e6:	fb01 2707 	mla	r7, r1, r7, r2
 80199ea:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80199ee:	9307      	str	r3, [sp, #28]
 80199f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80199f2:	681b      	ldr	r3, [r3, #0]
 80199f4:	9309      	str	r3, [sp, #36]	; 0x24
 80199f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80199f8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80199fc:	43db      	mvns	r3, r3
 80199fe:	b2db      	uxtb	r3, r3
 8019a00:	eeb0 aa40 	vmov.f32	s20, s0
 8019a04:	eef0 9a60 	vmov.f32	s19, s1
 8019a08:	eeb0 9a41 	vmov.f32	s18, s2
 8019a0c:	eeb0 8a62 	vmov.f32	s16, s5
 8019a10:	eef0 8a43 	vmov.f32	s17, s6
 8019a14:	eef0 ba44 	vmov.f32	s23, s8
 8019a18:	eeb0 ba64 	vmov.f32	s22, s9
 8019a1c:	eef0 aa45 	vmov.f32	s21, s10
 8019a20:	9308      	str	r3, [sp, #32]
 8019a22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019a24:	2b00      	cmp	r3, #0
 8019a26:	dc03      	bgt.n	8019a30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a2a:	2b00      	cmp	r3, #0
 8019a2c:	f340 8203 	ble.w	8019e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019a30:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a3a:	1e48      	subs	r0, r1, #1
 8019a3c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019a40:	2d00      	cmp	r5, #0
 8019a42:	f340 80da 	ble.w	8019bfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019a46:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019a4a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019a4e:	d406      	bmi.n	8019a5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019a50:	4586      	cmp	lr, r0
 8019a52:	da04      	bge.n	8019a5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019a54:	2b00      	cmp	r3, #0
 8019a56:	db02      	blt.n	8019a5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019a58:	4563      	cmp	r3, ip
 8019a5a:	f2c0 80cf 	blt.w	8019bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8019a5e:	f11e 0e01 	adds.w	lr, lr, #1
 8019a62:	f100 80c1 	bmi.w	8019be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019a66:	4571      	cmp	r1, lr
 8019a68:	f2c0 80be 	blt.w	8019be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019a6c:	3301      	adds	r3, #1
 8019a6e:	f100 80bb 	bmi.w	8019be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019a72:	429a      	cmp	r2, r3
 8019a74:	f2c0 80b8 	blt.w	8019be8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8019a78:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8019a7c:	46a9      	mov	r9, r5
 8019a7e:	f1b9 0f00 	cmp.w	r9, #0
 8019a82:	f340 80d8 	ble.w	8019c36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019a86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019a88:	1421      	asrs	r1, r4, #16
 8019a8a:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019a8e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019a92:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019a96:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019a9a:	f100 8111 	bmi.w	8019cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019a9e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019aa2:	4551      	cmp	r1, sl
 8019aa4:	f280 810c 	bge.w	8019cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019aa8:	2800      	cmp	r0, #0
 8019aaa:	f2c0 8109 	blt.w	8019cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019aae:	f103 3aff 	add.w	sl, r3, #4294967295
 8019ab2:	4550      	cmp	r0, sl
 8019ab4:	f280 8104 	bge.w	8019cc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8019ab8:	fa0f f38e 	sxth.w	r3, lr
 8019abc:	fb00 1103 	mla	r1, r0, r3, r1
 8019ac0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019ac2:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8019ac6:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8019aca:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8019ace:	f1bc 0f00 	cmp.w	ip, #0
 8019ad2:	d007      	beq.n	8019ae4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8019ad4:	005b      	lsls	r3, r3, #1
 8019ad6:	eb0a 0003 	add.w	r0, sl, r3
 8019ada:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8019ade:	930c      	str	r3, [sp, #48]	; 0x30
 8019ae0:	8843      	ldrh	r3, [r0, #2]
 8019ae2:	930d      	str	r3, [sp, #52]	; 0x34
 8019ae4:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8019ae8:	fb12 f30c 	smulbb	r3, r2, ip
 8019aec:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019af0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019af4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019af8:	10db      	asrs	r3, r3, #3
 8019afa:	ea40 000e 	orr.w	r0, r0, lr
 8019afe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019b02:	f1cc 0e10 	rsb	lr, ip, #16
 8019b06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019b0a:	ebae 0e02 	sub.w	lr, lr, r2
 8019b0e:	ea4a 0101 	orr.w	r1, sl, r1
 8019b12:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019b16:	4351      	muls	r1, r2
 8019b18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019b1a:	9f08      	ldr	r7, [sp, #32]
 8019b1c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8019b20:	fb0e 1e00 	mla	lr, lr, r0, r1
 8019b24:	0410      	lsls	r0, r2, #16
 8019b26:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019b2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019b2e:	4310      	orrs	r0, r2
 8019b30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019b32:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019b34:	0412      	lsls	r2, r2, #16
 8019b36:	fb03 e000 	mla	r0, r3, r0, lr
 8019b3a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019b3e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8019b42:	ea42 020e 	orr.w	r2, r2, lr
 8019b46:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8019b4a:	fb03 0302 	mla	r3, r3, r2, r0
 8019b4e:	0d5a      	lsrs	r2, r3, #21
 8019b50:	095b      	lsrs	r3, r3, #5
 8019b52:	f8b8 c000 	ldrh.w	ip, [r8]
 8019b56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b5e:	4313      	orrs	r3, r2
 8019b60:	b29b      	uxth	r3, r3
 8019b62:	ea4f 212c 	mov.w	r1, ip, asr #8
 8019b66:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8019b6a:	1218      	asrs	r0, r3, #8
 8019b6c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019b70:	fb11 f107 	smulbb	r1, r1, r7
 8019b74:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8019b78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019b7c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019b80:	fb00 1002 	mla	r0, r0, r2, r1
 8019b84:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019b88:	10d9      	asrs	r1, r3, #3
 8019b8a:	fa5f fc8c 	uxtb.w	ip, ip
 8019b8e:	00db      	lsls	r3, r3, #3
 8019b90:	b2db      	uxtb	r3, r3
 8019b92:	fb1c fc07 	smulbb	ip, ip, r7
 8019b96:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019b9a:	fb1e fe07 	smulbb	lr, lr, r7
 8019b9e:	fb01 e102 	mla	r1, r1, r2, lr
 8019ba2:	fb03 c202 	mla	r2, r3, r2, ip
 8019ba6:	b280      	uxth	r0, r0
 8019ba8:	b292      	uxth	r2, r2
 8019baa:	1c43      	adds	r3, r0, #1
 8019bac:	f102 0c01 	add.w	ip, r2, #1
 8019bb0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019bb4:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8019bb8:	b289      	uxth	r1, r1
 8019bba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019bbe:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019bc2:	4313      	orrs	r3, r2
 8019bc4:	1c4a      	adds	r2, r1, #1
 8019bc6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019bca:	0949      	lsrs	r1, r1, #5
 8019bcc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019bd0:	430b      	orrs	r3, r1
 8019bd2:	f8a8 3000 	strh.w	r3, [r8]
 8019bd6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019bd8:	441c      	add	r4, r3
 8019bda:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019bdc:	f108 0802 	add.w	r8, r8, #2
 8019be0:	441e      	add	r6, r3
 8019be2:	f109 39ff 	add.w	r9, r9, #4294967295
 8019be6:	e74a      	b.n	8019a7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8019be8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019bea:	441c      	add	r4, r3
 8019bec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019bee:	441e      	add	r6, r3
 8019bf0:	9b07      	ldr	r3, [sp, #28]
 8019bf2:	3302      	adds	r3, #2
 8019bf4:	3d01      	subs	r5, #1
 8019bf6:	9307      	str	r3, [sp, #28]
 8019bf8:	e722      	b.n	8019a40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019bfa:	d022      	beq.n	8019c42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8019bfc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8019bfe:	1e6b      	subs	r3, r5, #1
 8019c00:	fb00 4003 	mla	r0, r0, r3, r4
 8019c04:	1400      	asrs	r0, r0, #16
 8019c06:	f53f af37 	bmi.w	8019a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019c0a:	3901      	subs	r1, #1
 8019c0c:	4288      	cmp	r0, r1
 8019c0e:	f6bf af33 	bge.w	8019a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019c12:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019c14:	fb01 6303 	mla	r3, r1, r3, r6
 8019c18:	141b      	asrs	r3, r3, #16
 8019c1a:	f53f af2d 	bmi.w	8019a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019c1e:	3a01      	subs	r2, #1
 8019c20:	4293      	cmp	r3, r2
 8019c22:	f6bf af29 	bge.w	8019a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019c26:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8019c2a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8019c2e:	46a8      	mov	r8, r5
 8019c30:	f1b8 0f00 	cmp.w	r8, #0
 8019c34:	dc5e      	bgt.n	8019cf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8019c36:	9b07      	ldr	r3, [sp, #28]
 8019c38:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019c3c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019c40:	9307      	str	r3, [sp, #28]
 8019c42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019c44:	2b00      	cmp	r3, #0
 8019c46:	f340 80f6 	ble.w	8019e36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8019c4a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019c4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019c52:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019c56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c58:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019c5c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019c60:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019c64:	eef0 6a48 	vmov.f32	s13, s16
 8019c68:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019c6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019c70:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019c74:	ee16 4a90 	vmov	r4, s13
 8019c78:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019c7c:	eef0 6a68 	vmov.f32	s13, s17
 8019c80:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019c84:	ee18 2a10 	vmov	r2, s16
 8019c88:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019c8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c90:	ee18 2a90 	vmov	r2, s17
 8019c94:	9327      	str	r3, [sp, #156]	; 0x9c
 8019c96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019c98:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c9c:	9328      	str	r3, [sp, #160]	; 0xa0
 8019c9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ca0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ca2:	3b01      	subs	r3, #1
 8019ca4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ca8:	930a      	str	r3, [sp, #40]	; 0x28
 8019caa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019cac:	ee16 6a90 	vmov	r6, s13
 8019cb0:	bf14      	ite	ne
 8019cb2:	461d      	movne	r5, r3
 8019cb4:	4615      	moveq	r5, r2
 8019cb6:	eef0 8a67 	vmov.f32	s17, s15
 8019cba:	eeb0 8a47 	vmov.f32	s16, s14
 8019cbe:	e6b0      	b.n	8019a22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019cc0:	f111 0a01 	adds.w	sl, r1, #1
 8019cc4:	d487      	bmi.n	8019bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019cc6:	45d6      	cmp	lr, sl
 8019cc8:	db85      	blt.n	8019bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019cca:	f110 0a01 	adds.w	sl, r0, #1
 8019cce:	d482      	bmi.n	8019bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019cd0:	4553      	cmp	r3, sl
 8019cd2:	db80      	blt.n	8019bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019cd4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8019cd6:	9101      	str	r1, [sp, #4]
 8019cd8:	b21b      	sxth	r3, r3
 8019cda:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8019cde:	9300      	str	r3, [sp, #0]
 8019ce0:	e9cd c704 	strd	ip, r7, [sp, #16]
 8019ce4:	fa0f f38e 	sxth.w	r3, lr
 8019ce8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019cea:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019cec:	4641      	mov	r1, r8
 8019cee:	f7ff fd95 	bl	801981c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8019cf2:	e770      	b.n	8019bd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019cf4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019cf6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8019cf8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019cfc:	1430      	asrs	r0, r6, #16
 8019cfe:	1423      	asrs	r3, r4, #16
 8019d00:	fb01 3000 	mla	r0, r1, r0, r3
 8019d04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d06:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8019d0a:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8019d0e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019d12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019d16:	8858      	ldrh	r0, [r3, #2]
 8019d18:	f1be 0f00 	cmp.w	lr, #0
 8019d1c:	d00b      	beq.n	8019d36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8019d1e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019d22:	3901      	subs	r1, #1
 8019d24:	0049      	lsls	r1, r1, #1
 8019d26:	3102      	adds	r1, #2
 8019d28:	eb03 0b01 	add.w	fp, r3, r1
 8019d2c:	5a5b      	ldrh	r3, [r3, r1]
 8019d2e:	930e      	str	r3, [sp, #56]	; 0x38
 8019d30:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8019d34:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d36:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8019d3a:	fb12 f30e 	smulbb	r3, r2, lr
 8019d3e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019d42:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019d46:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8019d4a:	10db      	asrs	r3, r3, #3
 8019d4c:	ea41 010c 	orr.w	r1, r1, ip
 8019d50:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019d54:	f1ce 0c10 	rsb	ip, lr, #16
 8019d58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019d5c:	ebac 0c02 	sub.w	ip, ip, r2
 8019d60:	ea4b 0000 	orr.w	r0, fp, r0
 8019d64:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8019d68:	4350      	muls	r0, r2
 8019d6a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d6c:	9f08      	ldr	r7, [sp, #32]
 8019d6e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019d72:	fb0c 0c01 	mla	ip, ip, r1, r0
 8019d76:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8019d7a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8019d7e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019d80:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019d82:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019d86:	0412      	lsls	r2, r2, #16
 8019d88:	ea4b 0101 	orr.w	r1, fp, r1
 8019d8c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019d90:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019d94:	fb03 c101 	mla	r1, r3, r1, ip
 8019d98:	4302      	orrs	r2, r0
 8019d9a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8019d9e:	fb03 1202 	mla	r2, r3, r2, r1
 8019da2:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8019da6:	0952      	lsrs	r2, r2, #5
 8019da8:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8019dac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019db0:	f8b9 2000 	ldrh.w	r2, [r9]
 8019db4:	ea4b 0303 	orr.w	r3, fp, r3
 8019db8:	b29b      	uxth	r3, r3
 8019dba:	1211      	asrs	r1, r2, #8
 8019dbc:	1218      	asrs	r0, r3, #8
 8019dbe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019dc2:	fb11 f107 	smulbb	r1, r1, r7
 8019dc6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019dca:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019dce:	00d2      	lsls	r2, r2, #3
 8019dd0:	fb00 100a 	mla	r0, r0, sl, r1
 8019dd4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019dd8:	10d9      	asrs	r1, r3, #3
 8019dda:	b2d2      	uxtb	r2, r2
 8019ddc:	00db      	lsls	r3, r3, #3
 8019dde:	fb1c fc07 	smulbb	ip, ip, r7
 8019de2:	fb12 f207 	smulbb	r2, r2, r7
 8019de6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019dea:	b2db      	uxtb	r3, r3
 8019dec:	b280      	uxth	r0, r0
 8019dee:	fb01 c10a 	mla	r1, r1, sl, ip
 8019df2:	fb03 230a 	mla	r3, r3, sl, r2
 8019df6:	b29b      	uxth	r3, r3
 8019df8:	b289      	uxth	r1, r1
 8019dfa:	1c42      	adds	r2, r0, #1
 8019dfc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019e00:	f101 0c01 	add.w	ip, r1, #1
 8019e04:	1c5a      	adds	r2, r3, #1
 8019e06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019e0a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019e0e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019e10:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019e14:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019e18:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019e1c:	4310      	orrs	r0, r2
 8019e1e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019e22:	441c      	add	r4, r3
 8019e24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019e26:	ea40 000c 	orr.w	r0, r0, ip
 8019e2a:	f829 0b02 	strh.w	r0, [r9], #2
 8019e2e:	441e      	add	r6, r3
 8019e30:	f108 38ff 	add.w	r8, r8, #4294967295
 8019e34:	e6fc      	b.n	8019c30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8019e36:	b013      	add	sp, #76	; 0x4c
 8019e38:	ecbd 8b08 	vpop	{d8-d11}
 8019e3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8019e40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019e44:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8019e48:	fb06 5c03 	mla	ip, r6, r3, r5
 8019e4c:	2e00      	cmp	r6, #0
 8019e4e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8019e52:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8019e56:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8019e5a:	8808      	ldrh	r0, [r1, #0]
 8019e5c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019e60:	db2e      	blt.n	8019ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019e62:	45b0      	cmp	r8, r6
 8019e64:	dd2c      	ble.n	8019ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8019e66:	2d00      	cmp	r5, #0
 8019e68:	db28      	blt.n	8019ebc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019e6a:	42ab      	cmp	r3, r5
 8019e6c:	dd26      	ble.n	8019ebc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8019e6e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8019e72:	1c6a      	adds	r2, r5, #1
 8019e74:	d427      	bmi.n	8019ec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019e76:	4293      	cmp	r3, r2
 8019e78:	dd25      	ble.n	8019ec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019e7a:	b324      	cbz	r4, 8019ec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8019e7c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8019e80:	3601      	adds	r6, #1
 8019e82:	d424      	bmi.n	8019ece <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019e84:	45b0      	cmp	r8, r6
 8019e86:	dd22      	ble.n	8019ece <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8019e88:	b31f      	cbz	r7, 8019ed2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8019e8a:	2d00      	cmp	r5, #0
 8019e8c:	db1d      	blt.n	8019eca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019e8e:	42ab      	cmp	r3, r5
 8019e90:	dd1b      	ble.n	8019eca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8019e92:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8019e96:	3501      	adds	r5, #1
 8019e98:	d405      	bmi.n	8019ea6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019e9a:	42ab      	cmp	r3, r5
 8019e9c:	dd03      	ble.n	8019ea6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019e9e:	b124      	cbz	r4, 8019eaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8019ea0:	3301      	adds	r3, #1
 8019ea2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8019ea6:	2c0f      	cmp	r4, #15
 8019ea8:	d801      	bhi.n	8019eae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019eaa:	2f0f      	cmp	r7, #15
 8019eac:	d914      	bls.n	8019ed8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8019eae:	4b27      	ldr	r3, [pc, #156]	; (8019f4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8019eb0:	4a27      	ldr	r2, [pc, #156]	; (8019f50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8019eb2:	4828      	ldr	r0, [pc, #160]	; (8019f54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8019eb4:	f240 11ef 	movw	r1, #495	; 0x1ef
 8019eb8:	f004 f896 	bl	801dfe8 <__assert_func>
 8019ebc:	4684      	mov	ip, r0
 8019ebe:	e7d8      	b.n	8019e72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8019ec0:	4602      	mov	r2, r0
 8019ec2:	4684      	mov	ip, r0
 8019ec4:	e7dc      	b.n	8019e80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019ec6:	4602      	mov	r2, r0
 8019ec8:	e7da      	b.n	8019e80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8019eca:	4606      	mov	r6, r0
 8019ecc:	e7e3      	b.n	8019e96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8019ece:	4606      	mov	r6, r0
 8019ed0:	e7e9      	b.n	8019ea6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8019ed2:	2c0f      	cmp	r4, #15
 8019ed4:	d8eb      	bhi.n	8019eae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8019ed6:	4606      	mov	r6, r0
 8019ed8:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8019edc:	fb14 f307 	smulbb	r3, r4, r7
 8019ee0:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8019ee4:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8019ee8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019eec:	10db      	asrs	r3, r3, #3
 8019eee:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ef2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019ef6:	f1c7 0510 	rsb	r5, r7, #16
 8019efa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019efe:	1b2d      	subs	r5, r5, r4
 8019f00:	ea4e 0202 	orr.w	r2, lr, r2
 8019f04:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8019f08:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019f0c:	4354      	muls	r4, r2
 8019f0e:	fb05 450c 	mla	r5, r5, ip, r4
 8019f12:	0404      	lsls	r4, r0, #16
 8019f14:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019f18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019f1c:	4320      	orrs	r0, r4
 8019f1e:	fb03 5400 	mla	r4, r3, r0, r5
 8019f22:	0430      	lsls	r0, r6, #16
 8019f24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019f28:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8019f2c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8019f30:	4330      	orrs	r0, r6
 8019f32:	fb07 4000 	mla	r0, r7, r0, r4
 8019f36:	0d43      	lsrs	r3, r0, #21
 8019f38:	0940      	lsrs	r0, r0, #5
 8019f3a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019f3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019f42:	4318      	orrs	r0, r3
 8019f44:	8008      	strh	r0, [r1, #0]
 8019f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019f4a:	bf00      	nop
 8019f4c:	0802254f 	.word	0x0802254f
 8019f50:	08022bb6 	.word	0x08022bb6
 8019f54:	08022638 	.word	0x08022638

08019f58 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f5c:	ed2d 8b08 	vpush	{d8-d11}
 8019f60:	b08f      	sub	sp, #60	; 0x3c
 8019f62:	461d      	mov	r5, r3
 8019f64:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019f66:	920c      	str	r2, [sp, #48]	; 0x30
 8019f68:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8019f6c:	9107      	str	r1, [sp, #28]
 8019f6e:	6859      	ldr	r1, [r3, #4]
 8019f70:	681b      	ldr	r3, [r3, #0]
 8019f72:	900d      	str	r0, [sp, #52]	; 0x34
 8019f74:	fb01 2707 	mla	r7, r1, r7, r2
 8019f78:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8019f7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019f7e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8019f82:	f8d3 8000 	ldr.w	r8, [r3]
 8019f86:	eeb0 aa40 	vmov.f32	s20, s0
 8019f8a:	eef0 9a60 	vmov.f32	s19, s1
 8019f8e:	eeb0 9a41 	vmov.f32	s18, s2
 8019f92:	eeb0 8a62 	vmov.f32	s16, s5
 8019f96:	eef0 8a43 	vmov.f32	s17, s6
 8019f9a:	eef0 ba44 	vmov.f32	s23, s8
 8019f9e:	eeb0 ba64 	vmov.f32	s22, s9
 8019fa2:	eef0 aa45 	vmov.f32	s21, s10
 8019fa6:	9b07      	ldr	r3, [sp, #28]
 8019fa8:	2b00      	cmp	r3, #0
 8019faa:	dc03      	bgt.n	8019fb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019fac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019fae:	2b00      	cmp	r3, #0
 8019fb0:	f340 8181 	ble.w	801a2b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8019fb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019fb6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019fba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019fbe:	1e48      	subs	r0, r1, #1
 8019fc0:	f102 3cff 	add.w	ip, r2, #4294967295
 8019fc4:	2d00      	cmp	r5, #0
 8019fc6:	f340 809b 	ble.w	801a100 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8019fca:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019fce:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019fd2:	d406      	bmi.n	8019fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019fd4:	4586      	cmp	lr, r0
 8019fd6:	da04      	bge.n	8019fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019fd8:	2b00      	cmp	r3, #0
 8019fda:	db02      	blt.n	8019fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019fdc:	4563      	cmp	r3, ip
 8019fde:	f2c0 8090 	blt.w	801a102 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8019fe2:	f11e 0e01 	adds.w	lr, lr, #1
 8019fe6:	f100 8084 	bmi.w	801a0f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019fea:	4571      	cmp	r1, lr
 8019fec:	f2c0 8081 	blt.w	801a0f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019ff0:	3301      	adds	r3, #1
 8019ff2:	d47e      	bmi.n	801a0f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019ff4:	429a      	cmp	r2, r3
 8019ff6:	db7c      	blt.n	801a0f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019ff8:	46aa      	mov	sl, r5
 8019ffa:	46b9      	mov	r9, r7
 8019ffc:	f1ba 0f00 	cmp.w	sl, #0
 801a000:	f340 8099 	ble.w	801a136 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801a004:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a006:	1421      	asrs	r1, r4, #16
 801a008:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a00c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a010:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a014:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a018:	f100 80d0 	bmi.w	801a1bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a01c:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a020:	4559      	cmp	r1, fp
 801a022:	f280 80cb 	bge.w	801a1bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a026:	2800      	cmp	r0, #0
 801a028:	f2c0 80c8 	blt.w	801a1bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a02c:	f103 3bff 	add.w	fp, r3, #4294967295
 801a030:	4558      	cmp	r0, fp
 801a032:	f280 80c3 	bge.w	801a1bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801a036:	fa0f fe8e 	sxth.w	lr, lr
 801a03a:	fb00 110e 	mla	r1, r0, lr, r1
 801a03e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a042:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a046:	8841      	ldrh	r1, [r0, #2]
 801a048:	f1bc 0f00 	cmp.w	ip, #0
 801a04c:	d00b      	beq.n	801a066 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a04e:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801a052:	3b01      	subs	r3, #1
 801a054:	005b      	lsls	r3, r3, #1
 801a056:	3302      	adds	r3, #2
 801a058:	eb00 0e03 	add.w	lr, r0, r3
 801a05c:	5ac3      	ldrh	r3, [r0, r3]
 801a05e:	9308      	str	r3, [sp, #32]
 801a060:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a064:	9309      	str	r3, [sp, #36]	; 0x24
 801a066:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a06a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a06e:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a072:	ea40 000b 	orr.w	r0, r0, fp
 801a076:	fb12 f30c 	smulbb	r3, r2, ip
 801a07a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a07e:	10db      	asrs	r3, r3, #3
 801a080:	f1cc 0e10 	rsb	lr, ip, #16
 801a084:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a088:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a08c:	ebae 0e02 	sub.w	lr, lr, r2
 801a090:	ea4b 0101 	orr.w	r1, fp, r1
 801a094:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a098:	4351      	muls	r1, r2
 801a09a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a09c:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a0a0:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a0a4:	0410      	lsls	r0, r2, #16
 801a0a6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a0aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a0ae:	4310      	orrs	r0, r2
 801a0b0:	9a08      	ldr	r2, [sp, #32]
 801a0b2:	9908      	ldr	r1, [sp, #32]
 801a0b4:	0412      	lsls	r2, r2, #16
 801a0b6:	fb03 e000 	mla	r0, r3, r0, lr
 801a0ba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a0be:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a0c2:	ea42 020e 	orr.w	r2, r2, lr
 801a0c6:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a0ca:	fb03 0302 	mla	r3, r3, r2, r0
 801a0ce:	0d5a      	lsrs	r2, r3, #21
 801a0d0:	095b      	lsrs	r3, r3, #5
 801a0d2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a0da:	4313      	orrs	r3, r2
 801a0dc:	f8a9 3000 	strh.w	r3, [r9]
 801a0e0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a0e2:	441c      	add	r4, r3
 801a0e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a0e6:	f109 0902 	add.w	r9, r9, #2
 801a0ea:	441e      	add	r6, r3
 801a0ec:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a0f0:	e784      	b.n	8019ffc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a0f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a0f4:	441c      	add	r4, r3
 801a0f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a0f8:	3d01      	subs	r5, #1
 801a0fa:	441e      	add	r6, r3
 801a0fc:	3702      	adds	r7, #2
 801a0fe:	e761      	b.n	8019fc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a100:	d01d      	beq.n	801a13e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a102:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801a104:	1e6b      	subs	r3, r5, #1
 801a106:	fb00 4003 	mla	r0, r0, r3, r4
 801a10a:	1400      	asrs	r0, r0, #16
 801a10c:	f53f af74 	bmi.w	8019ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a110:	3901      	subs	r1, #1
 801a112:	4288      	cmp	r0, r1
 801a114:	f6bf af70 	bge.w	8019ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a118:	9924      	ldr	r1, [sp, #144]	; 0x90
 801a11a:	fb01 6303 	mla	r3, r1, r3, r6
 801a11e:	141b      	asrs	r3, r3, #16
 801a120:	f53f af6a 	bmi.w	8019ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a124:	3a01      	subs	r2, #1
 801a126:	4293      	cmp	r3, r2
 801a128:	f6bf af66 	bge.w	8019ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a12c:	46a9      	mov	r9, r5
 801a12e:	46ba      	mov	sl, r7
 801a130:	f1b9 0f00 	cmp.w	r9, #0
 801a134:	dc5a      	bgt.n	801a1ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801a136:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a13a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a13e:	9b07      	ldr	r3, [sp, #28]
 801a140:	2b00      	cmp	r3, #0
 801a142:	f340 80b8 	ble.w	801a2b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801a146:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a14a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a14e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a152:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a154:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a158:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a15c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a160:	eef0 6a48 	vmov.f32	s13, s16
 801a164:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a168:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a16c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a170:	ee16 4a90 	vmov	r4, s13
 801a174:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a178:	eef0 6a68 	vmov.f32	s13, s17
 801a17c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a180:	ee18 2a10 	vmov	r2, s16
 801a184:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a188:	fb92 f3f3 	sdiv	r3, r2, r3
 801a18c:	ee18 2a90 	vmov	r2, s17
 801a190:	9323      	str	r3, [sp, #140]	; 0x8c
 801a192:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a194:	fb92 f3f3 	sdiv	r3, r2, r3
 801a198:	9324      	str	r3, [sp, #144]	; 0x90
 801a19a:	9b07      	ldr	r3, [sp, #28]
 801a19c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a19e:	3b01      	subs	r3, #1
 801a1a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1a4:	9307      	str	r3, [sp, #28]
 801a1a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1a8:	ee16 6a90 	vmov	r6, s13
 801a1ac:	bf14      	ite	ne
 801a1ae:	461d      	movne	r5, r3
 801a1b0:	4615      	moveq	r5, r2
 801a1b2:	eef0 8a67 	vmov.f32	s17, s15
 801a1b6:	eeb0 8a47 	vmov.f32	s16, s14
 801a1ba:	e6f4      	b.n	8019fa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a1bc:	f111 0b01 	adds.w	fp, r1, #1
 801a1c0:	d48e      	bmi.n	801a0e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a1c2:	45de      	cmp	lr, fp
 801a1c4:	db8c      	blt.n	801a0e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a1c6:	f110 0b01 	adds.w	fp, r0, #1
 801a1ca:	d489      	bmi.n	801a0e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a1cc:	455b      	cmp	r3, fp
 801a1ce:	db87      	blt.n	801a0e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a1d0:	b21b      	sxth	r3, r3
 801a1d2:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801a1d6:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801a1da:	9300      	str	r3, [sp, #0]
 801a1dc:	4642      	mov	r2, r8
 801a1de:	fa0f f38e 	sxth.w	r3, lr
 801a1e2:	4649      	mov	r1, r9
 801a1e4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a1e6:	f7ff fe2b 	bl	8019e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801a1ea:	e779      	b.n	801a0e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a1ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a1ee:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a1f2:	1420      	asrs	r0, r4, #16
 801a1f4:	1431      	asrs	r1, r6, #16
 801a1f6:	fb03 0101 	mla	r1, r3, r1, r0
 801a1fa:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a1fe:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a202:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801a206:	8841      	ldrh	r1, [r0, #2]
 801a208:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a20c:	f1be 0f00 	cmp.w	lr, #0
 801a210:	d00b      	beq.n	801a22a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801a212:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801a216:	3b01      	subs	r3, #1
 801a218:	005b      	lsls	r3, r3, #1
 801a21a:	3302      	adds	r3, #2
 801a21c:	eb00 0b03 	add.w	fp, r0, r3
 801a220:	5ac3      	ldrh	r3, [r0, r3]
 801a222:	930a      	str	r3, [sp, #40]	; 0x28
 801a224:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a228:	930b      	str	r3, [sp, #44]	; 0x2c
 801a22a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801a22e:	fb12 f30e 	smulbb	r3, r2, lr
 801a232:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a236:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a23a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a23e:	10db      	asrs	r3, r3, #3
 801a240:	ea40 000c 	orr.w	r0, r0, ip
 801a244:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a248:	f1ce 0c10 	rsb	ip, lr, #16
 801a24c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a250:	ebac 0c02 	sub.w	ip, ip, r2
 801a254:	ea4b 0101 	orr.w	r1, fp, r1
 801a258:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a25c:	4351      	muls	r1, r2
 801a25e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a260:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a264:	fb0c 1c00 	mla	ip, ip, r0, r1
 801a268:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a26c:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801a270:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a272:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a274:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a278:	0412      	lsls	r2, r2, #16
 801a27a:	ea4b 0000 	orr.w	r0, fp, r0
 801a27e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a282:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801a286:	fb03 c000 	mla	r0, r3, r0, ip
 801a28a:	ea42 0b0b 	orr.w	fp, r2, fp
 801a28e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a292:	fb03 000b 	mla	r0, r3, fp, r0
 801a296:	0d43      	lsrs	r3, r0, #21
 801a298:	0940      	lsrs	r0, r0, #5
 801a29a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a29e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a2a2:	4318      	orrs	r0, r3
 801a2a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a2a6:	f82a 0b02 	strh.w	r0, [sl], #2
 801a2aa:	441c      	add	r4, r3
 801a2ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a2ae:	f109 39ff 	add.w	r9, r9, #4294967295
 801a2b2:	441e      	add	r6, r3
 801a2b4:	e73c      	b.n	801a130 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a2b6:	b00f      	add	sp, #60	; 0x3c
 801a2b8:	ecbd 8b08 	vpop	{d8-d11}
 801a2bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801a2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2c4:	880e      	ldrh	r6, [r1, #0]
 801a2c6:	b085      	sub	sp, #20
 801a2c8:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801a2cc:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801a2d0:	4690      	mov	r8, r2
 801a2d2:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801a2d6:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801a2da:	9200      	str	r2, [sp, #0]
 801a2dc:	00f6      	lsls	r6, r6, #3
 801a2de:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801a2e2:	9201      	str	r2, [sp, #4]
 801a2e4:	2c00      	cmp	r4, #0
 801a2e6:	b2f2      	uxtb	r2, r6
 801a2e8:	fb04 5603 	mla	r6, r4, r3, r5
 801a2ec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801a2f0:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801a2f4:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801a2f8:	9202      	str	r2, [sp, #8]
 801a2fa:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801a2fe:	db36      	blt.n	801a36e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801a300:	45a6      	cmp	lr, r4
 801a302:	dd34      	ble.n	801a36e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801a304:	2d00      	cmp	r5, #0
 801a306:	db30      	blt.n	801a36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801a308:	42ab      	cmp	r3, r5
 801a30a:	dd2e      	ble.n	801a36a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801a30c:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801a310:	1c6e      	adds	r6, r5, #1
 801a312:	d42f      	bmi.n	801a374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801a314:	42b3      	cmp	r3, r6
 801a316:	dd2d      	ble.n	801a374 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801a318:	b370      	cbz	r0, 801a378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801a31a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801a31e:	3401      	adds	r4, #1
 801a320:	d42e      	bmi.n	801a380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801a322:	45a6      	cmp	lr, r4
 801a324:	dd2c      	ble.n	801a380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801a326:	b377      	cbz	r7, 801a386 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 801a328:	2d00      	cmp	r5, #0
 801a32a:	db27      	blt.n	801a37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801a32c:	42ab      	cmp	r3, r5
 801a32e:	dd25      	ble.n	801a37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801a330:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a334:	3501      	adds	r5, #1
 801a336:	d429      	bmi.n	801a38c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801a338:	42ab      	cmp	r3, r5
 801a33a:	dd27      	ble.n	801a38c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801a33c:	b340      	cbz	r0, 801a390 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801a33e:	3301      	adds	r3, #1
 801a340:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801a344:	280f      	cmp	r0, #15
 801a346:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801a34a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801a34e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a352:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801a356:	d801      	bhi.n	801a35c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801a358:	2f0f      	cmp	r7, #15
 801a35a:	d91b      	bls.n	801a394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801a35c:	4b84      	ldr	r3, [pc, #528]	; (801a570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801a35e:	4a85      	ldr	r2, [pc, #532]	; (801a574 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801a360:	4885      	ldr	r0, [pc, #532]	; (801a578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801a362:	f240 210d 	movw	r1, #525	; 0x20d
 801a366:	f003 fe3f 	bl	801dfe8 <__assert_func>
 801a36a:	2200      	movs	r2, #0
 801a36c:	e7d0      	b.n	801a310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801a36e:	2600      	movs	r6, #0
 801a370:	4632      	mov	r2, r6
 801a372:	e7d4      	b.n	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801a374:	2600      	movs	r6, #0
 801a376:	e7d2      	b.n	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801a378:	4606      	mov	r6, r0
 801a37a:	e7d0      	b.n	801a31e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801a37c:	2400      	movs	r4, #0
 801a37e:	e7d9      	b.n	801a334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801a380:	2300      	movs	r3, #0
 801a382:	461c      	mov	r4, r3
 801a384:	e7de      	b.n	801a344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a386:	463b      	mov	r3, r7
 801a388:	463c      	mov	r4, r7
 801a38a:	e7db      	b.n	801a344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a38c:	2300      	movs	r3, #0
 801a38e:	e7d9      	b.n	801a344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a390:	4603      	mov	r3, r0
 801a392:	e7d7      	b.n	801a344 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801a394:	b280      	uxth	r0, r0
 801a396:	b2bf      	uxth	r7, r7
 801a398:	fb00 fe07 	mul.w	lr, r0, r7
 801a39c:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801a3a0:	0100      	lsls	r0, r0, #4
 801a3a2:	eba0 0c0e 	sub.w	ip, r0, lr
 801a3a6:	b2bf      	uxth	r7, r7
 801a3a8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801a3ac:	fa1f fc8c 	uxth.w	ip, ip
 801a3b0:	1bed      	subs	r5, r5, r7
 801a3b2:	b2ad      	uxth	r5, r5
 801a3b4:	fb0c f00a 	mul.w	r0, ip, sl
 801a3b8:	fb05 000b 	mla	r0, r5, fp, r0
 801a3bc:	fb07 0009 	mla	r0, r7, r9, r0
 801a3c0:	fb0e 0008 	mla	r0, lr, r8, r0
 801a3c4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a3c8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801a3cc:	9003      	str	r0, [sp, #12]
 801a3ce:	d018      	beq.n	801a402 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 801a3d0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a3d4:	fb0b f000 	mul.w	r0, fp, r0
 801a3d8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a3dc:	fb0b fb02 	mul.w	fp, fp, r2
 801a3e0:	0a02      	lsrs	r2, r0, #8
 801a3e2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a3e6:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801a3ea:	4402      	add	r2, r0
 801a3ec:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801a3f0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801a3f4:	0a12      	lsrs	r2, r2, #8
 801a3f6:	0a00      	lsrs	r0, r0, #8
 801a3f8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a3fc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a400:	4302      	orrs	r2, r0
 801a402:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801a406:	d019      	beq.n	801a43c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801a408:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801a40c:	fb0a fb0b 	mul.w	fp, sl, fp
 801a410:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a414:	fb0a fa06 	mul.w	sl, sl, r6
 801a418:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801a41c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a420:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a424:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801a428:	445e      	add	r6, fp
 801a42a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801a42e:	0a36      	lsrs	r6, r6, #8
 801a430:	0a00      	lsrs	r0, r0, #8
 801a432:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a436:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a43a:	4306      	orrs	r6, r0
 801a43c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a440:	d019      	beq.n	801a476 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801a442:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801a446:	fb09 fa0a 	mul.w	sl, r9, sl
 801a44a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a44e:	fb09 f904 	mul.w	r9, r9, r4
 801a452:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801a456:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a45a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a45e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801a462:	4454      	add	r4, sl
 801a464:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801a468:	0a24      	lsrs	r4, r4, #8
 801a46a:	0a00      	lsrs	r0, r0, #8
 801a46c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a470:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a474:	4304      	orrs	r4, r0
 801a476:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a47a:	d019      	beq.n	801a4b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801a47c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801a480:	fb08 f909 	mul.w	r9, r8, r9
 801a484:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a488:	fb08 f803 	mul.w	r8, r8, r3
 801a48c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801a490:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a494:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801a498:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801a49c:	444b      	add	r3, r9
 801a49e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801a4a2:	0a1b      	lsrs	r3, r3, #8
 801a4a4:	0a00      	lsrs	r0, r0, #8
 801a4a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a4aa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a4ae:	4303      	orrs	r3, r0
 801a4b0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801a4b4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801a4b8:	fb0c f808 	mul.w	r8, ip, r8
 801a4bc:	fb05 8800 	mla	r8, r5, r0, r8
 801a4c0:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801a4c4:	fb07 8800 	mla	r8, r7, r0, r8
 801a4c8:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801a4cc:	fb0e 8000 	mla	r0, lr, r0, r8
 801a4d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801a4d4:	fb0c f606 	mul.w	r6, ip, r6
 801a4d8:	0a00      	lsrs	r0, r0, #8
 801a4da:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a4de:	fb05 6202 	mla	r2, r5, r2, r6
 801a4e2:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801a4e6:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 801a4ea:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801a4ee:	fb07 2700 	mla	r7, r7, r0, r2
 801a4f2:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801a4f6:	9b03      	ldr	r3, [sp, #12]
 801a4f8:	9c00      	ldr	r4, [sp, #0]
 801a4fa:	b2ad      	uxth	r5, r5
 801a4fc:	436b      	muls	r3, r5
 801a4fe:	fb0e 7000 	mla	r0, lr, r0, r7
 801a502:	1c5a      	adds	r2, r3, #1
 801a504:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a508:	0a00      	lsrs	r0, r0, #8
 801a50a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801a50e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801a512:	ea48 0000 	orr.w	r0, r8, r0
 801a516:	b2d2      	uxtb	r2, r2
 801a518:	fb14 f602 	smulbb	r6, r4, r2
 801a51c:	0c03      	lsrs	r3, r0, #16
 801a51e:	fb03 6305 	mla	r3, r3, r5, r6
 801a522:	b29e      	uxth	r6, r3
 801a524:	9b01      	ldr	r3, [sp, #4]
 801a526:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801a52a:	fb13 f302 	smulbb	r3, r3, r2
 801a52e:	fb04 3405 	mla	r4, r4, r5, r3
 801a532:	9b02      	ldr	r3, [sp, #8]
 801a534:	b2c0      	uxtb	r0, r0
 801a536:	fb13 f202 	smulbb	r2, r3, r2
 801a53a:	fb00 2005 	mla	r0, r0, r5, r2
 801a53e:	b280      	uxth	r0, r0
 801a540:	b2a4      	uxth	r4, r4
 801a542:	1c42      	adds	r2, r0, #1
 801a544:	1c73      	adds	r3, r6, #1
 801a546:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a54a:	1c62      	adds	r2, r4, #1
 801a54c:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801a550:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801a554:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a558:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a55c:	0952      	lsrs	r2, r2, #5
 801a55e:	4303      	orrs	r3, r0
 801a560:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a564:	4313      	orrs	r3, r2
 801a566:	800b      	strh	r3, [r1, #0]
 801a568:	b005      	add	sp, #20
 801a56a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a56e:	bf00      	nop
 801a570:	0802254f 	.word	0x0802254f
 801a574:	08022b0d 	.word	0x08022b0d
 801a578:	08022638 	.word	0x08022638

0801a57c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a57c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a580:	ed2d 8b08 	vpush	{d8-d11}
 801a584:	b09d      	sub	sp, #116	; 0x74
 801a586:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801a58a:	9219      	str	r2, [sp, #100]	; 0x64
 801a58c:	9307      	str	r3, [sp, #28]
 801a58e:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801a590:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801a594:	931a      	str	r3, [sp, #104]	; 0x68
 801a596:	9117      	str	r1, [sp, #92]	; 0x5c
 801a598:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801a59c:	901b      	str	r0, [sp, #108]	; 0x6c
 801a59e:	6850      	ldr	r0, [r2, #4]
 801a5a0:	6812      	ldr	r2, [r2, #0]
 801a5a2:	fb00 1303 	mla	r3, r0, r3, r1
 801a5a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a5aa:	930a      	str	r3, [sp, #40]	; 0x28
 801a5ac:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a5ae:	681b      	ldr	r3, [r3, #0]
 801a5b0:	9310      	str	r3, [sp, #64]	; 0x40
 801a5b2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801a5b6:	930b      	str	r3, [sp, #44]	; 0x2c
 801a5b8:	eeb0 aa40 	vmov.f32	s20, s0
 801a5bc:	eef0 9a60 	vmov.f32	s19, s1
 801a5c0:	eeb0 9a41 	vmov.f32	s18, s2
 801a5c4:	eeb0 8a62 	vmov.f32	s16, s5
 801a5c8:	eef0 8a43 	vmov.f32	s17, s6
 801a5cc:	eef0 ba44 	vmov.f32	s23, s8
 801a5d0:	eeb0 ba64 	vmov.f32	s22, s9
 801a5d4:	eef0 aa45 	vmov.f32	s21, s10
 801a5d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a5da:	2b00      	cmp	r3, #0
 801a5dc:	dc03      	bgt.n	801a5e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a5de:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a5e0:	2b00      	cmp	r3, #0
 801a5e2:	f340 837b 	ble.w	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801a5e6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a5e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a5ec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a5f0:	1e48      	subs	r0, r1, #1
 801a5f2:	1e57      	subs	r7, r2, #1
 801a5f4:	9b07      	ldr	r3, [sp, #28]
 801a5f6:	2b00      	cmp	r3, #0
 801a5f8:	f340 8194 	ble.w	801a924 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801a5fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a600:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a604:	d406      	bmi.n	801a614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a606:	4584      	cmp	ip, r0
 801a608:	da04      	bge.n	801a614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a60a:	2b00      	cmp	r3, #0
 801a60c:	db02      	blt.n	801a614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a60e:	42bb      	cmp	r3, r7
 801a610:	f2c0 8189 	blt.w	801a926 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801a614:	f11c 0c01 	adds.w	ip, ip, #1
 801a618:	f100 8179 	bmi.w	801a90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801a61c:	4561      	cmp	r1, ip
 801a61e:	f2c0 8176 	blt.w	801a90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801a622:	3301      	adds	r3, #1
 801a624:	f100 8173 	bmi.w	801a90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801a628:	429a      	cmp	r2, r3
 801a62a:	f2c0 8170 	blt.w	801a90e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801a62e:	9b07      	ldr	r3, [sp, #28]
 801a630:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a632:	9318      	str	r3, [sp, #96]	; 0x60
 801a634:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a636:	2b00      	cmp	r3, #0
 801a638:	f340 8192 	ble.w	801a960 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801a63c:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801a63e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801a640:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a644:	689b      	ldr	r3, [r3, #8]
 801a646:	1422      	asrs	r2, r4, #16
 801a648:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a64c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a650:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a654:	f100 81d3 	bmi.w	801a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801a658:	f103 38ff 	add.w	r8, r3, #4294967295
 801a65c:	4542      	cmp	r2, r8
 801a65e:	f280 81ce 	bge.w	801a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801a662:	f1bc 0f00 	cmp.w	ip, #0
 801a666:	f2c0 81ca 	blt.w	801a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801a66a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a66e:	45c4      	cmp	ip, r8
 801a670:	f280 81c5 	bge.w	801a9fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801a674:	b21b      	sxth	r3, r3
 801a676:	fb0c 2203 	mla	r2, ip, r3, r2
 801a67a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a67c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a680:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a684:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a688:	2800      	cmp	r0, #0
 801a68a:	f000 81af 	beq.w	801a9ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801a68e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a692:	950c      	str	r5, [sp, #48]	; 0x30
 801a694:	0e2d      	lsrs	r5, r5, #24
 801a696:	9513      	str	r5, [sp, #76]	; 0x4c
 801a698:	b181      	cbz	r1, 801a6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801a69a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a69e:	3b01      	subs	r3, #1
 801a6a0:	009b      	lsls	r3, r3, #2
 801a6a2:	3304      	adds	r3, #4
 801a6a4:	eb08 0c03 	add.w	ip, r8, r3
 801a6a8:	f858 3003 	ldr.w	r3, [r8, r3]
 801a6ac:	9308      	str	r3, [sp, #32]
 801a6ae:	0e1b      	lsrs	r3, r3, #24
 801a6b0:	9311      	str	r3, [sp, #68]	; 0x44
 801a6b2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a6b6:	930d      	str	r3, [sp, #52]	; 0x34
 801a6b8:	0e1b      	lsrs	r3, r3, #24
 801a6ba:	9314      	str	r3, [sp, #80]	; 0x50
 801a6bc:	b280      	uxth	r0, r0
 801a6be:	b289      	uxth	r1, r1
 801a6c0:	fb00 f901 	mul.w	r9, r0, r1
 801a6c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a6c8:	0100      	lsls	r0, r0, #4
 801a6ca:	eba0 0809 	sub.w	r8, r0, r9
 801a6ce:	b289      	uxth	r1, r1
 801a6d0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801a6d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a6d6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6d8:	fa1f f888 	uxth.w	r8, r8
 801a6dc:	1a5b      	subs	r3, r3, r1
 801a6de:	b29b      	uxth	r3, r3
 801a6e0:	fb08 f000 	mul.w	r0, r8, r0
 801a6e4:	fb03 000e 	mla	r0, r3, lr, r0
 801a6e8:	fb01 0005 	mla	r0, r1, r5, r0
 801a6ec:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a6ee:	fb09 0005 	mla	r0, r9, r5, r0
 801a6f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801a6f6:	2800      	cmp	r0, #0
 801a6f8:	f000 8100 	beq.w	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801a6fc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a700:	d01b      	beq.n	801a73a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801a702:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a706:	fb0e fa0a 	mul.w	sl, lr, sl
 801a70a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a70e:	fb0e fe02 	mul.w	lr, lr, r2
 801a712:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a716:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a71a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a71e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a722:	4452      	add	r2, sl
 801a724:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a728:	0a12      	lsrs	r2, r2, #8
 801a72a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a72e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a732:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a736:	ea42 020c 	orr.w	r2, r2, ip
 801a73a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a73c:	2dff      	cmp	r5, #255	; 0xff
 801a73e:	d021      	beq.n	801a784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a740:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a742:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a746:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a748:	fb05 fb0b 	mul.w	fp, r5, fp
 801a74c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a74e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a752:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a754:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a758:	fb05 fa0a 	mul.w	sl, r5, sl
 801a75c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a760:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a764:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a768:	44de      	add	lr, fp
 801a76a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a76e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a772:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a776:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a77a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a77e:	ea4e 050a 	orr.w	r5, lr, sl
 801a782:	950c      	str	r5, [sp, #48]	; 0x30
 801a784:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a786:	2dff      	cmp	r5, #255	; 0xff
 801a788:	d021      	beq.n	801a7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a78a:	9d08      	ldr	r5, [sp, #32]
 801a78c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a790:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a792:	fb05 fb0b 	mul.w	fp, r5, fp
 801a796:	9d08      	ldr	r5, [sp, #32]
 801a798:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a79c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a79e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a7a2:	fb05 fa0a 	mul.w	sl, r5, sl
 801a7a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a7aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a7ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a7b2:	44de      	add	lr, fp
 801a7b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a7b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a7bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a7c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a7c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a7c8:	ea4e 050a 	orr.w	r5, lr, sl
 801a7cc:	9508      	str	r5, [sp, #32]
 801a7ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7d0:	2dff      	cmp	r5, #255	; 0xff
 801a7d2:	d021      	beq.n	801a818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a7d4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a7d6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a7da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7dc:	fb05 fb0b 	mul.w	fp, r5, fp
 801a7e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a7e2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a7e6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a7e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a7ec:	fb05 fa0a 	mul.w	sl, r5, sl
 801a7f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a7f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a7f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a7fc:	44de      	add	lr, fp
 801a7fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a802:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a806:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a80a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a80e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a812:	ea4e 050a 	orr.w	r5, lr, sl
 801a816:	950d      	str	r5, [sp, #52]	; 0x34
 801a818:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a81a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a81e:	9d08      	ldr	r5, [sp, #32]
 801a820:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a824:	fb08 fc0c 	mul.w	ip, r8, ip
 801a828:	fb03 cc0e 	mla	ip, r3, lr, ip
 801a82c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a830:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a832:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a836:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a83a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a83c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a840:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a844:	fb08 f80e 	mul.w	r8, r8, lr
 801a848:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a84c:	fb03 8202 	mla	r2, r3, r2, r8
 801a850:	9b08      	ldr	r3, [sp, #32]
 801a852:	f8b7 e000 	ldrh.w	lr, [r7]
 801a856:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a858:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801a85c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a85e:	fb01 220a 	mla	r2, r1, sl, r2
 801a862:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801a866:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a868:	fb09 2901 	mla	r9, r9, r1, r2
 801a86c:	4343      	muls	r3, r0
 801a86e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a872:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a876:	1c58      	adds	r0, r3, #1
 801a878:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a87c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a880:	ea4c 0c09 	orr.w	ip, ip, r9
 801a884:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a888:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a88a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a88e:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801a892:	ea4f 232e 	mov.w	r3, lr, asr #8
 801a896:	b2c0      	uxtb	r0, r0
 801a898:	fb11 f102 	smulbb	r1, r1, r2
 801a89c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a8a0:	fb03 1300 	mla	r3, r3, r0, r1
 801a8a4:	b299      	uxth	r1, r3
 801a8a6:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801a8aa:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801a8ae:	fb13 f305 	smulbb	r3, r3, r5
 801a8b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a8b6:	fb02 3200 	mla	r2, r2, r0, r3
 801a8ba:	fa5f fc8c 	uxtb.w	ip, ip
 801a8be:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 801a8c2:	b2db      	uxtb	r3, r3
 801a8c4:	fb1c fc05 	smulbb	ip, ip, r5
 801a8c8:	fb03 cc00 	mla	ip, r3, r0, ip
 801a8cc:	b292      	uxth	r2, r2
 801a8ce:	fa1f fc8c 	uxth.w	ip, ip
 801a8d2:	1c4b      	adds	r3, r1, #1
 801a8d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801a8d8:	f10c 0001 	add.w	r0, ip, #1
 801a8dc:	1c51      	adds	r1, r2, #1
 801a8de:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801a8e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a8e6:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a8ea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a8ee:	0952      	lsrs	r2, r2, #5
 801a8f0:	ea43 030c 	orr.w	r3, r3, ip
 801a8f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8f8:	4313      	orrs	r3, r2
 801a8fa:	803b      	strh	r3, [r7, #0]
 801a8fc:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a8fe:	441c      	add	r4, r3
 801a900:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a902:	441e      	add	r6, r3
 801a904:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a906:	3b01      	subs	r3, #1
 801a908:	3702      	adds	r7, #2
 801a90a:	9318      	str	r3, [sp, #96]	; 0x60
 801a90c:	e692      	b.n	801a634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801a90e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801a910:	441c      	add	r4, r3
 801a912:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801a914:	441e      	add	r6, r3
 801a916:	9b07      	ldr	r3, [sp, #28]
 801a918:	3b01      	subs	r3, #1
 801a91a:	9307      	str	r3, [sp, #28]
 801a91c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a91e:	3302      	adds	r3, #2
 801a920:	930a      	str	r3, [sp, #40]	; 0x28
 801a922:	e667      	b.n	801a5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a924:	d023      	beq.n	801a96e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801a926:	9b07      	ldr	r3, [sp, #28]
 801a928:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801a92a:	3b01      	subs	r3, #1
 801a92c:	fb00 4003 	mla	r0, r0, r3, r4
 801a930:	1400      	asrs	r0, r0, #16
 801a932:	f53f ae7c 	bmi.w	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a936:	3901      	subs	r1, #1
 801a938:	4288      	cmp	r0, r1
 801a93a:	f6bf ae78 	bge.w	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a93e:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801a940:	fb01 6303 	mla	r3, r1, r3, r6
 801a944:	141b      	asrs	r3, r3, #16
 801a946:	f53f ae72 	bmi.w	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a94a:	3a01      	subs	r2, #1
 801a94c:	4293      	cmp	r3, r2
 801a94e:	f6bf ae6e 	bge.w	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a952:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a956:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801a95a:	f1bb 0f00 	cmp.w	fp, #0
 801a95e:	dc6c      	bgt.n	801aa3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801a960:	9b07      	ldr	r3, [sp, #28]
 801a962:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a966:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a968:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a96c:	930a      	str	r3, [sp, #40]	; 0x28
 801a96e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a970:	2b00      	cmp	r3, #0
 801a972:	f340 81b3 	ble.w	801acdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801a976:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a97a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a97e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a982:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a984:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a988:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a98c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a990:	eef0 6a48 	vmov.f32	s13, s16
 801a994:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a998:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a99c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a9a0:	ee16 4a90 	vmov	r4, s13
 801a9a4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a9a8:	eef0 6a68 	vmov.f32	s13, s17
 801a9ac:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a9b0:	ee18 2a10 	vmov	r2, s16
 801a9b4:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a9b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9bc:	ee18 2a90 	vmov	r2, s17
 801a9c0:	9331      	str	r3, [sp, #196]	; 0xc4
 801a9c2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a9c4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a9c8:	9332      	str	r3, [sp, #200]	; 0xc8
 801a9ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a9cc:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801a9ce:	3b01      	subs	r3, #1
 801a9d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a9d4:	9317      	str	r3, [sp, #92]	; 0x5c
 801a9d6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a9d8:	bf08      	it	eq
 801a9da:	4613      	moveq	r3, r2
 801a9dc:	ee16 6a90 	vmov	r6, s13
 801a9e0:	9307      	str	r3, [sp, #28]
 801a9e2:	eef0 8a67 	vmov.f32	s17, s15
 801a9e6:	eeb0 8a47 	vmov.f32	s16, s14
 801a9ea:	e5f5      	b.n	801a5d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a9ec:	2900      	cmp	r1, #0
 801a9ee:	f43f ae65 	beq.w	801a6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801a9f2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a9f6:	9308      	str	r3, [sp, #32]
 801a9f8:	0e1b      	lsrs	r3, r3, #24
 801a9fa:	9311      	str	r3, [sp, #68]	; 0x44
 801a9fc:	e65e      	b.n	801a6bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801a9fe:	f112 0801 	adds.w	r8, r2, #1
 801aa02:	f53f af7b 	bmi.w	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801aa06:	4543      	cmp	r3, r8
 801aa08:	f6ff af78 	blt.w	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801aa0c:	f11c 0801 	adds.w	r8, ip, #1
 801aa10:	f53f af74 	bmi.w	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801aa14:	45c6      	cmp	lr, r8
 801aa16:	f6ff af71 	blt.w	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801aa1a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801aa1c:	9201      	str	r2, [sp, #4]
 801aa1e:	fa0f f28e 	sxth.w	r2, lr
 801aa22:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801aa26:	e9cd c002 	strd	ip, r0, [sp, #8]
 801aa2a:	9200      	str	r2, [sp, #0]
 801aa2c:	b21b      	sxth	r3, r3
 801aa2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aa30:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801aa32:	4639      	mov	r1, r7
 801aa34:	f7ff fc44 	bl	801a2c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801aa38:	e760      	b.n	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801aa3a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801aa3c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801aa3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa42:	1427      	asrs	r7, r4, #16
 801aa44:	1433      	asrs	r3, r6, #16
 801aa46:	fb01 7303 	mla	r3, r1, r3, r7
 801aa4a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801aa4e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801aa52:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aa56:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aa5a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801aa5e:	2a00      	cmp	r2, #0
 801aa60:	f000 8133 	beq.w	801acca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 801aa64:	687d      	ldr	r5, [r7, #4]
 801aa66:	950e      	str	r5, [sp, #56]	; 0x38
 801aa68:	0e2d      	lsrs	r5, r5, #24
 801aa6a:	9515      	str	r5, [sp, #84]	; 0x54
 801aa6c:	b178      	cbz	r0, 801aa8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801aa6e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801aa72:	3901      	subs	r1, #1
 801aa74:	0089      	lsls	r1, r1, #2
 801aa76:	3104      	adds	r1, #4
 801aa78:	eb07 0e01 	add.w	lr, r7, r1
 801aa7c:	5879      	ldr	r1, [r7, r1]
 801aa7e:	9109      	str	r1, [sp, #36]	; 0x24
 801aa80:	0e09      	lsrs	r1, r1, #24
 801aa82:	9112      	str	r1, [sp, #72]	; 0x48
 801aa84:	f8de 1004 	ldr.w	r1, [lr, #4]
 801aa88:	910f      	str	r1, [sp, #60]	; 0x3c
 801aa8a:	0e09      	lsrs	r1, r1, #24
 801aa8c:	9116      	str	r1, [sp, #88]	; 0x58
 801aa8e:	b292      	uxth	r2, r2
 801aa90:	b280      	uxth	r0, r0
 801aa92:	fb02 f800 	mul.w	r8, r2, r0
 801aa96:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801aa9a:	0112      	lsls	r2, r2, #4
 801aa9c:	eba2 0e08 	sub.w	lr, r2, r8
 801aaa0:	b280      	uxth	r0, r0
 801aaa2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801aaa6:	9915      	ldr	r1, [sp, #84]	; 0x54
 801aaa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aaaa:	fa1f fe8e 	uxth.w	lr, lr
 801aaae:	1a12      	subs	r2, r2, r0
 801aab0:	b292      	uxth	r2, r2
 801aab2:	fb0e f101 	mul.w	r1, lr, r1
 801aab6:	fb02 110c 	mla	r1, r2, ip, r1
 801aaba:	fb00 1105 	mla	r1, r0, r5, r1
 801aabe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801aac0:	fb08 1105 	mla	r1, r8, r5, r1
 801aac4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801aac8:	2900      	cmp	r1, #0
 801aaca:	f000 80f5 	beq.w	801acb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801aace:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801aad2:	d019      	beq.n	801ab08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801aad4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801aad8:	fb0c fa0a 	mul.w	sl, ip, sl
 801aadc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aae0:	fb0c fc03 	mul.w	ip, ip, r3
 801aae4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aae8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aaec:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aaf0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801aaf4:	4453      	add	r3, sl
 801aaf6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801aafa:	0a1b      	lsrs	r3, r3, #8
 801aafc:	0a3f      	lsrs	r7, r7, #8
 801aafe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ab02:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ab06:	433b      	orrs	r3, r7
 801ab08:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ab0a:	2dff      	cmp	r5, #255	; 0xff
 801ab0c:	d020      	beq.n	801ab50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801ab0e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ab10:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ab14:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ab16:	436f      	muls	r7, r5
 801ab18:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ab1a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ab1e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ab20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ab24:	fb05 fa0a 	mul.w	sl, r5, sl
 801ab28:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ab2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab30:	44bc      	add	ip, r7
 801ab32:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ab36:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ab3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab4a:	ea4c 050a 	orr.w	r5, ip, sl
 801ab4e:	950e      	str	r5, [sp, #56]	; 0x38
 801ab50:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab52:	2dff      	cmp	r5, #255	; 0xff
 801ab54:	d020      	beq.n	801ab98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801ab56:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ab58:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ab5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab5e:	436f      	muls	r7, r5
 801ab60:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ab62:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ab66:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ab68:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ab6c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ab70:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ab74:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab78:	44bc      	add	ip, r7
 801ab7a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ab7e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ab82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ab86:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ab8e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab92:	ea4c 050a 	orr.w	r5, ip, sl
 801ab96:	9509      	str	r5, [sp, #36]	; 0x24
 801ab98:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ab9a:	2dff      	cmp	r5, #255	; 0xff
 801ab9c:	d020      	beq.n	801abe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801ab9e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801aba0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801aba4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801aba6:	436f      	muls	r7, r5
 801aba8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801abaa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801abae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801abb0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801abb4:	fb05 fa0a 	mul.w	sl, r5, sl
 801abb8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801abbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801abc0:	44bc      	add	ip, r7
 801abc2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801abc6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801abca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801abd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801abd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801abda:	ea4c 050a 	orr.w	r5, ip, sl
 801abde:	950f      	str	r5, [sp, #60]	; 0x3c
 801abe0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801abe2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801abe6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801abe8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801abec:	fb0e f707 	mul.w	r7, lr, r7
 801abf0:	fb02 770c 	mla	r7, r2, ip, r7
 801abf4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801abf8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801abfa:	fb00 770c 	mla	r7, r0, ip, r7
 801abfe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ac02:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ac04:	fb08 770c 	mla	r7, r8, ip, r7
 801ac08:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ac0c:	fb0e fe0c 	mul.w	lr, lr, ip
 801ac10:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ac14:	fb02 e303 	mla	r3, r2, r3, lr
 801ac18:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ac1a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ac1c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ac20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac22:	fb00 330a 	mla	r3, r0, sl, r3
 801ac26:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801ac2a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ac2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac30:	f8b9 0000 	ldrh.w	r0, [r9]
 801ac34:	4359      	muls	r1, r3
 801ac36:	0a3f      	lsrs	r7, r7, #8
 801ac38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ac3c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ac40:	1c4b      	adds	r3, r1, #1
 801ac42:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ac46:	ea47 070c 	orr.w	r7, r7, ip
 801ac4a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ac4e:	1202      	asrs	r2, r0, #8
 801ac50:	0c3b      	lsrs	r3, r7, #16
 801ac52:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ac56:	b2c9      	uxtb	r1, r1
 801ac58:	fb13 f305 	smulbb	r3, r3, r5
 801ac5c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ac60:	fb02 3201 	mla	r2, r2, r1, r3
 801ac64:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ac68:	10c3      	asrs	r3, r0, #3
 801ac6a:	b2ff      	uxtb	r7, r7
 801ac6c:	00c0      	lsls	r0, r0, #3
 801ac6e:	b2c0      	uxtb	r0, r0
 801ac70:	fb17 f705 	smulbb	r7, r7, r5
 801ac74:	fb00 7001 	mla	r0, r0, r1, r7
 801ac78:	b292      	uxth	r2, r2
 801ac7a:	fb1c fc05 	smulbb	ip, ip, r5
 801ac7e:	b280      	uxth	r0, r0
 801ac80:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ac84:	fb03 c301 	mla	r3, r3, r1, ip
 801ac88:	1c51      	adds	r1, r2, #1
 801ac8a:	f100 0c01 	add.w	ip, r0, #1
 801ac8e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ac92:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801ac96:	b29b      	uxth	r3, r3
 801ac98:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ac9c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801aca0:	ea42 020c 	orr.w	r2, r2, ip
 801aca4:	f103 0c01 	add.w	ip, r3, #1
 801aca8:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801acac:	095b      	lsrs	r3, r3, #5
 801acae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801acb2:	431a      	orrs	r2, r3
 801acb4:	f8a9 2000 	strh.w	r2, [r9]
 801acb8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801acba:	441c      	add	r4, r3
 801acbc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801acbe:	f109 0902 	add.w	r9, r9, #2
 801acc2:	441e      	add	r6, r3
 801acc4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801acc8:	e647      	b.n	801a95a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801acca:	2800      	cmp	r0, #0
 801accc:	f43f aedf 	beq.w	801aa8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801acd0:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801acd4:	9109      	str	r1, [sp, #36]	; 0x24
 801acd6:	0e09      	lsrs	r1, r1, #24
 801acd8:	9112      	str	r1, [sp, #72]	; 0x48
 801acda:	e6d8      	b.n	801aa8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801acdc:	b01d      	add	sp, #116	; 0x74
 801acde:	ecbd 8b08 	vpop	{d8-d11}
 801ace2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801ace8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ace8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acec:	880e      	ldrh	r6, [r1, #0]
 801acee:	b085      	sub	sp, #20
 801acf0:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801acf4:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801acf8:	4690      	mov	r8, r2
 801acfa:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801acfe:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801ad02:	9200      	str	r2, [sp, #0]
 801ad04:	00f6      	lsls	r6, r6, #3
 801ad06:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801ad0a:	9201      	str	r2, [sp, #4]
 801ad0c:	2c00      	cmp	r4, #0
 801ad0e:	b2f2      	uxtb	r2, r6
 801ad10:	fb04 5603 	mla	r6, r4, r3, r5
 801ad14:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801ad18:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801ad1c:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801ad20:	9202      	str	r2, [sp, #8]
 801ad22:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801ad26:	db36      	blt.n	801ad96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801ad28:	45a6      	cmp	lr, r4
 801ad2a:	dd34      	ble.n	801ad96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801ad2c:	2d00      	cmp	r5, #0
 801ad2e:	db30      	blt.n	801ad92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801ad30:	42ab      	cmp	r3, r5
 801ad32:	dd2e      	ble.n	801ad92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801ad34:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801ad38:	1c6e      	adds	r6, r5, #1
 801ad3a:	d42f      	bmi.n	801ad9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801ad3c:	42b3      	cmp	r3, r6
 801ad3e:	dd2d      	ble.n	801ad9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801ad40:	b370      	cbz	r0, 801ada0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 801ad42:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801ad46:	3401      	adds	r4, #1
 801ad48:	d42e      	bmi.n	801ada8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801ad4a:	45a6      	cmp	lr, r4
 801ad4c:	dd2c      	ble.n	801ada8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801ad4e:	b377      	cbz	r7, 801adae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 801ad50:	2d00      	cmp	r5, #0
 801ad52:	db27      	blt.n	801ada4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801ad54:	42ab      	cmp	r3, r5
 801ad56:	dd25      	ble.n	801ada4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801ad58:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ad5c:	3501      	adds	r5, #1
 801ad5e:	d429      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801ad60:	42ab      	cmp	r3, r5
 801ad62:	dd27      	ble.n	801adb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801ad64:	b340      	cbz	r0, 801adb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801ad66:	3301      	adds	r3, #1
 801ad68:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801ad6c:	280f      	cmp	r0, #15
 801ad6e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801ad72:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801ad76:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ad7a:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801ad7e:	d801      	bhi.n	801ad84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 801ad80:	2f0f      	cmp	r7, #15
 801ad82:	d91b      	bls.n	801adbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 801ad84:	4b7d      	ldr	r3, [pc, #500]	; (801af7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 801ad86:	4a7e      	ldr	r2, [pc, #504]	; (801af80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801ad88:	487e      	ldr	r0, [pc, #504]	; (801af84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801ad8a:	f240 210d 	movw	r1, #525	; 0x20d
 801ad8e:	f003 f92b 	bl	801dfe8 <__assert_func>
 801ad92:	2200      	movs	r2, #0
 801ad94:	e7d0      	b.n	801ad38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801ad96:	2600      	movs	r6, #0
 801ad98:	4632      	mov	r2, r6
 801ad9a:	e7d4      	b.n	801ad46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801ad9c:	2600      	movs	r6, #0
 801ad9e:	e7d2      	b.n	801ad46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801ada0:	4606      	mov	r6, r0
 801ada2:	e7d0      	b.n	801ad46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801ada4:	2400      	movs	r4, #0
 801ada6:	e7d9      	b.n	801ad5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 801ada8:	2300      	movs	r3, #0
 801adaa:	461c      	mov	r4, r3
 801adac:	e7de      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801adae:	463b      	mov	r3, r7
 801adb0:	463c      	mov	r4, r7
 801adb2:	e7db      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801adb4:	2300      	movs	r3, #0
 801adb6:	e7d9      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801adb8:	4603      	mov	r3, r0
 801adba:	e7d7      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801adbc:	b280      	uxth	r0, r0
 801adbe:	b2bf      	uxth	r7, r7
 801adc0:	fb00 fe07 	mul.w	lr, r0, r7
 801adc4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801adc8:	0100      	lsls	r0, r0, #4
 801adca:	eba0 0c0e 	sub.w	ip, r0, lr
 801adce:	b2bf      	uxth	r7, r7
 801add0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801add4:	fa1f fc8c 	uxth.w	ip, ip
 801add8:	1bed      	subs	r5, r5, r7
 801adda:	b2ad      	uxth	r5, r5
 801addc:	fb0c f00a 	mul.w	r0, ip, sl
 801ade0:	fb05 000b 	mla	r0, r5, fp, r0
 801ade4:	fb07 0009 	mla	r0, r7, r9, r0
 801ade8:	fb0e 0008 	mla	r0, lr, r8, r0
 801adec:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801adf0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801adf4:	9003      	str	r0, [sp, #12]
 801adf6:	d018      	beq.n	801ae2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 801adf8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801adfc:	fb0b f000 	mul.w	r0, fp, r0
 801ae00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ae04:	fb0b fb02 	mul.w	fp, fp, r2
 801ae08:	0a02      	lsrs	r2, r0, #8
 801ae0a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ae0e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801ae12:	4402      	add	r2, r0
 801ae14:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801ae18:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ae1c:	0a12      	lsrs	r2, r2, #8
 801ae1e:	0a00      	lsrs	r0, r0, #8
 801ae20:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ae24:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ae28:	4302      	orrs	r2, r0
 801ae2a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ae2e:	d019      	beq.n	801ae64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801ae30:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801ae34:	fb0a fb0b 	mul.w	fp, sl, fp
 801ae38:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801ae3c:	fb0a fa06 	mul.w	sl, sl, r6
 801ae40:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801ae44:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801ae48:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae4c:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801ae50:	445e      	add	r6, fp
 801ae52:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ae56:	0a36      	lsrs	r6, r6, #8
 801ae58:	0a00      	lsrs	r0, r0, #8
 801ae5a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801ae5e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ae62:	4306      	orrs	r6, r0
 801ae64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ae68:	d019      	beq.n	801ae9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801ae6a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801ae6e:	fb09 fa0a 	mul.w	sl, r9, sl
 801ae72:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ae76:	fb09 f904 	mul.w	r9, r9, r4
 801ae7a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801ae7e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ae82:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ae86:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801ae8a:	4454      	add	r4, sl
 801ae8c:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801ae90:	0a24      	lsrs	r4, r4, #8
 801ae92:	0a00      	lsrs	r0, r0, #8
 801ae94:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ae98:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801ae9c:	4304      	orrs	r4, r0
 801ae9e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801aea2:	d019      	beq.n	801aed8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801aea4:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801aea8:	fb08 f909 	mul.w	r9, r8, r9
 801aeac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aeb0:	fb08 f803 	mul.w	r8, r8, r3
 801aeb4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801aeb8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aebc:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801aec0:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801aec4:	444b      	add	r3, r9
 801aec6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801aeca:	0a1b      	lsrs	r3, r3, #8
 801aecc:	0a00      	lsrs	r0, r0, #8
 801aece:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aed2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801aed6:	4303      	orrs	r3, r0
 801aed8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801aedc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801aee0:	fb0c f808 	mul.w	r8, ip, r8
 801aee4:	fb05 8800 	mla	r8, r5, r0, r8
 801aee8:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801aeec:	fb07 8800 	mla	r8, r7, r0, r8
 801aef0:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801aef4:	fb0e 8000 	mla	r0, lr, r0, r8
 801aef8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801aefc:	0a00      	lsrs	r0, r0, #8
 801aefe:	fb0c f606 	mul.w	r6, ip, r6
 801af02:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801af06:	fb05 6202 	mla	r2, r5, r2, r6
 801af0a:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801af0e:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801af12:	fb07 2700 	mla	r7, r7, r0, r2
 801af16:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801af1a:	9b03      	ldr	r3, [sp, #12]
 801af1c:	9c02      	ldr	r4, [sp, #8]
 801af1e:	9d01      	ldr	r5, [sp, #4]
 801af20:	fb0e 7000 	mla	r0, lr, r0, r7
 801af24:	43da      	mvns	r2, r3
 801af26:	9b00      	ldr	r3, [sp, #0]
 801af28:	b2d2      	uxtb	r2, r2
 801af2a:	0a00      	lsrs	r0, r0, #8
 801af2c:	4353      	muls	r3, r2
 801af2e:	4354      	muls	r4, r2
 801af30:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801af34:	ea48 0000 	orr.w	r0, r8, r0
 801af38:	4355      	muls	r5, r2
 801af3a:	4622      	mov	r2, r4
 801af3c:	1c5c      	adds	r4, r3, #1
 801af3e:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801af42:	0c03      	lsrs	r3, r0, #16
 801af44:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801af48:	4b0f      	ldr	r3, [pc, #60]	; (801af88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801af4a:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801af4e:	1c54      	adds	r4, r2, #1
 801af50:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801af54:	b2c2      	uxtb	r2, r0
 801af56:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801af5a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801af5e:	1c6a      	adds	r2, r5, #1
 801af60:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801af64:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801af68:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801af6c:	00c0      	lsls	r0, r0, #3
 801af6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801af72:	4318      	orrs	r0, r3
 801af74:	8008      	strh	r0, [r1, #0]
 801af76:	b005      	add	sp, #20
 801af78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af7c:	0802254f 	.word	0x0802254f
 801af80:	08022b0d 	.word	0x08022b0d
 801af84:	08022638 	.word	0x08022638
 801af88:	fffff800 	.word	0xfffff800

0801af8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801af8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af90:	ed2d 8b08 	vpush	{d8-d11}
 801af94:	b09b      	sub	sp, #108	; 0x6c
 801af96:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801af9a:	9218      	str	r2, [sp, #96]	; 0x60
 801af9c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801af9e:	9116      	str	r1, [sp, #88]	; 0x58
 801afa0:	9307      	str	r3, [sp, #28]
 801afa2:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801afa6:	9019      	str	r0, [sp, #100]	; 0x64
 801afa8:	6850      	ldr	r0, [r2, #4]
 801afaa:	6812      	ldr	r2, [r2, #0]
 801afac:	fb00 1303 	mla	r3, r0, r3, r1
 801afb0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801afb4:	930a      	str	r3, [sp, #40]	; 0x28
 801afb6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801afb8:	681b      	ldr	r3, [r3, #0]
 801afba:	930f      	str	r3, [sp, #60]	; 0x3c
 801afbc:	eeb0 aa40 	vmov.f32	s20, s0
 801afc0:	eef0 9a60 	vmov.f32	s19, s1
 801afc4:	eeb0 9a41 	vmov.f32	s18, s2
 801afc8:	eeb0 8a62 	vmov.f32	s16, s5
 801afcc:	eef0 8a43 	vmov.f32	s17, s6
 801afd0:	eef0 ba44 	vmov.f32	s23, s8
 801afd4:	eeb0 ba64 	vmov.f32	s22, s9
 801afd8:	eef0 aa45 	vmov.f32	s21, s10
 801afdc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801afde:	2b00      	cmp	r3, #0
 801afe0:	dc03      	bgt.n	801afea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801afe2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801afe4:	2b00      	cmp	r3, #0
 801afe6:	f340 838a 	ble.w	801b6fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801afea:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801afec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aff0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aff4:	1e48      	subs	r0, r1, #1
 801aff6:	1e57      	subs	r7, r2, #1
 801aff8:	9b07      	ldr	r3, [sp, #28]
 801affa:	2b00      	cmp	r3, #0
 801affc:	f340 818b 	ble.w	801b316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b000:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b004:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b008:	d406      	bmi.n	801b018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b00a:	4584      	cmp	ip, r0
 801b00c:	da04      	bge.n	801b018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b00e:	2b00      	cmp	r3, #0
 801b010:	db02      	blt.n	801b018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b012:	42bb      	cmp	r3, r7
 801b014:	f2c0 8180 	blt.w	801b318 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b018:	f11c 0c01 	adds.w	ip, ip, #1
 801b01c:	f100 8170 	bmi.w	801b300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b020:	4561      	cmp	r1, ip
 801b022:	f2c0 816d 	blt.w	801b300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b026:	3301      	adds	r3, #1
 801b028:	f100 816a 	bmi.w	801b300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b02c:	429a      	cmp	r2, r3
 801b02e:	f2c0 8167 	blt.w	801b300 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b032:	9b07      	ldr	r3, [sp, #28]
 801b034:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b036:	9317      	str	r3, [sp, #92]	; 0x5c
 801b038:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b03a:	2b00      	cmp	r3, #0
 801b03c:	f340 8189 	ble.w	801b352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801b040:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801b042:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b044:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b048:	689b      	ldr	r3, [r3, #8]
 801b04a:	1422      	asrs	r2, r4, #16
 801b04c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b050:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b054:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b058:	f100 81d8 	bmi.w	801b40c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b05c:	f103 38ff 	add.w	r8, r3, #4294967295
 801b060:	4542      	cmp	r2, r8
 801b062:	f280 81d3 	bge.w	801b40c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b066:	f1bc 0f00 	cmp.w	ip, #0
 801b06a:	f2c0 81cf 	blt.w	801b40c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b06e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b072:	45c4      	cmp	ip, r8
 801b074:	f280 81ca 	bge.w	801b40c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801b078:	b21b      	sxth	r3, r3
 801b07a:	fb0c 2203 	mla	r2, ip, r3, r2
 801b07e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b080:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b084:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b088:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b08c:	2900      	cmp	r1, #0
 801b08e:	f000 81a6 	beq.w	801b3de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b092:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b096:	950b      	str	r5, [sp, #44]	; 0x2c
 801b098:	0e2d      	lsrs	r5, r5, #24
 801b09a:	9512      	str	r5, [sp, #72]	; 0x48
 801b09c:	b180      	cbz	r0, 801b0c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b09e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b0a2:	3b01      	subs	r3, #1
 801b0a4:	009b      	lsls	r3, r3, #2
 801b0a6:	3304      	adds	r3, #4
 801b0a8:	eb08 0c03 	add.w	ip, r8, r3
 801b0ac:	f858 3003 	ldr.w	r3, [r8, r3]
 801b0b0:	9308      	str	r3, [sp, #32]
 801b0b2:	0e1b      	lsrs	r3, r3, #24
 801b0b4:	9310      	str	r3, [sp, #64]	; 0x40
 801b0b6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b0ba:	930c      	str	r3, [sp, #48]	; 0x30
 801b0bc:	0e1b      	lsrs	r3, r3, #24
 801b0be:	9313      	str	r3, [sp, #76]	; 0x4c
 801b0c0:	b289      	uxth	r1, r1
 801b0c2:	b280      	uxth	r0, r0
 801b0c4:	fb01 f900 	mul.w	r9, r1, r0
 801b0c8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b0cc:	0109      	lsls	r1, r1, #4
 801b0ce:	eba1 0809 	sub.w	r8, r1, r9
 801b0d2:	b280      	uxth	r0, r0
 801b0d4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801b0d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b0da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b0dc:	fa1f f888 	uxth.w	r8, r8
 801b0e0:	1a09      	subs	r1, r1, r0
 801b0e2:	b289      	uxth	r1, r1
 801b0e4:	fb08 f303 	mul.w	r3, r8, r3
 801b0e8:	fb01 330e 	mla	r3, r1, lr, r3
 801b0ec:	fb00 3305 	mla	r3, r0, r5, r3
 801b0f0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b0f2:	fb09 3305 	mla	r3, r9, r5, r3
 801b0f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b0fa:	2b00      	cmp	r3, #0
 801b0fc:	f000 80f7 	beq.w	801b2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b100:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b104:	d01b      	beq.n	801b13e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801b106:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b10a:	fb0e fa0a 	mul.w	sl, lr, sl
 801b10e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b112:	fb0e fe02 	mul.w	lr, lr, r2
 801b116:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b11a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b11e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b122:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b126:	4452      	add	r2, sl
 801b128:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b12c:	0a12      	lsrs	r2, r2, #8
 801b12e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b132:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b136:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b13a:	ea42 020c 	orr.w	r2, r2, ip
 801b13e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b140:	2dff      	cmp	r5, #255	; 0xff
 801b142:	d021      	beq.n	801b188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b144:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b146:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b14a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b14c:	fb05 fb0b 	mul.w	fp, r5, fp
 801b150:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b152:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b156:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b158:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b15c:	fb05 fa0a 	mul.w	sl, r5, sl
 801b160:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b164:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b168:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b16c:	44de      	add	lr, fp
 801b16e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b17a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b17e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b182:	ea4e 050a 	orr.w	r5, lr, sl
 801b186:	950b      	str	r5, [sp, #44]	; 0x2c
 801b188:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b18a:	2dff      	cmp	r5, #255	; 0xff
 801b18c:	d021      	beq.n	801b1d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801b18e:	9d08      	ldr	r5, [sp, #32]
 801b190:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b194:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b196:	fb05 fb0b 	mul.w	fp, r5, fp
 801b19a:	9d08      	ldr	r5, [sp, #32]
 801b19c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b1a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b1a2:	fb05 fa0e 	mul.w	sl, r5, lr
 801b1a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b1ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b1b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b1b6:	44de      	add	lr, fp
 801b1b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b1bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b1c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b1c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b1cc:	ea4e 050a 	orr.w	r5, lr, sl
 801b1d0:	9508      	str	r5, [sp, #32]
 801b1d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b1d4:	2dff      	cmp	r5, #255	; 0xff
 801b1d6:	d021      	beq.n	801b21c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801b1d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b1da:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b1de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b1e0:	fb05 fb0b 	mul.w	fp, r5, fp
 801b1e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b1e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b1ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b1ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1f0:	fb05 fa0a 	mul.w	sl, r5, sl
 801b1f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b1f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b1fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b200:	44de      	add	lr, fp
 801b202:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b20a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b20e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b212:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b216:	ea4e 050a 	orr.w	r5, lr, sl
 801b21a:	950c      	str	r5, [sp, #48]	; 0x30
 801b21c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b21e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b222:	9d08      	ldr	r5, [sp, #32]
 801b224:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b228:	fb08 fc0c 	mul.w	ip, r8, ip
 801b22c:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b230:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b234:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b236:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b23a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b23e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b240:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b244:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b248:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b24c:	fb08 f80e 	mul.w	r8, r8, lr
 801b250:	fb01 8202 	mla	r2, r1, r2, r8
 801b254:	9908      	ldr	r1, [sp, #32]
 801b256:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b25a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b25c:	fb00 220a 	mla	r2, r0, sl, r2
 801b260:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801b264:	fb09 2900 	mla	r9, r9, r0, r2
 801b268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b26c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b270:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b274:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b278:	ea4c 0c09 	orr.w	ip, ip, r9
 801b27c:	2bff      	cmp	r3, #255	; 0xff
 801b27e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801b282:	f000 80b5 	beq.w	801b3f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801b286:	8839      	ldrh	r1, [r7, #0]
 801b288:	43db      	mvns	r3, r3
 801b28a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801b28e:	fa5f f883 	uxtb.w	r8, r3
 801b292:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b296:	fb0e fe08 	mul.w	lr, lr, r8
 801b29a:	10c8      	asrs	r0, r1, #3
 801b29c:	00cb      	lsls	r3, r1, #3
 801b29e:	f10e 0101 	add.w	r1, lr, #1
 801b2a2:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b2a6:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 801b2aa:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 801b2ae:	b2db      	uxtb	r3, r3
 801b2b0:	4964      	ldr	r1, [pc, #400]	; (801b444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 801b2b2:	fb03 f308 	mul.w	r3, r3, r8
 801b2b6:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 801b2ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b2be:	1c59      	adds	r1, r3, #1
 801b2c0:	fb00 f008 	mul.w	r0, r0, r8
 801b2c4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b2c8:	fa5f fc8c 	uxtb.w	ip, ip
 801b2cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b2d0:	1c43      	adds	r3, r0, #1
 801b2d2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b2d6:	b2d3      	uxtb	r3, r2
 801b2d8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b2dc:	00db      	lsls	r3, r3, #3
 801b2de:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 801b2e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b2e6:	ea4c 0c03 	orr.w	ip, ip, r3
 801b2ea:	f8a7 c000 	strh.w	ip, [r7]
 801b2ee:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b2f0:	441c      	add	r4, r3
 801b2f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b2f4:	441e      	add	r6, r3
 801b2f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b2f8:	3b01      	subs	r3, #1
 801b2fa:	3702      	adds	r7, #2
 801b2fc:	9317      	str	r3, [sp, #92]	; 0x5c
 801b2fe:	e69b      	b.n	801b038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801b300:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b302:	441c      	add	r4, r3
 801b304:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b306:	441e      	add	r6, r3
 801b308:	9b07      	ldr	r3, [sp, #28]
 801b30a:	3b01      	subs	r3, #1
 801b30c:	9307      	str	r3, [sp, #28]
 801b30e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b310:	3302      	adds	r3, #2
 801b312:	930a      	str	r3, [sp, #40]	; 0x28
 801b314:	e670      	b.n	801aff8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b316:	d023      	beq.n	801b360 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801b318:	9b07      	ldr	r3, [sp, #28]
 801b31a:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801b31c:	3b01      	subs	r3, #1
 801b31e:	fb00 4003 	mla	r0, r0, r3, r4
 801b322:	1400      	asrs	r0, r0, #16
 801b324:	f53f ae85 	bmi.w	801b032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b328:	3901      	subs	r1, #1
 801b32a:	4288      	cmp	r0, r1
 801b32c:	f6bf ae81 	bge.w	801b032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b330:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801b332:	fb01 6303 	mla	r3, r1, r3, r6
 801b336:	141b      	asrs	r3, r3, #16
 801b338:	f53f ae7b 	bmi.w	801b032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b33c:	3a01      	subs	r2, #1
 801b33e:	4293      	cmp	r3, r2
 801b340:	f6bf ae77 	bge.w	801b032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b344:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b348:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801b34c:	f1bb 0f00 	cmp.w	fp, #0
 801b350:	dc7a      	bgt.n	801b448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 801b352:	9b07      	ldr	r3, [sp, #28]
 801b354:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b358:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b35a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b35e:	930a      	str	r3, [sp, #40]	; 0x28
 801b360:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b362:	2b00      	cmp	r3, #0
 801b364:	f340 81cb 	ble.w	801b6fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801b368:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b36c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b370:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b374:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b376:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b37a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b37e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b382:	eef0 6a48 	vmov.f32	s13, s16
 801b386:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b38a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b38e:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b392:	ee16 4a90 	vmov	r4, s13
 801b396:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b39a:	eef0 6a68 	vmov.f32	s13, s17
 801b39e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b3a2:	ee18 2a10 	vmov	r2, s16
 801b3a6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b3aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3ae:	ee18 2a90 	vmov	r2, s17
 801b3b2:	932f      	str	r3, [sp, #188]	; 0xbc
 801b3b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b3b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3ba:	9330      	str	r3, [sp, #192]	; 0xc0
 801b3bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b3be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b3c0:	3b01      	subs	r3, #1
 801b3c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3c6:	9316      	str	r3, [sp, #88]	; 0x58
 801b3c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b3ca:	bf08      	it	eq
 801b3cc:	4613      	moveq	r3, r2
 801b3ce:	ee16 6a90 	vmov	r6, s13
 801b3d2:	9307      	str	r3, [sp, #28]
 801b3d4:	eef0 8a67 	vmov.f32	s17, s15
 801b3d8:	eeb0 8a47 	vmov.f32	s16, s14
 801b3dc:	e5fe      	b.n	801afdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b3de:	2800      	cmp	r0, #0
 801b3e0:	f43f ae6e 	beq.w	801b0c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b3e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b3e8:	9308      	str	r3, [sp, #32]
 801b3ea:	0e1b      	lsrs	r3, r3, #24
 801b3ec:	9310      	str	r3, [sp, #64]	; 0x40
 801b3ee:	e667      	b.n	801b0c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801b3f0:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801b3f4:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801b3f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b3fc:	f022 0207 	bic.w	r2, r2, #7
 801b400:	431a      	orrs	r2, r3
 801b402:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b406:	ea42 0c0c 	orr.w	ip, r2, ip
 801b40a:	e76e      	b.n	801b2ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801b40c:	f112 0801 	adds.w	r8, r2, #1
 801b410:	f53f af6d 	bmi.w	801b2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b414:	4543      	cmp	r3, r8
 801b416:	f6ff af6a 	blt.w	801b2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b41a:	f11c 0801 	adds.w	r8, ip, #1
 801b41e:	f53f af66 	bmi.w	801b2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b422:	45c6      	cmp	lr, r8
 801b424:	f6ff af63 	blt.w	801b2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b428:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801b42c:	fa0f f28e 	sxth.w	r2, lr
 801b430:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801b434:	9200      	str	r2, [sp, #0]
 801b436:	b21b      	sxth	r3, r3
 801b438:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b43a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b43c:	4639      	mov	r1, r7
 801b43e:	f7ff fc53 	bl	801ace8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801b442:	e754      	b.n	801b2ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801b444:	fffff800 	.word	0xfffff800
 801b448:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801b44a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b44c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801b450:	1421      	asrs	r1, r4, #16
 801b452:	1433      	asrs	r3, r6, #16
 801b454:	fb07 1303 	mla	r3, r7, r3, r1
 801b458:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b45a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801b45e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b462:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b466:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b46a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b46e:	2a00      	cmp	r2, #0
 801b470:	f000 812e 	beq.w	801b6d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801b474:	684d      	ldr	r5, [r1, #4]
 801b476:	950d      	str	r5, [sp, #52]	; 0x34
 801b478:	0e2d      	lsrs	r5, r5, #24
 801b47a:	9514      	str	r5, [sp, #80]	; 0x50
 801b47c:	b178      	cbz	r0, 801b49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801b47e:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801b482:	3f01      	subs	r7, #1
 801b484:	00bf      	lsls	r7, r7, #2
 801b486:	3704      	adds	r7, #4
 801b488:	eb01 0e07 	add.w	lr, r1, r7
 801b48c:	59c9      	ldr	r1, [r1, r7]
 801b48e:	9109      	str	r1, [sp, #36]	; 0x24
 801b490:	0e09      	lsrs	r1, r1, #24
 801b492:	9111      	str	r1, [sp, #68]	; 0x44
 801b494:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b498:	910e      	str	r1, [sp, #56]	; 0x38
 801b49a:	0e09      	lsrs	r1, r1, #24
 801b49c:	9115      	str	r1, [sp, #84]	; 0x54
 801b49e:	b292      	uxth	r2, r2
 801b4a0:	b280      	uxth	r0, r0
 801b4a2:	fb02 f900 	mul.w	r9, r2, r0
 801b4a6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b4aa:	0112      	lsls	r2, r2, #4
 801b4ac:	eba2 0e09 	sub.w	lr, r2, r9
 801b4b0:	b280      	uxth	r0, r0
 801b4b2:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b4b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b4ba:	fa1f fe8e 	uxth.w	lr, lr
 801b4be:	1a09      	subs	r1, r1, r0
 801b4c0:	b289      	uxth	r1, r1
 801b4c2:	fb0e f202 	mul.w	r2, lr, r2
 801b4c6:	fb01 220c 	mla	r2, r1, ip, r2
 801b4ca:	fb00 2205 	mla	r2, r0, r5, r2
 801b4ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b4d0:	fb09 2205 	mla	r2, r9, r5, r2
 801b4d4:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b4d8:	2a00      	cmp	r2, #0
 801b4da:	f000 80f0 	beq.w	801b6be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801b4de:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b4e2:	d019      	beq.n	801b518 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801b4e4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b4e8:	fb0c fa0a 	mul.w	sl, ip, sl
 801b4ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b4f0:	fb0c fc03 	mul.w	ip, ip, r3
 801b4f4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b4f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b4fc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b500:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b504:	4453      	add	r3, sl
 801b506:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b50a:	0a1b      	lsrs	r3, r3, #8
 801b50c:	0a3f      	lsrs	r7, r7, #8
 801b50e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b512:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b516:	433b      	orrs	r3, r7
 801b518:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b51a:	2dff      	cmp	r5, #255	; 0xff
 801b51c:	d020      	beq.n	801b560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801b51e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b520:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b524:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b526:	436f      	muls	r7, r5
 801b528:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b52a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b52e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b530:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b534:	fb05 fa0a 	mul.w	sl, r5, sl
 801b538:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b53c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b540:	44bc      	add	ip, r7
 801b542:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b546:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b54a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b54e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b552:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b556:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b55a:	ea4c 050a 	orr.w	r5, ip, sl
 801b55e:	950d      	str	r5, [sp, #52]	; 0x34
 801b560:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b562:	2dff      	cmp	r5, #255	; 0xff
 801b564:	d020      	beq.n	801b5a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801b566:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b568:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b56c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b56e:	436f      	muls	r7, r5
 801b570:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b572:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b576:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b578:	fb05 fa0c 	mul.w	sl, r5, ip
 801b57c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b580:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b584:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b588:	44bc      	add	ip, r7
 801b58a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b58e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b592:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b596:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b59a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b59e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b5a2:	ea4c 050a 	orr.w	r5, ip, sl
 801b5a6:	9509      	str	r5, [sp, #36]	; 0x24
 801b5a8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b5aa:	2dff      	cmp	r5, #255	; 0xff
 801b5ac:	d020      	beq.n	801b5f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801b5ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b5b0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b5b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b5b6:	436f      	muls	r7, r5
 801b5b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b5ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b5be:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b5c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b5c4:	fb05 fa0a 	mul.w	sl, r5, sl
 801b5c8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b5cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b5d0:	44bc      	add	ip, r7
 801b5d2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b5d6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b5da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b5e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b5ea:	ea4c 050a 	orr.w	r5, ip, sl
 801b5ee:	950e      	str	r5, [sp, #56]	; 0x38
 801b5f0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b5f2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b5f6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b5f8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b5fc:	fb0e f707 	mul.w	r7, lr, r7
 801b600:	fb01 770c 	mla	r7, r1, ip, r7
 801b604:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b608:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b60a:	fb00 770c 	mla	r7, r0, ip, r7
 801b60e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b612:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b614:	fb09 770c 	mla	r7, r9, ip, r7
 801b618:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b61c:	fb0e fe0c 	mul.w	lr, lr, ip
 801b620:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b624:	fb01 e303 	mla	r3, r1, r3, lr
 801b628:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b62a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b62e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b630:	fb00 330a 	mla	r3, r0, sl, r3
 801b634:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801b638:	fb09 3c0c 	mla	ip, r9, ip, r3
 801b63c:	0a3f      	lsrs	r7, r7, #8
 801b63e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b642:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b646:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b64a:	ea47 070c 	orr.w	r7, r7, ip
 801b64e:	2aff      	cmp	r2, #255	; 0xff
 801b650:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801b654:	d045      	beq.n	801b6e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 801b656:	f8b8 1000 	ldrh.w	r1, [r8]
 801b65a:	43d2      	mvns	r2, r2
 801b65c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801b660:	fa5f fe82 	uxtb.w	lr, r2
 801b664:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b668:	fb0c fc0e 	mul.w	ip, ip, lr
 801b66c:	10c8      	asrs	r0, r1, #3
 801b66e:	00ca      	lsls	r2, r1, #3
 801b670:	f10c 0101 	add.w	r1, ip, #1
 801b674:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801b678:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801b67c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b680:	b2d2      	uxtb	r2, r2
 801b682:	4921      	ldr	r1, [pc, #132]	; (801b708 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801b684:	fb02 f20e 	mul.w	r2, r2, lr
 801b688:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801b68c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b690:	1c51      	adds	r1, r2, #1
 801b692:	fb00 f00e 	mul.w	r0, r0, lr
 801b696:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b69a:	b2ff      	uxtb	r7, r7
 801b69c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801b6a0:	1c42      	adds	r2, r0, #1
 801b6a2:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 801b6a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b6aa:	b2df      	uxtb	r7, r3
 801b6ac:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801b6b0:	00ff      	lsls	r7, r7, #3
 801b6b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801b6b6:	ea4c 0c07 	orr.w	ip, ip, r7
 801b6ba:	f8a8 c000 	strh.w	ip, [r8]
 801b6be:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801b6c0:	441c      	add	r4, r3
 801b6c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b6c4:	f108 0802 	add.w	r8, r8, #2
 801b6c8:	441e      	add	r6, r3
 801b6ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b6ce:	e63d      	b.n	801b34c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b6d0:	2800      	cmp	r0, #0
 801b6d2:	f43f aee4 	beq.w	801b49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801b6d6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801b6da:	9109      	str	r1, [sp, #36]	; 0x24
 801b6dc:	0e09      	lsrs	r1, r1, #24
 801b6de:	9111      	str	r1, [sp, #68]	; 0x44
 801b6e0:	e6dd      	b.n	801b49e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801b6e2:	097a      	lsrs	r2, r7, #5
 801b6e4:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801b6e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b6ec:	f023 0307 	bic.w	r3, r3, #7
 801b6f0:	4313      	orrs	r3, r2
 801b6f2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801b6f6:	431f      	orrs	r7, r3
 801b6f8:	f8a8 7000 	strh.w	r7, [r8]
 801b6fc:	e7df      	b.n	801b6be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801b6fe:	b01b      	add	sp, #108	; 0x6c
 801b700:	ecbd 8b08 	vpop	{d8-d11}
 801b704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b708:	fffff800 	.word	0xfffff800

0801b70c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801b70c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b710:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801b714:	2c00      	cmp	r4, #0
 801b716:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b71a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801b71e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801b722:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801b726:	fb04 ce03 	mla	lr, r4, r3, ip
 801b72a:	db60      	blt.n	801b7ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801b72c:	45a1      	cmp	r9, r4
 801b72e:	dd5e      	ble.n	801b7ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801b730:	f1bc 0f00 	cmp.w	ip, #0
 801b734:	db59      	blt.n	801b7ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801b736:	45e0      	cmp	r8, ip
 801b738:	dd57      	ble.n	801b7ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801b73a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801b73e:	f01e 0f01 	tst.w	lr, #1
 801b742:	5c16      	ldrb	r6, [r2, r0]
 801b744:	bf0c      	ite	eq
 801b746:	f006 060f 	andeq.w	r6, r6, #15
 801b74a:	1136      	asrne	r6, r6, #4
 801b74c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801b750:	b2f6      	uxtb	r6, r6
 801b752:	f11c 0001 	adds.w	r0, ip, #1
 801b756:	d44d      	bmi.n	801b7f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801b758:	4580      	cmp	r8, r0
 801b75a:	dd4b      	ble.n	801b7f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801b75c:	2d00      	cmp	r5, #0
 801b75e:	d04b      	beq.n	801b7f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801b760:	f10e 0a01 	add.w	sl, lr, #1
 801b764:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801b768:	f01a 0f01 	tst.w	sl, #1
 801b76c:	5c10      	ldrb	r0, [r2, r0]
 801b76e:	bf0c      	ite	eq
 801b770:	f000 000f 	andeq.w	r0, r0, #15
 801b774:	1100      	asrne	r0, r0, #4
 801b776:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b77a:	b2c0      	uxtb	r0, r0
 801b77c:	3401      	adds	r4, #1
 801b77e:	d43f      	bmi.n	801b800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801b780:	45a1      	cmp	r9, r4
 801b782:	dd3d      	ble.n	801b800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801b784:	2f00      	cmp	r7, #0
 801b786:	f000 809e 	beq.w	801b8c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801b78a:	f1bc 0f00 	cmp.w	ip, #0
 801b78e:	db35      	blt.n	801b7fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801b790:	45e0      	cmp	r8, ip
 801b792:	dd33      	ble.n	801b7fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801b794:	eb03 090e 	add.w	r9, r3, lr
 801b798:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801b79c:	f019 0f01 	tst.w	r9, #1
 801b7a0:	5d14      	ldrb	r4, [r2, r4]
 801b7a2:	bf0c      	ite	eq
 801b7a4:	f004 040f 	andeq.w	r4, r4, #15
 801b7a8:	1124      	asrne	r4, r4, #4
 801b7aa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801b7ae:	b2e4      	uxtb	r4, r4
 801b7b0:	f11c 0c01 	adds.w	ip, ip, #1
 801b7b4:	d427      	bmi.n	801b806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801b7b6:	45e0      	cmp	r8, ip
 801b7b8:	dd25      	ble.n	801b806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801b7ba:	b335      	cbz	r5, 801b80a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801b7bc:	3301      	adds	r3, #1
 801b7be:	449e      	add	lr, r3
 801b7c0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b7c4:	f01e 0f01 	tst.w	lr, #1
 801b7c8:	5cd2      	ldrb	r2, [r2, r3]
 801b7ca:	bf0c      	ite	eq
 801b7cc:	f002 020f 	andeq.w	r2, r2, #15
 801b7d0:	1112      	asrne	r2, r2, #4
 801b7d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b7d6:	b2d3      	uxtb	r3, r2
 801b7d8:	2d0f      	cmp	r5, #15
 801b7da:	d917      	bls.n	801b80c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801b7dc:	4b3c      	ldr	r3, [pc, #240]	; (801b8d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801b7de:	4a3d      	ldr	r2, [pc, #244]	; (801b8d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801b7e0:	483d      	ldr	r0, [pc, #244]	; (801b8d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801b7e2:	f240 210d 	movw	r1, #525	; 0x20d
 801b7e6:	f002 fbff 	bl	801dfe8 <__assert_func>
 801b7ea:	2600      	movs	r6, #0
 801b7ec:	e7b1      	b.n	801b752 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801b7ee:	2000      	movs	r0, #0
 801b7f0:	4606      	mov	r6, r0
 801b7f2:	e7c3      	b.n	801b77c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801b7f4:	2000      	movs	r0, #0
 801b7f6:	e7c1      	b.n	801b77c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801b7f8:	4628      	mov	r0, r5
 801b7fa:	e7bf      	b.n	801b77c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801b7fc:	2400      	movs	r4, #0
 801b7fe:	e7d7      	b.n	801b7b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801b800:	2300      	movs	r3, #0
 801b802:	461c      	mov	r4, r3
 801b804:	e7e8      	b.n	801b7d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801b806:	2300      	movs	r3, #0
 801b808:	e7e6      	b.n	801b7d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801b80a:	462b      	mov	r3, r5
 801b80c:	2f0f      	cmp	r7, #15
 801b80e:	d8e5      	bhi.n	801b7dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801b810:	b2ad      	uxth	r5, r5
 801b812:	b2bf      	uxth	r7, r7
 801b814:	fb05 fc07 	mul.w	ip, r5, r7
 801b818:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801b81c:	012d      	lsls	r5, r5, #4
 801b81e:	b2bf      	uxth	r7, r7
 801b820:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801b824:	eba5 050c 	sub.w	r5, r5, ip
 801b828:	1bd2      	subs	r2, r2, r7
 801b82a:	b2ad      	uxth	r5, r5
 801b82c:	b292      	uxth	r2, r2
 801b82e:	4368      	muls	r0, r5
 801b830:	fb06 0002 	mla	r0, r6, r2, r0
 801b834:	fb07 0404 	mla	r4, r7, r4, r0
 801b838:	fb0c 4303 	mla	r3, ip, r3, r4
 801b83c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b840:	2b00      	cmp	r3, #0
 801b842:	d03e      	beq.n	801b8c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801b844:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801b848:	4a24      	ldr	r2, [pc, #144]	; (801b8dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801b84a:	4343      	muls	r3, r0
 801b84c:	1c58      	adds	r0, r3, #1
 801b84e:	6816      	ldr	r6, [r2, #0]
 801b850:	880a      	ldrh	r2, [r1, #0]
 801b852:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b856:	1200      	asrs	r0, r0, #8
 801b858:	b284      	uxth	r4, r0
 801b85a:	1215      	asrs	r5, r2, #8
 801b85c:	43c0      	mvns	r0, r0
 801b85e:	b2c3      	uxtb	r3, r0
 801b860:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b864:	0a30      	lsrs	r0, r6, #8
 801b866:	fb15 f503 	smulbb	r5, r5, r3
 801b86a:	10d7      	asrs	r7, r2, #3
 801b86c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b870:	fb00 5004 	mla	r0, r0, r4, r5
 801b874:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b878:	08f5      	lsrs	r5, r6, #3
 801b87a:	00d2      	lsls	r2, r2, #3
 801b87c:	fb17 f703 	smulbb	r7, r7, r3
 801b880:	b2d2      	uxtb	r2, r2
 801b882:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b886:	00f6      	lsls	r6, r6, #3
 801b888:	fb05 7504 	mla	r5, r5, r4, r7
 801b88c:	fb12 f303 	smulbb	r3, r2, r3
 801b890:	b2f6      	uxtb	r6, r6
 801b892:	fb06 3304 	mla	r3, r6, r4, r3
 801b896:	b2ad      	uxth	r5, r5
 801b898:	b29a      	uxth	r2, r3
 801b89a:	b280      	uxth	r0, r0
 801b89c:	1c6b      	adds	r3, r5, #1
 801b89e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801b8a2:	1c44      	adds	r4, r0, #1
 801b8a4:	095b      	lsrs	r3, r3, #5
 801b8a6:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801b8aa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b8ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b8b2:	4303      	orrs	r3, r0
 801b8b4:	1c50      	adds	r0, r2, #1
 801b8b6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801b8ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b8be:	4313      	orrs	r3, r2
 801b8c0:	800b      	strh	r3, [r1, #0]
 801b8c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b8c6:	2d0f      	cmp	r5, #15
 801b8c8:	d888      	bhi.n	801b7dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801b8ca:	463b      	mov	r3, r7
 801b8cc:	463c      	mov	r4, r7
 801b8ce:	e79f      	b.n	801b810 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801b8d0:	0802254f 	.word	0x0802254f
 801b8d4:	08022b0d 	.word	0x08022b0d
 801b8d8:	08022638 	.word	0x08022638
 801b8dc:	2000d380 	.word	0x2000d380

0801b8e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b8e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8e4:	ed2d 8b08 	vpush	{d8-d11}
 801b8e8:	b097      	sub	sp, #92	; 0x5c
 801b8ea:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801b8ee:	9214      	str	r2, [sp, #80]	; 0x50
 801b8f0:	9309      	str	r3, [sp, #36]	; 0x24
 801b8f2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b8f4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b8f8:	910d      	str	r1, [sp, #52]	; 0x34
 801b8fa:	930e      	str	r3, [sp, #56]	; 0x38
 801b8fc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b900:	9015      	str	r0, [sp, #84]	; 0x54
 801b902:	6850      	ldr	r0, [r2, #4]
 801b904:	6812      	ldr	r2, [r2, #0]
 801b906:	fb00 1303 	mla	r3, r0, r3, r1
 801b90a:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801b90e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b910:	689b      	ldr	r3, [r3, #8]
 801b912:	3301      	adds	r3, #1
 801b914:	f023 0301 	bic.w	r3, r3, #1
 801b918:	930a      	str	r3, [sp, #40]	; 0x28
 801b91a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b91c:	681f      	ldr	r7, [r3, #0]
 801b91e:	eeb0 aa40 	vmov.f32	s20, s0
 801b922:	eef0 9a60 	vmov.f32	s19, s1
 801b926:	eeb0 9a41 	vmov.f32	s18, s2
 801b92a:	eeb0 8a62 	vmov.f32	s16, s5
 801b92e:	eef0 8a43 	vmov.f32	s17, s6
 801b932:	eef0 ba44 	vmov.f32	s23, s8
 801b936:	eeb0 ba64 	vmov.f32	s22, s9
 801b93a:	eef0 aa45 	vmov.f32	s21, s10
 801b93e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b940:	2b00      	cmp	r3, #0
 801b942:	dc03      	bgt.n	801b94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b944:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801b946:	2b00      	cmp	r3, #0
 801b948:	f340 826a 	ble.w	801be20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801b94c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b94e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b952:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b956:	1e48      	subs	r0, r1, #1
 801b958:	f102 3cff 	add.w	ip, r2, #4294967295
 801b95c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b95e:	2b00      	cmp	r3, #0
 801b960:	f340 80f3 	ble.w	801bb4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801b964:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b968:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b96c:	d406      	bmi.n	801b97c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b96e:	4586      	cmp	lr, r0
 801b970:	da04      	bge.n	801b97c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b972:	2b00      	cmp	r3, #0
 801b974:	db02      	blt.n	801b97c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b976:	4563      	cmp	r3, ip
 801b978:	f2c0 80e8 	blt.w	801bb4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801b97c:	f11e 0e01 	adds.w	lr, lr, #1
 801b980:	f100 80d9 	bmi.w	801bb36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801b984:	4571      	cmp	r1, lr
 801b986:	f2c0 80d6 	blt.w	801bb36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801b98a:	3301      	adds	r3, #1
 801b98c:	f100 80d3 	bmi.w	801bb36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801b990:	429a      	cmp	r2, r3
 801b992:	f2c0 80d0 	blt.w	801bb36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801b996:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801b99a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801b99e:	930f      	str	r3, [sp, #60]	; 0x3c
 801b9a0:	46d0      	mov	r8, sl
 801b9a2:	f1b9 0f00 	cmp.w	r9, #0
 801b9a6:	f340 80f0 	ble.w	801bb8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801b9aa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b9ac:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b9b0:	1423      	asrs	r3, r4, #16
 801b9b2:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b9b6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b9ba:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b9be:	f100 8139 	bmi.w	801bc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b9c2:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b9c6:	455b      	cmp	r3, fp
 801b9c8:	f280 8134 	bge.w	801bc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b9cc:	2800      	cmp	r0, #0
 801b9ce:	f2c0 8131 	blt.w	801bc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b9d2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b9d6:	4558      	cmp	r0, fp
 801b9d8:	f280 812c 	bge.w	801bc34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801b9dc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801b9de:	fb00 3305 	mla	r3, r0, r5, r3
 801b9e2:	0858      	lsrs	r0, r3, #1
 801b9e4:	07dd      	lsls	r5, r3, #31
 801b9e6:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b9ea:	bf54      	ite	pl
 801b9ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b9f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b9f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b9f8:	fa5f fc8c 	uxtb.w	ip, ip
 801b9fc:	2a00      	cmp	r2, #0
 801b9fe:	f000 8108 	beq.w	801bc12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801ba02:	1c58      	adds	r0, r3, #1
 801ba04:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ba08:	07c0      	lsls	r0, r0, #31
 801ba0a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ba0e:	bf54      	ite	pl
 801ba10:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ba14:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ba18:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ba1c:	fa5f f08e 	uxtb.w	r0, lr
 801ba20:	9010      	str	r0, [sp, #64]	; 0x40
 801ba22:	b1d1      	cbz	r1, 801ba5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801ba24:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ba26:	4403      	add	r3, r0
 801ba28:	0858      	lsrs	r0, r3, #1
 801ba2a:	07dd      	lsls	r5, r3, #31
 801ba2c:	5c38      	ldrb	r0, [r7, r0]
 801ba2e:	bf54      	ite	pl
 801ba30:	f000 000f 	andpl.w	r0, r0, #15
 801ba34:	1100      	asrmi	r0, r0, #4
 801ba36:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ba3a:	3301      	adds	r3, #1
 801ba3c:	b2c0      	uxtb	r0, r0
 801ba3e:	900b      	str	r0, [sp, #44]	; 0x2c
 801ba40:	0858      	lsrs	r0, r3, #1
 801ba42:	07dd      	lsls	r5, r3, #31
 801ba44:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ba48:	bf54      	ite	pl
 801ba4a:	f00e 030f 	andpl.w	r3, lr, #15
 801ba4e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ba52:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ba56:	b2db      	uxtb	r3, r3
 801ba58:	9311      	str	r3, [sp, #68]	; 0x44
 801ba5a:	b292      	uxth	r2, r2
 801ba5c:	b289      	uxth	r1, r1
 801ba5e:	fb02 f301 	mul.w	r3, r2, r1
 801ba62:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ba66:	0112      	lsls	r2, r2, #4
 801ba68:	b289      	uxth	r1, r1
 801ba6a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ba6e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ba70:	1ad2      	subs	r2, r2, r3
 801ba72:	1a40      	subs	r0, r0, r1
 801ba74:	b292      	uxth	r2, r2
 801ba76:	436a      	muls	r2, r5
 801ba78:	b280      	uxth	r0, r0
 801ba7a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ba7e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ba80:	fb01 c102 	mla	r1, r1, r2, ip
 801ba84:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ba86:	fb03 1302 	mla	r3, r3, r2, r1
 801ba8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ba8e:	2b00      	cmp	r3, #0
 801ba90:	d048      	beq.n	801bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801ba92:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba94:	4a78      	ldr	r2, [pc, #480]	; (801bc78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801ba96:	434b      	muls	r3, r1
 801ba98:	1c59      	adds	r1, r3, #1
 801ba9a:	f8d2 e000 	ldr.w	lr, [r2]
 801ba9e:	f8b8 2000 	ldrh.w	r2, [r8]
 801baa2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801baa6:	121b      	asrs	r3, r3, #8
 801baa8:	b299      	uxth	r1, r3
 801baaa:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801baae:	43db      	mvns	r3, r3
 801bab0:	b2db      	uxtb	r3, r3
 801bab2:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801bab6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801baba:	fb1c fc03 	smulbb	ip, ip, r3
 801babe:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801bac2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bac6:	fb00 c001 	mla	r0, r0, r1, ip
 801baca:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801bace:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801bad2:	fb1b fb03 	smulbb	fp, fp, r3
 801bad6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bada:	00d2      	lsls	r2, r2, #3
 801badc:	fb0c bc01 	mla	ip, ip, r1, fp
 801bae0:	b2d2      	uxtb	r2, r2
 801bae2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bae6:	fb12 f303 	smulbb	r3, r2, r3
 801baea:	fa1f fc8c 	uxth.w	ip, ip
 801baee:	fa5f fe8e 	uxtb.w	lr, lr
 801baf2:	b280      	uxth	r0, r0
 801baf4:	fb0e 3101 	mla	r1, lr, r1, r3
 801baf8:	f10c 0201 	add.w	r2, ip, #1
 801bafc:	b289      	uxth	r1, r1
 801bafe:	1c43      	adds	r3, r0, #1
 801bb00:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801bb04:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bb08:	0952      	lsrs	r2, r2, #5
 801bb0a:	1c4b      	adds	r3, r1, #1
 801bb0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bb10:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801bb14:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801bb18:	4310      	orrs	r0, r2
 801bb1a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801bb1e:	4308      	orrs	r0, r1
 801bb20:	f8a8 0000 	strh.w	r0, [r8]
 801bb24:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bb26:	441c      	add	r4, r3
 801bb28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb2a:	f108 0802 	add.w	r8, r8, #2
 801bb2e:	441e      	add	r6, r3
 801bb30:	f109 39ff 	add.w	r9, r9, #4294967295
 801bb34:	e735      	b.n	801b9a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 801bb36:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bb38:	441c      	add	r4, r3
 801bb3a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bb3c:	441e      	add	r6, r3
 801bb3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb40:	3b01      	subs	r3, #1
 801bb42:	9309      	str	r3, [sp, #36]	; 0x24
 801bb44:	f10a 0a02 	add.w	sl, sl, #2
 801bb48:	e708      	b.n	801b95c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801bb4a:	d023      	beq.n	801bb94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801bb4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb4e:	982b      	ldr	r0, [sp, #172]	; 0xac
 801bb50:	3b01      	subs	r3, #1
 801bb52:	fb00 4003 	mla	r0, r0, r3, r4
 801bb56:	1400      	asrs	r0, r0, #16
 801bb58:	f53f af1d 	bmi.w	801b996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bb5c:	3901      	subs	r1, #1
 801bb5e:	4288      	cmp	r0, r1
 801bb60:	f6bf af19 	bge.w	801b996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bb64:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801bb66:	fb01 6303 	mla	r3, r1, r3, r6
 801bb6a:	141b      	asrs	r3, r3, #16
 801bb6c:	f53f af13 	bmi.w	801b996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bb70:	3a01      	subs	r2, #1
 801bb72:	4293      	cmp	r3, r2
 801bb74:	f6bf af0f 	bge.w	801b996 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801bb78:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801bb7c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801bb80:	930f      	str	r3, [sp, #60]	; 0x3c
 801bb82:	46d1      	mov	r9, sl
 801bb84:	f1bb 0f00 	cmp.w	fp, #0
 801bb88:	dc78      	bgt.n	801bc7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801bb8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb8c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bb90:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801bb94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb96:	2b00      	cmp	r3, #0
 801bb98:	f340 8142 	ble.w	801be20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801bb9c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bba0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bba4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bba8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bbaa:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bbae:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bbb2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801bbb6:	eef0 6a48 	vmov.f32	s13, s16
 801bbba:	ee69 7a27 	vmul.f32	s15, s18, s15
 801bbbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bbc2:	ee37 8a48 	vsub.f32	s16, s14, s16
 801bbc6:	ee16 4a90 	vmov	r4, s13
 801bbca:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801bbce:	eef0 6a68 	vmov.f32	s13, s17
 801bbd2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801bbd6:	ee18 2a10 	vmov	r2, s16
 801bbda:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801bbde:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbe2:	ee18 2a90 	vmov	r2, s17
 801bbe6:	932b      	str	r3, [sp, #172]	; 0xac
 801bbe8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bbea:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbee:	932c      	str	r3, [sp, #176]	; 0xb0
 801bbf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbf2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbf4:	3b01      	subs	r3, #1
 801bbf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bbfa:	930d      	str	r3, [sp, #52]	; 0x34
 801bbfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bbfe:	bf08      	it	eq
 801bc00:	4613      	moveq	r3, r2
 801bc02:	ee16 6a90 	vmov	r6, s13
 801bc06:	9309      	str	r3, [sp, #36]	; 0x24
 801bc08:	eef0 8a67 	vmov.f32	s17, s15
 801bc0c:	eeb0 8a47 	vmov.f32	s16, s14
 801bc10:	e695      	b.n	801b93e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801bc12:	2900      	cmp	r1, #0
 801bc14:	f43f af21 	beq.w	801ba5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801bc18:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bc1a:	4418      	add	r0, r3
 801bc1c:	0843      	lsrs	r3, r0, #1
 801bc1e:	07c0      	lsls	r0, r0, #31
 801bc20:	5cfb      	ldrb	r3, [r7, r3]
 801bc22:	bf54      	ite	pl
 801bc24:	f003 030f 	andpl.w	r3, r3, #15
 801bc28:	111b      	asrmi	r3, r3, #4
 801bc2a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801bc2e:	b2db      	uxtb	r3, r3
 801bc30:	930b      	str	r3, [sp, #44]	; 0x2c
 801bc32:	e712      	b.n	801ba5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801bc34:	f113 0b01 	adds.w	fp, r3, #1
 801bc38:	f53f af74 	bmi.w	801bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801bc3c:	45dc      	cmp	ip, fp
 801bc3e:	f6ff af71 	blt.w	801bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801bc42:	f110 0b01 	adds.w	fp, r0, #1
 801bc46:	f53f af6d 	bmi.w	801bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801bc4a:	45de      	cmp	lr, fp
 801bc4c:	f6ff af6a 	blt.w	801bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801bc50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bc52:	9302      	str	r3, [sp, #8]
 801bc54:	fa0f f38e 	sxth.w	r3, lr
 801bc58:	9301      	str	r3, [sp, #4]
 801bc5a:	fa0f f38c 	sxth.w	r3, ip
 801bc5e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801bc62:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801bc66:	9300      	str	r3, [sp, #0]
 801bc68:	463a      	mov	r2, r7
 801bc6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bc6c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bc6e:	4641      	mov	r1, r8
 801bc70:	f7ff fd4c 	bl	801b70c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801bc74:	e756      	b.n	801bb24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801bc76:	bf00      	nop
 801bc78:	2000d380 	.word	0x2000d380
 801bc7c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801bc7e:	1422      	asrs	r2, r4, #16
 801bc80:	1433      	asrs	r3, r6, #16
 801bc82:	fb05 2303 	mla	r3, r5, r3, r2
 801bc86:	085a      	lsrs	r2, r3, #1
 801bc88:	07dd      	lsls	r5, r3, #31
 801bc8a:	5cba      	ldrb	r2, [r7, r2]
 801bc8c:	bf54      	ite	pl
 801bc8e:	f002 020f 	andpl.w	r2, r2, #15
 801bc92:	1112      	asrmi	r2, r2, #4
 801bc94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bc98:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801bc9c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801bca0:	b2d2      	uxtb	r2, r2
 801bca2:	2900      	cmp	r1, #0
 801bca4:	f000 80a8 	beq.w	801bdf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801bca8:	f103 0e01 	add.w	lr, r3, #1
 801bcac:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801bcb0:	f01e 0f01 	tst.w	lr, #1
 801bcb4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcb8:	bf0c      	ite	eq
 801bcba:	f00c 0c0f 	andeq.w	ip, ip, #15
 801bcbe:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801bcc2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bcc6:	fa5f f58c 	uxtb.w	r5, ip
 801bcca:	9512      	str	r5, [sp, #72]	; 0x48
 801bccc:	b300      	cbz	r0, 801bd10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801bcce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bcd0:	442b      	add	r3, r5
 801bcd2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bcd6:	07dd      	lsls	r5, r3, #31
 801bcd8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcdc:	bf54      	ite	pl
 801bcde:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bce2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bce6:	3301      	adds	r3, #1
 801bce8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bcec:	fa5f f58c 	uxtb.w	r5, ip
 801bcf0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801bcf4:	950c      	str	r5, [sp, #48]	; 0x30
 801bcf6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801bcfa:	07dd      	lsls	r5, r3, #31
 801bcfc:	bf54      	ite	pl
 801bcfe:	f00c 0c0f 	andpl.w	ip, ip, #15
 801bd02:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801bd06:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801bd0a:	fa5f f38c 	uxtb.w	r3, ip
 801bd0e:	9313      	str	r3, [sp, #76]	; 0x4c
 801bd10:	b289      	uxth	r1, r1
 801bd12:	b280      	uxth	r0, r0
 801bd14:	fb01 f300 	mul.w	r3, r1, r0
 801bd18:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801bd1c:	0109      	lsls	r1, r1, #4
 801bd1e:	b280      	uxth	r0, r0
 801bd20:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801bd24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd26:	1ac9      	subs	r1, r1, r3
 801bd28:	ebac 0c00 	sub.w	ip, ip, r0
 801bd2c:	b289      	uxth	r1, r1
 801bd2e:	4369      	muls	r1, r5
 801bd30:	fa1f fc8c 	uxth.w	ip, ip
 801bd34:	fb02 120c 	mla	r2, r2, ip, r1
 801bd38:	990c      	ldr	r1, [sp, #48]	; 0x30
 801bd3a:	fb00 2001 	mla	r0, r0, r1, r2
 801bd3e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd40:	fb03 0302 	mla	r3, r3, r2, r0
 801bd44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bd48:	2b00      	cmp	r3, #0
 801bd4a:	d04c      	beq.n	801bde6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bd4c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bd4e:	4a37      	ldr	r2, [pc, #220]	; (801be2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 801bd50:	434b      	muls	r3, r1
 801bd52:	1c59      	adds	r1, r3, #1
 801bd54:	f8d2 e000 	ldr.w	lr, [r2]
 801bd58:	f8b9 2000 	ldrh.w	r2, [r9]
 801bd5c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bd60:	121b      	asrs	r3, r3, #8
 801bd62:	b299      	uxth	r1, r3
 801bd64:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801bd68:	43db      	mvns	r3, r3
 801bd6a:	b2db      	uxtb	r3, r3
 801bd6c:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801bd70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd74:	fb1c fc03 	smulbb	ip, ip, r3
 801bd78:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801bd7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bd80:	fb00 c001 	mla	r0, r0, r1, ip
 801bd84:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801bd88:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801bd8c:	fb18 f803 	smulbb	r8, r8, r3
 801bd90:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801bd94:	00d2      	lsls	r2, r2, #3
 801bd96:	fb0c 8c01 	mla	ip, ip, r1, r8
 801bd9a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bd9e:	b2d2      	uxtb	r2, r2
 801bda0:	fa1f fc8c 	uxth.w	ip, ip
 801bda4:	fa5f fe8e 	uxtb.w	lr, lr
 801bda8:	fb12 f203 	smulbb	r2, r2, r3
 801bdac:	b280      	uxth	r0, r0
 801bdae:	fb0e 2201 	mla	r2, lr, r1, r2
 801bdb2:	f10c 0801 	add.w	r8, ip, #1
 801bdb6:	b292      	uxth	r2, r2
 801bdb8:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801bdbc:	f100 0801 	add.w	r8, r0, #1
 801bdc0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801bdc4:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801bdc8:	1c51      	adds	r1, r2, #1
 801bdca:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801bdce:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801bdd2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bdd6:	ea4c 0c00 	orr.w	ip, ip, r0
 801bdda:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bdde:	ea4c 0c02 	orr.w	ip, ip, r2
 801bde2:	f8a9 c000 	strh.w	ip, [r9]
 801bde6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bde8:	441c      	add	r4, r3
 801bdea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bdec:	f109 0902 	add.w	r9, r9, #2
 801bdf0:	441e      	add	r6, r3
 801bdf2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bdf6:	e6c5      	b.n	801bb84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801bdf8:	2800      	cmp	r0, #0
 801bdfa:	d089      	beq.n	801bd10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801bdfc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bdfe:	442b      	add	r3, r5
 801be00:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801be04:	07db      	lsls	r3, r3, #31
 801be06:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801be0a:	bf54      	ite	pl
 801be0c:	f00c 0c0f 	andpl.w	ip, ip, #15
 801be10:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801be14:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801be18:	fa5f f38c 	uxtb.w	r3, ip
 801be1c:	930c      	str	r3, [sp, #48]	; 0x30
 801be1e:	e777      	b.n	801bd10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801be20:	b017      	add	sp, #92	; 0x5c
 801be22:	ecbd 8b08 	vpop	{d8-d11}
 801be26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be2a:	bf00      	nop
 801be2c:	2000d380 	.word	0x2000d380

0801be30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801be30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be34:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801be38:	2c00      	cmp	r4, #0
 801be3a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801be3e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801be42:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801be46:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801be4a:	fb04 ce03 	mla	lr, r4, r3, ip
 801be4e:	db60      	blt.n	801bf12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801be50:	45a1      	cmp	r9, r4
 801be52:	dd5e      	ble.n	801bf12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801be54:	f1bc 0f00 	cmp.w	ip, #0
 801be58:	db59      	blt.n	801bf0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801be5a:	45e0      	cmp	r8, ip
 801be5c:	dd57      	ble.n	801bf0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801be5e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801be62:	f01e 0f01 	tst.w	lr, #1
 801be66:	5c16      	ldrb	r6, [r2, r0]
 801be68:	bf0c      	ite	eq
 801be6a:	f006 060f 	andeq.w	r6, r6, #15
 801be6e:	1136      	asrne	r6, r6, #4
 801be70:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801be74:	b2f6      	uxtb	r6, r6
 801be76:	f11c 0001 	adds.w	r0, ip, #1
 801be7a:	d44d      	bmi.n	801bf18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801be7c:	4580      	cmp	r8, r0
 801be7e:	dd4b      	ble.n	801bf18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801be80:	2d00      	cmp	r5, #0
 801be82:	d04b      	beq.n	801bf1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801be84:	f10e 0a01 	add.w	sl, lr, #1
 801be88:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801be8c:	f01a 0f01 	tst.w	sl, #1
 801be90:	5c10      	ldrb	r0, [r2, r0]
 801be92:	bf0c      	ite	eq
 801be94:	f000 000f 	andeq.w	r0, r0, #15
 801be98:	1100      	asrne	r0, r0, #4
 801be9a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801be9e:	b2c0      	uxtb	r0, r0
 801bea0:	3401      	adds	r4, #1
 801bea2:	d43f      	bmi.n	801bf24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801bea4:	45a1      	cmp	r9, r4
 801bea6:	dd3d      	ble.n	801bf24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801bea8:	2f00      	cmp	r7, #0
 801beaa:	f000 8097 	beq.w	801bfdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801beae:	f1bc 0f00 	cmp.w	ip, #0
 801beb2:	db35      	blt.n	801bf20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801beb4:	45e0      	cmp	r8, ip
 801beb6:	dd33      	ble.n	801bf20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801beb8:	eb03 090e 	add.w	r9, r3, lr
 801bebc:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801bec0:	f019 0f01 	tst.w	r9, #1
 801bec4:	5d14      	ldrb	r4, [r2, r4]
 801bec6:	bf0c      	ite	eq
 801bec8:	f004 040f 	andeq.w	r4, r4, #15
 801becc:	1124      	asrne	r4, r4, #4
 801bece:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801bed2:	b2e4      	uxtb	r4, r4
 801bed4:	f11c 0c01 	adds.w	ip, ip, #1
 801bed8:	d427      	bmi.n	801bf2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801beda:	45e0      	cmp	r8, ip
 801bedc:	dd25      	ble.n	801bf2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801bede:	b335      	cbz	r5, 801bf2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801bee0:	3301      	adds	r3, #1
 801bee2:	449e      	add	lr, r3
 801bee4:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801bee8:	f01e 0f01 	tst.w	lr, #1
 801beec:	5cd2      	ldrb	r2, [r2, r3]
 801beee:	bf0c      	ite	eq
 801bef0:	f002 020f 	andeq.w	r2, r2, #15
 801bef4:	1112      	asrne	r2, r2, #4
 801bef6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801befa:	b2d3      	uxtb	r3, r2
 801befc:	2d0f      	cmp	r5, #15
 801befe:	d917      	bls.n	801bf30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801bf00:	4b39      	ldr	r3, [pc, #228]	; (801bfe8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801bf02:	4a3a      	ldr	r2, [pc, #232]	; (801bfec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801bf04:	483a      	ldr	r0, [pc, #232]	; (801bff0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801bf06:	f240 210d 	movw	r1, #525	; 0x20d
 801bf0a:	f002 f86d 	bl	801dfe8 <__assert_func>
 801bf0e:	2600      	movs	r6, #0
 801bf10:	e7b1      	b.n	801be76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801bf12:	2000      	movs	r0, #0
 801bf14:	4606      	mov	r6, r0
 801bf16:	e7c3      	b.n	801bea0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801bf18:	2000      	movs	r0, #0
 801bf1a:	e7c1      	b.n	801bea0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801bf1c:	4628      	mov	r0, r5
 801bf1e:	e7bf      	b.n	801bea0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801bf20:	2400      	movs	r4, #0
 801bf22:	e7d7      	b.n	801bed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801bf24:	2300      	movs	r3, #0
 801bf26:	461c      	mov	r4, r3
 801bf28:	e7e8      	b.n	801befc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801bf2a:	2300      	movs	r3, #0
 801bf2c:	e7e6      	b.n	801befc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801bf2e:	462b      	mov	r3, r5
 801bf30:	2f0f      	cmp	r7, #15
 801bf32:	d8e5      	bhi.n	801bf00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801bf34:	b2ad      	uxth	r5, r5
 801bf36:	b2bf      	uxth	r7, r7
 801bf38:	fb05 fc07 	mul.w	ip, r5, r7
 801bf3c:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801bf40:	012d      	lsls	r5, r5, #4
 801bf42:	b2bf      	uxth	r7, r7
 801bf44:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801bf48:	eba5 050c 	sub.w	r5, r5, ip
 801bf4c:	1bd2      	subs	r2, r2, r7
 801bf4e:	b2ad      	uxth	r5, r5
 801bf50:	b292      	uxth	r2, r2
 801bf52:	4368      	muls	r0, r5
 801bf54:	fb06 0002 	mla	r0, r6, r2, r0
 801bf58:	fb07 0404 	mla	r4, r7, r4, r0
 801bf5c:	fb0c 4303 	mla	r3, ip, r3, r4
 801bf60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bf64:	2b00      	cmp	r3, #0
 801bf66:	d037      	beq.n	801bfd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801bf68:	4a22      	ldr	r2, [pc, #136]	; (801bff4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801bf6a:	6816      	ldr	r6, [r2, #0]
 801bf6c:	880a      	ldrh	r2, [r1, #0]
 801bf6e:	b298      	uxth	r0, r3
 801bf70:	1215      	asrs	r5, r2, #8
 801bf72:	43db      	mvns	r3, r3
 801bf74:	b2db      	uxtb	r3, r3
 801bf76:	0a34      	lsrs	r4, r6, #8
 801bf78:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf7c:	fb15 f503 	smulbb	r5, r5, r3
 801bf80:	10d7      	asrs	r7, r2, #3
 801bf82:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801bf86:	fb04 5400 	mla	r4, r4, r0, r5
 801bf8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bf8e:	08f5      	lsrs	r5, r6, #3
 801bf90:	fb17 f703 	smulbb	r7, r7, r3
 801bf94:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bf98:	00d2      	lsls	r2, r2, #3
 801bf9a:	fb05 7500 	mla	r5, r5, r0, r7
 801bf9e:	b2d2      	uxtb	r2, r2
 801bfa0:	00f6      	lsls	r6, r6, #3
 801bfa2:	fb12 f303 	smulbb	r3, r2, r3
 801bfa6:	b2ad      	uxth	r5, r5
 801bfa8:	b2f6      	uxtb	r6, r6
 801bfaa:	b2a4      	uxth	r4, r4
 801bfac:	fb06 3000 	mla	r0, r6, r0, r3
 801bfb0:	1c6b      	adds	r3, r5, #1
 801bfb2:	b280      	uxth	r0, r0
 801bfb4:	1c62      	adds	r2, r4, #1
 801bfb6:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801bfba:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801bfbe:	095b      	lsrs	r3, r3, #5
 801bfc0:	1c42      	adds	r2, r0, #1
 801bfc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bfc6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801bfca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bfce:	4323      	orrs	r3, r4
 801bfd0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801bfd4:	4303      	orrs	r3, r0
 801bfd6:	800b      	strh	r3, [r1, #0]
 801bfd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bfdc:	2d0f      	cmp	r5, #15
 801bfde:	d88f      	bhi.n	801bf00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801bfe0:	463b      	mov	r3, r7
 801bfe2:	463c      	mov	r4, r7
 801bfe4:	e7a6      	b.n	801bf34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801bfe6:	bf00      	nop
 801bfe8:	0802254f 	.word	0x0802254f
 801bfec:	08022b0d 	.word	0x08022b0d
 801bff0:	08022638 	.word	0x08022638
 801bff4:	2000d380 	.word	0x2000d380

0801bff8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bffc:	ed2d 8b08 	vpush	{d8-d11}
 801c000:	b093      	sub	sp, #76	; 0x4c
 801c002:	461d      	mov	r5, r3
 801c004:	920c      	str	r2, [sp, #48]	; 0x30
 801c006:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c008:	9107      	str	r1, [sp, #28]
 801c00a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c00e:	9011      	str	r0, [sp, #68]	; 0x44
 801c010:	6850      	ldr	r0, [r2, #4]
 801c012:	6812      	ldr	r2, [r2, #0]
 801c014:	fb00 1303 	mla	r3, r0, r3, r1
 801c018:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c01c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c01e:	689b      	ldr	r3, [r3, #8]
 801c020:	3301      	adds	r3, #1
 801c022:	f023 0301 	bic.w	r3, r3, #1
 801c026:	9306      	str	r3, [sp, #24]
 801c028:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c02a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801c02e:	681f      	ldr	r7, [r3, #0]
 801c030:	eeb0 aa40 	vmov.f32	s20, s0
 801c034:	eef0 9a60 	vmov.f32	s19, s1
 801c038:	eeb0 9a41 	vmov.f32	s18, s2
 801c03c:	eeb0 8a62 	vmov.f32	s16, s5
 801c040:	eef0 8a43 	vmov.f32	s17, s6
 801c044:	eef0 ba44 	vmov.f32	s23, s8
 801c048:	eeb0 ba64 	vmov.f32	s22, s9
 801c04c:	eef0 aa45 	vmov.f32	s21, s10
 801c050:	9b07      	ldr	r3, [sp, #28]
 801c052:	2b00      	cmp	r3, #0
 801c054:	dc03      	bgt.n	801c05e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c056:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c058:	2b00      	cmp	r3, #0
 801c05a:	f340 8261 	ble.w	801c520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801c05e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c060:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c064:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c068:	1e48      	subs	r0, r1, #1
 801c06a:	f102 3cff 	add.w	ip, r2, #4294967295
 801c06e:	2d00      	cmp	r5, #0
 801c070:	f340 80ef 	ble.w	801c252 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801c074:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c078:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c07c:	d406      	bmi.n	801c08c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c07e:	4586      	cmp	lr, r0
 801c080:	da04      	bge.n	801c08c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c082:	2b00      	cmp	r3, #0
 801c084:	db02      	blt.n	801c08c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c086:	4563      	cmp	r3, ip
 801c088:	f2c0 80e4 	blt.w	801c254 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801c08c:	f11e 0e01 	adds.w	lr, lr, #1
 801c090:	f100 80d7 	bmi.w	801c242 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801c094:	4571      	cmp	r1, lr
 801c096:	f2c0 80d4 	blt.w	801c242 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801c09a:	3301      	adds	r3, #1
 801c09c:	f100 80d1 	bmi.w	801c242 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801c0a0:	429a      	cmp	r2, r3
 801c0a2:	f2c0 80ce 	blt.w	801c242 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801c0a6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c0aa:	9509      	str	r5, [sp, #36]	; 0x24
 801c0ac:	46c8      	mov	r8, r9
 801c0ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c0b0:	2b00      	cmp	r3, #0
 801c0b2:	f340 80ec 	ble.w	801c28e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801c0b6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c0ba:	9308      	str	r3, [sp, #32]
 801c0bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c0be:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c0c2:	1423      	asrs	r3, r4, #16
 801c0c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801c0c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c0cc:	f100 813b 	bmi.w	801c346 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801c0d0:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c0d4:	455b      	cmp	r3, fp
 801c0d6:	f280 8136 	bge.w	801c346 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801c0da:	2800      	cmp	r0, #0
 801c0dc:	f2c0 8133 	blt.w	801c346 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801c0e0:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c0e4:	4558      	cmp	r0, fp
 801c0e6:	f280 812e 	bge.w	801c346 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801c0ea:	9a06      	ldr	r2, [sp, #24]
 801c0ec:	fb00 3302 	mla	r3, r0, r2, r3
 801c0f0:	0858      	lsrs	r0, r3, #1
 801c0f2:	07da      	lsls	r2, r3, #31
 801c0f4:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c0f8:	9a08      	ldr	r2, [sp, #32]
 801c0fa:	bf54      	ite	pl
 801c0fc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c100:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c104:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c108:	fa5f fc8c 	uxtb.w	ip, ip
 801c10c:	2a00      	cmp	r2, #0
 801c10e:	f000 8101 	beq.w	801c314 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c112:	1c58      	adds	r0, r3, #1
 801c114:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c118:	07c0      	lsls	r0, r0, #31
 801c11a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c11e:	bf54      	ite	pl
 801c120:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c124:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c128:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c12c:	fa5f fe8e 	uxtb.w	lr, lr
 801c130:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801c134:	b1b9      	cbz	r1, 801c166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c136:	4453      	add	r3, sl
 801c138:	0858      	lsrs	r0, r3, #1
 801c13a:	07da      	lsls	r2, r3, #31
 801c13c:	5c38      	ldrb	r0, [r7, r0]
 801c13e:	bf54      	ite	pl
 801c140:	f000 000f 	andpl.w	r0, r0, #15
 801c144:	1100      	asrmi	r0, r0, #4
 801c146:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c14a:	b2c0      	uxtb	r0, r0
 801c14c:	900a      	str	r0, [sp, #40]	; 0x28
 801c14e:	1c58      	adds	r0, r3, #1
 801c150:	0843      	lsrs	r3, r0, #1
 801c152:	07c2      	lsls	r2, r0, #31
 801c154:	5cfb      	ldrb	r3, [r7, r3]
 801c156:	bf54      	ite	pl
 801c158:	f003 030f 	andpl.w	r3, r3, #15
 801c15c:	111b      	asrmi	r3, r3, #4
 801c15e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c162:	b2db      	uxtb	r3, r3
 801c164:	930e      	str	r3, [sp, #56]	; 0x38
 801c166:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c16a:	b289      	uxth	r1, r1
 801c16c:	fb02 f301 	mul.w	r3, r2, r1
 801c170:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c174:	0112      	lsls	r2, r2, #4
 801c176:	b289      	uxth	r1, r1
 801c178:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c17c:	1a40      	subs	r0, r0, r1
 801c17e:	fa1f fe80 	uxth.w	lr, r0
 801c182:	1ad2      	subs	r2, r2, r3
 801c184:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c186:	b292      	uxth	r2, r2
 801c188:	4342      	muls	r2, r0
 801c18a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c18e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c190:	fb01 c102 	mla	r1, r1, r2, ip
 801c194:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c196:	fb03 1302 	mla	r3, r3, r2, r1
 801c19a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c19e:	2b00      	cmp	r3, #0
 801c1a0:	d045      	beq.n	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c1a2:	4a79      	ldr	r2, [pc, #484]	; (801c388 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 801c1a4:	6811      	ldr	r1, [r2, #0]
 801c1a6:	2bff      	cmp	r3, #255	; 0xff
 801c1a8:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801c1ac:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801c1b0:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801c1b4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c1b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c1bc:	b2c9      	uxtb	r1, r1
 801c1be:	f000 80ba 	beq.w	801c336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801c1c2:	f8b8 c000 	ldrh.w	ip, [r8]
 801c1c6:	fa1f fb83 	uxth.w	fp, r3
 801c1ca:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c1ce:	43db      	mvns	r3, r3
 801c1d0:	b2db      	uxtb	r3, r3
 801c1d2:	fb1e fe0b 	smulbb	lr, lr, fp
 801c1d6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c1da:	fb00 e003 	mla	r0, r0, r3, lr
 801c1de:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801c1e2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c1e6:	fb12 f20b 	smulbb	r2, r2, fp
 801c1ea:	fb0e 2203 	mla	r2, lr, r3, r2
 801c1ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c1f2:	b292      	uxth	r2, r2
 801c1f4:	fb11 f10b 	smulbb	r1, r1, fp
 801c1f8:	fa5f fc8c 	uxtb.w	ip, ip
 801c1fc:	b280      	uxth	r0, r0
 801c1fe:	fb0c 1303 	mla	r3, ip, r3, r1
 801c202:	f102 0e01 	add.w	lr, r2, #1
 801c206:	b29b      	uxth	r3, r3
 801c208:	1c41      	adds	r1, r0, #1
 801c20a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c20e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801c212:	0952      	lsrs	r2, r2, #5
 801c214:	1c59      	adds	r1, r3, #1
 801c216:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c21a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c21e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c222:	4310      	orrs	r0, r2
 801c224:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c228:	4318      	orrs	r0, r3
 801c22a:	f8a8 0000 	strh.w	r0, [r8]
 801c22e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c230:	441c      	add	r4, r3
 801c232:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c234:	441e      	add	r6, r3
 801c236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c238:	3b01      	subs	r3, #1
 801c23a:	f108 0802 	add.w	r8, r8, #2
 801c23e:	9309      	str	r3, [sp, #36]	; 0x24
 801c240:	e735      	b.n	801c0ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801c242:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c244:	441c      	add	r4, r3
 801c246:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c248:	3d01      	subs	r5, #1
 801c24a:	441e      	add	r6, r3
 801c24c:	f109 0902 	add.w	r9, r9, #2
 801c250:	e70d      	b.n	801c06e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c252:	d020      	beq.n	801c296 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801c254:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c256:	1e6b      	subs	r3, r5, #1
 801c258:	fb00 4003 	mla	r0, r0, r3, r4
 801c25c:	1400      	asrs	r0, r0, #16
 801c25e:	f53f af22 	bmi.w	801c0a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c262:	3901      	subs	r1, #1
 801c264:	4288      	cmp	r0, r1
 801c266:	f6bf af1e 	bge.w	801c0a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c26a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c26c:	fb01 6303 	mla	r3, r1, r3, r6
 801c270:	141b      	asrs	r3, r3, #16
 801c272:	f53f af18 	bmi.w	801c0a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c276:	3a01      	subs	r2, #1
 801c278:	4293      	cmp	r3, r2
 801c27a:	f6bf af14 	bge.w	801c0a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801c27e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c282:	9308      	str	r3, [sp, #32]
 801c284:	46aa      	mov	sl, r5
 801c286:	46c8      	mov	r8, r9
 801c288:	f1ba 0f00 	cmp.w	sl, #0
 801c28c:	dc7e      	bgt.n	801c38c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801c28e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c292:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c296:	9b07      	ldr	r3, [sp, #28]
 801c298:	2b00      	cmp	r3, #0
 801c29a:	f340 8141 	ble.w	801c520 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801c29e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c2a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c2a6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c2aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c2ac:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c2b0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c2b4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c2b8:	eef0 6a48 	vmov.f32	s13, s16
 801c2bc:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c2c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2c4:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c2c8:	ee16 4a90 	vmov	r4, s13
 801c2cc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c2d0:	eef0 6a68 	vmov.f32	s13, s17
 801c2d4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c2d8:	ee18 2a10 	vmov	r2, s16
 801c2dc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c2e0:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2e4:	ee18 2a90 	vmov	r2, s17
 801c2e8:	9327      	str	r3, [sp, #156]	; 0x9c
 801c2ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c2ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2f0:	9328      	str	r3, [sp, #160]	; 0xa0
 801c2f2:	9b07      	ldr	r3, [sp, #28]
 801c2f4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c2f6:	3b01      	subs	r3, #1
 801c2f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c2fc:	9307      	str	r3, [sp, #28]
 801c2fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c300:	ee16 6a90 	vmov	r6, s13
 801c304:	bf14      	ite	ne
 801c306:	461d      	movne	r5, r3
 801c308:	4615      	moveq	r5, r2
 801c30a:	eef0 8a67 	vmov.f32	s17, s15
 801c30e:	eeb0 8a47 	vmov.f32	s16, s14
 801c312:	e69d      	b.n	801c050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c314:	2900      	cmp	r1, #0
 801c316:	f43f af26 	beq.w	801c166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c31a:	eb0a 0003 	add.w	r0, sl, r3
 801c31e:	0843      	lsrs	r3, r0, #1
 801c320:	07c0      	lsls	r0, r0, #31
 801c322:	5cfb      	ldrb	r3, [r7, r3]
 801c324:	bf54      	ite	pl
 801c326:	f003 030f 	andpl.w	r3, r3, #15
 801c32a:	111b      	asrmi	r3, r3, #4
 801c32c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c330:	b2db      	uxtb	r3, r3
 801c332:	930a      	str	r3, [sp, #40]	; 0x28
 801c334:	e717      	b.n	801c166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801c336:	00d2      	lsls	r2, r2, #3
 801c338:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801c33c:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801c340:	f8a8 1000 	strh.w	r1, [r8]
 801c344:	e773      	b.n	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c346:	f113 0b01 	adds.w	fp, r3, #1
 801c34a:	f53f af70 	bmi.w	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c34e:	45dc      	cmp	ip, fp
 801c350:	f6ff af6d 	blt.w	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c354:	f110 0b01 	adds.w	fp, r0, #1
 801c358:	f53f af69 	bmi.w	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c35c:	45de      	cmp	lr, fp
 801c35e:	f6ff af66 	blt.w	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c362:	9a08      	ldr	r2, [sp, #32]
 801c364:	9302      	str	r3, [sp, #8]
 801c366:	fa0f f38e 	sxth.w	r3, lr
 801c36a:	9301      	str	r3, [sp, #4]
 801c36c:	fa0f f38c 	sxth.w	r3, ip
 801c370:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c374:	9105      	str	r1, [sp, #20]
 801c376:	9300      	str	r3, [sp, #0]
 801c378:	463a      	mov	r2, r7
 801c37a:	4653      	mov	r3, sl
 801c37c:	4641      	mov	r1, r8
 801c37e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c380:	f7ff fd56 	bl	801be30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801c384:	e753      	b.n	801c22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801c386:	bf00      	nop
 801c388:	2000d380 	.word	0x2000d380
 801c38c:	9906      	ldr	r1, [sp, #24]
 801c38e:	1422      	asrs	r2, r4, #16
 801c390:	1433      	asrs	r3, r6, #16
 801c392:	fb01 2303 	mla	r3, r1, r3, r2
 801c396:	085a      	lsrs	r2, r3, #1
 801c398:	07d9      	lsls	r1, r3, #31
 801c39a:	5cba      	ldrb	r2, [r7, r2]
 801c39c:	bf54      	ite	pl
 801c39e:	f002 020f 	andpl.w	r2, r2, #15
 801c3a2:	1112      	asrmi	r2, r2, #4
 801c3a4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c3a8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c3ac:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c3b0:	b2d2      	uxtb	r2, r2
 801c3b2:	2800      	cmp	r0, #0
 801c3b4:	f000 809b 	beq.w	801c4ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801c3b8:	f103 0e01 	add.w	lr, r3, #1
 801c3bc:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801c3c0:	f01e 0f01 	tst.w	lr, #1
 801c3c4:	5c79      	ldrb	r1, [r7, r1]
 801c3c6:	bf0c      	ite	eq
 801c3c8:	f001 010f 	andeq.w	r1, r1, #15
 801c3cc:	1109      	asrne	r1, r1, #4
 801c3ce:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c3d2:	b2c9      	uxtb	r1, r1
 801c3d4:	910f      	str	r1, [sp, #60]	; 0x3c
 801c3d6:	f1bc 0f00 	cmp.w	ip, #0
 801c3da:	d019      	beq.n	801c410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801c3dc:	9908      	ldr	r1, [sp, #32]
 801c3de:	440b      	add	r3, r1
 801c3e0:	0859      	lsrs	r1, r3, #1
 801c3e2:	f013 0f01 	tst.w	r3, #1
 801c3e6:	5c79      	ldrb	r1, [r7, r1]
 801c3e8:	bf0c      	ite	eq
 801c3ea:	f001 010f 	andeq.w	r1, r1, #15
 801c3ee:	1109      	asrne	r1, r1, #4
 801c3f0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c3f4:	b2c9      	uxtb	r1, r1
 801c3f6:	3301      	adds	r3, #1
 801c3f8:	910b      	str	r1, [sp, #44]	; 0x2c
 801c3fa:	0859      	lsrs	r1, r3, #1
 801c3fc:	07db      	lsls	r3, r3, #31
 801c3fe:	5c79      	ldrb	r1, [r7, r1]
 801c400:	bf54      	ite	pl
 801c402:	f001 010f 	andpl.w	r1, r1, #15
 801c406:	1109      	asrmi	r1, r1, #4
 801c408:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c40c:	b2c9      	uxtb	r1, r1
 801c40e:	9110      	str	r1, [sp, #64]	; 0x40
 801c410:	b280      	uxth	r0, r0
 801c412:	fa1f fc8c 	uxth.w	ip, ip
 801c416:	fb00 f30c 	mul.w	r3, r0, ip
 801c41a:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801c41e:	0100      	lsls	r0, r0, #4
 801c420:	fa1f fc8c 	uxth.w	ip, ip
 801c424:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801c428:	eba1 010c 	sub.w	r1, r1, ip
 801c42c:	fa1f fe81 	uxth.w	lr, r1
 801c430:	1ac0      	subs	r0, r0, r3
 801c432:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c434:	b280      	uxth	r0, r0
 801c436:	4348      	muls	r0, r1
 801c438:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c43a:	fb02 020e 	mla	r2, r2, lr, r0
 801c43e:	fb0c 2c01 	mla	ip, ip, r1, r2
 801c442:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c444:	fb03 c302 	mla	r3, r3, r2, ip
 801c448:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c44c:	2b00      	cmp	r3, #0
 801c44e:	d045      	beq.n	801c4dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c450:	4a36      	ldr	r2, [pc, #216]	; (801c52c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 801c452:	6811      	ldr	r1, [r2, #0]
 801c454:	2bff      	cmp	r3, #255	; 0xff
 801c456:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801c45a:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801c45e:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801c462:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c466:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c46a:	b2c9      	uxtb	r1, r1
 801c46c:	d050      	beq.n	801c510 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801c46e:	f8b8 c000 	ldrh.w	ip, [r8]
 801c472:	fa1f fb83 	uxth.w	fp, r3
 801c476:	ea4f 202c 	mov.w	r0, ip, asr #8
 801c47a:	43db      	mvns	r3, r3
 801c47c:	b2db      	uxtb	r3, r3
 801c47e:	fb1e fe0b 	smulbb	lr, lr, fp
 801c482:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c486:	fb00 e003 	mla	r0, r0, r3, lr
 801c48a:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801c48e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c492:	fb12 f20b 	smulbb	r2, r2, fp
 801c496:	fb0e 2203 	mla	r2, lr, r3, r2
 801c49a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c49e:	b292      	uxth	r2, r2
 801c4a0:	fa5f fc8c 	uxtb.w	ip, ip
 801c4a4:	fb11 f10b 	smulbb	r1, r1, fp
 801c4a8:	b280      	uxth	r0, r0
 801c4aa:	fb0c 1103 	mla	r1, ip, r3, r1
 801c4ae:	f102 0e01 	add.w	lr, r2, #1
 801c4b2:	b289      	uxth	r1, r1
 801c4b4:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801c4b8:	f100 0e01 	add.w	lr, r0, #1
 801c4bc:	0952      	lsrs	r2, r2, #5
 801c4be:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801c4c2:	1c4b      	adds	r3, r1, #1
 801c4c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4c8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c4cc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c4d0:	4302      	orrs	r2, r0
 801c4d2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c4d6:	430a      	orrs	r2, r1
 801c4d8:	f8a8 2000 	strh.w	r2, [r8]
 801c4dc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c4de:	441c      	add	r4, r3
 801c4e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c4e2:	f108 0802 	add.w	r8, r8, #2
 801c4e6:	441e      	add	r6, r3
 801c4e8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801c4ec:	e6cc      	b.n	801c288 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c4ee:	f1bc 0f00 	cmp.w	ip, #0
 801c4f2:	d08d      	beq.n	801c410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801c4f4:	9908      	ldr	r1, [sp, #32]
 801c4f6:	440b      	add	r3, r1
 801c4f8:	0859      	lsrs	r1, r3, #1
 801c4fa:	07db      	lsls	r3, r3, #31
 801c4fc:	5c79      	ldrb	r1, [r7, r1]
 801c4fe:	bf54      	ite	pl
 801c500:	f001 010f 	andpl.w	r1, r1, #15
 801c504:	1109      	asrmi	r1, r1, #4
 801c506:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c50a:	b2c9      	uxtb	r1, r1
 801c50c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c50e:	e77f      	b.n	801c410 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801c510:	00d2      	lsls	r2, r2, #3
 801c512:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801c516:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801c51a:	f8a8 1000 	strh.w	r1, [r8]
 801c51e:	e7dd      	b.n	801c4dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801c520:	b013      	add	sp, #76	; 0x4c
 801c522:	ecbd 8b08 	vpop	{d8-d11}
 801c526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c52a:	bf00      	nop
 801c52c:	2000d380 	.word	0x2000d380

0801c530 <CRC_Lock>:
 801c530:	b530      	push	{r4, r5, lr}
 801c532:	4a1d      	ldr	r2, [pc, #116]	; (801c5a8 <CRC_Lock+0x78>)
 801c534:	6813      	ldr	r3, [r2, #0]
 801c536:	f023 0301 	bic.w	r3, r3, #1
 801c53a:	6013      	str	r3, [r2, #0]
 801c53c:	4b1b      	ldr	r3, [pc, #108]	; (801c5ac <CRC_Lock+0x7c>)
 801c53e:	681a      	ldr	r2, [r3, #0]
 801c540:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801c544:	4022      	ands	r2, r4
 801c546:	f24c 2540 	movw	r5, #49728	; 0xc240
 801c54a:	42aa      	cmp	r2, r5
 801c54c:	d005      	beq.n	801c55a <CRC_Lock+0x2a>
 801c54e:	681b      	ldr	r3, [r3, #0]
 801c550:	f24c 2270 	movw	r2, #49776	; 0xc270
 801c554:	4023      	ands	r3, r4
 801c556:	4293      	cmp	r3, r2
 801c558:	d11d      	bne.n	801c596 <CRC_Lock+0x66>
 801c55a:	4b15      	ldr	r3, [pc, #84]	; (801c5b0 <CRC_Lock+0x80>)
 801c55c:	681b      	ldr	r3, [r3, #0]
 801c55e:	b9d3      	cbnz	r3, 801c596 <CRC_Lock+0x66>
 801c560:	4a14      	ldr	r2, [pc, #80]	; (801c5b4 <CRC_Lock+0x84>)
 801c562:	6813      	ldr	r3, [r2, #0]
 801c564:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c568:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801c56c:	d006      	beq.n	801c57c <CRC_Lock+0x4c>
 801c56e:	6813      	ldr	r3, [r2, #0]
 801c570:	f240 4283 	movw	r2, #1155	; 0x483
 801c574:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c578:	4293      	cmp	r3, r2
 801c57a:	d10c      	bne.n	801c596 <CRC_Lock+0x66>
 801c57c:	4b0e      	ldr	r3, [pc, #56]	; (801c5b8 <CRC_Lock+0x88>)
 801c57e:	2201      	movs	r2, #1
 801c580:	601a      	str	r2, [r3, #0]
 801c582:	681a      	ldr	r2, [r3, #0]
 801c584:	2a00      	cmp	r2, #0
 801c586:	d1fc      	bne.n	801c582 <CRC_Lock+0x52>
 801c588:	4b0c      	ldr	r3, [pc, #48]	; (801c5bc <CRC_Lock+0x8c>)
 801c58a:	6018      	str	r0, [r3, #0]
 801c58c:	6818      	ldr	r0, [r3, #0]
 801c58e:	1a43      	subs	r3, r0, r1
 801c590:	4258      	negs	r0, r3
 801c592:	4158      	adcs	r0, r3
 801c594:	bd30      	pop	{r4, r5, pc}
 801c596:	4b0a      	ldr	r3, [pc, #40]	; (801c5c0 <CRC_Lock+0x90>)
 801c598:	2201      	movs	r2, #1
 801c59a:	601a      	str	r2, [r3, #0]
 801c59c:	681a      	ldr	r2, [r3, #0]
 801c59e:	2a00      	cmp	r2, #0
 801c5a0:	d1fc      	bne.n	801c59c <CRC_Lock+0x6c>
 801c5a2:	4b08      	ldr	r3, [pc, #32]	; (801c5c4 <CRC_Lock+0x94>)
 801c5a4:	e7f1      	b.n	801c58a <CRC_Lock+0x5a>
 801c5a6:	bf00      	nop
 801c5a8:	e0002000 	.word	0xe0002000
 801c5ac:	e000ed00 	.word	0xe000ed00
 801c5b0:	e0042000 	.word	0xe0042000
 801c5b4:	5c001000 	.word	0x5c001000
 801c5b8:	58024c08 	.word	0x58024c08
 801c5bc:	58024c00 	.word	0x58024c00
 801c5c0:	40023008 	.word	0x40023008
 801c5c4:	40023000 	.word	0x40023000

0801c5c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801c5c8:	6101      	str	r1, [r0, #16]
 801c5ca:	4770      	bx	lr

0801c5cc <_ZN8touchgfx8Gestures4tickEv>:
 801c5cc:	7b83      	ldrb	r3, [r0, #14]
 801c5ce:	b14b      	cbz	r3, 801c5e4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801c5d0:	8903      	ldrh	r3, [r0, #8]
 801c5d2:	3301      	adds	r3, #1
 801c5d4:	b29b      	uxth	r3, r3
 801c5d6:	2b07      	cmp	r3, #7
 801c5d8:	8103      	strh	r3, [r0, #8]
 801c5da:	bf81      	itttt	hi
 801c5dc:	2300      	movhi	r3, #0
 801c5de:	8143      	strhhi	r3, [r0, #10]
 801c5e0:	8183      	strhhi	r3, [r0, #12]
 801c5e2:	7383      	strbhi	r3, [r0, #14]
 801c5e4:	4770      	bx	lr
	...

0801c5e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801c5e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801c5ec:	4604      	mov	r4, r0
 801c5ee:	8880      	ldrh	r0, [r0, #4]
 801c5f0:	f8ad 0006 	strh.w	r0, [sp, #6]
 801c5f4:	4698      	mov	r8, r3
 801c5f6:	eba8 0000 	sub.w	r0, r8, r0
 801c5fa:	4b1c      	ldr	r3, [pc, #112]	; (801c66c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801c5fc:	9300      	str	r3, [sp, #0]
 801c5fe:	b280      	uxth	r0, r0
 801c600:	2300      	movs	r3, #0
 801c602:	f88d 3004 	strb.w	r3, [sp, #4]
 801c606:	b203      	sxth	r3, r0
 801c608:	2b00      	cmp	r3, #0
 801c60a:	bfb8      	it	lt
 801c60c:	4240      	neglt	r0, r0
 801c60e:	4617      	mov	r7, r2
 801c610:	8aa2      	ldrh	r2, [r4, #20]
 801c612:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801c616:	f8ad 800a 	strh.w	r8, [sp, #10]
 801c61a:	bfb8      	it	lt
 801c61c:	b203      	sxthlt	r3, r0
 801c61e:	460e      	mov	r6, r1
 801c620:	4293      	cmp	r3, r2
 801c622:	88e1      	ldrh	r1, [r4, #6]
 801c624:	f8ad 1008 	strh.w	r1, [sp, #8]
 801c628:	f8ad 500c 	strh.w	r5, [sp, #12]
 801c62c:	dc08      	bgt.n	801c640 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801c62e:	1a69      	subs	r1, r5, r1
 801c630:	b289      	uxth	r1, r1
 801c632:	b20b      	sxth	r3, r1
 801c634:	2b00      	cmp	r3, #0
 801c636:	bfbc      	itt	lt
 801c638:	4249      	neglt	r1, r1
 801c63a:	b20b      	sxthlt	r3, r1
 801c63c:	429a      	cmp	r2, r3
 801c63e:	da13      	bge.n	801c668 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801c640:	6920      	ldr	r0, [r4, #16]
 801c642:	6803      	ldr	r3, [r0, #0]
 801c644:	4669      	mov	r1, sp
 801c646:	685b      	ldr	r3, [r3, #4]
 801c648:	4798      	blx	r3
 801c64a:	eba8 0606 	sub.w	r6, r8, r6
 801c64e:	2300      	movs	r3, #0
 801c650:	1bef      	subs	r7, r5, r7
 801c652:	2001      	movs	r0, #1
 801c654:	8123      	strh	r3, [r4, #8]
 801c656:	8166      	strh	r6, [r4, #10]
 801c658:	81a7      	strh	r7, [r4, #12]
 801c65a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801c65e:	80e5      	strh	r5, [r4, #6]
 801c660:	73a0      	strb	r0, [r4, #14]
 801c662:	b004      	add	sp, #16
 801c664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c668:	2000      	movs	r0, #0
 801c66a:	e7fa      	b.n	801c662 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801c66c:	08021a10 	.word	0x08021a10

0801c670 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801c670:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c672:	461e      	mov	r6, r3
 801c674:	1e4b      	subs	r3, r1, #1
 801c676:	2b01      	cmp	r3, #1
 801c678:	b085      	sub	sp, #20
 801c67a:	4604      	mov	r4, r0
 801c67c:	460d      	mov	r5, r1
 801c67e:	4617      	mov	r7, r2
 801c680:	d84b      	bhi.n	801c71a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801c682:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c686:	1cd3      	adds	r3, r2, #3
 801c688:	b29b      	uxth	r3, r3
 801c68a:	2b06      	cmp	r3, #6
 801c68c:	d916      	bls.n	801c6bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801c68e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801c730 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801c692:	f8cd c004 	str.w	ip, [sp, #4]
 801c696:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c69a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c69e:	6900      	ldr	r0, [r0, #16]
 801c6a0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801c6a4:	f04f 0c00 	mov.w	ip, #0
 801c6a8:	f88d c008 	strb.w	ip, [sp, #8]
 801c6ac:	f8ad 200a 	strh.w	r2, [sp, #10]
 801c6b0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c6b4:	6803      	ldr	r3, [r0, #0]
 801c6b6:	a901      	add	r1, sp, #4
 801c6b8:	689b      	ldr	r3, [r3, #8]
 801c6ba:	4798      	blx	r3
 801c6bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c6c0:	1cd3      	adds	r3, r2, #3
 801c6c2:	b29b      	uxth	r3, r3
 801c6c4:	2b06      	cmp	r3, #6
 801c6c6:	d916      	bls.n	801c6f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c6c8:	f8df c064 	ldr.w	ip, [pc, #100]	; 801c730 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801c6cc:	f8cd c004 	str.w	ip, [sp, #4]
 801c6d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801c6d4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c6d8:	6920      	ldr	r0, [r4, #16]
 801c6da:	f8ad 100c 	strh.w	r1, [sp, #12]
 801c6de:	f04f 0c01 	mov.w	ip, #1
 801c6e2:	f88d c008 	strb.w	ip, [sp, #8]
 801c6e6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801c6ea:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c6ee:	6803      	ldr	r3, [r0, #0]
 801c6f0:	a901      	add	r1, sp, #4
 801c6f2:	689b      	ldr	r3, [r3, #8]
 801c6f4:	4798      	blx	r3
 801c6f6:	4b0d      	ldr	r3, [pc, #52]	; (801c72c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801c6f8:	9301      	str	r3, [sp, #4]
 801c6fa:	6920      	ldr	r0, [r4, #16]
 801c6fc:	f88d 5008 	strb.w	r5, [sp, #8]
 801c700:	2300      	movs	r3, #0
 801c702:	f8ad 700a 	strh.w	r7, [sp, #10]
 801c706:	f8ad 600c 	strh.w	r6, [sp, #12]
 801c70a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c70e:	6803      	ldr	r3, [r0, #0]
 801c710:	a901      	add	r1, sp, #4
 801c712:	681b      	ldr	r3, [r3, #0]
 801c714:	4798      	blx	r3
 801c716:	b005      	add	sp, #20
 801c718:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c71a:	2900      	cmp	r1, #0
 801c71c:	d1eb      	bne.n	801c6f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c71e:	80a2      	strh	r2, [r4, #4]
 801c720:	80c6      	strh	r6, [r0, #6]
 801c722:	60a1      	str	r1, [r4, #8]
 801c724:	81a1      	strh	r1, [r4, #12]
 801c726:	73a1      	strb	r1, [r4, #14]
 801c728:	e7e5      	b.n	801c6f6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801c72a:	bf00      	nop
 801c72c:	080219fc 	.word	0x080219fc
 801c730:	08021a24 	.word	0x08021a24

0801c734 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>:
 801c734:	10c9      	asrs	r1, r1, #3
 801c736:	2900      	cmp	r1, #0
 801c738:	bfb8      	it	lt
 801c73a:	4249      	neglt	r1, r1
 801c73c:	2801      	cmp	r0, #1
 801c73e:	d108      	bne.n	801c752 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 801c740:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801c744:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801c748:	4601      	mov	r1, r0
 801c74a:	dd02      	ble.n	801c752 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 801c74c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801c750:	4770      	bx	lr
 801c752:	29ff      	cmp	r1, #255	; 0xff
 801c754:	bfa8      	it	ge
 801c756:	21ff      	movge	r1, #255	; 0xff
 801c758:	4608      	mov	r0, r1
 801c75a:	4770      	bx	lr

0801c75c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 801c75c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c760:	688c      	ldr	r4, [r1, #8]
 801c762:	2c00      	cmp	r4, #0
 801c764:	b087      	sub	sp, #28
 801c766:	4607      	mov	r7, r0
 801c768:	db2b      	blt.n	801c7c2 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801c76a:	6803      	ldr	r3, [r0, #0]
 801c76c:	691a      	ldr	r2, [r3, #16]
 801c76e:	42a2      	cmp	r2, r4
 801c770:	dd27      	ble.n	801c7c2 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801c772:	685a      	ldr	r2, [r3, #4]
 801c774:	695e      	ldr	r6, [r3, #20]
 801c776:	68cd      	ldr	r5, [r1, #12]
 801c778:	f8d1 901c 	ldr.w	r9, [r1, #28]
 801c77c:	f893 a008 	ldrb.w	sl, [r3, #8]
 801c780:	f8d1 8020 	ldr.w	r8, [r1, #32]
 801c784:	fb06 2604 	mla	r6, r6, r4, r2
 801c788:	698a      	ldr	r2, [r1, #24]
 801c78a:	9205      	str	r2, [sp, #20]
 801c78c:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 801c790:	9b05      	ldr	r3, [sp, #20]
 801c792:	6839      	ldr	r1, [r7, #0]
 801c794:	eb03 0c02 	add.w	ip, r3, r2
 801c798:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 801c79c:	68c9      	ldr	r1, [r1, #12]
 801c79e:	1898      	adds	r0, r3, r2
 801c7a0:	4288      	cmp	r0, r1
 801c7a2:	db02      	blt.n	801c7aa <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 801c7a4:	1a8b      	subs	r3, r1, r2
 801c7a6:	2b00      	cmp	r3, #0
 801c7a8:	dd09      	ble.n	801c7be <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 801c7aa:	6878      	ldr	r0, [r7, #4]
 801c7ac:	6801      	ldr	r1, [r0, #0]
 801c7ae:	9400      	str	r4, [sp, #0]
 801c7b0:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 801c7b4:	4653      	mov	r3, sl
 801c7b6:	f8d1 b008 	ldr.w	fp, [r1, #8]
 801c7ba:	4631      	mov	r1, r6
 801c7bc:	47d8      	blx	fp
 801c7be:	3d01      	subs	r5, #1
 801c7c0:	d1e4      	bne.n	801c78c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 801c7c2:	b007      	add	sp, #28
 801c7c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c7c8 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801c7c8:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 801c7cc:	b90b      	cbnz	r3, 801c7d2 <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 801c7ce:	f001 b9a2 	b.w	801db16 <_ZN8touchgfx7Outline6lineToEii>
 801c7d2:	4770      	bx	lr

0801c7d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801c7d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c7d8:	4b8f      	ldr	r3, [pc, #572]	; (801ca18 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x244>)
 801c7da:	4604      	mov	r4, r0
 801c7dc:	2600      	movs	r6, #0
 801c7de:	f100 0518 	add.w	r5, r0, #24
 801c7e2:	e9c0 3100 	strd	r3, r1, [r0]
 801c7e6:	b086      	sub	sp, #24
 801c7e8:	e9c0 6602 	strd	r6, r6, [r0, #8]
 801c7ec:	e9c0 6604 	strd	r6, r6, [r0, #16]
 801c7f0:	f104 0730 	add.w	r7, r4, #48	; 0x30
 801c7f4:	4628      	mov	r0, r5
 801c7f6:	4690      	mov	r8, r2
 801c7f8:	f001 fbae 	bl	801df58 <_ZN8touchgfx15RenderingBufferC1Ev>
 801c7fc:	4638      	mov	r0, r7
 801c7fe:	f000 fb63 	bl	801cec8 <_ZN8touchgfx7OutlineC1Ev>
 801c802:	f104 0078 	add.w	r0, r4, #120	; 0x78
 801c806:	f001 fb53 	bl	801deb0 <_ZN8touchgfx8ScanlineC1Ev>
 801c80a:	2301      	movs	r3, #1
 801c80c:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 801c810:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 801c814:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801c818:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 801c81c:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 801c820:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801c824:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 801c828:	f7ef ff52 	bl	800c6d0 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 801c82c:	b928      	cbnz	r0, 801c83a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x66>
 801c82e:	4b7b      	ldr	r3, [pc, #492]	; (801ca1c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 801c830:	4a7b      	ldr	r2, [pc, #492]	; (801ca20 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801c832:	2118      	movs	r1, #24
 801c834:	487b      	ldr	r0, [pc, #492]	; (801ca24 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801c836:	f001 fbd7 	bl	801dfe8 <__assert_func>
 801c83a:	f9b8 2000 	ldrsh.w	r2, [r8]
 801c83e:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801c842:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801c846:	9602      	str	r6, [sp, #8]
 801c848:	4410      	add	r0, r2
 801c84a:	b280      	uxth	r0, r0
 801c84c:	fa0f fa80 	sxth.w	sl, r0
 801c850:	f1ba 0f00 	cmp.w	sl, #0
 801c854:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801c858:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801c85c:	dd70      	ble.n	801c940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801c85e:	4591      	cmp	r9, r2
 801c860:	dd6e      	ble.n	801c940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801c862:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801c866:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801c86a:	440b      	add	r3, r1
 801c86c:	b29b      	uxth	r3, r3
 801c86e:	b21e      	sxth	r6, r3
 801c870:	2e00      	cmp	r6, #0
 801c872:	dd65      	ble.n	801c940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801c874:	458e      	cmp	lr, r1
 801c876:	dd63      	ble.n	801c940 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801c878:	45d1      	cmp	r9, sl
 801c87a:	bfb8      	it	lt
 801c87c:	fa1f f089 	uxthlt.w	r0, r9
 801c880:	45b6      	cmp	lr, r6
 801c882:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801c886:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801c88a:	bfb8      	it	lt
 801c88c:	fa1f f38e 	uxthlt.w	r3, lr
 801c890:	1a80      	subs	r0, r0, r2
 801c892:	1a5b      	subs	r3, r3, r1
 801c894:	f8ad 000c 	strh.w	r0, [sp, #12]
 801c898:	f8ad 300e 	strh.w	r3, [sp, #14]
 801c89c:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c8a0:	f8ad 100a 	strh.w	r1, [sp, #10]
 801c8a4:	f10d 0808 	add.w	r8, sp, #8
 801c8a8:	e898 0003 	ldmia.w	r8, {r0, r1}
 801c8ac:	ae04      	add	r6, sp, #16
 801c8ae:	e886 0003 	stmia.w	r6, {r0, r1}
 801c8b2:	f8dc 3000 	ldr.w	r3, [ip]
 801c8b6:	4660      	mov	r0, ip
 801c8b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c8ba:	4631      	mov	r1, r6
 801c8bc:	4798      	blx	r3
 801c8be:	6861      	ldr	r1, [r4, #4]
 801c8c0:	4640      	mov	r0, r8
 801c8c2:	3104      	adds	r1, #4
 801c8c4:	f7f1 f9b6 	bl	800dc34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c8c8:	4630      	mov	r0, r6
 801c8ca:	f7f1 f9cb 	bl	800dc64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c8ce:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801c8d2:	f7ef fe8d 	bl	800c5f0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 801c8d6:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 801c8da:	4638      	mov	r0, r7
 801c8dc:	f000 facf 	bl	801ce7e <_ZN8touchgfx7Outline5resetEv>
 801c8e0:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c8e4:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 801c8e8:	015b      	lsls	r3, r3, #5
 801c8ea:	60e3      	str	r3, [r4, #12]
 801c8ec:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801c8f0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c8f4:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 801c8f8:	015b      	lsls	r3, r3, #5
 801c8fa:	6123      	str	r3, [r4, #16]
 801c8fc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801c900:	015b      	lsls	r3, r3, #5
 801c902:	6163      	str	r3, [r4, #20]
 801c904:	4b48      	ldr	r3, [pc, #288]	; (801ca28 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 801c906:	0152      	lsls	r2, r2, #5
 801c908:	6818      	ldr	r0, [r3, #0]
 801c90a:	60a2      	str	r2, [r4, #8]
 801c90c:	6803      	ldr	r3, [r0, #0]
 801c90e:	6a1b      	ldr	r3, [r3, #32]
 801c910:	4798      	blx	r3
 801c912:	4606      	mov	r6, r0
 801c914:	f7e4 fa6a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 801c918:	6803      	ldr	r3, [r0, #0]
 801c91a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c91c:	4798      	blx	r3
 801c91e:	4607      	mov	r7, r0
 801c920:	f7e4 fa64 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 801c924:	6803      	ldr	r3, [r0, #0]
 801c926:	6a1b      	ldr	r3, [r3, #32]
 801c928:	4798      	blx	r3
 801c92a:	280d      	cmp	r0, #13
 801c92c:	d855      	bhi.n	801c9da <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801c92e:	e8df f000 	tbb	[pc, r0]
 801c932:	564c      	.short	0x564c
 801c934:	2b6f0a67 	.word	0x2b6f0a67
 801c938:	6060603b 	.word	0x6060603b
 801c93c:	6f6f6060 	.word	0x6f6f6060
 801c940:	2300      	movs	r3, #0
 801c942:	9303      	str	r3, [sp, #12]
 801c944:	e7ae      	b.n	801c8a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd0>
 801c946:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c94a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c94e:	2108      	movs	r1, #8
 801c950:	fb92 f1f1 	sdiv	r1, r2, r1
 801c954:	fb07 1303 	mla	r3, r7, r3, r1
 801c958:	441e      	add	r6, r3
 801c95a:	4253      	negs	r3, r2
 801c95c:	f003 0307 	and.w	r3, r3, #7
 801c960:	f002 0207 	and.w	r2, r2, #7
 801c964:	bf58      	it	pl
 801c966:	425a      	negpl	r2, r3
 801c968:	b2d2      	uxtb	r2, r2
 801c96a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801c96e:	6721      	str	r1, [r4, #112]	; 0x70
 801c970:	e9cd 1700 	strd	r1, r7, [sp]
 801c974:	4628      	mov	r0, r5
 801c976:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801c97a:	4631      	mov	r1, r6
 801c97c:	f001 faf8 	bl	801df70 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 801c980:	4620      	mov	r0, r4
 801c982:	b006      	add	sp, #24
 801c984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c988:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c98c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c990:	2104      	movs	r1, #4
 801c992:	fb92 f1f1 	sdiv	r1, r2, r1
 801c996:	fb07 1303 	mla	r3, r7, r3, r1
 801c99a:	441e      	add	r6, r3
 801c99c:	4253      	negs	r3, r2
 801c99e:	f003 0303 	and.w	r3, r3, #3
 801c9a2:	f002 0203 	and.w	r2, r2, #3
 801c9a6:	e7dd      	b.n	801c964 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x190>
 801c9a8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c9ac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c9b0:	2a00      	cmp	r2, #0
 801c9b2:	f04f 0102 	mov.w	r1, #2
 801c9b6:	fb92 f1f1 	sdiv	r1, r2, r1
 801c9ba:	f002 0201 	and.w	r2, r2, #1
 801c9be:	fb07 1303 	mla	r3, r7, r3, r1
 801c9c2:	441e      	add	r6, r3
 801c9c4:	bfb8      	it	lt
 801c9c6:	4252      	neglt	r2, r2
 801c9c8:	e7ce      	b.n	801c968 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 801c9ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c9ce:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c9d2:	437b      	muls	r3, r7
 801c9d4:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801c9d8:	441e      	add	r6, r3
 801c9da:	2200      	movs	r2, #0
 801c9dc:	e7c5      	b.n	801c96a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x196>
 801c9de:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c9e2:	fb07 f203 	mul.w	r2, r7, r3
 801c9e6:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801c9ea:	2103      	movs	r1, #3
 801c9ec:	fb13 2301 	smlabb	r3, r3, r1, r2
 801c9f0:	e7f2      	b.n	801c9d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801c9f2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801c9f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801c9fa:	fb07 2303 	mla	r3, r7, r3, r2
 801c9fe:	e7eb      	b.n	801c9d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801ca00:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ca04:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ca08:	437b      	muls	r3, r7
 801ca0a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801ca0e:	e7e3      	b.n	801c9d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801ca10:	4b06      	ldr	r3, [pc, #24]	; (801ca2c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 801ca12:	4a03      	ldr	r2, [pc, #12]	; (801ca20 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801ca14:	2157      	movs	r1, #87	; 0x57
 801ca16:	e70d      	b.n	801c834 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x60>
 801ca18:	08022e5c 	.word	0x08022e5c
 801ca1c:	08022da7 	.word	0x08022da7
 801ca20:	08022e64 	.word	0x08022e64
 801ca24:	08022e03 	.word	0x08022e03
 801ca28:	2000d358 	.word	0x2000d358
 801ca2c:	08022e37 	.word	0x08022e37

0801ca30 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 801ca30:	6812      	ldr	r2, [r2, #0]
 801ca32:	2a00      	cmp	r2, #0
 801ca34:	db0b      	blt.n	801ca4e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 801ca36:	9800      	ldr	r0, [sp, #0]
 801ca38:	6800      	ldr	r0, [r0, #0]
 801ca3a:	4290      	cmp	r0, r2
 801ca3c:	bfd4      	ite	le
 801ca3e:	2002      	movle	r0, #2
 801ca40:	2000      	movgt	r0, #0
 801ca42:	680a      	ldr	r2, [r1, #0]
 801ca44:	2a00      	cmp	r2, #0
 801ca46:	da04      	bge.n	801ca52 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 801ca48:	f040 0004 	orr.w	r0, r0, #4
 801ca4c:	4770      	bx	lr
 801ca4e:	2001      	movs	r0, #1
 801ca50:	e7f7      	b.n	801ca42 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 801ca52:	681b      	ldr	r3, [r3, #0]
 801ca54:	4293      	cmp	r3, r2
 801ca56:	bfd8      	it	le
 801ca58:	f040 0008 	orrle.w	r0, r0, #8
 801ca5c:	4770      	bx	lr
	...

0801ca60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801ca60:	b510      	push	{r4, lr}
 801ca62:	4b07      	ldr	r3, [pc, #28]	; (801ca80 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801ca64:	781b      	ldrb	r3, [r3, #0]
 801ca66:	2b01      	cmp	r3, #1
 801ca68:	d108      	bne.n	801ca7c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801ca6a:	6843      	ldr	r3, [r0, #4]
 801ca6c:	6814      	ldr	r4, [r2, #0]
 801ca6e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801ca72:	680b      	ldr	r3, [r1, #0]
 801ca74:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801ca78:	6013      	str	r3, [r2, #0]
 801ca7a:	600c      	str	r4, [r1, #0]
 801ca7c:	bd10      	pop	{r4, pc}
 801ca7e:	bf00      	nop
 801ca80:	2000d350 	.word	0x2000d350

0801ca84 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801ca84:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ca86:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801ca8a:	b085      	sub	sp, #20
 801ca8c:	4604      	mov	r4, r0
 801ca8e:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801ca92:	b33b      	cbz	r3, 801cae4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 801ca94:	aa02      	add	r2, sp, #8
 801ca96:	a903      	add	r1, sp, #12
 801ca98:	f7ff ffe2 	bl	801ca60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801ca9c:	68a3      	ldr	r3, [r4, #8]
 801ca9e:	9e03      	ldr	r6, [sp, #12]
 801caa0:	9f02      	ldr	r7, [sp, #8]
 801caa2:	1af6      	subs	r6, r6, r3
 801caa4:	68e3      	ldr	r3, [r4, #12]
 801caa6:	9603      	str	r6, [sp, #12]
 801caa8:	1aff      	subs	r7, r7, r3
 801caaa:	f104 0314 	add.w	r3, r4, #20
 801caae:	9300      	str	r3, [sp, #0]
 801cab0:	aa02      	add	r2, sp, #8
 801cab2:	f104 0310 	add.w	r3, r4, #16
 801cab6:	a903      	add	r1, sp, #12
 801cab8:	4620      	mov	r0, r4
 801caba:	9702      	str	r7, [sp, #8]
 801cabc:	f7ff ffb8 	bl	801ca30 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801cac0:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 801cac4:	4605      	mov	r5, r0
 801cac6:	b97b      	cbnz	r3, 801cae8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 801cac8:	463a      	mov	r2, r7
 801caca:	4631      	mov	r1, r6
 801cacc:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801cad0:	f7ff fe7a 	bl	801c7c8 <_ZN8touchgfx10Rasterizer6lineToEii>
 801cad4:	9b03      	ldr	r3, [sp, #12]
 801cad6:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801cada:	9b02      	ldr	r3, [sp, #8]
 801cadc:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 801cae0:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801cae4:	b005      	add	sp, #20
 801cae6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cae8:	b110      	cbz	r0, 801caf0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 801caea:	ea13 0200 	ands.w	r2, r3, r0
 801caee:	d11c      	bne.n	801cb2a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801caf0:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 801caf4:	f104 0630 	add.w	r6, r4, #48	; 0x30
 801caf8:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 801cafc:	b188      	cbz	r0, 801cb22 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801cafe:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 801cb02:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801cb06:	b913      	cbnz	r3, 801cb0e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 801cb08:	4630      	mov	r0, r6
 801cb0a:	f001 f834 	bl	801db76 <_ZN8touchgfx7Outline6moveToEii>
 801cb0e:	2300      	movs	r3, #0
 801cb10:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801cb14:	2301      	movs	r3, #1
 801cb16:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801cb1a:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801cb1e:	4630      	mov	r0, r6
 801cb20:	e7d6      	b.n	801cad0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 801cb22:	4630      	mov	r0, r6
 801cb24:	f7ff fe50 	bl	801c7c8 <_ZN8touchgfx10Rasterizer6lineToEii>
 801cb28:	e7f7      	b.n	801cb1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 801cb2a:	4615      	mov	r5, r2
 801cb2c:	e7d2      	b.n	801cad4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0801cb2e <_ZN8touchgfx6Canvas5closeEv>:
 801cb2e:	b538      	push	{r3, r4, r5, lr}
 801cb30:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801cb34:	4604      	mov	r4, r0
 801cb36:	b993      	cbnz	r3, 801cb5e <_ZN8touchgfx6Canvas5closeEv+0x30>
 801cb38:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 801cb3c:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 801cb40:	4213      	tst	r3, r2
 801cb42:	d10c      	bne.n	801cb5e <_ZN8touchgfx6Canvas5closeEv+0x30>
 801cb44:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801cb48:	b123      	cbz	r3, 801cb54 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801cb4a:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 801cb4e:	4628      	mov	r0, r5
 801cb50:	f7ff fe3a 	bl	801c7c8 <_ZN8touchgfx10Rasterizer6lineToEii>
 801cb54:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 801cb58:	4628      	mov	r0, r5
 801cb5a:	f7ff fe35 	bl	801c7c8 <_ZN8touchgfx10Rasterizer6lineToEii>
 801cb5e:	2300      	movs	r3, #0
 801cb60:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801cb64:	bd38      	pop	{r3, r4, r5, pc}

0801cb66 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801cb66:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cb68:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801cb6c:	b085      	sub	sp, #20
 801cb6e:	4604      	mov	r4, r0
 801cb70:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801cb74:	b353      	cbz	r3, 801cbcc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 801cb76:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801cb7a:	b90b      	cbnz	r3, 801cb80 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 801cb7c:	f7ff ffd7 	bl	801cb2e <_ZN8touchgfx6Canvas5closeEv>
 801cb80:	aa02      	add	r2, sp, #8
 801cb82:	a903      	add	r1, sp, #12
 801cb84:	4620      	mov	r0, r4
 801cb86:	f7ff ff6b 	bl	801ca60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801cb8a:	68a3      	ldr	r3, [r4, #8]
 801cb8c:	9d03      	ldr	r5, [sp, #12]
 801cb8e:	9e02      	ldr	r6, [sp, #8]
 801cb90:	1aed      	subs	r5, r5, r3
 801cb92:	68e3      	ldr	r3, [r4, #12]
 801cb94:	9503      	str	r5, [sp, #12]
 801cb96:	1af6      	subs	r6, r6, r3
 801cb98:	f104 0314 	add.w	r3, r4, #20
 801cb9c:	9300      	str	r3, [sp, #0]
 801cb9e:	aa02      	add	r2, sp, #8
 801cba0:	f104 0310 	add.w	r3, r4, #16
 801cba4:	a903      	add	r1, sp, #12
 801cba6:	4620      	mov	r0, r4
 801cba8:	9602      	str	r6, [sp, #8]
 801cbaa:	f7ff ff41 	bl	801ca30 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801cbae:	4607      	mov	r7, r0
 801cbb0:	b170      	cbz	r0, 801cbd0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 801cbb2:	2301      	movs	r3, #1
 801cbb4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801cbb8:	9a03      	ldr	r2, [sp, #12]
 801cbba:	9b02      	ldr	r3, [sp, #8]
 801cbbc:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 801cbc0:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 801cbc4:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801cbc8:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 801cbcc:	b005      	add	sp, #20
 801cbce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cbd0:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801cbd4:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 801cbd8:	b92b      	cbnz	r3, 801cbe6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 801cbda:	4632      	mov	r2, r6
 801cbdc:	4629      	mov	r1, r5
 801cbde:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801cbe2:	f000 ffc8 	bl	801db76 <_ZN8touchgfx7Outline6moveToEii>
 801cbe6:	2300      	movs	r3, #0
 801cbe8:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801cbec:	2301      	movs	r3, #1
 801cbee:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801cbf2:	e7e1      	b.n	801cbb8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0801cbf4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 801cbf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf8:	b087      	sub	sp, #28
 801cbfa:	4604      	mov	r4, r0
 801cbfc:	9105      	str	r1, [sp, #20]
 801cbfe:	f001 f900 	bl	801de02 <_ZN8touchgfx7Outline8getCellsEv>
 801cc02:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801cc06:	4605      	mov	r5, r0
 801cc08:	f1b9 0f00 	cmp.w	r9, #0
 801cc0c:	d103      	bne.n	801cc16 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 801cc0e:	2001      	movs	r0, #1
 801cc10:	b007      	add	sp, #28
 801cc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc16:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 801cc1a:	2e00      	cmp	r6, #0
 801cc1c:	d139      	bne.n	801cc92 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 801cc1e:	f104 0848 	add.w	r8, r4, #72	; 0x48
 801cc22:	4640      	mov	r0, r8
 801cc24:	f001 f92f 	bl	801de86 <_ZN8touchgfx8Scanline5resetEv>
 801cc28:	f109 33ff 	add.w	r3, r9, #4294967295
 801cc2c:	f105 0708 	add.w	r7, r5, #8
 801cc30:	9303      	str	r3, [sp, #12]
 801cc32:	f9b5 b000 	ldrsh.w	fp, [r5]
 801cc36:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 801cc3a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801cc3e:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801cc42:	46da      	mov	sl, fp
 801cc44:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 801cc48:	9b03      	ldr	r3, [sp, #12]
 801cc4a:	9504      	str	r5, [sp, #16]
 801cc4c:	3b01      	subs	r3, #1
 801cc4e:	9303      	str	r3, [sp, #12]
 801cc50:	3301      	adds	r3, #1
 801cc52:	4416      	add	r6, r2
 801cc54:	463d      	mov	r5, r7
 801cc56:	d01e      	beq.n	801cc96 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 801cc58:	3708      	adds	r7, #8
 801cc5a:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 801cc5e:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 801cc62:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 801cc66:	4290      	cmp	r0, r2
 801cc68:	d11e      	bne.n	801cca8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 801cc6a:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 801cc6e:	4411      	add	r1, r2
 801cc70:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 801cc74:	e7e8      	b.n	801cc48 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 801cc76:	1c91      	adds	r1, r2, #2
 801cc78:	f04f 0301 	mov.w	r3, #1
 801cc7c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801cc7e:	8053      	strh	r3, [r2, #2]
 801cc80:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801cc82:	1c91      	adds	r1, r2, #2
 801cc84:	65a1      	str	r1, [r4, #88]	; 0x58
 801cc86:	f8a2 b002 	strh.w	fp, [r2, #2]
 801cc8a:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801cc8c:	3201      	adds	r2, #1
 801cc8e:	6562      	str	r2, [r4, #84]	; 0x54
 801cc90:	e03a      	b.n	801cd08 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 801cc92:	2000      	movs	r0, #0
 801cc94:	e7bc      	b.n	801cc10 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 801cc96:	b951      	cbnz	r1, 801ccae <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 801cc98:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801cc9a:	2b00      	cmp	r3, #0
 801cc9c:	d0b7      	beq.n	801cc0e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801cc9e:	4641      	mov	r1, r8
 801cca0:	9805      	ldr	r0, [sp, #20]
 801cca2:	f7ff fd5b 	bl	801c75c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801cca6:	e7b2      	b.n	801cc0e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801cca8:	2900      	cmp	r1, #0
 801ccaa:	d035      	beq.n	801cd18 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 801ccac:	9504      	str	r5, [sp, #16]
 801ccae:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 801ccb2:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801ccb6:	f7ff fd3d 	bl	801c734 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 801ccba:	4605      	mov	r5, r0
 801ccbc:	b330      	cbz	r0, 801cd0c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801ccbe:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801ccc0:	b182      	cbz	r2, 801cce4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801ccc2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801ccc4:	454a      	cmp	r2, r9
 801ccc6:	d00d      	beq.n	801cce4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801ccc8:	4641      	mov	r1, r8
 801ccca:	9805      	ldr	r0, [sp, #20]
 801cccc:	f7ff fd46 	bl	801c75c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801ccd0:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801ccd4:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 801ccd6:	65e2      	str	r2, [r4, #92]	; 0x5c
 801ccd8:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801ccdc:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801ccde:	65a2      	str	r2, [r4, #88]	; 0x58
 801cce0:	2300      	movs	r3, #0
 801cce2:	6563      	str	r3, [r4, #84]	; 0x54
 801cce4:	f1bb 0f00 	cmp.w	fp, #0
 801cce8:	db10      	blt.n	801cd0c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801ccea:	f7ef fcff 	bl	800c6ec <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801ccee:	4583      	cmp	fp, r0
 801ccf0:	d20c      	bcs.n	801cd0c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801ccf2:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801ccf4:	f802 500b 	strb.w	r5, [r2, fp]
 801ccf8:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 801ccfa:	3201      	adds	r2, #1
 801ccfc:	455a      	cmp	r2, fp
 801ccfe:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801cd00:	d1b9      	bne.n	801cc76 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 801cd02:	8811      	ldrh	r1, [r2, #0]
 801cd04:	3101      	adds	r1, #1
 801cd06:	8011      	strh	r1, [r2, #0]
 801cd08:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 801cd0c:	9b03      	ldr	r3, [sp, #12]
 801cd0e:	3301      	adds	r3, #1
 801cd10:	d0c2      	beq.n	801cc98 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 801cd12:	9d04      	ldr	r5, [sp, #16]
 801cd14:	f10b 0a01 	add.w	sl, fp, #1
 801cd18:	f9b5 3000 	ldrsh.w	r3, [r5]
 801cd1c:	4553      	cmp	r3, sl
 801cd1e:	dd88      	ble.n	801cc32 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801cd20:	01b1      	lsls	r1, r6, #6
 801cd22:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801cd26:	f7ff fd05 	bl	801c734 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 801cd2a:	4683      	mov	fp, r0
 801cd2c:	2800      	cmp	r0, #0
 801cd2e:	d080      	beq.n	801cc32 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801cd30:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801cd32:	b183      	cbz	r3, 801cd56 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801cd34:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801cd36:	454b      	cmp	r3, r9
 801cd38:	d00d      	beq.n	801cd56 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801cd3a:	4641      	mov	r1, r8
 801cd3c:	9805      	ldr	r0, [sp, #20]
 801cd3e:	f7ff fd0d 	bl	801c75c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801cd42:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801cd46:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801cd4a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 801cd4c:	65e3      	str	r3, [r4, #92]	; 0x5c
 801cd4e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801cd50:	65a3      	str	r3, [r4, #88]	; 0x58
 801cd52:	2300      	movs	r3, #0
 801cd54:	6563      	str	r3, [r4, #84]	; 0x54
 801cd56:	f9b5 3000 	ldrsh.w	r3, [r5]
 801cd5a:	f8cd b000 	str.w	fp, [sp]
 801cd5e:	eba3 030a 	sub.w	r3, r3, sl
 801cd62:	464a      	mov	r2, r9
 801cd64:	4651      	mov	r1, sl
 801cd66:	4640      	mov	r0, r8
 801cd68:	f001 f8b4 	bl	801ded4 <_ZN8touchgfx8Scanline7addSpanEiijj>
 801cd6c:	e761      	b.n	801cc32 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0801cd6e <_ZN8touchgfx6Canvas6renderEh>:
 801cd6e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cd70:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801cd74:	4604      	mov	r4, r0
 801cd76:	460d      	mov	r5, r1
 801cd78:	b913      	cbnz	r3, 801cd80 <_ZN8touchgfx6Canvas6renderEh+0x12>
 801cd7a:	2001      	movs	r0, #1
 801cd7c:	b003      	add	sp, #12
 801cd7e:	bd30      	pop	{r4, r5, pc}
 801cd80:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 801cd84:	2b00      	cmp	r3, #0
 801cd86:	d12f      	bne.n	801cde8 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 801cd88:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 801cd8c:	2b00      	cmp	r3, #0
 801cd8e:	d0f4      	beq.n	801cd7a <_ZN8touchgfx6Canvas6renderEh+0xc>
 801cd90:	6840      	ldr	r0, [r0, #4]
 801cd92:	6803      	ldr	r3, [r0, #0]
 801cd94:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801cd96:	4798      	blx	r3
 801cd98:	fb10 f105 	smulbb	r1, r0, r5
 801cd9c:	b288      	uxth	r0, r1
 801cd9e:	1c41      	adds	r1, r0, #1
 801cda0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cda4:	120d      	asrs	r5, r1, #8
 801cda6:	d0e8      	beq.n	801cd7a <_ZN8touchgfx6Canvas6renderEh+0xc>
 801cda8:	4620      	mov	r0, r4
 801cdaa:	f7ff fec0 	bl	801cb2e <_ZN8touchgfx6Canvas5closeEv>
 801cdae:	6860      	ldr	r0, [r4, #4]
 801cdb0:	6803      	ldr	r3, [r0, #0]
 801cdb2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801cdb4:	4798      	blx	r3
 801cdb6:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 801cdba:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 801cdbe:	80c3      	strh	r3, [r0, #6]
 801cdc0:	8082      	strh	r2, [r0, #4]
 801cdc2:	6860      	ldr	r0, [r4, #4]
 801cdc4:	6803      	ldr	r3, [r0, #0]
 801cdc6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801cdc8:	4798      	blx	r3
 801cdca:	7205      	strb	r5, [r0, #8]
 801cdcc:	6860      	ldr	r0, [r4, #4]
 801cdce:	6803      	ldr	r3, [r0, #0]
 801cdd0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801cdd2:	4798      	blx	r3
 801cdd4:	f104 0318 	add.w	r3, r4, #24
 801cdd8:	e9cd 3000 	strd	r3, r0, [sp]
 801cddc:	4669      	mov	r1, sp
 801cdde:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801cde2:	f7ff ff07 	bl	801cbf4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 801cde6:	e7c9      	b.n	801cd7c <_ZN8touchgfx6Canvas6renderEh+0xe>
 801cde8:	2000      	movs	r0, #0
 801cdea:	e7c7      	b.n	801cd7c <_ZN8touchgfx6Canvas6renderEh+0xe>

0801cdec <_ZN8touchgfx6CanvasD1Ev>:
 801cdec:	b538      	push	{r3, r4, r5, lr}
 801cdee:	4605      	mov	r5, r0
 801cdf0:	4b08      	ldr	r3, [pc, #32]	; (801ce14 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 801cdf2:	f845 3b30 	str.w	r3, [r5], #48
 801cdf6:	4b08      	ldr	r3, [pc, #32]	; (801ce18 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 801cdf8:	4604      	mov	r4, r0
 801cdfa:	6818      	ldr	r0, [r3, #0]
 801cdfc:	6803      	ldr	r3, [r0, #0]
 801cdfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801ce00:	4798      	blx	r3
 801ce02:	4628      	mov	r0, r5
 801ce04:	f000 f833 	bl	801ce6e <_ZN8touchgfx7OutlineD1Ev>
 801ce08:	f104 0018 	add.w	r0, r4, #24
 801ce0c:	f001 f89b 	bl	801df46 <_ZN8touchgfx15RenderingBufferD1Ev>
 801ce10:	4620      	mov	r0, r4
 801ce12:	bd38      	pop	{r3, r4, r5, pc}
 801ce14:	08022e5c 	.word	0x08022e5c
 801ce18:	2000d358 	.word	0x2000d358

0801ce1c <_ZN8touchgfx6CanvasD0Ev>:
 801ce1c:	b510      	push	{r4, lr}
 801ce1e:	4604      	mov	r4, r0
 801ce20:	f7ff ffe4 	bl	801cdec <_ZN8touchgfx6CanvasD1Ev>
 801ce24:	4620      	mov	r0, r4
 801ce26:	21bc      	movs	r1, #188	; 0xbc
 801ce28:	f001 f8af 	bl	801df8a <_ZdlPvj>
 801ce2c:	4620      	mov	r0, r4
 801ce2e:	bd10      	pop	{r4, pc}

0801ce30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801ce30:	b570      	push	{r4, r5, r6, lr}
 801ce32:	790b      	ldrb	r3, [r1, #4]
 801ce34:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801ce38:	2b00      	cmp	r3, #0
 801ce3a:	bf0c      	ite	eq
 801ce3c:	2301      	moveq	r3, #1
 801ce3e:	2300      	movne	r3, #0
 801ce40:	4604      	mov	r4, r0
 801ce42:	460e      	mov	r6, r1
 801ce44:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801ce48:	d109      	bne.n	801ce5e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801ce4a:	b14d      	cbz	r5, 801ce60 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801ce4c:	7933      	ldrb	r3, [r6, #4]
 801ce4e:	2b01      	cmp	r3, #1
 801ce50:	d10c      	bne.n	801ce6c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ce52:	6823      	ldr	r3, [r4, #0]
 801ce54:	4620      	mov	r0, r4
 801ce56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ce58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ce5c:	4718      	bx	r3
 801ce5e:	b12d      	cbz	r5, 801ce6c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801ce60:	6823      	ldr	r3, [r4, #0]
 801ce62:	4620      	mov	r0, r4
 801ce64:	695b      	ldr	r3, [r3, #20]
 801ce66:	4798      	blx	r3
 801ce68:	2d00      	cmp	r5, #0
 801ce6a:	d1ef      	bne.n	801ce4c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801ce6c:	bd70      	pop	{r4, r5, r6, pc}

0801ce6e <_ZN8touchgfx7OutlineD1Ev>:
 801ce6e:	4770      	bx	lr

0801ce70 <_ZN8touchgfx7OutlineD0Ev>:
 801ce70:	b510      	push	{r4, lr}
 801ce72:	2148      	movs	r1, #72	; 0x48
 801ce74:	4604      	mov	r4, r0
 801ce76:	f001 f888 	bl	801df8a <_ZdlPvj>
 801ce7a:	4620      	mov	r0, r4
 801ce7c:	bd10      	pop	{r4, pc}

0801ce7e <_ZN8touchgfx7Outline5resetEv>:
 801ce7e:	b510      	push	{r4, lr}
 801ce80:	4604      	mov	r4, r0
 801ce82:	f7ef fc4b 	bl	800c71c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801ce86:	60e0      	str	r0, [r4, #12]
 801ce88:	f7ef fc4e 	bl	800c728 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801ce8c:	68e3      	ldr	r3, [r4, #12]
 801ce8e:	6123      	str	r3, [r4, #16]
 801ce90:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801ce94:	82a3      	strh	r3, [r4, #20]
 801ce96:	82e3      	strh	r3, [r4, #22]
 801ce98:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801ce9a:	f023 0301 	bic.w	r3, r3, #1
 801ce9e:	f043 0302 	orr.w	r3, r3, #2
 801cea2:	63e3      	str	r3, [r4, #60]	; 0x3c
 801cea4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801cea8:	2200      	movs	r2, #0
 801ceaa:	08c0      	lsrs	r0, r0, #3
 801ceac:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801ceb0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801ceb4:	6060      	str	r0, [r4, #4]
 801ceb6:	60a2      	str	r2, [r4, #8]
 801ceb8:	8322      	strh	r2, [r4, #24]
 801ceba:	8362      	strh	r2, [r4, #26]
 801cebc:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801cec0:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801cec4:	bd10      	pop	{r4, pc}
	...

0801cec8 <_ZN8touchgfx7OutlineC1Ev>:
 801cec8:	b510      	push	{r4, lr}
 801ceca:	4b0f      	ldr	r3, [pc, #60]	; (801cf08 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 801cecc:	6003      	str	r3, [r0, #0]
 801cece:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801ced2:	2300      	movs	r3, #0
 801ced4:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801ced8:	4604      	mov	r4, r0
 801ceda:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801cede:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801cee2:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801cee6:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801ceea:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 801ceee:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801cef2:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 801cef6:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 801cefa:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 801cefe:	f7ff ffbe 	bl	801ce7e <_ZN8touchgfx7Outline5resetEv>
 801cf02:	4620      	mov	r0, r4
 801cf04:	bd10      	pop	{r4, pc}
 801cf06:	bf00      	nop
 801cf08:	08022ebc 	.word	0x08022ebc

0801cf0c <_ZN8touchgfx7Outline10renderLineEiiii>:
 801cf0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf10:	b093      	sub	sp, #76	; 0x4c
 801cf12:	4604      	mov	r4, r0
 801cf14:	981c      	ldr	r0, [sp, #112]	; 0x70
 801cf16:	9305      	str	r3, [sp, #20]
 801cf18:	1143      	asrs	r3, r0, #5
 801cf1a:	930c      	str	r3, [sp, #48]	; 0x30
 801cf1c:	f000 031f 	and.w	r3, r0, #31
 801cf20:	9303      	str	r3, [sp, #12]
 801cf22:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801cf24:	1156      	asrs	r6, r2, #5
 801cf26:	42b3      	cmp	r3, r6
 801cf28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801cf2a:	bfc8      	it	gt
 801cf2c:	6326      	strgt	r6, [r4, #48]	; 0x30
 801cf2e:	42b3      	cmp	r3, r6
 801cf30:	bfdc      	itt	le
 801cf32:	1c73      	addle	r3, r6, #1
 801cf34:	63a3      	strle	r3, [r4, #56]	; 0x38
 801cf36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801cf38:	1145      	asrs	r5, r0, #5
 801cf3a:	42ab      	cmp	r3, r5
 801cf3c:	bfc4      	itt	gt
 801cf3e:	462b      	movgt	r3, r5
 801cf40:	6323      	strgt	r3, [r4, #48]	; 0x30
 801cf42:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801cf44:	1145      	asrs	r5, r0, #5
 801cf46:	42ab      	cmp	r3, r5
 801cf48:	bfde      	ittt	le
 801cf4a:	462b      	movle	r3, r5
 801cf4c:	3301      	addle	r3, #1
 801cf4e:	63a3      	strle	r3, [r4, #56]	; 0x38
 801cf50:	9b05      	ldr	r3, [sp, #20]
 801cf52:	eba3 0a01 	sub.w	sl, r3, r1
 801cf56:	1143      	asrs	r3, r0, #5
 801cf58:	429e      	cmp	r6, r3
 801cf5a:	f002 0e1f 	and.w	lr, r2, #31
 801cf5e:	ea4f 1561 	mov.w	r5, r1, asr #5
 801cf62:	f040 811e 	bne.w	801d1a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x296>
 801cf66:	9b05      	ldr	r3, [sp, #20]
 801cf68:	ea4f 1c63 	mov.w	ip, r3, asr #5
 801cf6c:	9b03      	ldr	r3, [sp, #12]
 801cf6e:	459e      	cmp	lr, r3
 801cf70:	d12c      	bne.n	801cfcc <_ZN8touchgfx7Outline10renderLineEiiii+0xc0>
 801cf72:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801cf76:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 801cf7a:	eb0c 4106 	add.w	r1, ip, r6, lsl #16
 801cf7e:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 801cf82:	4291      	cmp	r1, r2
 801cf84:	d037      	beq.n	801cff6 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801cf86:	8b61      	ldrh	r1, [r4, #26]
 801cf88:	8b22      	ldrh	r2, [r4, #24]
 801cf8a:	430a      	orrs	r2, r1
 801cf8c:	d00b      	beq.n	801cfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801cf8e:	2b00      	cmp	r3, #0
 801cf90:	db09      	blt.n	801cfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801cf92:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801cf94:	429a      	cmp	r2, r3
 801cf96:	dd06      	ble.n	801cfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801cf98:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801cf9c:	429a      	cmp	r2, r3
 801cf9e:	d308      	bcc.n	801cfb2 <_ZN8touchgfx7Outline10renderLineEiiii+0xa6>
 801cfa0:	2301      	movs	r3, #1
 801cfa2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801cfa6:	f8a4 c014 	strh.w	ip, [r4, #20]
 801cfaa:	82e6      	strh	r6, [r4, #22]
 801cfac:	2300      	movs	r3, #0
 801cfae:	8323      	strh	r3, [r4, #24]
 801cfb0:	e0cb      	b.n	801d14a <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 801cfb2:	f104 0314 	add.w	r3, r4, #20
 801cfb6:	cb03      	ldmia	r3!, {r0, r1}
 801cfb8:	6922      	ldr	r2, [r4, #16]
 801cfba:	6010      	str	r0, [r2, #0]
 801cfbc:	6051      	str	r1, [r2, #4]
 801cfbe:	6923      	ldr	r3, [r4, #16]
 801cfc0:	3308      	adds	r3, #8
 801cfc2:	6123      	str	r3, [r4, #16]
 801cfc4:	68a3      	ldr	r3, [r4, #8]
 801cfc6:	3301      	adds	r3, #1
 801cfc8:	60a3      	str	r3, [r4, #8]
 801cfca:	e7ec      	b.n	801cfa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801cfcc:	9b05      	ldr	r3, [sp, #20]
 801cfce:	8b20      	ldrh	r0, [r4, #24]
 801cfd0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801cfd4:	f003 031f 	and.w	r3, r3, #31
 801cfd8:	9304      	str	r3, [sp, #16]
 801cfda:	9b03      	ldr	r3, [sp, #12]
 801cfdc:	45ac      	cmp	ip, r5
 801cfde:	f001 011f 	and.w	r1, r1, #31
 801cfe2:	eba3 020e 	sub.w	r2, r3, lr
 801cfe6:	d109      	bne.n	801cffc <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 801cfe8:	9b04      	ldr	r3, [sp, #16]
 801cfea:	4419      	add	r1, r3
 801cfec:	4410      	add	r0, r2
 801cfee:	fb02 8201 	mla	r2, r2, r1, r8
 801cff2:	8320      	strh	r0, [r4, #24]
 801cff4:	8362      	strh	r2, [r4, #26]
 801cff6:	b013      	add	sp, #76	; 0x4c
 801cff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cffc:	f1ba 0f00 	cmp.w	sl, #0
 801d000:	f2c0 80a5 	blt.w	801d14e <_ZN8touchgfx7Outline10renderLineEiiii+0x242>
 801d004:	f1c1 0320 	rsb	r3, r1, #32
 801d008:	435a      	muls	r2, r3
 801d00a:	2301      	movs	r3, #1
 801d00c:	9302      	str	r3, [sp, #8]
 801d00e:	f04f 0b20 	mov.w	fp, #32
 801d012:	fb92 f7fa 	sdiv	r7, r2, sl
 801d016:	fb0a 2217 	mls	r2, sl, r7, r2
 801d01a:	2a00      	cmp	r2, #0
 801d01c:	bfb8      	it	lt
 801d01e:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801d022:	4459      	add	r1, fp
 801d024:	fb07 8101 	mla	r1, r7, r1, r8
 801d028:	b20b      	sxth	r3, r1
 801d02a:	9902      	ldr	r1, [sp, #8]
 801d02c:	9301      	str	r3, [sp, #4]
 801d02e:	8363      	strh	r3, [r4, #26]
 801d030:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 801d034:	eb05 0301 	add.w	r3, r5, r1
 801d038:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 801d03c:	9300      	str	r3, [sp, #0]
 801d03e:	ea4f 4506 	mov.w	r5, r6, lsl #16
 801d042:	4438      	add	r0, r7
 801d044:	eb03 0905 	add.w	r9, r3, r5
 801d048:	eb08 4801 	add.w	r8, r8, r1, lsl #16
 801d04c:	bfb8      	it	lt
 801d04e:	4452      	addlt	r2, sl
 801d050:	b200      	sxth	r0, r0
 801d052:	45c1      	cmp	r9, r8
 801d054:	8320      	strh	r0, [r4, #24]
 801d056:	9505      	str	r5, [sp, #20]
 801d058:	d014      	beq.n	801d084 <_ZN8touchgfx7Outline10renderLineEiiii+0x178>
 801d05a:	9b01      	ldr	r3, [sp, #4]
 801d05c:	4303      	orrs	r3, r0
 801d05e:	d00b      	beq.n	801d078 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801d060:	2900      	cmp	r1, #0
 801d062:	db09      	blt.n	801d078 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801d064:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d066:	428b      	cmp	r3, r1
 801d068:	dd06      	ble.n	801d078 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801d06a:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801d06e:	4299      	cmp	r1, r3
 801d070:	d376      	bcc.n	801d160 <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 801d072:	2301      	movs	r3, #1
 801d074:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d078:	9b00      	ldr	r3, [sp, #0]
 801d07a:	82a3      	strh	r3, [r4, #20]
 801d07c:	2300      	movs	r3, #0
 801d07e:	82e6      	strh	r6, [r4, #22]
 801d080:	8323      	strh	r3, [r4, #24]
 801d082:	8363      	strh	r3, [r4, #26]
 801d084:	9900      	ldr	r1, [sp, #0]
 801d086:	458c      	cmp	ip, r1
 801d088:	eb0e 0307 	add.w	r3, lr, r7
 801d08c:	d050      	beq.n	801d130 <_ZN8touchgfx7Outline10renderLineEiiii+0x224>
 801d08e:	9903      	ldr	r1, [sp, #12]
 801d090:	1ac9      	subs	r1, r1, r3
 801d092:	440f      	add	r7, r1
 801d094:	017f      	lsls	r7, r7, #5
 801d096:	fb97 fefa 	sdiv	lr, r7, sl
 801d09a:	fb0a 771e 	mls	r7, sl, lr, r7
 801d09e:	2f00      	cmp	r7, #0
 801d0a0:	bfb8      	it	lt
 801d0a2:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801d0a6:	eba2 020a 	sub.w	r2, r2, sl
 801d0aa:	f10e 0101 	add.w	r1, lr, #1
 801d0ae:	bfb8      	it	lt
 801d0b0:	4457      	addlt	r7, sl
 801d0b2:	9201      	str	r2, [sp, #4]
 801d0b4:	9106      	str	r1, [sp, #24]
 801d0b6:	9a01      	ldr	r2, [sp, #4]
 801d0b8:	8b20      	ldrh	r0, [r4, #24]
 801d0ba:	8b61      	ldrh	r1, [r4, #26]
 801d0bc:	9d02      	ldr	r5, [sp, #8]
 801d0be:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801d0c2:	19d2      	adds	r2, r2, r7
 801d0c4:	9201      	str	r2, [sp, #4]
 801d0c6:	bf5e      	ittt	pl
 801d0c8:	eba2 020a 	subpl.w	r2, r2, sl
 801d0cc:	f8dd 8018 	ldrpl.w	r8, [sp, #24]
 801d0d0:	9201      	strpl	r2, [sp, #4]
 801d0d2:	9a00      	ldr	r2, [sp, #0]
 801d0d4:	bf48      	it	mi
 801d0d6:	46f0      	movmi	r8, lr
 801d0d8:	442a      	add	r2, r5
 801d0da:	4440      	add	r0, r8
 801d0dc:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 801d0e0:	4443      	add	r3, r8
 801d0e2:	9d05      	ldr	r5, [sp, #20]
 801d0e4:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801d0e8:	9200      	str	r2, [sp, #0]
 801d0ea:	4415      	add	r5, r2
 801d0ec:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801d0f0:	b200      	sxth	r0, r0
 801d0f2:	b209      	sxth	r1, r1
 801d0f4:	454d      	cmp	r5, r9
 801d0f6:	8320      	strh	r0, [r4, #24]
 801d0f8:	8361      	strh	r1, [r4, #26]
 801d0fa:	d016      	beq.n	801d12a <_ZN8touchgfx7Outline10renderLineEiiii+0x21e>
 801d0fc:	4301      	orrs	r1, r0
 801d0fe:	d00d      	beq.n	801d11c <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801d100:	f1b8 0f00 	cmp.w	r8, #0
 801d104:	db0a      	blt.n	801d11c <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801d106:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d108:	4541      	cmp	r1, r8
 801d10a:	dd07      	ble.n	801d11c <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801d10c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d110:	4288      	cmp	r0, r1
 801d112:	d335      	bcc.n	801d180 <_ZN8touchgfx7Outline10renderLineEiiii+0x274>
 801d114:	f04f 0101 	mov.w	r1, #1
 801d118:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801d11c:	9900      	ldr	r1, [sp, #0]
 801d11e:	82a1      	strh	r1, [r4, #20]
 801d120:	f04f 0100 	mov.w	r1, #0
 801d124:	82e6      	strh	r6, [r4, #22]
 801d126:	8321      	strh	r1, [r4, #24]
 801d128:	8361      	strh	r1, [r4, #26]
 801d12a:	9a00      	ldr	r2, [sp, #0]
 801d12c:	4594      	cmp	ip, r2
 801d12e:	d1c2      	bne.n	801d0b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1aa>
 801d130:	9a03      	ldr	r2, [sp, #12]
 801d132:	f8b4 c01a 	ldrh.w	ip, [r4, #26]
 801d136:	1ad3      	subs	r3, r2, r3
 801d138:	8b22      	ldrh	r2, [r4, #24]
 801d13a:	441a      	add	r2, r3
 801d13c:	8322      	strh	r2, [r4, #24]
 801d13e:	9a04      	ldr	r2, [sp, #16]
 801d140:	3220      	adds	r2, #32
 801d142:	eba2 020b 	sub.w	r2, r2, fp
 801d146:	fb03 c302 	mla	r3, r3, r2, ip
 801d14a:	8363      	strh	r3, [r4, #26]
 801d14c:	e753      	b.n	801cff6 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801d14e:	f04f 33ff 	mov.w	r3, #4294967295
 801d152:	434a      	muls	r2, r1
 801d154:	f1ca 0a00 	rsb	sl, sl, #0
 801d158:	9302      	str	r3, [sp, #8]
 801d15a:	f04f 0b00 	mov.w	fp, #0
 801d15e:	e758      	b.n	801d012 <_ZN8touchgfx7Outline10renderLineEiiii+0x106>
 801d160:	f104 0314 	add.w	r3, r4, #20
 801d164:	cb03      	ldmia	r3!, {r0, r1}
 801d166:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801d16a:	f8c8 0000 	str.w	r0, [r8]
 801d16e:	f8c8 1004 	str.w	r1, [r8, #4]
 801d172:	6923      	ldr	r3, [r4, #16]
 801d174:	3308      	adds	r3, #8
 801d176:	6123      	str	r3, [r4, #16]
 801d178:	68a3      	ldr	r3, [r4, #8]
 801d17a:	3301      	adds	r3, #1
 801d17c:	60a3      	str	r3, [r4, #8]
 801d17e:	e77b      	b.n	801d078 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801d180:	f104 0814 	add.w	r8, r4, #20
 801d184:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801d188:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801d18c:	f8c9 0000 	str.w	r0, [r9]
 801d190:	f8c9 1004 	str.w	r1, [r9, #4]
 801d194:	6921      	ldr	r1, [r4, #16]
 801d196:	3108      	adds	r1, #8
 801d198:	6121      	str	r1, [r4, #16]
 801d19a:	68a1      	ldr	r1, [r4, #8]
 801d19c:	3101      	adds	r1, #1
 801d19e:	60a1      	str	r1, [r4, #8]
 801d1a0:	e7bc      	b.n	801d11c <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801d1a2:	1a83      	subs	r3, r0, r2
 801d1a4:	9301      	str	r3, [sp, #4]
 801d1a6:	f1ba 0f00 	cmp.w	sl, #0
 801d1aa:	f040 8096 	bne.w	801d2da <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801d1ae:	9a01      	ldr	r2, [sp, #4]
 801d1b0:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 801d1b4:	2a00      	cmp	r2, #0
 801d1b6:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801d1ba:	8b62      	ldrh	r2, [r4, #26]
 801d1bc:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 801d1c0:	bfa8      	it	ge
 801d1c2:	f04f 0a20 	movge.w	sl, #32
 801d1c6:	8b21      	ldrh	r1, [r4, #24]
 801d1c8:	bfb4      	ite	lt
 801d1ca:	f04f 38ff 	movlt.w	r8, #4294967295
 801d1ce:	f04f 0801 	movge.w	r8, #1
 801d1d2:	ebaa 0e0e 	sub.w	lr, sl, lr
 801d1d6:	4471      	add	r1, lr
 801d1d8:	fb0e 2e03 	mla	lr, lr, r3, r2
 801d1dc:	eb08 0206 	add.w	r2, r8, r6
 801d1e0:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801d1e4:	eb05 4702 	add.w	r7, r5, r2, lsl #16
 801d1e8:	eb06 4600 	add.w	r6, r6, r0, lsl #16
 801d1ec:	b209      	sxth	r1, r1
 801d1ee:	fa0f fe8e 	sxth.w	lr, lr
 801d1f2:	42b7      	cmp	r7, r6
 801d1f4:	8321      	strh	r1, [r4, #24]
 801d1f6:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801d1fa:	d013      	beq.n	801d224 <_ZN8touchgfx7Outline10renderLineEiiii+0x318>
 801d1fc:	ea51 010e 	orrs.w	r1, r1, lr
 801d200:	d00b      	beq.n	801d21a <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801d202:	2800      	cmp	r0, #0
 801d204:	db09      	blt.n	801d21a <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801d206:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d208:	4281      	cmp	r1, r0
 801d20a:	dd06      	ble.n	801d21a <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801d20c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d210:	4288      	cmp	r0, r1
 801d212:	d339      	bcc.n	801d288 <_ZN8touchgfx7Outline10renderLineEiiii+0x37c>
 801d214:	2101      	movs	r1, #1
 801d216:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801d21a:	2100      	movs	r1, #0
 801d21c:	82a5      	strh	r5, [r4, #20]
 801d21e:	82e2      	strh	r2, [r4, #22]
 801d220:	8321      	strh	r1, [r4, #24]
 801d222:	8361      	strh	r1, [r4, #26]
 801d224:	f1aa 0610 	sub.w	r6, sl, #16
 801d228:	0076      	lsls	r6, r6, #1
 801d22a:	fb06 f703 	mul.w	r7, r6, r3
 801d22e:	b23f      	sxth	r7, r7
 801d230:	b236      	sxth	r6, r6
 801d232:	ea46 0107 	orr.w	r1, r6, r7
 801d236:	9100      	str	r1, [sp, #0]
 801d238:	f04f 0e00 	mov.w	lr, #0
 801d23c:	f04f 0b01 	mov.w	fp, #1
 801d240:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d242:	428a      	cmp	r2, r1
 801d244:	d03e      	beq.n	801d2c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3b8>
 801d246:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 801d24a:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801d24e:	8326      	strh	r6, [r4, #24]
 801d250:	4442      	add	r2, r8
 801d252:	eb05 4c02 	add.w	ip, r5, r2, lsl #16
 801d256:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 801d25a:	4584      	cmp	ip, r0
 801d25c:	8367      	strh	r7, [r4, #26]
 801d25e:	d0ef      	beq.n	801d240 <_ZN8touchgfx7Outline10renderLineEiiii+0x334>
 801d260:	9800      	ldr	r0, [sp, #0]
 801d262:	b150      	cbz	r0, 801d27a <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801d264:	2900      	cmp	r1, #0
 801d266:	db08      	blt.n	801d27a <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801d268:	6c20      	ldr	r0, [r4, #64]	; 0x40
 801d26a:	4288      	cmp	r0, r1
 801d26c:	dd05      	ble.n	801d27a <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801d26e:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d272:	4288      	cmp	r0, r1
 801d274:	d315      	bcc.n	801d2a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x396>
 801d276:	f884 b044 	strb.w	fp, [r4, #68]	; 0x44
 801d27a:	82a5      	strh	r5, [r4, #20]
 801d27c:	82e2      	strh	r2, [r4, #22]
 801d27e:	f8a4 e018 	strh.w	lr, [r4, #24]
 801d282:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801d286:	e7db      	b.n	801d240 <_ZN8touchgfx7Outline10renderLineEiiii+0x334>
 801d288:	f104 0614 	add.w	r6, r4, #20
 801d28c:	ce03      	ldmia	r6!, {r0, r1}
 801d28e:	6927      	ldr	r7, [r4, #16]
 801d290:	6038      	str	r0, [r7, #0]
 801d292:	6079      	str	r1, [r7, #4]
 801d294:	6921      	ldr	r1, [r4, #16]
 801d296:	3108      	adds	r1, #8
 801d298:	6121      	str	r1, [r4, #16]
 801d29a:	68a1      	ldr	r1, [r4, #8]
 801d29c:	3101      	adds	r1, #1
 801d29e:	60a1      	str	r1, [r4, #8]
 801d2a0:	e7bb      	b.n	801d21a <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801d2a2:	f104 0c14 	add.w	ip, r4, #20
 801d2a6:	e8bc 0003 	ldmia.w	ip!, {r0, r1}
 801d2aa:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801d2ae:	f8c9 0000 	str.w	r0, [r9]
 801d2b2:	f8c9 1004 	str.w	r1, [r9, #4]
 801d2b6:	6921      	ldr	r1, [r4, #16]
 801d2b8:	3108      	adds	r1, #8
 801d2ba:	6121      	str	r1, [r4, #16]
 801d2bc:	68a1      	ldr	r1, [r4, #8]
 801d2be:	3101      	adds	r1, #1
 801d2c0:	60a1      	str	r1, [r4, #8]
 801d2c2:	e7da      	b.n	801d27a <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801d2c4:	9a03      	ldr	r2, [sp, #12]
 801d2c6:	8b61      	ldrh	r1, [r4, #26]
 801d2c8:	f1a2 0c20 	sub.w	ip, r2, #32
 801d2cc:	8b22      	ldrh	r2, [r4, #24]
 801d2ce:	44d4      	add	ip, sl
 801d2d0:	4462      	add	r2, ip
 801d2d2:	8322      	strh	r2, [r4, #24]
 801d2d4:	fb0c 1303 	mla	r3, ip, r3, r1
 801d2d8:	e737      	b.n	801d14a <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 801d2da:	9b01      	ldr	r3, [sp, #4]
 801d2dc:	2b00      	cmp	r3, #0
 801d2de:	db3f      	blt.n	801d360 <_ZN8touchgfx7Outline10renderLineEiiii+0x454>
 801d2e0:	2201      	movs	r2, #1
 801d2e2:	f1ce 0320 	rsb	r3, lr, #32
 801d2e6:	920b      	str	r2, [sp, #44]	; 0x2c
 801d2e8:	fb0a f303 	mul.w	r3, sl, r3
 801d2ec:	2220      	movs	r2, #32
 801d2ee:	9202      	str	r2, [sp, #8]
 801d2f0:	9a01      	ldr	r2, [sp, #4]
 801d2f2:	fb93 f7f2 	sdiv	r7, r3, r2
 801d2f6:	fb02 3317 	mls	r3, r2, r7, r3
 801d2fa:	2b00      	cmp	r3, #0
 801d2fc:	bfb8      	it	lt
 801d2fe:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801d302:	9308      	str	r3, [sp, #32]
 801d304:	eb07 0b01 	add.w	fp, r7, r1
 801d308:	bfbc      	itt	lt
 801d30a:	189b      	addlt	r3, r3, r2
 801d30c:	9308      	strlt	r3, [sp, #32]
 801d30e:	ea4f 136b 	mov.w	r3, fp, asr #5
 801d312:	9304      	str	r3, [sp, #16]
 801d314:	9b02      	ldr	r3, [sp, #8]
 801d316:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801d31a:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801d31e:	4573      	cmp	r3, lr
 801d320:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801d324:	d133      	bne.n	801d38e <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801d326:	9b04      	ldr	r3, [sp, #16]
 801d328:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 801d32c:	454b      	cmp	r3, r9
 801d32e:	d045      	beq.n	801d3bc <_ZN8touchgfx7Outline10renderLineEiiii+0x4b0>
 801d330:	8b62      	ldrh	r2, [r4, #26]
 801d332:	8b23      	ldrh	r3, [r4, #24]
 801d334:	4313      	orrs	r3, r2
 801d336:	d00c      	beq.n	801d352 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801d338:	f1b8 0f00 	cmp.w	r8, #0
 801d33c:	db09      	blt.n	801d352 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801d33e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d340:	4543      	cmp	r3, r8
 801d342:	dd06      	ble.n	801d352 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801d344:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801d348:	429a      	cmp	r2, r3
 801d34a:	d313      	bcc.n	801d374 <_ZN8touchgfx7Outline10renderLineEiiii+0x468>
 801d34c:	2301      	movs	r3, #1
 801d34e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d352:	9b04      	ldr	r3, [sp, #16]
 801d354:	82a3      	strh	r3, [r4, #20]
 801d356:	2300      	movs	r3, #0
 801d358:	82e6      	strh	r6, [r4, #22]
 801d35a:	8323      	strh	r3, [r4, #24]
 801d35c:	8363      	strh	r3, [r4, #26]
 801d35e:	e02d      	b.n	801d3bc <_ZN8touchgfx7Outline10renderLineEiiii+0x4b0>
 801d360:	9a01      	ldr	r2, [sp, #4]
 801d362:	4252      	negs	r2, r2
 801d364:	9201      	str	r2, [sp, #4]
 801d366:	f04f 32ff 	mov.w	r2, #4294967295
 801d36a:	920b      	str	r2, [sp, #44]	; 0x2c
 801d36c:	fb0a f30e 	mul.w	r3, sl, lr
 801d370:	2200      	movs	r2, #0
 801d372:	e7bc      	b.n	801d2ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3e2>
 801d374:	f104 0314 	add.w	r3, r4, #20
 801d378:	cb03      	ldmia	r3!, {r0, r1}
 801d37a:	6922      	ldr	r2, [r4, #16]
 801d37c:	6010      	str	r0, [r2, #0]
 801d37e:	6051      	str	r1, [r2, #4]
 801d380:	6923      	ldr	r3, [r4, #16]
 801d382:	3308      	adds	r3, #8
 801d384:	6123      	str	r3, [r4, #16]
 801d386:	68a3      	ldr	r3, [r4, #8]
 801d388:	3301      	adds	r3, #1
 801d38a:	60a3      	str	r3, [r4, #8]
 801d38c:	e7e1      	b.n	801d352 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801d38e:	f00b 031f 	and.w	r3, fp, #31
 801d392:	9309      	str	r3, [sp, #36]	; 0x24
 801d394:	9b02      	ldr	r3, [sp, #8]
 801d396:	8b20      	ldrh	r0, [r4, #24]
 801d398:	eba3 020e 	sub.w	r2, r3, lr
 801d39c:	8b63      	ldrh	r3, [r4, #26]
 801d39e:	9300      	str	r3, [sp, #0]
 801d3a0:	9b04      	ldr	r3, [sp, #16]
 801d3a2:	42ab      	cmp	r3, r5
 801d3a4:	f001 011f 	and.w	r1, r1, #31
 801d3a8:	f040 80ef 	bne.w	801d58a <_ZN8touchgfx7Outline10renderLineEiiii+0x67e>
 801d3ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d3ae:	4419      	add	r1, r3
 801d3b0:	9b00      	ldr	r3, [sp, #0]
 801d3b2:	4410      	add	r0, r2
 801d3b4:	fb02 3101 	mla	r1, r2, r1, r3
 801d3b8:	8320      	strh	r0, [r4, #24]
 801d3ba:	8361      	strh	r1, [r4, #26]
 801d3bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3be:	9904      	ldr	r1, [sp, #16]
 801d3c0:	4433      	add	r3, r6
 801d3c2:	9300      	str	r3, [sp, #0]
 801d3c4:	9a00      	ldr	r2, [sp, #0]
 801d3c6:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801d3ca:	eb01 4002 	add.w	r0, r1, r2, lsl #16
 801d3ce:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801d3d2:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801d3d6:	4288      	cmp	r0, r1
 801d3d8:	d018      	beq.n	801d40c <_ZN8touchgfx7Outline10renderLineEiiii+0x500>
 801d3da:	8b60      	ldrh	r0, [r4, #26]
 801d3dc:	8b21      	ldrh	r1, [r4, #24]
 801d3de:	ea50 0201 	orrs.w	r2, r0, r1
 801d3e2:	d00c      	beq.n	801d3fe <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801d3e4:	2b00      	cmp	r3, #0
 801d3e6:	db0a      	blt.n	801d3fe <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801d3e8:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d3ea:	4299      	cmp	r1, r3
 801d3ec:	dd07      	ble.n	801d3fe <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801d3ee:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801d3f2:	4299      	cmp	r1, r3
 801d3f4:	f0c0 8190 	bcc.w	801d718 <_ZN8touchgfx7Outline10renderLineEiiii+0x80c>
 801d3f8:	2301      	movs	r3, #1
 801d3fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d3fe:	9b04      	ldr	r3, [sp, #16]
 801d400:	82a3      	strh	r3, [r4, #20]
 801d402:	9b00      	ldr	r3, [sp, #0]
 801d404:	82e3      	strh	r3, [r4, #22]
 801d406:	2300      	movs	r3, #0
 801d408:	8323      	strh	r3, [r4, #24]
 801d40a:	8363      	strh	r3, [r4, #26]
 801d40c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d40e:	9a00      	ldr	r2, [sp, #0]
 801d410:	4293      	cmp	r3, r2
 801d412:	f000 808d 	beq.w	801d530 <_ZN8touchgfx7Outline10renderLineEiiii+0x624>
 801d416:	9801      	ldr	r0, [sp, #4]
 801d418:	9901      	ldr	r1, [sp, #4]
 801d41a:	ea4f 134a 	mov.w	r3, sl, lsl #5
 801d41e:	fb93 f1f1 	sdiv	r1, r3, r1
 801d422:	fb00 3311 	mls	r3, r0, r1, r3
 801d426:	2b00      	cmp	r3, #0
 801d428:	9106      	str	r1, [sp, #24]
 801d42a:	9307      	str	r3, [sp, #28]
 801d42c:	da04      	bge.n	801d438 <_ZN8touchgfx7Outline10renderLineEiiii+0x52c>
 801d42e:	1e4b      	subs	r3, r1, #1
 801d430:	9306      	str	r3, [sp, #24]
 801d432:	9b07      	ldr	r3, [sp, #28]
 801d434:	4403      	add	r3, r0
 801d436:	9307      	str	r3, [sp, #28]
 801d438:	9b08      	ldr	r3, [sp, #32]
 801d43a:	9901      	ldr	r1, [sp, #4]
 801d43c:	1a5b      	subs	r3, r3, r1
 801d43e:	9308      	str	r3, [sp, #32]
 801d440:	9b02      	ldr	r3, [sp, #8]
 801d442:	f1c3 0320 	rsb	r3, r3, #32
 801d446:	930a      	str	r3, [sp, #40]	; 0x28
 801d448:	980a      	ldr	r0, [sp, #40]	; 0x28
 801d44a:	9b02      	ldr	r3, [sp, #8]
 801d44c:	1a1b      	subs	r3, r3, r0
 801d44e:	4659      	mov	r1, fp
 801d450:	9309      	str	r3, [sp, #36]	; 0x24
 801d452:	f04f 0c00 	mov.w	ip, #0
 801d456:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 801d45a:	181b      	adds	r3, r3, r0
 801d45c:	bf58      	it	pl
 801d45e:	9801      	ldrpl	r0, [sp, #4]
 801d460:	9308      	str	r3, [sp, #32]
 801d462:	bf5d      	ittte	pl
 801d464:	1a1b      	subpl	r3, r3, r0
 801d466:	9308      	strpl	r3, [sp, #32]
 801d468:	9b06      	ldrpl	r3, [sp, #24]
 801d46a:	9d06      	ldrmi	r5, [sp, #24]
 801d46c:	9802      	ldr	r0, [sp, #8]
 801d46e:	f9b4 e016 	ldrsh.w	lr, [r4, #22]
 801d472:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 801d476:	bf58      	it	pl
 801d478:	1c5d      	addpl	r5, r3, #1
 801d47a:	44ab      	add	fp, r5
 801d47c:	ea4f 136b 	mov.w	r3, fp, asr #5
 801d480:	9304      	str	r3, [sp, #16]
 801d482:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d484:	4283      	cmp	r3, r0
 801d486:	eb08 480e 	add.w	r8, r8, lr, lsl #16
 801d48a:	f040 815f 	bne.w	801d74c <_ZN8touchgfx7Outline10renderLineEiiii+0x840>
 801d48e:	9b04      	ldr	r3, [sp, #16]
 801d490:	9a00      	ldr	r2, [sp, #0]
 801d492:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 801d496:	4543      	cmp	r3, r8
 801d498:	d01a      	beq.n	801d4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 801d49a:	8b61      	ldrh	r1, [r4, #26]
 801d49c:	8b23      	ldrh	r3, [r4, #24]
 801d49e:	430b      	orrs	r3, r1
 801d4a0:	d00e      	beq.n	801d4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801d4a2:	f1be 0f00 	cmp.w	lr, #0
 801d4a6:	db0b      	blt.n	801d4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801d4a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d4aa:	4573      	cmp	r3, lr
 801d4ac:	dd08      	ble.n	801d4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801d4ae:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801d4b2:	4299      	cmp	r1, r3
 801d4b4:	f0c0 813d 	bcc.w	801d732 <_ZN8touchgfx7Outline10renderLineEiiii+0x826>
 801d4b8:	f04f 0301 	mov.w	r3, #1
 801d4bc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d4c0:	9b04      	ldr	r3, [sp, #16]
 801d4c2:	82a3      	strh	r3, [r4, #20]
 801d4c4:	9b00      	ldr	r3, [sp, #0]
 801d4c6:	82e3      	strh	r3, [r4, #22]
 801d4c8:	f8a4 c018 	strh.w	ip, [r4, #24]
 801d4cc:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801d4d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4d2:	9a00      	ldr	r2, [sp, #0]
 801d4d4:	441a      	add	r2, r3
 801d4d6:	9200      	str	r2, [sp, #0]
 801d4d8:	9900      	ldr	r1, [sp, #0]
 801d4da:	9a04      	ldr	r2, [sp, #16]
 801d4dc:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801d4e0:	eb02 4001 	add.w	r0, r2, r1, lsl #16
 801d4e4:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801d4e8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801d4ec:	4288      	cmp	r0, r1
 801d4ee:	d01a      	beq.n	801d526 <_ZN8touchgfx7Outline10renderLineEiiii+0x61a>
 801d4f0:	8b60      	ldrh	r0, [r4, #26]
 801d4f2:	8b21      	ldrh	r1, [r4, #24]
 801d4f4:	ea50 0201 	orrs.w	r2, r0, r1
 801d4f8:	d00d      	beq.n	801d516 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801d4fa:	2b00      	cmp	r3, #0
 801d4fc:	db0b      	blt.n	801d516 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801d4fe:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d500:	4299      	cmp	r1, r3
 801d502:	dd08      	ble.n	801d516 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801d504:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801d508:	4299      	cmp	r1, r3
 801d50a:	f0c0 8202 	bcc.w	801d912 <_ZN8touchgfx7Outline10renderLineEiiii+0xa06>
 801d50e:	f04f 0301 	mov.w	r3, #1
 801d512:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d516:	9b04      	ldr	r3, [sp, #16]
 801d518:	82a3      	strh	r3, [r4, #20]
 801d51a:	9b00      	ldr	r3, [sp, #0]
 801d51c:	82e3      	strh	r3, [r4, #22]
 801d51e:	f8a4 c018 	strh.w	ip, [r4, #24]
 801d522:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801d526:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d528:	9a00      	ldr	r2, [sp, #0]
 801d52a:	4293      	cmp	r3, r2
 801d52c:	4659      	mov	r1, fp
 801d52e:	d192      	bne.n	801d456 <_ZN8touchgfx7Outline10renderLineEiiii+0x54a>
 801d530:	9b02      	ldr	r3, [sp, #8]
 801d532:	f1c3 0c20 	rsb	ip, r3, #32
 801d536:	9b05      	ldr	r3, [sp, #20]
 801d538:	ea4f 1e63 	mov.w	lr, r3, asr #5
 801d53c:	9b03      	ldr	r3, [sp, #12]
 801d53e:	459c      	cmp	ip, r3
 801d540:	f040 8201 	bne.w	801d946 <_ZN8touchgfx7Outline10renderLineEiiii+0xa3a>
 801d544:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801d548:	9a00      	ldr	r2, [sp, #0]
 801d54a:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801d54e:	eb0e 4002 	add.w	r0, lr, r2, lsl #16
 801d552:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801d556:	4288      	cmp	r0, r1
 801d558:	f43f ad4d 	beq.w	801cff6 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801d55c:	8b60      	ldrh	r0, [r4, #26]
 801d55e:	8b21      	ldrh	r1, [r4, #24]
 801d560:	ea50 0201 	orrs.w	r2, r0, r1
 801d564:	d00c      	beq.n	801d580 <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801d566:	2b00      	cmp	r3, #0
 801d568:	db0a      	blt.n	801d580 <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801d56a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d56c:	4299      	cmp	r1, r3
 801d56e:	dd07      	ble.n	801d580 <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801d570:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801d574:	4299      	cmp	r1, r3
 801d576:	f0c0 81d9 	bcc.w	801d92c <_ZN8touchgfx7Outline10renderLineEiiii+0xa20>
 801d57a:	2301      	movs	r3, #1
 801d57c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d580:	9b00      	ldr	r3, [sp, #0]
 801d582:	f8a4 e014 	strh.w	lr, [r4, #20]
 801d586:	82e3      	strh	r3, [r4, #22]
 801d588:	e510      	b.n	801cfac <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 801d58a:	2f00      	cmp	r7, #0
 801d58c:	f2c0 809c 	blt.w	801d6c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 801d590:	2301      	movs	r3, #1
 801d592:	f1c1 0c20 	rsb	ip, r1, #32
 801d596:	9307      	str	r3, [sp, #28]
 801d598:	fb02 f20c 	mul.w	r2, r2, ip
 801d59c:	2320      	movs	r3, #32
 801d59e:	9306      	str	r3, [sp, #24]
 801d5a0:	9b06      	ldr	r3, [sp, #24]
 801d5a2:	fb92 fcf7 	sdiv	ip, r2, r7
 801d5a6:	fb07 221c 	mls	r2, r7, ip, r2
 801d5aa:	2a00      	cmp	r2, #0
 801d5ac:	4419      	add	r1, r3
 801d5ae:	9b00      	ldr	r3, [sp, #0]
 801d5b0:	bfb8      	it	lt
 801d5b2:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801d5b6:	fb0c 3101 	mla	r1, ip, r1, r3
 801d5ba:	9b07      	ldr	r3, [sp, #28]
 801d5bc:	441d      	add	r5, r3
 801d5be:	ea4f 4306 	mov.w	r3, r6, lsl #16
 801d5c2:	4460      	add	r0, ip
 801d5c4:	930a      	str	r3, [sp, #40]	; 0x28
 801d5c6:	442b      	add	r3, r5
 801d5c8:	bfb8      	it	lt
 801d5ca:	19d2      	addlt	r2, r2, r7
 801d5cc:	b200      	sxth	r0, r0
 801d5ce:	b209      	sxth	r1, r1
 801d5d0:	454b      	cmp	r3, r9
 801d5d2:	8320      	strh	r0, [r4, #24]
 801d5d4:	8361      	strh	r1, [r4, #26]
 801d5d6:	d014      	beq.n	801d602 <_ZN8touchgfx7Outline10renderLineEiiii+0x6f6>
 801d5d8:	ea50 0301 	orrs.w	r3, r0, r1
 801d5dc:	d00c      	beq.n	801d5f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801d5de:	f1b8 0f00 	cmp.w	r8, #0
 801d5e2:	db09      	blt.n	801d5f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801d5e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d5e6:	4543      	cmp	r3, r8
 801d5e8:	dd06      	ble.n	801d5f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801d5ea:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801d5ee:	4299      	cmp	r1, r3
 801d5f0:	d371      	bcc.n	801d6d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ca>
 801d5f2:	2301      	movs	r3, #1
 801d5f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801d5f8:	2300      	movs	r3, #0
 801d5fa:	82a5      	strh	r5, [r4, #20]
 801d5fc:	82e6      	strh	r6, [r4, #22]
 801d5fe:	8323      	strh	r3, [r4, #24]
 801d600:	8363      	strh	r3, [r4, #26]
 801d602:	9904      	ldr	r1, [sp, #16]
 801d604:	42a9      	cmp	r1, r5
 801d606:	eb0e 030c 	add.w	r3, lr, ip
 801d60a:	d050      	beq.n	801d6ae <_ZN8touchgfx7Outline10renderLineEiiii+0x7a2>
 801d60c:	9902      	ldr	r1, [sp, #8]
 801d60e:	1ac9      	subs	r1, r1, r3
 801d610:	448c      	add	ip, r1
 801d612:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 801d616:	fb9c fef7 	sdiv	lr, ip, r7
 801d61a:	fb07 cc1e 	mls	ip, r7, lr, ip
 801d61e:	f1bc 0f00 	cmp.w	ip, #0
 801d622:	bfb8      	it	lt
 801d624:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801d628:	eba2 0207 	sub.w	r2, r2, r7
 801d62c:	f10e 0101 	add.w	r1, lr, #1
 801d630:	bfb8      	it	lt
 801d632:	44bc      	addlt	ip, r7
 801d634:	9200      	str	r2, [sp, #0]
 801d636:	910d      	str	r1, [sp, #52]	; 0x34
 801d638:	9a00      	ldr	r2, [sp, #0]
 801d63a:	8b20      	ldrh	r0, [r4, #24]
 801d63c:	8b61      	ldrh	r1, [r4, #26]
 801d63e:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801d642:	eb12 020c 	adds.w	r2, r2, ip
 801d646:	9200      	str	r2, [sp, #0]
 801d648:	bf5e      	ittt	pl
 801d64a:	1bd2      	subpl	r2, r2, r7
 801d64c:	f8dd 8034 	ldrpl.w	r8, [sp, #52]	; 0x34
 801d650:	9200      	strpl	r2, [sp, #0]
 801d652:	9a07      	ldr	r2, [sp, #28]
 801d654:	bf48      	it	mi
 801d656:	46f0      	movmi	r8, lr
 801d658:	4440      	add	r0, r8
 801d65a:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 801d65e:	4415      	add	r5, r2
 801d660:	4443      	add	r3, r8
 801d662:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d664:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801d668:	442a      	add	r2, r5
 801d66a:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801d66e:	b200      	sxth	r0, r0
 801d670:	b209      	sxth	r1, r1
 801d672:	454a      	cmp	r2, r9
 801d674:	8320      	strh	r0, [r4, #24]
 801d676:	8361      	strh	r1, [r4, #26]
 801d678:	d016      	beq.n	801d6a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x79c>
 801d67a:	ea50 0201 	orrs.w	r2, r0, r1
 801d67e:	d00d      	beq.n	801d69c <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801d680:	f1b8 0f00 	cmp.w	r8, #0
 801d684:	db0a      	blt.n	801d69c <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801d686:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d688:	4541      	cmp	r1, r8
 801d68a:	dd07      	ble.n	801d69c <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801d68c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d690:	4288      	cmp	r0, r1
 801d692:	d330      	bcc.n	801d6f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 801d694:	f04f 0201 	mov.w	r2, #1
 801d698:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801d69c:	f04f 0200 	mov.w	r2, #0
 801d6a0:	82a5      	strh	r5, [r4, #20]
 801d6a2:	82e6      	strh	r6, [r4, #22]
 801d6a4:	8322      	strh	r2, [r4, #24]
 801d6a6:	8362      	strh	r2, [r4, #26]
 801d6a8:	9904      	ldr	r1, [sp, #16]
 801d6aa:	42a9      	cmp	r1, r5
 801d6ac:	d1c4      	bne.n	801d638 <_ZN8touchgfx7Outline10renderLineEiiii+0x72c>
 801d6ae:	9a02      	ldr	r2, [sp, #8]
 801d6b0:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d6b2:	1ad3      	subs	r3, r2, r3
 801d6b4:	8b22      	ldrh	r2, [r4, #24]
 801d6b6:	441a      	add	r2, r3
 801d6b8:	8322      	strh	r2, [r4, #24]
 801d6ba:	9a06      	ldr	r2, [sp, #24]
 801d6bc:	3120      	adds	r1, #32
 801d6be:	1a89      	subs	r1, r1, r2
 801d6c0:	8b62      	ldrh	r2, [r4, #26]
 801d6c2:	fb03 2301 	mla	r3, r3, r1, r2
 801d6c6:	e649      	b.n	801d35c <_ZN8touchgfx7Outline10renderLineEiiii+0x450>
 801d6c8:	f04f 33ff 	mov.w	r3, #4294967295
 801d6cc:	9307      	str	r3, [sp, #28]
 801d6ce:	434a      	muls	r2, r1
 801d6d0:	427f      	negs	r7, r7
 801d6d2:	2300      	movs	r3, #0
 801d6d4:	e763      	b.n	801d59e <_ZN8touchgfx7Outline10renderLineEiiii+0x692>
 801d6d6:	f104 0314 	add.w	r3, r4, #20
 801d6da:	cb03      	ldmia	r3!, {r0, r1}
 801d6dc:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801d6e0:	f8c8 0000 	str.w	r0, [r8]
 801d6e4:	f8c8 1004 	str.w	r1, [r8, #4]
 801d6e8:	6923      	ldr	r3, [r4, #16]
 801d6ea:	3308      	adds	r3, #8
 801d6ec:	6123      	str	r3, [r4, #16]
 801d6ee:	68a3      	ldr	r3, [r4, #8]
 801d6f0:	3301      	adds	r3, #1
 801d6f2:	60a3      	str	r3, [r4, #8]
 801d6f4:	e780      	b.n	801d5f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801d6f6:	f104 0814 	add.w	r8, r4, #20
 801d6fa:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801d6fe:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801d702:	f8c9 0000 	str.w	r0, [r9]
 801d706:	f8c9 1004 	str.w	r1, [r9, #4]
 801d70a:	6921      	ldr	r1, [r4, #16]
 801d70c:	3108      	adds	r1, #8
 801d70e:	6121      	str	r1, [r4, #16]
 801d710:	68a1      	ldr	r1, [r4, #8]
 801d712:	3101      	adds	r1, #1
 801d714:	60a1      	str	r1, [r4, #8]
 801d716:	e7c1      	b.n	801d69c <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801d718:	f104 0314 	add.w	r3, r4, #20
 801d71c:	cb03      	ldmia	r3!, {r0, r1}
 801d71e:	6925      	ldr	r5, [r4, #16]
 801d720:	6028      	str	r0, [r5, #0]
 801d722:	6069      	str	r1, [r5, #4]
 801d724:	6923      	ldr	r3, [r4, #16]
 801d726:	3308      	adds	r3, #8
 801d728:	6123      	str	r3, [r4, #16]
 801d72a:	68a3      	ldr	r3, [r4, #8]
 801d72c:	3301      	adds	r3, #1
 801d72e:	60a3      	str	r3, [r4, #8]
 801d730:	e665      	b.n	801d3fe <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801d732:	f104 0314 	add.w	r3, r4, #20
 801d736:	cb03      	ldmia	r3!, {r0, r1}
 801d738:	6925      	ldr	r5, [r4, #16]
 801d73a:	6028      	str	r0, [r5, #0]
 801d73c:	6069      	str	r1, [r5, #4]
 801d73e:	6923      	ldr	r3, [r4, #16]
 801d740:	3308      	adds	r3, #8
 801d742:	6123      	str	r3, [r4, #16]
 801d744:	68a3      	ldr	r3, [r4, #8]
 801d746:	3301      	adds	r3, #1
 801d748:	60a3      	str	r3, [r4, #8]
 801d74a:	e6b9      	b.n	801d4c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801d74c:	f00b 031f 	and.w	r3, fp, #31
 801d750:	930f      	str	r3, [sp, #60]	; 0x3c
 801d752:	9b04      	ldr	r3, [sp, #16]
 801d754:	8b20      	ldrh	r0, [r4, #24]
 801d756:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 801d75a:	114f      	asrs	r7, r1, #5
 801d75c:	429f      	cmp	r7, r3
 801d75e:	f001 011f 	and.w	r1, r1, #31
 801d762:	d10a      	bne.n	801d77a <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 801d764:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d766:	4418      	add	r0, r3
 801d768:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d76a:	8320      	strh	r0, [r4, #24]
 801d76c:	4419      	add	r1, r3
 801d76e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d770:	fb03 9901 	mla	r9, r3, r1, r9
 801d774:	f8a4 901a 	strh.w	r9, [r4, #26]
 801d778:	e6aa      	b.n	801d4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 801d77a:	2d00      	cmp	r5, #0
 801d77c:	f2c0 809f 	blt.w	801d8be <_ZN8touchgfx7Outline10renderLineEiiii+0x9b2>
 801d780:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801d782:	f1c1 0320 	rsb	r3, r1, #32
 801d786:	4373      	muls	r3, r6
 801d788:	2601      	movs	r6, #1
 801d78a:	960e      	str	r6, [sp, #56]	; 0x38
 801d78c:	2620      	movs	r6, #32
 801d78e:	960d      	str	r6, [sp, #52]	; 0x34
 801d790:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d792:	fb93 f6f5 	sdiv	r6, r3, r5
 801d796:	4411      	add	r1, r2
 801d798:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d79a:	fb05 3316 	mls	r3, r5, r6, r3
 801d79e:	4417      	add	r7, r2
 801d7a0:	9a00      	ldr	r2, [sp, #0]
 801d7a2:	2b00      	cmp	r3, #0
 801d7a4:	bfb8      	it	lt
 801d7a6:	f106 36ff 	addlt.w	r6, r6, #4294967295
 801d7aa:	ea4f 4202 	mov.w	r2, r2, lsl #16
 801d7ae:	fb06 9101 	mla	r1, r6, r1, r9
 801d7b2:	4430      	add	r0, r6
 801d7b4:	eb07 0902 	add.w	r9, r7, r2
 801d7b8:	bfb8      	it	lt
 801d7ba:	195b      	addlt	r3, r3, r5
 801d7bc:	b200      	sxth	r0, r0
 801d7be:	b209      	sxth	r1, r1
 801d7c0:	45c1      	cmp	r9, r8
 801d7c2:	8320      	strh	r0, [r4, #24]
 801d7c4:	8361      	strh	r1, [r4, #26]
 801d7c6:	9210      	str	r2, [sp, #64]	; 0x40
 801d7c8:	d017      	beq.n	801d7fa <_ZN8touchgfx7Outline10renderLineEiiii+0x8ee>
 801d7ca:	ea50 0201 	orrs.w	r2, r0, r1
 801d7ce:	d00d      	beq.n	801d7ec <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801d7d0:	f1be 0f00 	cmp.w	lr, #0
 801d7d4:	db0a      	blt.n	801d7ec <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801d7d6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d7d8:	4571      	cmp	r1, lr
 801d7da:	dd07      	ble.n	801d7ec <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801d7dc:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d7e0:	4288      	cmp	r0, r1
 801d7e2:	d374      	bcc.n	801d8ce <_ZN8touchgfx7Outline10renderLineEiiii+0x9c2>
 801d7e4:	f04f 0201 	mov.w	r2, #1
 801d7e8:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801d7ec:	9a00      	ldr	r2, [sp, #0]
 801d7ee:	82a7      	strh	r7, [r4, #20]
 801d7f0:	82e2      	strh	r2, [r4, #22]
 801d7f2:	f8a4 c018 	strh.w	ip, [r4, #24]
 801d7f6:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801d7fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d7fc:	eb02 0e06 	add.w	lr, r2, r6
 801d800:	9a04      	ldr	r2, [sp, #16]
 801d802:	42ba      	cmp	r2, r7
 801d804:	d04b      	beq.n	801d89e <_ZN8touchgfx7Outline10renderLineEiiii+0x992>
 801d806:	9a02      	ldr	r2, [sp, #8]
 801d808:	eba2 010e 	sub.w	r1, r2, lr
 801d80c:	440e      	add	r6, r1
 801d80e:	0176      	lsls	r6, r6, #5
 801d810:	fb96 f8f5 	sdiv	r8, r6, r5
 801d814:	fb05 6618 	mls	r6, r5, r8, r6
 801d818:	2e00      	cmp	r6, #0
 801d81a:	bfb8      	it	lt
 801d81c:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801d820:	f108 0201 	add.w	r2, r8, #1
 801d824:	bfb8      	it	lt
 801d826:	1976      	addlt	r6, r6, r5
 801d828:	1b5b      	subs	r3, r3, r5
 801d82a:	9211      	str	r2, [sp, #68]	; 0x44
 801d82c:	199b      	adds	r3, r3, r6
 801d82e:	bf58      	it	pl
 801d830:	f8dd 9044 	ldrpl.w	r9, [sp, #68]	; 0x44
 801d834:	8b20      	ldrh	r0, [r4, #24]
 801d836:	8b61      	ldrh	r1, [r4, #26]
 801d838:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d83a:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 801d83e:	bf48      	it	mi
 801d840:	46c1      	movmi	r9, r8
 801d842:	4448      	add	r0, r9
 801d844:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 801d848:	4417      	add	r7, r2
 801d84a:	44ce      	add	lr, r9
 801d84c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d84e:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 801d852:	443a      	add	r2, r7
 801d854:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 801d858:	bf58      	it	pl
 801d85a:	1b5b      	subpl	r3, r3, r5
 801d85c:	b200      	sxth	r0, r0
 801d85e:	b209      	sxth	r1, r1
 801d860:	4552      	cmp	r2, sl
 801d862:	8320      	strh	r0, [r4, #24]
 801d864:	8361      	strh	r1, [r4, #26]
 801d866:	d017      	beq.n	801d898 <_ZN8touchgfx7Outline10renderLineEiiii+0x98c>
 801d868:	ea50 0201 	orrs.w	r2, r0, r1
 801d86c:	d00d      	beq.n	801d88a <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801d86e:	f1b9 0f00 	cmp.w	r9, #0
 801d872:	db0a      	blt.n	801d88a <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801d874:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d876:	4549      	cmp	r1, r9
 801d878:	dd07      	ble.n	801d88a <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801d87a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d87e:	4288      	cmp	r0, r1
 801d880:	d336      	bcc.n	801d8f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x9e4>
 801d882:	f04f 0201 	mov.w	r2, #1
 801d886:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801d88a:	9a00      	ldr	r2, [sp, #0]
 801d88c:	82a7      	strh	r7, [r4, #20]
 801d88e:	82e2      	strh	r2, [r4, #22]
 801d890:	f8a4 c018 	strh.w	ip, [r4, #24]
 801d894:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801d898:	9a04      	ldr	r2, [sp, #16]
 801d89a:	42ba      	cmp	r2, r7
 801d89c:	d1c6      	bne.n	801d82c <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 801d89e:	9b02      	ldr	r3, [sp, #8]
 801d8a0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8a2:	eba3 0e0e 	sub.w	lr, r3, lr
 801d8a6:	8b23      	ldrh	r3, [r4, #24]
 801d8a8:	4473      	add	r3, lr
 801d8aa:	8323      	strh	r3, [r4, #24]
 801d8ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d8ae:	3120      	adds	r1, #32
 801d8b0:	1ac9      	subs	r1, r1, r3
 801d8b2:	8b63      	ldrh	r3, [r4, #26]
 801d8b4:	fb0e 3e01 	mla	lr, lr, r1, r3
 801d8b8:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801d8bc:	e608      	b.n	801d4d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 801d8be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8c0:	f04f 36ff 	mov.w	r6, #4294967295
 801d8c4:	960e      	str	r6, [sp, #56]	; 0x38
 801d8c6:	434b      	muls	r3, r1
 801d8c8:	426d      	negs	r5, r5
 801d8ca:	2600      	movs	r6, #0
 801d8cc:	e75f      	b.n	801d78e <_ZN8touchgfx7Outline10renderLineEiiii+0x882>
 801d8ce:	f104 0e14 	add.w	lr, r4, #20
 801d8d2:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801d8d6:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801d8da:	f8c8 0000 	str.w	r0, [r8]
 801d8de:	f8c8 1004 	str.w	r1, [r8, #4]
 801d8e2:	6921      	ldr	r1, [r4, #16]
 801d8e4:	3108      	adds	r1, #8
 801d8e6:	6121      	str	r1, [r4, #16]
 801d8e8:	68a1      	ldr	r1, [r4, #8]
 801d8ea:	3101      	adds	r1, #1
 801d8ec:	60a1      	str	r1, [r4, #8]
 801d8ee:	e77d      	b.n	801d7ec <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801d8f0:	f104 0914 	add.w	r9, r4, #20
 801d8f4:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 801d8f8:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801d8fc:	f8ca 0000 	str.w	r0, [sl]
 801d900:	f8ca 1004 	str.w	r1, [sl, #4]
 801d904:	6921      	ldr	r1, [r4, #16]
 801d906:	3108      	adds	r1, #8
 801d908:	6121      	str	r1, [r4, #16]
 801d90a:	68a1      	ldr	r1, [r4, #8]
 801d90c:	3101      	adds	r1, #1
 801d90e:	60a1      	str	r1, [r4, #8]
 801d910:	e7bb      	b.n	801d88a <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801d912:	f104 0314 	add.w	r3, r4, #20
 801d916:	cb03      	ldmia	r3!, {r0, r1}
 801d918:	6925      	ldr	r5, [r4, #16]
 801d91a:	6028      	str	r0, [r5, #0]
 801d91c:	6069      	str	r1, [r5, #4]
 801d91e:	6923      	ldr	r3, [r4, #16]
 801d920:	3308      	adds	r3, #8
 801d922:	6123      	str	r3, [r4, #16]
 801d924:	68a3      	ldr	r3, [r4, #8]
 801d926:	3301      	adds	r3, #1
 801d928:	60a3      	str	r3, [r4, #8]
 801d92a:	e5f4      	b.n	801d516 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801d92c:	f104 0314 	add.w	r3, r4, #20
 801d930:	cb03      	ldmia	r3!, {r0, r1}
 801d932:	6925      	ldr	r5, [r4, #16]
 801d934:	6028      	str	r0, [r5, #0]
 801d936:	6069      	str	r1, [r5, #4]
 801d938:	6923      	ldr	r3, [r4, #16]
 801d93a:	3308      	adds	r3, #8
 801d93c:	6123      	str	r3, [r4, #16]
 801d93e:	68a3      	ldr	r3, [r4, #8]
 801d940:	3301      	adds	r3, #1
 801d942:	60a3      	str	r3, [r4, #8]
 801d944:	e61c      	b.n	801d580 <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801d946:	9b05      	ldr	r3, [sp, #20]
 801d948:	8b20      	ldrh	r0, [r4, #24]
 801d94a:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 801d94e:	f003 031f 	and.w	r3, r3, #31
 801d952:	ea4f 176b 	mov.w	r7, fp, asr #5
 801d956:	9302      	str	r3, [sp, #8]
 801d958:	9b03      	ldr	r3, [sp, #12]
 801d95a:	4577      	cmp	r7, lr
 801d95c:	f00b 081f 	and.w	r8, fp, #31
 801d960:	eba3 050c 	sub.w	r5, r3, ip
 801d964:	d108      	bne.n	801d978 <_ZN8touchgfx7Outline10renderLineEiiii+0xa6c>
 801d966:	9b02      	ldr	r3, [sp, #8]
 801d968:	4498      	add	r8, r3
 801d96a:	4428      	add	r0, r5
 801d96c:	fb05 9508 	mla	r5, r5, r8, r9
 801d970:	8320      	strh	r0, [r4, #24]
 801d972:	8365      	strh	r5, [r4, #26]
 801d974:	f7ff bb3f 	b.w	801cff6 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801d978:	9b05      	ldr	r3, [sp, #20]
 801d97a:	ebb3 030b 	subs.w	r3, r3, fp
 801d97e:	f100 809f 	bmi.w	801dac0 <_ZN8touchgfx7Outline10renderLineEiiii+0xbb4>
 801d982:	f1c8 0120 	rsb	r1, r8, #32
 801d986:	2201      	movs	r2, #1
 801d988:	434d      	muls	r5, r1
 801d98a:	9201      	str	r2, [sp, #4]
 801d98c:	f04f 0b20 	mov.w	fp, #32
 801d990:	fb95 f6f3 	sdiv	r6, r5, r3
 801d994:	fb03 5516 	mls	r5, r3, r6, r5
 801d998:	2d00      	cmp	r5, #0
 801d99a:	9a01      	ldr	r2, [sp, #4]
 801d99c:	bfb8      	it	lt
 801d99e:	f106 36ff 	addlt.w	r6, r6, #4294967295
 801d9a2:	44d8      	add	r8, fp
 801d9a4:	fb06 9808 	mla	r8, r6, r8, r9
 801d9a8:	4417      	add	r7, r2
 801d9aa:	9a00      	ldr	r2, [sp, #0]
 801d9ac:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801d9b0:	fa0f f188 	sxth.w	r1, r8
 801d9b4:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801d9b8:	8361      	strh	r1, [r4, #26]
 801d9ba:	ea4f 4202 	mov.w	r2, r2, lsl #16
 801d9be:	4430      	add	r0, r6
 801d9c0:	eb07 0a02 	add.w	sl, r7, r2
 801d9c4:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801d9c8:	bfb8      	it	lt
 801d9ca:	18ed      	addlt	r5, r5, r3
 801d9cc:	b200      	sxth	r0, r0
 801d9ce:	45ca      	cmp	sl, r9
 801d9d0:	8320      	strh	r0, [r4, #24]
 801d9d2:	9204      	str	r2, [sp, #16]
 801d9d4:	d015      	beq.n	801da02 <_ZN8touchgfx7Outline10renderLineEiiii+0xaf6>
 801d9d6:	ea50 0201 	orrs.w	r2, r0, r1
 801d9da:	d00c      	beq.n	801d9f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801d9dc:	f1b8 0f00 	cmp.w	r8, #0
 801d9e0:	db09      	blt.n	801d9f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801d9e2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801d9e4:	4541      	cmp	r1, r8
 801d9e6:	dd06      	ble.n	801d9f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801d9e8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801d9ec:	4288      	cmp	r0, r1
 801d9ee:	d370      	bcc.n	801dad2 <_ZN8touchgfx7Outline10renderLineEiiii+0xbc6>
 801d9f0:	2101      	movs	r1, #1
 801d9f2:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801d9f6:	2100      	movs	r1, #0
 801d9f8:	9a00      	ldr	r2, [sp, #0]
 801d9fa:	82a7      	strh	r7, [r4, #20]
 801d9fc:	82e2      	strh	r2, [r4, #22]
 801d9fe:	8321      	strh	r1, [r4, #24]
 801da00:	8361      	strh	r1, [r4, #26]
 801da02:	45be      	cmp	lr, r7
 801da04:	44b4      	add	ip, r6
 801da06:	d04a      	beq.n	801da9e <_ZN8touchgfx7Outline10renderLineEiiii+0xb92>
 801da08:	9a03      	ldr	r2, [sp, #12]
 801da0a:	eba2 010c 	sub.w	r1, r2, ip
 801da0e:	440e      	add	r6, r1
 801da10:	0176      	lsls	r6, r6, #5
 801da12:	fb96 f8f3 	sdiv	r8, r6, r3
 801da16:	fb03 6618 	mls	r6, r3, r8, r6
 801da1a:	2e00      	cmp	r6, #0
 801da1c:	bfb8      	it	lt
 801da1e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801da22:	f108 0201 	add.w	r2, r8, #1
 801da26:	bfb8      	it	lt
 801da28:	18f6      	addlt	r6, r6, r3
 801da2a:	1aed      	subs	r5, r5, r3
 801da2c:	9205      	str	r2, [sp, #20]
 801da2e:	19ad      	adds	r5, r5, r6
 801da30:	bf58      	it	pl
 801da32:	f8dd 9014 	ldrpl.w	r9, [sp, #20]
 801da36:	8b20      	ldrh	r0, [r4, #24]
 801da38:	8b61      	ldrh	r1, [r4, #26]
 801da3a:	9a01      	ldr	r2, [sp, #4]
 801da3c:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 801da40:	bf48      	it	mi
 801da42:	46c1      	movmi	r9, r8
 801da44:	4448      	add	r0, r9
 801da46:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 801da4a:	4417      	add	r7, r2
 801da4c:	44cc      	add	ip, r9
 801da4e:	9a04      	ldr	r2, [sp, #16]
 801da50:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 801da54:	443a      	add	r2, r7
 801da56:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 801da5a:	bf58      	it	pl
 801da5c:	1aed      	subpl	r5, r5, r3
 801da5e:	b200      	sxth	r0, r0
 801da60:	b209      	sxth	r1, r1
 801da62:	4552      	cmp	r2, sl
 801da64:	8320      	strh	r0, [r4, #24]
 801da66:	8361      	strh	r1, [r4, #26]
 801da68:	d017      	beq.n	801da9a <_ZN8touchgfx7Outline10renderLineEiiii+0xb8e>
 801da6a:	ea50 0201 	orrs.w	r2, r0, r1
 801da6e:	d00d      	beq.n	801da8c <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 801da70:	f1b9 0f00 	cmp.w	r9, #0
 801da74:	db0a      	blt.n	801da8c <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 801da76:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801da78:	4549      	cmp	r1, r9
 801da7a:	dd07      	ble.n	801da8c <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 801da7c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801da80:	4288      	cmp	r0, r1
 801da82:	d337      	bcc.n	801daf4 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe8>
 801da84:	f04f 0201 	mov.w	r2, #1
 801da88:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801da8c:	9a00      	ldr	r2, [sp, #0]
 801da8e:	82e2      	strh	r2, [r4, #22]
 801da90:	f04f 0200 	mov.w	r2, #0
 801da94:	82a7      	strh	r7, [r4, #20]
 801da96:	8322      	strh	r2, [r4, #24]
 801da98:	8362      	strh	r2, [r4, #26]
 801da9a:	45be      	cmp	lr, r7
 801da9c:	d1c7      	bne.n	801da2e <_ZN8touchgfx7Outline10renderLineEiiii+0xb22>
 801da9e:	9b03      	ldr	r3, [sp, #12]
 801daa0:	8b62      	ldrh	r2, [r4, #26]
 801daa2:	eba3 0c0c 	sub.w	ip, r3, ip
 801daa6:	8b23      	ldrh	r3, [r4, #24]
 801daa8:	4463      	add	r3, ip
 801daaa:	8323      	strh	r3, [r4, #24]
 801daac:	9b02      	ldr	r3, [sp, #8]
 801daae:	3320      	adds	r3, #32
 801dab0:	eba3 030b 	sub.w	r3, r3, fp
 801dab4:	fb0c 2c03 	mla	ip, ip, r3, r2
 801dab8:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801dabc:	f7ff ba9b 	b.w	801cff6 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801dac0:	f04f 32ff 	mov.w	r2, #4294967295
 801dac4:	fb05 f508 	mul.w	r5, r5, r8
 801dac8:	425b      	negs	r3, r3
 801daca:	9201      	str	r2, [sp, #4]
 801dacc:	f04f 0b00 	mov.w	fp, #0
 801dad0:	e75e      	b.n	801d990 <_ZN8touchgfx7Outline10renderLineEiiii+0xa84>
 801dad2:	f104 0814 	add.w	r8, r4, #20
 801dad6:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801dada:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801dade:	f8c9 0000 	str.w	r0, [r9]
 801dae2:	f8c9 1004 	str.w	r1, [r9, #4]
 801dae6:	6921      	ldr	r1, [r4, #16]
 801dae8:	3108      	adds	r1, #8
 801daea:	6121      	str	r1, [r4, #16]
 801daec:	68a1      	ldr	r1, [r4, #8]
 801daee:	3101      	adds	r1, #1
 801daf0:	60a1      	str	r1, [r4, #8]
 801daf2:	e780      	b.n	801d9f6 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801daf4:	f104 0914 	add.w	r9, r4, #20
 801daf8:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 801dafc:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801db00:	f8ca 0000 	str.w	r0, [sl]
 801db04:	f8ca 1004 	str.w	r1, [sl, #4]
 801db08:	6921      	ldr	r1, [r4, #16]
 801db0a:	3108      	adds	r1, #8
 801db0c:	6121      	str	r1, [r4, #16]
 801db0e:	68a1      	ldr	r1, [r4, #8]
 801db10:	3101      	adds	r1, #1
 801db12:	60a1      	str	r1, [r4, #8]
 801db14:	e7ba      	b.n	801da8c <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>

0801db16 <_ZN8touchgfx7Outline6lineToEii>:
 801db16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801db18:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801db1a:	079b      	lsls	r3, r3, #30
 801db1c:	4604      	mov	r4, r0
 801db1e:	460d      	mov	r5, r1
 801db20:	4616      	mov	r6, r2
 801db22:	d526      	bpl.n	801db72 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801db24:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801db28:	ea85 0001 	eor.w	r0, r5, r1
 801db2c:	ea86 0302 	eor.w	r3, r6, r2
 801db30:	4303      	orrs	r3, r0
 801db32:	d01e      	beq.n	801db72 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801db34:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801db36:	9600      	str	r6, [sp, #0]
 801db38:	114b      	asrs	r3, r1, #5
 801db3a:	4283      	cmp	r3, r0
 801db3c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801db3e:	bfb8      	it	lt
 801db40:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801db42:	3301      	adds	r3, #1
 801db44:	4283      	cmp	r3, r0
 801db46:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801db48:	bfc8      	it	gt
 801db4a:	6363      	strgt	r3, [r4, #52]	; 0x34
 801db4c:	116b      	asrs	r3, r5, #5
 801db4e:	4283      	cmp	r3, r0
 801db50:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801db52:	bfb8      	it	lt
 801db54:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801db56:	3301      	adds	r3, #1
 801db58:	4283      	cmp	r3, r0
 801db5a:	bfc8      	it	gt
 801db5c:	6363      	strgt	r3, [r4, #52]	; 0x34
 801db5e:	4620      	mov	r0, r4
 801db60:	462b      	mov	r3, r5
 801db62:	f7ff f9d3 	bl	801cf0c <_ZN8touchgfx7Outline10renderLineEiiii>
 801db66:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801db68:	e9c4 5607 	strd	r5, r6, [r4, #28]
 801db6c:	f043 0301 	orr.w	r3, r3, #1
 801db70:	63e3      	str	r3, [r4, #60]	; 0x3c
 801db72:	b002      	add	sp, #8
 801db74:	bd70      	pop	{r4, r5, r6, pc}

0801db76 <_ZN8touchgfx7Outline6moveToEii>:
 801db76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801db78:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801db7a:	4615      	mov	r5, r2
 801db7c:	079a      	lsls	r2, r3, #30
 801db7e:	4604      	mov	r4, r0
 801db80:	460e      	mov	r6, r1
 801db82:	d401      	bmi.n	801db88 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801db84:	f7ff f97b 	bl	801ce7e <_ZN8touchgfx7Outline5resetEv>
 801db88:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801db8a:	07db      	lsls	r3, r3, #31
 801db8c:	d504      	bpl.n	801db98 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801db8e:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 801db92:	4620      	mov	r0, r4
 801db94:	f7ff ffbf 	bl	801db16 <_ZN8touchgfx7Outline6lineToEii>
 801db98:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801db9c:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 801dba0:	ea4f 1c66 	mov.w	ip, r6, asr #5
 801dba4:	116f      	asrs	r7, r5, #5
 801dba6:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 801dbaa:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 801dbae:	4291      	cmp	r1, r2
 801dbb0:	d015      	beq.n	801dbde <_ZN8touchgfx7Outline6moveToEii+0x68>
 801dbb2:	8b61      	ldrh	r1, [r4, #26]
 801dbb4:	8b22      	ldrh	r2, [r4, #24]
 801dbb6:	430a      	orrs	r2, r1
 801dbb8:	d00b      	beq.n	801dbd2 <_ZN8touchgfx7Outline6moveToEii+0x5c>
 801dbba:	2b00      	cmp	r3, #0
 801dbbc:	db09      	blt.n	801dbd2 <_ZN8touchgfx7Outline6moveToEii+0x5c>
 801dbbe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801dbc0:	429a      	cmp	r2, r3
 801dbc2:	dd06      	ble.n	801dbd2 <_ZN8touchgfx7Outline6moveToEii+0x5c>
 801dbc4:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801dbc8:	429a      	cmp	r2, r3
 801dbca:	d30d      	bcc.n	801dbe8 <_ZN8touchgfx7Outline6moveToEii+0x72>
 801dbcc:	2301      	movs	r3, #1
 801dbce:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801dbd2:	2300      	movs	r3, #0
 801dbd4:	f8a4 c014 	strh.w	ip, [r4, #20]
 801dbd8:	82e7      	strh	r7, [r4, #22]
 801dbda:	8323      	strh	r3, [r4, #24]
 801dbdc:	8363      	strh	r3, [r4, #26]
 801dbde:	61e6      	str	r6, [r4, #28]
 801dbe0:	e9c4 5608 	strd	r5, r6, [r4, #32]
 801dbe4:	62a5      	str	r5, [r4, #40]	; 0x28
 801dbe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801dbe8:	f104 0314 	add.w	r3, r4, #20
 801dbec:	cb03      	ldmia	r3!, {r0, r1}
 801dbee:	6922      	ldr	r2, [r4, #16]
 801dbf0:	6010      	str	r0, [r2, #0]
 801dbf2:	6051      	str	r1, [r2, #4]
 801dbf4:	6923      	ldr	r3, [r4, #16]
 801dbf6:	3308      	adds	r3, #8
 801dbf8:	6123      	str	r3, [r4, #16]
 801dbfa:	68a3      	ldr	r3, [r4, #8]
 801dbfc:	3301      	adds	r3, #1
 801dbfe:	60a3      	str	r3, [r4, #8]
 801dc00:	e7e7      	b.n	801dbd2 <_ZN8touchgfx7Outline6moveToEii+0x5c>

0801dc02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801dc02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc06:	b0d1      	sub	sp, #324	; 0x144
 801dc08:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801dc0c:	466c      	mov	r4, sp
 801dc0e:	1a0d      	subs	r5, r1, r0
 801dc10:	2d48      	cmp	r5, #72	; 0x48
 801dc12:	f100 0208 	add.w	r2, r0, #8
 801dc16:	f340 80bb 	ble.w	801dd90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 801dc1a:	112d      	asrs	r5, r5, #4
 801dc1c:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 801dc20:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 801dc24:	681e      	ldr	r6, [r3, #0]
 801dc26:	f9b0 8000 	ldrsh.w	r8, [r0]
 801dc2a:	6006      	str	r6, [r0, #0]
 801dc2c:	685e      	ldr	r6, [r3, #4]
 801dc2e:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 801dc32:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 801dc36:	6046      	str	r6, [r0, #4]
 801dc38:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 801dc3c:	f8a3 c004 	strh.w	ip, [r3, #4]
 801dc40:	f8a3 e002 	strh.w	lr, [r3, #2]
 801dc44:	80df      	strh	r7, [r3, #6]
 801dc46:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 801dc4a:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 801dc4e:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 801dc52:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801dc56:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801dc5a:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801dc5e:	45ac      	cmp	ip, r5
 801dc60:	f1a1 0308 	sub.w	r3, r1, #8
 801dc64:	dd0f      	ble.n	801dc86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 801dc66:	681d      	ldr	r5, [r3, #0]
 801dc68:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 801dc6c:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 801dc70:	6015      	str	r5, [r2, #0]
 801dc72:	685d      	ldr	r5, [r3, #4]
 801dc74:	6055      	str	r5, [r2, #4]
 801dc76:	f821 7c08 	strh.w	r7, [r1, #-8]
 801dc7a:	f821 6c06 	strh.w	r6, [r1, #-6]
 801dc7e:	f821 ec04 	strh.w	lr, [r1, #-4]
 801dc82:	f821 cc02 	strh.w	ip, [r1, #-2]
 801dc86:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801dc8a:	f9b0 7000 	ldrsh.w	r7, [r0]
 801dc8e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801dc92:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801dc96:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 801dc9a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801dc9e:	4565      	cmp	r5, ip
 801dca0:	dd0d      	ble.n	801dcbe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 801dca2:	6815      	ldr	r5, [r2, #0]
 801dca4:	6005      	str	r5, [r0, #0]
 801dca6:	6855      	ldr	r5, [r2, #4]
 801dca8:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801dcac:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801dcb0:	8107      	strh	r7, [r0, #8]
 801dcb2:	6045      	str	r5, [r0, #4]
 801dcb4:	8146      	strh	r6, [r0, #10]
 801dcb6:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801dcba:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801dcbe:	f9b0 7000 	ldrsh.w	r7, [r0]
 801dcc2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801dcc6:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 801dcca:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801dcce:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801dcd2:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801dcd6:	45ac      	cmp	ip, r5
 801dcd8:	dd0f      	ble.n	801dcfa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801dcda:	681d      	ldr	r5, [r3, #0]
 801dcdc:	6005      	str	r5, [r0, #0]
 801dcde:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801dce2:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801dce6:	685d      	ldr	r5, [r3, #4]
 801dce8:	6045      	str	r5, [r0, #4]
 801dcea:	f821 7c08 	strh.w	r7, [r1, #-8]
 801dcee:	f821 6c06 	strh.w	r6, [r1, #-6]
 801dcf2:	f821 ec04 	strh.w	lr, [r1, #-4]
 801dcf6:	f821 cc02 	strh.w	ip, [r1, #-2]
 801dcfa:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 801dcfe:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 801dd02:	f9b0 e000 	ldrsh.w	lr, [r0]
 801dd06:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801dd0a:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 801dd0e:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 801dd12:	f102 0508 	add.w	r5, r2, #8
 801dd16:	45b2      	cmp	sl, r6
 801dd18:	462f      	mov	r7, r5
 801dd1a:	dc18      	bgt.n	801dd4e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 801dd1c:	3b08      	subs	r3, #8
 801dd1e:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 801dd22:	f9b3 6000 	ldrsh.w	r6, [r3]
 801dd26:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 801dd2a:	45b2      	cmp	sl, r6
 801dd2c:	dbf6      	blt.n	801dd1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 801dd2e:	42ab      	cmp	r3, r5
 801dd30:	681e      	ldr	r6, [r3, #0]
 801dd32:	d30e      	bcc.n	801dd52 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 801dd34:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 801dd38:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 801dd3c:	602e      	str	r6, [r5, #0]
 801dd3e:	685e      	ldr	r6, [r3, #4]
 801dd40:	606e      	str	r6, [r5, #4]
 801dd42:	f8a3 9000 	strh.w	r9, [r3]
 801dd46:	f8a3 8002 	strh.w	r8, [r3, #2]
 801dd4a:	809f      	strh	r7, [r3, #4]
 801dd4c:	80da      	strh	r2, [r3, #6]
 801dd4e:	462a      	mov	r2, r5
 801dd50:	e7d3      	b.n	801dcfa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801dd52:	6006      	str	r6, [r0, #0]
 801dd54:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801dd58:	685e      	ldr	r6, [r3, #4]
 801dd5a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801dd5e:	6046      	str	r6, [r0, #4]
 801dd60:	80da      	strh	r2, [r3, #6]
 801dd62:	1b4a      	subs	r2, r1, r5
 801dd64:	1a1e      	subs	r6, r3, r0
 801dd66:	10d2      	asrs	r2, r2, #3
 801dd68:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 801dd6c:	bfb8      	it	lt
 801dd6e:	e9c4 0300 	strdlt	r0, r3, [r4]
 801dd72:	f8a3 e000 	strh.w	lr, [r3]
 801dd76:	f8a3 c002 	strh.w	ip, [r3, #2]
 801dd7a:	f8a3 8004 	strh.w	r8, [r3, #4]
 801dd7e:	bfaa      	itet	ge
 801dd80:	4607      	movge	r7, r0
 801dd82:	460b      	movlt	r3, r1
 801dd84:	e9c4 5100 	strdge	r5, r1, [r4]
 801dd88:	4638      	mov	r0, r7
 801dd8a:	3408      	adds	r4, #8
 801dd8c:	4619      	mov	r1, r3
 801dd8e:	e73e      	b.n	801dc0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801dd90:	4291      	cmp	r1, r2
 801dd92:	d926      	bls.n	801dde2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 801dd94:	f1a2 0310 	sub.w	r3, r2, #16
 801dd98:	f9b3 600a 	ldrsh.w	r6, [r3, #10]
 801dd9c:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 801dda0:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 801dda4:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801dda8:	eb05 4506 	add.w	r5, r5, r6, lsl #16
 801ddac:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 801ddb0:	42b5      	cmp	r5, r6
 801ddb2:	dd14      	ble.n	801ddde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 801ddb4:	461d      	mov	r5, r3
 801ddb6:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 801ddba:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801ddbe:	611e      	str	r6, [r3, #16]
 801ddc0:	686e      	ldr	r6, [r5, #4]
 801ddc2:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 801ddc6:	f8a3 c008 	strh.w	ip, [r3, #8]
 801ddca:	42a8      	cmp	r0, r5
 801ddcc:	615e      	str	r6, [r3, #20]
 801ddce:	815f      	strh	r7, [r3, #10]
 801ddd0:	f8a3 800c 	strh.w	r8, [r3, #12]
 801ddd4:	f8a3 e00e 	strh.w	lr, [r3, #14]
 801ddd8:	f1a3 0308 	sub.w	r3, r3, #8
 801dddc:	d1dc      	bne.n	801dd98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 801ddde:	3208      	adds	r2, #8
 801dde0:	e7d6      	b.n	801dd90 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 801dde2:	466b      	mov	r3, sp
 801dde4:	429c      	cmp	r4, r3
 801dde6:	d903      	bls.n	801ddf0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 801dde8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801ddec:	3c08      	subs	r4, #8
 801ddee:	e70e      	b.n	801dc0e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801ddf0:	b051      	add	sp, #324	; 0x144
 801ddf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ddf6 <_ZN8touchgfx7Outline9sortCellsEv>:
 801ddf6:	6881      	ldr	r1, [r0, #8]
 801ddf8:	b111      	cbz	r1, 801de00 <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 801ddfa:	68c0      	ldr	r0, [r0, #12]
 801ddfc:	f7ff bf01 	b.w	801dc02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801de00:	4770      	bx	lr

0801de02 <_ZN8touchgfx7Outline8getCellsEv>:
 801de02:	b510      	push	{r4, lr}
 801de04:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801de06:	07da      	lsls	r2, r3, #31
 801de08:	4604      	mov	r4, r0
 801de0a:	d507      	bpl.n	801de1c <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 801de0c:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 801de10:	f7ff fe81 	bl	801db16 <_ZN8touchgfx7Outline6lineToEii>
 801de14:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801de16:	f023 0301 	bic.w	r3, r3, #1
 801de1a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801de1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801de1e:	079b      	lsls	r3, r3, #30
 801de20:	d51a      	bpl.n	801de58 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 801de22:	8b62      	ldrh	r2, [r4, #26]
 801de24:	8b23      	ldrh	r3, [r4, #24]
 801de26:	4313      	orrs	r3, r2
 801de28:	d00d      	beq.n	801de46 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801de2a:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801de2e:	2b00      	cmp	r3, #0
 801de30:	db09      	blt.n	801de46 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801de32:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801de34:	4293      	cmp	r3, r2
 801de36:	da06      	bge.n	801de46 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801de38:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801de3c:	429a      	cmp	r2, r3
 801de3e:	d80d      	bhi.n	801de5c <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 801de40:	2301      	movs	r3, #1
 801de42:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801de46:	68a0      	ldr	r0, [r4, #8]
 801de48:	b138      	cbz	r0, 801de5a <_ZN8touchgfx7Outline8getCellsEv+0x58>
 801de4a:	4620      	mov	r0, r4
 801de4c:	f7ff ffd3 	bl	801ddf6 <_ZN8touchgfx7Outline9sortCellsEv>
 801de50:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801de52:	f023 0302 	bic.w	r3, r3, #2
 801de56:	63e3      	str	r3, [r4, #60]	; 0x3c
 801de58:	68e0      	ldr	r0, [r4, #12]
 801de5a:	bd10      	pop	{r4, pc}
 801de5c:	f104 0314 	add.w	r3, r4, #20
 801de60:	cb03      	ldmia	r3!, {r0, r1}
 801de62:	6922      	ldr	r2, [r4, #16]
 801de64:	6010      	str	r0, [r2, #0]
 801de66:	6051      	str	r1, [r2, #4]
 801de68:	6923      	ldr	r3, [r4, #16]
 801de6a:	3308      	adds	r3, #8
 801de6c:	6123      	str	r3, [r4, #16]
 801de6e:	68a3      	ldr	r3, [r4, #8]
 801de70:	3301      	adds	r3, #1
 801de72:	60a3      	str	r3, [r4, #8]
 801de74:	e7e7      	b.n	801de46 <_ZN8touchgfx7Outline8getCellsEv+0x44>

0801de76 <_ZN8touchgfx8ScanlineD1Ev>:
 801de76:	4770      	bx	lr

0801de78 <_ZN8touchgfx8ScanlineD0Ev>:
 801de78:	b510      	push	{r4, lr}
 801de7a:	2124      	movs	r1, #36	; 0x24
 801de7c:	4604      	mov	r4, r0
 801de7e:	f000 f884 	bl	801df8a <_ZdlPvj>
 801de82:	4620      	mov	r0, r4
 801de84:	bd10      	pop	{r4, pc}

0801de86 <_ZN8touchgfx8Scanline5resetEv>:
 801de86:	b510      	push	{r4, lr}
 801de88:	4604      	mov	r4, r0
 801de8a:	f7ee fc35 	bl	800c6f8 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 801de8e:	61a0      	str	r0, [r4, #24]
 801de90:	f7ee fc38 	bl	800c704 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 801de94:	61e0      	str	r0, [r4, #28]
 801de96:	f7ee fc3b 	bl	800c710 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 801de9a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801de9e:	e9c4 3301 	strd	r3, r3, [r4, #4]
 801dea2:	69e3      	ldr	r3, [r4, #28]
 801dea4:	6123      	str	r3, [r4, #16]
 801dea6:	2300      	movs	r3, #0
 801dea8:	6220      	str	r0, [r4, #32]
 801deaa:	6160      	str	r0, [r4, #20]
 801deac:	60e3      	str	r3, [r4, #12]
 801deae:	bd10      	pop	{r4, pc}

0801deb0 <_ZN8touchgfx8ScanlineC1Ev>:
 801deb0:	b510      	push	{r4, lr}
 801deb2:	4b07      	ldr	r3, [pc, #28]	; (801ded0 <_ZN8touchgfx8ScanlineC1Ev+0x20>)
 801deb4:	6003      	str	r3, [r0, #0]
 801deb6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801deba:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801debe:	2300      	movs	r3, #0
 801dec0:	4604      	mov	r4, r0
 801dec2:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801dec6:	6143      	str	r3, [r0, #20]
 801dec8:	f7ff ffdd 	bl	801de86 <_ZN8touchgfx8Scanline5resetEv>
 801decc:	4620      	mov	r0, r4
 801dece:	bd10      	pop	{r4, pc}
 801ded0:	08022ecc 	.word	0x08022ecc

0801ded4 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 801ded4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ded8:	1e0c      	subs	r4, r1, #0
 801deda:	4605      	mov	r5, r0
 801dedc:	4617      	mov	r7, r2
 801dede:	461e      	mov	r6, r3
 801dee0:	da03      	bge.n	801deea <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 801dee2:	4426      	add	r6, r4
 801dee4:	2e01      	cmp	r6, #1
 801dee6:	d421      	bmi.n	801df2c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801dee8:	2400      	movs	r4, #0
 801deea:	f7ee fbff 	bl	800c6ec <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801deee:	42a0      	cmp	r0, r4
 801def0:	d91c      	bls.n	801df2c <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801def2:	f7ee fbfb 	bl	800c6ec <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801def6:	eb04 0806 	add.w	r8, r4, r6
 801defa:	4580      	cmp	r8, r0
 801defc:	d902      	bls.n	801df04 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 801defe:	f7ee fbf5 	bl	800c6ec <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801df02:	1b06      	subs	r6, r0, r4
 801df04:	69a8      	ldr	r0, [r5, #24]
 801df06:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801df0a:	4632      	mov	r2, r6
 801df0c:	4420      	add	r0, r4
 801df0e:	f7f1 f92d 	bl	800f16c <_ZN8touchgfx6memsetEPvhm>
 801df12:	686b      	ldr	r3, [r5, #4]
 801df14:	3301      	adds	r3, #1
 801df16:	42a3      	cmp	r3, r4
 801df18:	b2b2      	uxth	r2, r6
 801df1a:	696b      	ldr	r3, [r5, #20]
 801df1c:	d108      	bne.n	801df30 <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 801df1e:	8819      	ldrh	r1, [r3, #0]
 801df20:	440a      	add	r2, r1
 801df22:	801a      	strh	r2, [r3, #0]
 801df24:	3c01      	subs	r4, #1
 801df26:	4434      	add	r4, r6
 801df28:	e9c5 4701 	strd	r4, r7, [r5, #4]
 801df2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801df30:	1c99      	adds	r1, r3, #2
 801df32:	6169      	str	r1, [r5, #20]
 801df34:	805a      	strh	r2, [r3, #2]
 801df36:	692b      	ldr	r3, [r5, #16]
 801df38:	1c9a      	adds	r2, r3, #2
 801df3a:	612a      	str	r2, [r5, #16]
 801df3c:	805c      	strh	r4, [r3, #2]
 801df3e:	68eb      	ldr	r3, [r5, #12]
 801df40:	3301      	adds	r3, #1
 801df42:	60eb      	str	r3, [r5, #12]
 801df44:	e7ee      	b.n	801df24 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0801df46 <_ZN8touchgfx15RenderingBufferD1Ev>:
 801df46:	4770      	bx	lr

0801df48 <_ZN8touchgfx15RenderingBufferD0Ev>:
 801df48:	b510      	push	{r4, lr}
 801df4a:	2118      	movs	r1, #24
 801df4c:	4604      	mov	r4, r0
 801df4e:	f000 f81c 	bl	801df8a <_ZdlPvj>
 801df52:	4620      	mov	r0, r4
 801df54:	bd10      	pop	{r4, pc}
	...

0801df58 <_ZN8touchgfx15RenderingBufferC1Ev>:
 801df58:	4a04      	ldr	r2, [pc, #16]	; (801df6c <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 801df5a:	6002      	str	r2, [r0, #0]
 801df5c:	2200      	movs	r2, #0
 801df5e:	6042      	str	r2, [r0, #4]
 801df60:	7202      	strb	r2, [r0, #8]
 801df62:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801df66:	6142      	str	r2, [r0, #20]
 801df68:	4770      	bx	lr
 801df6a:	bf00      	nop
 801df6c:	08022edc 	.word	0x08022edc

0801df70 <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 801df70:	60c3      	str	r3, [r0, #12]
 801df72:	9b00      	ldr	r3, [sp, #0]
 801df74:	6103      	str	r3, [r0, #16]
 801df76:	9b01      	ldr	r3, [sp, #4]
 801df78:	6041      	str	r1, [r0, #4]
 801df7a:	7202      	strb	r2, [r0, #8]
 801df7c:	6143      	str	r3, [r0, #20]
 801df7e:	4770      	bx	lr

0801df80 <__aeabi_atexit>:
 801df80:	460b      	mov	r3, r1
 801df82:	4601      	mov	r1, r0
 801df84:	4618      	mov	r0, r3
 801df86:	f000 b853 	b.w	801e030 <__cxa_atexit>

0801df8a <_ZdlPvj>:
 801df8a:	f000 b812 	b.w	801dfb2 <_ZdlPv>

0801df8e <__cxa_guard_acquire>:
 801df8e:	6803      	ldr	r3, [r0, #0]
 801df90:	07db      	lsls	r3, r3, #31
 801df92:	d406      	bmi.n	801dfa2 <__cxa_guard_acquire+0x14>
 801df94:	7843      	ldrb	r3, [r0, #1]
 801df96:	b103      	cbz	r3, 801df9a <__cxa_guard_acquire+0xc>
 801df98:	deff      	udf	#255	; 0xff
 801df9a:	2301      	movs	r3, #1
 801df9c:	7043      	strb	r3, [r0, #1]
 801df9e:	4618      	mov	r0, r3
 801dfa0:	4770      	bx	lr
 801dfa2:	2000      	movs	r0, #0
 801dfa4:	4770      	bx	lr

0801dfa6 <__cxa_guard_release>:
 801dfa6:	2301      	movs	r3, #1
 801dfa8:	6003      	str	r3, [r0, #0]
 801dfaa:	4770      	bx	lr

0801dfac <__cxa_pure_virtual>:
 801dfac:	b508      	push	{r3, lr}
 801dfae:	f000 f80f 	bl	801dfd0 <_ZSt9terminatev>

0801dfb2 <_ZdlPv>:
 801dfb2:	f000 b88f 	b.w	801e0d4 <free>

0801dfb6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801dfb6:	b508      	push	{r3, lr}
 801dfb8:	4780      	blx	r0
 801dfba:	f000 f80e 	bl	801dfda <abort>
	...

0801dfc0 <_ZSt13get_terminatev>:
 801dfc0:	4b02      	ldr	r3, [pc, #8]	; (801dfcc <_ZSt13get_terminatev+0xc>)
 801dfc2:	6818      	ldr	r0, [r3, #0]
 801dfc4:	f3bf 8f5b 	dmb	ish
 801dfc8:	4770      	bx	lr
 801dfca:	bf00      	nop
 801dfcc:	200000d4 	.word	0x200000d4

0801dfd0 <_ZSt9terminatev>:
 801dfd0:	b508      	push	{r3, lr}
 801dfd2:	f7ff fff5 	bl	801dfc0 <_ZSt13get_terminatev>
 801dfd6:	f7ff ffee 	bl	801dfb6 <_ZN10__cxxabiv111__terminateEPFvvE>

0801dfda <abort>:
 801dfda:	b508      	push	{r3, lr}
 801dfdc:	2006      	movs	r0, #6
 801dfde:	f000 fc9d 	bl	801e91c <raise>
 801dfe2:	2001      	movs	r0, #1
 801dfe4:	f7e3 ffbe 	bl	8001f64 <_exit>

0801dfe8 <__assert_func>:
 801dfe8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801dfea:	4614      	mov	r4, r2
 801dfec:	461a      	mov	r2, r3
 801dfee:	4b09      	ldr	r3, [pc, #36]	; (801e014 <__assert_func+0x2c>)
 801dff0:	681b      	ldr	r3, [r3, #0]
 801dff2:	4605      	mov	r5, r0
 801dff4:	68d8      	ldr	r0, [r3, #12]
 801dff6:	b14c      	cbz	r4, 801e00c <__assert_func+0x24>
 801dff8:	4b07      	ldr	r3, [pc, #28]	; (801e018 <__assert_func+0x30>)
 801dffa:	9100      	str	r1, [sp, #0]
 801dffc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801e000:	4906      	ldr	r1, [pc, #24]	; (801e01c <__assert_func+0x34>)
 801e002:	462b      	mov	r3, r5
 801e004:	f000 f828 	bl	801e058 <fiprintf>
 801e008:	f7ff ffe7 	bl	801dfda <abort>
 801e00c:	4b04      	ldr	r3, [pc, #16]	; (801e020 <__assert_func+0x38>)
 801e00e:	461c      	mov	r4, r3
 801e010:	e7f3      	b.n	801dffa <__assert_func+0x12>
 801e012:	bf00      	nop
 801e014:	200000d8 	.word	0x200000d8
 801e018:	08022ee4 	.word	0x08022ee4
 801e01c:	08022ef1 	.word	0x08022ef1
 801e020:	08022f1f 	.word	0x08022f1f

0801e024 <atexit>:
 801e024:	2300      	movs	r3, #0
 801e026:	4601      	mov	r1, r0
 801e028:	461a      	mov	r2, r3
 801e02a:	4618      	mov	r0, r3
 801e02c:	f000 bd52 	b.w	801ead4 <__register_exitproc>

0801e030 <__cxa_atexit>:
 801e030:	b510      	push	{r4, lr}
 801e032:	4c05      	ldr	r4, [pc, #20]	; (801e048 <__cxa_atexit+0x18>)
 801e034:	4613      	mov	r3, r2
 801e036:	b12c      	cbz	r4, 801e044 <__cxa_atexit+0x14>
 801e038:	460a      	mov	r2, r1
 801e03a:	4601      	mov	r1, r0
 801e03c:	2002      	movs	r0, #2
 801e03e:	f000 fd49 	bl	801ead4 <__register_exitproc>
 801e042:	bd10      	pop	{r4, pc}
 801e044:	4620      	mov	r0, r4
 801e046:	e7fc      	b.n	801e042 <__cxa_atexit+0x12>
 801e048:	0801ead5 	.word	0x0801ead5

0801e04c <__errno>:
 801e04c:	4b01      	ldr	r3, [pc, #4]	; (801e054 <__errno+0x8>)
 801e04e:	6818      	ldr	r0, [r3, #0]
 801e050:	4770      	bx	lr
 801e052:	bf00      	nop
 801e054:	200000d8 	.word	0x200000d8

0801e058 <fiprintf>:
 801e058:	b40e      	push	{r1, r2, r3}
 801e05a:	b503      	push	{r0, r1, lr}
 801e05c:	4601      	mov	r1, r0
 801e05e:	ab03      	add	r3, sp, #12
 801e060:	4805      	ldr	r0, [pc, #20]	; (801e078 <fiprintf+0x20>)
 801e062:	f853 2b04 	ldr.w	r2, [r3], #4
 801e066:	6800      	ldr	r0, [r0, #0]
 801e068:	9301      	str	r3, [sp, #4]
 801e06a:	f000 f95b 	bl	801e324 <_vfiprintf_r>
 801e06e:	b002      	add	sp, #8
 801e070:	f85d eb04 	ldr.w	lr, [sp], #4
 801e074:	b003      	add	sp, #12
 801e076:	4770      	bx	lr
 801e078:	200000d8 	.word	0x200000d8

0801e07c <__libc_init_array>:
 801e07c:	b570      	push	{r4, r5, r6, lr}
 801e07e:	4d0d      	ldr	r5, [pc, #52]	; (801e0b4 <__libc_init_array+0x38>)
 801e080:	4c0d      	ldr	r4, [pc, #52]	; (801e0b8 <__libc_init_array+0x3c>)
 801e082:	1b64      	subs	r4, r4, r5
 801e084:	10a4      	asrs	r4, r4, #2
 801e086:	2600      	movs	r6, #0
 801e088:	42a6      	cmp	r6, r4
 801e08a:	d109      	bne.n	801e0a0 <__libc_init_array+0x24>
 801e08c:	4d0b      	ldr	r5, [pc, #44]	; (801e0bc <__libc_init_array+0x40>)
 801e08e:	4c0c      	ldr	r4, [pc, #48]	; (801e0c0 <__libc_init_array+0x44>)
 801e090:	f001 f85a 	bl	801f148 <_init>
 801e094:	1b64      	subs	r4, r4, r5
 801e096:	10a4      	asrs	r4, r4, #2
 801e098:	2600      	movs	r6, #0
 801e09a:	42a6      	cmp	r6, r4
 801e09c:	d105      	bne.n	801e0aa <__libc_init_array+0x2e>
 801e09e:	bd70      	pop	{r4, r5, r6, pc}
 801e0a0:	f855 3b04 	ldr.w	r3, [r5], #4
 801e0a4:	4798      	blx	r3
 801e0a6:	3601      	adds	r6, #1
 801e0a8:	e7ee      	b.n	801e088 <__libc_init_array+0xc>
 801e0aa:	f855 3b04 	ldr.w	r3, [r5], #4
 801e0ae:	4798      	blx	r3
 801e0b0:	3601      	adds	r6, #1
 801e0b2:	e7f2      	b.n	801e09a <__libc_init_array+0x1e>
 801e0b4:	08022fdc 	.word	0x08022fdc
 801e0b8:	08022fdc 	.word	0x08022fdc
 801e0bc:	08022fdc 	.word	0x08022fdc
 801e0c0:	08022ff4 	.word	0x08022ff4

0801e0c4 <malloc>:
 801e0c4:	4b02      	ldr	r3, [pc, #8]	; (801e0d0 <malloc+0xc>)
 801e0c6:	4601      	mov	r1, r0
 801e0c8:	6818      	ldr	r0, [r3, #0]
 801e0ca:	f000 b88d 	b.w	801e1e8 <_malloc_r>
 801e0ce:	bf00      	nop
 801e0d0:	200000d8 	.word	0x200000d8

0801e0d4 <free>:
 801e0d4:	4b02      	ldr	r3, [pc, #8]	; (801e0e0 <free+0xc>)
 801e0d6:	4601      	mov	r1, r0
 801e0d8:	6818      	ldr	r0, [r3, #0]
 801e0da:	f000 b819 	b.w	801e110 <_free_r>
 801e0de:	bf00      	nop
 801e0e0:	200000d8 	.word	0x200000d8

0801e0e4 <memcpy>:
 801e0e4:	440a      	add	r2, r1
 801e0e6:	4291      	cmp	r1, r2
 801e0e8:	f100 33ff 	add.w	r3, r0, #4294967295
 801e0ec:	d100      	bne.n	801e0f0 <memcpy+0xc>
 801e0ee:	4770      	bx	lr
 801e0f0:	b510      	push	{r4, lr}
 801e0f2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801e0f6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801e0fa:	4291      	cmp	r1, r2
 801e0fc:	d1f9      	bne.n	801e0f2 <memcpy+0xe>
 801e0fe:	bd10      	pop	{r4, pc}

0801e100 <memset>:
 801e100:	4402      	add	r2, r0
 801e102:	4603      	mov	r3, r0
 801e104:	4293      	cmp	r3, r2
 801e106:	d100      	bne.n	801e10a <memset+0xa>
 801e108:	4770      	bx	lr
 801e10a:	f803 1b01 	strb.w	r1, [r3], #1
 801e10e:	e7f9      	b.n	801e104 <memset+0x4>

0801e110 <_free_r>:
 801e110:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e112:	2900      	cmp	r1, #0
 801e114:	d044      	beq.n	801e1a0 <_free_r+0x90>
 801e116:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801e11a:	9001      	str	r0, [sp, #4]
 801e11c:	2b00      	cmp	r3, #0
 801e11e:	f1a1 0404 	sub.w	r4, r1, #4
 801e122:	bfb8      	it	lt
 801e124:	18e4      	addlt	r4, r4, r3
 801e126:	f000 ff57 	bl	801efd8 <__malloc_lock>
 801e12a:	4a1e      	ldr	r2, [pc, #120]	; (801e1a4 <_free_r+0x94>)
 801e12c:	9801      	ldr	r0, [sp, #4]
 801e12e:	6813      	ldr	r3, [r2, #0]
 801e130:	b933      	cbnz	r3, 801e140 <_free_r+0x30>
 801e132:	6063      	str	r3, [r4, #4]
 801e134:	6014      	str	r4, [r2, #0]
 801e136:	b003      	add	sp, #12
 801e138:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801e13c:	f000 bf52 	b.w	801efe4 <__malloc_unlock>
 801e140:	42a3      	cmp	r3, r4
 801e142:	d908      	bls.n	801e156 <_free_r+0x46>
 801e144:	6825      	ldr	r5, [r4, #0]
 801e146:	1961      	adds	r1, r4, r5
 801e148:	428b      	cmp	r3, r1
 801e14a:	bf01      	itttt	eq
 801e14c:	6819      	ldreq	r1, [r3, #0]
 801e14e:	685b      	ldreq	r3, [r3, #4]
 801e150:	1949      	addeq	r1, r1, r5
 801e152:	6021      	streq	r1, [r4, #0]
 801e154:	e7ed      	b.n	801e132 <_free_r+0x22>
 801e156:	461a      	mov	r2, r3
 801e158:	685b      	ldr	r3, [r3, #4]
 801e15a:	b10b      	cbz	r3, 801e160 <_free_r+0x50>
 801e15c:	42a3      	cmp	r3, r4
 801e15e:	d9fa      	bls.n	801e156 <_free_r+0x46>
 801e160:	6811      	ldr	r1, [r2, #0]
 801e162:	1855      	adds	r5, r2, r1
 801e164:	42a5      	cmp	r5, r4
 801e166:	d10b      	bne.n	801e180 <_free_r+0x70>
 801e168:	6824      	ldr	r4, [r4, #0]
 801e16a:	4421      	add	r1, r4
 801e16c:	1854      	adds	r4, r2, r1
 801e16e:	42a3      	cmp	r3, r4
 801e170:	6011      	str	r1, [r2, #0]
 801e172:	d1e0      	bne.n	801e136 <_free_r+0x26>
 801e174:	681c      	ldr	r4, [r3, #0]
 801e176:	685b      	ldr	r3, [r3, #4]
 801e178:	6053      	str	r3, [r2, #4]
 801e17a:	4421      	add	r1, r4
 801e17c:	6011      	str	r1, [r2, #0]
 801e17e:	e7da      	b.n	801e136 <_free_r+0x26>
 801e180:	d902      	bls.n	801e188 <_free_r+0x78>
 801e182:	230c      	movs	r3, #12
 801e184:	6003      	str	r3, [r0, #0]
 801e186:	e7d6      	b.n	801e136 <_free_r+0x26>
 801e188:	6825      	ldr	r5, [r4, #0]
 801e18a:	1961      	adds	r1, r4, r5
 801e18c:	428b      	cmp	r3, r1
 801e18e:	bf04      	itt	eq
 801e190:	6819      	ldreq	r1, [r3, #0]
 801e192:	685b      	ldreq	r3, [r3, #4]
 801e194:	6063      	str	r3, [r4, #4]
 801e196:	bf04      	itt	eq
 801e198:	1949      	addeq	r1, r1, r5
 801e19a:	6021      	streq	r1, [r4, #0]
 801e19c:	6054      	str	r4, [r2, #4]
 801e19e:	e7ca      	b.n	801e136 <_free_r+0x26>
 801e1a0:	b003      	add	sp, #12
 801e1a2:	bd30      	pop	{r4, r5, pc}
 801e1a4:	2000d474 	.word	0x2000d474

0801e1a8 <sbrk_aligned>:
 801e1a8:	b570      	push	{r4, r5, r6, lr}
 801e1aa:	4e0e      	ldr	r6, [pc, #56]	; (801e1e4 <sbrk_aligned+0x3c>)
 801e1ac:	460c      	mov	r4, r1
 801e1ae:	6831      	ldr	r1, [r6, #0]
 801e1b0:	4605      	mov	r5, r0
 801e1b2:	b911      	cbnz	r1, 801e1ba <sbrk_aligned+0x12>
 801e1b4:	f000 fb7a 	bl	801e8ac <_sbrk_r>
 801e1b8:	6030      	str	r0, [r6, #0]
 801e1ba:	4621      	mov	r1, r4
 801e1bc:	4628      	mov	r0, r5
 801e1be:	f000 fb75 	bl	801e8ac <_sbrk_r>
 801e1c2:	1c43      	adds	r3, r0, #1
 801e1c4:	d00a      	beq.n	801e1dc <sbrk_aligned+0x34>
 801e1c6:	1cc4      	adds	r4, r0, #3
 801e1c8:	f024 0403 	bic.w	r4, r4, #3
 801e1cc:	42a0      	cmp	r0, r4
 801e1ce:	d007      	beq.n	801e1e0 <sbrk_aligned+0x38>
 801e1d0:	1a21      	subs	r1, r4, r0
 801e1d2:	4628      	mov	r0, r5
 801e1d4:	f000 fb6a 	bl	801e8ac <_sbrk_r>
 801e1d8:	3001      	adds	r0, #1
 801e1da:	d101      	bne.n	801e1e0 <sbrk_aligned+0x38>
 801e1dc:	f04f 34ff 	mov.w	r4, #4294967295
 801e1e0:	4620      	mov	r0, r4
 801e1e2:	bd70      	pop	{r4, r5, r6, pc}
 801e1e4:	2000d478 	.word	0x2000d478

0801e1e8 <_malloc_r>:
 801e1e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e1ec:	1ccd      	adds	r5, r1, #3
 801e1ee:	f025 0503 	bic.w	r5, r5, #3
 801e1f2:	3508      	adds	r5, #8
 801e1f4:	2d0c      	cmp	r5, #12
 801e1f6:	bf38      	it	cc
 801e1f8:	250c      	movcc	r5, #12
 801e1fa:	2d00      	cmp	r5, #0
 801e1fc:	4607      	mov	r7, r0
 801e1fe:	db01      	blt.n	801e204 <_malloc_r+0x1c>
 801e200:	42a9      	cmp	r1, r5
 801e202:	d905      	bls.n	801e210 <_malloc_r+0x28>
 801e204:	230c      	movs	r3, #12
 801e206:	603b      	str	r3, [r7, #0]
 801e208:	2600      	movs	r6, #0
 801e20a:	4630      	mov	r0, r6
 801e20c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e210:	4e2e      	ldr	r6, [pc, #184]	; (801e2cc <_malloc_r+0xe4>)
 801e212:	f000 fee1 	bl	801efd8 <__malloc_lock>
 801e216:	6833      	ldr	r3, [r6, #0]
 801e218:	461c      	mov	r4, r3
 801e21a:	bb34      	cbnz	r4, 801e26a <_malloc_r+0x82>
 801e21c:	4629      	mov	r1, r5
 801e21e:	4638      	mov	r0, r7
 801e220:	f7ff ffc2 	bl	801e1a8 <sbrk_aligned>
 801e224:	1c43      	adds	r3, r0, #1
 801e226:	4604      	mov	r4, r0
 801e228:	d14d      	bne.n	801e2c6 <_malloc_r+0xde>
 801e22a:	6834      	ldr	r4, [r6, #0]
 801e22c:	4626      	mov	r6, r4
 801e22e:	2e00      	cmp	r6, #0
 801e230:	d140      	bne.n	801e2b4 <_malloc_r+0xcc>
 801e232:	6823      	ldr	r3, [r4, #0]
 801e234:	4631      	mov	r1, r6
 801e236:	4638      	mov	r0, r7
 801e238:	eb04 0803 	add.w	r8, r4, r3
 801e23c:	f000 fb36 	bl	801e8ac <_sbrk_r>
 801e240:	4580      	cmp	r8, r0
 801e242:	d13a      	bne.n	801e2ba <_malloc_r+0xd2>
 801e244:	6821      	ldr	r1, [r4, #0]
 801e246:	3503      	adds	r5, #3
 801e248:	1a6d      	subs	r5, r5, r1
 801e24a:	f025 0503 	bic.w	r5, r5, #3
 801e24e:	3508      	adds	r5, #8
 801e250:	2d0c      	cmp	r5, #12
 801e252:	bf38      	it	cc
 801e254:	250c      	movcc	r5, #12
 801e256:	4629      	mov	r1, r5
 801e258:	4638      	mov	r0, r7
 801e25a:	f7ff ffa5 	bl	801e1a8 <sbrk_aligned>
 801e25e:	3001      	adds	r0, #1
 801e260:	d02b      	beq.n	801e2ba <_malloc_r+0xd2>
 801e262:	6823      	ldr	r3, [r4, #0]
 801e264:	442b      	add	r3, r5
 801e266:	6023      	str	r3, [r4, #0]
 801e268:	e00e      	b.n	801e288 <_malloc_r+0xa0>
 801e26a:	6822      	ldr	r2, [r4, #0]
 801e26c:	1b52      	subs	r2, r2, r5
 801e26e:	d41e      	bmi.n	801e2ae <_malloc_r+0xc6>
 801e270:	2a0b      	cmp	r2, #11
 801e272:	d916      	bls.n	801e2a2 <_malloc_r+0xba>
 801e274:	1961      	adds	r1, r4, r5
 801e276:	42a3      	cmp	r3, r4
 801e278:	6025      	str	r5, [r4, #0]
 801e27a:	bf18      	it	ne
 801e27c:	6059      	strne	r1, [r3, #4]
 801e27e:	6863      	ldr	r3, [r4, #4]
 801e280:	bf08      	it	eq
 801e282:	6031      	streq	r1, [r6, #0]
 801e284:	5162      	str	r2, [r4, r5]
 801e286:	604b      	str	r3, [r1, #4]
 801e288:	4638      	mov	r0, r7
 801e28a:	f104 060b 	add.w	r6, r4, #11
 801e28e:	f000 fea9 	bl	801efe4 <__malloc_unlock>
 801e292:	f026 0607 	bic.w	r6, r6, #7
 801e296:	1d23      	adds	r3, r4, #4
 801e298:	1af2      	subs	r2, r6, r3
 801e29a:	d0b6      	beq.n	801e20a <_malloc_r+0x22>
 801e29c:	1b9b      	subs	r3, r3, r6
 801e29e:	50a3      	str	r3, [r4, r2]
 801e2a0:	e7b3      	b.n	801e20a <_malloc_r+0x22>
 801e2a2:	6862      	ldr	r2, [r4, #4]
 801e2a4:	42a3      	cmp	r3, r4
 801e2a6:	bf0c      	ite	eq
 801e2a8:	6032      	streq	r2, [r6, #0]
 801e2aa:	605a      	strne	r2, [r3, #4]
 801e2ac:	e7ec      	b.n	801e288 <_malloc_r+0xa0>
 801e2ae:	4623      	mov	r3, r4
 801e2b0:	6864      	ldr	r4, [r4, #4]
 801e2b2:	e7b2      	b.n	801e21a <_malloc_r+0x32>
 801e2b4:	4634      	mov	r4, r6
 801e2b6:	6876      	ldr	r6, [r6, #4]
 801e2b8:	e7b9      	b.n	801e22e <_malloc_r+0x46>
 801e2ba:	230c      	movs	r3, #12
 801e2bc:	603b      	str	r3, [r7, #0]
 801e2be:	4638      	mov	r0, r7
 801e2c0:	f000 fe90 	bl	801efe4 <__malloc_unlock>
 801e2c4:	e7a1      	b.n	801e20a <_malloc_r+0x22>
 801e2c6:	6025      	str	r5, [r4, #0]
 801e2c8:	e7de      	b.n	801e288 <_malloc_r+0xa0>
 801e2ca:	bf00      	nop
 801e2cc:	2000d474 	.word	0x2000d474

0801e2d0 <__sfputc_r>:
 801e2d0:	6893      	ldr	r3, [r2, #8]
 801e2d2:	3b01      	subs	r3, #1
 801e2d4:	2b00      	cmp	r3, #0
 801e2d6:	b410      	push	{r4}
 801e2d8:	6093      	str	r3, [r2, #8]
 801e2da:	da08      	bge.n	801e2ee <__sfputc_r+0x1e>
 801e2dc:	6994      	ldr	r4, [r2, #24]
 801e2de:	42a3      	cmp	r3, r4
 801e2e0:	db01      	blt.n	801e2e6 <__sfputc_r+0x16>
 801e2e2:	290a      	cmp	r1, #10
 801e2e4:	d103      	bne.n	801e2ee <__sfputc_r+0x1e>
 801e2e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801e2ea:	f000 bb33 	b.w	801e954 <__swbuf_r>
 801e2ee:	6813      	ldr	r3, [r2, #0]
 801e2f0:	1c58      	adds	r0, r3, #1
 801e2f2:	6010      	str	r0, [r2, #0]
 801e2f4:	7019      	strb	r1, [r3, #0]
 801e2f6:	4608      	mov	r0, r1
 801e2f8:	f85d 4b04 	ldr.w	r4, [sp], #4
 801e2fc:	4770      	bx	lr

0801e2fe <__sfputs_r>:
 801e2fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e300:	4606      	mov	r6, r0
 801e302:	460f      	mov	r7, r1
 801e304:	4614      	mov	r4, r2
 801e306:	18d5      	adds	r5, r2, r3
 801e308:	42ac      	cmp	r4, r5
 801e30a:	d101      	bne.n	801e310 <__sfputs_r+0x12>
 801e30c:	2000      	movs	r0, #0
 801e30e:	e007      	b.n	801e320 <__sfputs_r+0x22>
 801e310:	f814 1b01 	ldrb.w	r1, [r4], #1
 801e314:	463a      	mov	r2, r7
 801e316:	4630      	mov	r0, r6
 801e318:	f7ff ffda 	bl	801e2d0 <__sfputc_r>
 801e31c:	1c43      	adds	r3, r0, #1
 801e31e:	d1f3      	bne.n	801e308 <__sfputs_r+0xa>
 801e320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801e324 <_vfiprintf_r>:
 801e324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e328:	460d      	mov	r5, r1
 801e32a:	b09d      	sub	sp, #116	; 0x74
 801e32c:	4614      	mov	r4, r2
 801e32e:	4698      	mov	r8, r3
 801e330:	4606      	mov	r6, r0
 801e332:	b118      	cbz	r0, 801e33c <_vfiprintf_r+0x18>
 801e334:	6983      	ldr	r3, [r0, #24]
 801e336:	b90b      	cbnz	r3, 801e33c <_vfiprintf_r+0x18>
 801e338:	f000 fd48 	bl	801edcc <__sinit>
 801e33c:	4b89      	ldr	r3, [pc, #548]	; (801e564 <_vfiprintf_r+0x240>)
 801e33e:	429d      	cmp	r5, r3
 801e340:	d11b      	bne.n	801e37a <_vfiprintf_r+0x56>
 801e342:	6875      	ldr	r5, [r6, #4]
 801e344:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801e346:	07d9      	lsls	r1, r3, #31
 801e348:	d405      	bmi.n	801e356 <_vfiprintf_r+0x32>
 801e34a:	89ab      	ldrh	r3, [r5, #12]
 801e34c:	059a      	lsls	r2, r3, #22
 801e34e:	d402      	bmi.n	801e356 <_vfiprintf_r+0x32>
 801e350:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801e352:	f000 fdd9 	bl	801ef08 <__retarget_lock_acquire_recursive>
 801e356:	89ab      	ldrh	r3, [r5, #12]
 801e358:	071b      	lsls	r3, r3, #28
 801e35a:	d501      	bpl.n	801e360 <_vfiprintf_r+0x3c>
 801e35c:	692b      	ldr	r3, [r5, #16]
 801e35e:	b9eb      	cbnz	r3, 801e39c <_vfiprintf_r+0x78>
 801e360:	4629      	mov	r1, r5
 801e362:	4630      	mov	r0, r6
 801e364:	f000 fb48 	bl	801e9f8 <__swsetup_r>
 801e368:	b1c0      	cbz	r0, 801e39c <_vfiprintf_r+0x78>
 801e36a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801e36c:	07dc      	lsls	r4, r3, #31
 801e36e:	d50e      	bpl.n	801e38e <_vfiprintf_r+0x6a>
 801e370:	f04f 30ff 	mov.w	r0, #4294967295
 801e374:	b01d      	add	sp, #116	; 0x74
 801e376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e37a:	4b7b      	ldr	r3, [pc, #492]	; (801e568 <_vfiprintf_r+0x244>)
 801e37c:	429d      	cmp	r5, r3
 801e37e:	d101      	bne.n	801e384 <_vfiprintf_r+0x60>
 801e380:	68b5      	ldr	r5, [r6, #8]
 801e382:	e7df      	b.n	801e344 <_vfiprintf_r+0x20>
 801e384:	4b79      	ldr	r3, [pc, #484]	; (801e56c <_vfiprintf_r+0x248>)
 801e386:	429d      	cmp	r5, r3
 801e388:	bf08      	it	eq
 801e38a:	68f5      	ldreq	r5, [r6, #12]
 801e38c:	e7da      	b.n	801e344 <_vfiprintf_r+0x20>
 801e38e:	89ab      	ldrh	r3, [r5, #12]
 801e390:	0598      	lsls	r0, r3, #22
 801e392:	d4ed      	bmi.n	801e370 <_vfiprintf_r+0x4c>
 801e394:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801e396:	f000 fdb9 	bl	801ef0c <__retarget_lock_release_recursive>
 801e39a:	e7e9      	b.n	801e370 <_vfiprintf_r+0x4c>
 801e39c:	2300      	movs	r3, #0
 801e39e:	9309      	str	r3, [sp, #36]	; 0x24
 801e3a0:	2320      	movs	r3, #32
 801e3a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801e3a6:	f8cd 800c 	str.w	r8, [sp, #12]
 801e3aa:	2330      	movs	r3, #48	; 0x30
 801e3ac:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801e570 <_vfiprintf_r+0x24c>
 801e3b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801e3b4:	f04f 0901 	mov.w	r9, #1
 801e3b8:	4623      	mov	r3, r4
 801e3ba:	469a      	mov	sl, r3
 801e3bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 801e3c0:	b10a      	cbz	r2, 801e3c6 <_vfiprintf_r+0xa2>
 801e3c2:	2a25      	cmp	r2, #37	; 0x25
 801e3c4:	d1f9      	bne.n	801e3ba <_vfiprintf_r+0x96>
 801e3c6:	ebba 0b04 	subs.w	fp, sl, r4
 801e3ca:	d00b      	beq.n	801e3e4 <_vfiprintf_r+0xc0>
 801e3cc:	465b      	mov	r3, fp
 801e3ce:	4622      	mov	r2, r4
 801e3d0:	4629      	mov	r1, r5
 801e3d2:	4630      	mov	r0, r6
 801e3d4:	f7ff ff93 	bl	801e2fe <__sfputs_r>
 801e3d8:	3001      	adds	r0, #1
 801e3da:	f000 80aa 	beq.w	801e532 <_vfiprintf_r+0x20e>
 801e3de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e3e0:	445a      	add	r2, fp
 801e3e2:	9209      	str	r2, [sp, #36]	; 0x24
 801e3e4:	f89a 3000 	ldrb.w	r3, [sl]
 801e3e8:	2b00      	cmp	r3, #0
 801e3ea:	f000 80a2 	beq.w	801e532 <_vfiprintf_r+0x20e>
 801e3ee:	2300      	movs	r3, #0
 801e3f0:	f04f 32ff 	mov.w	r2, #4294967295
 801e3f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801e3f8:	f10a 0a01 	add.w	sl, sl, #1
 801e3fc:	9304      	str	r3, [sp, #16]
 801e3fe:	9307      	str	r3, [sp, #28]
 801e400:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801e404:	931a      	str	r3, [sp, #104]	; 0x68
 801e406:	4654      	mov	r4, sl
 801e408:	2205      	movs	r2, #5
 801e40a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801e40e:	4858      	ldr	r0, [pc, #352]	; (801e570 <_vfiprintf_r+0x24c>)
 801e410:	f7e1 fef6 	bl	8000200 <memchr>
 801e414:	9a04      	ldr	r2, [sp, #16]
 801e416:	b9d8      	cbnz	r0, 801e450 <_vfiprintf_r+0x12c>
 801e418:	06d1      	lsls	r1, r2, #27
 801e41a:	bf44      	itt	mi
 801e41c:	2320      	movmi	r3, #32
 801e41e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801e422:	0713      	lsls	r3, r2, #28
 801e424:	bf44      	itt	mi
 801e426:	232b      	movmi	r3, #43	; 0x2b
 801e428:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801e42c:	f89a 3000 	ldrb.w	r3, [sl]
 801e430:	2b2a      	cmp	r3, #42	; 0x2a
 801e432:	d015      	beq.n	801e460 <_vfiprintf_r+0x13c>
 801e434:	9a07      	ldr	r2, [sp, #28]
 801e436:	4654      	mov	r4, sl
 801e438:	2000      	movs	r0, #0
 801e43a:	f04f 0c0a 	mov.w	ip, #10
 801e43e:	4621      	mov	r1, r4
 801e440:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e444:	3b30      	subs	r3, #48	; 0x30
 801e446:	2b09      	cmp	r3, #9
 801e448:	d94e      	bls.n	801e4e8 <_vfiprintf_r+0x1c4>
 801e44a:	b1b0      	cbz	r0, 801e47a <_vfiprintf_r+0x156>
 801e44c:	9207      	str	r2, [sp, #28]
 801e44e:	e014      	b.n	801e47a <_vfiprintf_r+0x156>
 801e450:	eba0 0308 	sub.w	r3, r0, r8
 801e454:	fa09 f303 	lsl.w	r3, r9, r3
 801e458:	4313      	orrs	r3, r2
 801e45a:	9304      	str	r3, [sp, #16]
 801e45c:	46a2      	mov	sl, r4
 801e45e:	e7d2      	b.n	801e406 <_vfiprintf_r+0xe2>
 801e460:	9b03      	ldr	r3, [sp, #12]
 801e462:	1d19      	adds	r1, r3, #4
 801e464:	681b      	ldr	r3, [r3, #0]
 801e466:	9103      	str	r1, [sp, #12]
 801e468:	2b00      	cmp	r3, #0
 801e46a:	bfbb      	ittet	lt
 801e46c:	425b      	neglt	r3, r3
 801e46e:	f042 0202 	orrlt.w	r2, r2, #2
 801e472:	9307      	strge	r3, [sp, #28]
 801e474:	9307      	strlt	r3, [sp, #28]
 801e476:	bfb8      	it	lt
 801e478:	9204      	strlt	r2, [sp, #16]
 801e47a:	7823      	ldrb	r3, [r4, #0]
 801e47c:	2b2e      	cmp	r3, #46	; 0x2e
 801e47e:	d10c      	bne.n	801e49a <_vfiprintf_r+0x176>
 801e480:	7863      	ldrb	r3, [r4, #1]
 801e482:	2b2a      	cmp	r3, #42	; 0x2a
 801e484:	d135      	bne.n	801e4f2 <_vfiprintf_r+0x1ce>
 801e486:	9b03      	ldr	r3, [sp, #12]
 801e488:	1d1a      	adds	r2, r3, #4
 801e48a:	681b      	ldr	r3, [r3, #0]
 801e48c:	9203      	str	r2, [sp, #12]
 801e48e:	2b00      	cmp	r3, #0
 801e490:	bfb8      	it	lt
 801e492:	f04f 33ff 	movlt.w	r3, #4294967295
 801e496:	3402      	adds	r4, #2
 801e498:	9305      	str	r3, [sp, #20]
 801e49a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801e580 <_vfiprintf_r+0x25c>
 801e49e:	7821      	ldrb	r1, [r4, #0]
 801e4a0:	2203      	movs	r2, #3
 801e4a2:	4650      	mov	r0, sl
 801e4a4:	f7e1 feac 	bl	8000200 <memchr>
 801e4a8:	b140      	cbz	r0, 801e4bc <_vfiprintf_r+0x198>
 801e4aa:	2340      	movs	r3, #64	; 0x40
 801e4ac:	eba0 000a 	sub.w	r0, r0, sl
 801e4b0:	fa03 f000 	lsl.w	r0, r3, r0
 801e4b4:	9b04      	ldr	r3, [sp, #16]
 801e4b6:	4303      	orrs	r3, r0
 801e4b8:	3401      	adds	r4, #1
 801e4ba:	9304      	str	r3, [sp, #16]
 801e4bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 801e4c0:	482c      	ldr	r0, [pc, #176]	; (801e574 <_vfiprintf_r+0x250>)
 801e4c2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801e4c6:	2206      	movs	r2, #6
 801e4c8:	f7e1 fe9a 	bl	8000200 <memchr>
 801e4cc:	2800      	cmp	r0, #0
 801e4ce:	d03f      	beq.n	801e550 <_vfiprintf_r+0x22c>
 801e4d0:	4b29      	ldr	r3, [pc, #164]	; (801e578 <_vfiprintf_r+0x254>)
 801e4d2:	bb1b      	cbnz	r3, 801e51c <_vfiprintf_r+0x1f8>
 801e4d4:	9b03      	ldr	r3, [sp, #12]
 801e4d6:	3307      	adds	r3, #7
 801e4d8:	f023 0307 	bic.w	r3, r3, #7
 801e4dc:	3308      	adds	r3, #8
 801e4de:	9303      	str	r3, [sp, #12]
 801e4e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e4e2:	443b      	add	r3, r7
 801e4e4:	9309      	str	r3, [sp, #36]	; 0x24
 801e4e6:	e767      	b.n	801e3b8 <_vfiprintf_r+0x94>
 801e4e8:	fb0c 3202 	mla	r2, ip, r2, r3
 801e4ec:	460c      	mov	r4, r1
 801e4ee:	2001      	movs	r0, #1
 801e4f0:	e7a5      	b.n	801e43e <_vfiprintf_r+0x11a>
 801e4f2:	2300      	movs	r3, #0
 801e4f4:	3401      	adds	r4, #1
 801e4f6:	9305      	str	r3, [sp, #20]
 801e4f8:	4619      	mov	r1, r3
 801e4fa:	f04f 0c0a 	mov.w	ip, #10
 801e4fe:	4620      	mov	r0, r4
 801e500:	f810 2b01 	ldrb.w	r2, [r0], #1
 801e504:	3a30      	subs	r2, #48	; 0x30
 801e506:	2a09      	cmp	r2, #9
 801e508:	d903      	bls.n	801e512 <_vfiprintf_r+0x1ee>
 801e50a:	2b00      	cmp	r3, #0
 801e50c:	d0c5      	beq.n	801e49a <_vfiprintf_r+0x176>
 801e50e:	9105      	str	r1, [sp, #20]
 801e510:	e7c3      	b.n	801e49a <_vfiprintf_r+0x176>
 801e512:	fb0c 2101 	mla	r1, ip, r1, r2
 801e516:	4604      	mov	r4, r0
 801e518:	2301      	movs	r3, #1
 801e51a:	e7f0      	b.n	801e4fe <_vfiprintf_r+0x1da>
 801e51c:	ab03      	add	r3, sp, #12
 801e51e:	9300      	str	r3, [sp, #0]
 801e520:	462a      	mov	r2, r5
 801e522:	4b16      	ldr	r3, [pc, #88]	; (801e57c <_vfiprintf_r+0x258>)
 801e524:	a904      	add	r1, sp, #16
 801e526:	4630      	mov	r0, r6
 801e528:	f3af 8000 	nop.w
 801e52c:	4607      	mov	r7, r0
 801e52e:	1c78      	adds	r0, r7, #1
 801e530:	d1d6      	bne.n	801e4e0 <_vfiprintf_r+0x1bc>
 801e532:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801e534:	07d9      	lsls	r1, r3, #31
 801e536:	d405      	bmi.n	801e544 <_vfiprintf_r+0x220>
 801e538:	89ab      	ldrh	r3, [r5, #12]
 801e53a:	059a      	lsls	r2, r3, #22
 801e53c:	d402      	bmi.n	801e544 <_vfiprintf_r+0x220>
 801e53e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801e540:	f000 fce4 	bl	801ef0c <__retarget_lock_release_recursive>
 801e544:	89ab      	ldrh	r3, [r5, #12]
 801e546:	065b      	lsls	r3, r3, #25
 801e548:	f53f af12 	bmi.w	801e370 <_vfiprintf_r+0x4c>
 801e54c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801e54e:	e711      	b.n	801e374 <_vfiprintf_r+0x50>
 801e550:	ab03      	add	r3, sp, #12
 801e552:	9300      	str	r3, [sp, #0]
 801e554:	462a      	mov	r2, r5
 801e556:	4b09      	ldr	r3, [pc, #36]	; (801e57c <_vfiprintf_r+0x258>)
 801e558:	a904      	add	r1, sp, #16
 801e55a:	4630      	mov	r0, r6
 801e55c:	f000 f880 	bl	801e660 <_printf_i>
 801e560:	e7e4      	b.n	801e52c <_vfiprintf_r+0x208>
 801e562:	bf00      	nop
 801e564:	08022f7c 	.word	0x08022f7c
 801e568:	08022f9c 	.word	0x08022f9c
 801e56c:	08022f5c 	.word	0x08022f5c
 801e570:	08022f24 	.word	0x08022f24
 801e574:	08022f2e 	.word	0x08022f2e
 801e578:	00000000 	.word	0x00000000
 801e57c:	0801e2ff 	.word	0x0801e2ff
 801e580:	08022f2a 	.word	0x08022f2a

0801e584 <_printf_common>:
 801e584:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e588:	4616      	mov	r6, r2
 801e58a:	4699      	mov	r9, r3
 801e58c:	688a      	ldr	r2, [r1, #8]
 801e58e:	690b      	ldr	r3, [r1, #16]
 801e590:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801e594:	4293      	cmp	r3, r2
 801e596:	bfb8      	it	lt
 801e598:	4613      	movlt	r3, r2
 801e59a:	6033      	str	r3, [r6, #0]
 801e59c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801e5a0:	4607      	mov	r7, r0
 801e5a2:	460c      	mov	r4, r1
 801e5a4:	b10a      	cbz	r2, 801e5aa <_printf_common+0x26>
 801e5a6:	3301      	adds	r3, #1
 801e5a8:	6033      	str	r3, [r6, #0]
 801e5aa:	6823      	ldr	r3, [r4, #0]
 801e5ac:	0699      	lsls	r1, r3, #26
 801e5ae:	bf42      	ittt	mi
 801e5b0:	6833      	ldrmi	r3, [r6, #0]
 801e5b2:	3302      	addmi	r3, #2
 801e5b4:	6033      	strmi	r3, [r6, #0]
 801e5b6:	6825      	ldr	r5, [r4, #0]
 801e5b8:	f015 0506 	ands.w	r5, r5, #6
 801e5bc:	d106      	bne.n	801e5cc <_printf_common+0x48>
 801e5be:	f104 0a19 	add.w	sl, r4, #25
 801e5c2:	68e3      	ldr	r3, [r4, #12]
 801e5c4:	6832      	ldr	r2, [r6, #0]
 801e5c6:	1a9b      	subs	r3, r3, r2
 801e5c8:	42ab      	cmp	r3, r5
 801e5ca:	dc26      	bgt.n	801e61a <_printf_common+0x96>
 801e5cc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801e5d0:	1e13      	subs	r3, r2, #0
 801e5d2:	6822      	ldr	r2, [r4, #0]
 801e5d4:	bf18      	it	ne
 801e5d6:	2301      	movne	r3, #1
 801e5d8:	0692      	lsls	r2, r2, #26
 801e5da:	d42b      	bmi.n	801e634 <_printf_common+0xb0>
 801e5dc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801e5e0:	4649      	mov	r1, r9
 801e5e2:	4638      	mov	r0, r7
 801e5e4:	47c0      	blx	r8
 801e5e6:	3001      	adds	r0, #1
 801e5e8:	d01e      	beq.n	801e628 <_printf_common+0xa4>
 801e5ea:	6823      	ldr	r3, [r4, #0]
 801e5ec:	68e5      	ldr	r5, [r4, #12]
 801e5ee:	6832      	ldr	r2, [r6, #0]
 801e5f0:	f003 0306 	and.w	r3, r3, #6
 801e5f4:	2b04      	cmp	r3, #4
 801e5f6:	bf08      	it	eq
 801e5f8:	1aad      	subeq	r5, r5, r2
 801e5fa:	68a3      	ldr	r3, [r4, #8]
 801e5fc:	6922      	ldr	r2, [r4, #16]
 801e5fe:	bf0c      	ite	eq
 801e600:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801e604:	2500      	movne	r5, #0
 801e606:	4293      	cmp	r3, r2
 801e608:	bfc4      	itt	gt
 801e60a:	1a9b      	subgt	r3, r3, r2
 801e60c:	18ed      	addgt	r5, r5, r3
 801e60e:	2600      	movs	r6, #0
 801e610:	341a      	adds	r4, #26
 801e612:	42b5      	cmp	r5, r6
 801e614:	d11a      	bne.n	801e64c <_printf_common+0xc8>
 801e616:	2000      	movs	r0, #0
 801e618:	e008      	b.n	801e62c <_printf_common+0xa8>
 801e61a:	2301      	movs	r3, #1
 801e61c:	4652      	mov	r2, sl
 801e61e:	4649      	mov	r1, r9
 801e620:	4638      	mov	r0, r7
 801e622:	47c0      	blx	r8
 801e624:	3001      	adds	r0, #1
 801e626:	d103      	bne.n	801e630 <_printf_common+0xac>
 801e628:	f04f 30ff 	mov.w	r0, #4294967295
 801e62c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e630:	3501      	adds	r5, #1
 801e632:	e7c6      	b.n	801e5c2 <_printf_common+0x3e>
 801e634:	18e1      	adds	r1, r4, r3
 801e636:	1c5a      	adds	r2, r3, #1
 801e638:	2030      	movs	r0, #48	; 0x30
 801e63a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801e63e:	4422      	add	r2, r4
 801e640:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801e644:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801e648:	3302      	adds	r3, #2
 801e64a:	e7c7      	b.n	801e5dc <_printf_common+0x58>
 801e64c:	2301      	movs	r3, #1
 801e64e:	4622      	mov	r2, r4
 801e650:	4649      	mov	r1, r9
 801e652:	4638      	mov	r0, r7
 801e654:	47c0      	blx	r8
 801e656:	3001      	adds	r0, #1
 801e658:	d0e6      	beq.n	801e628 <_printf_common+0xa4>
 801e65a:	3601      	adds	r6, #1
 801e65c:	e7d9      	b.n	801e612 <_printf_common+0x8e>
	...

0801e660 <_printf_i>:
 801e660:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801e664:	7e0f      	ldrb	r7, [r1, #24]
 801e666:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e668:	2f78      	cmp	r7, #120	; 0x78
 801e66a:	4691      	mov	r9, r2
 801e66c:	4680      	mov	r8, r0
 801e66e:	460c      	mov	r4, r1
 801e670:	469a      	mov	sl, r3
 801e672:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801e676:	d807      	bhi.n	801e688 <_printf_i+0x28>
 801e678:	2f62      	cmp	r7, #98	; 0x62
 801e67a:	d80a      	bhi.n	801e692 <_printf_i+0x32>
 801e67c:	2f00      	cmp	r7, #0
 801e67e:	f000 80d8 	beq.w	801e832 <_printf_i+0x1d2>
 801e682:	2f58      	cmp	r7, #88	; 0x58
 801e684:	f000 80a3 	beq.w	801e7ce <_printf_i+0x16e>
 801e688:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801e68c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801e690:	e03a      	b.n	801e708 <_printf_i+0xa8>
 801e692:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801e696:	2b15      	cmp	r3, #21
 801e698:	d8f6      	bhi.n	801e688 <_printf_i+0x28>
 801e69a:	a101      	add	r1, pc, #4	; (adr r1, 801e6a0 <_printf_i+0x40>)
 801e69c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801e6a0:	0801e6f9 	.word	0x0801e6f9
 801e6a4:	0801e70d 	.word	0x0801e70d
 801e6a8:	0801e689 	.word	0x0801e689
 801e6ac:	0801e689 	.word	0x0801e689
 801e6b0:	0801e689 	.word	0x0801e689
 801e6b4:	0801e689 	.word	0x0801e689
 801e6b8:	0801e70d 	.word	0x0801e70d
 801e6bc:	0801e689 	.word	0x0801e689
 801e6c0:	0801e689 	.word	0x0801e689
 801e6c4:	0801e689 	.word	0x0801e689
 801e6c8:	0801e689 	.word	0x0801e689
 801e6cc:	0801e819 	.word	0x0801e819
 801e6d0:	0801e73d 	.word	0x0801e73d
 801e6d4:	0801e7fb 	.word	0x0801e7fb
 801e6d8:	0801e689 	.word	0x0801e689
 801e6dc:	0801e689 	.word	0x0801e689
 801e6e0:	0801e83b 	.word	0x0801e83b
 801e6e4:	0801e689 	.word	0x0801e689
 801e6e8:	0801e73d 	.word	0x0801e73d
 801e6ec:	0801e689 	.word	0x0801e689
 801e6f0:	0801e689 	.word	0x0801e689
 801e6f4:	0801e803 	.word	0x0801e803
 801e6f8:	682b      	ldr	r3, [r5, #0]
 801e6fa:	1d1a      	adds	r2, r3, #4
 801e6fc:	681b      	ldr	r3, [r3, #0]
 801e6fe:	602a      	str	r2, [r5, #0]
 801e700:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801e704:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801e708:	2301      	movs	r3, #1
 801e70a:	e0a3      	b.n	801e854 <_printf_i+0x1f4>
 801e70c:	6820      	ldr	r0, [r4, #0]
 801e70e:	6829      	ldr	r1, [r5, #0]
 801e710:	0606      	lsls	r6, r0, #24
 801e712:	f101 0304 	add.w	r3, r1, #4
 801e716:	d50a      	bpl.n	801e72e <_printf_i+0xce>
 801e718:	680e      	ldr	r6, [r1, #0]
 801e71a:	602b      	str	r3, [r5, #0]
 801e71c:	2e00      	cmp	r6, #0
 801e71e:	da03      	bge.n	801e728 <_printf_i+0xc8>
 801e720:	232d      	movs	r3, #45	; 0x2d
 801e722:	4276      	negs	r6, r6
 801e724:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801e728:	485e      	ldr	r0, [pc, #376]	; (801e8a4 <_printf_i+0x244>)
 801e72a:	230a      	movs	r3, #10
 801e72c:	e019      	b.n	801e762 <_printf_i+0x102>
 801e72e:	680e      	ldr	r6, [r1, #0]
 801e730:	602b      	str	r3, [r5, #0]
 801e732:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e736:	bf18      	it	ne
 801e738:	b236      	sxthne	r6, r6
 801e73a:	e7ef      	b.n	801e71c <_printf_i+0xbc>
 801e73c:	682b      	ldr	r3, [r5, #0]
 801e73e:	6820      	ldr	r0, [r4, #0]
 801e740:	1d19      	adds	r1, r3, #4
 801e742:	6029      	str	r1, [r5, #0]
 801e744:	0601      	lsls	r1, r0, #24
 801e746:	d501      	bpl.n	801e74c <_printf_i+0xec>
 801e748:	681e      	ldr	r6, [r3, #0]
 801e74a:	e002      	b.n	801e752 <_printf_i+0xf2>
 801e74c:	0646      	lsls	r6, r0, #25
 801e74e:	d5fb      	bpl.n	801e748 <_printf_i+0xe8>
 801e750:	881e      	ldrh	r6, [r3, #0]
 801e752:	4854      	ldr	r0, [pc, #336]	; (801e8a4 <_printf_i+0x244>)
 801e754:	2f6f      	cmp	r7, #111	; 0x6f
 801e756:	bf0c      	ite	eq
 801e758:	2308      	moveq	r3, #8
 801e75a:	230a      	movne	r3, #10
 801e75c:	2100      	movs	r1, #0
 801e75e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801e762:	6865      	ldr	r5, [r4, #4]
 801e764:	60a5      	str	r5, [r4, #8]
 801e766:	2d00      	cmp	r5, #0
 801e768:	bfa2      	ittt	ge
 801e76a:	6821      	ldrge	r1, [r4, #0]
 801e76c:	f021 0104 	bicge.w	r1, r1, #4
 801e770:	6021      	strge	r1, [r4, #0]
 801e772:	b90e      	cbnz	r6, 801e778 <_printf_i+0x118>
 801e774:	2d00      	cmp	r5, #0
 801e776:	d04d      	beq.n	801e814 <_printf_i+0x1b4>
 801e778:	4615      	mov	r5, r2
 801e77a:	fbb6 f1f3 	udiv	r1, r6, r3
 801e77e:	fb03 6711 	mls	r7, r3, r1, r6
 801e782:	5dc7      	ldrb	r7, [r0, r7]
 801e784:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801e788:	4637      	mov	r7, r6
 801e78a:	42bb      	cmp	r3, r7
 801e78c:	460e      	mov	r6, r1
 801e78e:	d9f4      	bls.n	801e77a <_printf_i+0x11a>
 801e790:	2b08      	cmp	r3, #8
 801e792:	d10b      	bne.n	801e7ac <_printf_i+0x14c>
 801e794:	6823      	ldr	r3, [r4, #0]
 801e796:	07de      	lsls	r6, r3, #31
 801e798:	d508      	bpl.n	801e7ac <_printf_i+0x14c>
 801e79a:	6923      	ldr	r3, [r4, #16]
 801e79c:	6861      	ldr	r1, [r4, #4]
 801e79e:	4299      	cmp	r1, r3
 801e7a0:	bfde      	ittt	le
 801e7a2:	2330      	movle	r3, #48	; 0x30
 801e7a4:	f805 3c01 	strble.w	r3, [r5, #-1]
 801e7a8:	f105 35ff 	addle.w	r5, r5, #4294967295
 801e7ac:	1b52      	subs	r2, r2, r5
 801e7ae:	6122      	str	r2, [r4, #16]
 801e7b0:	f8cd a000 	str.w	sl, [sp]
 801e7b4:	464b      	mov	r3, r9
 801e7b6:	aa03      	add	r2, sp, #12
 801e7b8:	4621      	mov	r1, r4
 801e7ba:	4640      	mov	r0, r8
 801e7bc:	f7ff fee2 	bl	801e584 <_printf_common>
 801e7c0:	3001      	adds	r0, #1
 801e7c2:	d14c      	bne.n	801e85e <_printf_i+0x1fe>
 801e7c4:	f04f 30ff 	mov.w	r0, #4294967295
 801e7c8:	b004      	add	sp, #16
 801e7ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e7ce:	4835      	ldr	r0, [pc, #212]	; (801e8a4 <_printf_i+0x244>)
 801e7d0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801e7d4:	6829      	ldr	r1, [r5, #0]
 801e7d6:	6823      	ldr	r3, [r4, #0]
 801e7d8:	f851 6b04 	ldr.w	r6, [r1], #4
 801e7dc:	6029      	str	r1, [r5, #0]
 801e7de:	061d      	lsls	r5, r3, #24
 801e7e0:	d514      	bpl.n	801e80c <_printf_i+0x1ac>
 801e7e2:	07df      	lsls	r7, r3, #31
 801e7e4:	bf44      	itt	mi
 801e7e6:	f043 0320 	orrmi.w	r3, r3, #32
 801e7ea:	6023      	strmi	r3, [r4, #0]
 801e7ec:	b91e      	cbnz	r6, 801e7f6 <_printf_i+0x196>
 801e7ee:	6823      	ldr	r3, [r4, #0]
 801e7f0:	f023 0320 	bic.w	r3, r3, #32
 801e7f4:	6023      	str	r3, [r4, #0]
 801e7f6:	2310      	movs	r3, #16
 801e7f8:	e7b0      	b.n	801e75c <_printf_i+0xfc>
 801e7fa:	6823      	ldr	r3, [r4, #0]
 801e7fc:	f043 0320 	orr.w	r3, r3, #32
 801e800:	6023      	str	r3, [r4, #0]
 801e802:	2378      	movs	r3, #120	; 0x78
 801e804:	4828      	ldr	r0, [pc, #160]	; (801e8a8 <_printf_i+0x248>)
 801e806:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801e80a:	e7e3      	b.n	801e7d4 <_printf_i+0x174>
 801e80c:	0659      	lsls	r1, r3, #25
 801e80e:	bf48      	it	mi
 801e810:	b2b6      	uxthmi	r6, r6
 801e812:	e7e6      	b.n	801e7e2 <_printf_i+0x182>
 801e814:	4615      	mov	r5, r2
 801e816:	e7bb      	b.n	801e790 <_printf_i+0x130>
 801e818:	682b      	ldr	r3, [r5, #0]
 801e81a:	6826      	ldr	r6, [r4, #0]
 801e81c:	6961      	ldr	r1, [r4, #20]
 801e81e:	1d18      	adds	r0, r3, #4
 801e820:	6028      	str	r0, [r5, #0]
 801e822:	0635      	lsls	r5, r6, #24
 801e824:	681b      	ldr	r3, [r3, #0]
 801e826:	d501      	bpl.n	801e82c <_printf_i+0x1cc>
 801e828:	6019      	str	r1, [r3, #0]
 801e82a:	e002      	b.n	801e832 <_printf_i+0x1d2>
 801e82c:	0670      	lsls	r0, r6, #25
 801e82e:	d5fb      	bpl.n	801e828 <_printf_i+0x1c8>
 801e830:	8019      	strh	r1, [r3, #0]
 801e832:	2300      	movs	r3, #0
 801e834:	6123      	str	r3, [r4, #16]
 801e836:	4615      	mov	r5, r2
 801e838:	e7ba      	b.n	801e7b0 <_printf_i+0x150>
 801e83a:	682b      	ldr	r3, [r5, #0]
 801e83c:	1d1a      	adds	r2, r3, #4
 801e83e:	602a      	str	r2, [r5, #0]
 801e840:	681d      	ldr	r5, [r3, #0]
 801e842:	6862      	ldr	r2, [r4, #4]
 801e844:	2100      	movs	r1, #0
 801e846:	4628      	mov	r0, r5
 801e848:	f7e1 fcda 	bl	8000200 <memchr>
 801e84c:	b108      	cbz	r0, 801e852 <_printf_i+0x1f2>
 801e84e:	1b40      	subs	r0, r0, r5
 801e850:	6060      	str	r0, [r4, #4]
 801e852:	6863      	ldr	r3, [r4, #4]
 801e854:	6123      	str	r3, [r4, #16]
 801e856:	2300      	movs	r3, #0
 801e858:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801e85c:	e7a8      	b.n	801e7b0 <_printf_i+0x150>
 801e85e:	6923      	ldr	r3, [r4, #16]
 801e860:	462a      	mov	r2, r5
 801e862:	4649      	mov	r1, r9
 801e864:	4640      	mov	r0, r8
 801e866:	47d0      	blx	sl
 801e868:	3001      	adds	r0, #1
 801e86a:	d0ab      	beq.n	801e7c4 <_printf_i+0x164>
 801e86c:	6823      	ldr	r3, [r4, #0]
 801e86e:	079b      	lsls	r3, r3, #30
 801e870:	d413      	bmi.n	801e89a <_printf_i+0x23a>
 801e872:	68e0      	ldr	r0, [r4, #12]
 801e874:	9b03      	ldr	r3, [sp, #12]
 801e876:	4298      	cmp	r0, r3
 801e878:	bfb8      	it	lt
 801e87a:	4618      	movlt	r0, r3
 801e87c:	e7a4      	b.n	801e7c8 <_printf_i+0x168>
 801e87e:	2301      	movs	r3, #1
 801e880:	4632      	mov	r2, r6
 801e882:	4649      	mov	r1, r9
 801e884:	4640      	mov	r0, r8
 801e886:	47d0      	blx	sl
 801e888:	3001      	adds	r0, #1
 801e88a:	d09b      	beq.n	801e7c4 <_printf_i+0x164>
 801e88c:	3501      	adds	r5, #1
 801e88e:	68e3      	ldr	r3, [r4, #12]
 801e890:	9903      	ldr	r1, [sp, #12]
 801e892:	1a5b      	subs	r3, r3, r1
 801e894:	42ab      	cmp	r3, r5
 801e896:	dcf2      	bgt.n	801e87e <_printf_i+0x21e>
 801e898:	e7eb      	b.n	801e872 <_printf_i+0x212>
 801e89a:	2500      	movs	r5, #0
 801e89c:	f104 0619 	add.w	r6, r4, #25
 801e8a0:	e7f5      	b.n	801e88e <_printf_i+0x22e>
 801e8a2:	bf00      	nop
 801e8a4:	08022f35 	.word	0x08022f35
 801e8a8:	08022f46 	.word	0x08022f46

0801e8ac <_sbrk_r>:
 801e8ac:	b538      	push	{r3, r4, r5, lr}
 801e8ae:	4d06      	ldr	r5, [pc, #24]	; (801e8c8 <_sbrk_r+0x1c>)
 801e8b0:	2300      	movs	r3, #0
 801e8b2:	4604      	mov	r4, r0
 801e8b4:	4608      	mov	r0, r1
 801e8b6:	602b      	str	r3, [r5, #0]
 801e8b8:	f7e3 fb82 	bl	8001fc0 <_sbrk>
 801e8bc:	1c43      	adds	r3, r0, #1
 801e8be:	d102      	bne.n	801e8c6 <_sbrk_r+0x1a>
 801e8c0:	682b      	ldr	r3, [r5, #0]
 801e8c2:	b103      	cbz	r3, 801e8c6 <_sbrk_r+0x1a>
 801e8c4:	6023      	str	r3, [r4, #0]
 801e8c6:	bd38      	pop	{r3, r4, r5, pc}
 801e8c8:	2000d618 	.word	0x2000d618

0801e8cc <_raise_r>:
 801e8cc:	291f      	cmp	r1, #31
 801e8ce:	b538      	push	{r3, r4, r5, lr}
 801e8d0:	4604      	mov	r4, r0
 801e8d2:	460d      	mov	r5, r1
 801e8d4:	d904      	bls.n	801e8e0 <_raise_r+0x14>
 801e8d6:	2316      	movs	r3, #22
 801e8d8:	6003      	str	r3, [r0, #0]
 801e8da:	f04f 30ff 	mov.w	r0, #4294967295
 801e8de:	bd38      	pop	{r3, r4, r5, pc}
 801e8e0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801e8e2:	b112      	cbz	r2, 801e8ea <_raise_r+0x1e>
 801e8e4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801e8e8:	b94b      	cbnz	r3, 801e8fe <_raise_r+0x32>
 801e8ea:	4620      	mov	r0, r4
 801e8ec:	f000 f830 	bl	801e950 <_getpid_r>
 801e8f0:	462a      	mov	r2, r5
 801e8f2:	4601      	mov	r1, r0
 801e8f4:	4620      	mov	r0, r4
 801e8f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801e8fa:	f000 b817 	b.w	801e92c <_kill_r>
 801e8fe:	2b01      	cmp	r3, #1
 801e900:	d00a      	beq.n	801e918 <_raise_r+0x4c>
 801e902:	1c59      	adds	r1, r3, #1
 801e904:	d103      	bne.n	801e90e <_raise_r+0x42>
 801e906:	2316      	movs	r3, #22
 801e908:	6003      	str	r3, [r0, #0]
 801e90a:	2001      	movs	r0, #1
 801e90c:	e7e7      	b.n	801e8de <_raise_r+0x12>
 801e90e:	2400      	movs	r4, #0
 801e910:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801e914:	4628      	mov	r0, r5
 801e916:	4798      	blx	r3
 801e918:	2000      	movs	r0, #0
 801e91a:	e7e0      	b.n	801e8de <_raise_r+0x12>

0801e91c <raise>:
 801e91c:	4b02      	ldr	r3, [pc, #8]	; (801e928 <raise+0xc>)
 801e91e:	4601      	mov	r1, r0
 801e920:	6818      	ldr	r0, [r3, #0]
 801e922:	f7ff bfd3 	b.w	801e8cc <_raise_r>
 801e926:	bf00      	nop
 801e928:	200000d8 	.word	0x200000d8

0801e92c <_kill_r>:
 801e92c:	b538      	push	{r3, r4, r5, lr}
 801e92e:	4d07      	ldr	r5, [pc, #28]	; (801e94c <_kill_r+0x20>)
 801e930:	2300      	movs	r3, #0
 801e932:	4604      	mov	r4, r0
 801e934:	4608      	mov	r0, r1
 801e936:	4611      	mov	r1, r2
 801e938:	602b      	str	r3, [r5, #0]
 801e93a:	f7e3 fb0b 	bl	8001f54 <_kill>
 801e93e:	1c43      	adds	r3, r0, #1
 801e940:	d102      	bne.n	801e948 <_kill_r+0x1c>
 801e942:	682b      	ldr	r3, [r5, #0]
 801e944:	b103      	cbz	r3, 801e948 <_kill_r+0x1c>
 801e946:	6023      	str	r3, [r4, #0]
 801e948:	bd38      	pop	{r3, r4, r5, pc}
 801e94a:	bf00      	nop
 801e94c:	2000d618 	.word	0x2000d618

0801e950 <_getpid_r>:
 801e950:	f7e3 bafe 	b.w	8001f50 <_getpid>

0801e954 <__swbuf_r>:
 801e954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e956:	460e      	mov	r6, r1
 801e958:	4614      	mov	r4, r2
 801e95a:	4605      	mov	r5, r0
 801e95c:	b118      	cbz	r0, 801e966 <__swbuf_r+0x12>
 801e95e:	6983      	ldr	r3, [r0, #24]
 801e960:	b90b      	cbnz	r3, 801e966 <__swbuf_r+0x12>
 801e962:	f000 fa33 	bl	801edcc <__sinit>
 801e966:	4b21      	ldr	r3, [pc, #132]	; (801e9ec <__swbuf_r+0x98>)
 801e968:	429c      	cmp	r4, r3
 801e96a:	d12b      	bne.n	801e9c4 <__swbuf_r+0x70>
 801e96c:	686c      	ldr	r4, [r5, #4]
 801e96e:	69a3      	ldr	r3, [r4, #24]
 801e970:	60a3      	str	r3, [r4, #8]
 801e972:	89a3      	ldrh	r3, [r4, #12]
 801e974:	071a      	lsls	r2, r3, #28
 801e976:	d52f      	bpl.n	801e9d8 <__swbuf_r+0x84>
 801e978:	6923      	ldr	r3, [r4, #16]
 801e97a:	b36b      	cbz	r3, 801e9d8 <__swbuf_r+0x84>
 801e97c:	6923      	ldr	r3, [r4, #16]
 801e97e:	6820      	ldr	r0, [r4, #0]
 801e980:	1ac0      	subs	r0, r0, r3
 801e982:	6963      	ldr	r3, [r4, #20]
 801e984:	b2f6      	uxtb	r6, r6
 801e986:	4283      	cmp	r3, r0
 801e988:	4637      	mov	r7, r6
 801e98a:	dc04      	bgt.n	801e996 <__swbuf_r+0x42>
 801e98c:	4621      	mov	r1, r4
 801e98e:	4628      	mov	r0, r5
 801e990:	f000 f988 	bl	801eca4 <_fflush_r>
 801e994:	bb30      	cbnz	r0, 801e9e4 <__swbuf_r+0x90>
 801e996:	68a3      	ldr	r3, [r4, #8]
 801e998:	3b01      	subs	r3, #1
 801e99a:	60a3      	str	r3, [r4, #8]
 801e99c:	6823      	ldr	r3, [r4, #0]
 801e99e:	1c5a      	adds	r2, r3, #1
 801e9a0:	6022      	str	r2, [r4, #0]
 801e9a2:	701e      	strb	r6, [r3, #0]
 801e9a4:	6963      	ldr	r3, [r4, #20]
 801e9a6:	3001      	adds	r0, #1
 801e9a8:	4283      	cmp	r3, r0
 801e9aa:	d004      	beq.n	801e9b6 <__swbuf_r+0x62>
 801e9ac:	89a3      	ldrh	r3, [r4, #12]
 801e9ae:	07db      	lsls	r3, r3, #31
 801e9b0:	d506      	bpl.n	801e9c0 <__swbuf_r+0x6c>
 801e9b2:	2e0a      	cmp	r6, #10
 801e9b4:	d104      	bne.n	801e9c0 <__swbuf_r+0x6c>
 801e9b6:	4621      	mov	r1, r4
 801e9b8:	4628      	mov	r0, r5
 801e9ba:	f000 f973 	bl	801eca4 <_fflush_r>
 801e9be:	b988      	cbnz	r0, 801e9e4 <__swbuf_r+0x90>
 801e9c0:	4638      	mov	r0, r7
 801e9c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801e9c4:	4b0a      	ldr	r3, [pc, #40]	; (801e9f0 <__swbuf_r+0x9c>)
 801e9c6:	429c      	cmp	r4, r3
 801e9c8:	d101      	bne.n	801e9ce <__swbuf_r+0x7a>
 801e9ca:	68ac      	ldr	r4, [r5, #8]
 801e9cc:	e7cf      	b.n	801e96e <__swbuf_r+0x1a>
 801e9ce:	4b09      	ldr	r3, [pc, #36]	; (801e9f4 <__swbuf_r+0xa0>)
 801e9d0:	429c      	cmp	r4, r3
 801e9d2:	bf08      	it	eq
 801e9d4:	68ec      	ldreq	r4, [r5, #12]
 801e9d6:	e7ca      	b.n	801e96e <__swbuf_r+0x1a>
 801e9d8:	4621      	mov	r1, r4
 801e9da:	4628      	mov	r0, r5
 801e9dc:	f000 f80c 	bl	801e9f8 <__swsetup_r>
 801e9e0:	2800      	cmp	r0, #0
 801e9e2:	d0cb      	beq.n	801e97c <__swbuf_r+0x28>
 801e9e4:	f04f 37ff 	mov.w	r7, #4294967295
 801e9e8:	e7ea      	b.n	801e9c0 <__swbuf_r+0x6c>
 801e9ea:	bf00      	nop
 801e9ec:	08022f7c 	.word	0x08022f7c
 801e9f0:	08022f9c 	.word	0x08022f9c
 801e9f4:	08022f5c 	.word	0x08022f5c

0801e9f8 <__swsetup_r>:
 801e9f8:	4b32      	ldr	r3, [pc, #200]	; (801eac4 <__swsetup_r+0xcc>)
 801e9fa:	b570      	push	{r4, r5, r6, lr}
 801e9fc:	681d      	ldr	r5, [r3, #0]
 801e9fe:	4606      	mov	r6, r0
 801ea00:	460c      	mov	r4, r1
 801ea02:	b125      	cbz	r5, 801ea0e <__swsetup_r+0x16>
 801ea04:	69ab      	ldr	r3, [r5, #24]
 801ea06:	b913      	cbnz	r3, 801ea0e <__swsetup_r+0x16>
 801ea08:	4628      	mov	r0, r5
 801ea0a:	f000 f9df 	bl	801edcc <__sinit>
 801ea0e:	4b2e      	ldr	r3, [pc, #184]	; (801eac8 <__swsetup_r+0xd0>)
 801ea10:	429c      	cmp	r4, r3
 801ea12:	d10f      	bne.n	801ea34 <__swsetup_r+0x3c>
 801ea14:	686c      	ldr	r4, [r5, #4]
 801ea16:	89a3      	ldrh	r3, [r4, #12]
 801ea18:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ea1c:	0719      	lsls	r1, r3, #28
 801ea1e:	d42c      	bmi.n	801ea7a <__swsetup_r+0x82>
 801ea20:	06dd      	lsls	r5, r3, #27
 801ea22:	d411      	bmi.n	801ea48 <__swsetup_r+0x50>
 801ea24:	2309      	movs	r3, #9
 801ea26:	6033      	str	r3, [r6, #0]
 801ea28:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801ea2c:	81a3      	strh	r3, [r4, #12]
 801ea2e:	f04f 30ff 	mov.w	r0, #4294967295
 801ea32:	e03e      	b.n	801eab2 <__swsetup_r+0xba>
 801ea34:	4b25      	ldr	r3, [pc, #148]	; (801eacc <__swsetup_r+0xd4>)
 801ea36:	429c      	cmp	r4, r3
 801ea38:	d101      	bne.n	801ea3e <__swsetup_r+0x46>
 801ea3a:	68ac      	ldr	r4, [r5, #8]
 801ea3c:	e7eb      	b.n	801ea16 <__swsetup_r+0x1e>
 801ea3e:	4b24      	ldr	r3, [pc, #144]	; (801ead0 <__swsetup_r+0xd8>)
 801ea40:	429c      	cmp	r4, r3
 801ea42:	bf08      	it	eq
 801ea44:	68ec      	ldreq	r4, [r5, #12]
 801ea46:	e7e6      	b.n	801ea16 <__swsetup_r+0x1e>
 801ea48:	0758      	lsls	r0, r3, #29
 801ea4a:	d512      	bpl.n	801ea72 <__swsetup_r+0x7a>
 801ea4c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801ea4e:	b141      	cbz	r1, 801ea62 <__swsetup_r+0x6a>
 801ea50:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801ea54:	4299      	cmp	r1, r3
 801ea56:	d002      	beq.n	801ea5e <__swsetup_r+0x66>
 801ea58:	4630      	mov	r0, r6
 801ea5a:	f7ff fb59 	bl	801e110 <_free_r>
 801ea5e:	2300      	movs	r3, #0
 801ea60:	6363      	str	r3, [r4, #52]	; 0x34
 801ea62:	89a3      	ldrh	r3, [r4, #12]
 801ea64:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801ea68:	81a3      	strh	r3, [r4, #12]
 801ea6a:	2300      	movs	r3, #0
 801ea6c:	6063      	str	r3, [r4, #4]
 801ea6e:	6923      	ldr	r3, [r4, #16]
 801ea70:	6023      	str	r3, [r4, #0]
 801ea72:	89a3      	ldrh	r3, [r4, #12]
 801ea74:	f043 0308 	orr.w	r3, r3, #8
 801ea78:	81a3      	strh	r3, [r4, #12]
 801ea7a:	6923      	ldr	r3, [r4, #16]
 801ea7c:	b94b      	cbnz	r3, 801ea92 <__swsetup_r+0x9a>
 801ea7e:	89a3      	ldrh	r3, [r4, #12]
 801ea80:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801ea84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801ea88:	d003      	beq.n	801ea92 <__swsetup_r+0x9a>
 801ea8a:	4621      	mov	r1, r4
 801ea8c:	4630      	mov	r0, r6
 801ea8e:	f000 fa63 	bl	801ef58 <__smakebuf_r>
 801ea92:	89a0      	ldrh	r0, [r4, #12]
 801ea94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801ea98:	f010 0301 	ands.w	r3, r0, #1
 801ea9c:	d00a      	beq.n	801eab4 <__swsetup_r+0xbc>
 801ea9e:	2300      	movs	r3, #0
 801eaa0:	60a3      	str	r3, [r4, #8]
 801eaa2:	6963      	ldr	r3, [r4, #20]
 801eaa4:	425b      	negs	r3, r3
 801eaa6:	61a3      	str	r3, [r4, #24]
 801eaa8:	6923      	ldr	r3, [r4, #16]
 801eaaa:	b943      	cbnz	r3, 801eabe <__swsetup_r+0xc6>
 801eaac:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801eab0:	d1ba      	bne.n	801ea28 <__swsetup_r+0x30>
 801eab2:	bd70      	pop	{r4, r5, r6, pc}
 801eab4:	0781      	lsls	r1, r0, #30
 801eab6:	bf58      	it	pl
 801eab8:	6963      	ldrpl	r3, [r4, #20]
 801eaba:	60a3      	str	r3, [r4, #8]
 801eabc:	e7f4      	b.n	801eaa8 <__swsetup_r+0xb0>
 801eabe:	2000      	movs	r0, #0
 801eac0:	e7f7      	b.n	801eab2 <__swsetup_r+0xba>
 801eac2:	bf00      	nop
 801eac4:	200000d8 	.word	0x200000d8
 801eac8:	08022f7c 	.word	0x08022f7c
 801eacc:	08022f9c 	.word	0x08022f9c
 801ead0:	08022f5c 	.word	0x08022f5c

0801ead4 <__register_exitproc>:
 801ead4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ead8:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801eb94 <__register_exitproc+0xc0>
 801eadc:	4606      	mov	r6, r0
 801eade:	f8d8 0000 	ldr.w	r0, [r8]
 801eae2:	461f      	mov	r7, r3
 801eae4:	460d      	mov	r5, r1
 801eae6:	4691      	mov	r9, r2
 801eae8:	f000 fa0e 	bl	801ef08 <__retarget_lock_acquire_recursive>
 801eaec:	4b25      	ldr	r3, [pc, #148]	; (801eb84 <__register_exitproc+0xb0>)
 801eaee:	681c      	ldr	r4, [r3, #0]
 801eaf0:	b934      	cbnz	r4, 801eb00 <__register_exitproc+0x2c>
 801eaf2:	4c25      	ldr	r4, [pc, #148]	; (801eb88 <__register_exitproc+0xb4>)
 801eaf4:	601c      	str	r4, [r3, #0]
 801eaf6:	4b25      	ldr	r3, [pc, #148]	; (801eb8c <__register_exitproc+0xb8>)
 801eaf8:	b113      	cbz	r3, 801eb00 <__register_exitproc+0x2c>
 801eafa:	681b      	ldr	r3, [r3, #0]
 801eafc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801eb00:	6863      	ldr	r3, [r4, #4]
 801eb02:	2b1f      	cmp	r3, #31
 801eb04:	dd07      	ble.n	801eb16 <__register_exitproc+0x42>
 801eb06:	f8d8 0000 	ldr.w	r0, [r8]
 801eb0a:	f000 f9ff 	bl	801ef0c <__retarget_lock_release_recursive>
 801eb0e:	f04f 30ff 	mov.w	r0, #4294967295
 801eb12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801eb16:	b34e      	cbz	r6, 801eb6c <__register_exitproc+0x98>
 801eb18:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801eb1c:	b988      	cbnz	r0, 801eb42 <__register_exitproc+0x6e>
 801eb1e:	4b1c      	ldr	r3, [pc, #112]	; (801eb90 <__register_exitproc+0xbc>)
 801eb20:	b923      	cbnz	r3, 801eb2c <__register_exitproc+0x58>
 801eb22:	f8d8 0000 	ldr.w	r0, [r8]
 801eb26:	f000 f9f0 	bl	801ef0a <__retarget_lock_release>
 801eb2a:	e7f0      	b.n	801eb0e <__register_exitproc+0x3a>
 801eb2c:	f44f 7084 	mov.w	r0, #264	; 0x108
 801eb30:	f7ff fac8 	bl	801e0c4 <malloc>
 801eb34:	2800      	cmp	r0, #0
 801eb36:	d0f4      	beq.n	801eb22 <__register_exitproc+0x4e>
 801eb38:	2300      	movs	r3, #0
 801eb3a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801eb3e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801eb42:	6863      	ldr	r3, [r4, #4]
 801eb44:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801eb48:	2201      	movs	r2, #1
 801eb4a:	409a      	lsls	r2, r3
 801eb4c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801eb50:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801eb54:	4313      	orrs	r3, r2
 801eb56:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801eb5a:	2e02      	cmp	r6, #2
 801eb5c:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801eb60:	bf02      	ittt	eq
 801eb62:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801eb66:	4313      	orreq	r3, r2
 801eb68:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801eb6c:	6863      	ldr	r3, [r4, #4]
 801eb6e:	f8d8 0000 	ldr.w	r0, [r8]
 801eb72:	1c5a      	adds	r2, r3, #1
 801eb74:	3302      	adds	r3, #2
 801eb76:	6062      	str	r2, [r4, #4]
 801eb78:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801eb7c:	f000 f9c6 	bl	801ef0c <__retarget_lock_release_recursive>
 801eb80:	2000      	movs	r0, #0
 801eb82:	e7c6      	b.n	801eb12 <__register_exitproc+0x3e>
 801eb84:	2000d610 	.word	0x2000d610
 801eb88:	2000d584 	.word	0x2000d584
 801eb8c:	08022f58 	.word	0x08022f58
 801eb90:	0801e0c5 	.word	0x0801e0c5
 801eb94:	2000013c 	.word	0x2000013c

0801eb98 <__sflush_r>:
 801eb98:	898a      	ldrh	r2, [r1, #12]
 801eb9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801eb9e:	4605      	mov	r5, r0
 801eba0:	0710      	lsls	r0, r2, #28
 801eba2:	460c      	mov	r4, r1
 801eba4:	d458      	bmi.n	801ec58 <__sflush_r+0xc0>
 801eba6:	684b      	ldr	r3, [r1, #4]
 801eba8:	2b00      	cmp	r3, #0
 801ebaa:	dc05      	bgt.n	801ebb8 <__sflush_r+0x20>
 801ebac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801ebae:	2b00      	cmp	r3, #0
 801ebb0:	dc02      	bgt.n	801ebb8 <__sflush_r+0x20>
 801ebb2:	2000      	movs	r0, #0
 801ebb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ebb8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ebba:	2e00      	cmp	r6, #0
 801ebbc:	d0f9      	beq.n	801ebb2 <__sflush_r+0x1a>
 801ebbe:	2300      	movs	r3, #0
 801ebc0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801ebc4:	682f      	ldr	r7, [r5, #0]
 801ebc6:	602b      	str	r3, [r5, #0]
 801ebc8:	d032      	beq.n	801ec30 <__sflush_r+0x98>
 801ebca:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801ebcc:	89a3      	ldrh	r3, [r4, #12]
 801ebce:	075a      	lsls	r2, r3, #29
 801ebd0:	d505      	bpl.n	801ebde <__sflush_r+0x46>
 801ebd2:	6863      	ldr	r3, [r4, #4]
 801ebd4:	1ac0      	subs	r0, r0, r3
 801ebd6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801ebd8:	b10b      	cbz	r3, 801ebde <__sflush_r+0x46>
 801ebda:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801ebdc:	1ac0      	subs	r0, r0, r3
 801ebde:	2300      	movs	r3, #0
 801ebe0:	4602      	mov	r2, r0
 801ebe2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ebe4:	6a21      	ldr	r1, [r4, #32]
 801ebe6:	4628      	mov	r0, r5
 801ebe8:	47b0      	blx	r6
 801ebea:	1c43      	adds	r3, r0, #1
 801ebec:	89a3      	ldrh	r3, [r4, #12]
 801ebee:	d106      	bne.n	801ebfe <__sflush_r+0x66>
 801ebf0:	6829      	ldr	r1, [r5, #0]
 801ebf2:	291d      	cmp	r1, #29
 801ebf4:	d82c      	bhi.n	801ec50 <__sflush_r+0xb8>
 801ebf6:	4a2a      	ldr	r2, [pc, #168]	; (801eca0 <__sflush_r+0x108>)
 801ebf8:	40ca      	lsrs	r2, r1
 801ebfa:	07d6      	lsls	r6, r2, #31
 801ebfc:	d528      	bpl.n	801ec50 <__sflush_r+0xb8>
 801ebfe:	2200      	movs	r2, #0
 801ec00:	6062      	str	r2, [r4, #4]
 801ec02:	04d9      	lsls	r1, r3, #19
 801ec04:	6922      	ldr	r2, [r4, #16]
 801ec06:	6022      	str	r2, [r4, #0]
 801ec08:	d504      	bpl.n	801ec14 <__sflush_r+0x7c>
 801ec0a:	1c42      	adds	r2, r0, #1
 801ec0c:	d101      	bne.n	801ec12 <__sflush_r+0x7a>
 801ec0e:	682b      	ldr	r3, [r5, #0]
 801ec10:	b903      	cbnz	r3, 801ec14 <__sflush_r+0x7c>
 801ec12:	6560      	str	r0, [r4, #84]	; 0x54
 801ec14:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801ec16:	602f      	str	r7, [r5, #0]
 801ec18:	2900      	cmp	r1, #0
 801ec1a:	d0ca      	beq.n	801ebb2 <__sflush_r+0x1a>
 801ec1c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801ec20:	4299      	cmp	r1, r3
 801ec22:	d002      	beq.n	801ec2a <__sflush_r+0x92>
 801ec24:	4628      	mov	r0, r5
 801ec26:	f7ff fa73 	bl	801e110 <_free_r>
 801ec2a:	2000      	movs	r0, #0
 801ec2c:	6360      	str	r0, [r4, #52]	; 0x34
 801ec2e:	e7c1      	b.n	801ebb4 <__sflush_r+0x1c>
 801ec30:	6a21      	ldr	r1, [r4, #32]
 801ec32:	2301      	movs	r3, #1
 801ec34:	4628      	mov	r0, r5
 801ec36:	47b0      	blx	r6
 801ec38:	1c41      	adds	r1, r0, #1
 801ec3a:	d1c7      	bne.n	801ebcc <__sflush_r+0x34>
 801ec3c:	682b      	ldr	r3, [r5, #0]
 801ec3e:	2b00      	cmp	r3, #0
 801ec40:	d0c4      	beq.n	801ebcc <__sflush_r+0x34>
 801ec42:	2b1d      	cmp	r3, #29
 801ec44:	d001      	beq.n	801ec4a <__sflush_r+0xb2>
 801ec46:	2b16      	cmp	r3, #22
 801ec48:	d101      	bne.n	801ec4e <__sflush_r+0xb6>
 801ec4a:	602f      	str	r7, [r5, #0]
 801ec4c:	e7b1      	b.n	801ebb2 <__sflush_r+0x1a>
 801ec4e:	89a3      	ldrh	r3, [r4, #12]
 801ec50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801ec54:	81a3      	strh	r3, [r4, #12]
 801ec56:	e7ad      	b.n	801ebb4 <__sflush_r+0x1c>
 801ec58:	690f      	ldr	r7, [r1, #16]
 801ec5a:	2f00      	cmp	r7, #0
 801ec5c:	d0a9      	beq.n	801ebb2 <__sflush_r+0x1a>
 801ec5e:	0793      	lsls	r3, r2, #30
 801ec60:	680e      	ldr	r6, [r1, #0]
 801ec62:	bf08      	it	eq
 801ec64:	694b      	ldreq	r3, [r1, #20]
 801ec66:	600f      	str	r7, [r1, #0]
 801ec68:	bf18      	it	ne
 801ec6a:	2300      	movne	r3, #0
 801ec6c:	eba6 0807 	sub.w	r8, r6, r7
 801ec70:	608b      	str	r3, [r1, #8]
 801ec72:	f1b8 0f00 	cmp.w	r8, #0
 801ec76:	dd9c      	ble.n	801ebb2 <__sflush_r+0x1a>
 801ec78:	6a21      	ldr	r1, [r4, #32]
 801ec7a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801ec7c:	4643      	mov	r3, r8
 801ec7e:	463a      	mov	r2, r7
 801ec80:	4628      	mov	r0, r5
 801ec82:	47b0      	blx	r6
 801ec84:	2800      	cmp	r0, #0
 801ec86:	dc06      	bgt.n	801ec96 <__sflush_r+0xfe>
 801ec88:	89a3      	ldrh	r3, [r4, #12]
 801ec8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801ec8e:	81a3      	strh	r3, [r4, #12]
 801ec90:	f04f 30ff 	mov.w	r0, #4294967295
 801ec94:	e78e      	b.n	801ebb4 <__sflush_r+0x1c>
 801ec96:	4407      	add	r7, r0
 801ec98:	eba8 0800 	sub.w	r8, r8, r0
 801ec9c:	e7e9      	b.n	801ec72 <__sflush_r+0xda>
 801ec9e:	bf00      	nop
 801eca0:	20400001 	.word	0x20400001

0801eca4 <_fflush_r>:
 801eca4:	b538      	push	{r3, r4, r5, lr}
 801eca6:	690b      	ldr	r3, [r1, #16]
 801eca8:	4605      	mov	r5, r0
 801ecaa:	460c      	mov	r4, r1
 801ecac:	b913      	cbnz	r3, 801ecb4 <_fflush_r+0x10>
 801ecae:	2500      	movs	r5, #0
 801ecb0:	4628      	mov	r0, r5
 801ecb2:	bd38      	pop	{r3, r4, r5, pc}
 801ecb4:	b118      	cbz	r0, 801ecbe <_fflush_r+0x1a>
 801ecb6:	6983      	ldr	r3, [r0, #24]
 801ecb8:	b90b      	cbnz	r3, 801ecbe <_fflush_r+0x1a>
 801ecba:	f000 f887 	bl	801edcc <__sinit>
 801ecbe:	4b14      	ldr	r3, [pc, #80]	; (801ed10 <_fflush_r+0x6c>)
 801ecc0:	429c      	cmp	r4, r3
 801ecc2:	d11b      	bne.n	801ecfc <_fflush_r+0x58>
 801ecc4:	686c      	ldr	r4, [r5, #4]
 801ecc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ecca:	2b00      	cmp	r3, #0
 801eccc:	d0ef      	beq.n	801ecae <_fflush_r+0xa>
 801ecce:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801ecd0:	07d0      	lsls	r0, r2, #31
 801ecd2:	d404      	bmi.n	801ecde <_fflush_r+0x3a>
 801ecd4:	0599      	lsls	r1, r3, #22
 801ecd6:	d402      	bmi.n	801ecde <_fflush_r+0x3a>
 801ecd8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ecda:	f000 f915 	bl	801ef08 <__retarget_lock_acquire_recursive>
 801ecde:	4628      	mov	r0, r5
 801ece0:	4621      	mov	r1, r4
 801ece2:	f7ff ff59 	bl	801eb98 <__sflush_r>
 801ece6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801ece8:	07da      	lsls	r2, r3, #31
 801ecea:	4605      	mov	r5, r0
 801ecec:	d4e0      	bmi.n	801ecb0 <_fflush_r+0xc>
 801ecee:	89a3      	ldrh	r3, [r4, #12]
 801ecf0:	059b      	lsls	r3, r3, #22
 801ecf2:	d4dd      	bmi.n	801ecb0 <_fflush_r+0xc>
 801ecf4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ecf6:	f000 f909 	bl	801ef0c <__retarget_lock_release_recursive>
 801ecfa:	e7d9      	b.n	801ecb0 <_fflush_r+0xc>
 801ecfc:	4b05      	ldr	r3, [pc, #20]	; (801ed14 <_fflush_r+0x70>)
 801ecfe:	429c      	cmp	r4, r3
 801ed00:	d101      	bne.n	801ed06 <_fflush_r+0x62>
 801ed02:	68ac      	ldr	r4, [r5, #8]
 801ed04:	e7df      	b.n	801ecc6 <_fflush_r+0x22>
 801ed06:	4b04      	ldr	r3, [pc, #16]	; (801ed18 <_fflush_r+0x74>)
 801ed08:	429c      	cmp	r4, r3
 801ed0a:	bf08      	it	eq
 801ed0c:	68ec      	ldreq	r4, [r5, #12]
 801ed0e:	e7da      	b.n	801ecc6 <_fflush_r+0x22>
 801ed10:	08022f7c 	.word	0x08022f7c
 801ed14:	08022f9c 	.word	0x08022f9c
 801ed18:	08022f5c 	.word	0x08022f5c

0801ed1c <std>:
 801ed1c:	2300      	movs	r3, #0
 801ed1e:	b510      	push	{r4, lr}
 801ed20:	4604      	mov	r4, r0
 801ed22:	e9c0 3300 	strd	r3, r3, [r0]
 801ed26:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ed2a:	6083      	str	r3, [r0, #8]
 801ed2c:	8181      	strh	r1, [r0, #12]
 801ed2e:	6643      	str	r3, [r0, #100]	; 0x64
 801ed30:	81c2      	strh	r2, [r0, #14]
 801ed32:	6183      	str	r3, [r0, #24]
 801ed34:	4619      	mov	r1, r3
 801ed36:	2208      	movs	r2, #8
 801ed38:	305c      	adds	r0, #92	; 0x5c
 801ed3a:	f7ff f9e1 	bl	801e100 <memset>
 801ed3e:	4b05      	ldr	r3, [pc, #20]	; (801ed54 <std+0x38>)
 801ed40:	6263      	str	r3, [r4, #36]	; 0x24
 801ed42:	4b05      	ldr	r3, [pc, #20]	; (801ed58 <std+0x3c>)
 801ed44:	62a3      	str	r3, [r4, #40]	; 0x28
 801ed46:	4b05      	ldr	r3, [pc, #20]	; (801ed5c <std+0x40>)
 801ed48:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ed4a:	4b05      	ldr	r3, [pc, #20]	; (801ed60 <std+0x44>)
 801ed4c:	6224      	str	r4, [r4, #32]
 801ed4e:	6323      	str	r3, [r4, #48]	; 0x30
 801ed50:	bd10      	pop	{r4, pc}
 801ed52:	bf00      	nop
 801ed54:	0801eff1 	.word	0x0801eff1
 801ed58:	0801f013 	.word	0x0801f013
 801ed5c:	0801f04b 	.word	0x0801f04b
 801ed60:	0801f06f 	.word	0x0801f06f

0801ed64 <_cleanup_r>:
 801ed64:	4901      	ldr	r1, [pc, #4]	; (801ed6c <_cleanup_r+0x8>)
 801ed66:	f000 b8af 	b.w	801eec8 <_fwalk_reent>
 801ed6a:	bf00      	nop
 801ed6c:	0801eca5 	.word	0x0801eca5

0801ed70 <__sfmoreglue>:
 801ed70:	b570      	push	{r4, r5, r6, lr}
 801ed72:	2268      	movs	r2, #104	; 0x68
 801ed74:	1e4d      	subs	r5, r1, #1
 801ed76:	4355      	muls	r5, r2
 801ed78:	460e      	mov	r6, r1
 801ed7a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ed7e:	f7ff fa33 	bl	801e1e8 <_malloc_r>
 801ed82:	4604      	mov	r4, r0
 801ed84:	b140      	cbz	r0, 801ed98 <__sfmoreglue+0x28>
 801ed86:	2100      	movs	r1, #0
 801ed88:	e9c0 1600 	strd	r1, r6, [r0]
 801ed8c:	300c      	adds	r0, #12
 801ed8e:	60a0      	str	r0, [r4, #8]
 801ed90:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801ed94:	f7ff f9b4 	bl	801e100 <memset>
 801ed98:	4620      	mov	r0, r4
 801ed9a:	bd70      	pop	{r4, r5, r6, pc}

0801ed9c <__sfp_lock_acquire>:
 801ed9c:	4801      	ldr	r0, [pc, #4]	; (801eda4 <__sfp_lock_acquire+0x8>)
 801ed9e:	f000 b8b3 	b.w	801ef08 <__retarget_lock_acquire_recursive>
 801eda2:	bf00      	nop
 801eda4:	2000d616 	.word	0x2000d616

0801eda8 <__sfp_lock_release>:
 801eda8:	4801      	ldr	r0, [pc, #4]	; (801edb0 <__sfp_lock_release+0x8>)
 801edaa:	f000 b8af 	b.w	801ef0c <__retarget_lock_release_recursive>
 801edae:	bf00      	nop
 801edb0:	2000d616 	.word	0x2000d616

0801edb4 <__sinit_lock_acquire>:
 801edb4:	4801      	ldr	r0, [pc, #4]	; (801edbc <__sinit_lock_acquire+0x8>)
 801edb6:	f000 b8a7 	b.w	801ef08 <__retarget_lock_acquire_recursive>
 801edba:	bf00      	nop
 801edbc:	2000d617 	.word	0x2000d617

0801edc0 <__sinit_lock_release>:
 801edc0:	4801      	ldr	r0, [pc, #4]	; (801edc8 <__sinit_lock_release+0x8>)
 801edc2:	f000 b8a3 	b.w	801ef0c <__retarget_lock_release_recursive>
 801edc6:	bf00      	nop
 801edc8:	2000d617 	.word	0x2000d617

0801edcc <__sinit>:
 801edcc:	b510      	push	{r4, lr}
 801edce:	4604      	mov	r4, r0
 801edd0:	f7ff fff0 	bl	801edb4 <__sinit_lock_acquire>
 801edd4:	69a3      	ldr	r3, [r4, #24]
 801edd6:	b11b      	cbz	r3, 801ede0 <__sinit+0x14>
 801edd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eddc:	f7ff bff0 	b.w	801edc0 <__sinit_lock_release>
 801ede0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801ede4:	6523      	str	r3, [r4, #80]	; 0x50
 801ede6:	4b13      	ldr	r3, [pc, #76]	; (801ee34 <__sinit+0x68>)
 801ede8:	4a13      	ldr	r2, [pc, #76]	; (801ee38 <__sinit+0x6c>)
 801edea:	681b      	ldr	r3, [r3, #0]
 801edec:	62a2      	str	r2, [r4, #40]	; 0x28
 801edee:	42a3      	cmp	r3, r4
 801edf0:	bf04      	itt	eq
 801edf2:	2301      	moveq	r3, #1
 801edf4:	61a3      	streq	r3, [r4, #24]
 801edf6:	4620      	mov	r0, r4
 801edf8:	f000 f820 	bl	801ee3c <__sfp>
 801edfc:	6060      	str	r0, [r4, #4]
 801edfe:	4620      	mov	r0, r4
 801ee00:	f000 f81c 	bl	801ee3c <__sfp>
 801ee04:	60a0      	str	r0, [r4, #8]
 801ee06:	4620      	mov	r0, r4
 801ee08:	f000 f818 	bl	801ee3c <__sfp>
 801ee0c:	2200      	movs	r2, #0
 801ee0e:	60e0      	str	r0, [r4, #12]
 801ee10:	2104      	movs	r1, #4
 801ee12:	6860      	ldr	r0, [r4, #4]
 801ee14:	f7ff ff82 	bl	801ed1c <std>
 801ee18:	68a0      	ldr	r0, [r4, #8]
 801ee1a:	2201      	movs	r2, #1
 801ee1c:	2109      	movs	r1, #9
 801ee1e:	f7ff ff7d 	bl	801ed1c <std>
 801ee22:	68e0      	ldr	r0, [r4, #12]
 801ee24:	2202      	movs	r2, #2
 801ee26:	2112      	movs	r1, #18
 801ee28:	f7ff ff78 	bl	801ed1c <std>
 801ee2c:	2301      	movs	r3, #1
 801ee2e:	61a3      	str	r3, [r4, #24]
 801ee30:	e7d2      	b.n	801edd8 <__sinit+0xc>
 801ee32:	bf00      	nop
 801ee34:	08022f20 	.word	0x08022f20
 801ee38:	0801ed65 	.word	0x0801ed65

0801ee3c <__sfp>:
 801ee3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ee3e:	4607      	mov	r7, r0
 801ee40:	f7ff ffac 	bl	801ed9c <__sfp_lock_acquire>
 801ee44:	4b1e      	ldr	r3, [pc, #120]	; (801eec0 <__sfp+0x84>)
 801ee46:	681e      	ldr	r6, [r3, #0]
 801ee48:	69b3      	ldr	r3, [r6, #24]
 801ee4a:	b913      	cbnz	r3, 801ee52 <__sfp+0x16>
 801ee4c:	4630      	mov	r0, r6
 801ee4e:	f7ff ffbd 	bl	801edcc <__sinit>
 801ee52:	3648      	adds	r6, #72	; 0x48
 801ee54:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801ee58:	3b01      	subs	r3, #1
 801ee5a:	d503      	bpl.n	801ee64 <__sfp+0x28>
 801ee5c:	6833      	ldr	r3, [r6, #0]
 801ee5e:	b30b      	cbz	r3, 801eea4 <__sfp+0x68>
 801ee60:	6836      	ldr	r6, [r6, #0]
 801ee62:	e7f7      	b.n	801ee54 <__sfp+0x18>
 801ee64:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801ee68:	b9d5      	cbnz	r5, 801eea0 <__sfp+0x64>
 801ee6a:	4b16      	ldr	r3, [pc, #88]	; (801eec4 <__sfp+0x88>)
 801ee6c:	60e3      	str	r3, [r4, #12]
 801ee6e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801ee72:	6665      	str	r5, [r4, #100]	; 0x64
 801ee74:	f000 f847 	bl	801ef06 <__retarget_lock_init_recursive>
 801ee78:	f7ff ff96 	bl	801eda8 <__sfp_lock_release>
 801ee7c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801ee80:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801ee84:	6025      	str	r5, [r4, #0]
 801ee86:	61a5      	str	r5, [r4, #24]
 801ee88:	2208      	movs	r2, #8
 801ee8a:	4629      	mov	r1, r5
 801ee8c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801ee90:	f7ff f936 	bl	801e100 <memset>
 801ee94:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801ee98:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801ee9c:	4620      	mov	r0, r4
 801ee9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801eea0:	3468      	adds	r4, #104	; 0x68
 801eea2:	e7d9      	b.n	801ee58 <__sfp+0x1c>
 801eea4:	2104      	movs	r1, #4
 801eea6:	4638      	mov	r0, r7
 801eea8:	f7ff ff62 	bl	801ed70 <__sfmoreglue>
 801eeac:	4604      	mov	r4, r0
 801eeae:	6030      	str	r0, [r6, #0]
 801eeb0:	2800      	cmp	r0, #0
 801eeb2:	d1d5      	bne.n	801ee60 <__sfp+0x24>
 801eeb4:	f7ff ff78 	bl	801eda8 <__sfp_lock_release>
 801eeb8:	230c      	movs	r3, #12
 801eeba:	603b      	str	r3, [r7, #0]
 801eebc:	e7ee      	b.n	801ee9c <__sfp+0x60>
 801eebe:	bf00      	nop
 801eec0:	08022f20 	.word	0x08022f20
 801eec4:	ffff0001 	.word	0xffff0001

0801eec8 <_fwalk_reent>:
 801eec8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801eecc:	4606      	mov	r6, r0
 801eece:	4688      	mov	r8, r1
 801eed0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801eed4:	2700      	movs	r7, #0
 801eed6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801eeda:	f1b9 0901 	subs.w	r9, r9, #1
 801eede:	d505      	bpl.n	801eeec <_fwalk_reent+0x24>
 801eee0:	6824      	ldr	r4, [r4, #0]
 801eee2:	2c00      	cmp	r4, #0
 801eee4:	d1f7      	bne.n	801eed6 <_fwalk_reent+0xe>
 801eee6:	4638      	mov	r0, r7
 801eee8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801eeec:	89ab      	ldrh	r3, [r5, #12]
 801eeee:	2b01      	cmp	r3, #1
 801eef0:	d907      	bls.n	801ef02 <_fwalk_reent+0x3a>
 801eef2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801eef6:	3301      	adds	r3, #1
 801eef8:	d003      	beq.n	801ef02 <_fwalk_reent+0x3a>
 801eefa:	4629      	mov	r1, r5
 801eefc:	4630      	mov	r0, r6
 801eefe:	47c0      	blx	r8
 801ef00:	4307      	orrs	r7, r0
 801ef02:	3568      	adds	r5, #104	; 0x68
 801ef04:	e7e9      	b.n	801eeda <_fwalk_reent+0x12>

0801ef06 <__retarget_lock_init_recursive>:
 801ef06:	4770      	bx	lr

0801ef08 <__retarget_lock_acquire_recursive>:
 801ef08:	4770      	bx	lr

0801ef0a <__retarget_lock_release>:
 801ef0a:	4770      	bx	lr

0801ef0c <__retarget_lock_release_recursive>:
 801ef0c:	4770      	bx	lr

0801ef0e <__swhatbuf_r>:
 801ef0e:	b570      	push	{r4, r5, r6, lr}
 801ef10:	460e      	mov	r6, r1
 801ef12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ef16:	2900      	cmp	r1, #0
 801ef18:	b096      	sub	sp, #88	; 0x58
 801ef1a:	4614      	mov	r4, r2
 801ef1c:	461d      	mov	r5, r3
 801ef1e:	da08      	bge.n	801ef32 <__swhatbuf_r+0x24>
 801ef20:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801ef24:	2200      	movs	r2, #0
 801ef26:	602a      	str	r2, [r5, #0]
 801ef28:	061a      	lsls	r2, r3, #24
 801ef2a:	d410      	bmi.n	801ef4e <__swhatbuf_r+0x40>
 801ef2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ef30:	e00e      	b.n	801ef50 <__swhatbuf_r+0x42>
 801ef32:	466a      	mov	r2, sp
 801ef34:	f000 f8c2 	bl	801f0bc <_fstat_r>
 801ef38:	2800      	cmp	r0, #0
 801ef3a:	dbf1      	blt.n	801ef20 <__swhatbuf_r+0x12>
 801ef3c:	9a01      	ldr	r2, [sp, #4]
 801ef3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801ef42:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801ef46:	425a      	negs	r2, r3
 801ef48:	415a      	adcs	r2, r3
 801ef4a:	602a      	str	r2, [r5, #0]
 801ef4c:	e7ee      	b.n	801ef2c <__swhatbuf_r+0x1e>
 801ef4e:	2340      	movs	r3, #64	; 0x40
 801ef50:	2000      	movs	r0, #0
 801ef52:	6023      	str	r3, [r4, #0]
 801ef54:	b016      	add	sp, #88	; 0x58
 801ef56:	bd70      	pop	{r4, r5, r6, pc}

0801ef58 <__smakebuf_r>:
 801ef58:	898b      	ldrh	r3, [r1, #12]
 801ef5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ef5c:	079d      	lsls	r5, r3, #30
 801ef5e:	4606      	mov	r6, r0
 801ef60:	460c      	mov	r4, r1
 801ef62:	d507      	bpl.n	801ef74 <__smakebuf_r+0x1c>
 801ef64:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801ef68:	6023      	str	r3, [r4, #0]
 801ef6a:	6123      	str	r3, [r4, #16]
 801ef6c:	2301      	movs	r3, #1
 801ef6e:	6163      	str	r3, [r4, #20]
 801ef70:	b002      	add	sp, #8
 801ef72:	bd70      	pop	{r4, r5, r6, pc}
 801ef74:	ab01      	add	r3, sp, #4
 801ef76:	466a      	mov	r2, sp
 801ef78:	f7ff ffc9 	bl	801ef0e <__swhatbuf_r>
 801ef7c:	9900      	ldr	r1, [sp, #0]
 801ef7e:	4605      	mov	r5, r0
 801ef80:	4630      	mov	r0, r6
 801ef82:	f7ff f931 	bl	801e1e8 <_malloc_r>
 801ef86:	b948      	cbnz	r0, 801ef9c <__smakebuf_r+0x44>
 801ef88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ef8c:	059a      	lsls	r2, r3, #22
 801ef8e:	d4ef      	bmi.n	801ef70 <__smakebuf_r+0x18>
 801ef90:	f023 0303 	bic.w	r3, r3, #3
 801ef94:	f043 0302 	orr.w	r3, r3, #2
 801ef98:	81a3      	strh	r3, [r4, #12]
 801ef9a:	e7e3      	b.n	801ef64 <__smakebuf_r+0xc>
 801ef9c:	4b0d      	ldr	r3, [pc, #52]	; (801efd4 <__smakebuf_r+0x7c>)
 801ef9e:	62b3      	str	r3, [r6, #40]	; 0x28
 801efa0:	89a3      	ldrh	r3, [r4, #12]
 801efa2:	6020      	str	r0, [r4, #0]
 801efa4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801efa8:	81a3      	strh	r3, [r4, #12]
 801efaa:	9b00      	ldr	r3, [sp, #0]
 801efac:	6163      	str	r3, [r4, #20]
 801efae:	9b01      	ldr	r3, [sp, #4]
 801efb0:	6120      	str	r0, [r4, #16]
 801efb2:	b15b      	cbz	r3, 801efcc <__smakebuf_r+0x74>
 801efb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801efb8:	4630      	mov	r0, r6
 801efba:	f000 f891 	bl	801f0e0 <_isatty_r>
 801efbe:	b128      	cbz	r0, 801efcc <__smakebuf_r+0x74>
 801efc0:	89a3      	ldrh	r3, [r4, #12]
 801efc2:	f023 0303 	bic.w	r3, r3, #3
 801efc6:	f043 0301 	orr.w	r3, r3, #1
 801efca:	81a3      	strh	r3, [r4, #12]
 801efcc:	89a0      	ldrh	r0, [r4, #12]
 801efce:	4305      	orrs	r5, r0
 801efd0:	81a5      	strh	r5, [r4, #12]
 801efd2:	e7cd      	b.n	801ef70 <__smakebuf_r+0x18>
 801efd4:	0801ed65 	.word	0x0801ed65

0801efd8 <__malloc_lock>:
 801efd8:	4801      	ldr	r0, [pc, #4]	; (801efe0 <__malloc_lock+0x8>)
 801efda:	f7ff bf95 	b.w	801ef08 <__retarget_lock_acquire_recursive>
 801efde:	bf00      	nop
 801efe0:	2000d615 	.word	0x2000d615

0801efe4 <__malloc_unlock>:
 801efe4:	4801      	ldr	r0, [pc, #4]	; (801efec <__malloc_unlock+0x8>)
 801efe6:	f7ff bf91 	b.w	801ef0c <__retarget_lock_release_recursive>
 801efea:	bf00      	nop
 801efec:	2000d615 	.word	0x2000d615

0801eff0 <__sread>:
 801eff0:	b510      	push	{r4, lr}
 801eff2:	460c      	mov	r4, r1
 801eff4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801eff8:	f000 f894 	bl	801f124 <_read_r>
 801effc:	2800      	cmp	r0, #0
 801effe:	bfab      	itete	ge
 801f000:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801f002:	89a3      	ldrhlt	r3, [r4, #12]
 801f004:	181b      	addge	r3, r3, r0
 801f006:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801f00a:	bfac      	ite	ge
 801f00c:	6563      	strge	r3, [r4, #84]	; 0x54
 801f00e:	81a3      	strhlt	r3, [r4, #12]
 801f010:	bd10      	pop	{r4, pc}

0801f012 <__swrite>:
 801f012:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f016:	461f      	mov	r7, r3
 801f018:	898b      	ldrh	r3, [r1, #12]
 801f01a:	05db      	lsls	r3, r3, #23
 801f01c:	4605      	mov	r5, r0
 801f01e:	460c      	mov	r4, r1
 801f020:	4616      	mov	r6, r2
 801f022:	d505      	bpl.n	801f030 <__swrite+0x1e>
 801f024:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f028:	2302      	movs	r3, #2
 801f02a:	2200      	movs	r2, #0
 801f02c:	f000 f868 	bl	801f100 <_lseek_r>
 801f030:	89a3      	ldrh	r3, [r4, #12]
 801f032:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f036:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801f03a:	81a3      	strh	r3, [r4, #12]
 801f03c:	4632      	mov	r2, r6
 801f03e:	463b      	mov	r3, r7
 801f040:	4628      	mov	r0, r5
 801f042:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801f046:	f000 b817 	b.w	801f078 <_write_r>

0801f04a <__sseek>:
 801f04a:	b510      	push	{r4, lr}
 801f04c:	460c      	mov	r4, r1
 801f04e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f052:	f000 f855 	bl	801f100 <_lseek_r>
 801f056:	1c43      	adds	r3, r0, #1
 801f058:	89a3      	ldrh	r3, [r4, #12]
 801f05a:	bf15      	itete	ne
 801f05c:	6560      	strne	r0, [r4, #84]	; 0x54
 801f05e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801f062:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801f066:	81a3      	strheq	r3, [r4, #12]
 801f068:	bf18      	it	ne
 801f06a:	81a3      	strhne	r3, [r4, #12]
 801f06c:	bd10      	pop	{r4, pc}

0801f06e <__sclose>:
 801f06e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f072:	f000 b813 	b.w	801f09c <_close_r>
	...

0801f078 <_write_r>:
 801f078:	b538      	push	{r3, r4, r5, lr}
 801f07a:	4d07      	ldr	r5, [pc, #28]	; (801f098 <_write_r+0x20>)
 801f07c:	4604      	mov	r4, r0
 801f07e:	4608      	mov	r0, r1
 801f080:	4611      	mov	r1, r2
 801f082:	2200      	movs	r2, #0
 801f084:	602a      	str	r2, [r5, #0]
 801f086:	461a      	mov	r2, r3
 801f088:	f7e2 ff80 	bl	8001f8c <_write>
 801f08c:	1c43      	adds	r3, r0, #1
 801f08e:	d102      	bne.n	801f096 <_write_r+0x1e>
 801f090:	682b      	ldr	r3, [r5, #0]
 801f092:	b103      	cbz	r3, 801f096 <_write_r+0x1e>
 801f094:	6023      	str	r3, [r4, #0]
 801f096:	bd38      	pop	{r3, r4, r5, pc}
 801f098:	2000d618 	.word	0x2000d618

0801f09c <_close_r>:
 801f09c:	b538      	push	{r3, r4, r5, lr}
 801f09e:	4d06      	ldr	r5, [pc, #24]	; (801f0b8 <_close_r+0x1c>)
 801f0a0:	2300      	movs	r3, #0
 801f0a2:	4604      	mov	r4, r0
 801f0a4:	4608      	mov	r0, r1
 801f0a6:	602b      	str	r3, [r5, #0]
 801f0a8:	f7e2 ff7e 	bl	8001fa8 <_close>
 801f0ac:	1c43      	adds	r3, r0, #1
 801f0ae:	d102      	bne.n	801f0b6 <_close_r+0x1a>
 801f0b0:	682b      	ldr	r3, [r5, #0]
 801f0b2:	b103      	cbz	r3, 801f0b6 <_close_r+0x1a>
 801f0b4:	6023      	str	r3, [r4, #0]
 801f0b6:	bd38      	pop	{r3, r4, r5, pc}
 801f0b8:	2000d618 	.word	0x2000d618

0801f0bc <_fstat_r>:
 801f0bc:	b538      	push	{r3, r4, r5, lr}
 801f0be:	4d07      	ldr	r5, [pc, #28]	; (801f0dc <_fstat_r+0x20>)
 801f0c0:	2300      	movs	r3, #0
 801f0c2:	4604      	mov	r4, r0
 801f0c4:	4608      	mov	r0, r1
 801f0c6:	4611      	mov	r1, r2
 801f0c8:	602b      	str	r3, [r5, #0]
 801f0ca:	f7e2 ff70 	bl	8001fae <_fstat>
 801f0ce:	1c43      	adds	r3, r0, #1
 801f0d0:	d102      	bne.n	801f0d8 <_fstat_r+0x1c>
 801f0d2:	682b      	ldr	r3, [r5, #0]
 801f0d4:	b103      	cbz	r3, 801f0d8 <_fstat_r+0x1c>
 801f0d6:	6023      	str	r3, [r4, #0]
 801f0d8:	bd38      	pop	{r3, r4, r5, pc}
 801f0da:	bf00      	nop
 801f0dc:	2000d618 	.word	0x2000d618

0801f0e0 <_isatty_r>:
 801f0e0:	b538      	push	{r3, r4, r5, lr}
 801f0e2:	4d06      	ldr	r5, [pc, #24]	; (801f0fc <_isatty_r+0x1c>)
 801f0e4:	2300      	movs	r3, #0
 801f0e6:	4604      	mov	r4, r0
 801f0e8:	4608      	mov	r0, r1
 801f0ea:	602b      	str	r3, [r5, #0]
 801f0ec:	f7e2 ff64 	bl	8001fb8 <_isatty>
 801f0f0:	1c43      	adds	r3, r0, #1
 801f0f2:	d102      	bne.n	801f0fa <_isatty_r+0x1a>
 801f0f4:	682b      	ldr	r3, [r5, #0]
 801f0f6:	b103      	cbz	r3, 801f0fa <_isatty_r+0x1a>
 801f0f8:	6023      	str	r3, [r4, #0]
 801f0fa:	bd38      	pop	{r3, r4, r5, pc}
 801f0fc:	2000d618 	.word	0x2000d618

0801f100 <_lseek_r>:
 801f100:	b538      	push	{r3, r4, r5, lr}
 801f102:	4d07      	ldr	r5, [pc, #28]	; (801f120 <_lseek_r+0x20>)
 801f104:	4604      	mov	r4, r0
 801f106:	4608      	mov	r0, r1
 801f108:	4611      	mov	r1, r2
 801f10a:	2200      	movs	r2, #0
 801f10c:	602a      	str	r2, [r5, #0]
 801f10e:	461a      	mov	r2, r3
 801f110:	f7e2 ff54 	bl	8001fbc <_lseek>
 801f114:	1c43      	adds	r3, r0, #1
 801f116:	d102      	bne.n	801f11e <_lseek_r+0x1e>
 801f118:	682b      	ldr	r3, [r5, #0]
 801f11a:	b103      	cbz	r3, 801f11e <_lseek_r+0x1e>
 801f11c:	6023      	str	r3, [r4, #0]
 801f11e:	bd38      	pop	{r3, r4, r5, pc}
 801f120:	2000d618 	.word	0x2000d618

0801f124 <_read_r>:
 801f124:	b538      	push	{r3, r4, r5, lr}
 801f126:	4d07      	ldr	r5, [pc, #28]	; (801f144 <_read_r+0x20>)
 801f128:	4604      	mov	r4, r0
 801f12a:	4608      	mov	r0, r1
 801f12c:	4611      	mov	r1, r2
 801f12e:	2200      	movs	r2, #0
 801f130:	602a      	str	r2, [r5, #0]
 801f132:	461a      	mov	r2, r3
 801f134:	f7e2 ff1c 	bl	8001f70 <_read>
 801f138:	1c43      	adds	r3, r0, #1
 801f13a:	d102      	bne.n	801f142 <_read_r+0x1e>
 801f13c:	682b      	ldr	r3, [r5, #0]
 801f13e:	b103      	cbz	r3, 801f142 <_read_r+0x1e>
 801f140:	6023      	str	r3, [r4, #0]
 801f142:	bd38      	pop	{r3, r4, r5, pc}
 801f144:	2000d618 	.word	0x2000d618

0801f148 <_init>:
 801f148:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f14a:	bf00      	nop
 801f14c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801f14e:	bc08      	pop	{r3}
 801f150:	469e      	mov	lr, r3
 801f152:	4770      	bx	lr

0801f154 <_fini>:
 801f154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f156:	bf00      	nop
 801f158:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801f15a:	bc08      	pop	{r3}
 801f15c:	469e      	mov	lr, r3
 801f15e:	4770      	bx	lr
