
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000203ac  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00004534  0802056c  0802056c  0003056c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000001c  08024aa0  08024aa0  00034aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08024abc  08024abc  00a2bab8  2**0
                  CONTENTS
  5 .ARM          00000008  08024abc  08024abc  00034abc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08024ac4  08024ac4  00a2bab8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08024ac4  08024ac4  00034ac4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08024adc  08024adc  00034adc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08024ae4  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000d590  20000140  08024c24  00040140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000d6d0  08024c24  0004d6d0  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00a2bab8  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 009d98e8  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 0000215c  909d98e8  909d98e8  00a298e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000074  909dba44  909dba44  00a2ba44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00057c26  00000000  00000000  00a2bae8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000daaba  00000000  00000000  00a8370e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00018a2e  00000000  00000000  00b5e1c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002f38  00000000  00000000  00b76bf8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    001310d4  00000000  00000000  00b79b30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00005820  00000000  00000000  00caac08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0002ac46  00000000  00000000  00cb0428  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003a4e2  00000000  00000000  00cdb06e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00d15550  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00008968  00000000  00000000  00d15620  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08020554 	.word	0x08020554

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	08020554 	.word	0x08020554

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f004 fe9d 	bl	800530c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f01e ff59 	bl	801f488 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff85 	bl	80014e4 <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	08024ae4 	.word	0x08024ae4
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000d6d0 	.word	0x2000d6d0

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf5 	b.w	80011e4 <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be65 	b.w	80012c8 <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f004 b9eb 	b.w	80049dc <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f004 ba22 	b.w	8004a50 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f01e fe9f 	bl	801f396 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f01e fe5e 	bl	801f396 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f01e fe56 	bl	801f396 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f004 fd59 	bl	80051b0 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2124      	movs	r1, #36	; 0x24
 8000716:	f01e fe6d 	bl	801f3f4 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	080205f8 	.word	0x080205f8
 8000724:	0802060b 	.word	0x0802060b
 8000728:	08020635 	.word	0x08020635

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f004 fd71 	bl	8005220 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	b110      	cbz	r0, 8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000762:	2801      	cmp	r0, #1
 8000764:	d009      	beq.n	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000766:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000768:	4b08      	ldr	r3, [pc, #32]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800076a:	4809      	ldr	r0, [pc, #36]	; (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	f005 beff 	b.w	8006578 <HAL_GPIO_WritePin>
 800077a:	4b04      	ldr	r3, [pc, #16]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800077c:	4805      	ldr	r0, [pc, #20]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2110      	movs	r1, #16
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800078a:	bf00      	nop
 800078c:	20000164 	.word	0x20000164
 8000790:	40021800 	.word	0x40021800
 8000794:	40020c00 	.word	0x40020c00

08000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000798:	b110      	cbz	r0, 80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079a:	2801      	cmp	r0, #1
 800079c:	d009      	beq.n	80007b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800079e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a0:	4b08      	ldr	r3, [pc, #32]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a2:	4809      	ldr	r0, [pc, #36]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 80007a4:	681a      	ldr	r2, [r3, #0]
 80007a6:	3a00      	subs	r2, #0
 80007a8:	bf18      	it	ne
 80007aa:	2201      	movne	r2, #1
 80007ac:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007ae:	f005 bee3 	b.w	8006578 <HAL_GPIO_WritePin>
 80007b2:	4b04      	ldr	r3, [pc, #16]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b4:	4805      	ldr	r0, [pc, #20]	; (80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007b6:	685a      	ldr	r2, [r3, #4]
 80007b8:	3a00      	subs	r2, #0
 80007ba:	bf18      	it	ne
 80007bc:	2201      	movne	r2, #1
 80007be:	2110      	movs	r1, #16
 80007c0:	e7f5      	b.n	80007ae <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007c2:	bf00      	nop
 80007c4:	20000164 	.word	0x20000164
 80007c8:	40021800 	.word	0x40021800
 80007cc:	40020c00 	.word	0x40020c00

080007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007d0:	b110      	cbz	r0, 80007d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007d2:	2801      	cmp	r0, #1
 80007d4:	d004      	beq.n	80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d8:	4803      	ldr	r0, [pc, #12]	; (80007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007da:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007dc:	f005 bed1 	b.w	8006582 <HAL_GPIO_TogglePin>
 80007e0:	4802      	ldr	r0, [pc, #8]	; (80007ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007e2:	2110      	movs	r1, #16
 80007e4:	e7fa      	b.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007e6:	bf00      	nop
 80007e8:	40021800 	.word	0x40021800
 80007ec:	40020c00 	.word	0x40020c00

080007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007f2:	b130      	cbz	r0, 8000802 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007f4:	2801      	cmp	r0, #1
 80007f6:	d009      	beq.n	800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007f8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007fa:	1e43      	subs	r3, r0, #1
 80007fc:	4258      	negs	r0, r3
 80007fe:	4158      	adcs	r0, r3
 8000800:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	4804      	ldr	r0, [pc, #16]	; (8000814 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 8000804:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000806:	f005 feb1 	bl	800656c <HAL_GPIO_ReadPin>
        break;
 800080a:	e7f6      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080c:	4802      	ldr	r0, [pc, #8]	; (8000818 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 800080e:	2110      	movs	r1, #16
 8000810:	e7f9      	b.n	8000806 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000812:	bf00      	nop
 8000814:	40021800 	.word	0x40021800
 8000818:	40020c00 	.word	0x40020c00

0800081c <_ZN8touchgfx4GPIO4initEv>:
{
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4d08      	ldr	r5, [pc, #32]	; (8000840 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000820:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000822:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000824:	b2e0      	uxtb	r0, r4
 8000826:	f7ff ffe3 	bl	80007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800082a:	b118      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000830:	bf18      	it	ne
 8000832:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000834:	3401      	adds	r4, #1
 8000836:	2c05      	cmp	r4, #5
 8000838:	f105 0504 	add.w	r5, r5, #4
 800083c:	d1f2      	bne.n	8000824 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800083e:	bd70      	pop	{r4, r5, r6, pc}
 8000840:	20000164 	.word	0x20000164

08000844 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000844:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000846:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800084a:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 800084e:	4770      	bx	lr

08000850 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000850:	2000      	movs	r0, #0
 8000852:	4770      	bx	lr

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {

    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {

    }
 8000872:	4770      	bx	lr

08000874 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000874:	4b01      	ldr	r3, [pc, #4]	; (800087c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8000876:	6818      	ldr	r0, [r3, #0]
 8000878:	4770      	bx	lr
 800087a:	bf00      	nop
 800087c:	20000174 	.word	0x20000174

08000880 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000880:	4770      	bx	lr
	...

08000884 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000884:	6803      	ldr	r3, [r0, #0]
{
 8000886:	4604      	mov	r4, r0
 8000888:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800088a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800088c:	4798      	blx	r3
    enableInterrupts();
 800088e:	6823      	ldr	r3, [r4, #0]
 8000890:	4620      	mov	r0, r4
 8000892:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000894:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000896:	f000 fa35 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800089a:	6823      	ldr	r3, [r4, #0]
 800089c:	4620      	mov	r0, r4
 800089e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008a0:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008a2:	2100      	movs	r1, #0
 80008a4:	4806      	ldr	r0, [pc, #24]	; (80008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008a6:	9100      	str	r1, [sp, #0]
 80008a8:	2329      	movs	r3, #41	; 0x29
 80008aa:	2215      	movs	r2, #21
 80008ac:	f005 fc4b 	bl	8006146 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008b0:	f000 fa28 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008b4:	6823      	ldr	r3, [r4, #0]
 80008b6:	4620      	mov	r0, r4
 80008b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008ba:	4798      	blx	r3
    for (;;)
 80008bc:	e7f8      	b.n	80008b0 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008be:	bf00      	nop
 80008c0:	20004228 	.word	0x20004228

080008c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c4:	b510      	push	{r4, lr}
 80008c6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008c8:	f00a ff04 	bl	800b6d4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008cc:	6823      	ldr	r3, [r4, #0]
 80008ce:	4620      	mov	r0, r4
 80008d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80008d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008d8:	4718      	bx	r3

080008da <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008da:	f000 bd76 	b.w	80013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008de <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008de:	f000 bd75 	b.w	80013cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008e2 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80008e2:	f00a ba9e 	b.w	800ae22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080008e6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008e6:	f000 bd5f 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ea <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ea:	f000 bd65 	b.w	80013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008ee <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008ee:	f000 bd6f 	b.w	80013d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080008f4 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80008f4:	4b02      	ldr	r3, [pc, #8]	; (8000900 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80008fa:	f00a b97d 	b.w	800abf8 <_ZN8touchgfx3HAL10beginFrameEv>
 80008fe:	bf00      	nop
 8000900:	20000014 	.word	0x20000014

08000904 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000904:	b510      	push	{r4, lr}
 8000906:	4604      	mov	r4, r0
    HAL::endFrame();
 8000908:	f00a f982 	bl	800ac10 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800090c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000910:	b113      	cbz	r3, 8000918 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000912:	4b02      	ldr	r3, [pc, #8]	; (800091c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000914:	2201      	movs	r2, #1
 8000916:	701a      	strb	r2, [r3, #0]
    }
}
 8000918:	bd10      	pop	{r4, pc}
 800091a:	bf00      	nop
 800091c:	20000014 	.word	0x20000014

08000920 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000920:	f00a b952 	b.w	800abc8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000924 <_ZN11TouchGFXHALD0Ev>:
 8000924:	b510      	push	{r4, lr}
 8000926:	217c      	movs	r1, #124	; 0x7c
 8000928:	4604      	mov	r4, r0
 800092a:	f01e fd34 	bl	801f396 <_ZdlPvj>
 800092e:	4620      	mov	r0, r4
 8000930:	bd10      	pop	{r4, pc}

08000932 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000932:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000936:	b11b      	cbz	r3, 8000940 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000938:	6840      	ldr	r0, [r0, #4]
 800093a:	6803      	ldr	r3, [r0, #0]
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	4718      	bx	r3
    }
 8000940:	4618      	mov	r0, r3
 8000942:	4770      	bx	lr

08000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000944:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000946:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800094a:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800094e:	4b10      	ldr	r3, [pc, #64]	; (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000950:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000952:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000954:	d00d      	beq.n	8000972 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 8000956:	b95a      	cbnz	r2, 8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000958:	4a0e      	ldr	r2, [pc, #56]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 800095a:	490f      	ldr	r1, [pc, #60]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800095c:	480f      	ldr	r0, [pc, #60]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800095e:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000960:	4d0f      	ldr	r5, [pc, #60]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000962:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000964:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 8000966:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000968:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800096a:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 800096c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800096e:	701a      	strb	r2, [r3, #0]
    }
 8000970:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000972:	2a00      	cmp	r2, #0
 8000974:	d0fc      	beq.n	8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8000976:	4809      	ldr	r0, [pc, #36]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 8000978:	4a07      	ldr	r2, [pc, #28]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 800097a:	8801      	ldrh	r1, [r0, #0]
 800097c:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800097e:	4a05      	ldr	r2, [pc, #20]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000980:	4d07      	ldr	r5, [pc, #28]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000982:	8814      	ldrh	r4, [r2, #0]
 8000984:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8000986:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8000988:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800098a:	2200      	movs	r2, #0
 800098c:	e7ef      	b.n	800096e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 800098e:	bf00      	nop
 8000990:	2000d404 	.word	0x2000d404
 8000994:	2000d400 	.word	0x2000d400
 8000998:	2000d406 	.word	0x2000d406
 800099c:	2000d402 	.word	0x2000d402
 80009a0:	2000d408 	.word	0x2000d408

080009a4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009a4:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009a6:	4c0c      	ldr	r4, [pc, #48]	; (80009d8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009a8:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009aa:	b931      	cbnz	r1, 80009ba <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009ac:	4b0b      	ldr	r3, [pc, #44]	; (80009dc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009ae:	4a0c      	ldr	r2, [pc, #48]	; (80009e0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009b0:	480c      	ldr	r0, [pc, #48]	; (80009e4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009b2:	f240 216b 	movw	r1, #619	; 0x26b
 80009b6:	f01e fd1d 	bl	801f3f4 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ba:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009be:	3a00      	subs	r2, #0
 80009c0:	4909      	ldr	r1, [pc, #36]	; (80009e8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009c2:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009c4:	bf18      	it	ne
 80009c6:	2201      	movne	r2, #1
 80009c8:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009ca:	3b00      	subs	r3, #0
 80009cc:	4a07      	ldr	r2, [pc, #28]	; (80009ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009ce:	bf18      	it	ne
 80009d0:	2301      	movne	r3, #1
 80009d2:	7013      	strb	r3, [r2, #0]
}
 80009d4:	bd10      	pop	{r4, pc}
 80009d6:	bf00      	nop
 80009d8:	20000174 	.word	0x20000174
 80009dc:	0802069c 	.word	0x0802069c
 80009e0:	080206d4 	.word	0x080206d4
 80009e4:	08020722 	.word	0x08020722
 80009e8:	2000d40a 	.word	0x2000d40a
 80009ec:	2000d40b 	.word	0x2000d40b

080009f0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80009f0:	b538      	push	{r3, r4, r5, lr}
 80009f2:	4604      	mov	r4, r0
    mcuInstr.init();
 80009f4:	4d09      	ldr	r5, [pc, #36]	; (8000a1c <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80009f6:	f7ff ff11 	bl	800081c <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80009fa:	4620      	mov	r0, r4
 80009fc:	f000 fcf4 	bl	80013e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000a00:	2300      	movs	r3, #0
 8000a02:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8000a06:	4628      	mov	r0, r5
 8000a08:	f7ff fe04 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8000a12:	4b03      	ldr	r3, [pc, #12]	; (8000a20 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000a14:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000a16:	6163      	str	r3, [r4, #20]
}
 8000a18:	bd38      	pop	{r3, r4, r5, pc}
 8000a1a:	bf00      	nop
 8000a1c:	20000180 	.word	0x20000180
 8000a20:	2000017c 	.word	0x2000017c

08000a24 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a24:	2801      	cmp	r0, #1
    {
 8000a26:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a28:	d80a      	bhi.n	8000a40 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a2a:	784b      	ldrb	r3, [r1, #1]
 8000a2c:	9300      	str	r3, [sp, #0]
 8000a2e:	780b      	ldrb	r3, [r1, #0]
 8000a30:	4808      	ldr	r0, [pc, #32]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a32:	2215      	movs	r2, #21
 8000a34:	2100      	movs	r1, #0
 8000a36:	f005 fb86 	bl	8006146 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a3a:	b003      	add	sp, #12
 8000a3c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a40:	9101      	str	r1, [sp, #4]
 8000a42:	5c0b      	ldrb	r3, [r1, r0]
 8000a44:	9300      	str	r3, [sp, #0]
 8000a46:	2239      	movs	r2, #57	; 0x39
 8000a48:	4603      	mov	r3, r0
 8000a4a:	2100      	movs	r1, #0
 8000a4c:	4801      	ldr	r0, [pc, #4]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a4e:	f005 fb8b 	bl	8006168 <HAL_DSI_LongWrite>
    }
 8000a52:	e7f2      	b.n	8000a3a <DSI_IO_WriteCmd+0x16>
 8000a54:	20004228 	.word	0x20004228

08000a58 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a58:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a5a:	4a0b      	ldr	r2, [pc, #44]	; (8000a88 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5c:	4c0b      	ldr	r4, [pc, #44]	; (8000a8c <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a5e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a60:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a62:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a64:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a66:	9201      	str	r2, [sp, #4]
 8000a68:	2244      	movs	r2, #68	; 0x44
 8000a6a:	9200      	str	r2, [sp, #0]
 8000a6c:	2100      	movs	r1, #0
 8000a6e:	2239      	movs	r2, #57	; 0x39
 8000a70:	4620      	mov	r0, r4
 8000a72:	f005 fb79 	bl	8006168 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a76:	2100      	movs	r1, #0
 8000a78:	9100      	str	r1, [sp, #0]
 8000a7a:	2335      	movs	r3, #53	; 0x35
 8000a7c:	462a      	mov	r2, r5
 8000a7e:	4620      	mov	r0, r4
 8000a80:	f005 fb61 	bl	8006146 <HAL_DSI_ShortWrite>
    }
 8000a84:	b003      	add	sp, #12
 8000a86:	bd30      	pop	{r4, r5, pc}
 8000a88:	2000018c 	.word	0x2000018c
 8000a8c:	20004228 	.word	0x20004228

08000a90 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a90:	b507      	push	{r0, r1, r2, lr}
 8000a92:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a94:	f7ff ffe0 	bl	8000a58 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a98:	9801      	ldr	r0, [sp, #4]
}
 8000a9a:	b003      	add	sp, #12
 8000a9c:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000aa0:	f000 bc92 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000aa4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000aa4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000aa6:	4b07      	ldr	r3, [pc, #28]	; (8000ac4 <LCD_SetUpdateRegion+0x20>)
 8000aa8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aac:	232a      	movs	r3, #42	; 0x2a
 8000aae:	9001      	str	r0, [sp, #4]
 8000ab0:	9300      	str	r3, [sp, #0]
 8000ab2:	2239      	movs	r2, #57	; 0x39
 8000ab4:	2304      	movs	r3, #4
 8000ab6:	2100      	movs	r1, #0
 8000ab8:	4803      	ldr	r0, [pc, #12]	; (8000ac8 <LCD_SetUpdateRegion+0x24>)
 8000aba:	f005 fb55 	bl	8006168 <HAL_DSI_LongWrite>
    }
 8000abe:	b003      	add	sp, #12
 8000ac0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ac4:	20000004 	.word	0x20000004
 8000ac8:	20004228 	.word	0x20004228

08000acc <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000acc:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ace:	4d15      	ldr	r5, [pc, #84]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ad0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ad2:	2000      	movs	r0, #0
 8000ad4:	f7ff fe44 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000ad8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ada:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ade:	3301      	adds	r3, #1
 8000ae0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ae4:	f000 f902 	bl	8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000ae8:	4b0f      	ldr	r3, [pc, #60]	; (8000b28 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000aea:	6828      	ldr	r0, [r5, #0]
 8000aec:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000aee:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000af0:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000af4:	b123      	cbz	r3, 8000b00 <HAL_DSI_TearingEffectCallback+0x34>
 8000af6:	4d0d      	ldr	r5, [pc, #52]	; (8000b2c <HAL_DSI_TearingEffectCallback+0x60>)
 8000af8:	782b      	ldrb	r3, [r5, #0]
 8000afa:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000afe:	b123      	cbz	r3, 8000b0a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b04:	2000      	movs	r0, #0
 8000b06:	f7ff be47 	b.w	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b0a:	f00a fde3 	bl	800b6d4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b0e:	4b08      	ldr	r3, [pc, #32]	; (8000b30 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b10:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b12:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b14:	f7ff ffc6 	bl	8000aa4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b18:	4620      	mov	r0, r4
 8000b1a:	f005 fb04 	bl	8006126 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b1e:	2301      	movs	r3, #1
 8000b20:	702b      	strb	r3, [r5, #0]
    }
 8000b22:	bd70      	pop	{r4, r5, r6, pc}
 8000b24:	2000d40c 	.word	0x2000d40c
 8000b28:	20000014 	.word	0x20000014
 8000b2c:	2000018e 	.word	0x2000018e
 8000b30:	20000178 	.word	0x20000178

08000b34 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b34:	4b33      	ldr	r3, [pc, #204]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b36:	681a      	ldr	r2, [r3, #0]
 8000b38:	3201      	adds	r2, #1
    {
 8000b3a:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000b3c:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b3e:	4b32      	ldr	r3, [pc, #200]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b40:	4c32      	ldr	r4, [pc, #200]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b42:	6819      	ldr	r1, [r3, #0]
 8000b44:	4b32      	ldr	r3, [pc, #200]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000b46:	2a03      	cmp	r2, #3
    {
 8000b48:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000b4a:	dc2e      	bgt.n	8000baa <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000b50:	f020 0008 	bic.w	r0, r0, #8
 8000b54:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b58:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000b5c:	fb00 1102 	mla	r1, r0, r2, r1
 8000b60:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b64:	bf0c      	ite	eq
 8000b66:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b68:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b6a:	3302      	adds	r3, #2
 8000b6c:	4928      	ldr	r1, [pc, #160]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b6e:	041b      	lsls	r3, r3, #16
 8000b70:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b74:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b76:	4b27      	ldr	r3, [pc, #156]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000b78:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b7a:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b7e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b82:	4b25      	ldr	r3, [pc, #148]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000b84:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b88:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000b8a:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b8c:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b8e:	f7ff ff89 	bl	8000aa4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b92:	4a1e      	ldr	r2, [pc, #120]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b94:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b98:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b9c:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b9e:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000ba2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000ba6:	f005 babe 	b.w	8006126 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000baa:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000bae:	f022 0208 	bic.w	r2, r2, #8
 8000bb2:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bb6:	4a19      	ldr	r2, [pc, #100]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bb8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bbc:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bbe:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000bc2:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bc4:	4a16      	ldr	r2, [pc, #88]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bc6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bca:	4a13      	ldr	r2, [pc, #76]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bcc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bd0:	2201      	movs	r2, #1
 8000bd2:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	f7ff ff65 	bl	8000aa4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bda:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bde:	f043 0308 	orr.w	r3, r3, #8
 8000be2:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000be6:	2000      	movs	r0, #0
 8000be8:	f7ff fdd6 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bec:	4b0d      	ldr	r3, [pc, #52]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bf2:	4b0d      	ldr	r3, [pc, #52]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000bf4:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bf6:	b120      	cbz	r0, 8000c02 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000bf8:	6803      	ldr	r3, [r0, #0]
    }
 8000bfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000bfe:	699b      	ldr	r3, [r3, #24]
 8000c00:	4718      	bx	r3
 8000c02:	bd70      	pop	{r4, r5, r6, pc}
 8000c04:	20000178 	.word	0x20000178
 8000c08:	20000174 	.word	0x20000174
 8000c0c:	40016c00 	.word	0x40016c00
 8000c10:	40016800 	.word	0x40016800
 8000c14:	00ca01e3 	.word	0x00ca01e3
 8000c18:	06800193 	.word	0x06800193
 8000c1c:	00ca01e2 	.word	0x00ca01e2
 8000c20:	00ca0003 	.word	0x00ca0003
 8000c24:	2000018e 	.word	0x2000018e
 8000c28:	2000d40c 	.word	0x2000d40c

08000c2c <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c2c:	b508      	push	{r3, lr}
        return instance;
 8000c2e:	4b04      	ldr	r3, [pc, #16]	; (8000c40 <IdleTaskHook+0x14>)
 8000c30:	4601      	mov	r1, r0
 8000c32:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c34:	b101      	cbz	r1, 8000c38 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c36:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c38:	f00a fd66 	bl	800b708 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c3c:	2001      	movs	r0, #1
 8000c3e:	bd08      	pop	{r3, pc}
 8000c40:	2000d40c 	.word	0x2000d40c

08000c44 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c44:	4b05      	ldr	r3, [pc, #20]	; (8000c5c <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c46:	4806      	ldr	r0, [pc, #24]	; (8000c60 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	605a      	str	r2, [r3, #4]
 8000c4c:	609a      	str	r2, [r3, #8]
 8000c4e:	4a05      	ldr	r2, [pc, #20]	; (8000c64 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c50:	601a      	str	r2, [r3, #0]
 8000c52:	4b05      	ldr	r3, [pc, #20]	; (8000c68 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c54:	6003      	str	r3, [r0, #0]
        init();
 8000c56:	f7ff bd13 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000c5a:	bf00      	nop
 8000c5c:	20000180 	.word	0x20000180
 8000c60:	2000017c 	.word	0x2000017c
 8000c64:	080205bc 	.word	0x080205bc
 8000c68:	080205e4 	.word	0x080205e4

08000c6c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c6c:	2101      	movs	r1, #1
{
 8000c6e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c70:	2200      	movs	r2, #0
 8000c72:	4608      	mov	r0, r1
 8000c74:	f007 fc7e 	bl	8008574 <osSemaphoreNew>
 8000c78:	4b0a      	ldr	r3, [pc, #40]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c7a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c7c:	b928      	cbnz	r0, 8000c8a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c7e:	4b0a      	ldr	r3, [pc, #40]	; (8000ca8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c80:	4a0a      	ldr	r2, [pc, #40]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c82:	2125      	movs	r1, #37	; 0x25

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	480a      	ldr	r0, [pc, #40]	; (8000cb0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c86:	f01e fbb5 	bl	801f3f4 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2104      	movs	r1, #4
 8000c8e:	2001      	movs	r0, #1
 8000c90:	f007 fd36 	bl	8008700 <osMessageQueueNew>
 8000c94:	4b07      	ldr	r3, [pc, #28]	; (8000cb4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c96:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c98:	b918      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c9a:	4b07      	ldr	r3, [pc, #28]	; (8000cb8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c9c:	4a03      	ldr	r2, [pc, #12]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9e:	2129      	movs	r1, #41	; 0x29
 8000ca0:	e7f0      	b.n	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ca2:	bd08      	pop	{r3, pc}
 8000ca4:	20000194 	.word	0x20000194
 8000ca8:	08020824 	.word	0x08020824
 8000cac:	0802086d 	.word	0x0802086d
 8000cb0:	0802089c 	.word	0x0802089c
 8000cb4:	20000190 	.word	0x20000190
 8000cb8:	080208ea 	.word	0x080208ea

08000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cbc:	4b02      	ldr	r3, [pc, #8]	; (8000cc8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cbe:	f04f 31ff 	mov.w	r1, #4294967295
 8000cc2:	6818      	ldr	r0, [r3, #0]
 8000cc4:	f007 bcac 	b.w	8008620 <osSemaphoreAcquire>
 8000cc8:	20000194 	.word	0x20000194

08000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ccc:	4b01      	ldr	r3, [pc, #4]	; (8000cd4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cce:	6818      	ldr	r0, [r3, #0]
 8000cd0:	f007 bce0 	b.w	8008694 <osSemaphoreRelease>
 8000cd4:	20000194 	.word	0x20000194

08000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cd8:	4b02      	ldr	r3, [pc, #8]	; (8000ce4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cda:	2100      	movs	r1, #0
 8000cdc:	6818      	ldr	r0, [r3, #0]
 8000cde:	f007 bc9f 	b.w	8008620 <osSemaphoreAcquire>
 8000ce2:	bf00      	nop
 8000ce4:	20000194 	.word	0x20000194

08000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ce8:	f7ff bff0 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cec:	4803      	ldr	r0, [pc, #12]	; (8000cfc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cee:	4904      	ldr	r1, [pc, #16]	; (8000d00 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cf0:	6800      	ldr	r0, [r0, #0]
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	f007 bd49 	b.w	800878c <osMessageQueuePut>
 8000cfa:	bf00      	nop
 8000cfc:	20000190 	.word	0x20000190
 8000d00:	20000018 	.word	0x20000018

08000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d04:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d06:	4c08      	ldr	r4, [pc, #32]	; (8000d28 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d08:	2300      	movs	r3, #0
 8000d0a:	461a      	mov	r2, r3
 8000d0c:	a901      	add	r1, sp, #4
 8000d0e:	6820      	ldr	r0, [r4, #0]
 8000d10:	f007 fd7e 	bl	8008810 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d14:	6820      	ldr	r0, [r4, #0]
 8000d16:	f04f 33ff 	mov.w	r3, #4294967295
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	a901      	add	r1, sp, #4
 8000d1e:	f007 fd77 	bl	8008810 <osMessageQueueGet>
}
 8000d22:	b002      	add	sp, #8
 8000d24:	bd10      	pop	{r4, pc}
 8000d26:	bf00      	nop
 8000d28:	20000190 	.word	0x20000190

08000d2c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d2c:	6803      	ldr	r3, [r0, #0]
 8000d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d30:	4718      	bx	r3

08000d32 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000d32:	2000      	movs	r0, #0
 8000d34:	4770      	bx	lr

08000d36 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d36:	6803      	ldr	r3, [r0, #0]
 8000d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d3a:	4718      	bx	r3

08000d3c <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d3c:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000d40:	4770      	bx	lr
	...

08000d44 <_ZN10STM32F4DMA10initializeEv>:
{
 8000d44:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000d46:	4c07      	ldr	r4, [pc, #28]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000d48:	4b07      	ldr	r3, [pc, #28]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000d4a:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000d4c:	4620      	mov	r0, r4
 8000d4e:	f004 fce7 	bl	8005720 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b06      	ldr	r3, [pc, #24]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000d54:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000d56:	4b06      	ldr	r3, [pc, #24]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000d58:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5a:	4b06      	ldr	r3, [pc, #24]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000d5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d60:	609a      	str	r2, [r3, #8]
}
 8000d62:	bd10      	pop	{r4, pc}
 8000d64:	200041e8 	.word	0x200041e8
 8000d68:	4002b000 	.word	0x4002b000
 8000d6c:	08000ddd 	.word	0x08000ddd
 8000d70:	08000d79 	.word	0x08000d79
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <DMA2D_XferErrorCallback>:
    {
 8000d78:	b508      	push	{r3, lr}
        assert(0);
 8000d7a:	4a03      	ldr	r2, [pc, #12]	; (8000d88 <DMA2D_XferErrorCallback+0x10>)
 8000d7c:	4b03      	ldr	r3, [pc, #12]	; (8000d8c <DMA2D_XferErrorCallback+0x14>)
 8000d7e:	4804      	ldr	r0, [pc, #16]	; (8000d90 <DMA2D_XferErrorCallback+0x18>)
 8000d80:	2136      	movs	r1, #54	; 0x36
 8000d82:	f01e fb37 	bl	801f3f4 <__assert_func>
 8000d86:	bf00      	nop
 8000d88:	0802092c 	.word	0x0802092c
 8000d8c:	080240a6 	.word	0x080240a6
 8000d90:	0802095f 	.word	0x0802095f

08000d94 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000d94:	4b08      	ldr	r3, [pc, #32]	; (8000db8 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000d96:	b510      	push	{r4, lr}
 8000d98:	6003      	str	r3, [r0, #0]
 8000d9a:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000d9c:	4807      	ldr	r0, [pc, #28]	; (8000dbc <_ZN10STM32F4DMAD1Ev+0x28>)
 8000d9e:	f004 fd89 	bl	80058b4 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000da2:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000da4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000da8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000dac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000db0:	f3bf 8f6f 	isb	sy
}
 8000db4:	4620      	mov	r0, r4
 8000db6:	bd10      	pop	{r4, pc}
 8000db8:	080209b4 	.word	0x080209b4
 8000dbc:	200041e8 	.word	0x200041e8
 8000dc0:	e000e100 	.word	0xe000e100

08000dc4 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000dc4:	b510      	push	{r4, lr}
 8000dc6:	4604      	mov	r4, r0
}
 8000dc8:	f7ff ffe4 	bl	8000d94 <_ZN10STM32F4DMAD1Ev>
 8000dcc:	4620      	mov	r0, r4
 8000dce:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000dd2:	f01e fae0 	bl	801f396 <_ZdlPvj>
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	bd10      	pop	{r4, pc}
	...

08000ddc <DMA2D_XferCpltCallback>:
 8000ddc:	4b02      	ldr	r3, [pc, #8]	; (8000de8 <DMA2D_XferCpltCallback+0xc>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000de2:	6803      	ldr	r3, [r0, #0]
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	4718      	bx	r3
 8000de8:	2000d40c 	.word	0x2000d40c

08000dec <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000dec:	4b04      	ldr	r3, [pc, #16]	; (8000e00 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000df4:	b10a      	cbz	r2, 8000dfa <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000df6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000df8:	b900      	cbnz	r0, 8000dfc <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000dfa:	6898      	ldr	r0, [r3, #8]
    }
 8000dfc:	4770      	bx	lr
 8000dfe:	bf00      	nop
 8000e00:	2000d40c 	.word	0x2000d40c

08000e04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000e08:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0a:	2d20      	cmp	r5, #32
{
 8000e0c:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0e:	f000 809c 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000e12:	2d40      	cmp	r5, #64	; 0x40
 8000e14:	f000 8099 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e18:	1f2a      	subs	r2, r5, #4
 8000e1a:	4256      	negs	r6, r2
 8000e1c:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000e1e:	2d80      	cmp	r5, #128	; 0x80
 8000e20:	f000 8095 	beq.w	8000f4e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14a>
 8000e24:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000e28:	425d      	negs	r5, r3
 8000e2a:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e2c:	f7ff ffde 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000e30:	6803      	ldr	r3, [r0, #0]
 8000e32:	69db      	ldr	r3, [r3, #28]
 8000e34:	4798      	blx	r3

    switch (blitOp.operation)
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	2b80      	cmp	r3, #128	; 0x80
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e3a:	4684      	mov	ip, r0
    switch (blitOp.operation)
 8000e3c:	f000 8096 	beq.w	8000f6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
 8000e40:	f200 8087 	bhi.w	8000f52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
 8000e44:	2b20      	cmp	r3, #32
 8000e46:	f000 8093 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e4a:	2b40      	cmp	r3, #64	; 0x40
 8000e4c:	f000 8090 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e50:	2b04      	cmp	r3, #4
 8000e52:	f000 8084 	beq.w	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000e56:	f1bc 0f10 	cmp.w	ip, #16
 8000e5a:	bf0c      	ite	eq
 8000e5c:	2102      	moveq	r1, #2
 8000e5e:	2101      	movne	r1, #1
 8000e60:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e62:	4b4a      	ldr	r3, [pc, #296]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e64:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e68:	f8d3 e000 	ldr.w	lr, [r3]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e6c:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e6e:	f8de 9000 	ldr.w	r9, [lr]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e72:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e74:	f1bc 0f10 	cmp.w	ip, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e78:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e7c:	bf0c      	ite	eq
 8000e7e:	2002      	moveq	r0, #2
 8000e80:	2001      	movne	r0, #1
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e82:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e86:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e8a:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e8c:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e8e:	f8ce 2000 	str.w	r2, [lr]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e92:	f8de 2034 	ldr.w	r2, [lr, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000e96:	62d9      	str	r1, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e98:	f022 0207 	bic.w	r2, r2, #7
 8000e9c:	4302      	orrs	r2, r0
 8000e9e:	f8ce 2034 	str.w	r2, [lr, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000ea2:	f8de 2040 	ldr.w	r2, [lr, #64]	; 0x40
 8000ea6:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000eaa:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000eae:	433a      	orrs	r2, r7
 8000eb0:	f8ce 2040 	str.w	r2, [lr, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000eb4:	8aa2      	ldrh	r2, [r4, #20]
 8000eb6:	eba2 0208 	sub.w	r2, r2, r8
 8000eba:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000ebc:	b906      	cbnz	r6, 8000ec0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000ebe:	b38d      	cbz	r5, 8000f24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
    {
        if (blitOp.alpha < 255)
 8000ec0:	7f22      	ldrb	r2, [r4, #28]
 8000ec2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000ec4:	bf15      	itete	ne
 8000ec6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ec8:	2100      	moveq	r1, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000eca:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ece:	6319      	streq	r1, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000ed0:	b315      	cbz	r5, 8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        {
            if (bitDepth == 16)
 8000ed2:	f1bc 0f10 	cmp.w	ip, #16
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ed6:	69a1      	ldr	r1, [r4, #24]
 8000ed8:	ea4f 6e02 	mov.w	lr, r2, lsl #24
 8000edc:	d14a      	bne.n	8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ede:	f04f 081f 	mov.w	r8, #31
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000ee2:	ea01 0208 	and.w	r2, r1, r8
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ee6:	f3c1 2cc4 	ubfx	ip, r1, #11, #5
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000eea:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000eee:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ef2:	ea42 020e 	orr.w	r2, r2, lr
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ef6:	ebcc 2c0c 	rsb	ip, ip, ip, lsl #8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000efa:	f3c1 1145 	ubfx	r1, r1, #5, #6
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000efe:	fbbc fcf8 	udiv	ip, ip, r8
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f02:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000f06:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000f0a:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000f0e:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f12:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000f16:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f18:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000f1c:	2100      	movs	r1, #0
 8000f1e:	481b      	ldr	r0, [pc, #108]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f20:	f004 fd88 	bl	8005a34 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000f24:	4819      	ldr	r0, [pc, #100]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f26:	2101      	movs	r1, #1
 8000f28:	f004 fd84 	bl	8005a34 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 8000f2c:	8a23      	ldrh	r3, [r4, #16]
 8000f2e:	8a62      	ldrh	r2, [r4, #18]
 8000f30:	b906      	cbnz	r6, 8000f34 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
 8000f32:	b31d      	cbz	r5, 8000f7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000f34:	e9cd 3200 	strd	r3, r2, [sp]
 8000f38:	68e3      	ldr	r3, [r4, #12]
 8000f3a:	6861      	ldr	r1, [r4, #4]
 8000f3c:	4813      	ldr	r0, [pc, #76]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f3e:	461a      	mov	r2, r3
 8000f40:	f004 fc38 	bl	80057b4 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000f44:	b003      	add	sp, #12
 8000f46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000f4a:	2601      	movs	r6, #1
 8000f4c:	e76a      	b.n	8000e24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000f4e:	2501      	movs	r5, #1
 8000f50:	e76c      	b.n	8000e2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000f52:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000f56:	f47f af7e 	bne.w	8000e56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x52>
 8000f5a:	2109      	movs	r1, #9
 8000f5c:	e003      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f5e:	2810      	cmp	r0, #16
 8000f60:	bf0c      	ite	eq
 8000f62:	2102      	moveq	r1, #2
 8000f64:	2101      	movne	r1, #1
    switch (blitOp.operation)
 8000f66:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000f6a:	e77a      	b.n	8000e62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5e>
        dma2dColorMode = CM_A4;
 8000f6c:	210a      	movs	r1, #10
 8000f6e:	e7fa      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = CM_ARGB8888;
 8000f70:	2100      	movs	r1, #0
 8000f72:	e7f8      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000f74:	ea4e 0101 	orr.w	r1, lr, r1
 8000f78:	6359      	str	r1, [r3, #52]	; 0x34
 8000f7a:	e7cd      	b.n	8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000f7c:	9200      	str	r2, [sp, #0]
 8000f7e:	6861      	ldr	r1, [r4, #4]
 8000f80:	68e2      	ldr	r2, [r4, #12]
 8000f82:	4802      	ldr	r0, [pc, #8]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f84:	f004 fbf8 	bl	8005778 <HAL_DMA2D_Start_IT>
}
 8000f88:	e7dc      	b.n	8000f44 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000f8a:	bf00      	nop
 8000f8c:	200041e8 	.word	0x200041e8

08000f90 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000f92:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000f94:	f7ff ff2a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000f98:	6803      	ldr	r3, [r0, #0]
 8000f9a:	69db      	ldr	r3, [r3, #28]
 8000f9c:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f9e:	2810      	cmp	r0, #16
 8000fa0:	69ab      	ldr	r3, [r5, #24]
 8000fa2:	7f29      	ldrb	r1, [r5, #28]
 8000fa4:	d167      	bne.n	8001076 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000fa6:	f003 021f 	and.w	r2, r3, #31
 8000faa:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000fae:	201f      	movs	r0, #31
 8000fb0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fb4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fb8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fbc:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fc0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fc4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fc8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fcc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000fd0:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000fd2:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fd4:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fd8:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000fdc:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000fde:	4828      	ldr	r0, [pc, #160]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe0:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fe2:	6802      	ldr	r2, [r0, #0]
        dma2dTransferMode = DMA2D_R2M;
 8000fe4:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe6:	8a2b      	ldrh	r3, [r5, #16]
 8000fe8:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fec:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fee:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000ff0:	bf0c      	ite	eq
 8000ff2:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000ff6:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ffa:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000ffe:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001000:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001004:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001006:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001008:	f023 0307 	bic.w	r3, r3, #7
 800100c:	430b      	orrs	r3, r1
 800100e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001010:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001012:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001016:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800101a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800101c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001020:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001022:	d11c      	bne.n	800105e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001024:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001026:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800102a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800102c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001030:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8001032:	2100      	movs	r1, #0
 8001034:	f004 fcfe 	bl	8005a34 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001038:	2101      	movs	r1, #1
 800103a:	4811      	ldr	r0, [pc, #68]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800103c:	f004 fcfa 	bl	8005a34 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001040:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001044:	8a2a      	ldrh	r2, [r5, #16]
 8001046:	8a69      	ldrh	r1, [r5, #18]
 8001048:	d10d      	bne.n	8001066 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800104a:	68eb      	ldr	r3, [r5, #12]
 800104c:	480c      	ldr	r0, [pc, #48]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800104e:	e9cd 2100 	strd	r2, r1, [sp]
 8001052:	461a      	mov	r2, r3
 8001054:	4619      	mov	r1, r3
 8001056:	f004 fbad 	bl	80057b4 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800105a:	b003      	add	sp, #12
 800105c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800105e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8001060:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8001062:	6283      	str	r3, [r0, #40]	; 0x28
 8001064:	e7e8      	b.n	8001038 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001066:	9100      	str	r1, [sp, #0]
 8001068:	4613      	mov	r3, r2
 800106a:	4621      	mov	r1, r4
 800106c:	68ea      	ldr	r2, [r5, #12]
 800106e:	4804      	ldr	r0, [pc, #16]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 8001070:	f004 fb82 	bl	8005778 <HAL_DMA2D_Start_IT>
}
 8001074:	e7f1      	b.n	800105a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001076:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800107a:	2101      	movs	r1, #1
 800107c:	e7ae      	b.n	8000fdc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 800107e:	bf00      	nop
 8001080:	200041e8 	.word	0x200041e8

08001084 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001088:	4625      	mov	r5, r4
 800108a:	4b0a      	ldr	r3, [pc, #40]	; (80010b4 <_ZN10STM32F4DMAC1Ev+0x30>)
 800108c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800108e:	2600      	movs	r6, #0
 8001090:	6060      	str	r0, [r4, #4]
 8001092:	7226      	strb	r6, [r4, #8]
 8001094:	7266      	strb	r6, [r4, #9]
 8001096:	f845 3b20 	str.w	r3, [r5], #32
 800109a:	2260      	movs	r2, #96	; 0x60
 800109c:	4629      	mov	r1, r5
 800109e:	f00a fc61 	bl	800b964 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80010a2:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
        : color(0)
 80010a6:	61ae      	str	r6, [r5, #24]
 80010a8:	3520      	adds	r5, #32
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	d1fb      	bne.n	80010a6 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80010ae:	4620      	mov	r0, r4
 80010b0:	bd70      	pop	{r4, r5, r6, pc}
 80010b2:	bf00      	nop
 80010b4:	080209b4 	.word	0x080209b4

080010b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010b8:	2001      	movs	r0, #1
 80010ba:	4770      	bx	lr

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010bc:	2054      	movs	r0, #84	; 0x54
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010c0:	2354      	movs	r3, #84	; 0x54
 80010c2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c6:	3008      	adds	r0, #8
 80010c8:	4770      	bx	lr

080010ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010ca:	2354      	movs	r3, #84	; 0x54
 80010cc:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d0:	3008      	adds	r0, #8
 80010d2:	4770      	bx	lr

080010d4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010d4:	2001      	movs	r0, #1
 80010d6:	4770      	bx	lr

080010d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d8:	f243 1038 	movw	r0, #12600	; 0x3138
 80010dc:	4770      	bx	lr

080010de <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010de:	f243 1338 	movw	r3, #12600	; 0x3138
 80010e2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010e6:	3008      	adds	r0, #8
 80010e8:	4770      	bx	lr

080010ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f243 1338 	movw	r3, #12600	; 0x3138
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010f6:	2001      	movs	r0, #1
 80010f8:	4770      	bx	lr

080010fa <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010fa:	2010      	movs	r0, #16
 80010fc:	4770      	bx	lr

080010fe <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010fe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001102:	3008      	adds	r0, #8
 8001104:	4770      	bx	lr

08001106 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001106:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110a:	3008      	adds	r0, #8
 800110c:	4770      	bx	lr

0800110e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800110e:	4608      	mov	r0, r1
 8001110:	f001 bce4 	b.w	8002adc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f009 fb6a 	bl	800a7f4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	08020a6c 	.word	0x08020a6c

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	215c      	movs	r1, #92	; 0x5c
 8001134:	f01e f92f 	bl	801f396 <_ZdlPvj>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}

0800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800113c:	b510      	push	{r4, lr}
 800113e:	4b03      	ldr	r3, [pc, #12]	; (800114c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001140:	6003      	str	r3, [r0, #0]
 8001142:	4604      	mov	r4, r0
 8001144:	f009 fb56 	bl	800a7f4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001148:	4620      	mov	r0, r4
 800114a:	bd10      	pop	{r4, pc}
 800114c:	08020a38 	.word	0x08020a38

08001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001150:	b510      	push	{r4, lr}
 8001152:	4604      	mov	r4, r0
 8001154:	f7ff fff2 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001158:	4620      	mov	r0, r4
 800115a:	f44f 5145 	mov.w	r1, #12608	; 0x3140
 800115e:	f01e f91a 	bl	801f396 <_ZdlPvj>
 8001162:	4620      	mov	r0, r4
 8001164:	bd10      	pop	{r4, pc}
	...

08001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001168:	b510      	push	{r4, lr}
 800116a:	4b03      	ldr	r3, [pc, #12]	; (8001178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f009 fb40 	bl	800a7f4 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001174:	4620      	mov	r0, r4
 8001176:	bd10      	pop	{r4, pc}
 8001178:	08020a04 	.word	0x08020a04

0800117c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800117c:	b510      	push	{r4, lr}
 800117e:	4604      	mov	r4, r0
 8001180:	f7ff fff2 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001184:	4620      	mov	r0, r4
 8001186:	2118      	movs	r1, #24
 8001188:	f01e f905 	bl	801f396 <_ZdlPvj>
 800118c:	4620      	mov	r0, r4
 800118e:	bd10      	pop	{r4, pc}

08001190 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001190:	b510      	push	{r4, lr}
 8001192:	4b09      	ldr	r3, [pc, #36]	; (80011b8 <_ZN12FrontendHeapD1Ev+0x28>)
 8001194:	6003      	str	r3, [r0, #0]
 8001196:	4604      	mov	r4, r0
 8001198:	f500 5045 	add.w	r0, r0, #12608	; 0x3140
 800119c:	302c      	adds	r0, #44	; 0x2c
 800119e:	f7ff ffb9 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80011a2:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011a6:	f7ff ffc9 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen2ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011aa:	f104 0014 	add.w	r0, r4, #20
 80011ae:	f7ff ffdb 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen3PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b2:	4620      	mov	r0, r4
 80011b4:	bd10      	pop	{r4, pc}
 80011b6:	bf00      	nop
 80011b8:	08020aa0 	.word	0x08020aa0

080011bc <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011bc:	b508      	push	{r3, lr}
 80011be:	4802      	ldr	r0, [pc, #8]	; (80011c8 <__tcf_0+0xc>)
 80011c0:	f7ff ffe6 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011c4:	bd08      	pop	{r3, pc}
 80011c6:	bf00      	nop
 80011c8:	2000019c 	.word	0x2000019c

080011cc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011cc:	b510      	push	{r4, lr}
 80011ce:	4604      	mov	r4, r0
 80011d0:	f7ff ffde 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011d4:	4620      	mov	r0, r4
 80011d6:	f243 3124 	movw	r1, #13092	; 0x3324
 80011da:	f01e f8dc 	bl	801f396 <_ZdlPvj>
 80011de:	4620      	mov	r0, r4
 80011e0:	bd10      	pop	{r4, pc}
	...

080011e4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011e8:	f000 ff26 	bl	8002038 <_ZN14BitmapDatabase11getInstanceEv>
 80011ec:	4605      	mov	r5, r0
 80011ee:	f000 ff27 	bl	8002040 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011f2:	2400      	movs	r4, #0
 80011f4:	4601      	mov	r1, r0
 80011f6:	4623      	mov	r3, r4
 80011f8:	4628      	mov	r0, r5
 80011fa:	4622      	mov	r2, r4
 80011fc:	9400      	str	r4, [sp, #0]
 80011fe:	f010 fe9f 	bl	8011f40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001202:	4b26      	ldr	r3, [pc, #152]	; (800129c <touchgfx_init+0xb8>)
 8001204:	4a26      	ldr	r2, [pc, #152]	; (80012a0 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001206:	4d27      	ldr	r5, [pc, #156]	; (80012a4 <touchgfx_init+0xc0>)
 8001208:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800120a:	4620      	mov	r0, r4
 800120c:	f002 ff94 	bl	8004138 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001210:	4825      	ldr	r0, [pc, #148]	; (80012a8 <touchgfx_init+0xc4>)
 8001212:	f010 fdd7 	bl	8011dc4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001216:	782b      	ldrb	r3, [r5, #0]
 8001218:	f3bf 8f5b 	dmb	ish
 800121c:	07db      	lsls	r3, r3, #31
 800121e:	d437      	bmi.n	8001290 <touchgfx_init+0xac>
 8001220:	4628      	mov	r0, r5
 8001222:	f01e f8ba 	bl	801f39a <__cxa_guard_acquire>
 8001226:	b398      	cbz	r0, 8001290 <touchgfx_init+0xac>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001228:	4c20      	ldr	r4, [pc, #128]	; (80012ac <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800122a:	4b21      	ldr	r3, [pc, #132]	; (80012b0 <touchgfx_init+0xcc>)
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001232:	f508 5745 	add.w	r7, r8, #12608	; 0x3140
 8001236:	f107 0660 	add.w	r6, r7, #96	; 0x60
 800123a:	f104 0014 	add.w	r0, r4, #20
 800123e:	6060      	str	r0, [r4, #4]
 8001240:	f8c4 8008 	str.w	r8, [r4, #8]
 8001244:	60e7      	str	r7, [r4, #12]
 8001246:	6126      	str	r6, [r4, #16]
 8001248:	f009 fad6 	bl	800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800124c:	4b19      	ldr	r3, [pc, #100]	; (80012b4 <touchgfx_init+0xd0>)
 800124e:	6163      	str	r3, [r4, #20]
 8001250:	4640      	mov	r0, r8
 8001252:	f009 fad1 	bl	800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001256:	4b18      	ldr	r3, [pc, #96]	; (80012b8 <touchgfx_init+0xd4>)
 8001258:	62e3      	str	r3, [r4, #44]	; 0x2c
 800125a:	4638      	mov	r0, r7
 800125c:	f009 facc 	bl	800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001260:	f504 5340 	add.w	r3, r4, #12288	; 0x3000
 8001264:	4a15      	ldr	r2, [pc, #84]	; (80012bc <touchgfx_init+0xd8>)
 8001266:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c
 800126a:	f503 70e4 	add.w	r0, r3, #456	; 0x1c8
 800126e:	f002 ffe3 	bl	8004238 <_ZN5ModelC1Ev>
 8001272:	4622      	mov	r2, r4
 8001274:	f107 015c 	add.w	r1, r7, #92	; 0x5c
 8001278:	4630      	mov	r0, r6
 800127a:	f002 ffd3 	bl	8004224 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800127e:	4630      	mov	r0, r6
 8001280:	f001 fc2c 	bl	8002adc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001284:	480e      	ldr	r0, [pc, #56]	; (80012c0 <touchgfx_init+0xdc>)
 8001286:	f01e f8d3 	bl	801f430 <atexit>
 800128a:	4628      	mov	r0, r5
 800128c:	f01e f891 	bl	801f3b2 <__cxa_guard_release>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8001290:	480c      	ldr	r0, [pc, #48]	; (80012c4 <touchgfx_init+0xe0>)
}
 8001292:	b002      	add	sp, #8
 8001294:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001298:	f7ff bbaa 	b.w	80009f0 <_ZN11TouchGFXHAL10initializeEv>
 800129c:	2000d488 	.word	0x2000d488
 80012a0:	20004160 	.word	0x20004160
 80012a4:	20000198 	.word	0x20000198
 80012a8:	2000001c 	.word	0x2000001c
 80012ac:	2000019c 	.word	0x2000019c
 80012b0:	08020aa0 	.word	0x08020aa0
 80012b4:	08020a04 	.word	0x08020a04
 80012b8:	08020a38 	.word	0x08020a38
 80012bc:	08020a6c 	.word	0x08020a6c
 80012c0:	080011bd 	.word	0x080011bd
 80012c4:	200040e4 	.word	0x200040e4

080012c8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012c8:	4801      	ldr	r0, [pc, #4]	; (80012d0 <touchgfx_taskEntry+0x8>)
 80012ca:	f7ff badb 	b.w	8000884 <_ZN11TouchGFXHAL9taskEntryEv>
 80012ce:	bf00      	nop
 80012d0:	200040e4 	.word	0x200040e4

080012d4 <_GLOBAL__sub_I_touchgfx_init>:
}
 80012d4:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012d6:	4c24      	ldr	r4, [pc, #144]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012d8:	4e24      	ldr	r6, [pc, #144]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012da:	4b25      	ldr	r3, [pc, #148]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012dc:	4d25      	ldr	r5, [pc, #148]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012de:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012e0:	4630      	mov	r0, r6
 80012e2:	f7ff fecf 	bl	8001084 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012e6:	4628      	mov	r0, r5
 80012e8:	f013 feb6 	bl	8015058 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderVariant(HARDWARE)
 80012ec:	4b22      	ldr	r3, [pc, #136]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012ee:	4823      	ldr	r0, [pc, #140]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012f0:	60dc      	str	r4, [r3, #12]
 80012f2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012f6:	f8a3 1048 	strh.w	r1, [r3, #72]	; 0x48
 80012fa:	f8a3 1076 	strh.w	r1, [r3, #118]	; 0x76
 80012fe:	2101      	movs	r1, #1
 8001300:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001304:	491e      	ldr	r1, [pc, #120]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 8001306:	4c1f      	ldr	r4, [pc, #124]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 8001308:	600b      	str	r3, [r1, #0]
          lastRenderVariant(HARDWARE)
 800130a:	2200      	movs	r2, #0
        DISPLAY_WIDTH = width;
 800130c:	491e      	ldr	r1, [pc, #120]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 800130e:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderVariant(HARDWARE)
 8001310:	e9c3 0219 	strd	r0, r2, [r3, #100]	; 0x64
        DISPLAY_WIDTH = width;
 8001314:	f44f 7050 	mov.w	r0, #832	; 0x340
 8001318:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 800131a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800131e:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001320:	4c1a      	ldr	r4, [pc, #104]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          lastRenderVariant(HARDWARE)
 8001322:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
        DISPLAY_ROTATION = rotate0;
 8001326:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001328:	4c19      	ldr	r4, [pc, #100]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
 800132a:	655a      	str	r2, [r3, #84]	; 0x54
          lastRenderVariant(HARDWARE)
 800132c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001330:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001334:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001338:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 800133c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001340:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 8001344:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
 8001348:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 800134c:	671a      	str	r2, [r3, #112]	; 0x70
 800134e:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8001352:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001356:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001358:	480e      	ldr	r0, [pc, #56]	; (8001394 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800135a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 800135e:	4a0e      	ldr	r2, [pc, #56]	; (8001398 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001360:	8001      	strh	r1, [r0, #0]
 8001362:	601a      	str	r2, [r3, #0]
}
 8001364:	bd70      	pop	{r4, r5, r6, pc}
 8001366:	bf00      	nop
 8001368:	200034c0 	.word	0x200034c0
 800136c:	200034c4 	.word	0x200034c4
 8001370:	0802068c 	.word	0x0802068c
 8001374:	20004164 	.word	0x20004164
 8001378:	200040e4 	.word	0x200040e4
 800137c:	01000001 	.word	0x01000001
 8001380:	2000d40c 	.word	0x2000d40c
 8001384:	2000d402 	.word	0x2000d402
 8001388:	2000d400 	.word	0x2000d400
 800138c:	2000d404 	.word	0x2000d404
 8001390:	2000d406 	.word	0x2000d406
 8001394:	2000d408 	.word	0x2000d408
 8001398:	08020770 	.word	0x08020770

0800139c <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 800139c:	4801      	ldr	r0, [pc, #4]	; (80013a4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 800139e:	f7ff bcf9 	b.w	8000d94 <_ZN10STM32F4DMAD1Ev>
 80013a2:	bf00      	nop
 80013a4:	200034c4 	.word	0x200034c4

080013a8 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a8:	4b02      	ldr	r3, [pc, #8]	; (80013b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013aa:	2290      	movs	r2, #144	; 0x90
 80013ac:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	.word	0xe000e100

080013b8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b8:	4b02      	ldr	r3, [pc, #8]	; (80013c4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013ba:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013be:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013c0:	4770      	bx	lr
 80013c2:	bf00      	nop
 80013c4:	e000e100 	.word	0xe000e100

080013c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c8:	4770      	bx	lr

080013ca <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013ca:	4770      	bx	lr

080013cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013cc:	f009 bc02 	b.w	800abd4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013d0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013d0:	4b04      	ldr	r3, [pc, #16]	; (80013e4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013d2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013d6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013da:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013de:	f3bf 8f6f 	isb	sy
}
 80013e2:	4770      	bx	lr
 80013e4:	e000e100 	.word	0xe000e100

080013e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013e8:	b538      	push	{r3, r4, r5, lr}
 80013ea:	4604      	mov	r4, r0
    HAL::initialize();
 80013ec:	f009 feea 	bl	800b1c4 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013f0:	6823      	ldr	r3, [r4, #0]
 80013f2:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80013f4:	f00d ffa2 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 80013f8:	4601      	mov	r1, r0
 80013fa:	4620      	mov	r0, r4
 80013fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013fe:	6823      	ldr	r3, [r4, #0]
 8001400:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 8001402:	2300      	movs	r3, #0
 8001404:	461a      	mov	r2, r3
 8001406:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800140a:	4620      	mov	r0, r4
 800140c:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 800140e:	2301      	movs	r3, #1
 8001410:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 8001414:	bd38      	pop	{r3, r4, r5, pc}
	...

08001418 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001418:	4901      	ldr	r1, [pc, #4]	; (8001420 <vApplicationIdleHook+0x8>)
 800141a:	2000      	movs	r0, #0
 800141c:	f008 bd0e 	b.w	8009e3c <vTaskSetApplicationTaskTag>
 8001420:	08000c2d 	.word	0x08000c2d

08001424 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001428:	b0a4      	sub	sp, #144	; 0x90
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800142a:	2210      	movs	r2, #16
 800142c:	2100      	movs	r1, #0
 800142e:	a80a      	add	r0, sp, #40	; 0x28
 8001430:	f01e f86c 	bl	801f50c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001434:	2214      	movs	r2, #20
 8001436:	2100      	movs	r1, #0
 8001438:	a803      	add	r0, sp, #12
 800143a:	f01e f867 	bl	801f50c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800143e:	2100      	movs	r1, #0
 8001440:	223c      	movs	r2, #60	; 0x3c
 8001442:	a815      	add	r0, sp, #84	; 0x54
 8001444:	f01e f862 	bl	801f50c <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001448:	2400      	movs	r4, #0
 800144a:	4b24      	ldr	r3, [pc, #144]	; (80014dc <SystemClock_Config+0xb8>)
 800144c:	9401      	str	r4, [sp, #4]
 800144e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001450:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001454:	641a      	str	r2, [r3, #64]	; 0x40
 8001456:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001458:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800145c:	9301      	str	r3, [sp, #4]
 800145e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001460:	4b1f      	ldr	r3, [pc, #124]	; (80014e0 <SystemClock_Config+0xbc>)
 8001462:	9402      	str	r4, [sp, #8]
 8001464:	681a      	ldr	r2, [r3, #0]
 8001466:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 800146a:	601a      	str	r2, [r3, #0]
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001472:	9302      	str	r3, [sp, #8]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001474:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001476:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001478:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800147c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001480:	2502      	movs	r5, #2
 8001482:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001486:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 360;
 800148a:	f04f 0808 	mov.w	r8, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 6;
 800148e:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001490:	f44f 77b4 	mov.w	r7, #360	; 0x168
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001494:	2606      	movs	r6, #6
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001496:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001498:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLN = 360;
 800149c:	e9cd 8710 	strd	r8, r7, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014a0:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014a2:	f006 fc0f 	bl	8007cc4 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 80014a6:	f005 fe69 	bl	800717c <HAL_PWREx_EnableOverDrive>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014aa:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014ac:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014b0:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b8:	e9cd 1306 	strd	r1, r3, [sp, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014bc:	a803      	add	r0, sp, #12
 80014be:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014c0:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014c2:	f006 f9d3 	bl	800786c <HAL_RCC_ClockConfig>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014c6:	a815      	add	r0, sp, #84	; 0x54
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80014c8:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 80014cc:	9719      	str	r7, [sp, #100]	; 0x64
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80014ce:	961c      	str	r6, [sp, #112]	; 0x70
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80014d0:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014d2:	f006 fa95 	bl	8007a00 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80014d6:	b024      	add	sp, #144	; 0x90
 80014d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014dc:	40023800 	.word	0x40023800
 80014e0:	40007000 	.word	0x40007000

080014e4 <main>:
{
 80014e4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014e8:	b0bd      	sub	sp, #244	; 0xf4
  HAL_Init();
 80014ea:	f003 ff1d 	bl	8005328 <HAL_Init>
  SystemClock_Config();
 80014ee:	f7ff ff99 	bl	8001424 <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014f2:	2214      	movs	r2, #20
 80014f4:	2100      	movs	r1, #0
 80014f6:	a82f      	add	r0, sp, #188	; 0xbc

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014fa:	f01e f807 	bl	801f50c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014fe:	4bc8      	ldr	r3, [pc, #800]	; (8001820 <main+0x33c>)
 8001500:	9402      	str	r4, [sp, #8]
 8001502:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOJ_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001504:	48c7      	ldr	r0, [pc, #796]	; (8001824 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001506:	f042 0210 	orr.w	r2, r2, #16
 800150a:	631a      	str	r2, [r3, #48]	; 0x30
 800150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150e:	f002 0210 	and.w	r2, r2, #16
 8001512:	9202      	str	r2, [sp, #8]
 8001514:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001516:	9403      	str	r4, [sp, #12]
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f042 0202 	orr.w	r2, r2, #2
 800151e:	631a      	str	r2, [r3, #48]	; 0x30
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f002 0202 	and.w	r2, r2, #2
 8001526:	9203      	str	r2, [sp, #12]
 8001528:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800152a:	9404      	str	r4, [sp, #16]
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001532:	631a      	str	r2, [r3, #48]	; 0x30
 8001534:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001536:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800153a:	9204      	str	r2, [sp, #16]
 800153c:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800153e:	9405      	str	r4, [sp, #20]
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f042 0208 	orr.w	r2, r2, #8
 8001546:	631a      	str	r2, [r3, #48]	; 0x30
 8001548:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154a:	f002 0208 	and.w	r2, r2, #8
 800154e:	9205      	str	r2, [sp, #20]
 8001550:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001552:	9406      	str	r4, [sp, #24]
 8001554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001556:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800155a:	631a      	str	r2, [r3, #48]	; 0x30
 800155c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001562:	9206      	str	r2, [sp, #24]
 8001564:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001566:	9407      	str	r4, [sp, #28]
 8001568:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156a:	f042 0220 	orr.w	r2, r2, #32
 800156e:	631a      	str	r2, [r3, #48]	; 0x30
 8001570:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001572:	f002 0220 	and.w	r2, r2, #32
 8001576:	9207      	str	r2, [sp, #28]
 8001578:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 800157a:	9408      	str	r4, [sp, #32]
 800157c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001582:	631a      	str	r2, [r3, #48]	; 0x30
 8001584:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001586:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 800158a:	9208      	str	r2, [sp, #32]
 800158c:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800158e:	9409      	str	r4, [sp, #36]	; 0x24
 8001590:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001592:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001596:	631a      	str	r2, [r3, #48]	; 0x30
 8001598:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800159e:	9209      	str	r2, [sp, #36]	; 0x24
 80015a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015a2:	940a      	str	r4, [sp, #40]	; 0x28
 80015a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a6:	f042 0204 	orr.w	r2, r2, #4
 80015aa:	631a      	str	r2, [r3, #48]	; 0x30
 80015ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ae:	f002 0204 	and.w	r2, r2, #4
 80015b2:	920a      	str	r2, [sp, #40]	; 0x28
 80015b4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015b6:	940b      	str	r4, [sp, #44]	; 0x2c
 80015b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015be:	631a      	str	r2, [r3, #48]	; 0x30
 80015c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015c2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80015c6:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015c8:	2201      	movs	r2, #1
 80015ca:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015ce:	f004 ffd3 	bl	8006578 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015d2:	4895      	ldr	r0, [pc, #596]	; (8001828 <main+0x344>)
 80015d4:	4622      	mov	r2, r4
 80015d6:	2110      	movs	r1, #16
 80015d8:	f004 ffce 	bl	8006578 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015dc:	4893      	ldr	r0, [pc, #588]	; (800182c <main+0x348>)
 80015de:	4622      	mov	r2, r4
 80015e0:	2140      	movs	r1, #64	; 0x40
 80015e2:	f004 ffc9 	bl	8006578 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015e6:	4622      	mov	r2, r4
 80015e8:	4891      	ldr	r0, [pc, #580]	; (8001830 <main+0x34c>)
 80015ea:	2180      	movs	r1, #128	; 0x80
 80015ec:	f004 ffc4 	bl	8006578 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015f0:	2611      	movs	r6, #17
 80015f2:	2308      	movs	r3, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015f4:	488b      	ldr	r0, [pc, #556]	; (8001824 <main+0x340>)
 80015f6:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : RENDER_TIME_Pin */
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f8:	2701      	movs	r7, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015fa:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015fe:	e9cd 362f 	strd	r3, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001602:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001606:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800160a:	f004 fe25 	bl	8006258 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800160e:	4886      	ldr	r0, [pc, #536]	; (8001828 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001610:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001612:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001614:	e9cd a72f 	strd	sl, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001618:	f8cd 80c8 	str.w	r8, [sp, #200]	; 0xc8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800161c:	f004 fe1c 	bl	8006258 <HAL_GPIO_Init>

  /*Configure GPIO pin : VSYNC_FREQ_Pin */
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8001620:	2340      	movs	r3, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001622:	4882      	ldr	r0, [pc, #520]	; (800182c <main+0x348>)
 8001624:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : PH7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001626:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001628:	e9cd 372f 	strd	r3, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800162c:	e9cd 4831 	strd	r4, r8, [sp, #196]	; 0xc4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001630:	f004 fe12 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001634:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001636:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001638:	487d      	ldr	r0, [pc, #500]	; (8001830 <main+0x34c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800163a:	9332      	str	r3, [sp, #200]	; 0xc8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800163c:	e9cd 562f 	strd	r5, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001640:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001642:	f004 fe09 	bl	8006258 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001646:	487b      	ldr	r0, [pc, #492]	; (8001834 <main+0x350>)
  hdma2d.Instance = DMA2D;
 8001648:	4e7b      	ldr	r6, [pc, #492]	; (8001838 <main+0x354>)
  hcrc.Instance = CRC;
 800164a:	4b7c      	ldr	r3, [pc, #496]	; (800183c <main+0x358>)
 800164c:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800164e:	f003 ff11 	bl	8005474 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001652:	4b7b      	ldr	r3, [pc, #492]	; (8001840 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001654:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001658:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800165c:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800165e:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001662:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001666:	f004 f85b 	bl	8005720 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800166a:	4639      	mov	r1, r7
 800166c:	4630      	mov	r0, r6
 800166e:	f004 f9e1 	bl	8005a34 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001672:	4629      	mov	r1, r5
 8001674:	4622      	mov	r2, r4
 8001676:	486e      	ldr	r0, [pc, #440]	; (8001830 <main+0x34c>)
  hdsi.Instance = DSI;
 8001678:	4e72      	ldr	r6, [pc, #456]	; (8001844 <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800167a:	f004 ff7d 	bl	8006578 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 800167e:	2014      	movs	r0, #20
 8001680:	f003 fe7e 	bl	8005380 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001684:	4629      	mov	r1, r5
 8001686:	463a      	mov	r2, r7
 8001688:	4869      	ldr	r0, [pc, #420]	; (8001830 <main+0x34c>)
 800168a:	f004 ff75 	bl	8006578 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 800168e:	200a      	movs	r0, #10
 8001690:	f003 fe76 	bl	8005380 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001694:	2224      	movs	r2, #36	; 0x24
 8001696:	4621      	mov	r1, r4
 8001698:	a815      	add	r0, sp, #84	; 0x54
  DSI_PLLInitTypeDef PLLInit = {0};
 800169a:	940e      	str	r4, [sp, #56]	; 0x38
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800169c:	f01d ff36 	bl	801f50c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80016a0:	2218      	movs	r2, #24
 80016a2:	4621      	mov	r1, r4
 80016a4:	a80f      	add	r0, sp, #60	; 0x3c
 80016a6:	f01d ff31 	bl	801f50c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016aa:	2234      	movs	r2, #52	; 0x34
 80016ac:	4621      	mov	r1, r4
 80016ae:	a82f      	add	r0, sp, #188	; 0xbc
 80016b0:	f01d ff2c 	bl	801f50c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016b4:	222c      	movs	r2, #44	; 0x2c
 80016b6:	4621      	mov	r1, r4
 80016b8:	a822      	add	r0, sp, #136	; 0x88
 80016ba:	f01d ff27 	bl	801f50c <memset>
  hdsi.Instance = DSI;
 80016be:	4b62      	ldr	r3, [pc, #392]	; (8001848 <main+0x364>)
  hdsi.Init.TXEscapeCkdiv = 4;
 80016c0:	2504      	movs	r5, #4
  PLLInit.PLLNDIV = 125;
 80016c2:	227d      	movs	r2, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016c4:	a90c      	add	r1, sp, #48	; 0x30
 80016c6:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016c8:	e9c6 3400 	strd	r3, r4, [r6]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016cc:	e9cd 280c 	strd	r2, r8, [sp, #48]	; 0x30
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016d0:	e9c6 5702 	strd	r5, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016d4:	f004 fa76 	bl	8005bc4 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016d8:	a915      	add	r1, sp, #84	; 0x54
 80016da:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016dc:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016e0:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016e4:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016e8:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016ec:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016ee:	f004 fc91 	bl	8006014 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016f2:	231c      	movs	r3, #28
 80016f4:	2221      	movs	r2, #33	; 0x21
 80016f6:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016fa:	210f      	movs	r1, #15
 80016fc:	2219      	movs	r2, #25
 80016fe:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001702:	4630      	mov	r0, r6
 8001704:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 8001706:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800170a:	f004 fc46 	bl	8005f9a <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 800170e:	4629      	mov	r1, r5
 8001710:	4630      	mov	r0, r6
 8001712:	f004 fc31 	bl	8005f78 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001716:	f242 7110 	movw	r1, #10000	; 0x2710
 800171a:	4630      	mov	r0, r6
 800171c:	f004 fd85 	bl	800622a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001720:	4621      	mov	r1, r4
 8001722:	4630      	mov	r0, r6
 8001724:	f004 f9eb 	bl	8005afe <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001728:	f44f 7080 	mov.w	r0, #256	; 0x100
 800172c:	f44f 7200 	mov.w	r2, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001730:	f44f 6980 	mov.w	r9, #1024	; 0x400
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001734:	e9cd 022f 	strd	r0, r2, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001738:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800173c:	e9cd 9231 	strd	r9, r2, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001740:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001744:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001748:	e9cd 2133 	strd	r2, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 800174c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001750:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001754:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001758:	e9cd 3135 	strd	r3, r1, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800175c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8001760:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001764:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001768:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 800176c:	e9cd e139 	strd	lr, r1, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001770:	4630      	mov	r0, r6
 8001772:	a92f      	add	r1, sp, #188	; 0xbc
  CmdCfg.CommandSize = 200;
 8001774:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001778:	f8cd 80ec 	str.w	r8, [sp, #236]	; 0xec
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 800177c:	f004 fbc8 	bl	8005f10 <HAL_DSI_ConfigCommand>
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001780:	a922      	add	r1, sp, #136	; 0x88
 8001782:	4630      	mov	r0, r6
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 8001784:	e9cd 4526 	strd	r4, r5, [sp, #152]	; 0x98
  CmdCfg.ColorCoding = DSI_RGB565;
 8001788:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800178c:	e9cd ba24 	strd	fp, sl, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001790:	e9cd 8428 	strd	r8, r4, [sp, #160]	; 0xa0
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001794:	e9cd 442a 	strd	r4, r4, [sp, #168]	; 0xa8
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001798:	972c      	str	r7, [sp, #176]	; 0xb0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800179a:	f004 fb47 	bl	8005e2c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 800179e:	4621      	mov	r1, r4
 80017a0:	4630      	mov	r0, r6
 80017a2:	f004 fb32 	bl	8005e0a <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017a6:	4829      	ldr	r0, [pc, #164]	; (800184c <main+0x368>)
 80017a8:	4929      	ldr	r1, [pc, #164]	; (8001850 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017aa:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017ac:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017b0:	2340      	movs	r3, #64	; 0x40
 80017b2:	2120      	movs	r1, #32
 80017b4:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017b8:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017bc:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017c0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017c4:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017c8:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.WriteRecoveryTime = 3;
 80017cc:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017ce:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017d0:	a92f      	add	r1, sp, #188	; 0xbc
  SdramTiming.RPDelay = 2;
 80017d2:	e9cd 3833 	strd	r3, r8, [sp, #204]	; 0xcc
  SdramTiming.SelfRefreshTime = 4;
 80017d6:	e9cd 2530 	strd	r2, r5, [sp, #192]	; 0xc0
  SdramTiming.RowCycleDelay = 7;
 80017da:	9232      	str	r2, [sp, #200]	; 0xc8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017dc:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017e0:	f8cd 80bc 	str.w	r8, [sp, #188]	; 0xbc
  SdramTiming.RCDDelay = 2;
 80017e4:	f8cd 80d4 	str.w	r8, [sp, #212]	; 0xd4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e8:	f006 fbf6 	bl	8007fd8 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017ec:	f003 fcca 	bl	8005184 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017f0:	f003 fc7a 	bl	80050e8 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017f4:	2234      	movs	r2, #52	; 0x34
 80017f6:	4621      	mov	r1, r4
 80017f8:	a815      	add	r0, sp, #84	; 0x54
 80017fa:	f01d fe87 	bl	801f50c <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80017fe:	2234      	movs	r2, #52	; 0x34
 8001800:	4621      	mov	r1, r4
 8001802:	a822      	add	r0, sp, #136	; 0x88
  hltdc.Instance = LTDC;
 8001804:	4d13      	ldr	r5, [pc, #76]	; (8001854 <main+0x370>)
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 8001806:	f01d fe81 	bl	801f50c <memset>
  hltdc.Instance = LTDC;
 800180a:	4b13      	ldr	r3, [pc, #76]	; (8001858 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 800180c:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800180e:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 8001812:	22ca      	movs	r2, #202	; 0xca
 8001814:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001818:	e9c5 2309 	strd	r2, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 800181c:	21cb      	movs	r1, #203	; 0xcb
 800181e:	e01d      	b.n	800185c <main+0x378>
 8001820:	40023800 	.word	0x40023800
 8001824:	40022800 	.word	0x40022800
 8001828:	40020c00 	.word	0x40020c00
 800182c:	40021800 	.word	0x40021800
 8001830:	40021c00 	.word	0x40021c00
 8001834:	200041e0 	.word	0x200041e0
 8001838:	200041e8 	.word	0x200041e8
 800183c:	40023000 	.word	0x40023000
 8001840:	4002b000 	.word	0x4002b000
 8001844:	20004228 	.word	0x20004228
 8001848:	40016c00 	.word	0x40016c00
 800184c:	2000438c 	.word	0x2000438c
 8001850:	a0000140 	.word	0xa0000140
 8001854:	20004298 	.word	0x20004298
 8001858:	40016800 	.word	0x40016800
 800185c:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001860:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 8001862:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001866:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 800186a:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 800186e:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001872:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001876:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800187a:	f005 fb49 	bl	8006f10 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800187e:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowY1 = 480;
 8001880:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001884:	e9cd 341a 	strd	r3, r4, [sp, #104]	; 0x68
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001888:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800188c:	2305      	movs	r3, #5
 800188e:	e9cd 311d 	strd	r3, r1, [sp, #116]	; 0x74
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001892:	e9cd 2818 	strd	r2, r8, [sp, #96]	; 0x60
  pLayerCfg.ImageHeight = 480;
 8001896:	e9cd b21f 	strd	fp, r2, [sp, #124]	; 0x7c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800189a:	a915      	add	r1, sp, #84	; 0x54
 800189c:	4622      	mov	r2, r4
 800189e:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 200;
 80018a0:	e9cd 4b15 	strd	r4, fp, [sp, #84]	; 0x54
  pLayerCfg.WindowY0 = 0;
 80018a4:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018a6:	f8cd 9070 	str.w	r9, [sp, #112]	; 0x70
  pLayerCfg.Backcolor.Blue = 0;
 80018aa:	f8ad 4084 	strh.w	r4, [sp, #132]	; 0x84
  pLayerCfg.Backcolor.Red = 0;
 80018ae:	f88d 4086 	strb.w	r4, [sp, #134]	; 0x86
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018b2:	f005 fbf9 	bl	80070a8 <HAL_LTDC_ConfigLayer>
  pLayerCfg1.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018b6:	2305      	movs	r3, #5
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018b8:	a922      	add	r1, sp, #136	; 0x88
 80018ba:	463a      	mov	r2, r7
 80018bc:	4628      	mov	r0, r5
  pLayerCfg1.FBStartAdress = 0;
 80018be:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8
  pLayerCfg1.WindowX1 = 0;
 80018c2:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  pLayerCfg1.WindowY1 = 0;
 80018c6:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  pLayerCfg1.Alpha = 0;
 80018ca:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018ce:	e9cd 4928 	strd	r4, r9, [sp, #160]	; 0xa0
  pLayerCfg1.ImageHeight = 0;
 80018d2:	e9cd 442c 	strd	r4, r4, [sp, #176]	; 0xb0
  pLayerCfg1.Backcolor.Blue = 0;
 80018d6:	f8ad 40b8 	strh.w	r4, [sp, #184]	; 0xb8
  pLayerCfg1.Backcolor.Red = 0;
 80018da:	f88d 40ba 	strb.w	r4, [sp, #186]	; 0xba
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018de:	f005 fbe3 	bl	80070a8 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018e2:	682a      	ldr	r2, [r5, #0]
 80018e4:	6993      	ldr	r3, [r2, #24]
 80018e6:	f023 0301 	bic.w	r3, r3, #1
 80018ea:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018ec:	4630      	mov	r0, r6
 80018ee:	f004 fbf7 	bl	80060e0 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018f2:	4639      	mov	r1, r7
 80018f4:	4640      	mov	r0, r8
 80018f6:	f002 fdbb 	bl	8004470 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018fa:	2328      	movs	r3, #40	; 0x28
 80018fc:	2215      	movs	r2, #21
 80018fe:	4621      	mov	r1, r4
 8001900:	9400      	str	r4, [sp, #0]
 8001902:	4630      	mov	r0, r6
 8001904:	f004 fc1f 	bl	8006146 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001908:	a92f      	add	r1, sp, #188	; 0xbc
 800190a:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800190c:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001910:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001914:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001918:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800191c:	e9cd 4437 	strd	r4, r4, [sp, #220]	; 0xdc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001920:	9439      	str	r4, [sp, #228]	; 0xe4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001922:	f004 faf5 	bl	8005f10 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001926:	f44f 7148 	mov.w	r1, #800	; 0x320
 800192a:	4622      	mov	r2, r4
 800192c:	4628      	mov	r0, r5
 800192e:	f005 fbe9 	bl	8007104 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001932:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8001934:	481c      	ldr	r0, [pc, #112]	; (80019a8 <main+0x4c4>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001936:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001938:	4d1c      	ldr	r5, [pc, #112]	; (80019ac <main+0x4c8>)
  __HAL_LTDC_ENABLE(&hltdc);
 800193a:	433b      	orrs	r3, r7
 800193c:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 800193e:	4b1c      	ldr	r3, [pc, #112]	; (80019b0 <main+0x4cc>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001940:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 8001942:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 8001946:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8001948:	e9c0 3904 	strd	r3, r9, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800194c:	e9c0 7a02 	strd	r7, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001950:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001954:	f005 fd20 	bl	8007398 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8001958:	f003 fa8c 	bl	8004e74 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 800195c:	f003 f9c0 	bl	8004ce0 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001960:	f003 f936 	bl	8004bd0 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 8001964:	4813      	ldr	r0, [pc, #76]	; (80019b4 <main+0x4d0>)
 8001966:	4b14      	ldr	r3, [pc, #80]	; (80019b8 <main+0x4d4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001968:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 800196a:	e9c5 0300 	strd	r0, r3, [r5]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800196e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001972:	4628      	mov	r0, r5
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001974:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001978:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800197c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001980:	f004 ffe2 	bl	8006948 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001984:	4628      	mov	r0, r5
 8001986:	f005 f887 	bl	8006a98 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 800198a:	f7fe fe34 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 800198e:	f006 fd61 	bl	8008454 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8001992:	4a0a      	ldr	r2, [pc, #40]	; (80019bc <main+0x4d8>)
 8001994:	480a      	ldr	r0, [pc, #40]	; (80019c0 <main+0x4dc>)
 8001996:	4621      	mov	r1, r4
 8001998:	f006 fd96 	bl	80084c8 <osThreadNew>
 800199c:	4b09      	ldr	r3, [pc, #36]	; (80019c4 <main+0x4e0>)
 800199e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019a0:	f006 fd72 	bl	8008488 <osKernelStart>
  while (1)
 80019a4:	e7fe      	b.n	80019a4 <main+0x4c0>
 80019a6:	bf00      	nop
 80019a8:	20004340 	.word	0x20004340
 80019ac:	20004244 	.word	0x20004244
 80019b0:	a0001000 	.word	0xa0001000
 80019b4:	40005400 	.word	0x40005400
 80019b8:	00061a80 	.word	0x00061a80
 80019bc:	08020abc 	.word	0x08020abc
 80019c0:	080005fb 	.word	0x080005fb
 80019c4:	200041dc 	.word	0x200041dc

080019c8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019c8:	6802      	ldr	r2, [r0, #0]
 80019ca:	4b03      	ldr	r3, [pc, #12]	; (80019d8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019cc:	429a      	cmp	r2, r3
 80019ce:	d101      	bne.n	80019d4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019d0:	f003 bcc4 	b.w	800535c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	40001000 	.word	0x40001000

080019dc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019dc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019de:	4b0e      	ldr	r3, [pc, #56]	; (8001a18 <HAL_MspInit+0x3c>)
 80019e0:	2200      	movs	r2, #0
 80019e2:	9200      	str	r2, [sp, #0]
 80019e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019e6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019ea:	6459      	str	r1, [r3, #68]	; 0x44
 80019ec:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019ee:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019f2:	9100      	str	r1, [sp, #0]
 80019f4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019f6:	9201      	str	r2, [sp, #4]
 80019f8:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019fa:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019fe:	6419      	str	r1, [r3, #64]	; 0x40
 8001a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a02:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a06:	9301      	str	r3, [sp, #4]
 8001a08:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0a:	210f      	movs	r1, #15
 8001a0c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a10:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a12:	f003 bcdb 	b.w	80053cc <HAL_NVIC_SetPriority>
 8001a16:	bf00      	nop
 8001a18:	40023800 	.word	0x40023800

08001a1c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a1c:	6802      	ldr	r2, [r0, #0]
 8001a1e:	4b09      	ldr	r3, [pc, #36]	; (8001a44 <HAL_CRC_MspInit+0x28>)
 8001a20:	429a      	cmp	r2, r3
{
 8001a22:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a24:	d10b      	bne.n	8001a3e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a26:	2300      	movs	r3, #0
 8001a28:	9301      	str	r3, [sp, #4]
 8001a2a:	4b07      	ldr	r3, [pc, #28]	; (8001a48 <HAL_CRC_MspInit+0x2c>)
 8001a2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a2e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a32:	631a      	str	r2, [r3, #48]	; 0x30
 8001a34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a36:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a3a:	9301      	str	r3, [sp, #4]
 8001a3c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a3e:	b002      	add	sp, #8
 8001a40:	4770      	bx	lr
 8001a42:	bf00      	nop
 8001a44:	40023000 	.word	0x40023000
 8001a48:	40023800 	.word	0x40023800

08001a4c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a4c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a4e:	4b0f      	ldr	r3, [pc, #60]	; (8001a8c <HAL_DMA2D_MspInit+0x40>)
 8001a50:	6802      	ldr	r2, [r0, #0]
 8001a52:	429a      	cmp	r2, r3
 8001a54:	d116      	bne.n	8001a84 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a56:	2200      	movs	r2, #0
 8001a58:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a5c:	9201      	str	r2, [sp, #4]
 8001a5e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a60:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a64:	6319      	str	r1, [r3, #48]	; 0x30
 8001a66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a6c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a6e:	2105      	movs	r1, #5
 8001a70:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a72:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a74:	f003 fcaa 	bl	80053cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a78:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a7a:	b003      	add	sp, #12
 8001a7c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a80:	f003 bcd6 	b.w	8005430 <HAL_NVIC_EnableIRQ>
}
 8001a84:	b003      	add	sp, #12
 8001a86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a8a:	bf00      	nop
 8001a8c:	4002b000 	.word	0x4002b000

08001a90 <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001a90:	6802      	ldr	r2, [r0, #0]
 8001a92:	4b06      	ldr	r3, [pc, #24]	; (8001aac <HAL_DMA2D_MspDeInit+0x1c>)
 8001a94:	429a      	cmp	r2, r3
 8001a96:	d107      	bne.n	8001aa8 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001a98:	4a05      	ldr	r2, [pc, #20]	; (8001ab0 <HAL_DMA2D_MspDeInit+0x20>)
 8001a9a:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a9c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001aa0:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001aa2:	205a      	movs	r0, #90	; 0x5a
 8001aa4:	f003 bcd2 	b.w	800544c <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001aa8:	4770      	bx	lr
 8001aaa:	bf00      	nop
 8001aac:	4002b000 	.word	0x4002b000
 8001ab0:	40023800 	.word	0x40023800

08001ab4 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001ab4:	b510      	push	{r4, lr}
 8001ab6:	4604      	mov	r4, r0
 8001ab8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aba:	2214      	movs	r2, #20
 8001abc:	2100      	movs	r1, #0
 8001abe:	a803      	add	r0, sp, #12
 8001ac0:	f01d fd24 	bl	801f50c <memset>
  if(hdsi->Instance==DSI)
 8001ac4:	6822      	ldr	r2, [r4, #0]
 8001ac6:	4b17      	ldr	r3, [pc, #92]	; (8001b24 <HAL_DSI_MspInit+0x70>)
 8001ac8:	429a      	cmp	r2, r3
 8001aca:	d128      	bne.n	8001b1e <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001acc:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001ad0:	2400      	movs	r4, #0
 8001ad2:	9401      	str	r4, [sp, #4]
 8001ad4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ad6:	4814      	ldr	r0, [pc, #80]	; (8001b28 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ad8:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001adc:	645a      	str	r2, [r3, #68]	; 0x44
 8001ade:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ae0:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001ae4:	9201      	str	r2, [sp, #4]
 8001ae6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001ae8:	9402      	str	r4, [sp, #8]
 8001aea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001aec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001af0:	631a      	str	r2, [r3, #48]	; 0x30
 8001af2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001af4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001af8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afa:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001afc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001afe:	2302      	movs	r3, #2
 8001b00:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b04:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001b06:	230d      	movs	r3, #13
 8001b08:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b0a:	f004 fba5 	bl	8006258 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b0e:	205c      	movs	r0, #92	; 0x5c
 8001b10:	4622      	mov	r2, r4
 8001b12:	2105      	movs	r1, #5
 8001b14:	f003 fc5a 	bl	80053cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b18:	205c      	movs	r0, #92	; 0x5c
 8001b1a:	f003 fc89 	bl	8005430 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b1e:	b008      	add	sp, #32
 8001b20:	bd10      	pop	{r4, pc}
 8001b22:	bf00      	nop
 8001b24:	40016c00 	.word	0x40016c00
 8001b28:	40022400 	.word	0x40022400

08001b2c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b2c:	b530      	push	{r4, r5, lr}
 8001b2e:	4604      	mov	r4, r0
 8001b30:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b32:	2214      	movs	r2, #20
 8001b34:	2100      	movs	r1, #0
 8001b36:	a803      	add	r0, sp, #12
 8001b38:	f01d fce8 	bl	801f50c <memset>
  if(hi2c->Instance==I2C1)
 8001b3c:	6822      	ldr	r2, [r4, #0]
 8001b3e:	4b1a      	ldr	r3, [pc, #104]	; (8001ba8 <HAL_I2C_MspInit+0x7c>)
 8001b40:	429a      	cmp	r2, r3
 8001b42:	d12f      	bne.n	8001ba4 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b44:	4c19      	ldr	r4, [pc, #100]	; (8001bac <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b46:	481a      	ldr	r0, [pc, #104]	; (8001bb0 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b48:	2500      	movs	r5, #0
 8001b4a:	9501      	str	r5, [sp, #4]
 8001b4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b4e:	f043 0302 	orr.w	r3, r3, #2
 8001b52:	6323      	str	r3, [r4, #48]	; 0x30
 8001b54:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b56:	f003 0302 	and.w	r3, r3, #2
 8001b5a:	9301      	str	r3, [sp, #4]
 8001b5c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b5e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b62:	2312      	movs	r3, #18
 8001b64:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b68:	2101      	movs	r1, #1
 8001b6a:	2303      	movs	r3, #3
 8001b6c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b70:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b72:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b74:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b76:	f004 fb6f 	bl	8006258 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b7a:	9502      	str	r5, [sp, #8]
 8001b7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b7e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b82:	6423      	str	r3, [r4, #64]	; 0x40
 8001b84:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b86:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b8a:	9302      	str	r3, [sp, #8]
 8001b8c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b8e:	6a23      	ldr	r3, [r4, #32]
 8001b90:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b94:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b96:	6a23      	ldr	r3, [r4, #32]
 8001b98:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b9c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b9e:	2064      	movs	r0, #100	; 0x64
 8001ba0:	f003 fbee 	bl	8005380 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001ba4:	b009      	add	sp, #36	; 0x24
 8001ba6:	bd30      	pop	{r4, r5, pc}
 8001ba8:	40005400 	.word	0x40005400
 8001bac:	40023800 	.word	0x40023800
 8001bb0:	40020400 	.word	0x40020400

08001bb4 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bb4:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bb6:	6802      	ldr	r2, [r0, #0]
 8001bb8:	4b0a      	ldr	r3, [pc, #40]	; (8001be4 <HAL_I2C_MspDeInit+0x30>)
 8001bba:	429a      	cmp	r2, r3
 8001bbc:	d110      	bne.n	8001be0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bbe:	4a0a      	ldr	r2, [pc, #40]	; (8001be8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bc0:	480a      	ldr	r0, [pc, #40]	; (8001bec <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bc2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001bc4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bc8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bca:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bce:	f004 fc2b 	bl	8006428 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bd6:	4805      	ldr	r0, [pc, #20]	; (8001bec <HAL_I2C_MspDeInit+0x38>)
 8001bd8:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bdc:	f004 bc24 	b.w	8006428 <HAL_GPIO_DeInit>
}
 8001be0:	bd08      	pop	{r3, pc}
 8001be2:	bf00      	nop
 8001be4:	40005400 	.word	0x40005400
 8001be8:	40023800 	.word	0x40023800
 8001bec:	40020400 	.word	0x40020400

08001bf0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bf0:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 8001bf2:	4b0f      	ldr	r3, [pc, #60]	; (8001c30 <HAL_LTDC_MspInit+0x40>)
 8001bf4:	6802      	ldr	r2, [r0, #0]
 8001bf6:	429a      	cmp	r2, r3
 8001bf8:	d116      	bne.n	8001c28 <HAL_LTDC_MspInit+0x38>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bfa:	2200      	movs	r2, #0
 8001bfc:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c00:	9201      	str	r2, [sp, #4]
 8001c02:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001c04:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c08:	6459      	str	r1, [r3, #68]	; 0x44
 8001c0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c0c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c10:	9301      	str	r3, [sp, #4]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c12:	2105      	movs	r1, #5
 8001c14:	2058      	movs	r0, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c16:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c18:	f003 fbd8 	bl	80053cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c1c:	2058      	movs	r0, #88	; 0x58
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c1e:	b003      	add	sp, #12
 8001c20:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c24:	f003 bc04 	b.w	8005430 <HAL_NVIC_EnableIRQ>
}
 8001c28:	b003      	add	sp, #12
 8001c2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c2e:	bf00      	nop
 8001c30:	40016800 	.word	0x40016800

08001c34 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c36:	4604      	mov	r4, r0
 8001c38:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c3a:	2214      	movs	r2, #20
 8001c3c:	2100      	movs	r1, #0
 8001c3e:	a803      	add	r0, sp, #12
 8001c40:	f01d fc64 	bl	801f50c <memset>
  if(hqspi->Instance==QUADSPI)
 8001c44:	6822      	ldr	r2, [r4, #0]
 8001c46:	4b24      	ldr	r3, [pc, #144]	; (8001cd8 <HAL_QSPI_MspInit+0xa4>)
 8001c48:	429a      	cmp	r2, r3
 8001c4a:	d142      	bne.n	8001cd2 <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c4c:	4b23      	ldr	r3, [pc, #140]	; (8001cdc <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c4e:	4824      	ldr	r0, [pc, #144]	; (8001ce0 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c50:	2400      	movs	r4, #0
 8001c52:	9400      	str	r4, [sp, #0]
 8001c54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c56:	f042 0202 	orr.w	r2, r2, #2
 8001c5a:	639a      	str	r2, [r3, #56]	; 0x38
 8001c5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c5e:	f002 0202 	and.w	r2, r2, #2
 8001c62:	9200      	str	r2, [sp, #0]
 8001c64:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c66:	9401      	str	r4, [sp, #4]
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f042 0202 	orr.w	r2, r2, #2
 8001c6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f002 0202 	and.w	r2, r2, #2
 8001c76:	9201      	str	r2, [sp, #4]
 8001c78:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c7a:	9402      	str	r4, [sp, #8]
 8001c7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7e:	f042 0220 	orr.w	r2, r2, #32
 8001c82:	631a      	str	r2, [r3, #48]	; 0x30
 8001c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c86:	f003 0320 	and.w	r3, r3, #32
 8001c8a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c8e:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c90:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c92:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c94:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c96:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c9c:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ca0:	f004 fada 	bl	8006258 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001ca4:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cac:	480d      	ldr	r0, [pc, #52]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cae:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001cb2:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cb4:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	f004 face 	bl	8006258 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cbc:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc0:	4808      	ldr	r0, [pc, #32]	; (8001ce4 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cc2:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc6:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cca:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cce:	f004 fac3 	bl	8006258 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cd2:	b009      	add	sp, #36	; 0x24
 8001cd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cd6:	bf00      	nop
 8001cd8:	a0001000 	.word	0xa0001000
 8001cdc:	40023800 	.word	0x40023800
 8001ce0:	40020400 	.word	0x40020400
 8001ce4:	40021400 	.word	0x40021400

08001ce8 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ce8:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001cea:	6802      	ldr	r2, [r0, #0]
 8001cec:	4b09      	ldr	r3, [pc, #36]	; (8001d14 <HAL_QSPI_MspDeInit+0x2c>)
 8001cee:	429a      	cmp	r2, r3
 8001cf0:	d10f      	bne.n	8001d12 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf2:	4a09      	ldr	r2, [pc, #36]	; (8001d18 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cf4:	4809      	ldr	r0, [pc, #36]	; (8001d1c <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cf6:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cf8:	f023 0302 	bic.w	r3, r3, #2
 8001cfc:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cfe:	2140      	movs	r1, #64	; 0x40
 8001d00:	f004 fb92 	bl	8006428 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d08:	4805      	ldr	r0, [pc, #20]	; (8001d20 <HAL_QSPI_MspDeInit+0x38>)
 8001d0a:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d0e:	f004 bb8b 	b.w	8006428 <HAL_GPIO_DeInit>
}
 8001d12:	bd08      	pop	{r3, pc}
 8001d14:	a0001000 	.word	0xa0001000
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40020400 	.word	0x40020400
 8001d20:	40021400 	.word	0x40021400

08001d24 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d26:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d28:	2300      	movs	r3, #0
 8001d2a:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d2c:	4b30      	ldr	r3, [pc, #192]	; (8001df0 <HAL_SDRAM_MspInit+0xcc>)
 8001d2e:	681c      	ldr	r4, [r3, #0]
 8001d30:	2c00      	cmp	r4, #0
 8001d32:	d15a      	bne.n	8001dea <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d34:	2201      	movs	r2, #1
 8001d36:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d38:	4b2e      	ldr	r3, [pc, #184]	; (8001df4 <HAL_SDRAM_MspInit+0xd0>)
 8001d3a:	9400      	str	r4, [sp, #0]
 8001d3c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d3e:	482e      	ldr	r0, [pc, #184]	; (8001df8 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d40:	f042 0201 	orr.w	r2, r2, #1
 8001d44:	639a      	str	r2, [r3, #56]	; 0x38
 8001d46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d48:	f003 0301 	and.w	r3, r3, #1
 8001d4c:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4e:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d50:	2603      	movs	r6, #3
 8001d52:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d54:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d56:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d58:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d5c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d60:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d64:	f004 fa78 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d68:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d6c:	4823      	ldr	r0, [pc, #140]	; (8001dfc <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d6e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d70:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d72:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d76:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d7a:	f004 fa6d 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d7e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d82:	481f      	ldr	r0, [pc, #124]	; (8001e00 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d84:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d86:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d88:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d8c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d90:	f004 fa62 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d94:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d98:	481a      	ldr	r0, [pc, #104]	; (8001e04 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d9a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d9c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d9e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001da2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001da6:	f004 fa57 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001daa:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dae:	4816      	ldr	r0, [pc, #88]	; (8001e08 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001db0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001db4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dbc:	f004 fa4c 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001dc0:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc4:	4811      	ldr	r0, [pc, #68]	; (8001e0c <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dc6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dce:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dd2:	f004 fa41 	bl	8006258 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001dd6:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd8:	480d      	ldr	r0, [pc, #52]	; (8001e10 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dda:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ddc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dde:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001de2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001de6:	f004 fa37 	bl	8006258 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dea:	b007      	add	sp, #28
 8001dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001dee:	bf00      	nop
 8001df0:	200043c4 	.word	0x200043c4
 8001df4:	40023800 	.word	0x40023800
 8001df8:	40021000 	.word	0x40021000
 8001dfc:	40021800 	.word	0x40021800
 8001e00:	40020c00 	.word	0x40020c00
 8001e04:	40022000 	.word	0x40022000
 8001e08:	40021400 	.word	0x40021400
 8001e0c:	40021c00 	.word	0x40021c00
 8001e10:	40020800 	.word	0x40020800

08001e14 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e14:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e16:	4b17      	ldr	r3, [pc, #92]	; (8001e74 <HAL_SDRAM_MspDeInit+0x60>)
 8001e18:	681a      	ldr	r2, [r3, #0]
 8001e1a:	bb52      	cbnz	r2, 8001e72 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e1c:	2201      	movs	r2, #1
 8001e1e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e20:	4a15      	ldr	r2, [pc, #84]	; (8001e78 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e22:	4816      	ldr	r0, [pc, #88]	; (8001e7c <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e24:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e26:	f023 0301 	bic.w	r3, r3, #1
 8001e2a:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e2c:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e30:	f004 fafa 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e34:	4812      	ldr	r0, [pc, #72]	; (8001e80 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e36:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e3a:	f004 faf5 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e3e:	4811      	ldr	r0, [pc, #68]	; (8001e84 <HAL_SDRAM_MspDeInit+0x70>)
 8001e40:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e44:	f004 faf0 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e48:	480f      	ldr	r0, [pc, #60]	; (8001e88 <HAL_SDRAM_MspDeInit+0x74>)
 8001e4a:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e4e:	f004 faeb 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e52:	480e      	ldr	r0, [pc, #56]	; (8001e8c <HAL_SDRAM_MspDeInit+0x78>)
 8001e54:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e58:	f004 fae6 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e5c:	480c      	ldr	r0, [pc, #48]	; (8001e90 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e5e:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e62:	f004 fae1 	bl	8006428 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e6a:	480a      	ldr	r0, [pc, #40]	; (8001e94 <HAL_SDRAM_MspDeInit+0x80>)
 8001e6c:	210d      	movs	r1, #13
 8001e6e:	f004 badb 	b.w	8006428 <HAL_GPIO_DeInit>
}
 8001e72:	bd08      	pop	{r3, pc}
 8001e74:	200043c0 	.word	0x200043c0
 8001e78:	40023800 	.word	0x40023800
 8001e7c:	40021000 	.word	0x40021000
 8001e80:	40021800 	.word	0x40021800
 8001e84:	40020c00 	.word	0x40020c00
 8001e88:	40022000 	.word	0x40022000
 8001e8c:	40021400 	.word	0x40021400
 8001e90:	40021c00 	.word	0x40021c00
 8001e94:	40020800 	.word	0x40020800

08001e98 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e98:	b530      	push	{r4, r5, lr}
 8001e9a:	4601      	mov	r1, r0
 8001e9c:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e9e:	2200      	movs	r2, #0
 8001ea0:	2036      	movs	r0, #54	; 0x36
 8001ea2:	f003 fa93 	bl	80053cc <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ea6:	2036      	movs	r0, #54	; 0x36
 8001ea8:	f003 fac2 	bl	8005430 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eac:	2500      	movs	r5, #0
 8001eae:	4b15      	ldr	r3, [pc, #84]	; (8001f04 <HAL_InitTick+0x6c>)
 8001eb0:	9502      	str	r5, [sp, #8]
 8001eb2:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eb4:	4c14      	ldr	r4, [pc, #80]	; (8001f08 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eb6:	f042 0210 	orr.w	r2, r2, #16
 8001eba:	641a      	str	r2, [r3, #64]	; 0x40
 8001ebc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ebe:	f003 0310 	and.w	r3, r3, #16
 8001ec2:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec4:	a901      	add	r1, sp, #4
 8001ec6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001eca:	f005 fd7b 	bl	80079c4 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ece:	f005 fd69 	bl	80079a4 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001ed2:	4b0e      	ldr	r3, [pc, #56]	; (8001f0c <HAL_InitTick+0x74>)
 8001ed4:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001ed6:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001eda:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001edc:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ede:	4b0c      	ldr	r3, [pc, #48]	; (8001f10 <HAL_InitTick+0x78>)
 8001ee0:	fbb0 f0f3 	udiv	r0, r0, r3
 8001ee4:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ee6:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee8:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001eea:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001eec:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001eee:	f006 f9e7 	bl	80082c0 <HAL_TIM_Base_Init>
 8001ef2:	b920      	cbnz	r0, 8001efe <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001ef4:	4620      	mov	r0, r4
 8001ef6:	f006 f8c7 	bl	8008088 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001efa:	b009      	add	sp, #36	; 0x24
 8001efc:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001efe:	2001      	movs	r0, #1
 8001f00:	e7fb      	b.n	8001efa <HAL_InitTick+0x62>
 8001f02:	bf00      	nop
 8001f04:	40023800 	.word	0x40023800
 8001f08:	200043c8 	.word	0x200043c8
 8001f0c:	40001000 	.word	0x40001000
 8001f10:	000f4240 	.word	0x000f4240

08001f14 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f14:	4770      	bx	lr

08001f16 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f16:	e7fe      	b.n	8001f16 <HardFault_Handler>

08001f18 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f18:	e7fe      	b.n	8001f18 <MemManage_Handler>

08001f1a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f1a:	e7fe      	b.n	8001f1a <BusFault_Handler>

08001f1c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f1c:	e7fe      	b.n	8001f1c <UsageFault_Handler>

08001f1e <DebugMon_Handler>:
 8001f1e:	4770      	bx	lr

08001f20 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f20:	4801      	ldr	r0, [pc, #4]	; (8001f28 <TIM6_DAC_IRQHandler+0x8>)
 8001f22:	f006 b8c5 	b.w	80080b0 <HAL_TIM_IRQHandler>
 8001f26:	bf00      	nop
 8001f28:	200043c8 	.word	0x200043c8

08001f2c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f2c:	4801      	ldr	r0, [pc, #4]	; (8001f34 <LTDC_IRQHandler+0x8>)
 8001f2e:	f005 b85e 	b.w	8006fee <HAL_LTDC_IRQHandler>
 8001f32:	bf00      	nop
 8001f34:	20004298 	.word	0x20004298

08001f38 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f38:	4801      	ldr	r0, [pc, #4]	; (8001f40 <DMA2D_IRQHandler+0x8>)
 8001f3a:	f003 bcf1 	b.w	8005920 <HAL_DMA2D_IRQHandler>
 8001f3e:	bf00      	nop
 8001f40:	200041e8 	.word	0x200041e8

08001f44 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f44:	4801      	ldr	r0, [pc, #4]	; (8001f4c <DSI_IRQHandler+0x8>)
 8001f46:	f003 beee 	b.w	8005d26 <HAL_DSI_IRQHandler>
 8001f4a:	bf00      	nop
 8001f4c:	20004228 	.word	0x20004228

08001f50 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f50:	2001      	movs	r0, #1
 8001f52:	4770      	bx	lr

08001f54 <_kill>:

int _kill(int pid, int sig)
{
 8001f54:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f56:	f01d fa7f 	bl	801f458 <__errno>
 8001f5a:	2316      	movs	r3, #22
 8001f5c:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f5e:	f04f 30ff 	mov.w	r0, #4294967295
 8001f62:	bd08      	pop	{r3, pc}

08001f64 <_exit>:

void _exit (int status)
{
 8001f64:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f66:	f01d fa77 	bl	801f458 <__errno>
 8001f6a:	2316      	movs	r3, #22
 8001f6c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f6e:	e7fe      	b.n	8001f6e <_exit+0xa>

08001f70 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f70:	b570      	push	{r4, r5, r6, lr}
 8001f72:	460d      	mov	r5, r1
 8001f74:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f76:	460e      	mov	r6, r1
 8001f78:	1b73      	subs	r3, r6, r5
 8001f7a:	429c      	cmp	r4, r3
 8001f7c:	dc01      	bgt.n	8001f82 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f7e:	4620      	mov	r0, r4
 8001f80:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f82:	f3af 8000 	nop.w
 8001f86:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8a:	e7f5      	b.n	8001f78 <_read+0x8>

08001f8c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f8c:	b570      	push	{r4, r5, r6, lr}
 8001f8e:	460d      	mov	r5, r1
 8001f90:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f92:	460e      	mov	r6, r1
 8001f94:	1b73      	subs	r3, r6, r5
 8001f96:	429c      	cmp	r4, r3
 8001f98:	dc01      	bgt.n	8001f9e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f9a:	4620      	mov	r0, r4
 8001f9c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f9e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001fa2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fa6:	e7f5      	b.n	8001f94 <_write+0x8>

08001fa8 <_close>:

int _close(int file)
{
	return -1;
}
 8001fa8:	f04f 30ff 	mov.w	r0, #4294967295
 8001fac:	4770      	bx	lr

08001fae <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fae:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001fb2:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	4770      	bx	lr

08001fb8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fb8:	2001      	movs	r0, #1
 8001fba:	4770      	bx	lr

08001fbc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	4770      	bx	lr

08001fc0 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fc0:	4a0a      	ldr	r2, [pc, #40]	; (8001fec <_sbrk+0x2c>)
 8001fc2:	6811      	ldr	r1, [r2, #0]
{
 8001fc4:	b508      	push	{r3, lr}
 8001fc6:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fc8:	b909      	cbnz	r1, 8001fce <_sbrk+0xe>
		heap_end = &end;
 8001fca:	4909      	ldr	r1, [pc, #36]	; (8001ff0 <_sbrk+0x30>)
 8001fcc:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fce:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fd0:	4669      	mov	r1, sp
 8001fd2:	4403      	add	r3, r0
 8001fd4:	428b      	cmp	r3, r1
 8001fd6:	d906      	bls.n	8001fe6 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fd8:	f01d fa3e 	bl	801f458 <__errno>
 8001fdc:	230c      	movs	r3, #12
 8001fde:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fe0:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fe4:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fe6:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fe8:	e7fc      	b.n	8001fe4 <_sbrk+0x24>
 8001fea:	bf00      	nop
 8001fec:	20004408 	.word	0x20004408
 8001ff0:	2000d6d0 	.word	0x2000d6d0

08001ff4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;         // verdana_10_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // comicbd_83_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001ff4:	4770      	bx	lr

08001ff6 <_ZN23ApplicationFontProviderD0Ev>:
 8001ff6:	b510      	push	{r4, lr}
 8001ff8:	2104      	movs	r1, #4
 8001ffa:	4604      	mov	r4, r0
 8001ffc:	f01d f9cb 	bl	801f396 <_ZdlPvj>
 8002000:	4620      	mov	r0, r4
 8002002:	bd10      	pop	{r4, pc}

08002004 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002004:	b508      	push	{r3, lr}
    switch (typography)
 8002006:	2903      	cmp	r1, #3
 8002008:	d813      	bhi.n	8002032 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800200a:	e8df f001 	tbb	[pc, r1]
 800200e:	0602      	.short	0x0602
 8002010:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002012:	f002 f8dd 	bl	80041d0 <_ZN17TypedTextDatabase8getFontsEv>
 8002016:	6800      	ldr	r0, [r0, #0]
        // comicbd_83_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002018:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800201a:	f002 f8d9 	bl	80041d0 <_ZN17TypedTextDatabase8getFontsEv>
 800201e:	6840      	ldr	r0, [r0, #4]
 8002020:	e7fa      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002022:	f002 f8d5 	bl	80041d0 <_ZN17TypedTextDatabase8getFontsEv>
 8002026:	6880      	ldr	r0, [r0, #8]
 8002028:	e7f6      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800202a:	f002 f8d1 	bl	80041d0 <_ZN17TypedTextDatabase8getFontsEv>
 800202e:	68c0      	ldr	r0, [r0, #12]
 8002030:	e7f2      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002032:	2000      	movs	r0, #0
 8002034:	e7f0      	b.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002038 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002038:	4800      	ldr	r0, [pc, #0]	; (800203c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800203a:	4770      	bx	lr
 800203c:	08020af4 	.word	0x08020af4

08002040 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002040:	2007      	movs	r0, #7
 8002042:	4770      	bx	lr

08002044 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002044:	b513      	push	{r0, r1, r4, lr}
 8002046:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002048:	b151      	cbz	r1, 8002060 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800204a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800204c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800204e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002052:	aa01      	add	r2, sp, #4
 8002054:	689c      	ldr	r4, [r3, #8]
 8002056:	f10d 0303 	add.w	r3, sp, #3
 800205a:	47a0      	blx	r4
        return glyph;
    }
 800205c:	b002      	add	sp, #8
 800205e:	bd10      	pop	{r4, pc}
            return 0;
 8002060:	4608      	mov	r0, r1
 8002062:	e7fb      	b.n	800205c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002064 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002064:	8940      	ldrh	r0, [r0, #10]
 8002066:	4770      	bx	lr

08002068 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002068:	8980      	ldrh	r0, [r0, #12]
 800206a:	4770      	bx	lr

0800206c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 800206c:	8880      	ldrh	r0, [r0, #4]
 800206e:	4770      	bx	lr

08002070 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002070:	7983      	ldrb	r3, [r0, #6]
 8002072:	8880      	ldrh	r0, [r0, #4]
 8002074:	4418      	add	r0, r3
    }
 8002076:	b280      	uxth	r0, r0
 8002078:	4770      	bx	lr

0800207a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800207a:	79c0      	ldrb	r0, [r0, #7]
    }
 800207c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002080:	4770      	bx	lr

08002082 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002082:	79c0      	ldrb	r0, [r0, #7]
    }
 8002084:	09c0      	lsrs	r0, r0, #7
 8002086:	4770      	bx	lr

08002088 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002088:	4770      	bx	lr

0800208a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800208a:	b510      	push	{r4, lr}
    }
 800208c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800208e:	4604      	mov	r4, r0
    }
 8002090:	f01d f981 	bl	801f396 <_ZdlPvj>
 8002094:	4620      	mov	r0, r4
 8002096:	bd10      	pop	{r4, pc}

08002098 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002098:	4770      	bx	lr

0800209a <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800209a:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800209e:	6808      	ldr	r0, [r1, #0]
 80020a0:	6849      	ldr	r1, [r1, #4]
 80020a2:	c303      	stmia	r3!, {r0, r1}
    };
 80020a4:	4770      	bx	lr

080020a6 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80020a6:	2000      	movs	r0, #0
 80020a8:	4770      	bx	lr

080020aa <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80020aa:	8081      	strh	r1, [r0, #4]
    }
 80020ac:	4770      	bx	lr

080020ae <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80020ae:	80c1      	strh	r1, [r0, #6]
    }
 80020b0:	4770      	bx	lr

080020b2 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80020b2:	8101      	strh	r1, [r0, #8]
    }
 80020b4:	4770      	bx	lr

080020b6 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80020b6:	8141      	strh	r1, [r0, #10]
    }
 80020b8:	4770      	bx	lr

080020ba <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80020ba:	4770      	bx	lr

080020bc <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80020bc:	4770      	bx	lr

080020be <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80020be:	4770      	bx	lr

080020c0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80020c0:	4770      	bx	lr

080020c2 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80020c2:	4770      	bx	lr

080020c4 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80020c4:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80020c6:	88c4      	ldrh	r4, [r0, #6]
 80020c8:	6803      	ldr	r3, [r0, #0]
 80020ca:	1b12      	subs	r2, r2, r4
 80020cc:	8884      	ldrh	r4, [r0, #4]
 80020ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80020d0:	1b09      	subs	r1, r1, r4
 80020d2:	b212      	sxth	r2, r2
    }
 80020d4:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80020d8:	b209      	sxth	r1, r1
 80020da:	4718      	bx	r3

080020dc <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80020dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80020e0:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80020e2:	f04f 33ff 	mov.w	r3, #4294967295
 80020e6:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80020e8:	6813      	ldr	r3, [r2, #0]
 80020ea:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80020ec:	6010      	str	r0, [r2, #0]
    }
 80020ee:	4770      	bx	lr

080020f0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80020f0:	4770      	bx	lr

080020f2 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80020f2:	4770      	bx	lr

080020f4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80020f4:	6041      	str	r1, [r0, #4]
    }
 80020f6:	4770      	bx	lr

080020f8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80020f8:	4770      	bx	lr

080020fa <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80020fa:	2301      	movs	r3, #1
 80020fc:	7203      	strb	r3, [r0, #8]
    }
 80020fe:	4770      	bx	lr

08002100 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002100:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002104:	b11a      	cbz	r2, 800210e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002106:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800210a:	b102      	cbz	r2, 800210e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800210c:	6018      	str	r0, [r3, #0]
        }
    }
 800210e:	4770      	bx	lr

08002110 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 8002110:	4770      	bx	lr

08002112 <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
 8002114:	4770      	bx	lr

08002116 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE>:
    /**
     * Moves the Drawable.
     *
     * @param [in] d The Drawable to move.
     */
    virtual void tickMoveDrawable(Drawable& d)
 8002116:	4603      	mov	r3, r0
 8002118:	b410      	push	{r4}
    {
        if (&d == snapshotPtr)
 800211a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800211c:	428a      	cmp	r2, r1
    virtual void tickMoveDrawable(Drawable& d)
 800211e:	4608      	mov	r0, r1
        if (&d == snapshotPtr)
 8002120:	d008      	beq.n	8002134 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE+0x1e>

        switch (templateDirection)
        {
        case EAST:
        case WEST:
            d.moveRelative(calculatedValue, 0);
 8002122:	680a      	ldr	r2, [r1, #0]
 8002124:	f9b3 1050 	ldrsh.w	r1, [r3, #80]	; 0x50
 8002128:	6d14      	ldr	r4, [r2, #80]	; 0x50
 800212a:	2200      	movs	r2, #0
 800212c:	4623      	mov	r3, r4
        default:
            // Special case, do not move. Class NoTransition can be used instead.
            done = true;
            break;
        }
    }
 800212e:	f85d 4b04 	ldr.w	r4, [sp], #4
            d.moveRelative(calculatedValue, 0);
 8002132:	4718      	bx	r3
    }
 8002134:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002138:	4770      	bx	lr

0800213a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 800213a:	4770      	bx	lr

0800213c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
class SlideTransition : public Transition
 800213c:	4770      	bx	lr

0800213e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED1Ev>:
 800213e:	4770      	bx	lr

08002140 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002140:	4770      	bx	lr

08002142 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002142:	4770      	bx	lr

08002144 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            //Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002144:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002146:	6840      	ldr	r0, [r0, #4]
 8002148:	6803      	ldr	r3, [r0, #0]
 800214a:	3110      	adds	r1, #16
 800214c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800214e:	4718      	bx	r3

08002150 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8002150:	4601      	mov	r1, r0
    {
        Transition::init();
        //add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002152:	6840      	ldr	r0, [r0, #4]
 8002154:	6803      	ldr	r3, [r0, #0]
 8002156:	3110      	adds	r1, #16
 8002158:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800215a:	4718      	bx	r3

0800215c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
        //nop
    }
 800215c:	4770      	bx	lr

0800215e <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 800215e:	4770      	bx	lr

08002160 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 8002160:	b510      	push	{r4, lr}
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 8002162:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002164:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002168:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800216c:	8002      	strh	r2, [r0, #0]
        this->y = y;
 800216e:	8042      	strh	r2, [r0, #2]
        this->width = width;
 8002170:	8084      	strh	r4, [r0, #4]
        this->height = height;
 8002172:	80c1      	strh	r1, [r0, #6]
        }
 8002174:	bd10      	pop	{r4, pc}
	...

08002178 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE>:
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 8002178:	680b      	ldr	r3, [r1, #0]
    virtual void initMoveDrawable(Drawable& d)
 800217a:	4608      	mov	r0, r1
            d.moveRelative(HAL::DISPLAY_WIDTH, 0);
 800217c:	4902      	ldr	r1, [pc, #8]	; (8002188 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE+0x10>)
 800217e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002180:	f9b1 1000 	ldrsh.w	r1, [r1]
 8002184:	2200      	movs	r2, #0
 8002186:	4718      	bx	r3
 8002188:	2000d400 	.word	0x2000d400

0800218c <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7executeES5_>:
    virtual void execute(T1 t1)
 800218c:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800218e:	68c2      	ldr	r2, [r0, #12]
 8002190:	6844      	ldr	r4, [r0, #4]
 8002192:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002194:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002196:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800219a:	07d2      	lsls	r2, r2, #31
 800219c:	bf48      	it	mi
 800219e:	5962      	ldrmi	r2, [r4, r5]
 80021a0:	689b      	ldr	r3, [r3, #8]
    }
 80021a2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80021a4:	bf48      	it	mi
 80021a6:	58d3      	ldrmi	r3, [r2, r3]
 80021a8:	4718      	bx	r3

080021aa <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80021aa:	6843      	ldr	r3, [r0, #4]
 80021ac:	b12b      	cbz	r3, 80021ba <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x10>
 80021ae:	6883      	ldr	r3, [r0, #8]
 80021b0:	b92b      	cbnz	r3, 80021be <_ZNK8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvE7isValidEv+0x14>
 80021b2:	68c0      	ldr	r0, [r0, #12]
 80021b4:	f000 0001 	and.w	r0, r0, #1
 80021b8:	4770      	bx	lr
 80021ba:	4618      	mov	r0, r3
 80021bc:	4770      	bx	lr
 80021be:	2001      	movs	r0, #1
    }
 80021c0:	4770      	bx	lr

080021c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE8tearDownEv>:
    virtual void tearDown()
 80021c2:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80021c4:	6840      	ldr	r0, [r0, #4]
 80021c6:	6803      	ldr	r3, [r0, #0]
 80021c8:	3110      	adds	r1, #16
 80021ca:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021cc:	4718      	bx	r3

080021ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE4initEv>:
    virtual void init()
 80021ce:	4601      	mov	r1, r0
        screenContainer->add(solid);
 80021d0:	6840      	ldr	r0, [r0, #4]
 80021d2:	6803      	ldr	r3, [r0, #0]
 80021d4:	3110      	adds	r1, #16
 80021d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80021d8:	4718      	bx	r3

080021da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE10invalidateEv>:
    }
 80021da:	4770      	bx	lr

080021dc <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80021dc:	4770      	bx	lr

080021de <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80021de:	b510      	push	{r4, lr}
        this->x = x;
 80021e0:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80021e2:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80021e6:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021ea:	8002      	strh	r2, [r0, #0]
        this->y = y;
 80021ec:	8042      	strh	r2, [r0, #2]
        this->width = width;
 80021ee:	8084      	strh	r4, [r0, #4]
        this->height = height;
 80021f0:	80c1      	strh	r1, [r0, #6]
        }
 80021f2:	bd10      	pop	{r4, pc}

080021f4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021f4:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 80021f6:	68c2      	ldr	r2, [r0, #12]
 80021f8:	6841      	ldr	r1, [r0, #4]
 80021fa:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80021fc:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80021fe:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002202:	07d2      	lsls	r2, r2, #31
 8002204:	bf48      	it	mi
 8002206:	590a      	ldrmi	r2, [r1, r4]
 8002208:	689b      	ldr	r3, [r3, #8]
    }
 800220a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 800220e:	bf48      	it	mi
 8002210:	58d3      	ldrmi	r3, [r2, r3]
 8002212:	4718      	bx	r3

08002214 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002214:	6843      	ldr	r3, [r0, #4]
 8002216:	b12b      	cbz	r3, 8002224 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002218:	6883      	ldr	r3, [r0, #8]
 800221a:	b92b      	cbnz	r3, 8002228 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800221c:	68c0      	ldr	r0, [r0, #12]
 800221e:	f000 0001 	and.w	r0, r0, #1
 8002222:	4770      	bx	lr
 8002224:	4618      	mov	r0, r3
 8002226:	4770      	bx	lr
 8002228:	2001      	movs	r0, #1
    }
 800222a:	4770      	bx	lr

0800222c <_ZN8touchgfx12NoTransitionD0Ev>:
 800222c:	b510      	push	{r4, lr}
 800222e:	210c      	movs	r1, #12
 8002230:	4604      	mov	r4, r0
 8002232:	f01d f8b0 	bl	801f396 <_ZdlPvj>
 8002236:	4620      	mov	r0, r4
 8002238:	bd10      	pop	{r4, pc}

0800223a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800223a:	b510      	push	{r4, lr}
 800223c:	2110      	movs	r1, #16
 800223e:	4604      	mov	r4, r0
 8002240:	f01d f8a9 	bl	801f396 <_ZdlPvj>
 8002244:	4620      	mov	r0, r4
 8002246:	bd10      	pop	{r4, pc}

08002248 <_ZN23FrontendApplicationBaseD0Ev>:
 8002248:	b510      	push	{r4, lr}
 800224a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800224e:	4604      	mov	r4, r0
 8002250:	f01d f8a1 	bl	801f396 <_ZdlPvj>
 8002254:	4620      	mov	r0, r4
 8002256:	bd10      	pop	{r4, pc}

08002258 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002258:	b510      	push	{r4, lr}
 800225a:	2138      	movs	r1, #56	; 0x38
 800225c:	4604      	mov	r4, r0
 800225e:	f01d f89a 	bl	801f396 <_ZdlPvj>
 8002262:	4620      	mov	r0, r4
 8002264:	bd10      	pop	{r4, pc}

08002266 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002266:	b510      	push	{r4, lr}
 8002268:	2128      	movs	r1, #40	; 0x28
 800226a:	4604      	mov	r4, r0
 800226c:	f01d f893 	bl	801f396 <_ZdlPvj>
 8002270:	4620      	mov	r0, r4
 8002272:	bd10      	pop	{r4, pc}

08002274 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EED0Ev>:
class WipeTransition : public Transition
 8002274:	b510      	push	{r4, lr}
 8002276:	2138      	movs	r1, #56	; 0x38
 8002278:	4604      	mov	r4, r0
 800227a:	f01d f88c 	bl	801f396 <_ZdlPvj>
 800227e:	4620      	mov	r0, r4
 8002280:	bd10      	pop	{r4, pc}

08002282 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002282:	b510      	push	{r4, lr}
 8002284:	2128      	movs	r1, #40	; 0x28
 8002286:	4604      	mov	r4, r0
 8002288:	f01d f885 	bl	801f396 <_ZdlPvj>
 800228c:	4620      	mov	r0, r4
 800228e:	bd10      	pop	{r4, pc}

08002290 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
class SlideTransition : public Transition
 8002290:	b510      	push	{r4, lr}
 8002292:	2154      	movs	r1, #84	; 0x54
 8002294:	4604      	mov	r4, r0
 8002296:	f01d f87e 	bl	801f396 <_ZdlPvj>
 800229a:	4620      	mov	r0, r4
 800229c:	bd10      	pop	{r4, pc}

0800229e <_ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800229e:	b510      	push	{r4, lr}
 80022a0:	2110      	movs	r1, #16
 80022a2:	4604      	mov	r4, r0
 80022a4:	f01d f877 	bl	801f396 <_ZdlPvj>
 80022a8:	4620      	mov	r0, r4
 80022aa:	bd10      	pop	{r4, pc}

080022ac <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80022ac:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80022ae:	f00d f845 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 80022b2:	6803      	ldr	r3, [r0, #0]
    }
 80022b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 80022b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022ba:	4718      	bx	r3

080022bc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80022bc:	4b05      	ldr	r3, [pc, #20]	; (80022d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80022be:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80022c0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80022c2:	b12b      	cbz	r3, 80022d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80022c4:	6840      	ldr	r0, [r0, #4]
 80022c6:	b118      	cbz	r0, 80022d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80022c8:	6803      	ldr	r3, [r0, #0]
 80022ca:	310c      	adds	r1, #12
 80022cc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80022ce:	4718      	bx	r3
    }
 80022d0:	4770      	bx	lr
 80022d2:	bf00      	nop
 80022d4:	2000d40b 	.word	0x2000d40b

080022d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
        if (!HAL::USE_ANIMATION_STORAGE)
 80022d8:	4b1f      	ldr	r3, [pc, #124]	; (8002358 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>)
 80022da:	781b      	ldrb	r3, [r3, #0]
    virtual void handleTickEvent()
 80022dc:	b510      	push	{r4, lr}
 80022de:	4604      	mov	r4, r0
        if (!HAL::USE_ANIMATION_STORAGE)
 80022e0:	b913      	cbnz	r3, 80022e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x10>
            done = true;
 80022e2:	2301      	movs	r3, #1
 80022e4:	7203      	strb	r3, [r0, #8]
    }
 80022e6:	bd10      	pop	{r4, pc}
        animationCounter++;
 80022e8:	f890 004d 	ldrb.w	r0, [r0, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80022ec:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
        animationCounter++;
 80022f0:	3001      	adds	r0, #1
 80022f2:	b2c0      	uxtb	r0, r0
        if (animationCounter <= animationSteps)
 80022f4:	4298      	cmp	r0, r3
        animationCounter++;
 80022f6:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
        if (animationCounter <= animationSteps)
 80022fa:	d824      	bhi.n	8002346 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6e>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80022fc:	f9b4 204e 	ldrsh.w	r2, [r4, #78]	; 0x4e
 8002300:	2100      	movs	r1, #0
 8002302:	f00e fd32 	bl	8010d6a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002306:	f010 0201 	ands.w	r2, r0, #1
 800230a:	b283      	uxth	r3, r0
 800230c:	d021      	beq.n	8002352 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x7a>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800230e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002312:	2800      	cmp	r0, #0
 8002314:	bfd8      	it	le
 8002316:	460a      	movle	r2, r1
 8002318:	4413      	add	r3, r2
 800231a:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
            calculatedValue -= snapshot.getX();
 800231e:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8002322:	8a23      	ldrh	r3, [r4, #16]
 8002324:	1ac9      	subs	r1, r1, r3
 8002326:	b209      	sxth	r1, r1
 8002328:	f8a4 1050 	strh.w	r1, [r4, #80]	; 0x50
            snapshot.moveRelative(calculatedValue, 0);
 800232c:	f104 000c 	add.w	r0, r4, #12
 8002330:	2200      	movs	r2, #0
 8002332:	f00d ffd6 	bl	80102e2 <_ZN8touchgfx8Drawable12moveRelativeEss>
        screenContainer->forEachChild(&handleTickCallback);
 8002336:	6860      	ldr	r0, [r4, #4]
 8002338:	6803      	ldr	r3, [r0, #0]
 800233a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800233e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
    }
 8002340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        screenContainer->forEachChild(&handleTickCallback);
 8002344:	4718      	bx	r3
            done = true;
 8002346:	2301      	movs	r3, #1
 8002348:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800234a:	2300      	movs	r3, #0
 800234c:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
            return;
 8002350:	e7c9      	b.n	80022e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0xe>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002352:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 8002356:	e7e2      	b.n	800231e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x46>
 8002358:	2000d40b 	.word	0x2000d40b

0800235c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800235c:	b510      	push	{r4, lr}
 800235e:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002360:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002364:	b158      	cbz	r0, 800237e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002366:	6803      	ldr	r3, [r0, #0]
 8002368:	68db      	ldr	r3, [r3, #12]
 800236a:	4798      	blx	r3
 800236c:	b138      	cbz	r0, 800237e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800236e:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002372:	6803      	ldr	r3, [r0, #0]
 8002374:	689b      	ldr	r3, [r3, #8]
 8002376:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002378:	2300      	movs	r3, #0
 800237a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800237e:	bd10      	pop	{r4, pc}

08002380 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8002380:	b51f      	push	{r0, r1, r2, r3, r4, lr}
        if (HAL::USE_ANIMATION_STORAGE)
 8002382:	4b0c      	ldr	r3, [pc, #48]	; (80023b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x34>)
 8002384:	781b      	ldrb	r3, [r3, #0]
    virtual void init()
 8002386:	4604      	mov	r4, r0
        if (HAL::USE_ANIMATION_STORAGE)
 8002388:	b18b      	cbz	r3, 80023ae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x2e>
    {
 800238a:	4b0b      	ldr	r3, [pc, #44]	; (80023b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>)
        this->pmemfun_1 = pmemfun_1;
 800238c:	221c      	movs	r2, #28
        this->pobject = pobject;
 800238e:	e9cd 3000 	strd	r3, r0, [sp]
        this->pmemfun_1 = pmemfun_1;
 8002392:	2301      	movs	r3, #1
 8002394:	e9cd 2302 	strd	r2, r3, [sp, #8]
            screenContainer->forEachChild(&initCallback);
 8002398:	6840      	ldr	r0, [r0, #4]
 800239a:	6803      	ldr	r3, [r0, #0]
 800239c:	4669      	mov	r1, sp
 800239e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80023a0:	4798      	blx	r3
            screenContainer->add(snapshot);
 80023a2:	6860      	ldr	r0, [r4, #4]
 80023a4:	6803      	ldr	r3, [r0, #0]
 80023a6:	f104 010c 	add.w	r1, r4, #12
 80023aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80023ac:	4798      	blx	r3
    }
 80023ae:	b004      	add	sp, #16
 80023b0:	bd10      	pop	{r4, pc}
 80023b2:	bf00      	nop
 80023b4:	2000d40b 	.word	0x2000d40b
 80023b8:	0802141c 	.word	0x0802141c

080023bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80023bc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023c0:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80023c4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023c6:	68a8      	ldr	r0, [r5, #8]
 80023c8:	6803      	ldr	r3, [r0, #0]
 80023ca:	6a1b      	ldr	r3, [r3, #32]
 80023cc:	4798      	blx	r3
 80023ce:	f5b0 7fba 	cmp.w	r0, #372	; 0x174
 80023d2:	d205      	bcs.n	80023e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80023d4:	4b45      	ldr	r3, [pc, #276]	; (80024ec <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80023d6:	4a46      	ldr	r2, [pc, #280]	; (80024f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023d8:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80023da:	4846      	ldr	r0, [pc, #280]	; (80024f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80023dc:	f01d f80a 	bl	801f3f4 <__assert_func>
 80023e0:	6868      	ldr	r0, [r5, #4]
 80023e2:	6803      	ldr	r3, [r0, #0]
 80023e4:	6a1b      	ldr	r3, [r3, #32]
 80023e6:	4798      	blx	r3
 80023e8:	280f      	cmp	r0, #15
 80023ea:	d803      	bhi.n	80023f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80023ec:	4b42      	ldr	r3, [pc, #264]	; (80024f8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80023ee:	4a40      	ldr	r2, [pc, #256]	; (80024f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80023f0:	21a8      	movs	r1, #168	; 0xa8
 80023f2:	e7f2      	b.n	80023da <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80023f4:	68e8      	ldr	r0, [r5, #12]
 80023f6:	6803      	ldr	r3, [r0, #0]
 80023f8:	6a1b      	ldr	r3, [r3, #32]
 80023fa:	4798      	blx	r3
 80023fc:	280b      	cmp	r0, #11
 80023fe:	d803      	bhi.n	8002408 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002400:	4b3e      	ldr	r3, [pc, #248]	; (80024fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002402:	4a3b      	ldr	r2, [pc, #236]	; (80024f0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002404:	21a9      	movs	r1, #169	; 0xa9
 8002406:	e7e8      	b.n	80023da <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002408:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002504 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 800240c:	f00c ff96 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8002410:	f00c ffe2 	bl	800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002414:	f8d9 0000 	ldr.w	r0, [r9]
 8002418:	b110      	cbz	r0, 8002420 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800241a:	6803      	ldr	r3, [r0, #0]
 800241c:	68db      	ldr	r3, [r3, #12]
 800241e:	4798      	blx	r3
    if (*currentTrans)
 8002420:	f8d9 0000 	ldr.w	r0, [r9]
 8002424:	b110      	cbz	r0, 800242c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002426:	6803      	ldr	r3, [r0, #0]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	4798      	blx	r3
    if (*currentScreen)
 800242c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002508 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002430:	f8d8 0000 	ldr.w	r0, [r8]
 8002434:	b110      	cbz	r0, 800243c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002436:	6803      	ldr	r3, [r0, #0]
 8002438:	695b      	ldr	r3, [r3, #20]
 800243a:	4798      	blx	r3
    if (*currentPresenter)
 800243c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002440:	b110      	cbz	r0, 8002448 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	685b      	ldr	r3, [r3, #4]
 8002446:	4798      	blx	r3
    if (*currentScreen)
 8002448:	f8d8 0000 	ldr.w	r0, [r8]
 800244c:	b110      	cbz	r0, 8002454 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800244e:	6803      	ldr	r3, [r0, #0]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	4798      	blx	r3
    if (*currentPresenter)
 8002454:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002458:	b110      	cbz	r0, 8002460 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800245a:	6803      	ldr	r3, [r0, #0]
 800245c:	689b      	ldr	r3, [r3, #8]
 800245e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002460:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	2100      	movs	r1, #0
 8002466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002468:	4798      	blx	r3
        : screenContainer(0), done(false)
 800246a:	f04f 0b00 	mov.w	fp, #0
 800246e:	4b24      	ldr	r3, [pc, #144]	; (8002500 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002470:	6003      	str	r3, [r0, #0]
 8002472:	4604      	mov	r4, r0
 8002474:	f8c0 b004 	str.w	fp, [r0, #4]
 8002478:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800247c:	68a8      	ldr	r0, [r5, #8]
 800247e:	6803      	ldr	r3, [r0, #0]
 8002480:	4659      	mov	r1, fp
 8002482:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002484:	4798      	blx	r3
 8002486:	4606      	mov	r6, r0
 8002488:	f001 ff02 	bl	8004290 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800248c:	6868      	ldr	r0, [r5, #4]
 800248e:	6803      	ldr	r3, [r0, #0]
 8002490:	4659      	mov	r1, fp
 8002492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002494:	4798      	blx	r3
 8002496:	4631      	mov	r1, r6
 8002498:	4605      	mov	r5, r0
 800249a:	f001 fedf 	bl	800425c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800249e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80024a2:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80024a6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80024aa:	b1e5      	cbz	r5, 80024e6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80024ac:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80024ae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024b2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80024b4:	f8c5 a008 	str.w	sl, [r5, #8]
 80024b8:	4630      	mov	r0, r6
 80024ba:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 80024bc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80024be:	4798      	blx	r3
    newPresenter->activate();
 80024c0:	682b      	ldr	r3, [r5, #0]
 80024c2:	4628      	mov	r0, r5
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024c8:	4621      	mov	r1, r4
 80024ca:	4630      	mov	r0, r6
 80024cc:	f00e fc47 	bl	8010d5e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024d0:	6823      	ldr	r3, [r4, #0]
 80024d2:	4620      	mov	r0, r4
 80024d4:	691b      	ldr	r3, [r3, #16]
 80024d6:	4798      	blx	r3
    newTransition->invalidate();
 80024d8:	6823      	ldr	r3, [r4, #0]
 80024da:	695b      	ldr	r3, [r3, #20]
 80024dc:	4620      	mov	r0, r4
}
 80024de:	b001      	add	sp, #4
 80024e0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024e4:	4718      	bx	r3
    model->bind(newPresenter);
 80024e6:	462b      	mov	r3, r5
 80024e8:	e7e1      	b.n	80024ae <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80024ea:	bf00      	nop
 80024ec:	08020b90 	.word	0x08020b90
 80024f0:	08020c1e 	.word	0x08020c1e
 80024f4:	08020d22 	.word	0x08020d22
 80024f8:	08020d69 	.word	0x08020d69
 80024fc:	08020e0c 	.word	0x08020e0c
 8002500:	08021370 	.word	0x08021370
 8002504:	2000d46c 	.word	0x2000d46c
 8002508:	2000d468 	.word	0x2000d468

0800250c <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800250c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002510:	461d      	mov	r5, r3
        setX(x);
 8002512:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002514:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 8002518:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800251a:	4604      	mov	r4, r0
 800251c:	4616      	mov	r6, r2
        setX(x);
 800251e:	4798      	blx	r3
        setY(y);
 8002520:	6823      	ldr	r3, [r4, #0]
 8002522:	4631      	mov	r1, r6
 8002524:	4620      	mov	r0, r4
 8002526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002528:	4798      	blx	r3
        setWidth(width);
 800252a:	6823      	ldr	r3, [r4, #0]
 800252c:	4629      	mov	r1, r5
 800252e:	4620      	mov	r0, r4
 8002530:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002532:	4798      	blx	r3
        setHeight(height);
 8002534:	6823      	ldr	r3, [r4, #0]
 8002536:	4639      	mov	r1, r7
 8002538:	4620      	mov	r0, r4
 800253a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 800253c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 8002540:	4718      	bx	r3
	...

08002544 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv>:
{
 8002544:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::WipeTransition<NORTH>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002548:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 800254c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800254e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002552:	6803      	ldr	r3, [r0, #0]
 8002554:	6a1b      	ldr	r3, [r3, #32]
 8002556:	4798      	blx	r3
 8002558:	f243 1337 	movw	r3, #12599	; 0x3137
 800255c:	4298      	cmp	r0, r3
 800255e:	d805      	bhi.n	800256c <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x28>
 8002560:	4b55      	ldr	r3, [pc, #340]	; (80026b8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x174>)
 8002562:	4a56      	ldr	r2, [pc, #344]	; (80026bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 8002564:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002566:	4856      	ldr	r0, [pc, #344]	; (80026c0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x17c>)
 8002568:	f01c ff44 	bl	801f3f4 <__assert_func>
 800256c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002570:	6803      	ldr	r3, [r0, #0]
 8002572:	6a1b      	ldr	r3, [r3, #32]
 8002574:	4798      	blx	r3
 8002576:	280f      	cmp	r0, #15
 8002578:	d803      	bhi.n	8002582 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x3e>
 800257a:	4b52      	ldr	r3, [pc, #328]	; (80026c4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x180>)
 800257c:	4a4f      	ldr	r2, [pc, #316]	; (80026bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 800257e:	21a8      	movs	r1, #168	; 0xa8
 8002580:	e7f1      	b.n	8002566 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002582:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002586:	6803      	ldr	r3, [r0, #0]
 8002588:	6a1b      	ldr	r3, [r3, #32]
 800258a:	4798      	blx	r3
 800258c:	2837      	cmp	r0, #55	; 0x37
 800258e:	d803      	bhi.n	8002598 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x54>
 8002590:	4b4d      	ldr	r3, [pc, #308]	; (80026c8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x184>)
 8002592:	4a4a      	ldr	r2, [pc, #296]	; (80026bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x178>)
 8002594:	21a9      	movs	r1, #169	; 0xa9
 8002596:	e7e6      	b.n	8002566 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x22>
    if (*currentTrans)
 8002598:	f8df 9140 	ldr.w	r9, [pc, #320]	; 80026dc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x198>
    Application::getInstance()->clearAllTimerWidgets();
 800259c:	f00c fece 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 80025a0:	f00c ff1a 	bl	800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80025a4:	f8d9 0000 	ldr.w	r0, [r9]
 80025a8:	b110      	cbz	r0, 80025b0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x6c>
        (*currentTrans)->tearDown();
 80025aa:	6803      	ldr	r3, [r0, #0]
 80025ac:	68db      	ldr	r3, [r3, #12]
 80025ae:	4798      	blx	r3
    if (*currentTrans)
 80025b0:	f8d9 0000 	ldr.w	r0, [r9]
 80025b4:	b110      	cbz	r0, 80025bc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x78>
        (*currentTrans)->~Transition();
 80025b6:	6803      	ldr	r3, [r0, #0]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	4798      	blx	r3
    if (*currentScreen)
 80025bc:	f8df 8120 	ldr.w	r8, [pc, #288]	; 80026e0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x19c>
 80025c0:	f8d8 0000 	ldr.w	r0, [r8]
 80025c4:	b110      	cbz	r0, 80025cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80025c6:	6803      	ldr	r3, [r0, #0]
 80025c8:	695b      	ldr	r3, [r3, #20]
 80025ca:	4798      	blx	r3
    if (*currentPresenter)
 80025cc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025d0:	b110      	cbz	r0, 80025d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x94>
        (*currentPresenter)->deactivate();
 80025d2:	6803      	ldr	r3, [r0, #0]
 80025d4:	685b      	ldr	r3, [r3, #4]
 80025d6:	4798      	blx	r3
    if (*currentScreen)
 80025d8:	f8d8 0000 	ldr.w	r0, [r8]
 80025dc:	b110      	cbz	r0, 80025e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0xa0>
        (*currentScreen)->~Screen();
 80025de:	6803      	ldr	r3, [r0, #0]
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	4798      	blx	r3
    if (*currentPresenter)
 80025e4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025e8:	b110      	cbz	r0, 80025f0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80025ea:	6803      	ldr	r3, [r0, #0]
 80025ec:	689b      	ldr	r3, [r3, #8]
 80025ee:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80025f0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80025f4:	6803      	ldr	r3, [r0, #0]
 80025f6:	2100      	movs	r1, #0
 80025f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025fa:	4798      	blx	r3
          solid()
 80025fc:	4b33      	ldr	r3, [pc, #204]	; (80026cc <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x188>)
 80025fe:	6003      	str	r3, [r0, #0]
 8002600:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002604:	8103      	strh	r3, [r0, #8]
 8002606:	f44f 7380 	mov.w	r3, #256	; 0x100
 800260a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800260c:	4b30      	ldr	r3, [pc, #192]	; (80026d0 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x18c>)
 800260e:	6103      	str	r3, [r0, #16]
            targetValue = HAL::DISPLAY_HEIGHT;
 8002610:	4b30      	ldr	r3, [pc, #192]	; (80026d4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x190>)
 8002612:	2500      	movs	r5, #0
 8002614:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002618:	6045      	str	r5, [r0, #4]
          solid()
 800261a:	7285      	strb	r5, [r0, #10]
 800261c:	81c5      	strh	r5, [r0, #14]
            targetValue = HAL::DISPLAY_HEIGHT;
 800261e:	8183      	strh	r3, [r0, #12]
          solid()
 8002620:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002624:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002628:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 800262c:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002630:	9300      	str	r3, [sp, #0]
 8002632:	4b29      	ldr	r3, [pc, #164]	; (80026d8 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x194>)
 8002634:	462a      	mov	r2, r5
 8002636:	4629      	mov	r1, r5
 8002638:	f9b3 3000 	ldrsh.w	r3, [r3]
 800263c:	4604      	mov	r4, r0
 800263e:	3010      	adds	r0, #16
 8002640:	f7ff ff64 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002644:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002648:	6803      	ldr	r3, [r0, #0]
 800264a:	4629      	mov	r1, r5
 800264c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800264e:	4798      	blx	r3
 8002650:	4606      	mov	r6, r0
 8002652:	f001 fe4f 	bl	80042f4 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002656:	f8db 0004 	ldr.w	r0, [fp, #4]
 800265a:	6803      	ldr	r3, [r0, #0]
 800265c:	4629      	mov	r1, r5
 800265e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002660:	4798      	blx	r3
 8002662:	4631      	mov	r1, r6
 8002664:	4605      	mov	r5, r0
 8002666:	f001 fe2b 	bl	80042c0 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 800266a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800266e:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002672:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002676:	b1e5      	cbz	r5, 80026b2 <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x16e>
 8002678:	1d2b      	adds	r3, r5, #4
 800267a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800267e:	6833      	ldr	r3, [r6, #0]
 8002680:	f8c5 a008 	str.w	sl, [r5, #8]
 8002684:	4630      	mov	r0, r6
 8002686:	68db      	ldr	r3, [r3, #12]
 8002688:	63f5      	str	r5, [r6, #60]	; 0x3c
 800268a:	4798      	blx	r3
    newPresenter->activate();
 800268c:	682b      	ldr	r3, [r5, #0]
 800268e:	4628      	mov	r0, r5
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002694:	4621      	mov	r1, r4
 8002696:	4630      	mov	r0, r6
 8002698:	f00e fb61 	bl	8010d5e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800269c:	6823      	ldr	r3, [r4, #0]
 800269e:	4620      	mov	r0, r4
 80026a0:	691b      	ldr	r3, [r3, #16]
 80026a2:	4798      	blx	r3
    newTransition->invalidate();
 80026a4:	6823      	ldr	r3, [r4, #0]
 80026a6:	695b      	ldr	r3, [r3, #20]
 80026a8:	4620      	mov	r0, r4
}
 80026aa:	b003      	add	sp, #12
 80026ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026b0:	4718      	bx	r3
    model->bind(newPresenter);
 80026b2:	462b      	mov	r3, r5
 80026b4:	e7e1      	b.n	800267a <_ZN23FrontendApplicationBase40gotoScreen2ScreenWipeTransitionNorthImplEv+0x136>
 80026b6:	bf00      	nop
 80026b8:	08020b90 	.word	0x08020b90
 80026bc:	08020eaf 	.word	0x08020eaf
 80026c0:	08020d22 	.word	0x08020d22
 80026c4:	08020d69 	.word	0x08020d69
 80026c8:	08020e0c 	.word	0x08020e0c
 80026cc:	080213f8 	.word	0x080213f8
 80026d0:	08021394 	.word	0x08021394
 80026d4:	2000d402 	.word	0x2000d402
 80026d8:	2000d400 	.word	0x2000d400
 80026dc:	2000d46c 	.word	0x2000d46c
 80026e0:	2000d468 	.word	0x2000d468

080026e4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv>:
{
 80026e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen2View, Screen2Presenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80026e8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80026ec:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80026ee:	68a8      	ldr	r0, [r5, #8]
 80026f0:	6803      	ldr	r3, [r0, #0]
 80026f2:	6a1b      	ldr	r3, [r3, #32]
 80026f4:	4798      	blx	r3
 80026f6:	f243 1337 	movw	r3, #12599	; 0x3137
 80026fa:	4298      	cmp	r0, r3
 80026fc:	d805      	bhi.n	800270a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x26>
 80026fe:	4b59      	ldr	r3, [pc, #356]	; (8002864 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x180>)
 8002700:	4a59      	ldr	r2, [pc, #356]	; (8002868 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x184>)
 8002702:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002704:	4859      	ldr	r0, [pc, #356]	; (800286c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x188>)
 8002706:	f01c fe75 	bl	801f3f4 <__assert_func>
 800270a:	6868      	ldr	r0, [r5, #4]
 800270c:	6803      	ldr	r3, [r0, #0]
 800270e:	6a1b      	ldr	r3, [r3, #32]
 8002710:	4798      	blx	r3
 8002712:	280f      	cmp	r0, #15
 8002714:	d803      	bhi.n	800271e <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x3a>
 8002716:	4b56      	ldr	r3, [pc, #344]	; (8002870 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x18c>)
 8002718:	4a53      	ldr	r2, [pc, #332]	; (8002868 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x184>)
 800271a:	21a8      	movs	r1, #168	; 0xa8
 800271c:	e7f2      	b.n	8002704 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800271e:	68e8      	ldr	r0, [r5, #12]
 8002720:	6803      	ldr	r3, [r0, #0]
 8002722:	6a1b      	ldr	r3, [r3, #32]
 8002724:	4798      	blx	r3
 8002726:	2853      	cmp	r0, #83	; 0x53
 8002728:	d803      	bhi.n	8002732 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x4e>
 800272a:	4b52      	ldr	r3, [pc, #328]	; (8002874 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x190>)
 800272c:	4a4e      	ldr	r2, [pc, #312]	; (8002868 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x184>)
 800272e:	21a9      	movs	r1, #169	; 0xa9
 8002730:	e7e8      	b.n	8002704 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x20>
    if (*currentTrans)
 8002732:	f8df 9154 	ldr.w	r9, [pc, #340]	; 8002888 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1a4>
    Application::getInstance()->clearAllTimerWidgets();
 8002736:	f00c fe01 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 800273a:	f00c fe4d 	bl	800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800273e:	f8d9 0000 	ldr.w	r0, [r9]
 8002742:	b110      	cbz	r0, 800274a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002744:	6803      	ldr	r3, [r0, #0]
 8002746:	68db      	ldr	r3, [r3, #12]
 8002748:	4798      	blx	r3
    if (*currentTrans)
 800274a:	f8d9 0000 	ldr.w	r0, [r9]
 800274e:	b110      	cbz	r0, 8002756 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002750:	6803      	ldr	r3, [r0, #0]
 8002752:	681b      	ldr	r3, [r3, #0]
 8002754:	4798      	blx	r3
    if (*currentScreen)
 8002756:	f8df 8134 	ldr.w	r8, [pc, #308]	; 800288c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1a8>
 800275a:	f8d8 0000 	ldr.w	r0, [r8]
 800275e:	b110      	cbz	r0, 8002766 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002760:	6803      	ldr	r3, [r0, #0]
 8002762:	695b      	ldr	r3, [r3, #20]
 8002764:	4798      	blx	r3
    if (*currentPresenter)
 8002766:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800276a:	b110      	cbz	r0, 8002772 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800276c:	6803      	ldr	r3, [r0, #0]
 800276e:	685b      	ldr	r3, [r3, #4]
 8002770:	4798      	blx	r3
    if (*currentScreen)
 8002772:	f8d8 0000 	ldr.w	r0, [r8]
 8002776:	b110      	cbz	r0, 800277e <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002778:	6803      	ldr	r3, [r0, #0]
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	4798      	blx	r3
    if (*currentPresenter)
 800277e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002782:	b110      	cbz	r0, 800278a <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002784:	6803      	ldr	r3, [r0, #0]
 8002786:	689b      	ldr	r3, [r3, #8]
 8002788:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800278a:	68e8      	ldr	r0, [r5, #12]
 800278c:	6803      	ldr	r3, [r0, #0]
 800278e:	2100      	movs	r1, #0
 8002790:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002792:	4798      	blx	r3
          calculatedValue(0)
 8002794:	4606      	mov	r6, r0
 8002796:	2200      	movs	r2, #0
 8002798:	4b37      	ldr	r3, [pc, #220]	; (8002878 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x194>)
 800279a:	6042      	str	r2, [r0, #4]
 800279c:	7202      	strb	r2, [r0, #8]
 800279e:	f846 3b0c 	str.w	r3, [r6], #12
 80027a2:	4604      	mov	r4, r0
 80027a4:	4630      	mov	r0, r6
 80027a6:	f00a f9af 	bl	800cb08 <_ZN8touchgfx14SnapshotWidgetC1Ev>
    {
 80027aa:	4b34      	ldr	r3, [pc, #208]	; (800287c <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x198>)
 80027ac:	63a6      	str	r6, [r4, #56]	; 0x38
        this->pmemfun_1 = pmemfun_1;
 80027ae:	2220      	movs	r2, #32
        this->pobject = pobject;
 80027b0:	e9c4 340f 	strd	r3, r4, [r4, #60]	; 0x3c
        this->pmemfun_1 = pmemfun_1;
 80027b4:	2301      	movs	r3, #1
 80027b6:	e9c4 2311 	strd	r2, r3, [r4, #68]	; 0x44
 80027ba:	2314      	movs	r3, #20
 80027bc:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
        if (HAL::USE_ANIMATION_STORAGE)
 80027c0:	4b2f      	ldr	r3, [pc, #188]	; (8002880 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x19c>)
 80027c2:	781b      	ldrb	r3, [r3, #0]
          calculatedValue(0)
 80027c4:	2200      	movs	r2, #0
 80027c6:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
        if (HAL::USE_ANIMATION_STORAGE)
 80027ca:	b19b      	cbz	r3, 80027f4 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x110>
            snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80027cc:	4b2d      	ldr	r3, [pc, #180]	; (8002884 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1a0>)
 80027ce:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8002890 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x1ac>
 80027d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80027d6:	9300      	str	r3, [sp, #0]
 80027d8:	4611      	mov	r1, r2
 80027da:	f9bb 3000 	ldrsh.w	r3, [fp]
 80027de:	4630      	mov	r0, r6
 80027e0:	f7ff fe94 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
            snapshot.makeSnapshot();
 80027e4:	4630      	mov	r0, r6
 80027e6:	f00a f90b 	bl	800ca00 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
                targetValue = -HAL::DISPLAY_WIDTH;
 80027ea:	f8bb 3000 	ldrh.w	r3, [fp]
 80027ee:	425b      	negs	r3, r3
 80027f0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027f4:	68a8      	ldr	r0, [r5, #8]
 80027f6:	6803      	ldr	r3, [r0, #0]
 80027f8:	2100      	movs	r1, #0
 80027fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027fc:	4798      	blx	r3
 80027fe:	4606      	mov	r6, r0
 8002800:	f001 fd78 	bl	80042f4 <_ZN11Screen2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002804:	6868      	ldr	r0, [r5, #4]
 8002806:	6803      	ldr	r3, [r0, #0]
 8002808:	2100      	movs	r1, #0
 800280a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800280c:	4798      	blx	r3
 800280e:	4631      	mov	r1, r6
 8002810:	4605      	mov	r5, r0
 8002812:	f001 fd55 	bl	80042c0 <_ZN16Screen2PresenterC1ER11Screen2View>
    *currentTrans = newTransition;
 8002816:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800281a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800281e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002822:	b1e5      	cbz	r5, 800285e <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x17a>
 8002824:	1d2b      	adds	r3, r5, #4
 8002826:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800282a:	6833      	ldr	r3, [r6, #0]
 800282c:	f8c5 a008 	str.w	sl, [r5, #8]
 8002830:	4630      	mov	r0, r6
 8002832:	68db      	ldr	r3, [r3, #12]
 8002834:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002836:	4798      	blx	r3
    newPresenter->activate();
 8002838:	682b      	ldr	r3, [r5, #0]
 800283a:	4628      	mov	r0, r5
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002840:	4621      	mov	r1, r4
 8002842:	4630      	mov	r0, r6
 8002844:	f00e fa8b 	bl	8010d5e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002848:	6823      	ldr	r3, [r4, #0]
 800284a:	4620      	mov	r0, r4
 800284c:	691b      	ldr	r3, [r3, #16]
 800284e:	4798      	blx	r3
    newTransition->invalidate();
 8002850:	6823      	ldr	r3, [r4, #0]
 8002852:	695b      	ldr	r3, [r3, #20]
 8002854:	4620      	mov	r0, r4
}
 8002856:	b003      	add	sp, #12
 8002858:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800285c:	4718      	bx	r3
    model->bind(newPresenter);
 800285e:	462b      	mov	r3, r5
 8002860:	e7e1      	b.n	8002826 <_ZN23FrontendApplicationBase40gotoScreen2ScreenSlideTransitionEastImplEv+0x142>
 8002862:	bf00      	nop
 8002864:	08020b90 	.word	0x08020b90
 8002868:	08020fc6 	.word	0x08020fc6
 800286c:	08020d22 	.word	0x08020d22
 8002870:	08020d69 	.word	0x08020d69
 8002874:	08020e0c 	.word	0x08020e0c
 8002878:	08021434 	.word	0x08021434
 800287c:	0802141c 	.word	0x0802141c
 8002880:	2000d40b 	.word	0x2000d40b
 8002884:	2000d402 	.word	0x2000d402
 8002888:	2000d46c 	.word	0x2000d46c
 800288c:	2000d468 	.word	0x2000d468
 8002890:	2000d400 	.word	0x2000d400

08002894 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002896:	4604      	mov	r4, r0
        animationCounter++;
 8002898:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 800289a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800289c:	3001      	adds	r0, #1
 800289e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 80028a0:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 80028a2:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 80028a4:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 80028a6:	d850      	bhi.n	800294a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80028a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80028ac:	2100      	movs	r1, #0
 80028ae:	f00e fa5c 	bl	8010d6a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 80028b2:	f010 0201 	ands.w	r2, r0, #1
 80028b6:	b283      	uxth	r3, r0
 80028b8:	d04d      	beq.n	8002956 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80028ba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80028be:	2800      	cmp	r0, #0
 80028c0:	bfd8      	it	le
 80028c2:	460a      	movle	r2, r1
 80028c4:	4413      	add	r3, r2
 80028c6:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80028c8:	4e24      	ldr	r6, [pc, #144]	; (800295c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80028ca:	4f25      	ldr	r7, [pc, #148]	; (8002960 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80028cc:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80028ce:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80028d2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80028d4:	f9b7 0000 	ldrsh.w	r0, [r7]
 80028d8:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80028dc:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80028de:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80028e0:	4463      	add	r3, ip
 80028e2:	1a5b      	subs	r3, r3, r1
        this->width = width;
 80028e4:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 80028e8:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80028ea:	b212      	sxth	r2, r2
        this->y = y;
 80028ec:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 80028ee:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 80028f0:	8322      	strh	r2, [r4, #24]
        this->x = x;
 80028f2:	f8ad 2018 	strh.w	r2, [sp, #24]
        this->y = y;
 80028f6:	f8ad 501a 	strh.w	r5, [sp, #26]
 80028fa:	a906      	add	r1, sp, #24
 80028fc:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80028fe:	7aa3      	ldrb	r3, [r4, #10]
 8002900:	2b01      	cmp	r3, #1
 8002902:	d126      	bne.n	8002952 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002904:	4b17      	ldr	r3, [pc, #92]	; (8002964 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002906:	781b      	ldrb	r3, [r3, #0]
 8002908:	b31b      	cbz	r3, 8002952 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); //part to copy between buffers
 800290a:	69a1      	ldr	r1, [r4, #24]
 800290c:	6960      	ldr	r0, [r4, #20]
 800290e:	ab04      	add	r3, sp, #16
 8002910:	c303      	stmia	r3!, {r0, r1}
        return instance;
 8002912:	4b15      	ldr	r3, [pc, #84]	; (8002968 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002914:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002916:	6803      	ldr	r3, [r0, #0]
 8002918:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800291a:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 800291c:	8833      	ldrh	r3, [r6, #0]
 800291e:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 8002922:	883b      	ldrh	r3, [r7, #0]
 8002924:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002928:	9003      	str	r0, [sp, #12]
        x = 0;
 800292a:	f8ad 5018 	strh.w	r5, [sp, #24]
        y = 0;
 800292e:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002932:	f7fe fa5b 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8002936:	22ff      	movs	r2, #255	; 0xff
 8002938:	6803      	ldr	r3, [r0, #0]
 800293a:	9200      	str	r2, [sp, #0]
 800293c:	9501      	str	r5, [sp, #4]
 800293e:	68dc      	ldr	r4, [r3, #12]
 8002940:	9903      	ldr	r1, [sp, #12]
 8002942:	ab04      	add	r3, sp, #16
 8002944:	aa06      	add	r2, sp, #24
 8002946:	47a0      	blx	r4
 8002948:	e003      	b.n	8002952 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 800294a:	2301      	movs	r3, #1
 800294c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800294e:	2300      	movs	r3, #0
 8002950:	72a3      	strb	r3, [r4, #10]
    }
 8002952:	b009      	add	sp, #36	; 0x24
 8002954:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002956:	81e0      	strh	r0, [r4, #14]
 8002958:	e7b6      	b.n	80028c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 800295a:	bf00      	nop
 800295c:	2000d400 	.word	0x2000d400
 8002960:	2000d402 	.word	0x2000d402
 8002964:	2000d40a 	.word	0x2000d40a
 8002968:	2000d40c 	.word	0x2000d40c

0800296c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800296c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800296e:	4604      	mov	r4, r0
        animationCounter++;
 8002970:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002972:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002974:	3001      	adds	r0, #1
 8002976:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002978:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800297a:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 800297c:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 800297e:	d851      	bhi.n	8002a24 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xb8>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002980:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002984:	2100      	movs	r1, #0
 8002986:	f00e f9f0 	bl	8010d6a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800298a:	f010 0201 	ands.w	r2, r0, #1
 800298e:	b283      	uxth	r3, r0
 8002990:	d04e      	beq.n	8002a30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc4>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002992:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002996:	2800      	cmp	r0, #0
 8002998:	bfd8      	it	le
 800299a:	460a      	movle	r2, r1
 800299c:	4413      	add	r3, r2
 800299e:	81e3      	strh	r3, [r4, #14]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 80029a0:	4e24      	ldr	r6, [pc, #144]	; (8002a34 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc8>)
        return rect.y;
 80029a2:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 80029a6:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80029aa:	89e3      	ldrh	r3, [r4, #14]
 80029ac:	8832      	ldrh	r2, [r6, #0]
        rect.y = y;
 80029ae:	82e0      	strh	r0, [r4, #22]
                screenContainer->invalidateRect(r);
 80029b0:	6860      	ldr	r0, [r4, #4]
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 80029b2:	4f21      	ldr	r7, [pc, #132]	; (8002a38 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xcc>)
        this->y = y;
 80029b4:	f8ad 101a 	strh.w	r1, [sp, #26]
                solid.setHeight(HAL::DISPLAY_HEIGHT - calculatedValue);
 80029b8:	1ad2      	subs	r2, r2, r3
                const uint16_t delta = calculatedValue - prevSolidPos;
 80029ba:	1a5b      	subs	r3, r3, r1
        this->height = height;
 80029bc:	f8ad 301e 	strh.w	r3, [sp, #30]
                screenContainer->invalidateRect(r);
 80029c0:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80029c2:	8362      	strh	r2, [r4, #26]
        this->x = x;
 80029c4:	2500      	movs	r5, #0
                Rect r(0, prevSolidPos, HAL::DISPLAY_WIDTH, delta);
 80029c6:	f9b7 2000 	ldrsh.w	r2, [r7]
                screenContainer->invalidateRect(r);
 80029ca:	691b      	ldr	r3, [r3, #16]
 80029cc:	f8ad 5018 	strh.w	r5, [sp, #24]
        this->width = width;
 80029d0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80029d4:	a906      	add	r1, sp, #24
 80029d6:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80029d8:	7aa3      	ldrb	r3, [r4, #10]
 80029da:	2b01      	cmp	r3, #1
 80029dc:	d126      	bne.n	8002a2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
 80029de:	4b17      	ldr	r3, [pc, #92]	; (8002a3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd0>)
 80029e0:	781b      	ldrb	r3, [r3, #0]
 80029e2:	b31b      	cbz	r3, 8002a2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
            Rect rect = solid.getRect(); //part to copy between buffers
 80029e4:	69a1      	ldr	r1, [r4, #24]
 80029e6:	6960      	ldr	r0, [r4, #20]
 80029e8:	ab04      	add	r3, sp, #16
 80029ea:	c303      	stmia	r3!, {r0, r1}
 80029ec:	4b14      	ldr	r3, [pc, #80]	; (8002a40 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xd4>)
 80029ee:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80029f0:	6803      	ldr	r3, [r0, #0]
 80029f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80029f4:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 80029f6:	883b      	ldrh	r3, [r7, #0]
 80029f8:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80029fc:	8833      	ldrh	r3, [r6, #0]
 80029fe:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002a02:	9003      	str	r0, [sp, #12]
        x = 0;
 8002a04:	f8ad 5018 	strh.w	r5, [sp, #24]
        y = 0;
 8002a08:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 8002a0c:	f7fe f9ee 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8002a10:	22ff      	movs	r2, #255	; 0xff
 8002a12:	6803      	ldr	r3, [r0, #0]
 8002a14:	9200      	str	r2, [sp, #0]
 8002a16:	9501      	str	r5, [sp, #4]
 8002a18:	68dc      	ldr	r4, [r3, #12]
 8002a1a:	9903      	ldr	r1, [sp, #12]
 8002a1c:	ab04      	add	r3, sp, #16
 8002a1e:	aa06      	add	r2, sp, #24
 8002a20:	47a0      	blx	r4
 8002a22:	e003      	b.n	8002a2c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0xc0>
            done = true;
 8002a24:	2301      	movs	r3, #1
 8002a26:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8002a28:	2300      	movs	r3, #0
 8002a2a:	72a3      	strb	r3, [r4, #10]
    }
 8002a2c:	b009      	add	sp, #36	; 0x24
 8002a2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002a30:	81e0      	strh	r0, [r4, #14]
 8002a32:	e7b5      	b.n	80029a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE0EE15handleTickEventEv+0x34>
 8002a34:	2000d402 	.word	0x2000d402
 8002a38:	2000d400 	.word	0x2000d400
 8002a3c:	2000d40a 	.word	0x2000d40a
 8002a40:	2000d40c 	.word	0x2000d40c

08002a44 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a46:	4604      	mov	r4, r0
 8002a48:	4617      	mov	r7, r2
 8002a4a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002a4c:	f00c fcde 	bl	800f40c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002a50:	4b0e      	ldr	r3, [pc, #56]	; (8002a8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 8002a52:	601c      	str	r4, [r3, #0]
      model(m)
 8002a54:	4b0e      	ldr	r3, [pc, #56]	; (8002a90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 8002a56:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun_0(0)
 8002a58:	4b0e      	ldr	r3, [pc, #56]	; (8002a94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002a5a:	2500      	movs	r5, #0
 8002a5c:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002a60:	4b0d      	ldr	r3, [pc, #52]	; (8002a98 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8002a62:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 8002a66:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002a68:	6803      	ldr	r3, [r0, #0]
 8002a6a:	4629      	mov	r1, r5
 8002a6c:	689b      	ldr	r3, [r3, #8]
 8002a6e:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002a72:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002a76:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002a78:	4628      	mov	r0, r5
 8002a7a:	f001 fb5d 	bl	8004138 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002a7e:	f7fe f9b5 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8002a82:	f013 ff4a 	bl	801691a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002a86:	4620      	mov	r0, r4
 8002a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002a8a:	bf00      	nop
 8002a8c:	2000d478 	.word	0x2000d478
 8002a90:	0802132c 	.word	0x0802132c
 8002a94:	08021314 	.word	0x08021314
 8002a98:	2000d40c 	.word	0x2000d40c

08002a9c <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002a9c:	4b06      	ldr	r3, [pc, #24]	; (8002ab8 <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv+0x1c>)
 8002a9e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002aa8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002aac:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ab0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ab4:	4770      	bx	lr
 8002ab6:	bf00      	nop
 8002ab8:	08002545 	.word	0x08002545

08002abc <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv>:
 8002abc:	4b06      	ldr	r3, [pc, #24]	; (8002ad8 <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv+0x1c>)
 8002abe:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002ac2:	2300      	movs	r3, #0
 8002ac4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002ac8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002acc:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002ad0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002ad4:	4770      	bx	lr
 8002ad6:	bf00      	nop
 8002ad8:	080026e5 	.word	0x080026e5

08002adc <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 8002adc:	4b06      	ldr	r3, [pc, #24]	; (8002af8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002ade:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002ae8:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002aec:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002af0:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002af4:	4770      	bx	lr
 8002af6:	bf00      	nop
 8002af8:	080023bd 	.word	0x080023bd

08002afc <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 8002afc:	4b06      	ldr	r3, [pc, #24]	; (8002b18 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 8002afe:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002b02:	2300      	movs	r3, #0
 8002b04:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002b08:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002b0c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002b10:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002b14:	4770      	bx	lr
 8002b16:	bf00      	nop
 8002b18:	08002cd9 	.word	0x08002cd9

08002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>:
 8002b1c:	4b06      	ldr	r3, [pc, #24]	; (8002b38 <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv+0x1c>)
 8002b1e:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002b22:	2300      	movs	r3, #0
 8002b24:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen3

void FrontendApplicationBase::gotoScreen3ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen3ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002b28:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002b2c:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002b30:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002b34:	4770      	bx	lr
 8002b36:	bf00      	nop
 8002b38:	08002b99 	.word	0x08002b99

08002b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8002b3c:	4b12      	ldr	r3, [pc, #72]	; (8002b88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8002b3e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8002b40:	6003      	str	r3, [r0, #0]
 8002b42:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002b46:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8002b48:	4b10      	ldr	r3, [pc, #64]	; (8002b8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          solid()
 8002b4a:	7241      	strb	r1, [r0, #9]
    class FullSolidRect : public Widget
 8002b4c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002b4e:	4910      	ldr	r1, [pc, #64]	; (8002b90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002b50:	4b10      	ldr	r3, [pc, #64]	; (8002b94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002b52:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8002b56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002b5a:	8183      	strh	r3, [r0, #12]
 8002b5c:	2200      	movs	r2, #0
 8002b5e:	6042      	str	r2, [r0, #4]
 8002b60:	7202      	strb	r2, [r0, #8]
          solid()
 8002b62:	7282      	strb	r2, [r0, #10]
 8002b64:	81c2      	strh	r2, [r0, #14]
 8002b66:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002b6a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002b6e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8002b72:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8002b76:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002b78:	9100      	str	r1, [sp, #0]
 8002b7a:	3010      	adds	r0, #16
 8002b7c:	4611      	mov	r1, r2
 8002b7e:	f7ff fcc5 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8002b82:	4620      	mov	r0, r4
 8002b84:	b002      	add	sp, #8
 8002b86:	bd10      	pop	{r4, pc}
 8002b88:	080214c4 	.word	0x080214c4
 8002b8c:	08021460 	.word	0x08021460
 8002b90:	2000d402 	.word	0x2000d402
 8002b94:	2000d400 	.word	0x2000d400

08002b98 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreen3ScreenWipeTransitionEastImpl()
{
 8002b98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen3View, Screen3Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002b9c:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002ba0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002ba2:	68a0      	ldr	r0, [r4, #8]
 8002ba4:	6803      	ldr	r3, [r0, #0]
 8002ba6:	6a1b      	ldr	r3, [r3, #32]
 8002ba8:	4798      	blx	r3
 8002baa:	f5b0 7f9c 	cmp.w	r0, #312	; 0x138
 8002bae:	d205      	bcs.n	8002bbc <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x24>
 8002bb0:	4b42      	ldr	r3, [pc, #264]	; (8002cbc <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x124>)
 8002bb2:	4a43      	ldr	r2, [pc, #268]	; (8002cc0 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x128>)
 8002bb4:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002bb6:	4843      	ldr	r0, [pc, #268]	; (8002cc4 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x12c>)
 8002bb8:	f01c fc1c 	bl	801f3f4 <__assert_func>
 8002bbc:	6860      	ldr	r0, [r4, #4]
 8002bbe:	6803      	ldr	r3, [r0, #0]
 8002bc0:	6a1b      	ldr	r3, [r3, #32]
 8002bc2:	4798      	blx	r3
 8002bc4:	280f      	cmp	r0, #15
 8002bc6:	d803      	bhi.n	8002bd0 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x38>
 8002bc8:	4b3f      	ldr	r3, [pc, #252]	; (8002cc8 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x130>)
 8002bca:	4a3d      	ldr	r2, [pc, #244]	; (8002cc0 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x128>)
 8002bcc:	21a8      	movs	r1, #168	; 0xa8
 8002bce:	e7f2      	b.n	8002bb6 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002bd0:	68e0      	ldr	r0, [r4, #12]
 8002bd2:	6803      	ldr	r3, [r0, #0]
 8002bd4:	6a1b      	ldr	r3, [r3, #32]
 8002bd6:	4798      	blx	r3
 8002bd8:	2837      	cmp	r0, #55	; 0x37
 8002bda:	d803      	bhi.n	8002be4 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x4c>
 8002bdc:	4b3b      	ldr	r3, [pc, #236]	; (8002ccc <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x134>)
 8002bde:	4a38      	ldr	r2, [pc, #224]	; (8002cc0 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x128>)
 8002be0:	21a9      	movs	r1, #169	; 0xa9
 8002be2:	e7e8      	b.n	8002bb6 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002be4:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002cd0 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002be8:	f00c fba8 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8002bec:	f00c fbf4 	bl	800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002bf0:	f8d9 0000 	ldr.w	r0, [r9]
 8002bf4:	b110      	cbz	r0, 8002bfc <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8002bf6:	6803      	ldr	r3, [r0, #0]
 8002bf8:	68db      	ldr	r3, [r3, #12]
 8002bfa:	4798      	blx	r3
    if (*currentTrans)
 8002bfc:	f8d9 0000 	ldr.w	r0, [r9]
 8002c00:	b110      	cbz	r0, 8002c08 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002c02:	6803      	ldr	r3, [r0, #0]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	4798      	blx	r3
    if (*currentScreen)
 8002c08:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002cd4 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x13c>
 8002c0c:	f8d8 0000 	ldr.w	r0, [r8]
 8002c10:	b110      	cbz	r0, 8002c18 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002c12:	6803      	ldr	r3, [r0, #0]
 8002c14:	695b      	ldr	r3, [r3, #20]
 8002c16:	4798      	blx	r3
    if (*currentPresenter)
 8002c18:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002c1c:	b110      	cbz	r0, 8002c24 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002c1e:	6803      	ldr	r3, [r0, #0]
 8002c20:	685b      	ldr	r3, [r3, #4]
 8002c22:	4798      	blx	r3
    if (*currentScreen)
 8002c24:	f8d8 0000 	ldr.w	r0, [r8]
 8002c28:	b110      	cbz	r0, 8002c30 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002c2a:	6803      	ldr	r3, [r0, #0]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	4798      	blx	r3
    if (*currentPresenter)
 8002c30:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002c34:	b110      	cbz	r0, 8002c3c <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002c36:	6803      	ldr	r3, [r0, #0]
 8002c38:	689b      	ldr	r3, [r3, #8]
 8002c3a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002c3c:	68e0      	ldr	r0, [r4, #12]
 8002c3e:	6803      	ldr	r3, [r0, #0]
 8002c40:	2100      	movs	r1, #0
 8002c42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c44:	4798      	blx	r3
 8002c46:	2114      	movs	r1, #20
 8002c48:	4605      	mov	r5, r0
 8002c4a:	f7ff ff77 	bl	8002b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002c4e:	68a0      	ldr	r0, [r4, #8]
 8002c50:	6803      	ldr	r3, [r0, #0]
 8002c52:	2100      	movs	r1, #0
 8002c54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c56:	4798      	blx	r3
 8002c58:	4606      	mov	r6, r0
 8002c5a:	f001 fb7d 	bl	8004358 <_ZN11Screen3ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002c5e:	6860      	ldr	r0, [r4, #4]
 8002c60:	6803      	ldr	r3, [r0, #0]
 8002c62:	2100      	movs	r1, #0
 8002c64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002c66:	4798      	blx	r3
 8002c68:	4631      	mov	r1, r6
 8002c6a:	4604      	mov	r4, r0
 8002c6c:	f001 fb5a 	bl	8004324 <_ZN16Screen3PresenterC1ER11Screen3View>
    *currentTrans = newTransition;
 8002c70:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002c74:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002c78:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002c7c:	b1dc      	cbz	r4, 8002cb6 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0x11e>
 8002c7e:	1d23      	adds	r3, r4, #4
 8002c80:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002c84:	6833      	ldr	r3, [r6, #0]
 8002c86:	f8c4 a008 	str.w	sl, [r4, #8]
 8002c8a:	4630      	mov	r0, r6
 8002c8c:	68db      	ldr	r3, [r3, #12]
 8002c8e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002c90:	4798      	blx	r3
    newPresenter->activate();
 8002c92:	6823      	ldr	r3, [r4, #0]
 8002c94:	4620      	mov	r0, r4
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002c9a:	4629      	mov	r1, r5
 8002c9c:	4630      	mov	r0, r6
 8002c9e:	f00e f85e 	bl	8010d5e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002ca2:	682b      	ldr	r3, [r5, #0]
 8002ca4:	4628      	mov	r0, r5
 8002ca6:	691b      	ldr	r3, [r3, #16]
 8002ca8:	4798      	blx	r3
    newTransition->invalidate();
 8002caa:	682b      	ldr	r3, [r5, #0]
 8002cac:	4628      	mov	r0, r5
 8002cae:	695b      	ldr	r3, [r3, #20]
}
 8002cb0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002cb4:	4718      	bx	r3
    model->bind(newPresenter);
 8002cb6:	4623      	mov	r3, r4
 8002cb8:	e7e2      	b.n	8002c80 <_ZN23FrontendApplicationBase39gotoScreen3ScreenWipeTransitionEastImplEv+0xe8>
 8002cba:	bf00      	nop
 8002cbc:	08020b90 	.word	0x08020b90
 8002cc0:	080210dd 	.word	0x080210dd
 8002cc4:	08020d22 	.word	0x08020d22
 8002cc8:	08020d69 	.word	0x08020d69
 8002ccc:	08020e0c 	.word	0x08020e0c
 8002cd0:	2000d46c 	.word	0x2000d46c
 8002cd4:	2000d468 	.word	0x2000d468

08002cd8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 8002cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002cdc:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 8002ce0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002ce2:	68a0      	ldr	r0, [r4, #8]
 8002ce4:	6803      	ldr	r3, [r0, #0]
 8002ce6:	6a1b      	ldr	r3, [r3, #32]
 8002ce8:	4798      	blx	r3
 8002cea:	f5b0 7fba 	cmp.w	r0, #372	; 0x174
 8002cee:	d205      	bcs.n	8002cfc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 8002cf0:	4b42      	ldr	r3, [pc, #264]	; (8002dfc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 8002cf2:	4a43      	ldr	r2, [pc, #268]	; (8002e00 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002cf4:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002cf6:	4843      	ldr	r0, [pc, #268]	; (8002e04 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 8002cf8:	f01c fb7c 	bl	801f3f4 <__assert_func>
 8002cfc:	6860      	ldr	r0, [r4, #4]
 8002cfe:	6803      	ldr	r3, [r0, #0]
 8002d00:	6a1b      	ldr	r3, [r3, #32]
 8002d02:	4798      	blx	r3
 8002d04:	280f      	cmp	r0, #15
 8002d06:	d803      	bhi.n	8002d10 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 8002d08:	4b3f      	ldr	r3, [pc, #252]	; (8002e08 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 8002d0a:	4a3d      	ldr	r2, [pc, #244]	; (8002e00 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002d0c:	21a8      	movs	r1, #168	; 0xa8
 8002d0e:	e7f2      	b.n	8002cf6 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002d10:	68e0      	ldr	r0, [r4, #12]
 8002d12:	6803      	ldr	r3, [r0, #0]
 8002d14:	6a1b      	ldr	r3, [r3, #32]
 8002d16:	4798      	blx	r3
 8002d18:	2837      	cmp	r0, #55	; 0x37
 8002d1a:	d803      	bhi.n	8002d24 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002d1c:	4b3b      	ldr	r3, [pc, #236]	; (8002e0c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 8002d1e:	4a38      	ldr	r2, [pc, #224]	; (8002e00 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002d20:	21a9      	movs	r1, #169	; 0xa9
 8002d22:	e7e8      	b.n	8002cf6 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002d24:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 8002e10 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002d28:	f00c fb08 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8002d2c:	f00c fb54 	bl	800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002d30:	f8d9 0000 	ldr.w	r0, [r9]
 8002d34:	b110      	cbz	r0, 8002d3c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8002d36:	6803      	ldr	r3, [r0, #0]
 8002d38:	68db      	ldr	r3, [r3, #12]
 8002d3a:	4798      	blx	r3
    if (*currentTrans)
 8002d3c:	f8d9 0000 	ldr.w	r0, [r9]
 8002d40:	b110      	cbz	r0, 8002d48 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 8002d42:	6803      	ldr	r3, [r0, #0]
 8002d44:	681b      	ldr	r3, [r3, #0]
 8002d46:	4798      	blx	r3
    if (*currentScreen)
 8002d48:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002e14 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 8002d4c:	f8d8 0000 	ldr.w	r0, [r8]
 8002d50:	b110      	cbz	r0, 8002d58 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002d52:	6803      	ldr	r3, [r0, #0]
 8002d54:	695b      	ldr	r3, [r3, #20]
 8002d56:	4798      	blx	r3
    if (*currentPresenter)
 8002d58:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d5c:	b110      	cbz	r0, 8002d64 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8002d5e:	6803      	ldr	r3, [r0, #0]
 8002d60:	685b      	ldr	r3, [r3, #4]
 8002d62:	4798      	blx	r3
    if (*currentScreen)
 8002d64:	f8d8 0000 	ldr.w	r0, [r8]
 8002d68:	b110      	cbz	r0, 8002d70 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 8002d6a:	6803      	ldr	r3, [r0, #0]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	4798      	blx	r3
    if (*currentPresenter)
 8002d70:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002d74:	b110      	cbz	r0, 8002d7c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002d76:	6803      	ldr	r3, [r0, #0]
 8002d78:	689b      	ldr	r3, [r3, #8]
 8002d7a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002d7c:	68e0      	ldr	r0, [r4, #12]
 8002d7e:	6803      	ldr	r3, [r0, #0]
 8002d80:	2100      	movs	r1, #0
 8002d82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d84:	4798      	blx	r3
 8002d86:	2114      	movs	r1, #20
 8002d88:	4605      	mov	r5, r0
 8002d8a:	f7ff fed7 	bl	8002b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002d8e:	68a0      	ldr	r0, [r4, #8]
 8002d90:	6803      	ldr	r3, [r0, #0]
 8002d92:	2100      	movs	r1, #0
 8002d94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d96:	4798      	blx	r3
 8002d98:	4606      	mov	r6, r0
 8002d9a:	f001 fa79 	bl	8004290 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002d9e:	6860      	ldr	r0, [r4, #4]
 8002da0:	6803      	ldr	r3, [r0, #0]
 8002da2:	2100      	movs	r1, #0
 8002da4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002da6:	4798      	blx	r3
 8002da8:	4631      	mov	r1, r6
 8002daa:	4604      	mov	r4, r0
 8002dac:	f001 fa56 	bl	800425c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002db0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002db4:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002db8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002dbc:	b1dc      	cbz	r4, 8002df6 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 8002dbe:	1d23      	adds	r3, r4, #4
 8002dc0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002dc4:	6833      	ldr	r3, [r6, #0]
 8002dc6:	f8c4 a008 	str.w	sl, [r4, #8]
 8002dca:	4630      	mov	r0, r6
 8002dcc:	68db      	ldr	r3, [r3, #12]
 8002dce:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002dd0:	4798      	blx	r3
    newPresenter->activate();
 8002dd2:	6823      	ldr	r3, [r4, #0]
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	681b      	ldr	r3, [r3, #0]
 8002dd8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002dda:	4629      	mov	r1, r5
 8002ddc:	4630      	mov	r0, r6
 8002dde:	f00d ffbe 	bl	8010d5e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002de2:	682b      	ldr	r3, [r5, #0]
 8002de4:	4628      	mov	r0, r5
 8002de6:	691b      	ldr	r3, [r3, #16]
 8002de8:	4798      	blx	r3
    newTransition->invalidate();
 8002dea:	682b      	ldr	r3, [r5, #0]
 8002dec:	4628      	mov	r0, r5
 8002dee:	695b      	ldr	r3, [r3, #20]
}
 8002df0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002df4:	4718      	bx	r3
    model->bind(newPresenter);
 8002df6:	4623      	mov	r3, r4
 8002df8:	e7e2      	b.n	8002dc0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 8002dfa:	bf00      	nop
 8002dfc:	08020b90 	.word	0x08020b90
 8002e00:	080211f3 	.word	0x080211f3
 8002e04:	08020d22 	.word	0x08020d22
 8002e08:	08020d69 	.word	0x08020d69
 8002e0c:	08020e0c 	.word	0x08020e0c
 8002e10:	2000d46c 	.word	0x2000d46c
 8002e14:	2000d468 	.word	0x2000d468

08002e18 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002e18:	6a00      	ldr	r0, [r0, #32]
 8002e1a:	4770      	bx	lr

08002e1c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002e1c:	4770      	bx	lr

08002e1e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8002e1e:	888b      	ldrh	r3, [r1, #4]
 8002e20:	6980      	ldr	r0, [r0, #24]
 8002e22:	680a      	ldr	r2, [r1, #0]
 8002e24:	0adb      	lsrs	r3, r3, #11
 8002e26:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002e2a:	4410      	add	r0, r2
 8002e2c:	4770      	bx	lr

08002e2e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8002e2e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002e30:	b1c2      	cbz	r2, 8002e64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002e32:	7b13      	ldrb	r3, [r2, #12]
 8002e34:	b1b3      	cbz	r3, 8002e64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002e36:	7b54      	ldrb	r4, [r2, #13]
 8002e38:	7ad2      	ldrb	r2, [r2, #11]
 8002e3a:	0224      	lsls	r4, r4, #8
 8002e3c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002e40:	4314      	orrs	r4, r2
 8002e42:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002e44:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002e46:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002e4a:	8813      	ldrh	r3, [r2, #0]
 8002e4c:	428b      	cmp	r3, r1
 8002e4e:	d102      	bne.n	8002e56 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002e50:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002e54:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002e56:	d805      	bhi.n	8002e64 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002e58:	3801      	subs	r0, #1
 8002e5a:	b280      	uxth	r0, r0
 8002e5c:	3204      	adds	r2, #4
 8002e5e:	2800      	cmp	r0, #0
 8002e60:	d1f3      	bne.n	8002e4a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002e62:	e7f7      	b.n	8002e54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002e64:	2000      	movs	r0, #0
 8002e66:	e7f5      	b.n	8002e54 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002e68 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002e68:	b510      	push	{r4, lr}
 8002e6a:	2124      	movs	r1, #36	; 0x24
 8002e6c:	4604      	mov	r4, r0
 8002e6e:	f01c fa92 	bl	801f396 <_ZdlPvj>
 8002e72:	4620      	mov	r0, r4
 8002e74:	bd10      	pop	{r4, pc}
	...

08002e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002e78:	b530      	push	{r4, r5, lr}
 8002e7a:	b089      	sub	sp, #36	; 0x24
 8002e7c:	4604      	mov	r4, r0
    gsubTable(gsubData)
 8002e7e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002e82:	9506      	str	r5, [sp, #24]
 8002e84:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002e88:	9505      	str	r5, [sp, #20]
 8002e8a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002e8e:	9504      	str	r5, [sp, #16]
 8002e90:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002e94:	9503      	str	r5, [sp, #12]
 8002e96:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002e9a:	9502      	str	r5, [sp, #8]
 8002e9c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002ea0:	9501      	str	r5, [sp, #4]
 8002ea2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002ea6:	9500      	str	r5, [sp, #0]
 8002ea8:	f00d faac 	bl	8010404 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002eac:	4b05      	ldr	r3, [pc, #20]	; (8002ec4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 8002eae:	6023      	str	r3, [r4, #0]
 8002eb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002eb2:	61a3      	str	r3, [r4, #24]
 8002eb4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002eb6:	61e3      	str	r3, [r4, #28]
 8002eb8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002eba:	6223      	str	r3, [r4, #32]
}
 8002ebc:	4620      	mov	r0, r4
 8002ebe:	b009      	add	sp, #36	; 0x24
 8002ec0:	bd30      	pop	{r4, r5, pc}
 8002ec2:	bf00      	nop
 8002ec4:	080214e8 	.word	0x080214e8

08002ec8 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002ec8:	4770      	bx	lr

08002eca <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002eca:	4770      	bx	lr

08002ecc <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002ecc:	4770      	bx	lr

08002ece <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002ece:	4770      	bx	lr

08002ed0 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002ed0:	4770      	bx	lr

08002ed2 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002ed2:	4770      	bx	lr

08002ed4 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002ed4:	4770      	bx	lr

08002ed6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ed6:	4770      	bx	lr

08002ed8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002ed8:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002eda:	68c2      	ldr	r2, [r0, #12]
 8002edc:	6844      	ldr	r4, [r0, #4]
 8002ede:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002ee0:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002ee2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002ee6:	07d2      	lsls	r2, r2, #31
 8002ee8:	bf48      	it	mi
 8002eea:	5962      	ldrmi	r2, [r4, r5]
 8002eec:	689b      	ldr	r3, [r3, #8]
    }
 8002eee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002ef0:	bf48      	it	mi
 8002ef2:	58d3      	ldrmi	r3, [r2, r3]
 8002ef4:	4718      	bx	r3

08002ef6 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002ef6:	6843      	ldr	r3, [r0, #4]
 8002ef8:	b12b      	cbz	r3, 8002f06 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002efa:	6883      	ldr	r3, [r0, #8]
 8002efc:	b92b      	cbnz	r3, 8002f0a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002efe:	68c0      	ldr	r0, [r0, #12]
 8002f00:	f000 0001 	and.w	r0, r0, #1
 8002f04:	4770      	bx	lr
 8002f06:	4618      	mov	r0, r3
 8002f08:	4770      	bx	lr
 8002f0a:	2001      	movs	r0, #1
    }
 8002f0c:	4770      	bx	lr

08002f0e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f0e:	b510      	push	{r4, lr}
 8002f10:	2110      	movs	r1, #16
 8002f12:	4604      	mov	r4, r0
 8002f14:	f01c fa3f 	bl	801f396 <_ZdlPvj>
 8002f18:	4620      	mov	r0, r4
 8002f1a:	bd10      	pop	{r4, pc}

08002f1c <_ZN15Screen1ViewBaseD0Ev>:
 8002f1c:	b510      	push	{r4, lr}
 8002f1e:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8002f22:	4604      	mov	r4, r0
 8002f24:	f01c fa37 	bl	801f396 <_ZdlPvj>
 8002f28:	4620      	mov	r0, r4
 8002f2a:	bd10      	pop	{r4, pc}

08002f2c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_nowa_gra)
 8002f2c:	30e0      	adds	r0, #224	; 0xe0
 8002f2e:	4288      	cmp	r0, r1
{
 8002f30:	b508      	push	{r3, lr}
    if (&src == &button_nowa_gra)
 8002f32:	d105      	bne.n	8002f40 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002f34:	f00c fa02 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When button_nowa_gra clicked change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenWipeTransitionNorth();
    }
}
 8002f38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenWipeTransitionNorth();
 8002f3c:	f7ff bdae 	b.w	8002a9c <_ZN23FrontendApplicationBase36gotoScreen2ScreenWipeTransitionNorthEv>
}
 8002f40:	bd08      	pop	{r3, pc}

08002f42 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002f42:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002f44:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002f46:	4604      	mov	r4, r0
        setX(x);
 8002f48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002f4a:	4615      	mov	r5, r2
        setX(x);
 8002f4c:	4798      	blx	r3
        setY(y);
 8002f4e:	6823      	ldr	r3, [r4, #0]
 8002f50:	4629      	mov	r1, r5
 8002f52:	4620      	mov	r0, r4
 8002f54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 8002f56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002f5a:	4718      	bx	r3

08002f5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002f5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
        return typedTextId != TYPED_TEXT_INVALID;
 8002f5e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
    {
        if (typedText.hasValidId())
 8002f60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002f64:	4299      	cmp	r1, r3
    void updateTextPosition()
 8002f66:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002f68:	d033      	beq.n	8002fd2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x76>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002f6a:	4b1c      	ldr	r3, [pc, #112]	; (8002fdc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	b92b      	cbnz	r3, 8002f7c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002f70:	4b1b      	ldr	r3, [pc, #108]	; (8002fe0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002f72:	4a1c      	ldr	r2, [pc, #112]	; (8002fe4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002f74:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002f76:	481c      	ldr	r0, [pc, #112]	; (8002fe8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x8c>)
 8002f78:	f01c fa3c 	bl	801f3f4 <__assert_func>
 8002f7c:	4a1b      	ldr	r2, [pc, #108]	; (8002fec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x90>)
 8002f7e:	8812      	ldrh	r2, [r2, #0]
 8002f80:	428a      	cmp	r2, r1
 8002f82:	d803      	bhi.n	8002f8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x30>
 8002f84:	4b1a      	ldr	r3, [pc, #104]	; (8002ff0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x94>)
 8002f86:	4a17      	ldr	r2, [pc, #92]	; (8002fe4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002f88:	21b2      	movs	r1, #178	; 0xb2
 8002f8a:	e7f4      	b.n	8002f76 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x1a>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002f8c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002f90:	4b18      	ldr	r3, [pc, #96]	; (8002ff4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>)
 8002f92:	681b      	ldr	r3, [r3, #0]
 8002f94:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002f98:	4b17      	ldr	r3, [pc, #92]	; (8002ff8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x9c>)
 8002f9a:	6818      	ldr	r0, [r3, #0]
 8002f9c:	f001 f908 	bl	80041b0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002fa0:	682b      	ldr	r3, [r5, #0]
 8002fa2:	9001      	str	r0, [sp, #4]
 8002fa4:	4601      	mov	r1, r0
 8002fa6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002fa8:	4628      	mov	r0, r5
 8002faa:	4798      	blx	r3
 8002fac:	682b      	ldr	r3, [r5, #0]
 8002fae:	9901      	ldr	r1, [sp, #4]
 8002fb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fb2:	4604      	mov	r4, r0
 8002fb4:	4628      	mov	r0, r5
 8002fb6:	4798      	blx	r3
 8002fb8:	682b      	ldr	r3, [r5, #0]
 8002fba:	9901      	ldr	r1, [sp, #4]
 8002fbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fbe:	fb14 f400 	smulbb	r4, r4, r0
 8002fc2:	4628      	mov	r0, r5
 8002fc4:	4798      	blx	r3
 8002fc6:	b2e4      	uxtb	r4, r4
 8002fc8:	4404      	add	r4, r0
 8002fca:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002fce:	b002      	add	sp, #8
 8002fd0:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002fd8:	e7f9      	b.n	8002fce <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x72>
 8002fda:	bf00      	nop
 8002fdc:	2000d47c 	.word	0x2000d47c
 8002fe0:	08021534 	.word	0x08021534
 8002fe4:	08021576 	.word	0x08021576
 8002fe8:	080215a4 	.word	0x080215a4
 8002fec:	2000d480 	.word	0x2000d480
 8002ff0:	080215eb 	.word	0x080215eb
 8002ff4:	2000d484 	.word	0x2000d484
 8002ff8:	2000d488 	.word	0x2000d488

08002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002ffc:	4613      	mov	r3, r2
 8002ffe:	4a0c      	ldr	r2, [pc, #48]	; (8003030 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8003000:	b570      	push	{r4, r5, r6, lr}
 8003002:	6814      	ldr	r4, [r2, #0]
 8003004:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 8003006:	b92c      	cbnz	r4, 8003014 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8003008:	4b0a      	ldr	r3, [pc, #40]	; (8003034 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 800300a:	4a0b      	ldr	r2, [pc, #44]	; (8003038 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 800300c:	480b      	ldr	r0, [pc, #44]	; (800303c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 800300e:	2135      	movs	r1, #53	; 0x35
 8003010:	f01c f9f0 	bl	801f3f4 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003014:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8003018:	b10a      	cbz	r2, 800301e <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 800301a:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800301c:	b900      	cbnz	r0, 8003020 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 800301e:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8003020:	6802      	ldr	r2, [r0, #0]
 8003022:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8003024:	460a      	mov	r2, r1
 8003026:	46a4      	mov	ip, r4
 8003028:	4629      	mov	r1, r5
    }
 800302a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 800302e:	4760      	bx	ip
 8003030:	2000d40c 	.word	0x2000d40c
 8003034:	0802163d 	.word	0x0802163d
 8003038:	08021680 	.word	0x08021680
 800303c:	080216dc 	.word	0x080216dc

08003040 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8003040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003044:	4604      	mov	r4, r0
 8003046:	b089      	sub	sp, #36	; 0x24
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8003048:	46a2      	mov	sl, r4
        : presenter(0)
 800304a:	2500      	movs	r5, #0
 800304c:	f00d fd0c 	bl	8010a68 <_ZN8touchgfx6ScreenC1Ev>
 8003050:	4b77      	ldr	r3, [pc, #476]	; (8003230 <_ZN15Screen1ViewBaseC1Ev+0x1f0>)
 8003052:	63e5      	str	r5, [r4, #60]	; 0x3c
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003054:	26ff      	movs	r6, #255	; 0xff
 8003056:	f84a 3b40 	str.w	r3, [sl], #64
 800305a:	f104 096c 	add.w	r9, r4, #108	; 0x6c
          visible(true)
 800305e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003062:	4b74      	ldr	r3, [pc, #464]	; (8003234 <_ZN15Screen1ViewBaseC1Ev+0x1f4>)
 8003064:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8003068:	f104 0898 	add.w	r8, r4, #152	; 0x98
 800306c:	a906      	add	r1, sp, #24
 800306e:	6423      	str	r3, [r4, #64]	; 0x40
        this->width = width;
 8003070:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003074:	f64f 73ff 	movw	r3, #65535	; 0xffff
        width = 0;
 8003078:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 800307c:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8003080:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003082:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        color = col;
 8003086:	66a5      	str	r5, [r4, #104]	; 0x68
 8003088:	4648      	mov	r0, r9
 800308a:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 800308e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8003092:	f009 fd8f 	bl	800cbb4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003096:	4640      	mov	r0, r8
 8003098:	f00a fc4c 	bl	800d934 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800309c:	4638      	mov	r0, r7
 800309e:	f00a fc49 	bl	800d934 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : typedTextId(id)
 80030a2:	4b65      	ldr	r3, [pc, #404]	; (8003238 <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
 80030a4:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
 80030a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80030ac:	f8a4 3154 	strh.w	r3, [r4, #340]	; 0x154
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 80030b0:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80030b4:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
    {
 80030b8:	4b60      	ldr	r3, [pc, #384]	; (800323c <_ZN15Screen1ViewBaseC1Ev+0x1fc>)
 80030ba:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
        this->pobject = pobject;
 80030be:	e9c4 3459 	strd	r3, r4, [r4, #356]	; 0x164
        this->pmemfun_1 = pmemfun_1;
 80030c2:	4b5f      	ldr	r3, [pc, #380]	; (8003240 <_ZN15Screen1ViewBaseC1Ev+0x200>)
 80030c4:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 80030c8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80030cc:	e9c4 355b 	strd	r3, r5, [r4, #364]	; 0x16c
 80030d0:	f8a4 214c 	strh.w	r2, [r4, #332]	; 0x14c
    __background.setPosition(0, 0, 800, 480);
 80030d4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80030d8:	4a5a      	ldr	r2, [pc, #360]	; (8003244 <_ZN15Screen1ViewBaseC1Ev+0x204>)
 80030da:	f8c4 2128 	str.w	r2, [r4, #296]	; 0x128
 80030de:	9300      	str	r3, [sp, #0]
 80030e0:	462a      	mov	r2, r5
 80030e2:	f44f 7348 	mov.w	r3, #800	; 0x320
 80030e6:	4629      	mov	r1, r5
 80030e8:	4650      	mov	r0, sl
        this->width = width;
 80030ea:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
        width = 0;
 80030ee:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
 80030f2:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 80030f6:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
 80030fa:	f7ff fa07 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80030fe:	462a      	mov	r2, r5
 8003100:	4629      	mov	r1, r5
 8003102:	4628      	mov	r0, r5
 8003104:	f7ff ff7a 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003108:	2305      	movs	r3, #5
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 800310a:	66a0      	str	r0, [r4, #104]	; 0x68
    tlo_menu.setBitmap(touchgfx::Bitmap(BITMAP_TLO_2_ID));
 800310c:	a906      	add	r1, sp, #24
 800310e:	4648      	mov	r0, r9
 8003110:	f8ad 3018 	strh.w	r3, [sp, #24]
 8003114:	f00a faca 	bl	800d6ac <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tlo_menu.setPosition(0, 0, 809, 490);
 8003118:	f44f 73f5 	mov.w	r3, #490	; 0x1ea
 800311c:	462a      	mov	r2, r5
 800311e:	9300      	str	r3, [sp, #0]
 8003120:	4629      	mov	r1, r5
 8003122:	f240 3329 	movw	r3, #809	; 0x329
 8003126:	4648      	mov	r0, r9
 8003128:	f7ff f9f0 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    tlo_menu.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800312c:	4629      	mov	r1, r5
 800312e:	4648      	mov	r0, r9
 8003130:	f009 fd06 	bl	800cb40 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    button_wyjdz.setXY(315, 245);
 8003134:	4640      	mov	r0, r8
 8003136:	22f5      	movs	r2, #245	; 0xf5
 8003138:	f240 113b 	movw	r1, #315	; 0x13b
 800313c:	f7ff ff01 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
 8003140:	2301      	movs	r3, #1
    button_wyjdz.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 8003142:	aa06      	add	r2, sp, #24
 8003144:	a905      	add	r1, sp, #20
 8003146:	4640      	mov	r0, r8
 8003148:	f8ad 3018 	strh.w	r3, [sp, #24]
 800314c:	f8ad 5014 	strh.w	r5, [sp, #20]
 8003150:	f00a f945 	bl	800d3de <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8003154:	4640      	mov	r0, r8
class TypedText
 8003156:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
 800315a:	f7ff feff 	bl	8002f5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_wyjdz.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800315e:	4632      	mov	r2, r6
 8003160:	4631      	mov	r1, r6
 8003162:	4630      	mov	r0, r6
 8003164:	f7ff ff4a 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_wyjdz.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003168:	4632      	mov	r2, r6
        color = col;
 800316a:	f8c4 00d4 	str.w	r0, [r4, #212]	; 0xd4
 800316e:	4631      	mov	r1, r6
 8003170:	4630      	mov	r0, r6
 8003172:	f7ff ff43 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_nowa_gra.setXY(315, 180);
 8003176:	22b4      	movs	r2, #180	; 0xb4
        colorPressed = col;
 8003178:	f8c4 00d8 	str.w	r0, [r4, #216]	; 0xd8
 800317c:	f240 113b 	movw	r1, #315	; 0x13b
 8003180:	4638      	mov	r0, r7
 8003182:	f7ff fede 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
    button_nowa_gra.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 8003186:	aa06      	add	r2, sp, #24
 8003188:	a905      	add	r1, sp, #20
 800318a:	2301      	movs	r3, #1
 800318c:	4638      	mov	r0, r7
 800318e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8003192:	f8ad 5014 	strh.w	r5, [sp, #20]
 8003196:	f00a f922 	bl	800d3de <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800319a:	2301      	movs	r3, #1
 800319c:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
        updateTextPosition();
 80031a0:	4638      	mov	r0, r7
 80031a2:	f7ff fedb 	bl	8002f5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_nowa_gra.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80031a6:	4632      	mov	r2, r6
 80031a8:	4631      	mov	r1, r6
 80031aa:	4630      	mov	r0, r6
 80031ac:	f7ff ff26 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_nowa_gra.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 80031b0:	4632      	mov	r2, r6
        color = col;
 80031b2:	f8c4 011c 	str.w	r0, [r4, #284]	; 0x11c
 80031b6:	4631      	mov	r1, r6
 80031b8:	4630      	mov	r0, r6
 80031ba:	f7ff ff1f 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 80031be:	f504 7b94 	add.w	fp, r4, #296	; 0x128
    button_nowa_gra.setAction(buttonCallback);
 80031c2:	f504 73b2 	add.w	r3, r4, #356	; 0x164
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80031c6:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        colorPressed = col;
 80031ca:	f8c4 0120 	str.w	r0, [r4, #288]	; 0x120
    nazwa_gry.setXY(307, 38);
 80031ce:	2226      	movs	r2, #38	; 0x26
 80031d0:	4658      	mov	r0, fp
 80031d2:	f240 1133 	movw	r1, #307	; 0x133
 80031d6:	f7ff feb4 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
    nazwa_gry.setColor(touchgfx::Color::getColorFrom24BitRGB(166, 47, 168));
 80031da:	22a8      	movs	r2, #168	; 0xa8
 80031dc:	212f      	movs	r1, #47	; 0x2f
 80031de:	20a6      	movs	r0, #166	; 0xa6
 80031e0:	f7ff ff0c 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        : typedTextId(id)
 80031e4:	4b14      	ldr	r3, [pc, #80]	; (8003238 <_ZN15Screen1ViewBaseC1Ev+0x1f8>)
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 80031e6:	f8c4 0158 	str.w	r0, [r4, #344]	; 0x158
 80031ea:	9306      	str	r3, [sp, #24]
    nazwa_gry.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
 80031ec:	a906      	add	r1, sp, #24
 80031ee:	2302      	movs	r3, #2
 80031f0:	4658      	mov	r0, fp
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 80031f2:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
 80031f6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80031fa:	f00a f8ad 	bl	800d358 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80031fe:	1d20      	adds	r0, r4, #4
 8003200:	4651      	mov	r1, sl
 8003202:	9003      	str	r0, [sp, #12]
 8003204:	f007 fba0 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003208:	9803      	ldr	r0, [sp, #12]
 800320a:	4649      	mov	r1, r9
 800320c:	f007 fb9c 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003210:	9803      	ldr	r0, [sp, #12]
 8003212:	4641      	mov	r1, r8
 8003214:	f007 fb98 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003218:	9803      	ldr	r0, [sp, #12]
 800321a:	4639      	mov	r1, r7
 800321c:	f007 fb94 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003220:	9803      	ldr	r0, [sp, #12]
 8003222:	4659      	mov	r1, fp
 8003224:	f007 fb90 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003228:	4620      	mov	r0, r4
 800322a:	b009      	add	sp, #36	; 0x24
 800322c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003230:	08021740 	.word	0x08021740
 8003234:	08022f8c 	.word	0x08022f8c
 8003238:	08020b88 	.word	0x08020b88
 800323c:	08021728 	.word	0x08021728
 8003240:	08002f2d 	.word	0x08002f2d
 8003244:	08022ee4 	.word	0x08022ee4

08003248 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003248:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800324a:	4770      	bx	lr

0800324c <_ZN8touchgfx15AbstractPainter8setAlphaEh>:
    virtual void render(uint8_t* ptr, int x, int xAdjust, int y, unsigned count, const uint8_t* covers) = 0;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        painterAlpha = newAlpha;
 800324c:	7241      	strb	r1, [r0, #9]
    }
 800324e:	4770      	bx	lr

08003250 <_ZNK8touchgfx15AbstractPainter8getAlphaEv>:

    /** @copydoc Image::getAlpha */
    virtual uint8_t getAlpha() const
    {
        return painterAlpha;
    }
 8003250:	7a40      	ldrb	r0, [r0, #9]
 8003252:	4770      	bx	lr

08003254 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    virtual AbstractPainter& getPainter() const;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003254:	f880 102e 	strb.w	r1, [r0, #46]	; 0x2e
    }
 8003258:	4770      	bx	lr

0800325a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800325a:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800325e:	4770      	bx	lr

08003260 <_ZN15Screen2ViewBaseD1Ev>:

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase() {}
 8003260:	4770      	bx	lr

08003262 <_ZN15Screen2ViewBase11setupScreenEv>:
}

void Screen2ViewBase::setupScreen()
{

}
 8003262:	4770      	bx	lr

08003264 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8003264:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8003268:	b14b      	cbz	r3, 800327e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 800326a:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 800326e:	6812      	ldr	r2, [r2, #0]
 8003270:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8003272:	b13b      	cbz	r3, 8003284 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8003274:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8003278:	681b      	ldr	r3, [r3, #0]
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 800327a:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 800327c:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 800327e:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8003282:	e7f4      	b.n	800326e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8003284:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8003288:	e7f6      	b.n	8003278 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

0800328a <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_12MoveAnimatorINS_13ScalableImageEEEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800328a:	4770      	bx	lr

0800328c <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800328c:	4770      	bx	lr

0800328e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800328e:	4770      	bx	lr

08003290 <_ZN8touchgfx12MoveAnimatorINS_6CircleEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 8003290:	4770      	bx	lr

08003292 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED1Ev>:
 8003292:	4770      	bx	lr

08003294 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_12MoveAnimatorINS_13ScalableImageEEEvvE7executeES6_>:
    virtual void execute(T1 t1)
 8003294:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003296:	68c2      	ldr	r2, [r0, #12]
 8003298:	6844      	ldr	r4, [r0, #4]
 800329a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800329c:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800329e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80032a2:	07d2      	lsls	r2, r2, #31
 80032a4:	bf48      	it	mi
 80032a6:	5962      	ldrmi	r2, [r4, r5]
 80032a8:	689b      	ldr	r3, [r3, #8]
    }
 80032aa:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032ac:	bf48      	it	mi
 80032ae:	58d3      	ldrmi	r3, [r2, r3]
 80032b0:	4718      	bx	r3

080032b2 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_12MoveAnimatorINS_13ScalableImageEEEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80032b2:	6843      	ldr	r3, [r0, #4]
 80032b4:	b12b      	cbz	r3, 80032c2 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_12MoveAnimatorINS_13ScalableImageEEEvvE7isValidEv+0x10>
 80032b6:	6883      	ldr	r3, [r0, #8]
 80032b8:	b92b      	cbnz	r3, 80032c6 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_12MoveAnimatorINS_13ScalableImageEEEvvE7isValidEv+0x14>
 80032ba:	68c0      	ldr	r0, [r0, #12]
 80032bc:	f000 0001 	and.w	r0, r0, #1
 80032c0:	4770      	bx	lr
 80032c2:	4618      	mov	r0, r3
 80032c4:	4770      	bx	lr
 80032c6:	2001      	movs	r0, #1
    }
 80032c8:	4770      	bx	lr

080032ca <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80032ca:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032cc:	68c2      	ldr	r2, [r0, #12]
 80032ce:	6844      	ldr	r4, [r0, #4]
 80032d0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80032d2:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 80032d4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80032d8:	07d2      	lsls	r2, r2, #31
 80032da:	bf48      	it	mi
 80032dc:	5962      	ldrmi	r2, [r4, r5]
 80032de:	689b      	ldr	r3, [r3, #8]
    }
 80032e0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80032e2:	bf48      	it	mi
 80032e4:	58d3      	ldrmi	r3, [r2, r3]
 80032e6:	4718      	bx	r3

080032e8 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80032e8:	6843      	ldr	r3, [r0, #4]
 80032ea:	b12b      	cbz	r3, 80032f8 <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80032ec:	6883      	ldr	r3, [r0, #8]
 80032ee:	b92b      	cbnz	r3, 80032fc <_ZNK8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80032f0:	68c0      	ldr	r0, [r0, #12]
 80032f2:	f000 0001 	and.w	r0, r0, #1
 80032f6:	4770      	bx	lr
 80032f8:	4618      	mov	r0, r3
 80032fa:	4770      	bx	lr
 80032fc:	2001      	movs	r0, #1
    }
 80032fe:	4770      	bx	lr

08003300 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003300:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8003304:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8003308:	4770      	bx	lr

0800330a <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 800330a:	f8a0 104e 	strh.w	r1, [r0, #78]	; 0x4e
    }
 800330e:	4770      	bx	lr

08003310 <_ZNK8touchgfx12MoveAnimatorINS_6CircleEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 8003310:	f8b0 004e 	ldrh.w	r0, [r0, #78]	; 0x4e
 8003314:	4770      	bx	lr

08003316 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21setMoveAnimationDelayEt>:
        moveAnimationDelay = delay;
 8003316:	85c1      	strh	r1, [r0, #46]	; 0x2e
    }
 8003318:	4770      	bx	lr

0800331a <_ZNK8touchgfx12MoveAnimatorINS_13ScalableImageEE21getMoveAnimationDelayEv>:
    }
 800331a:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 800331c:	4770      	bx	lr

0800331e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED0Ev>:
class MoveAnimator : public T
 800331e:	b510      	push	{r4, lr}
 8003320:	2148      	movs	r1, #72	; 0x48
 8003322:	4604      	mov	r4, r0
 8003324:	f01c f837 	bl	801f396 <_ZdlPvj>
 8003328:	4620      	mov	r0, r4
 800332a:	bd10      	pop	{r4, pc}

0800332c <_ZN8touchgfx12MoveAnimatorINS_6CircleEED0Ev>:
 800332c:	b510      	push	{r4, lr}
 800332e:	2168      	movs	r1, #104	; 0x68
 8003330:	4604      	mov	r4, r0
 8003332:	f01c f830 	bl	801f396 <_ZdlPvj>
 8003336:	4620      	mov	r0, r4
 8003338:	bd10      	pop	{r4, pc}

0800333a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 800333a:	b510      	push	{r4, lr}
 800333c:	2178      	movs	r1, #120	; 0x78
 800333e:	4604      	mov	r4, r0
 8003340:	f01c f829 	bl	801f396 <_ZdlPvj>
 8003344:	4620      	mov	r0, r4
 8003346:	bd10      	pop	{r4, pc}

08003348 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003348:	b510      	push	{r4, lr}
 800334a:	2110      	movs	r1, #16
 800334c:	4604      	mov	r4, r0
 800334e:	f01c f822 	bl	801f396 <_ZdlPvj>
 8003352:	4620      	mov	r0, r4
 8003354:	bd10      	pop	{r4, pc}

08003356 <_ZN8touchgfx8CallbackI15Screen2ViewBaseRKNS_12MoveAnimatorINS_13ScalableImageEEEvvED0Ev>:
 8003356:	b510      	push	{r4, lr}
 8003358:	2110      	movs	r1, #16
 800335a:	4604      	mov	r4, r0
 800335c:	f01c f81b 	bl	801f396 <_ZdlPvj>
 8003360:	4620      	mov	r0, r4
 8003362:	bd10      	pop	{r4, pc}

08003364 <_ZN15Screen2ViewBaseD0Ev>:
 8003364:	b510      	push	{r4, lr}
 8003366:	f243 1138 	movw	r1, #12600	; 0x3138
 800336a:	4604      	mov	r4, r0
 800336c:	f01c f813 	bl	801f396 <_ZdlPvj>
 8003370:	4620      	mov	r0, r4
 8003372:	bd10      	pop	{r4, pc}

08003374 <_ZN15Screen2ViewBase42interakcja_przesuwaniaEndedCallbackHandlerERKN8touchgfx12MoveAnimatorINS0_13ScalableImageEEE>:

void Screen2ViewBase::interakcja_przesuwaniaEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ScalableImage>& comp)
{
 8003374:	b508      	push	{r3, lr}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003376:	f00b ffe1 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
    //Interaction1
    //When interakcja_przesuwania completed change screen to Screen3
    //Go to Screen3 with screen transition towards East
    application().gotoScreen3ScreenWipeTransitionEast();
}
 800337a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoScreen3ScreenWipeTransitionEast();
 800337e:	f7ff bbcd 	b.w	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>

08003382 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8003382:	b510      	push	{r4, lr}
 8003384:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8003386:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003388:	b150      	cbz	r0, 80033a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 800338a:	6803      	ldr	r3, [r0, #0]
 800338c:	68db      	ldr	r3, [r3, #12]
 800338e:	4798      	blx	r3
 8003390:	b130      	cbz	r0, 80033a0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8003392:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8003394:	6803      	ldr	r3, [r0, #0]
 8003396:	4621      	mov	r1, r4
 8003398:	689b      	ldr	r3, [r3, #8]
        }
    }
 800339a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 800339e:	4718      	bx	r3
    }
 80033a0:	bd10      	pop	{r4, pc}

080033a2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80033a2:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80033a4:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 80033a6:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 80033aa:	4604      	mov	r4, r0
 80033ac:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80033ae:	b99b      	cbnz	r3, 80033d8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80033b0:	b98e      	cbnz	r6, 80033d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80033b2:	fab3 f383 	clz	r3, r3
 80033b6:	095b      	lsrs	r3, r3, #5
 80033b8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 80033bc:	6823      	ldr	r3, [r4, #0]
 80033be:	4620      	mov	r0, r4
 80033c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80033c4:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 80033c6:	6823      	ldr	r3, [r4, #0]
 80033c8:	4620      	mov	r0, r4
 80033ca:	695b      	ldr	r3, [r3, #20]
 80033cc:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80033ce:	b116      	cbz	r6, 80033d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80033d0:	792b      	ldrb	r3, [r5, #4]
 80033d2:	2b01      	cmp	r3, #1
 80033d4:	d003      	beq.n	80033de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 80033d6:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80033d8:	2e00      	cmp	r6, #0
 80033da:	d0fc      	beq.n	80033d6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80033dc:	e7e9      	b.n	80033b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80033de:	6823      	ldr	r3, [r4, #0]
 80033e0:	4620      	mov	r0, r4
 80033e2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    }
 80033e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80033ea:	4718      	bx	r3

080033ec <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 80033ec:	4908      	ldr	r1, [pc, #32]	; (8003410 <_ZN8touchgfx3BoxC1Ev+0x24>)
 80033ee:	6001      	str	r1, [r0, #0]
 80033f0:	f44f 7180 	mov.w	r1, #256	; 0x100
        this->x = x;
 80033f4:	2200      	movs	r2, #0
 80033f6:	8481      	strh	r1, [r0, #36]	; 0x24
 80033f8:	21ff      	movs	r1, #255	; 0xff
        this->width = width;
 80033fa:	e9c0 2201 	strd	r2, r2, [r0, #4]
        width = 0;
 80033fe:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8003402:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003406:	61c2      	str	r2, [r0, #28]
 8003408:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        color = col;
 800340c:	6282      	str	r2, [r0, #40]	; 0x28
    }
 800340e:	4770      	bx	lr
 8003410:	08022f8c 	.word	0x08022f8c

08003414 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
          painterAlpha(255)
 8003414:	f64f 72ff 	movw	r2, #65535	; 0xffff
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003418:	b538      	push	{r3, r4, r5, lr}
 800341a:	2300      	movs	r3, #0
 800341c:	8102      	strh	r2, [r0, #8]
        : AbstractPainter(), currentX(0), currentY(0)
 800341e:	4a11      	ldr	r2, [pc, #68]	; (8003464 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003420:	6043      	str	r3, [r0, #4]
 8003422:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003426:	6002      	str	r2, [r0, #0]
    AbstractPainterRGB565()
 8003428:	4604      	mov	r4, r0
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800342a:	f7fd fcdf 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800342e:	6803      	ldr	r3, [r0, #0]
 8003430:	6a1b      	ldr	r3, [r3, #32]
 8003432:	4798      	blx	r3
        return auxiliaryLCD;
 8003434:	4b0c      	ldr	r3, [pc, #48]	; (8003468 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003436:	681b      	ldr	r3, [r3, #0]
 8003438:	fab0 f580 	clz	r5, r0
 800343c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800343e:	096d      	lsrs	r5, r5, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003440:	b130      	cbz	r0, 8003450 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003442:	6803      	ldr	r3, [r0, #0]
 8003444:	6a1b      	ldr	r3, [r3, #32]
 8003446:	4798      	blx	r3
 8003448:	2800      	cmp	r0, #0
 800344a:	bf08      	it	eq
 800344c:	f045 0501 	orreq.w	r5, r5, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003450:	b92d      	cbnz	r5, 800345e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003452:	4b06      	ldr	r3, [pc, #24]	; (800346c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003454:	4a06      	ldr	r2, [pc, #24]	; (8003470 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003456:	4807      	ldr	r0, [pc, #28]	; (8003474 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003458:	212f      	movs	r1, #47	; 0x2f
 800345a:	f01b ffcb 	bl	801f3f4 <__assert_func>
    }
 800345e:	4620      	mov	r0, r4
 8003460:	bd38      	pop	{r3, r4, r5, pc}
 8003462:	bf00      	nop
 8003464:	08022b7c 	.word	0x08022b7c
 8003468:	2000d40c 	.word	0x2000d40c
 800346c:	0802176c 	.word	0x0802176c
 8003470:	080217ca 	.word	0x080217ca
 8003474:	08021803 	.word	0x08021803

08003478 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8003478:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    BoxWithBorderButtonStyle()
 800347c:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 800347e:	4606      	mov	r6, r0
 8003480:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8003482:	f240 1301 	movw	r3, #257	; 0x101
        this->x = x;
 8003486:	2500      	movs	r5, #0
 8003488:	8483      	strh	r3, [r0, #36]	; 0x24
 800348a:	4b12      	ldr	r3, [pc, #72]	; (80034d4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
          visible(true)
 800348c:	61c5      	str	r5, [r0, #28]
        this->width = width;
 800348e:	e9c0 5501 	strd	r5, r5, [r0, #4]
        width = 0;
 8003492:	e9c0 5503 	strd	r5, r5, [r0, #12]
 8003496:	e9c0 5505 	strd	r5, r5, [r0, #20]
          firstChild(0)
 800349a:	6285      	str	r5, [r0, #40]	; 0x28
 800349c:	6305      	str	r5, [r0, #48]	; 0x30
 800349e:	f846 3b34 	str.w	r3, [r6], #52
    BoxWithBorderButtonStyle()
 80034a2:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 80034a4:	4630      	mov	r0, r6
 80034a6:	f7ff ffa1 	bl	80033ec <_ZN8touchgfx3BoxC1Ev>
 80034aa:	4b0b      	ldr	r3, [pc, #44]	; (80034d8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
 80034ac:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 80034ae:	462a      	mov	r2, r5
 80034b0:	4629      	mov	r1, r5
 80034b2:	4630      	mov	r0, r6
        : color(0)
 80034b4:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80034b8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        color = col;
 80034bc:	6625      	str	r5, [r4, #96]	; 0x60
 80034be:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80034c2:	f7ff fd3e 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80034c6:	4620      	mov	r0, r4
 80034c8:	4631      	mov	r1, r6
 80034ca:	f007 fa3d 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80034ce:	4620      	mov	r0, r4
 80034d0:	bd70      	pop	{r4, r5, r6, pc}
 80034d2:	bf00      	nop
 80034d4:	0802196c 	.word	0x0802196c
 80034d8:	08023024 	.word	0x08023024

080034dc <_ZN15Screen2ViewBaseC1Ev>:
Screen2ViewBase::Screen2ViewBase() :
 80034dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034e0:	4604      	mov	r4, r0
 80034e2:	b089      	sub	sp, #36	; 0x24
    interakcja_przesuwaniaEndedCallback(this, &Screen2ViewBase::interakcja_przesuwaniaEndedCallbackHandler)
 80034e4:	46a1      	mov	r9, r4
 80034e6:	2500      	movs	r5, #0
 80034e8:	f00d fabe 	bl	8010a68 <_ZN8touchgfx6ScreenC1Ev>
 80034ec:	4ba3      	ldr	r3, [pc, #652]	; (800377c <_ZN15Screen2ViewBaseC1Ev+0x2a0>)
 80034ee:	63e5      	str	r5, [r4, #60]	; 0x3c
 80034f0:	f849 3b40 	str.w	r3, [r9], #64
 80034f4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80034f8:	4648      	mov	r0, r9
 80034fa:	f7ff ff77 	bl	80033ec <_ZN8touchgfx3BoxC1Ev>
 80034fe:	f64f 76ff 	movw	r6, #65535	; 0xffff
          moveAnimationEndedCallback(0)
 8003502:	a907      	add	r1, sp, #28
 8003504:	4640      	mov	r0, r8
 8003506:	f104 0ab4 	add.w	sl, r4, #180	; 0xb4
 800350a:	f8ad 601c 	strh.w	r6, [sp, #28]
 800350e:	f009 fb51 	bl	800cbb4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003512:	4b9b      	ldr	r3, [pc, #620]	; (8003780 <_ZN15Screen2ViewBaseC1Ev+0x2a4>)
 8003514:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003516:	f884 5096 	strb.w	r5, [r4, #150]	; 0x96
 800351a:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 800351e:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
 8003522:	4650      	mov	r0, sl
 8003524:	f008 fe0c 	bl	800c140 <_ZN8touchgfx6CircleC1Ev>
 8003528:	f504 7b8e 	add.w	fp, r4, #284	; 0x11c
 800352c:	4b95      	ldr	r3, [pc, #596]	; (8003784 <_ZN15Screen2ViewBaseC1Ev+0x2a8>)
 800352e:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
 8003532:	f884 50fe 	strb.w	r5, [r4, #254]	; 0xfe
 8003536:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800353a:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
     *
     * @param  bmp   (Optional) The bitmap, default is #BITMAP_INVALID.
     * @param  alpha (Optional) the alpha, default is 255 i.e. solid.
     */
    PainterRGB565Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID), uint8_t alpha = 255)
        : AbstractPainterRGB565(), bitmapARGB8888Pointer(0), bitmapRGB565Pointer(0), bitmapAlphaPointer(0)
 800353e:	4658      	mov	r0, fp
 8003540:	f8ad 601c 	strh.w	r6, [sp, #28]
 8003544:	f7ff ff66 	bl	8003414 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003548:	4b8f      	ldr	r3, [pc, #572]	; (8003788 <_ZN15Screen2ViewBaseC1Ev+0x2ac>)
 800354a:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 800354e:	f504 77a4 	add.w	r7, r4, #328	; 0x148
    {
        setBitmap(bmp);
 8003552:	a907      	add	r1, sp, #28
 8003554:	e9c4 564e 	strd	r5, r6, [r4, #312]	; 0x138
 8003558:	4658      	mov	r0, fp
        : AbstractPainterRGB565(), bitmapARGB8888Pointer(0), bitmapRGB565Pointer(0), bitmapAlphaPointer(0)
 800355a:	e9c4 554c 	strd	r5, r5, [r4, #304]	; 0x130
        y = 0;
 800355e:	f8c4 5140 	str.w	r5, [r4, #320]	; 0x140
        height = 0;
 8003562:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
        setBitmap(bmp);
 8003566:	f008 fcc3 	bl	800bef0 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
        painterAlpha = newAlpha;
 800356a:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 800356e:	4638      	mov	r0, r7
 8003570:	f504 76e0 	add.w	r6, r4, #448	; 0x1c0
 8003574:	f7ff ff80 	bl	8003478 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8003578:	4630      	mov	r0, r6
 800357a:	f7ff ff7d 	bl	8003478 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
    {
 800357e:	4b83      	ldr	r3, [pc, #524]	; (800378c <_ZN15Screen2ViewBaseC1Ev+0x2b0>)
        this->pobject = pobject;
 8003580:	e9c4 348e 	strd	r3, r4, [r4, #568]	; 0x238
        this->pmemfun_1 = pmemfun_1;
 8003584:	4b82      	ldr	r3, [pc, #520]	; (8003790 <_ZN15Screen2ViewBaseC1Ev+0x2b4>)
 8003586:	e9c4 3590 	strd	r3, r5, [r4, #576]	; 0x240
    {
 800358a:	4b82      	ldr	r3, [pc, #520]	; (8003794 <_ZN15Screen2ViewBaseC1Ev+0x2b8>)
        this->pobject = pobject;
 800358c:	e9c4 3492 	strd	r3, r4, [r4, #584]	; 0x248
        this->pmemfun_1 = pmemfun_1;
 8003590:	4b81      	ldr	r3, [pc, #516]	; (8003798 <_ZN15Screen2ViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003592:	f504 7016 	add.w	r0, r4, #600	; 0x258
 8003596:	e9c4 3594 	strd	r3, r5, [r4, #592]	; 0x250
 800359a:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 800359e:	f00a f9f5 	bl	800d98c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 80035a2:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80035a6:	9300      	str	r3, [sp, #0]
 80035a8:	462a      	mov	r2, r5
 80035aa:	f44f 7348 	mov.w	r3, #800	; 0x320
 80035ae:	4629      	mov	r1, r5
 80035b0:	4648      	mov	r0, r9
 80035b2:	f7fe ffab 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80035b6:	462a      	mov	r2, r5
 80035b8:	4629      	mov	r1, r5
 80035ba:	4628      	mov	r0, r5
 80035bc:	f7ff fd1e 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80035c0:	2306      	movs	r3, #6
        this->color = color;
 80035c2:	66a0      	str	r0, [r4, #104]	; 0x68
    tlo_animacja.setBitmap(touchgfx::Bitmap(BITMAP_TRASA_ID));
 80035c4:	a907      	add	r1, sp, #28
 80035c6:	4640      	mov	r0, r8
 80035c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80035cc:	f00a f86e 	bl	800d6ac <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    tlo_animacja.setPosition(0, 0, 3549, 480);
 80035d0:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80035d4:	462a      	mov	r2, r5
 80035d6:	9300      	str	r3, [sp, #0]
 80035d8:	4629      	mov	r1, r5
 80035da:	f640 53dd 	movw	r3, #3549	; 0xddd
 80035de:	4640      	mov	r0, r8
 80035e0:	f7fe ff94 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    tlo_animacja.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80035e4:	4629      	mov	r1, r5
 80035e6:	4640      	mov	r0, r8
 80035e8:	f009 faaa 	bl	800cb40 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    circle1.setPosition(100, 322, 80, 80);
 80035ec:	2350      	movs	r3, #80	; 0x50
 80035ee:	f44f 72a1 	mov.w	r2, #322	; 0x142
 80035f2:	9300      	str	r3, [sp, #0]
 80035f4:	4650      	mov	r0, sl
 80035f6:	2164      	movs	r1, #100	; 0x64
 80035f8:	f7fe ff88 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
 80035fc:	f44f 63a0 	mov.w	r3, #1280	; 0x500
        this->circleCenterY = CWRUtil::toQ5(y);
 8003600:	e9c4 3339 	strd	r3, r3, [r4, #228]	; 0xe4
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8003604:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
     */
    template <typename T>
    void setArc(const T startAngle, const T endAngle)
    {
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
 8003608:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800360c:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    circle1Painter.setBitmap(touchgfx::Bitmap(BITMAP_PTASZEK_ID));
 8003610:	a907      	add	r1, sp, #28
 8003612:	2304      	movs	r3, #4
 8003614:	4658      	mov	r0, fp
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 8003616:	f8c4 50f8 	str.w	r5, [r4, #248]	; 0xf8
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
 800361a:	f8c4 50f0 	str.w	r5, [r4, #240]	; 0xf0
 800361e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8003622:	f008 fc65 	bl	800bef0 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
    circle1.setPainter(circle1Painter);
 8003626:	4659      	mov	r1, fp
 8003628:	4650      	mov	r0, sl
 800362a:	f009 f90b 	bl	800c844 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
        borderBox.setPosition(x, y, width, height);
 800362e:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003632:	9300      	str	r3, [sp, #0]
 8003634:	462a      	mov	r2, r5
 8003636:	4629      	mov	r1, r5
 8003638:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800363c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003640:	f7fe ff64 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003644:	f04f 0305 	mov.w	r3, #5
 8003648:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
    button_skoku.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
 800364c:	2299      	movs	r2, #153	; 0x99
 800364e:	2166      	movs	r1, #102	; 0x66
 8003650:	4628      	mov	r0, r5
 8003652:	f7ff fcd3 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003656:	22cc      	movs	r2, #204	; 0xcc
 8003658:	9003      	str	r0, [sp, #12]
 800365a:	2199      	movs	r1, #153	; 0x99
 800365c:	4628      	mov	r0, r5
 800365e:	f7ff fccd 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003662:	2266      	movs	r2, #102	; 0x66
 8003664:	9004      	str	r0, [sp, #16]
 8003666:	2133      	movs	r1, #51	; 0x33
 8003668:	4628      	mov	r0, r5
 800366a:	f7ff fcc7 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800366e:	2299      	movs	r2, #153	; 0x99
 8003670:	4683      	mov	fp, r0
 8003672:	2166      	movs	r1, #102	; 0x66
 8003674:	2033      	movs	r0, #51	; 0x33
 8003676:	f7ff fcc1 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        up = colorReleased;
 800367a:	9b03      	ldr	r3, [sp, #12]
 800367c:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        down = colorPressed;
 8003680:	9b04      	ldr	r3, [sp, #16]
        borderDown = borderColorPressed;
 8003682:	f8c4 01bc 	str.w	r0, [r4, #444]	; 0x1bc
        borderUp = borderColorReleased;
 8003686:	e9c4 3b6d 	strd	r3, fp, [r4, #436]	; 0x1b4
        handlePressedUpdated();
 800368a:	4638      	mov	r0, r7
 800368c:	f7ff fdea 	bl	8003264 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    button_skoku.setPosition(0, 0, 800, 480);
 8003690:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003694:	4629      	mov	r1, r5
 8003696:	9200      	str	r2, [sp, #0]
 8003698:	4638      	mov	r0, r7
 800369a:	462a      	mov	r2, r5
 800369c:	f44f 7348 	mov.w	r3, #800	; 0x320
 80036a0:	f7fe ff34 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
        handleAlphaUpdated();
 80036a4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
        alpha = newAlpha;
 80036a8:	f884 5175 	strb.w	r5, [r4, #373]	; 0x175
        handleAlphaUpdated();
 80036ac:	4638      	mov	r0, r7
 80036ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80036b2:	4798      	blx	r3
    button_skoku.setAction(flexButtonCallback);
 80036b4:	f504 7b0e 	add.w	fp, r4, #568	; 0x238
        borderBox.setPosition(x, y, width, height);
 80036b8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80036bc:	9200      	str	r2, [sp, #0]
 80036be:	4629      	mov	r1, r5
 80036c0:	462a      	mov	r2, r5
 80036c2:	f504 70fa 	add.w	r0, r4, #500	; 0x1f4
        action = &callback;
 80036c6:	f8c4 b178 	str.w	fp, [r4, #376]	; 0x178
 80036ca:	f44f 7348 	mov.w	r3, #800	; 0x320
 80036ce:	f7fe ff1d 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
 80036d2:	f04f 0305 	mov.w	r3, #5
 80036d6:	f8a4 3224 	strh.w	r3, [r4, #548]	; 0x224
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
 80036da:	2299      	movs	r2, #153	; 0x99
 80036dc:	2166      	movs	r1, #102	; 0x66
 80036de:	4628      	mov	r0, r5
 80036e0:	f7ff fc8c 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80036e4:	22cc      	movs	r2, #204	; 0xcc
 80036e6:	9004      	str	r0, [sp, #16]
 80036e8:	2199      	movs	r1, #153	; 0x99
 80036ea:	4628      	mov	r0, r5
 80036ec:	f7ff fc86 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80036f0:	2266      	movs	r2, #102	; 0x66
 80036f2:	9003      	str	r0, [sp, #12]
 80036f4:	2133      	movs	r1, #51	; 0x33
 80036f6:	4628      	mov	r0, r5
 80036f8:	f7ff fc80 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80036fc:	2299      	movs	r2, #153	; 0x99
 80036fe:	9005      	str	r0, [sp, #20]
 8003700:	2166      	movs	r1, #102	; 0x66
 8003702:	2033      	movs	r0, #51	; 0x33
 8003704:	f7ff fc7a 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        up = colorReleased;
 8003708:	9b04      	ldr	r3, [sp, #16]
 800370a:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
        down = colorPressed;
 800370e:	9b03      	ldr	r3, [sp, #12]
 8003710:	f8c4 322c 	str.w	r3, [r4, #556]	; 0x22c
        borderUp = borderColorReleased;
 8003714:	9b05      	ldr	r3, [sp, #20]
        borderDown = borderColorPressed;
 8003716:	e9c4 308c 	strd	r3, r0, [r4, #560]	; 0x230
        handlePressedUpdated();
 800371a:	4630      	mov	r0, r6
 800371c:	f7ff fda2 	bl	8003264 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setPosition(0, 0, 800, 480);
 8003720:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003724:	462a      	mov	r2, r5
 8003726:	4629      	mov	r1, r5
 8003728:	9300      	str	r3, [sp, #0]
 800372a:	4630      	mov	r0, r6
 800372c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003730:	f7fe feec 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
        handleAlphaUpdated();
 8003734:	f8d4 31c0 	ldr.w	r3, [r4, #448]	; 0x1c0
        alpha = newAlpha;
 8003738:	f884 51ed 	strb.w	r5, [r4, #493]	; 0x1ed
        handleAlphaUpdated();
 800373c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8003740:	4630      	mov	r0, r6
 8003742:	4798      	blx	r3
 8003744:	1d20      	adds	r0, r4, #4
 8003746:	4649      	mov	r1, r9
        action = &callback;
 8003748:	f8c4 b1f0 	str.w	fp, [r4, #496]	; 0x1f0
 800374c:	9003      	str	r0, [sp, #12]
 800374e:	f007 f8fb 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003752:	9803      	ldr	r0, [sp, #12]
 8003754:	4641      	mov	r1, r8
 8003756:	f007 f8f7 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800375a:	9803      	ldr	r0, [sp, #12]
 800375c:	4651      	mov	r1, sl
 800375e:	f007 f8f3 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003762:	9803      	ldr	r0, [sp, #12]
 8003764:	4639      	mov	r1, r7
 8003766:	f007 f8ef 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800376a:	9803      	ldr	r0, [sp, #12]
 800376c:	4631      	mov	r1, r6
 800376e:	f007 f8eb 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003772:	4620      	mov	r0, r4
 8003774:	b009      	add	sp, #36	; 0x24
 8003776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800377a:	bf00      	nop
 800377c:	08021a30 	.word	0x08021a30
 8003780:	08021870 	.word	0x08021870
 8003784:	080218e8 	.word	0x080218e8
 8003788:	08022ad8 	.word	0x08022ad8
 800378c:	08021a00 	.word	0x08021a00
 8003790:	080037b9 	.word	0x080037b9
 8003794:	08021a18 	.word	0x08021a18
 8003798:	08003375 	.word	0x08003375

0800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>:
     * Cancel move animation and leave the Drawable in its current position. If the
     * animation is not running, nothing is done.
     */
    void cancelMoveAnimation()
    {
        if (moveAnimationRunning)
 800379c:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
    void cancelMoveAnimation()
 80037a0:	b510      	push	{r4, lr}
 80037a2:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 80037a4:	b13b      	cbz	r3, 80037b6 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv+0x1a>
        {
            Application::getInstance()->unregisterTimerWidget(this);
 80037a6:	f00b fdc9 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 80037aa:	4621      	mov	r1, r4
 80037ac:	f00b fdfe 	bl	800f3ac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
            moveAnimationRunning = false;
 80037b0:	2300      	movs	r3, #0
 80037b2:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
        }
    }
 80037b6:	bd10      	pop	{r4, pc}

080037b8 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &button_skoku)
 80037b8:	f500 73a4 	add.w	r3, r0, #328	; 0x148
 80037bc:	4299      	cmp	r1, r3
{
 80037be:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80037c2:	4604      	mov	r4, r0
    if (&src == &button_skoku)
 80037c4:	f040 814f 	bne.w	8003a66 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2ae>
        uint16_t currentX = circle1.getX();
        uint16_t currentY = circle1.getY();
        int16_t tloX = tlo_animacja.getX();
        
        
        if(tloX > -280 && tloX < -140){
 80037c8:	f8b0 6070 	ldrh.w	r6, [r0, #112]	; 0x70
        return rect.x;
 80037cc:	f9b0 10b8 	ldrsh.w	r1, [r0, #184]	; 0xb8
        uint16_t currentY = circle1.getY();
 80037d0:	f8b0 50ba 	ldrh.w	r5, [r0, #186]	; 0xba
        if(tloX > -280 && tloX < -140){
 80037d4:	f206 1317 	addw	r3, r6, #279	; 0x117
 80037d8:	b29b      	uxth	r3, r3
 80037da:	2b8a      	cmp	r3, #138	; 0x8a
        	else{
        		if(currentY < 100){
        			circle1.moveTo(currentX,0);
        		}
        		else{
        			circle1.moveTo(currentX, currentY - 100);
 80037dc:	f100 07b4 	add.w	r7, r0, #180	; 0xb4
        if(tloX > -280 && tloX < -140){
 80037e0:	d82a      	bhi.n	8003838 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x80>
        	if(currentY > 340 || currentY < 170){
 80037e2:	f1a5 03aa 	sub.w	r3, r5, #170	; 0xaa
 80037e6:	2baa      	cmp	r3, #170	; 0xaa
 80037e8:	d91f      	bls.n	800382a <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
        		tlo_animacja.moveTo(-2500,0);
 80037ea:	49c7      	ldr	r1, [pc, #796]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 80037ec:	306c      	adds	r0, #108	; 0x6c
 80037ee:	2200      	movs	r2, #0
 80037f0:	9001      	str	r0, [sp, #4]
 80037f2:	f7fe fc67 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 80037f6:	9801      	ldr	r0, [sp, #4]
 80037f8:	f7ff ffd0 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 80037fc:	f00b fd9e 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 8003800:	f7ff f98c 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        	}
        }
        
        
        if(tloX > -280 && tloX < -140){
        	if(currentY > 300 || currentY < 160){
 8003804:	f1a5 03a0 	sub.w	r3, r5, #160	; 0xa0
 8003808:	2b8c      	cmp	r3, #140	; 0x8c
 800380a:	d97c      	bls.n	8003906 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14e>
        		tlo_animacja.moveTo(-2500,0);
 800380c:	49be      	ldr	r1, [pc, #760]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 800380e:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8003812:	2200      	movs	r2, #0
 8003814:	9001      	str	r0, [sp, #4]
 8003816:	f7fe fc55 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 800381a:	9801      	ldr	r0, [sp, #4]
 800381c:	f7ff ffbe 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 8003820:	f00b fd8c 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 8003824:	f7ff f97a 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
 8003828:	e06d      	b.n	8003906 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14e>
        			circle1.moveTo(currentX, currentY - 100);
 800382a:	f1a5 0264 	sub.w	r2, r5, #100	; 0x64
 800382e:	b212      	sxth	r2, r2
 8003830:	4638      	mov	r0, r7
 8003832:	f7fe fc47 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
 8003836:	e7e5      	b.n	8003804 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4c>
        else if(tloX > -580 && tloX < -440){
 8003838:	f206 2343 	addw	r3, r6, #579	; 0x243
 800383c:	b29b      	uxth	r3, r3
 800383e:	2b8a      	cmp	r3, #138	; 0x8a
 8003840:	d843      	bhi.n	80038ca <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x112>
        	if(currentY > 240 || currentY < 130){
 8003842:	f1a5 0382 	sub.w	r3, r5, #130	; 0x82
 8003846:	2b6e      	cmp	r3, #110	; 0x6e
 8003848:	d938      	bls.n	80038bc <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x104>
        		tlo_animacja.moveTo(-2500,0);
 800384a:	f100 086c 	add.w	r8, r0, #108	; 0x6c
 800384e:	49ae      	ldr	r1, [pc, #696]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 8003850:	2200      	movs	r2, #0
 8003852:	4640      	mov	r0, r8
 8003854:	f7fe fc36 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 8003858:	4640      	mov	r0, r8
 800385a:	f7ff ff9f 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 800385e:	f00b fd6d 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 8003862:	f7ff f95b 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        	}
        }
        if(tloX > -580 && tloX < -440){
        	if(currentY > 240 || currentY < 130){
        		tlo_animacja.moveTo(-2500,0);
 8003866:	49a8      	ldr	r1, [pc, #672]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 8003868:	2200      	movs	r2, #0
 800386a:	4640      	mov	r0, r8
 800386c:	f7fe fc2a 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 8003870:	4640      	mov	r0, r8
 8003872:	f7ff ff93 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 8003876:	f00b fd61 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 800387a:	f7ff f94f 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        		tlo_animacja.moveTo(-2500,0);
        		tlo_animacja.cancelMoveAnimation();
        		application().gotoScreen3ScreenWipeTransitionEast();
        	}
        }
        if(tloX > -1520 && tloX < -1380){
 800387e:	f206 53ef 	addw	r3, r6, #1519	; 0x5ef
 8003882:	b29b      	uxth	r3, r3
 8003884:	2b8a      	cmp	r3, #138	; 0x8a
 8003886:	d875      	bhi.n	8003974 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1bc>
        	if(currentY > 220 || currentY < 135){
 8003888:	f1a5 0387 	sub.w	r3, r5, #135	; 0x87
 800388c:	2b55      	cmp	r3, #85	; 0x55
 800388e:	d90d      	bls.n	80038ac <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>
        		tlo_animacja.moveTo(-2500,0);
 8003890:	499d      	ldr	r1, [pc, #628]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 8003892:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8003896:	2200      	movs	r2, #0
 8003898:	9001      	str	r0, [sp, #4]
 800389a:	f7fe fc13 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 800389e:	9801      	ldr	r0, [sp, #4]
 80038a0:	f7ff ff7c 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 80038a4:	f00b fd4a 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 80038a8:	f7ff f938 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        		tlo_animacja.moveTo(-2500,0);
        		tlo_animacja.cancelMoveAnimation();
        		application().gotoScreen3ScreenWipeTransitionEast();
        	}
        }
        if(tloX > -2420 && tloX < -2270){
 80038ac:	f606 1673 	addw	r6, r6, #2419	; 0x973
 80038b0:	b2b6      	uxth	r6, r6
 80038b2:	2e94      	cmp	r6, #148	; 0x94
 80038b4:	d874      	bhi.n	80039a0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e8>
        	if(currentY > 240 || currentY < 145){
 80038b6:	3d91      	subs	r5, #145	; 0x91
 80038b8:	2d5f      	cmp	r5, #95	; 0x5f
 80038ba:	e062      	b.n	8003982 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1ca>
        			circle1.moveTo(currentX, currentY - 100);
 80038bc:	f1a5 0264 	sub.w	r2, r5, #100	; 0x64
 80038c0:	b212      	sxth	r2, r2
 80038c2:	4638      	mov	r0, r7
 80038c4:	f7fe fbfe 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        	if(currentY > 240 || currentY < 130){
 80038c8:	e7d9      	b.n	800387e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc6>
        else if(tloX > -900 && tloX < -750){
 80038ca:	f206 3883 	addw	r8, r6, #899	; 0x383
 80038ce:	fa1f f388 	uxth.w	r3, r8
 80038d2:	2b94      	cmp	r3, #148	; 0x94
 80038d4:	f200 808c 	bhi.w	80039f0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x238>
        	if(currentY > 290 || currentY < 150){
 80038d8:	f1a5 0396 	sub.w	r3, r5, #150	; 0x96
 80038dc:	2b8c      	cmp	r3, #140	; 0x8c
 80038de:	d931      	bls.n	8003944 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x18c>
        		tlo_animacja.moveTo(-2500,0);
 80038e0:	4989      	ldr	r1, [pc, #548]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 80038e2:	2200      	movs	r2, #0
 80038e4:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 80038e8:	9001      	str	r0, [sp, #4]
 80038ea:	f7fe fbeb 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 80038ee:	9801      	ldr	r0, [sp, #4]
 80038f0:	f7ff ff54 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
        if(tloX > -900 && tloX < -750){
 80038f4:	fa1f f888 	uxth.w	r8, r8
 80038f8:	f00b fd20 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 80038fc:	f7ff f90e 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        if(tloX > -900 && tloX < -750){
 8003900:	f1b8 0f94 	cmp.w	r8, #148	; 0x94
 8003904:	d924      	bls.n	8003950 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x198>
        if(tloX > -1210 && tloX < -1075){
 8003906:	f206 43b9 	addw	r3, r6, #1209	; 0x4b9
 800390a:	b29b      	uxth	r3, r3
 800390c:	2b85      	cmp	r3, #133	; 0x85
 800390e:	d8b6      	bhi.n	800387e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc6>
        	if(currentY > 375 || currentY < 285){
 8003910:	f46f 738e 	mvn.w	r3, #284	; 0x11c
 8003914:	18eb      	adds	r3, r5, r3
 8003916:	2b5a      	cmp	r3, #90	; 0x5a
 8003918:	d90d      	bls.n	8003936 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x17e>
        		tlo_animacja.moveTo(-2500,0);
 800391a:	497b      	ldr	r1, [pc, #492]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 800391c:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 8003920:	2200      	movs	r2, #0
 8003922:	9001      	str	r0, [sp, #4]
 8003924:	f7fe fbce 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 8003928:	9801      	ldr	r0, [sp, #4]
 800392a:	f7ff ff37 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 800392e:	f00b fd05 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 8003932:	f7ff f8f3 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        if(tloX > -2150 && tloX < -2020){
 8003936:	f606 0365 	addw	r3, r6, #2149	; 0x865
 800393a:	b29b      	uxth	r3, r3
 800393c:	2b80      	cmp	r3, #128	; 0x80
 800393e:	d8b5      	bhi.n	80038ac <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>
        	if(currentY > 300 || currentY < 190){
 8003940:	3dbe      	subs	r5, #190	; 0xbe
 8003942:	e01d      	b.n	8003980 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c8>
        			circle1.moveTo(currentX, currentY - 100);
 8003944:	f1a5 0264 	sub.w	r2, r5, #100	; 0x64
 8003948:	b212      	sxth	r2, r2
 800394a:	4638      	mov	r0, r7
 800394c:	f7fe fbba 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        	if(currentY > 290 || currentY < 150){
 8003950:	f1a5 0396 	sub.w	r3, r5, #150	; 0x96
 8003954:	2b8c      	cmp	r3, #140	; 0x8c
 8003956:	d90d      	bls.n	8003974 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1bc>
        		tlo_animacja.moveTo(-2500,0);
 8003958:	496b      	ldr	r1, [pc, #428]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 800395a:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800395e:	2200      	movs	r2, #0
 8003960:	9001      	str	r0, [sp, #4]
 8003962:	f7fe fbaf 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 8003966:	9801      	ldr	r0, [sp, #4]
 8003968:	f7ff ff18 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 800396c:	f00b fce6 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 8003970:	f7ff f8d4 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        if(tloX > -1835 && tloX < -1690){
 8003974:	f206 732a 	addw	r3, r6, #1834	; 0x72a
 8003978:	b29b      	uxth	r3, r3
 800397a:	2b8f      	cmp	r3, #143	; 0x8f
 800397c:	d8db      	bhi.n	8003936 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x17e>
        	if(currentY > 200 || currentY < 90){
 800397e:	3d5a      	subs	r5, #90	; 0x5a
        	if(currentY > 300 || currentY < 190){
 8003980:	2d6e      	cmp	r5, #110	; 0x6e
        	if(currentY > 240 || currentY < 145){
 8003982:	d90d      	bls.n	80039a0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e8>
        		tlo_animacja.moveTo(-2500,0);
 8003984:	4960      	ldr	r1, [pc, #384]	; (8003b08 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x350>)
 8003986:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800398a:	2200      	movs	r2, #0
 800398c:	9001      	str	r0, [sp, #4]
 800398e:	f7fe fb99 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        		tlo_animacja.cancelMoveAnimation();
 8003992:	9801      	ldr	r0, [sp, #4]
 8003994:	f7ff ff02 	bl	800379c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE19cancelMoveAnimationEv>
 8003998:	f00b fcd0 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        		application().gotoScreen3ScreenWipeTransitionEast();
 800399c:	f7ff f8be 	bl	8002b1c <_ZN23FrontendApplicationBase35gotoScreen3ScreenWipeTransitionEastEv>
        if (!moveAnimationRunning)
 80039a0:	f894 30fe 	ldrb.w	r3, [r4, #254]	; 0xfe
        moveAnimationEndedCallback = 0;
 80039a4:	2500      	movs	r5, #0
 80039a6:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
        if (!moveAnimationRunning)
 80039aa:	b923      	cbnz	r3, 80039b6 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1fe>
            Application::getInstance()->registerTimerWidget(this);
 80039ac:	f00b fcc6 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 80039b0:	4639      	mov	r1, r7
 80039b2:	f00b fcc9 	bl	800f348 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationStartX = T::getX();
 80039b6:	f8b4 30b8 	ldrh.w	r3, [r4, #184]	; 0xb8
 80039ba:	f8a4 3106 	strh.w	r3, [r4, #262]	; 0x106
        moveAnimationStartY = T::getY();
 80039be:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
 80039c2:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
        moveAnimationEndX = endX;
 80039c6:	2364      	movs	r3, #100	; 0x64
 80039c8:	f8a4 310a 	strh.w	r3, [r4, #266]	; 0x10a
        moveAnimationEndY = endY;
 80039cc:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80039d0:	f8a4 310c 	strh.w	r3, [r4, #268]	; 0x10c
        moveAnimationDuration = duration;
 80039d4:	230f      	movs	r3, #15
 80039d6:	f8a4 3104 	strh.w	r3, [r4, #260]	; 0x104
        moveAnimationXEquation = xProgressionEquation;
 80039da:	4b4c      	ldr	r3, [pc, #304]	; (8003b0c <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x354>)
        moveAnimationCounter = 0;
 80039dc:	f8a4 5100 	strh.w	r5, [r4, #256]	; 0x100
        moveAnimationYEquation = yProgressionEquation;
 80039e0:	e9c4 3344 	strd	r3, r3, [r4, #272]	; 0x110
        moveAnimationRunning = true;
 80039e4:	2301      	movs	r3, #1
 80039e6:	f884 30fe 	strb.w	r3, [r4, #254]	; 0xfe
        //When interakcja_skok2 completed move circle1
        //Move circle1 to x:100, y:400 with QuadIn easing in 250 ms (15 Ticks)
        circle1.clearMoveAnimationEndedAction();
        circle1.startMoveAnimation(100, 400, 15, touchgfx::EasingEquations::quadEaseIn, touchgfx::EasingEquations::quadEaseIn);
    }
}
 80039ea:	b002      	add	sp, #8
 80039ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        else if(tloX > -1210 && tloX < -1075){
 80039f0:	f206 43b9 	addw	r3, r6, #1209	; 0x4b9
 80039f4:	b29b      	uxth	r3, r3
 80039f6:	2b85      	cmp	r3, #133	; 0x85
 80039f8:	d809      	bhi.n	8003a0e <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x256>
        	if(currentY > 375 || currentY < 285){
 80039fa:	f46f 728e 	mvn.w	r2, #284	; 0x11c
 80039fe:	18ab      	adds	r3, r5, r2
 8003a00:	2b5a      	cmp	r3, #90	; 0x5a
        	if(currentY > 240 || currentY < 145){
 8003a02:	f63f af6d 	bhi.w	80038e0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x128>
        		circle1.moveTo(currentX, currentY - 100);
 8003a06:	f1a5 0264 	sub.w	r2, r5, #100	; 0x64
 8003a0a:	b212      	sxth	r2, r2
 8003a0c:	e015      	b.n	8003a3a <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x282>
        else if(tloX > -1520 && tloX < -1380){
 8003a0e:	f206 53ef 	addw	r3, r6, #1519	; 0x5ef
 8003a12:	b29b      	uxth	r3, r3
 8003a14:	2b8a      	cmp	r3, #138	; 0x8a
 8003a16:	d803      	bhi.n	8003a20 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x268>
        	if(currentY > 220 || currentY < 135){
 8003a18:	f1a5 0387 	sub.w	r3, r5, #135	; 0x87
 8003a1c:	2b55      	cmp	r3, #85	; 0x55
 8003a1e:	e7f0      	b.n	8003a02 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24a>
        else if(tloX > -1835 && tloX < -1690){
 8003a20:	f206 732a 	addw	r3, r6, #1834	; 0x72a
 8003a24:	b29b      	uxth	r3, r3
 8003a26:	2b8f      	cmp	r3, #143	; 0x8f
 8003a28:	d80b      	bhi.n	8003a42 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x28a>
        	if(currentY > 200 || currentY < 90){
 8003a2a:	f1a5 035a 	sub.w	r3, r5, #90	; 0x5a
 8003a2e:	2b6e      	cmp	r3, #110	; 0x6e
 8003a30:	f63f af56 	bhi.w	80038e0 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x128>
        	if(currentY < 100){
 8003a34:	2d63      	cmp	r5, #99	; 0x63
 8003a36:	d8e6      	bhi.n	8003a06 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24e>
        		circle1.moveTo(currentX,0);
 8003a38:	2200      	movs	r2, #0
        		circle1.moveTo(currentX, currentY - 100);
 8003a3a:	4638      	mov	r0, r7
 8003a3c:	f7fe fb42 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
 8003a40:	e761      	b.n	8003906 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x14e>
        else if(tloX > -2150 && tloX < -2020){
 8003a42:	f606 0365 	addw	r3, r6, #2149	; 0x865
 8003a46:	b29b      	uxth	r3, r3
 8003a48:	2b80      	cmp	r3, #128	; 0x80
 8003a4a:	d803      	bhi.n	8003a54 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x29c>
        	if(currentY > 300 || currentY < 190){
 8003a4c:	f1a5 03be 	sub.w	r3, r5, #190	; 0xbe
 8003a50:	2b6e      	cmp	r3, #110	; 0x6e
 8003a52:	e7d6      	b.n	8003a02 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24a>
        else if(tloX > -2420 && tloX < -2270){
 8003a54:	f606 1373 	addw	r3, r6, #2419	; 0x973
 8003a58:	b29b      	uxth	r3, r3
 8003a5a:	2b94      	cmp	r3, #148	; 0x94
 8003a5c:	d8ea      	bhi.n	8003a34 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x27c>
        	if(currentY > 240 || currentY < 145){
 8003a5e:	f1a5 0391 	sub.w	r3, r5, #145	; 0x91
 8003a62:	2b5f      	cmp	r3, #95	; 0x5f
 8003a64:	e7cd      	b.n	8003a02 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24a>
    else if (&src == &flexButton1)
 8003a66:	f500 76e0 	add.w	r6, r0, #448	; 0x1c0
 8003a6a:	428e      	cmp	r6, r1
 8003a6c:	d1bd      	bne.n	80039ea <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x232>
        moveAnimationEndedCallback = 0;
 8003a6e:	2300      	movs	r3, #0
 8003a70:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
        if (!moveAnimationRunning)
 8003a74:	f890 3096 	ldrb.w	r3, [r0, #150]	; 0x96
 8003a78:	b92b      	cbnz	r3, 8003a86 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2ce>
            Application::getInstance()->registerTimerWidget(this);
 8003a7a:	f00b fc5f 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8003a7e:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 8003a82:	f00b fc61 	bl	800f348 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        moveAnimationStartX = T::getX();
 8003a86:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 8003a8a:	f8a4 309e 	strh.w	r3, [r4, #158]	; 0x9e
        moveAnimationStartY = T::getY();
 8003a8e:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 8003a92:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
        moveAnimationEndX = endX;
 8003a96:	f24f 633c 	movw	r3, #63036	; 0xf63c
 8003a9a:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
        moveAnimationDuration = duration;
 8003a9e:	f44f 7396 	mov.w	r3, #300	; 0x12c
 8003aa2:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
        moveAnimationXEquation = xProgressionEquation;
 8003aa6:	4b1a      	ldr	r3, [pc, #104]	; (8003b10 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x358>)
        moveAnimationYEquation = yProgressionEquation;
 8003aa8:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
        moveAnimationRunning = true;
 8003aac:	2301      	movs	r3, #1
        moveAnimationCounter = 0;
 8003aae:	2500      	movs	r5, #0
        moveAnimationRunning = true;
 8003ab0:	f884 3096 	strb.w	r3, [r4, #150]	; 0x96
        tlo_animacja.setMoveAnimationEndedAction(interakcja_przesuwaniaEndedCallback);
 8003ab4:	f504 7312 	add.w	r3, r4, #584	; 0x248
        flexButton1.invalidate();
 8003ab8:	4630      	mov	r0, r6
        moveAnimationCounter = 0;
 8003aba:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
        moveAnimationEndY = endY;
 8003abe:	f8a4 50a4 	strh.w	r5, [r4, #164]	; 0xa4
        moveAnimationEndedCallback = &callback;
 8003ac2:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
        visible = vis;
 8003ac6:	f884 51e5 	strb.w	r5, [r4, #485]	; 0x1e5
 8003aca:	f00c fbda 	bl	8010282 <_ZNK8touchgfx8Drawable10invalidateEv>
        uint16_t currentY = circle1.getY();
 8003ace:	f8b4 30ba 	ldrh.w	r3, [r4, #186]	; 0xba
        return rect.x;
 8003ad2:	f9b4 10b8 	ldrsh.w	r1, [r4, #184]	; 0xb8
        if(currentY < 100){
 8003ad6:	2b63      	cmp	r3, #99	; 0x63
        	circle1.moveTo(currentX, currentY - 100);
 8003ad8:	bf88      	it	hi
 8003ada:	f1a3 0264 	subhi.w	r2, r3, #100	; 0x64
        			circle1.moveTo(currentX, currentY - 100);
 8003ade:	f104 06b4 	add.w	r6, r4, #180	; 0xb4
        	circle1.moveTo(currentX,0);
 8003ae2:	bf94      	ite	ls
 8003ae4:	462a      	movls	r2, r5
        	circle1.moveTo(currentX, currentY - 100);
 8003ae6:	b212      	sxthhi	r2, r2
 8003ae8:	4630      	mov	r0, r6
 8003aea:	f7fe faeb 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
        if (!moveAnimationRunning)
 8003aee:	f894 30fe 	ldrb.w	r3, [r4, #254]	; 0xfe
        moveAnimationEndedCallback = 0;
 8003af2:	2500      	movs	r5, #0
 8003af4:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
        if (!moveAnimationRunning)
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	f47f af5c 	bne.w	80039b6 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1fe>
            Application::getInstance()->registerTimerWidget(this);
 8003afe:	f00b fc1d 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8003b02:	4631      	mov	r1, r6
 8003b04:	e755      	b.n	80039b2 <_ZN15Screen2ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1fa>
 8003b06:	bf00      	nop
 8003b08:	fffff63c 	.word	0xfffff63c
 8003b0c:	08010e37 	.word	0x08010e37
 8003b10:	08010e33 	.word	0x08010e33

08003b14 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 8003b14:	f890 304a 	ldrb.w	r3, [r0, #74]	; 0x4a
    void nextMoveAnimationStep()
 8003b18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b1c:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	d04f      	beq.n	8003bc2 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
        {
            moveAnimationCounter++;
 8003b22:	f8b0 304c 	ldrh.w	r3, [r0, #76]	; 0x4c
            if (moveAnimationCounter >= moveAnimationDelay)
 8003b26:	f8b0 504e 	ldrh.w	r5, [r0, #78]	; 0x4e
            moveAnimationCounter++;
 8003b2a:	3301      	adds	r3, #1
 8003b2c:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8003b2e:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8003b30:	f8a0 304c 	strh.w	r3, [r0, #76]	; 0x4c
            if (moveAnimationCounter >= moveAnimationDelay)
 8003b34:	d345      	bcc.n	8003bc2 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8003b36:	1b5b      	subs	r3, r3, r5
 8003b38:	f8b0 2056 	ldrh.w	r2, [r0, #86]	; 0x56
 8003b3c:	6dc6      	ldr	r6, [r0, #92]	; 0x5c
 8003b3e:	b29d      	uxth	r5, r3
 8003b40:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8003b44:	1ad2      	subs	r2, r2, r3
 8003b46:	b212      	sxth	r2, r2
 8003b48:	f8b0 3050 	ldrh.w	r3, [r0, #80]	; 0x50
 8003b4c:	2100      	movs	r1, #0
 8003b4e:	4628      	mov	r0, r5
 8003b50:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8003b52:	f8b4 3054 	ldrh.w	r3, [r4, #84]	; 0x54
 8003b56:	f8b4 2058 	ldrh.w	r2, [r4, #88]	; 0x58
 8003b5a:	6e27      	ldr	r7, [r4, #96]	; 0x60
 8003b5c:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8003b5e:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8003b60:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 8003b64:	b212      	sxth	r2, r2
 8003b66:	2100      	movs	r1, #0
 8003b68:	4628      	mov	r0, r5
 8003b6a:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8003b6c:	f8b4 2054 	ldrh.w	r2, [r4, #84]	; 0x54
 8003b70:	f8b4 1052 	ldrh.w	r1, [r4, #82]	; 0x52
 8003b74:	4402      	add	r2, r0
 8003b76:	4431      	add	r1, r6
 8003b78:	b212      	sxth	r2, r2
 8003b7a:	b209      	sxth	r1, r1
 8003b7c:	4620      	mov	r0, r4
 8003b7e:	f7fe faa1 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8003b82:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 8003b86:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8003b8a:	f8b4 204c 	ldrh.w	r2, [r4, #76]	; 0x4c
 8003b8e:	440b      	add	r3, r1
 8003b90:	429a      	cmp	r2, r3
 8003b92:	d316      	bcc.n	8003bc2 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8003b94:	2300      	movs	r3, #0
 8003b96:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
                    moveAnimationCounter = 0;
 8003b9a:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
                    Application::getInstance()->unregisterTimerWidget(this);
 8003b9e:	f00b fbcd 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8003ba2:	4621      	mov	r1, r4
 8003ba4:	f00b fc02 	bl	800f3ac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8003ba8:	6e60      	ldr	r0, [r4, #100]	; 0x64
 8003baa:	b150      	cbz	r0, 8003bc2 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
 8003bac:	6803      	ldr	r3, [r0, #0]
 8003bae:	68db      	ldr	r3, [r3, #12]
 8003bb0:	4798      	blx	r3
 8003bb2:	b130      	cbz	r0, 8003bc2 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv+0xae>
                    {
                        moveAnimationEndedCallback->execute(*this);
 8003bb4:	6e60      	ldr	r0, [r4, #100]	; 0x64
 8003bb6:	6803      	ldr	r3, [r0, #0]
 8003bb8:	4621      	mov	r1, r4
 8003bba:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8003bbc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 8003bc0:	4718      	bx	r3
    }
 8003bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003bc6 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003bc6:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8003bc8:	f7ff ffa4 	bl	8003b14 <_ZN8touchgfx12MoveAnimatorINS_6CircleEE21nextMoveAnimationStepEv>
    }
 8003bcc:	bd08      	pop	{r3, pc}

08003bce <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>:
        if (moveAnimationRunning)
 8003bce:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
    void nextMoveAnimationStep()
 8003bd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003bd6:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d040      	beq.n	8003c5e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
            moveAnimationCounter++;
 8003bdc:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 8003bde:	8dc5      	ldrh	r5, [r0, #46]	; 0x2e
            moveAnimationCounter++;
 8003be0:	3301      	adds	r3, #1
 8003be2:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 8003be4:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 8003be6:	8583      	strh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 8003be8:	d339      	bcc.n	8003c5e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8003bea:	1b5b      	subs	r3, r3, r5
 8003bec:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8003bee:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 8003bf0:	b29d      	uxth	r5, r3
 8003bf2:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8003bf4:	1ad2      	subs	r2, r2, r3
 8003bf6:	b212      	sxth	r2, r2
 8003bf8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8003bfa:	2100      	movs	r1, #0
 8003bfc:	4628      	mov	r0, r5
 8003bfe:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8003c00:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8003c02:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8003c04:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8003c06:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8003c08:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8003c0a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8003c0c:	b212      	sxth	r2, r2
 8003c0e:	2100      	movs	r1, #0
 8003c10:	4628      	mov	r0, r5
 8003c12:	47b8      	blx	r7
                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8003c14:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8003c16:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 8003c18:	4402      	add	r2, r0
 8003c1a:	4431      	add	r1, r6
 8003c1c:	b212      	sxth	r2, r2
 8003c1e:	b209      	sxth	r1, r1
 8003c20:	4620      	mov	r0, r4
 8003c22:	f7fe fa4f 	bl	80020c4 <_ZN8touchgfx8Drawable6moveToEss>
                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8003c26:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8003c28:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 8003c2a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8003c2c:	440b      	add	r3, r1
 8003c2e:	429a      	cmp	r2, r3
 8003c30:	d315      	bcc.n	8003c5e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                    moveAnimationRunning = false;
 8003c32:	2300      	movs	r3, #0
 8003c34:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
                    moveAnimationCounter = 0;
 8003c38:	85a3      	strh	r3, [r4, #44]	; 0x2c
                    Application::getInstance()->unregisterTimerWidget(this);
 8003c3a:	f00b fb7f 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8003c3e:	4621      	mov	r1, r4
 8003c40:	f00b fbb4 	bl	800f3ac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8003c44:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8003c46:	b150      	cbz	r0, 8003c5e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
 8003c48:	6803      	ldr	r3, [r0, #0]
 8003c4a:	68db      	ldr	r3, [r3, #12]
 8003c4c:	4798      	blx	r3
 8003c4e:	b130      	cbz	r0, 8003c5e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                        moveAnimationEndedCallback->execute(*this);
 8003c50:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8003c52:	6803      	ldr	r3, [r0, #0]
 8003c54:	4621      	mov	r1, r4
 8003c56:	689b      	ldr	r3, [r3, #8]
    }
 8003c58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 8003c5c:	4718      	bx	r3
    }
 8003c5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003c62 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003c62:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8003c64:	f7ff ffb3 	bl	8003bce <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>
    }
 8003c68:	bd08      	pop	{r3, pc}

08003c6a <_ZN15Screen3ViewBaseD1Ev>:

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase() {}
 8003c6a:	4770      	bx	lr

08003c6c <_ZN15Screen3ViewBase11setupScreenEv>:
}

void Screen3ViewBase::setupScreen()
{

}
 8003c6c:	4770      	bx	lr

08003c6e <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003c6e:	4770      	bx	lr

08003c70 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003c70:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003c72:	68c2      	ldr	r2, [r0, #12]
 8003c74:	6844      	ldr	r4, [r0, #4]
 8003c76:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003c78:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8003c7a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003c7e:	07d2      	lsls	r2, r2, #31
 8003c80:	bf48      	it	mi
 8003c82:	5962      	ldrmi	r2, [r4, r5]
 8003c84:	689b      	ldr	r3, [r3, #8]
    }
 8003c86:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8003c88:	bf48      	it	mi
 8003c8a:	58d3      	ldrmi	r3, [r2, r3]
 8003c8c:	4718      	bx	r3

08003c8e <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8003c8e:	6843      	ldr	r3, [r0, #4]
 8003c90:	b12b      	cbz	r3, 8003c9e <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003c92:	6883      	ldr	r3, [r0, #8]
 8003c94:	b92b      	cbnz	r3, 8003ca2 <_ZNK8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003c96:	68c0      	ldr	r0, [r0, #12]
 8003c98:	f000 0001 	and.w	r0, r0, #1
 8003c9c:	4770      	bx	lr
 8003c9e:	4618      	mov	r0, r3
 8003ca0:	4770      	bx	lr
 8003ca2:	2001      	movs	r0, #1
    }
 8003ca4:	4770      	bx	lr

08003ca6 <_ZN8touchgfx8CallbackI15Screen3ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ca6:	b510      	push	{r4, lr}
 8003ca8:	2110      	movs	r1, #16
 8003caa:	4604      	mov	r4, r0
 8003cac:	f01b fb73 	bl	801f396 <_ZdlPvj>
 8003cb0:	4620      	mov	r0, r4
 8003cb2:	bd10      	pop	{r4, pc}

08003cb4 <_ZN15Screen3ViewBaseD0Ev>:
 8003cb4:	b510      	push	{r4, lr}
 8003cb6:	f44f 719c 	mov.w	r1, #312	; 0x138
 8003cba:	4604      	mov	r4, r0
 8003cbc:	f01b fb6b 	bl	801f396 <_ZdlPvj>
 8003cc0:	4620      	mov	r0, r4
 8003cc2:	bd10      	pop	{r4, pc}

08003cc4 <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003cc4:	b508      	push	{r3, lr}
    if (&src == &button_powrot_do_menu)
 8003cc6:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003cca:	4299      	cmp	r1, r3
 8003ccc:	d105      	bne.n	8003cda <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003cce:	f00b fb35 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
        //jeszcze_raz
        //When button_jeszcze_raz clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}
 8003cd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003cd6:	f7fe bf11 	b.w	8002afc <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &button_jeszcze_raz)
 8003cda:	30e0      	adds	r0, #224	; 0xe0
 8003cdc:	4281      	cmp	r1, r0
 8003cde:	d105      	bne.n	8003cec <_ZN15Screen3ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8003ce0:	f00b fb2c 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
}
 8003ce4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoScreen2ScreenSlideTransitionEast();
 8003ce8:	f7fe bee8 	b.w	8002abc <_ZN23FrontendApplicationBase36gotoScreen2ScreenSlideTransitionEastEv>
}
 8003cec:	bd08      	pop	{r3, pc}
	...

08003cf0 <_ZN15Screen3ViewBaseC1Ev>:
Screen3ViewBase::Screen3ViewBase() :
 8003cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cf4:	4604      	mov	r4, r0
 8003cf6:	b087      	sub	sp, #28
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler)
 8003cf8:	46a2      	mov	sl, r4
 8003cfa:	2500      	movs	r5, #0
 8003cfc:	f00c feb4 	bl	8010a68 <_ZN8touchgfx6ScreenC1Ev>
 8003d00:	4b5d      	ldr	r3, [pc, #372]	; (8003e78 <_ZN15Screen3ViewBaseC1Ev+0x188>)
 8003d02:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003d04:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8003d08:	4b5c      	ldr	r3, [pc, #368]	; (8003e7c <_ZN15Screen3ViewBaseC1Ev+0x18c>)
 8003d0a:	6423      	str	r3, [r4, #64]	; 0x40
 8003d0c:	26ff      	movs	r6, #255	; 0xff
 8003d0e:	f104 096c 	add.w	r9, r4, #108	; 0x6c
          visible(true)
 8003d12:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003d16:	f104 0898 	add.w	r8, r4, #152	; 0x98
 8003d1a:	a905      	add	r1, sp, #20
 8003d1c:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
        this->width = width;
 8003d20:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
 8003d24:	f64f 73ff 	movw	r3, #65535	; 0xffff
        width = 0;
 8003d28:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
 8003d2c:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
 8003d30:	65e5      	str	r5, [r4, #92]	; 0x5c
 8003d32:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
        color = col;
 8003d36:	66a5      	str	r5, [r4, #104]	; 0x68
 8003d38:	4648      	mov	r0, r9
 8003d3a:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8003d3e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003d42:	f008 ff37 	bl	800cbb4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8003d46:	4640      	mov	r0, r8
 8003d48:	f009 fdf4 	bl	800d934 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d4c:	4638      	mov	r0, r7
 8003d4e:	f009 fdf1 	bl	800d934 <_ZN8touchgfx15ButtonWithLabelC1Ev>
    {
 8003d52:	4b4b      	ldr	r3, [pc, #300]	; (8003e80 <_ZN15Screen3ViewBaseC1Ev+0x190>)
        this->pobject = pobject;
 8003d54:	e9c4 344a 	strd	r3, r4, [r4, #296]	; 0x128
        this->pmemfun_1 = pmemfun_1;
 8003d58:	4b4a      	ldr	r3, [pc, #296]	; (8003e84 <_ZN15Screen3ViewBaseC1Ev+0x194>)
    __background.setPosition(0, 0, 800, 480);
 8003d5a:	f44f 7bf0 	mov.w	fp, #480	; 0x1e0
 8003d5e:	e9c4 354c 	strd	r3, r5, [r4, #304]	; 0x130
 8003d62:	f8cd b000 	str.w	fp, [sp]
 8003d66:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003d6a:	462a      	mov	r2, r5
 8003d6c:	4629      	mov	r1, r5
 8003d6e:	4650      	mov	r0, sl
 8003d70:	f7fe fbcc 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8003d74:	462a      	mov	r2, r5
 8003d76:	4629      	mov	r1, r5
 8003d78:	4628      	mov	r0, r5
 8003d7a:	f7ff f93f 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003d7e:	f04f 0303 	mov.w	r3, #3
        this->color = color;
 8003d82:	66a0      	str	r0, [r4, #104]	; 0x68
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GAME_OVER_ID));
 8003d84:	a905      	add	r1, sp, #20
 8003d86:	4648      	mov	r0, r9
 8003d88:	f8ad 3014 	strh.w	r3, [sp, #20]
 8003d8c:	f009 fc8e 	bl	800d6ac <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 0, 800, 480);
 8003d90:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003d94:	462a      	mov	r2, r5
 8003d96:	f8cd b000 	str.w	fp, [sp]
 8003d9a:	4629      	mov	r1, r5
 8003d9c:	4648      	mov	r0, r9
 8003d9e:	f7fe fbb5 	bl	800250c <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8003da2:	4629      	mov	r1, r5
 8003da4:	4648      	mov	r0, r9
 8003da6:	f008 fecb 	bl	800cb40 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    button_powrot_do_menu.setXY(302, 269);
 8003daa:	4640      	mov	r0, r8
 8003dac:	f240 120d 	movw	r2, #269	; 0x10d
 8003db0:	f44f 7197 	mov.w	r1, #302	; 0x12e
 8003db4:	f7ff f8c5 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
 8003db8:	f04f 0b01 	mov.w	fp, #1
    button_powrot_do_menu.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 8003dbc:	aa05      	add	r2, sp, #20
 8003dbe:	a904      	add	r1, sp, #16
 8003dc0:	4640      	mov	r0, r8
 8003dc2:	f8ad 5010 	strh.w	r5, [sp, #16]
 8003dc6:	f8ad b014 	strh.w	fp, [sp, #20]
 8003dca:	f009 fb08 	bl	800d3de <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003dce:	f04f 0303 	mov.w	r3, #3
 8003dd2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 8003dd6:	4640      	mov	r0, r8
 8003dd8:	f7ff f8c0 	bl	8002f5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_powrot_do_menu.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003ddc:	4632      	mov	r2, r6
 8003dde:	4631      	mov	r1, r6
 8003de0:	4630      	mov	r0, r6
 8003de2:	f7ff f90b 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_powrot_do_menu.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003de6:	4632      	mov	r2, r6
        color = col;
 8003de8:	f8c4 00d4 	str.w	r0, [r4, #212]	; 0xd4
 8003dec:	4631      	mov	r1, r6
 8003dee:	4630      	mov	r0, r6
 8003df0:	f7ff f904 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_powrot_do_menu.setAction(buttonCallback);
 8003df4:	f504 7394 	add.w	r3, r4, #296	; 0x128
 8003df8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
        colorPressed = col;
 8003dfc:	f8c4 00d8 	str.w	r0, [r4, #216]	; 0xd8
    button_jeszcze_raz.setXY(302, 143);
 8003e00:	228f      	movs	r2, #143	; 0x8f
 8003e02:	4638      	mov	r0, r7
 8003e04:	f44f 7197 	mov.w	r1, #302	; 0x12e
 8003e08:	9303      	str	r3, [sp, #12]
 8003e0a:	f7ff f89a 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
    button_jeszcze_raz.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
 8003e0e:	a904      	add	r1, sp, #16
 8003e10:	aa05      	add	r2, sp, #20
 8003e12:	4638      	mov	r0, r7
 8003e14:	f8ad 5010 	strh.w	r5, [sp, #16]
 8003e18:	f8ad b014 	strh.w	fp, [sp, #20]
 8003e1c:	f009 fadf 	bl	800d3de <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003e20:	2204      	movs	r2, #4
 8003e22:	f8a4 2118 	strh.w	r2, [r4, #280]	; 0x118
        updateTextPosition();
 8003e26:	4638      	mov	r0, r7
 8003e28:	f7ff f898 	bl	8002f5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    button_jeszcze_raz.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003e2c:	4632      	mov	r2, r6
 8003e2e:	4631      	mov	r1, r6
 8003e30:	4630      	mov	r0, r6
 8003e32:	f7ff f8e3 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    button_jeszcze_raz.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8003e36:	4632      	mov	r2, r6
        color = col;
 8003e38:	f8c4 011c 	str.w	r0, [r4, #284]	; 0x11c
 8003e3c:	4631      	mov	r1, r6
 8003e3e:	4630      	mov	r0, r6
 8003e40:	f7ff f8dc 	bl	8002ffc <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8003e44:	9b03      	ldr	r3, [sp, #12]
 8003e46:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        colorPressed = col;
 8003e4a:	f8c4 0120 	str.w	r0, [r4, #288]	; 0x120
 8003e4e:	4651      	mov	r1, sl
 8003e50:	1d20      	adds	r0, r4, #4
 8003e52:	9003      	str	r0, [sp, #12]
 8003e54:	f006 fd78 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e58:	9803      	ldr	r0, [sp, #12]
 8003e5a:	4649      	mov	r1, r9
 8003e5c:	f006 fd74 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e60:	9803      	ldr	r0, [sp, #12]
 8003e62:	4641      	mov	r1, r8
 8003e64:	f006 fd70 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003e68:	9803      	ldr	r0, [sp, #12]
 8003e6a:	4639      	mov	r1, r7
 8003e6c:	f006 fd6c 	bl	800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003e70:	4620      	mov	r0, r4
 8003e72:	b007      	add	sp, #28
 8003e74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e78:	08021a7c 	.word	0x08021a7c
 8003e7c:	08022f8c 	.word	0x08022f8c
 8003e80:	08021a64 	.word	0x08021a64
 8003e84:	08003cc5 	.word	0x08003cc5

08003e88 <__tcf_0>:

touchgfx::GeneratedFont& getFont_comicbd_83_4bpp();

touchgfx::GeneratedFont& getFont_comicbd_83_4bpp()
{
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8003e88:	4770      	bx	lr
	...

08003e8c <_Z23getFont_comicbd_83_4bppv>:
{
 8003e8c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8003e8e:	4d15      	ldr	r5, [pc, #84]	; (8003ee4 <_Z23getFont_comicbd_83_4bppv+0x58>)
 8003e90:	782c      	ldrb	r4, [r5, #0]
 8003e92:	f3bf 8f5b 	dmb	ish
 8003e96:	f014 0401 	ands.w	r4, r4, #1
{
 8003e9a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont comicbd_83_4bpp(glyphs_comicbd_83_4bpp, 6, 83, 4, 4, 1, 0, 0, unicodes_comicbd_83_4bpp, kerning_comicbd_83_4bpp, 63, 0, 0);
 8003e9c:	d11e      	bne.n	8003edc <_Z23getFont_comicbd_83_4bppv+0x50>
 8003e9e:	4628      	mov	r0, r5
 8003ea0:	f01b fa7b 	bl	801f39a <__cxa_guard_acquire>
 8003ea4:	b1d0      	cbz	r0, 8003edc <_Z23getFont_comicbd_83_4bppv+0x50>
 8003ea6:	233f      	movs	r3, #63	; 0x3f
 8003ea8:	9307      	str	r3, [sp, #28]
 8003eaa:	4b0f      	ldr	r3, [pc, #60]	; (8003ee8 <_Z23getFont_comicbd_83_4bppv+0x5c>)
 8003eac:	9306      	str	r3, [sp, #24]
 8003eae:	4b0f      	ldr	r3, [pc, #60]	; (8003eec <_Z23getFont_comicbd_83_4bppv+0x60>)
 8003eb0:	490f      	ldr	r1, [pc, #60]	; (8003ef0 <_Z23getFont_comicbd_83_4bppv+0x64>)
 8003eb2:	4810      	ldr	r0, [pc, #64]	; (8003ef4 <_Z23getFont_comicbd_83_4bppv+0x68>)
 8003eb4:	9403      	str	r4, [sp, #12]
 8003eb6:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003eba:	2201      	movs	r2, #1
 8003ebc:	2304      	movs	r3, #4
 8003ebe:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003ec2:	9300      	str	r3, [sp, #0]
 8003ec4:	2206      	movs	r2, #6
 8003ec6:	2353      	movs	r3, #83	; 0x53
 8003ec8:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003ecc:	f7fe ffd4 	bl	8002e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003ed0:	4809      	ldr	r0, [pc, #36]	; (8003ef8 <_Z23getFont_comicbd_83_4bppv+0x6c>)
 8003ed2:	f01b faad 	bl	801f430 <atexit>
 8003ed6:	4628      	mov	r0, r5
 8003ed8:	f01b fa6b 	bl	801f3b2 <__cxa_guard_release>
    return comicbd_83_4bpp;
}
 8003edc:	4805      	ldr	r0, [pc, #20]	; (8003ef4 <_Z23getFont_comicbd_83_4bppv+0x68>)
 8003ede:	b00b      	add	sp, #44	; 0x2c
 8003ee0:	bd30      	pop	{r4, r5, pc}
 8003ee2:	bf00      	nop
 8003ee4:	2000440c 	.word	0x2000440c
 8003ee8:	08024aa0 	.word	0x08024aa0
 8003eec:	08021aa8 	.word	0x08021aa8
 8003ef0:	909db89c 	.word	0x909db89c
 8003ef4:	20004410 	.word	0x20004410
 8003ef8:	08003e89 	.word	0x08003e89

08003efc <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003efc:	4770      	bx	lr
	...

08003f00 <_Z23getFont_verdana_10_4bppv>:
{
 8003f00:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003f02:	4d14      	ldr	r5, [pc, #80]	; (8003f54 <_Z23getFont_verdana_10_4bppv+0x54>)
 8003f04:	782c      	ldrb	r4, [r5, #0]
 8003f06:	f3bf 8f5b 	dmb	ish
 8003f0a:	f014 0401 	ands.w	r4, r4, #1
{
 8003f0e:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8003f10:	d11d      	bne.n	8003f4e <_Z23getFont_verdana_10_4bppv+0x4e>
 8003f12:	4628      	mov	r0, r5
 8003f14:	f01b fa41 	bl	801f39a <__cxa_guard_acquire>
 8003f18:	b1c8      	cbz	r0, 8003f4e <_Z23getFont_verdana_10_4bppv+0x4e>
 8003f1a:	233f      	movs	r3, #63	; 0x3f
 8003f1c:	9307      	str	r3, [sp, #28]
 8003f1e:	4b0e      	ldr	r3, [pc, #56]	; (8003f58 <_Z23getFont_verdana_10_4bppv+0x58>)
 8003f20:	9306      	str	r3, [sp, #24]
 8003f22:	4b0e      	ldr	r3, [pc, #56]	; (8003f5c <_Z23getFont_verdana_10_4bppv+0x5c>)
 8003f24:	490e      	ldr	r1, [pc, #56]	; (8003f60 <_Z23getFont_verdana_10_4bppv+0x60>)
 8003f26:	480f      	ldr	r0, [pc, #60]	; (8003f64 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003f28:	9403      	str	r4, [sp, #12]
 8003f2a:	2201      	movs	r2, #1
 8003f2c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003f30:	2304      	movs	r3, #4
 8003f32:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8003f36:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003f3a:	230a      	movs	r3, #10
 8003f3c:	9400      	str	r4, [sp, #0]
 8003f3e:	f7fe ff9b 	bl	8002e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003f42:	4809      	ldr	r0, [pc, #36]	; (8003f68 <_Z23getFont_verdana_10_4bppv+0x68>)
 8003f44:	f01b fa74 	bl	801f430 <atexit>
 8003f48:	4628      	mov	r0, r5
 8003f4a:	f01b fa32 	bl	801f3b2 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8003f4e:	4805      	ldr	r0, [pc, #20]	; (8003f64 <_Z23getFont_verdana_10_4bppv+0x64>)
 8003f50:	b00b      	add	sp, #44	; 0x2c
 8003f52:	bd30      	pop	{r4, r5, pc}
 8003f54:	20004434 	.word	0x20004434
 8003f58:	08024aa4 	.word	0x08024aa4
 8003f5c:	08021aac 	.word	0x08021aac
 8003f60:	909db8f0 	.word	0x909db8f0
 8003f64:	20004438 	.word	0x20004438
 8003f68:	08003efd 	.word	0x08003efd

08003f6c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 22, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003f6c:	4770      	bx	lr
	...

08003f70 <_Z23getFont_verdana_20_4bppv>:
{
 8003f70:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 22, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003f72:	4d15      	ldr	r5, [pc, #84]	; (8003fc8 <_Z23getFont_verdana_20_4bppv+0x58>)
 8003f74:	782c      	ldrb	r4, [r5, #0]
 8003f76:	f3bf 8f5b 	dmb	ish
 8003f7a:	f014 0401 	ands.w	r4, r4, #1
{
 8003f7e:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 22, 20, 4, 4, 1, 1, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8003f80:	d11e      	bne.n	8003fc0 <_Z23getFont_verdana_20_4bppv+0x50>
 8003f82:	4628      	mov	r0, r5
 8003f84:	f01b fa09 	bl	801f39a <__cxa_guard_acquire>
 8003f88:	b1d0      	cbz	r0, 8003fc0 <_Z23getFont_verdana_20_4bppv+0x50>
 8003f8a:	233f      	movs	r3, #63	; 0x3f
 8003f8c:	9307      	str	r3, [sp, #28]
 8003f8e:	4b0f      	ldr	r3, [pc, #60]	; (8003fcc <_Z23getFont_verdana_20_4bppv+0x5c>)
 8003f90:	9306      	str	r3, [sp, #24]
 8003f92:	4b0f      	ldr	r3, [pc, #60]	; (8003fd0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8003f94:	490f      	ldr	r1, [pc, #60]	; (8003fd4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8003f96:	4810      	ldr	r0, [pc, #64]	; (8003fd8 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003f98:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8003f9c:	2301      	movs	r3, #1
 8003f9e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003fa2:	2304      	movs	r3, #4
 8003fa4:	e9cd 3300 	strd	r3, r3, [sp]
 8003fa8:	2216      	movs	r2, #22
 8003faa:	2314      	movs	r3, #20
 8003fac:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8003fb0:	f7fe ff62 	bl	8002e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8003fb4:	4809      	ldr	r0, [pc, #36]	; (8003fdc <_Z23getFont_verdana_20_4bppv+0x6c>)
 8003fb6:	f01b fa3b 	bl	801f430 <atexit>
 8003fba:	4628      	mov	r0, r5
 8003fbc:	f01b f9f9 	bl	801f3b2 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8003fc0:	4805      	ldr	r0, [pc, #20]	; (8003fd8 <_Z23getFont_verdana_20_4bppv+0x68>)
 8003fc2:	b00b      	add	sp, #44	; 0x2c
 8003fc4:	bd30      	pop	{r4, r5, pc}
 8003fc6:	bf00      	nop
 8003fc8:	2000445c 	.word	0x2000445c
 8003fcc:	08024aa8 	.word	0x08024aa8
 8003fd0:	08021ab0 	.word	0x08021ab0
 8003fd4:	909db900 	.word	0x909db900
 8003fd8:	20004460 	.word	0x20004460
 8003fdc:	08003f6d 	.word	0x08003f6d

08003fe0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8003fe0:	4770      	bx	lr
	...

08003fe4 <_Z23getFont_verdana_40_4bppv>:
{
 8003fe4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8003fe6:	4d14      	ldr	r5, [pc, #80]	; (8004038 <_Z23getFont_verdana_40_4bppv+0x54>)
 8003fe8:	782c      	ldrb	r4, [r5, #0]
 8003fea:	f3bf 8f5b 	dmb	ish
 8003fee:	f014 0401 	ands.w	r4, r4, #1
{
 8003ff2:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8003ff4:	d11d      	bne.n	8004032 <_Z23getFont_verdana_40_4bppv+0x4e>
 8003ff6:	4628      	mov	r0, r5
 8003ff8:	f01b f9cf 	bl	801f39a <__cxa_guard_acquire>
 8003ffc:	b1c8      	cbz	r0, 8004032 <_Z23getFont_verdana_40_4bppv+0x4e>
 8003ffe:	233f      	movs	r3, #63	; 0x3f
 8004000:	9307      	str	r3, [sp, #28]
 8004002:	4b0e      	ldr	r3, [pc, #56]	; (800403c <_Z23getFont_verdana_40_4bppv+0x58>)
 8004004:	9306      	str	r3, [sp, #24]
 8004006:	4b0e      	ldr	r3, [pc, #56]	; (8004040 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004008:	490e      	ldr	r1, [pc, #56]	; (8004044 <_Z23getFont_verdana_40_4bppv+0x60>)
 800400a:	480f      	ldr	r0, [pc, #60]	; (8004048 <_Z23getFont_verdana_40_4bppv+0x64>)
 800400c:	9403      	str	r4, [sp, #12]
 800400e:	2201      	movs	r2, #1
 8004010:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004014:	2304      	movs	r3, #4
 8004016:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800401a:	e9cd 4408 	strd	r4, r4, [sp, #32]
 800401e:	2328      	movs	r3, #40	; 0x28
 8004020:	9400      	str	r4, [sp, #0]
 8004022:	f7fe ff29 	bl	8002e78 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8004026:	4809      	ldr	r0, [pc, #36]	; (800404c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004028:	f01b fa02 	bl	801f430 <atexit>
 800402c:	4628      	mov	r0, r5
 800402e:	f01b f9c0 	bl	801f3b2 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004032:	4805      	ldr	r0, [pc, #20]	; (8004048 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004034:	b00b      	add	sp, #44	; 0x2c
 8004036:	bd30      	pop	{r4, r5, pc}
 8004038:	20004484 	.word	0x20004484
 800403c:	08024ab8 	.word	0x08024ab8
 8004040:	08021ab4 	.word	0x08021ab4
 8004044:	909dba34 	.word	0x909dba34
 8004048:	20004488 	.word	0x20004488
 800404c:	08003fe1 	.word	0x08003fe1

08004050 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004050:	2000      	movs	r0, #0
 8004052:	4770      	bx	lr

08004054 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004054:	b40e      	push	{r1, r2, r3}
 8004056:	b503      	push	{r0, r1, lr}
 8004058:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800405a:	2100      	movs	r1, #0
{
 800405c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004060:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004062:	f00c f805 	bl	8010070 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004066:	b002      	add	sp, #8
 8004068:	f85d eb04 	ldr.w	lr, [sp], #4
 800406c:	b003      	add	sp, #12
 800406e:	4770      	bx	lr

08004070 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004070:	b40c      	push	{r2, r3}
 8004072:	b507      	push	{r0, r1, r2, lr}
 8004074:	ab04      	add	r3, sp, #16
 8004076:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800407a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800407c:	f00b fff8 	bl	8010070 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004080:	b003      	add	sp, #12
 8004082:	f85d eb04 	ldr.w	lr, [sp], #4
 8004086:	b002      	add	sp, #8
 8004088:	4770      	bx	lr
	...

0800408c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800408c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 800408e:	b510      	push	{r4, lr}
 8004090:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004092:	b373      	cbz	r3, 80040f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004094:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8004096:	b92b      	cbnz	r3, 80040a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004098:	4b18      	ldr	r3, [pc, #96]	; (80040fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800409a:	4a19      	ldr	r2, [pc, #100]	; (8004100 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800409c:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800409e:	4819      	ldr	r0, [pc, #100]	; (8004104 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80040a0:	f01b f9a8 	bl	801f3f4 <__assert_func>
            return buffer[pos];
 80040a4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80040a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80040aa:	8b5b      	ldrh	r3, [r3, #26]
 80040ac:	b30b      	cbz	r3, 80040f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80040ae:	f00d fc43 	bl	8011938 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80040b2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80040b4:	2b01      	cmp	r3, #1
 80040b6:	d803      	bhi.n	80040c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80040b8:	4b13      	ldr	r3, [pc, #76]	; (8004108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80040ba:	4a14      	ldr	r2, [pc, #80]	; (800410c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80040bc:	21c5      	movs	r1, #197	; 0xc5
 80040be:	e7ee      	b.n	800409e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80040c0:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80040c2:	1c53      	adds	r3, r2, #1
 80040c4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80040c6:	2b09      	cmp	r3, #9
 80040c8:	4619      	mov	r1, r3
 80040ca:	bf88      	it	hi
 80040cc:	f1a3 010a 	subhi.w	r1, r3, #10
 80040d0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 80040d4:	f640 103f 	movw	r0, #2367	; 0x93f
 80040d8:	8b49      	ldrh	r1, [r1, #26]
 80040da:	4281      	cmp	r1, r0
 80040dc:	d109      	bne.n	80040f2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80040de:	2b0a      	cmp	r3, #10
 80040e0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80040e4:	bf28      	it	cs
 80040e6:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80040e8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80040ec:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 80040ee:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 80040f0:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80040f2:	4620      	mov	r0, r4
}
 80040f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80040f8:	f00d bb02 	b.w	8011700 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80040fc:	08021ab8 	.word	0x08021ab8
 8004100:	08021ac1 	.word	0x08021ac1
 8004104:	08021b6c 	.word	0x08021b6c
 8004108:	08021bb6 	.word	0x08021bb6
 800410c:	08021bc4 	.word	0x08021bc4

08004110 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004110:	f00d bab0 	b.w	8011674 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004114:	b510      	push	{r4, lr}
 8004116:	b086      	sub	sp, #24
 8004118:	ac02      	add	r4, sp, #8
 800411a:	e884 0006 	stmia.w	r4, {r1, r2}
 800411e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004120:	ab0a      	add	r3, sp, #40	; 0x28
 8004122:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004124:	9301      	str	r3, [sp, #4]
 8004126:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004128:	9300      	str	r3, [sp, #0]
 800412a:	4621      	mov	r1, r4
 800412c:	9b08      	ldr	r3, [sp, #32]
 800412e:	f00a fc78 	bl	800ea22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004132:	b006      	add	sp, #24
 8004134:	bd10      	pop	{r4, pc}
	...

08004138 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004138:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800413a:	bb18      	cbnz	r0, 8004184 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800413c:	4b12      	ldr	r3, [pc, #72]	; (8004188 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800413e:	4813      	ldr	r0, [pc, #76]	; (800418c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	4913      	ldr	r1, [pc, #76]	; (8004190 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004144:	b1b3      	cbz	r3, 8004174 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004146:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004148:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800414a:	441a      	add	r2, r3
 800414c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800414e:	685a      	ldr	r2, [r3, #4]
 8004150:	441a      	add	r2, r3
 8004152:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004154:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004156:	4b0f      	ldr	r3, [pc, #60]	; (8004194 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004158:	2200      	movs	r2, #0
 800415a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800415c:	f000 f838 	bl	80041d0 <_ZN17TypedTextDatabase8getFontsEv>
 8004160:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004162:	f000 f833 	bl	80041cc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004166:	4b0c      	ldr	r3, [pc, #48]	; (8004198 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004168:	601c      	str	r4, [r3, #0]
        fonts = f;
 800416a:	4b0c      	ldr	r3, [pc, #48]	; (800419c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800416c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800416e:	4b0c      	ldr	r3, [pc, #48]	; (80041a0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004170:	8018      	strh	r0, [r3, #0]
    }
}
 8004172:	e007      	b.n	8004184 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004174:	4b0b      	ldr	r3, [pc, #44]	; (80041a4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004176:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004178:	4b0b      	ldr	r3, [pc, #44]	; (80041a8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800417a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800417c:	4b0b      	ldr	r3, [pc, #44]	; (80041ac <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800417e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004180:	2c00      	cmp	r4, #0
 8004182:	d1e8      	bne.n	8004156 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004184:	bd38      	pop	{r3, r4, r5, pc}
 8004186:	bf00      	nop
 8004188:	200044ac 	.word	0x200044ac
 800418c:	200044b0 	.word	0x200044b0
 8004190:	200044b4 	.word	0x200044b4
 8004194:	200044b8 	.word	0x200044b8
 8004198:	2000d47c 	.word	0x2000d47c
 800419c:	2000d484 	.word	0x2000d484
 80041a0:	2000d480 	.word	0x2000d480
 80041a4:	909dba58 	.word	0x909dba58
 80041a8:	909dba44 	.word	0x909dba44
 80041ac:	909dbab4 	.word	0x909dbab4

080041b0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80041b0:	4b04      	ldr	r3, [pc, #16]	; (80041c4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80041b8:	4b03      	ldr	r3, [pc, #12]	; (80041c8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80041ba:	681b      	ldr	r3, [r3, #0]
}
 80041bc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80041c0:	4770      	bx	lr
 80041c2:	bf00      	nop
 80041c4:	200044b4 	.word	0x200044b4
 80041c8:	200044b0 	.word	0x200044b0

080041cc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80041cc:	2005      	movs	r0, #5
 80041ce:	4770      	bx	lr

080041d0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80041d0:	4800      	ldr	r0, [pc, #0]	; (80041d4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80041d2:	4770      	bx	lr
 80041d4:	200044bc 	.word	0x200044bc

080041d8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_comicbd_83_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 80041d8:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80041da:	f7ff fec9 	bl	8003f70 <_Z23getFont_verdana_20_4bppv>
};
 80041de:	4c06      	ldr	r4, [pc, #24]	; (80041f8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80041e0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80041e2:	f7ff feff 	bl	8003fe4 <_Z23getFont_verdana_40_4bppv>
};
 80041e6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80041e8:	f7ff fe8a 	bl	8003f00 <_Z23getFont_verdana_10_4bppv>
};
 80041ec:	60a0      	str	r0, [r4, #8]
    &(getFont_comicbd_83_4bpp())
 80041ee:	f7ff fe4d 	bl	8003e8c <_Z23getFont_comicbd_83_4bppv>
};
 80041f2:	60e0      	str	r0, [r4, #12]
}  // namespace TypedTextDatabase
 80041f4:	bd10      	pop	{r4, pc}
 80041f6:	bf00      	nop
 80041f8:	200044bc 	.word	0x200044bc

080041fc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80041fc:	4770      	bx	lr

080041fe <_ZN19FrontendApplicationD0Ev>:
 80041fe:	b510      	push	{r4, lr}
 8004200:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004204:	4604      	mov	r4, r0
 8004206:	f01b f8c6 	bl	801f396 <_ZdlPvj>
 800420a:	4620      	mov	r0, r4
 800420c:	bd10      	pop	{r4, pc}

0800420e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800420e:	b510      	push	{r4, lr}
 8004210:	4604      	mov	r4, r0
    {
        model.tick();
 8004212:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004216:	f000 f812 	bl	800423e <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800421a:	4620      	mov	r0, r4
    }
 800421c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004220:	f00a bf64 	b.w	800f0ec <_ZN8touchgfx11Application15handleTickEventEv>

08004224 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004224:	b510      	push	{r4, lr}
 8004226:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004228:	f7fe fc0c 	bl	8002a44 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800422c:	4b01      	ldr	r3, [pc, #4]	; (8004234 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800422e:	6023      	str	r3, [r4, #0]
{

}
 8004230:	4620      	mov	r0, r4
 8004232:	bd10      	pop	{r4, pc}
 8004234:	08021ca0 	.word	0x08021ca0

08004238 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8004238:	2200      	movs	r2, #0
 800423a:	6002      	str	r2, [r0, #0]
{

}
 800423c:	4770      	bx	lr

0800423e <_ZN5Model4tickEv>:

void Model::tick()
{

}
 800423e:	4770      	bx	lr

08004240 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004240:	4770      	bx	lr

08004242 <_ZThn4_N16Screen1PresenterD1Ev>:
 8004242:	3804      	subs	r0, #4
 8004244:	4770      	bx	lr

08004246 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004246:	4770      	bx	lr

08004248 <_ZN16Screen1PresenterD0Ev>:
 8004248:	b510      	push	{r4, lr}
 800424a:	2110      	movs	r1, #16
 800424c:	4604      	mov	r4, r0
 800424e:	f01b f8a2 	bl	801f396 <_ZdlPvj>
 8004252:	4620      	mov	r0, r4
 8004254:	bd10      	pop	{r4, pc}

08004256 <_ZThn4_N16Screen1PresenterD0Ev>:
 8004256:	f1a0 0004 	sub.w	r0, r0, #4
 800425a:	e7f5      	b.n	8004248 <_ZN16Screen1PresenterD0Ev>

0800425c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 800425c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800425e:	2200      	movs	r2, #0
 8004260:	6082      	str	r2, [r0, #8]
    : view(v)
 8004262:	4a04      	ldr	r2, [pc, #16]	; (8004274 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004264:	60c1      	str	r1, [r0, #12]
 8004266:	f102 0408 	add.w	r4, r2, #8
 800426a:	3220      	adds	r2, #32
 800426c:	6004      	str	r4, [r0, #0]
 800426e:	6042      	str	r2, [r0, #4]
}
 8004270:	bd10      	pop	{r4, pc}
 8004272:	bf00      	nop
 8004274:	08021cdc 	.word	0x08021cdc

08004278 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004278:	4770      	bx	lr

0800427a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800427a:	4770      	bx	lr

0800427c <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 800427c:	f7fe be2a 	b.w	8002ed4 <_ZN15Screen1ViewBase11setupScreenEv>

08004280 <_ZN11Screen1ViewD0Ev>:
 8004280:	b510      	push	{r4, lr}
 8004282:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8004286:	4604      	mov	r4, r0
 8004288:	f01b f885 	bl	801f396 <_ZdlPvj>
 800428c:	4620      	mov	r0, r4
 800428e:	bd10      	pop	{r4, pc}

08004290 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8004290:	b510      	push	{r4, lr}
 8004292:	4604      	mov	r4, r0
 8004294:	f7fe fed4 	bl	8003040 <_ZN15Screen1ViewBaseC1Ev>
 8004298:	4b01      	ldr	r3, [pc, #4]	; (80042a0 <_ZN11Screen1ViewC1Ev+0x10>)
 800429a:	6023      	str	r3, [r4, #0]
}
 800429c:	4620      	mov	r0, r4
 800429e:	bd10      	pop	{r4, pc}
 80042a0:	08021d0c 	.word	0x08021d0c

080042a4 <_ZN16Screen2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen2Presenter() {};
 80042a4:	4770      	bx	lr

080042a6 <_ZThn4_N16Screen2PresenterD1Ev>:
 80042a6:	3804      	subs	r0, #4
 80042a8:	4770      	bx	lr

080042aa <_ZN16Screen2Presenter10deactivateEv>:
}

void Screen2Presenter::activate()
{

}
 80042aa:	4770      	bx	lr

080042ac <_ZN16Screen2PresenterD0Ev>:
 80042ac:	b510      	push	{r4, lr}
 80042ae:	2110      	movs	r1, #16
 80042b0:	4604      	mov	r4, r0
 80042b2:	f01b f870 	bl	801f396 <_ZdlPvj>
 80042b6:	4620      	mov	r0, r4
 80042b8:	bd10      	pop	{r4, pc}

080042ba <_ZThn4_N16Screen2PresenterD0Ev>:
 80042ba:	f1a0 0004 	sub.w	r0, r0, #4
 80042be:	e7f5      	b.n	80042ac <_ZN16Screen2PresenterD0Ev>

080042c0 <_ZN16Screen2PresenterC1ER11Screen2View>:
Screen2Presenter::Screen2Presenter(Screen2View& v)
 80042c0:	b510      	push	{r4, lr}
 80042c2:	2200      	movs	r2, #0
 80042c4:	6082      	str	r2, [r0, #8]
    : view(v)
 80042c6:	4a04      	ldr	r2, [pc, #16]	; (80042d8 <_ZN16Screen2PresenterC1ER11Screen2View+0x18>)
 80042c8:	60c1      	str	r1, [r0, #12]
 80042ca:	f102 0408 	add.w	r4, r2, #8
 80042ce:	3220      	adds	r2, #32
 80042d0:	6004      	str	r4, [r0, #0]
 80042d2:	6042      	str	r2, [r0, #4]
}
 80042d4:	bd10      	pop	{r4, pc}
 80042d6:	bf00      	nop
 80042d8:	08021d38 	.word	0x08021d38

080042dc <_ZN11Screen2ViewD1Ev>:

class Screen2View : public Screen2ViewBase
{
public:
    Screen2View();
    virtual ~Screen2View() {}
 80042dc:	4770      	bx	lr

080042de <_ZN11Screen2View14tearDownScreenEv>:
}

void Screen2View::tearDownScreen()
{
    Screen2ViewBase::tearDownScreen();
}
 80042de:	4770      	bx	lr

080042e0 <_ZN11Screen2View11setupScreenEv>:
    Screen2ViewBase::setupScreen();
 80042e0:	f7fe bfbf 	b.w	8003262 <_ZN15Screen2ViewBase11setupScreenEv>

080042e4 <_ZN11Screen2ViewD0Ev>:
 80042e4:	b510      	push	{r4, lr}
 80042e6:	f243 1138 	movw	r1, #12600	; 0x3138
 80042ea:	4604      	mov	r4, r0
 80042ec:	f01b f853 	bl	801f396 <_ZdlPvj>
 80042f0:	4620      	mov	r0, r4
 80042f2:	bd10      	pop	{r4, pc}

080042f4 <_ZN11Screen2ViewC1Ev>:
Screen2View::Screen2View()
 80042f4:	b510      	push	{r4, lr}
 80042f6:	4604      	mov	r4, r0
 80042f8:	f7ff f8f0 	bl	80034dc <_ZN15Screen2ViewBaseC1Ev>
 80042fc:	4b01      	ldr	r3, [pc, #4]	; (8004304 <_ZN11Screen2ViewC1Ev+0x10>)
 80042fe:	6023      	str	r3, [r4, #0]
}
 8004300:	4620      	mov	r0, r4
 8004302:	bd10      	pop	{r4, pc}
 8004304:	08021d68 	.word	0x08021d68

08004308 <_ZN16Screen3PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen3Presenter() {};
 8004308:	4770      	bx	lr

0800430a <_ZThn4_N16Screen3PresenterD1Ev>:
 800430a:	3804      	subs	r0, #4
 800430c:	4770      	bx	lr

0800430e <_ZN16Screen3Presenter10deactivateEv>:
}

void Screen3Presenter::activate()
{

}
 800430e:	4770      	bx	lr

08004310 <_ZN16Screen3PresenterD0Ev>:
 8004310:	b510      	push	{r4, lr}
 8004312:	2110      	movs	r1, #16
 8004314:	4604      	mov	r4, r0
 8004316:	f01b f83e 	bl	801f396 <_ZdlPvj>
 800431a:	4620      	mov	r0, r4
 800431c:	bd10      	pop	{r4, pc}

0800431e <_ZThn4_N16Screen3PresenterD0Ev>:
 800431e:	f1a0 0004 	sub.w	r0, r0, #4
 8004322:	e7f5      	b.n	8004310 <_ZN16Screen3PresenterD0Ev>

08004324 <_ZN16Screen3PresenterC1ER11Screen3View>:
Screen3Presenter::Screen3Presenter(Screen3View& v)
 8004324:	b510      	push	{r4, lr}
 8004326:	2200      	movs	r2, #0
 8004328:	6082      	str	r2, [r0, #8]
    : view(v)
 800432a:	4a04      	ldr	r2, [pc, #16]	; (800433c <_ZN16Screen3PresenterC1ER11Screen3View+0x18>)
 800432c:	60c1      	str	r1, [r0, #12]
 800432e:	f102 0408 	add.w	r4, r2, #8
 8004332:	3220      	adds	r2, #32
 8004334:	6004      	str	r4, [r0, #0]
 8004336:	6042      	str	r2, [r0, #4]
}
 8004338:	bd10      	pop	{r4, pc}
 800433a:	bf00      	nop
 800433c:	08021d94 	.word	0x08021d94

08004340 <_ZN11Screen3ViewD1Ev>:

class Screen3View : public Screen3ViewBase
{
public:
    Screen3View();
    virtual ~Screen3View() {}
 8004340:	4770      	bx	lr

08004342 <_ZN11Screen3View14tearDownScreenEv>:
}

void Screen3View::tearDownScreen()
{
    Screen3ViewBase::tearDownScreen();
}
 8004342:	4770      	bx	lr

08004344 <_ZN11Screen3View11setupScreenEv>:
    Screen3ViewBase::setupScreen();
 8004344:	f7ff bc92 	b.w	8003c6c <_ZN15Screen3ViewBase11setupScreenEv>

08004348 <_ZN11Screen3ViewD0Ev>:
 8004348:	b510      	push	{r4, lr}
 800434a:	f44f 719c 	mov.w	r1, #312	; 0x138
 800434e:	4604      	mov	r4, r0
 8004350:	f01b f821 	bl	801f396 <_ZdlPvj>
 8004354:	4620      	mov	r0, r4
 8004356:	bd10      	pop	{r4, pc}

08004358 <_ZN11Screen3ViewC1Ev>:
Screen3View::Screen3View()
 8004358:	b510      	push	{r4, lr}
 800435a:	4604      	mov	r4, r0
 800435c:	f7ff fcc8 	bl	8003cf0 <_ZN15Screen3ViewBaseC1Ev>
 8004360:	4b01      	ldr	r3, [pc, #4]	; (8004368 <_ZN11Screen3ViewC1Ev+0x10>)
 8004362:	6023      	str	r3, [r4, #0]
}
 8004364:	4620      	mov	r0, r4
 8004366:	bd10      	pop	{r4, pc}
 8004368:	08021dc4 	.word	0x08021dc4

0800436c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 800436c:	4770      	bx	lr

0800436e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800436e:	2000      	movs	r0, #0
 8004370:	4770      	bx	lr

08004372 <ft6x06_ReadID>:
{
 8004372:	b510      	push	{r4, lr}
 8004374:	4604      	mov	r4, r0
  TS_IO_Init();
 8004376:	f000 fb75 	bl	8004a64 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 800437a:	21a8      	movs	r1, #168	; 0xa8
 800437c:	b2e0      	uxtb	r0, r4
 800437e:	f000 fb8d 	bl	8004a9c <TS_IO_Read>
}
 8004382:	b280      	uxth	r0, r0
 8004384:	bd10      	pop	{r4, pc}
	...

08004388 <ft6x06_TS_DetectTouch>:
{
 8004388:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 800438a:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800438c:	2102      	movs	r1, #2
 800438e:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8004390:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8004394:	f000 fb82 	bl	8004a9c <TS_IO_Read>
 8004398:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 800439c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80043a0:	f003 030f 	and.w	r3, r3, #15
 80043a4:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80043a8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80043ac:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80043ae:	bf88      	it	hi
 80043b0:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80043b4:	4b04      	ldr	r3, [pc, #16]	; (80043c8 <ft6x06_TS_DetectTouch+0x40>)
 80043b6:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80043ba:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80043be:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80043c0:	2200      	movs	r2, #0
 80043c2:	709a      	strb	r2, [r3, #2]
}
 80043c4:	b002      	add	sp, #8
 80043c6:	bd10      	pop	{r4, pc}
 80043c8:	200044ce 	.word	0x200044ce

080043cc <ft6x06_TS_GetXY>:
{
 80043cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80043ce:	4c15      	ldr	r4, [pc, #84]	; (8004424 <ft6x06_TS_GetXY+0x58>)
{
 80043d0:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80043d2:	78a3      	ldrb	r3, [r4, #2]
 80043d4:	7862      	ldrb	r2, [r4, #1]
 80043d6:	429a      	cmp	r2, r3
{
 80043d8:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80043da:	d91f      	bls.n	800441c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 80043dc:	b303      	cbz	r3, 8004420 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 80043de:	2b01      	cmp	r3, #1
 80043e0:	bf14      	ite	ne
 80043e2:	2100      	movne	r1, #0
 80043e4:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80043e6:	2304      	movs	r3, #4
 80043e8:	eb0d 0203 	add.w	r2, sp, r3
 80043ec:	b2c0      	uxtb	r0, r0
 80043ee:	f000 fb73 	bl	8004ad8 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80043f2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80043f6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80043fa:	021b      	lsls	r3, r3, #8
 80043fc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004400:	4313      	orrs	r3, r2
 8004402:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8004404:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8004408:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800440c:	021b      	lsls	r3, r3, #8
 800440e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8004412:	4313      	orrs	r3, r2
 8004414:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8004416:	78a3      	ldrb	r3, [r4, #2]
 8004418:	3301      	adds	r3, #1
 800441a:	70a3      	strb	r3, [r4, #2]
}
 800441c:	b002      	add	sp, #8
 800441e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8004420:	2103      	movs	r1, #3
 8004422:	e7e0      	b.n	80043e6 <ft6x06_TS_GetXY+0x1a>
 8004424:	200044ce 	.word	0x200044ce

08004428 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8004428:	2201      	movs	r2, #1
 800442a:	21a4      	movs	r1, #164	; 0xa4
 800442c:	b2c0      	uxtb	r0, r0
 800442e:	f000 bb1b 	b.w	8004a68 <TS_IO_Write>

08004432 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8004432:	2200      	movs	r2, #0
 8004434:	21a4      	movs	r1, #164	; 0xa4
 8004436:	b2c0      	uxtb	r0, r0
 8004438:	f000 bb16 	b.w	8004a68 <TS_IO_Write>

0800443c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 800443c:	f7ff bff9 	b.w	8004432 <ft6x06_TS_DisableIT>

08004440 <ft6x06_TS_ClearIT>:
 8004440:	4770      	bx	lr
	...

08004444 <ft6x06_Init>:
{  
 8004444:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8004446:	4b09      	ldr	r3, [pc, #36]	; (800446c <ft6x06_Init+0x28>)
 8004448:	781a      	ldrb	r2, [r3, #0]
 800444a:	4290      	cmp	r0, r2
 800444c:	d00a      	beq.n	8004464 <ft6x06_Init+0x20>
 800444e:	7859      	ldrb	r1, [r3, #1]
 8004450:	4288      	cmp	r0, r1
 8004452:	d007      	beq.n	8004464 <ft6x06_Init+0x20>
 8004454:	b10a      	cbz	r2, 800445a <ft6x06_Init+0x16>
 8004456:	b929      	cbnz	r1, 8004464 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8004458:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800445a:	5498      	strb	r0, [r3, r2]
}
 800445c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8004460:	f000 bb00 	b.w	8004a64 <TS_IO_Init>
}
 8004464:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004468:	4770      	bx	lr
 800446a:	bf00      	nop
 800446c:	200044cc 	.word	0x200044cc

08004470 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8004470:	b538      	push	{r3, r4, r5, lr}
 8004472:	4604      	mov	r4, r0
 8004474:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004476:	2000      	movs	r0, #0
 8004478:	49c9      	ldr	r1, [pc, #804]	; (80047a0 <OTM8009A_Init+0x330>)
 800447a:	f7fc fad3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 800447e:	49c9      	ldr	r1, [pc, #804]	; (80047a4 <OTM8009A_Init+0x334>)
 8004480:	2003      	movs	r0, #3
 8004482:	f7fc facf 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8004486:	49c8      	ldr	r1, [pc, #800]	; (80047a8 <OTM8009A_Init+0x338>)
 8004488:	2000      	movs	r0, #0
 800448a:	f7fc facb 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 800448e:	49c7      	ldr	r1, [pc, #796]	; (80047ac <OTM8009A_Init+0x33c>)
 8004490:	2002      	movs	r0, #2
 8004492:	f7fc fac7 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8004496:	49c4      	ldr	r1, [pc, #784]	; (80047a8 <OTM8009A_Init+0x338>)
 8004498:	2000      	movs	r0, #0
 800449a:	f7fc fac3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 800449e:	49c4      	ldr	r1, [pc, #784]	; (80047b0 <OTM8009A_Init+0x340>)
 80044a0:	2000      	movs	r0, #0
 80044a2:	f7fc fabf 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80044a6:	200a      	movs	r0, #10
 80044a8:	f000 fb2e 	bl	8004b08 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 80044ac:	49c1      	ldr	r1, [pc, #772]	; (80047b4 <OTM8009A_Init+0x344>)
 80044ae:	2000      	movs	r0, #0
 80044b0:	f7fc fab8 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 80044b4:	49c0      	ldr	r1, [pc, #768]	; (80047b8 <OTM8009A_Init+0x348>)
 80044b6:	2000      	movs	r0, #0
 80044b8:	f7fc fab4 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80044bc:	200a      	movs	r0, #10
 80044be:	f000 fb23 	bl	8004b08 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 80044c2:	49be      	ldr	r1, [pc, #760]	; (80047bc <OTM8009A_Init+0x34c>)
 80044c4:	2000      	movs	r0, #0
 80044c6:	f7fc faad 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 80044ca:	49bd      	ldr	r1, [pc, #756]	; (80047c0 <OTM8009A_Init+0x350>)
 80044cc:	2000      	movs	r0, #0
 80044ce:	f7fc faa9 	bl	8000a24 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 80044d2:	49bc      	ldr	r1, [pc, #752]	; (80047c4 <OTM8009A_Init+0x354>)
 80044d4:	2000      	movs	r0, #0
 80044d6:	f7fc faa5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 80044da:	49bb      	ldr	r1, [pc, #748]	; (80047c8 <OTM8009A_Init+0x358>)
 80044dc:	2000      	movs	r0, #0
 80044de:	f7fc faa1 	bl	8000a24 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 80044e2:	49ba      	ldr	r1, [pc, #744]	; (80047cc <OTM8009A_Init+0x35c>)
 80044e4:	2000      	movs	r0, #0
 80044e6:	f7fc fa9d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 80044ea:	49b9      	ldr	r1, [pc, #740]	; (80047d0 <OTM8009A_Init+0x360>)
 80044ec:	2000      	movs	r0, #0
 80044ee:	f7fc fa99 	bl	8000a24 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80044f2:	49ab      	ldr	r1, [pc, #684]	; (80047a0 <OTM8009A_Init+0x330>)
 80044f4:	2000      	movs	r0, #0
 80044f6:	f7fc fa95 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 80044fa:	49b6      	ldr	r1, [pc, #728]	; (80047d4 <OTM8009A_Init+0x364>)
 80044fc:	2000      	movs	r0, #0
 80044fe:	f7fc fa91 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8004502:	49b5      	ldr	r1, [pc, #724]	; (80047d8 <OTM8009A_Init+0x368>)
 8004504:	2000      	movs	r0, #0
 8004506:	f7fc fa8d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 800450a:	49b4      	ldr	r1, [pc, #720]	; (80047dc <OTM8009A_Init+0x36c>)
 800450c:	2000      	movs	r0, #0
 800450e:	f7fc fa89 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8004512:	49b3      	ldr	r1, [pc, #716]	; (80047e0 <OTM8009A_Init+0x370>)
 8004514:	2000      	movs	r0, #0
 8004516:	f7fc fa85 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 800451a:	49b2      	ldr	r1, [pc, #712]	; (80047e4 <OTM8009A_Init+0x374>)
 800451c:	2000      	movs	r0, #0
 800451e:	f7fc fa81 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8004522:	49b1      	ldr	r1, [pc, #708]	; (80047e8 <OTM8009A_Init+0x378>)
 8004524:	2000      	movs	r0, #0
 8004526:	f7fc fa7d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 800452a:	49b0      	ldr	r1, [pc, #704]	; (80047ec <OTM8009A_Init+0x37c>)
 800452c:	2000      	movs	r0, #0
 800452e:	f7fc fa79 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8004532:	49af      	ldr	r1, [pc, #700]	; (80047f0 <OTM8009A_Init+0x380>)
 8004534:	2000      	movs	r0, #0
 8004536:	f7fc fa75 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 800453a:	49a3      	ldr	r1, [pc, #652]	; (80047c8 <OTM8009A_Init+0x358>)
 800453c:	2000      	movs	r0, #0
 800453e:	f7fc fa71 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004542:	4997      	ldr	r1, [pc, #604]	; (80047a0 <OTM8009A_Init+0x330>)
 8004544:	2000      	movs	r0, #0
 8004546:	f7fc fa6d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 800454a:	49aa      	ldr	r1, [pc, #680]	; (80047f4 <OTM8009A_Init+0x384>)
 800454c:	2002      	movs	r0, #2
 800454e:	f7fc fa69 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8004552:	49a9      	ldr	r1, [pc, #676]	; (80047f8 <OTM8009A_Init+0x388>)
 8004554:	2000      	movs	r0, #0
 8004556:	f7fc fa65 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 800455a:	49a8      	ldr	r1, [pc, #672]	; (80047fc <OTM8009A_Init+0x38c>)
 800455c:	2000      	movs	r0, #0
 800455e:	f7fc fa61 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8004562:	49a7      	ldr	r1, [pc, #668]	; (8004800 <OTM8009A_Init+0x390>)
 8004564:	2000      	movs	r0, #0
 8004566:	f7fc fa5d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 800456a:	49a6      	ldr	r1, [pc, #664]	; (8004804 <OTM8009A_Init+0x394>)
 800456c:	2000      	movs	r0, #0
 800456e:	f7fc fa59 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8004572:	49a5      	ldr	r1, [pc, #660]	; (8004808 <OTM8009A_Init+0x398>)
 8004574:	2000      	movs	r0, #0
 8004576:	f7fc fa55 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 800457a:	49a4      	ldr	r1, [pc, #656]	; (800480c <OTM8009A_Init+0x39c>)
 800457c:	2000      	movs	r0, #0
 800457e:	f7fc fa51 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8004582:	4995      	ldr	r1, [pc, #596]	; (80047d8 <OTM8009A_Init+0x368>)
 8004584:	2000      	movs	r0, #0
 8004586:	f7fc fa4d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 800458a:	49a1      	ldr	r1, [pc, #644]	; (8004810 <OTM8009A_Init+0x3a0>)
 800458c:	2000      	movs	r0, #0
 800458e:	f7fc fa49 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8004592:	4993      	ldr	r1, [pc, #588]	; (80047e0 <OTM8009A_Init+0x370>)
 8004594:	2000      	movs	r0, #0
 8004596:	f7fc fa45 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 800459a:	499e      	ldr	r1, [pc, #632]	; (8004814 <OTM8009A_Init+0x3a4>)
 800459c:	2000      	movs	r0, #0
 800459e:	f7fc fa41 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 80045a2:	499d      	ldr	r1, [pc, #628]	; (8004818 <OTM8009A_Init+0x3a8>)
 80045a4:	2000      	movs	r0, #0
 80045a6:	f7fc fa3d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 80045aa:	499c      	ldr	r1, [pc, #624]	; (800481c <OTM8009A_Init+0x3ac>)
 80045ac:	2002      	movs	r0, #2
 80045ae:	f7fc fa39 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80045b2:	497d      	ldr	r1, [pc, #500]	; (80047a8 <OTM8009A_Init+0x338>)
 80045b4:	2000      	movs	r0, #0
 80045b6:	f7fc fa35 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 80045ba:	4999      	ldr	r1, [pc, #612]	; (8004820 <OTM8009A_Init+0x3b0>)
 80045bc:	2006      	movs	r0, #6
 80045be:	f7fc fa31 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80045c2:	4998      	ldr	r1, [pc, #608]	; (8004824 <OTM8009A_Init+0x3b4>)
 80045c4:	2000      	movs	r0, #0
 80045c6:	f7fc fa2d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 80045ca:	4997      	ldr	r1, [pc, #604]	; (8004828 <OTM8009A_Init+0x3b8>)
 80045cc:	200e      	movs	r0, #14
 80045ce:	f7fc fa29 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80045d2:	4996      	ldr	r1, [pc, #600]	; (800482c <OTM8009A_Init+0x3bc>)
 80045d4:	2000      	movs	r0, #0
 80045d6:	f7fc fa25 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 80045da:	4995      	ldr	r1, [pc, #596]	; (8004830 <OTM8009A_Init+0x3c0>)
 80045dc:	200e      	movs	r0, #14
 80045de:	f7fc fa21 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80045e2:	4994      	ldr	r1, [pc, #592]	; (8004834 <OTM8009A_Init+0x3c4>)
 80045e4:	2000      	movs	r0, #0
 80045e6:	f7fc fa1d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 80045ea:	4993      	ldr	r1, [pc, #588]	; (8004838 <OTM8009A_Init+0x3c8>)
 80045ec:	200a      	movs	r0, #10
 80045ee:	f7fc fa19 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80045f2:	4992      	ldr	r1, [pc, #584]	; (800483c <OTM8009A_Init+0x3cc>)
 80045f4:	2000      	movs	r0, #0
 80045f6:	f7fc fa15 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 80045fa:	4991      	ldr	r1, [pc, #580]	; (8004840 <OTM8009A_Init+0x3d0>)
 80045fc:	2000      	movs	r0, #0
 80045fe:	f7fc fa11 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8004602:	4969      	ldr	r1, [pc, #420]	; (80047a8 <OTM8009A_Init+0x338>)
 8004604:	2000      	movs	r0, #0
 8004606:	f7fc fa0d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 800460a:	498e      	ldr	r1, [pc, #568]	; (8004844 <OTM8009A_Init+0x3d4>)
 800460c:	200a      	movs	r0, #10
 800460e:	f7fc fa09 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8004612:	498d      	ldr	r1, [pc, #564]	; (8004848 <OTM8009A_Init+0x3d8>)
 8004614:	2000      	movs	r0, #0
 8004616:	f7fc fa05 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 800461a:	498c      	ldr	r1, [pc, #560]	; (800484c <OTM8009A_Init+0x3dc>)
 800461c:	200f      	movs	r0, #15
 800461e:	f7fc fa01 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8004622:	4980      	ldr	r1, [pc, #512]	; (8004824 <OTM8009A_Init+0x3b4>)
 8004624:	2000      	movs	r0, #0
 8004626:	f7fc f9fd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 800462a:	4989      	ldr	r1, [pc, #548]	; (8004850 <OTM8009A_Init+0x3e0>)
 800462c:	200f      	movs	r0, #15
 800462e:	f7fc f9f9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8004632:	497e      	ldr	r1, [pc, #504]	; (800482c <OTM8009A_Init+0x3bc>)
 8004634:	2000      	movs	r0, #0
 8004636:	f7fc f9f5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 800463a:	4986      	ldr	r1, [pc, #536]	; (8004854 <OTM8009A_Init+0x3e4>)
 800463c:	200a      	movs	r0, #10
 800463e:	f7fc f9f1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8004642:	497c      	ldr	r1, [pc, #496]	; (8004834 <OTM8009A_Init+0x3c4>)
 8004644:	2000      	movs	r0, #0
 8004646:	f7fc f9ed 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 800464a:	4983      	ldr	r1, [pc, #524]	; (8004858 <OTM8009A_Init+0x3e8>)
 800464c:	200f      	movs	r0, #15
 800464e:	f7fc f9e9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8004652:	497a      	ldr	r1, [pc, #488]	; (800483c <OTM8009A_Init+0x3cc>)
 8004654:	2000      	movs	r0, #0
 8004656:	f7fc f9e5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 800465a:	4980      	ldr	r1, [pc, #512]	; (800485c <OTM8009A_Init+0x3ec>)
 800465c:	200f      	movs	r0, #15
 800465e:	f7fc f9e1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8004662:	497f      	ldr	r1, [pc, #508]	; (8004860 <OTM8009A_Init+0x3f0>)
 8004664:	2000      	movs	r0, #0
 8004666:	f7fc f9dd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 800466a:	497e      	ldr	r1, [pc, #504]	; (8004864 <OTM8009A_Init+0x3f4>)
 800466c:	200a      	movs	r0, #10
 800466e:	f7fc f9d9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8004672:	497d      	ldr	r1, [pc, #500]	; (8004868 <OTM8009A_Init+0x3f8>)
 8004674:	2000      	movs	r0, #0
 8004676:	f7fc f9d5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 800467a:	497c      	ldr	r1, [pc, #496]	; (800486c <OTM8009A_Init+0x3fc>)
 800467c:	200a      	movs	r0, #10
 800467e:	f7fc f9d1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8004682:	4949      	ldr	r1, [pc, #292]	; (80047a8 <OTM8009A_Init+0x338>)
 8004684:	2000      	movs	r0, #0
 8004686:	f7fc f9cd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 800468a:	4979      	ldr	r1, [pc, #484]	; (8004870 <OTM8009A_Init+0x400>)
 800468c:	200a      	movs	r0, #10
 800468e:	f7fc f9c9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8004692:	496d      	ldr	r1, [pc, #436]	; (8004848 <OTM8009A_Init+0x3d8>)
 8004694:	2000      	movs	r0, #0
 8004696:	f7fc f9c5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 800469a:	4976      	ldr	r1, [pc, #472]	; (8004874 <OTM8009A_Init+0x404>)
 800469c:	200f      	movs	r0, #15
 800469e:	f7fc f9c1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80046a2:	4960      	ldr	r1, [pc, #384]	; (8004824 <OTM8009A_Init+0x3b4>)
 80046a4:	2000      	movs	r0, #0
 80046a6:	f7fc f9bd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 80046aa:	4973      	ldr	r1, [pc, #460]	; (8004878 <OTM8009A_Init+0x408>)
 80046ac:	200f      	movs	r0, #15
 80046ae:	f7fc f9b9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80046b2:	495e      	ldr	r1, [pc, #376]	; (800482c <OTM8009A_Init+0x3bc>)
 80046b4:	2000      	movs	r0, #0
 80046b6:	f7fc f9b5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 80046ba:	4970      	ldr	r1, [pc, #448]	; (800487c <OTM8009A_Init+0x40c>)
 80046bc:	200a      	movs	r0, #10
 80046be:	f7fc f9b1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 80046c2:	495c      	ldr	r1, [pc, #368]	; (8004834 <OTM8009A_Init+0x3c4>)
 80046c4:	2000      	movs	r0, #0
 80046c6:	f7fc f9ad 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 80046ca:	496d      	ldr	r1, [pc, #436]	; (8004880 <OTM8009A_Init+0x410>)
 80046cc:	200f      	movs	r0, #15
 80046ce:	f7fc f9a9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 80046d2:	495a      	ldr	r1, [pc, #360]	; (800483c <OTM8009A_Init+0x3cc>)
 80046d4:	2000      	movs	r0, #0
 80046d6:	f7fc f9a5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 80046da:	496a      	ldr	r1, [pc, #424]	; (8004884 <OTM8009A_Init+0x414>)
 80046dc:	200f      	movs	r0, #15
 80046de:	f7fc f9a1 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80046e2:	493d      	ldr	r1, [pc, #244]	; (80047d8 <OTM8009A_Init+0x368>)
 80046e4:	2000      	movs	r0, #0
 80046e6:	f7fc f99d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 80046ea:	4967      	ldr	r1, [pc, #412]	; (8004888 <OTM8009A_Init+0x418>)
 80046ec:	2000      	movs	r0, #0
 80046ee:	f7fc f999 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 80046f2:	4966      	ldr	r1, [pc, #408]	; (800488c <OTM8009A_Init+0x41c>)
 80046f4:	2000      	movs	r0, #0
 80046f6:	f7fc f995 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 80046fa:	4965      	ldr	r1, [pc, #404]	; (8004890 <OTM8009A_Init+0x420>)
 80046fc:	2000      	movs	r0, #0
 80046fe:	f7fc f991 	bl	8000a24 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8004702:	4964      	ldr	r1, [pc, #400]	; (8004894 <OTM8009A_Init+0x424>)
 8004704:	2000      	movs	r0, #0
 8004706:	f7fc f98d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 800470a:	4963      	ldr	r1, [pc, #396]	; (8004898 <OTM8009A_Init+0x428>)
 800470c:	2000      	movs	r0, #0
 800470e:	f7fc f989 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004712:	4923      	ldr	r1, [pc, #140]	; (80047a0 <OTM8009A_Init+0x330>)
 8004714:	2000      	movs	r0, #0
 8004716:	f7fc f985 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 800471a:	4960      	ldr	r1, [pc, #384]	; (800489c <OTM8009A_Init+0x42c>)
 800471c:	2003      	movs	r0, #3
 800471e:	f7fc f981 	bl	8000a24 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8004722:	491f      	ldr	r1, [pc, #124]	; (80047a0 <OTM8009A_Init+0x330>)
 8004724:	2000      	movs	r0, #0
 8004726:	f7fc f97d 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800472a:	491d      	ldr	r1, [pc, #116]	; (80047a0 <OTM8009A_Init+0x330>)
 800472c:	2000      	movs	r0, #0
 800472e:	f7fc f979 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8004732:	495b      	ldr	r1, [pc, #364]	; (80048a0 <OTM8009A_Init+0x430>)
 8004734:	2010      	movs	r0, #16
 8004736:	f7fc f975 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800473a:	4919      	ldr	r1, [pc, #100]	; (80047a0 <OTM8009A_Init+0x330>)
 800473c:	2000      	movs	r0, #0
 800473e:	f7fc f971 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8004742:	4958      	ldr	r1, [pc, #352]	; (80048a4 <OTM8009A_Init+0x434>)
 8004744:	2010      	movs	r0, #16
 8004746:	f7fc f96d 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 800474a:	2000      	movs	r0, #0
 800474c:	4956      	ldr	r1, [pc, #344]	; (80048a8 <OTM8009A_Init+0x438>)
 800474e:	f7fc f969 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8004752:	2078      	movs	r0, #120	; 0x78
 8004754:	f000 f9d8 	bl	8004b08 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8004758:	2c00      	cmp	r4, #0
 800475a:	f000 80c7 	beq.w	80048ec <OTM8009A_Init+0x47c>
 800475e:	2c02      	cmp	r4, #2
 8004760:	d103      	bne.n	800476a <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8004762:	4952      	ldr	r1, [pc, #328]	; (80048ac <OTM8009A_Init+0x43c>)
 8004764:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8004766:	f7fc f95d 	bl	8000a24 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 800476a:	2d01      	cmp	r5, #1
 800476c:	d10b      	bne.n	8004786 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 800476e:	4950      	ldr	r1, [pc, #320]	; (80048b0 <OTM8009A_Init+0x440>)
 8004770:	2000      	movs	r0, #0
 8004772:	f7fc f957 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8004776:	494f      	ldr	r1, [pc, #316]	; (80048b4 <OTM8009A_Init+0x444>)
 8004778:	2004      	movs	r0, #4
 800477a:	f7fc f953 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 800477e:	494e      	ldr	r1, [pc, #312]	; (80048b8 <OTM8009A_Init+0x448>)
 8004780:	2004      	movs	r0, #4
 8004782:	f7fc f94f 	bl	8000a24 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8004786:	494d      	ldr	r1, [pc, #308]	; (80048bc <OTM8009A_Init+0x44c>)
 8004788:	2000      	movs	r0, #0
 800478a:	f7fc f94b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 800478e:	494c      	ldr	r1, [pc, #304]	; (80048c0 <OTM8009A_Init+0x450>)
 8004790:	2000      	movs	r0, #0
 8004792:	f7fc f947 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8004796:	494b      	ldr	r1, [pc, #300]	; (80048c4 <OTM8009A_Init+0x454>)
 8004798:	2000      	movs	r0, #0
 800479a:	f7fc f943 	bl	8000a24 <DSI_IO_WriteCmd>
 800479e:	e093      	b.n	80048c8 <OTM8009A_Init+0x458>
 80047a0:	08021df0 	.word	0x08021df0
 80047a4:	08021e56 	.word	0x08021e56
 80047a8:	08021e06 	.word	0x08021e06
 80047ac:	08021edc 	.word	0x08021edc
 80047b0:	08021e1c 	.word	0x08021e1c
 80047b4:	08021e32 	.word	0x08021e32
 80047b8:	08021e48 	.word	0x08021e48
 80047bc:	08021e4e 	.word	0x08021e4e
 80047c0:	08021e50 	.word	0x08021e50
 80047c4:	08021e52 	.word	0x08021e52
 80047c8:	08021e54 	.word	0x08021e54
 80047cc:	08021df2 	.word	0x08021df2
 80047d0:	08021df4 	.word	0x08021df4
 80047d4:	08021df6 	.word	0x08021df6
 80047d8:	08021df8 	.word	0x08021df8
 80047dc:	08021dfa 	.word	0x08021dfa
 80047e0:	08021dfc 	.word	0x08021dfc
 80047e4:	08021dfe 	.word	0x08021dfe
 80047e8:	08021e00 	.word	0x08021e00
 80047ec:	08021e02 	.word	0x08021e02
 80047f0:	08021e04 	.word	0x08021e04
 80047f4:	08021f5a 	.word	0x08021f5a
 80047f8:	08021e08 	.word	0x08021e08
 80047fc:	08021e0a 	.word	0x08021e0a
 8004800:	08021e0c 	.word	0x08021e0c
 8004804:	08021e0e 	.word	0x08021e0e
 8004808:	08021e10 	.word	0x08021e10
 800480c:	08021e12 	.word	0x08021e12
 8004810:	08021e14 	.word	0x08021e14
 8004814:	08021e16 	.word	0x08021e16
 8004818:	08021e18 	.word	0x08021e18
 800481c:	08021f5d 	.word	0x08021f5d
 8004820:	08021f60 	.word	0x08021f60
 8004824:	08021e1a 	.word	0x08021e1a
 8004828:	08021f67 	.word	0x08021f67
 800482c:	08021e1e 	.word	0x08021e1e
 8004830:	08021f76 	.word	0x08021f76
 8004834:	08021e20 	.word	0x08021e20
 8004838:	08021e5a 	.word	0x08021e5a
 800483c:	08021e22 	.word	0x08021e22
 8004840:	08021e40 	.word	0x08021e40
 8004844:	08021e65 	.word	0x08021e65
 8004848:	08021e24 	.word	0x08021e24
 800484c:	08021e70 	.word	0x08021e70
 8004850:	08021e80 	.word	0x08021e80
 8004854:	08021e90 	.word	0x08021e90
 8004858:	08021e9b 	.word	0x08021e9b
 800485c:	08021eab 	.word	0x08021eab
 8004860:	08021e26 	.word	0x08021e26
 8004864:	08021ebb 	.word	0x08021ebb
 8004868:	08021e28 	.word	0x08021e28
 800486c:	08021ec6 	.word	0x08021ec6
 8004870:	08021ed1 	.word	0x08021ed1
 8004874:	08021edf 	.word	0x08021edf
 8004878:	08021eef 	.word	0x08021eef
 800487c:	08021eff 	.word	0x08021eff
 8004880:	08021f0a 	.word	0x08021f0a
 8004884:	08021f1a 	.word	0x08021f1a
 8004888:	08021e42 	.word	0x08021e42
 800488c:	08021e44 	.word	0x08021e44
 8004890:	08021e46 	.word	0x08021e46
 8004894:	08021e4a 	.word	0x08021e4a
 8004898:	08021e4c 	.word	0x08021e4c
 800489c:	08021f2a 	.word	0x08021f2a
 80048a0:	08021f38 	.word	0x08021f38
 80048a4:	08021f49 	.word	0x08021f49
 80048a8:	08021e2a 	.word	0x08021e2a
 80048ac:	08021e2c 	.word	0x08021e2c
 80048b0:	08021e30 	.word	0x08021e30
 80048b4:	08021f2e 	.word	0x08021f2e
 80048b8:	08021f33 	.word	0x08021f33
 80048bc:	08021e34 	.word	0x08021e34
 80048c0:	08021e36 	.word	0x08021e36
 80048c4:	08021e38 	.word	0x08021e38

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 80048c8:	490a      	ldr	r1, [pc, #40]	; (80048f4 <OTM8009A_Init+0x484>)
 80048ca:	2000      	movs	r0, #0
 80048cc:	f7fc f8aa 	bl	8000a24 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 80048d0:	4909      	ldr	r1, [pc, #36]	; (80048f8 <OTM8009A_Init+0x488>)
 80048d2:	2000      	movs	r0, #0
 80048d4:	f7fc f8a6 	bl	8000a24 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80048d8:	4908      	ldr	r1, [pc, #32]	; (80048fc <OTM8009A_Init+0x48c>)
 80048da:	2000      	movs	r0, #0
 80048dc:	f7fc f8a2 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 80048e0:	4907      	ldr	r1, [pc, #28]	; (8004900 <OTM8009A_Init+0x490>)
 80048e2:	2000      	movs	r0, #0
 80048e4:	f7fc f89e 	bl	8000a24 <DSI_IO_WriteCmd>

  return 0;
}
 80048e8:	2000      	movs	r0, #0
 80048ea:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 80048ec:	4905      	ldr	r1, [pc, #20]	; (8004904 <OTM8009A_Init+0x494>)
 80048ee:	4620      	mov	r0, r4
 80048f0:	e739      	b.n	8004766 <OTM8009A_Init+0x2f6>
 80048f2:	bf00      	nop
 80048f4:	08021e3a 	.word	0x08021e3a
 80048f8:	08021e3c 	.word	0x08021e3c
 80048fc:	08021df0 	.word	0x08021df0
 8004900:	08021e3e 	.word	0x08021e3e
 8004904:	08021e2e 	.word	0x08021e2e

08004908 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8004908:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800490a:	4d2f      	ldr	r5, [pc, #188]	; (80049c8 <I2C1_Init+0xc0>)
{
 800490c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800490e:	4628      	mov	r0, r5
 8004910:	f002 fa74 	bl	8006dfc <HAL_I2C_GetState>
 8004914:	4604      	mov	r4, r0
 8004916:	2800      	cmp	r0, #0
 8004918:	d154      	bne.n	80049c4 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800491a:	4a2c      	ldr	r2, [pc, #176]	; (80049cc <I2C1_Init+0xc4>)
 800491c:	4b2c      	ldr	r3, [pc, #176]	; (80049d0 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800491e:	4e2d      	ldr	r6, [pc, #180]	; (80049d4 <I2C1_Init+0xcc>)
 8004920:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8004922:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8004926:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800492a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800492e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8004932:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8004936:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8004938:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800493a:	f043 0302 	orr.w	r3, r3, #2
 800493e:	6333      	str	r3, [r6, #48]	; 0x30
 8004940:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8004942:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8004944:	f003 0302 	and.w	r3, r3, #2
 8004948:	9301      	str	r3, [sp, #4]
 800494a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800494c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004950:	2312      	movs	r3, #18
 8004952:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8004956:	2002      	movs	r0, #2
 8004958:	2304      	movs	r3, #4
 800495a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800495e:	a903      	add	r1, sp, #12
 8004960:	481d      	ldr	r0, [pc, #116]	; (80049d8 <I2C1_Init+0xd0>)
 8004962:	f001 fc79 	bl	8006258 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8004966:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800496a:	a903      	add	r1, sp, #12
 800496c:	481a      	ldr	r0, [pc, #104]	; (80049d8 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800496e:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004970:	f001 fc72 	bl	8006258 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8004974:	9402      	str	r4, [sp, #8]
 8004976:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8004978:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800497c:	6433      	str	r3, [r6, #64]	; 0x40
 800497e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8004980:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004984:	9302      	str	r3, [sp, #8]
 8004986:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8004988:	6a33      	ldr	r3, [r6, #32]
 800498a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800498e:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8004990:	6a33      	ldr	r3, [r6, #32]
 8004992:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8004996:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8004998:	4622      	mov	r2, r4
 800499a:	2105      	movs	r1, #5
 800499c:	201f      	movs	r0, #31
 800499e:	f000 fd15 	bl	80053cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80049a2:	201f      	movs	r0, #31
 80049a4:	f000 fd44 	bl	8005430 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80049a8:	4622      	mov	r2, r4
 80049aa:	2105      	movs	r1, #5
 80049ac:	2020      	movs	r0, #32
 80049ae:	f000 fd0d 	bl	80053cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80049b2:	2020      	movs	r0, #32
 80049b4:	f000 fd3c 	bl	8005430 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80049b8:	4628      	mov	r0, r5
  }
}
 80049ba:	b008      	add	sp, #32
 80049bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 80049c0:	f001 bfc2 	b.w	8006948 <HAL_I2C_Init>
}
 80049c4:	b008      	add	sp, #32
 80049c6:	bd70      	pop	{r4, r5, r6, pc}
 80049c8:	200044d4 	.word	0x200044d4
 80049cc:	40005400 	.word	0x40005400
 80049d0:	00061a80 	.word	0x00061a80
 80049d4:	40023800 	.word	0x40023800
 80049d8:	40020400 	.word	0x40020400

080049dc <BSP_PB_Init>:
{
 80049dc:	b510      	push	{r4, lr}
 80049de:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80049e0:	4b18      	ldr	r3, [pc, #96]	; (8004a44 <BSP_PB_Init+0x68>)
 80049e2:	2400      	movs	r4, #0
 80049e4:	9400      	str	r4, [sp, #0]
 80049e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80049e8:	f042 0201 	orr.w	r2, r2, #1
 80049ec:	631a      	str	r2, [r3, #48]	; 0x30
 80049ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049f0:	f003 0301 	and.w	r3, r3, #1
 80049f4:	9300      	str	r3, [sp, #0]
 80049f6:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80049f8:	b969      	cbnz	r1, 8004a16 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80049fa:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80049fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004a00:	2302      	movs	r3, #2
 8004a02:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004a04:	4b10      	ldr	r3, [pc, #64]	; (8004a48 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8004a06:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004a08:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004a0c:	a901      	add	r1, sp, #4
 8004a0e:	f001 fc23 	bl	8006258 <HAL_GPIO_Init>
}
 8004a12:	b006      	add	sp, #24
 8004a14:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8004a16:	2901      	cmp	r1, #1
 8004a18:	d1fb      	bne.n	8004a12 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8004a1a:	2302      	movs	r3, #2
 8004a1c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8004a1e:	4b0b      	ldr	r3, [pc, #44]	; (8004a4c <BSP_PB_Init+0x70>)
 8004a20:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004a22:	4b09      	ldr	r3, [pc, #36]	; (8004a48 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8004a24:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004a26:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8004a2a:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8004a2c:	a901      	add	r1, sp, #4
 8004a2e:	f001 fc13 	bl	8006258 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8004a32:	4622      	mov	r2, r4
 8004a34:	210f      	movs	r1, #15
 8004a36:	2006      	movs	r0, #6
 8004a38:	f000 fcc8 	bl	80053cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8004a3c:	2006      	movs	r0, #6
 8004a3e:	f000 fcf7 	bl	8005430 <HAL_NVIC_EnableIRQ>
}
 8004a42:	e7e6      	b.n	8004a12 <BSP_PB_Init+0x36>
 8004a44:	40023800 	.word	0x40023800
 8004a48:	20000048 	.word	0x20000048
 8004a4c:	10110000 	.word	0x10110000

08004a50 <BSP_PB_GetState>:
{
 8004a50:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8004a52:	4b03      	ldr	r3, [pc, #12]	; (8004a60 <BSP_PB_GetState+0x10>)
 8004a54:	2101      	movs	r1, #1
 8004a56:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8004a5a:	f001 fd87 	bl	800656c <HAL_GPIO_ReadPin>
}
 8004a5e:	bd08      	pop	{r3, pc}
 8004a60:	20000048 	.word	0x20000048

08004a64 <TS_IO_Init>:
 8004a64:	f7ff bf50 	b.w	8004908 <I2C1_Init>

08004a68 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8004a68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8004a6a:	2301      	movs	r3, #1
 8004a6c:	f88d 2017 	strb.w	r2, [sp, #23]
 8004a70:	2264      	movs	r2, #100	; 0x64
 8004a72:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8004a76:	f10d 0217 	add.w	r2, sp, #23
 8004a7a:	9200      	str	r2, [sp, #0]
 8004a7c:	460a      	mov	r2, r1
 8004a7e:	4601      	mov	r1, r0
 8004a80:	4805      	ldr	r0, [pc, #20]	; (8004a98 <TS_IO_Write+0x30>)
 8004a82:	f002 f823 	bl	8006acc <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8004a86:	b120      	cbz	r0, 8004a92 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8004a88:	4803      	ldr	r0, [pc, #12]	; (8004a98 <TS_IO_Write+0x30>)
 8004a8a:	f002 f805 	bl	8006a98 <HAL_I2C_DeInit>
  I2C1_Init();
 8004a8e:	f7ff ff3b 	bl	8004908 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8004a92:	b007      	add	sp, #28
 8004a94:	f85d fb04 	ldr.w	pc, [sp], #4
 8004a98:	200044d4 	.word	0x200044d4

08004a9c <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8004a9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8004a9e:	2300      	movs	r3, #0
{
 8004aa0:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8004aa2:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8004aa6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004aaa:	2301      	movs	r3, #1
 8004aac:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8004ab0:	f10d 0117 	add.w	r1, sp, #23
 8004ab4:	9100      	str	r1, [sp, #0]
 8004ab6:	4601      	mov	r1, r0
 8004ab8:	4806      	ldr	r0, [pc, #24]	; (8004ad4 <TS_IO_Read+0x38>)
 8004aba:	f002 f897 	bl	8006bec <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8004abe:	b120      	cbz	r0, 8004aca <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8004ac0:	4804      	ldr	r0, [pc, #16]	; (8004ad4 <TS_IO_Read+0x38>)
 8004ac2:	f001 ffe9 	bl	8006a98 <HAL_I2C_DeInit>
  I2C1_Init();
 8004ac6:	f7ff ff1f 	bl	8004908 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8004aca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8004ace:	b007      	add	sp, #28
 8004ad0:	f85d fb04 	ldr.w	pc, [sp], #4
 8004ad4:	200044d4 	.word	0x200044d4

08004ad8 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8004ad8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8004ada:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8004ade:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004ae2:	9200      	str	r2, [sp, #0]
 8004ae4:	2301      	movs	r3, #1
 8004ae6:	460a      	mov	r2, r1
 8004ae8:	4601      	mov	r1, r0
 8004aea:	4806      	ldr	r0, [pc, #24]	; (8004b04 <TS_IO_ReadMultiple+0x2c>)
 8004aec:	f002 f87e 	bl	8006bec <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8004af0:	4604      	mov	r4, r0
 8004af2:	b120      	cbz	r0, 8004afe <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8004af4:	4803      	ldr	r0, [pc, #12]	; (8004b04 <TS_IO_ReadMultiple+0x2c>)
 8004af6:	f001 ffcf 	bl	8006a98 <HAL_I2C_DeInit>
  I2C1_Init();
 8004afa:	f7ff ff05 	bl	8004908 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8004afe:	b2a0      	uxth	r0, r4
 8004b00:	b004      	add	sp, #16
 8004b02:	bd10      	pop	{r4, pc}
 8004b04:	200044d4 	.word	0x200044d4

08004b08 <OTM8009A_IO_Delay>:
 8004b08:	f000 bc3a 	b.w	8005380 <HAL_Delay>

08004b0c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8004b0c:	b500      	push	{lr}
 8004b0e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004b10:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004b14:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004b16:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8004b1a:	2205      	movs	r2, #5
 8004b1c:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004b1e:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004b20:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8004b22:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8004b24:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004b28:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004b2c:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8004b30:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004b32:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8004b34:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8004b36:	2210      	movs	r2, #16
 8004b38:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8004b3a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8004b3e:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8004b40:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8004b42:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8004b44:	a906      	add	r1, sp, #24
 8004b46:	466a      	mov	r2, sp
 8004b48:	4804      	ldr	r0, [pc, #16]	; (8004b5c <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8004b4a:	f002 fcd0 	bl	80074ee <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8004b4e:	3800      	subs	r0, #0
 8004b50:	bf18      	it	ne
 8004b52:	2001      	movne	r0, #1
 8004b54:	b015      	add	sp, #84	; 0x54
 8004b56:	f85d fb04 	ldr.w	pc, [sp], #4
 8004b5a:	bf00      	nop
 8004b5c:	20004528 	.word	0x20004528

08004b60 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8004b60:	b500      	push	{lr}
 8004b62:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004b64:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004b68:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8004b6a:	2306      	movs	r3, #6
 8004b6c:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b6e:	4817      	ldr	r0, [pc, #92]	; (8004bcc <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8004b70:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b72:	f241 3288 	movw	r2, #5000	; 0x1388
 8004b76:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004b78:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004b7c:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8004b80:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8004b82:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004b84:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004b86:	f002 fc6e 	bl	8007466 <HAL_QSPI_Command>
 8004b8a:	b9e0      	cbnz	r0, 8004bc6 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8004b8c:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8004b8e:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8004b92:	2201      	movs	r2, #1
 8004b94:	2310      	movs	r3, #16
 8004b96:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8004b9a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8004b9e:	2305      	movs	r3, #5
 8004ba0:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004ba4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8004ba8:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8004baa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004bac:	4807      	ldr	r0, [pc, #28]	; (8004bcc <QSPI_WriteEnable.constprop.0+0x6c>)
 8004bae:	f241 3388 	movw	r3, #5000	; 0x1388
 8004bb2:	466a      	mov	r2, sp
 8004bb4:	a906      	add	r1, sp, #24
 8004bb6:	f002 fc9a 	bl	80074ee <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8004bba:	3800      	subs	r0, #0
 8004bbc:	bf18      	it	ne
 8004bbe:	2001      	movne	r0, #1
}
 8004bc0:	b015      	add	sp, #84	; 0x54
 8004bc2:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8004bc6:	2001      	movs	r0, #1
 8004bc8:	e7fa      	b.n	8004bc0 <QSPI_WriteEnable.constprop.0+0x60>
 8004bca:	bf00      	nop
 8004bcc:	20004528 	.word	0x20004528

08004bd0 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8004bd0:	b500      	push	{lr}
 8004bd2:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004bd4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004bd8:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8004bda:	23eb      	movs	r3, #235	; 0xeb
 8004bdc:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8004bde:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004be2:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8004be4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004be8:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8004bea:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8004bee:	2300      	movs	r3, #0
 8004bf0:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8004bf4:	220a      	movs	r2, #10
 8004bf6:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004bf8:	a902      	add	r1, sp, #8
 8004bfa:	466a      	mov	r2, sp
 8004bfc:	4806      	ldr	r0, [pc, #24]	; (8004c18 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004bfe:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004c00:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8004c04:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8004c06:	f002 fcc2 	bl	800758e <HAL_QSPI_MemoryMapped>
}
 8004c0a:	3800      	subs	r0, #0
 8004c0c:	bf18      	it	ne
 8004c0e:	2001      	movne	r0, #1
 8004c10:	b011      	add	sp, #68	; 0x44
 8004c12:	f85d fb04 	ldr.w	pc, [sp], #4
 8004c16:	bf00      	nop
 8004c18:	20004528 	.word	0x20004528

08004c1c <BSP_QSPI_MspInit>:
{
 8004c1c:	b570      	push	{r4, r5, r6, lr}
 8004c1e:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8004c20:	4b2c      	ldr	r3, [pc, #176]	; (8004cd4 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004c22:	482d      	ldr	r0, [pc, #180]	; (8004cd8 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8004c24:	2400      	movs	r4, #0
 8004c26:	9400      	str	r4, [sp, #0]
 8004c28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004c2a:	f042 0202 	orr.w	r2, r2, #2
 8004c2e:	639a      	str	r2, [r3, #56]	; 0x38
 8004c30:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004c32:	f002 0202 	and.w	r2, r2, #2
 8004c36:	9200      	str	r2, [sp, #0]
 8004c38:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8004c3a:	699a      	ldr	r2, [r3, #24]
 8004c3c:	f042 0202 	orr.w	r2, r2, #2
 8004c40:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004c42:	699a      	ldr	r2, [r3, #24]
 8004c44:	f022 0202 	bic.w	r2, r2, #2
 8004c48:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8004c4a:	9401      	str	r4, [sp, #4]
 8004c4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c4e:	f042 0202 	orr.w	r2, r2, #2
 8004c52:	631a      	str	r2, [r3, #48]	; 0x30
 8004c54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c56:	f002 0202 	and.w	r2, r2, #2
 8004c5a:	9201      	str	r2, [sp, #4]
 8004c5c:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8004c5e:	9402      	str	r4, [sp, #8]
 8004c60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004c62:	f042 0220 	orr.w	r2, r2, #32
 8004c66:	631a      	str	r2, [r3, #48]	; 0x30
 8004c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c6a:	f003 0320 	and.w	r3, r3, #32
 8004c6e:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004c70:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8004c72:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8004c74:	2302      	movs	r3, #2
 8004c76:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8004c7a:	2101      	movs	r1, #1
 8004c7c:	2303      	movs	r3, #3
 8004c7e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004c82:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004c84:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8004c86:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004c88:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8004c8a:	f001 fae5 	bl	8006258 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004c8e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004c92:	a903      	add	r1, sp, #12
 8004c94:	4811      	ldr	r0, [pc, #68]	; (8004cdc <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8004c96:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8004c98:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8004c9a:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8004c9c:	f001 fadc 	bl	8006258 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8004ca0:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004ca4:	a903      	add	r1, sp, #12
 8004ca6:	480d      	ldr	r0, [pc, #52]	; (8004cdc <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8004ca8:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8004caa:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004cac:	f001 fad4 	bl	8006258 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8004cb0:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004cb2:	a903      	add	r1, sp, #12
 8004cb4:	4809      	ldr	r0, [pc, #36]	; (8004cdc <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8004cb6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8004cb8:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8004cba:	f001 facd 	bl	8006258 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8004cbe:	4622      	mov	r2, r4
 8004cc0:	210f      	movs	r1, #15
 8004cc2:	205b      	movs	r0, #91	; 0x5b
 8004cc4:	f000 fb82 	bl	80053cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8004cc8:	205b      	movs	r0, #91	; 0x5b
 8004cca:	f000 fbb1 	bl	8005430 <HAL_NVIC_EnableIRQ>
}
 8004cce:	b008      	add	sp, #32
 8004cd0:	bd70      	pop	{r4, r5, r6, pc}
 8004cd2:	bf00      	nop
 8004cd4:	40023800 	.word	0x40023800
 8004cd8:	40020400 	.word	0x40020400
 8004cdc:	40021400 	.word	0x40021400

08004ce0 <BSP_QSPI_Init>:
{
 8004ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8004ce2:	4c48      	ldr	r4, [pc, #288]	; (8004e04 <BSP_QSPI_Init+0x124>)
 8004ce4:	4b48      	ldr	r3, [pc, #288]	; (8004e08 <BSP_QSPI_Init+0x128>)
 8004ce6:	6023      	str	r3, [r4, #0]
{
 8004ce8:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004cea:	4620      	mov	r0, r4
 8004cec:	f002 fba8 	bl	8007440 <HAL_QSPI_DeInit>
 8004cf0:	4605      	mov	r5, r0
 8004cf2:	b110      	cbz	r0, 8004cfa <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8004cf4:	2001      	movs	r0, #1
}
 8004cf6:	b011      	add	sp, #68	; 0x44
 8004cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8004cfa:	4601      	mov	r1, r0
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	f7ff ff8d 	bl	8004c1c <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8004d02:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004d04:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8004d06:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8004d0a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004d0c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8004d10:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8004d14:	fab3 f383 	clz	r3, r3
 8004d18:	3b01      	subs	r3, #1
 8004d1a:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004d1c:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8004d1e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8004d22:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8004d26:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8004d2a:	f002 fb35 	bl	8007398 <HAL_QSPI_Init>
 8004d2e:	2800      	cmp	r0, #0
 8004d30:	d1e0      	bne.n	8004cf4 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004d32:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8004d36:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004d3a:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004d3e:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8004d40:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8004d42:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004d44:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004d46:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d4a:	a902      	add	r1, sp, #8
 8004d4c:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004d4e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8004d50:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004d52:	f002 fb88 	bl	8007466 <HAL_QSPI_Command>
 8004d56:	b108      	cbz	r0, 8004d5c <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8004d58:	2004      	movs	r0, #4
 8004d5a:	e7cc      	b.n	8004cf6 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8004d5c:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004d5e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d62:	a902      	add	r1, sp, #8
 8004d64:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8004d66:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004d68:	f002 fb7d 	bl	8007466 <HAL_QSPI_Command>
 8004d6c:	2800      	cmp	r0, #0
 8004d6e:	d1f3      	bne.n	8004d58 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8004d70:	f241 3088 	movw	r0, #5000	; 0x1388
 8004d74:	f7ff feca 	bl	8004b0c <QSPI_AutoPollingMemReady.constprop.0>
 8004d78:	2800      	cmp	r0, #0
 8004d7a:	d1ed      	bne.n	8004d58 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8004d7c:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8004d80:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8004d84:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004d88:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8004d8a:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004d8c:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d90:	a902      	add	r1, sp, #8
 8004d92:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8004d94:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8004d96:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8004d98:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004d9a:	f002 fb64 	bl	8007466 <HAL_QSPI_Command>
 8004d9e:	2800      	cmp	r0, #0
 8004da0:	d1da      	bne.n	8004d58 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004da2:	f241 3288 	movw	r2, #5000	; 0x1388
 8004da6:	f10d 0107 	add.w	r1, sp, #7
 8004daa:	4620      	mov	r0, r4
 8004dac:	f002 fcce 	bl	800774c <HAL_QSPI_Receive>
 8004db0:	2800      	cmp	r0, #0
 8004db2:	d1d1      	bne.n	8004d58 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8004db4:	f7ff fed4 	bl	8004b60 <QSPI_WriteEnable.constprop.0>
 8004db8:	2800      	cmp	r0, #0
 8004dba:	d1cd      	bne.n	8004d58 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8004dbc:	2381      	movs	r3, #129	; 0x81
 8004dbe:	9302      	str	r3, [sp, #8]
 8004dc0:	22f0      	movs	r2, #240	; 0xf0
 8004dc2:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004dc6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8004dca:	210a      	movs	r1, #10
 8004dcc:	fab2 f282 	clz	r2, r2
 8004dd0:	fa01 f202 	lsl.w	r2, r1, r2
 8004dd4:	f003 030f 	and.w	r3, r3, #15
 8004dd8:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004dda:	a902      	add	r1, sp, #8
 8004ddc:	f241 3288 	movw	r2, #5000	; 0x1388
 8004de0:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8004de2:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004de6:	f002 fb3e 	bl	8007466 <HAL_QSPI_Command>
 8004dea:	2800      	cmp	r0, #0
 8004dec:	d1b4      	bne.n	8004d58 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8004dee:	f241 3288 	movw	r2, #5000	; 0x1388
 8004df2:	f10d 0107 	add.w	r1, sp, #7
 8004df6:	4620      	mov	r0, r4
 8004df8:	f002 fc4c 	bl	8007694 <HAL_QSPI_Transmit>
 8004dfc:	2800      	cmp	r0, #0
 8004dfe:	f43f af7a 	beq.w	8004cf6 <BSP_QSPI_Init+0x16>
 8004e02:	e7a9      	b.n	8004d58 <BSP_QSPI_Init+0x78>
 8004e04:	20004528 	.word	0x20004528
 8004e08:	a0001000 	.word	0xa0001000

08004e0c <BSP_QSPI_MspDeInit>:
{
 8004e0c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8004e0e:	205b      	movs	r0, #91	; 0x5b
 8004e10:	f000 fb1c 	bl	800544c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8004e14:	4814      	ldr	r0, [pc, #80]	; (8004e68 <BSP_QSPI_MspDeInit+0x5c>)
 8004e16:	2140      	movs	r1, #64	; 0x40
 8004e18:	f001 fb06 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8004e1c:	4813      	ldr	r0, [pc, #76]	; (8004e6c <BSP_QSPI_MspDeInit+0x60>)
 8004e1e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004e22:	f001 fb01 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8004e26:	4811      	ldr	r0, [pc, #68]	; (8004e6c <BSP_QSPI_MspDeInit+0x60>)
 8004e28:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004e2c:	f001 fafc 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8004e30:	480e      	ldr	r0, [pc, #56]	; (8004e6c <BSP_QSPI_MspDeInit+0x60>)
 8004e32:	f44f 7100 	mov.w	r1, #512	; 0x200
 8004e36:	f001 faf7 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8004e3a:	480c      	ldr	r0, [pc, #48]	; (8004e6c <BSP_QSPI_MspDeInit+0x60>)
 8004e3c:	2180      	movs	r1, #128	; 0x80
 8004e3e:	f001 faf3 	bl	8006428 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8004e42:	480a      	ldr	r0, [pc, #40]	; (8004e6c <BSP_QSPI_MspDeInit+0x60>)
 8004e44:	2140      	movs	r1, #64	; 0x40
 8004e46:	f001 faef 	bl	8006428 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8004e4a:	4b09      	ldr	r3, [pc, #36]	; (8004e70 <BSP_QSPI_MspDeInit+0x64>)
 8004e4c:	699a      	ldr	r2, [r3, #24]
 8004e4e:	f042 0202 	orr.w	r2, r2, #2
 8004e52:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8004e54:	699a      	ldr	r2, [r3, #24]
 8004e56:	f022 0202 	bic.w	r2, r2, #2
 8004e5a:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8004e5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004e5e:	f022 0202 	bic.w	r2, r2, #2
 8004e62:	639a      	str	r2, [r3, #56]	; 0x38
}
 8004e64:	bd08      	pop	{r3, pc}
 8004e66:	bf00      	nop
 8004e68:	40020400 	.word	0x40020400
 8004e6c:	40021400 	.word	0x40021400
 8004e70:	40023800 	.word	0x40023800

08004e74 <BSP_QSPI_DeInit>:
{
 8004e74:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8004e76:	4d08      	ldr	r5, [pc, #32]	; (8004e98 <BSP_QSPI_DeInit+0x24>)
 8004e78:	4b08      	ldr	r3, [pc, #32]	; (8004e9c <BSP_QSPI_DeInit+0x28>)
 8004e7a:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8004e7c:	4628      	mov	r0, r5
 8004e7e:	f002 fadf 	bl	8007440 <HAL_QSPI_DeInit>
 8004e82:	4604      	mov	r4, r0
 8004e84:	b928      	cbnz	r0, 8004e92 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8004e86:	4601      	mov	r1, r0
 8004e88:	4628      	mov	r0, r5
 8004e8a:	f7ff ffbf 	bl	8004e0c <BSP_QSPI_MspDeInit>
}
 8004e8e:	4620      	mov	r0, r4
 8004e90:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8004e92:	2401      	movs	r4, #1
 8004e94:	e7fb      	b.n	8004e8e <BSP_QSPI_DeInit+0x1a>
 8004e96:	bf00      	nop
 8004e98:	20004528 	.word	0x20004528
 8004e9c:	a0001000 	.word	0xa0001000

08004ea0 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8004ea0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8004ea4:	4c21      	ldr	r4, [pc, #132]	; (8004f2c <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004ea6:	4d22      	ldr	r5, [pc, #136]	; (8004f30 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004ea8:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8004eaa:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004eae:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004eb0:	4621      	mov	r1, r4
{
 8004eb2:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004eb4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004eb8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004eba:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8004ebe:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8004ec2:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004ec6:	f003 f8b5 	bl	8008034 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8004eca:	4630      	mov	r0, r6
 8004ecc:	f000 fa58 	bl	8005380 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8004ed0:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004ed2:	4621      	mov	r1, r4
 8004ed4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004ed8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004eda:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8004ede:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004ee2:	f003 f8a7 	bl	8008034 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8004ee6:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004ee8:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004eec:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8004eee:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004ef0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004ef4:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8004ef6:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004efa:	f003 f89b 	bl	8008034 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8004efe:	f44f 730c 	mov.w	r3, #560	; 0x230
 8004f02:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8004f04:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8004f06:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004f0a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8004f0c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8004f0e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004f10:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004f14:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8004f16:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8004f18:	f003 f88c 	bl	8008034 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8004f1c:	4649      	mov	r1, r9
 8004f1e:	4628      	mov	r0, r5
}
 8004f20:	b003      	add	sp, #12
 8004f22:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8004f26:	f003 b89c 	b.w	8008062 <HAL_SDRAM_ProgramRefreshRate>
 8004f2a:	bf00      	nop
 8004f2c:	20004574 	.word	0x20004574
 8004f30:	20004660 	.word	0x20004660

08004f34 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8004f34:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8004f36:	4606      	mov	r6, r0
{
 8004f38:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8004f3a:	2800      	cmp	r0, #0
 8004f3c:	f000 80bd 	beq.w	80050ba <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8004f40:	4b5f      	ldr	r3, [pc, #380]	; (80050c0 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8004f42:	4860      	ldr	r0, [pc, #384]	; (80050c4 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8004f44:	4c60      	ldr	r4, [pc, #384]	; (80050c8 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8004f46:	2500      	movs	r5, #0
 8004f48:	9500      	str	r5, [sp, #0]
 8004f4a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004f4c:	f042 0201 	orr.w	r2, r2, #1
 8004f50:	639a      	str	r2, [r3, #56]	; 0x38
 8004f52:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004f54:	f002 0201 	and.w	r2, r2, #1
 8004f58:	9200      	str	r2, [sp, #0]
 8004f5a:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8004f5c:	9501      	str	r5, [sp, #4]
 8004f5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f60:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8004f64:	631a      	str	r2, [r3, #48]	; 0x30
 8004f66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f68:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8004f6c:	9201      	str	r2, [sp, #4]
 8004f6e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004f70:	9502      	str	r5, [sp, #8]
 8004f72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f74:	f042 0204 	orr.w	r2, r2, #4
 8004f78:	631a      	str	r2, [r3, #48]	; 0x30
 8004f7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f7c:	f002 0204 	and.w	r2, r2, #4
 8004f80:	9202      	str	r2, [sp, #8]
 8004f82:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8004f84:	9503      	str	r5, [sp, #12]
 8004f86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f88:	f042 0208 	orr.w	r2, r2, #8
 8004f8c:	631a      	str	r2, [r3, #48]	; 0x30
 8004f8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f90:	f002 0208 	and.w	r2, r2, #8
 8004f94:	9203      	str	r2, [sp, #12]
 8004f96:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8004f98:	9504      	str	r5, [sp, #16]
 8004f9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004f9c:	f042 0210 	orr.w	r2, r2, #16
 8004fa0:	631a      	str	r2, [r3, #48]	; 0x30
 8004fa2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fa4:	f002 0210 	and.w	r2, r2, #16
 8004fa8:	9204      	str	r2, [sp, #16]
 8004faa:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004fac:	9505      	str	r5, [sp, #20]
 8004fae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fb0:	f042 0220 	orr.w	r2, r2, #32
 8004fb4:	631a      	str	r2, [r3, #48]	; 0x30
 8004fb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fb8:	f002 0220 	and.w	r2, r2, #32
 8004fbc:	9205      	str	r2, [sp, #20]
 8004fbe:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8004fc0:	9506      	str	r5, [sp, #24]
 8004fc2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fc4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004fc8:	631a      	str	r2, [r3, #48]	; 0x30
 8004fca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fcc:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8004fd0:	9206      	str	r2, [sp, #24]
 8004fd2:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8004fd4:	9507      	str	r5, [sp, #28]
 8004fd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fd8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004fdc:	631a      	str	r2, [r3, #48]	; 0x30
 8004fde:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fe0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8004fe4:	9207      	str	r2, [sp, #28]
 8004fe6:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004fe8:	9508      	str	r5, [sp, #32]
 8004fea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004fec:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004ff0:	631a      	str	r2, [r3, #48]	; 0x30
 8004ff2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ff4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ff8:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8004ffa:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004ffc:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8004ffe:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8005000:	2301      	movs	r3, #1
 8005002:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8005006:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8005008:	220c      	movs	r2, #12
 800500a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800500c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800500e:	f001 f923 	bl	8006258 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8005012:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8005016:	482d      	ldr	r0, [pc, #180]	; (80050cc <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8005018:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800501a:	a909      	add	r1, sp, #36	; 0x24
 800501c:	f001 f91c 	bl	8006258 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8005020:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8005024:	482a      	ldr	r0, [pc, #168]	; (80050d0 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8005026:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8005028:	a909      	add	r1, sp, #36	; 0x24
 800502a:	f001 f915 	bl	8006258 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800502e:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8005032:	4828      	ldr	r0, [pc, #160]	; (80050d4 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8005034:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8005036:	a909      	add	r1, sp, #36	; 0x24
 8005038:	f001 f90e 	bl	8006258 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800503c:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8005040:	4825      	ldr	r0, [pc, #148]	; (80050d8 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8005042:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8005044:	a909      	add	r1, sp, #36	; 0x24
 8005046:	f001 f907 	bl	8006258 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800504a:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800504e:	4823      	ldr	r0, [pc, #140]	; (80050dc <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8005050:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8005052:	a909      	add	r1, sp, #36	; 0x24
 8005054:	f001 f900 	bl	8006258 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8005058:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800505c:	4820      	ldr	r0, [pc, #128]	; (80050e0 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800505e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8005060:	a909      	add	r1, sp, #36	; 0x24
 8005062:	f001 f8f9 	bl	8006258 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8005066:	2280      	movs	r2, #128	; 0x80
 8005068:	f44f 7300 	mov.w	r3, #512	; 0x200
 800506c:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8005070:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8005074:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005078:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800507c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8005080:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8005084:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8005088:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800508c:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800508e:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8005092:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8005094:	4b13      	ldr	r3, [pc, #76]	; (80050e4 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8005096:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8005098:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800509a:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800509c:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800509e:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80050a0:	f000 fa8e 	bl	80055c0 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80050a4:	4620      	mov	r0, r4
 80050a6:	f000 fa0b 	bl	80054c0 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80050aa:	2038      	movs	r0, #56	; 0x38
 80050ac:	462a      	mov	r2, r5
 80050ae:	2105      	movs	r1, #5
 80050b0:	f000 f98c 	bl	80053cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80050b4:	2038      	movs	r0, #56	; 0x38
 80050b6:	f000 f9bb 	bl	8005430 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80050ba:	b00e      	add	sp, #56	; 0x38
 80050bc:	bd70      	pop	{r4, r5, r6, pc}
 80050be:	bf00      	nop
 80050c0:	40023800 	.word	0x40023800
 80050c4:	40020800 	.word	0x40020800
 80050c8:	20004600 	.word	0x20004600
 80050cc:	40020c00 	.word	0x40020c00
 80050d0:	40021000 	.word	0x40021000
 80050d4:	40021400 	.word	0x40021400
 80050d8:	40021800 	.word	0x40021800
 80050dc:	40021c00 	.word	0x40021c00
 80050e0:	40022000 	.word	0x40022000
 80050e4:	40026410 	.word	0x40026410

080050e8 <BSP_SDRAM_Init>:
{
 80050e8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80050ea:	4c19      	ldr	r4, [pc, #100]	; (8005150 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 80050ec:	4d19      	ldr	r5, [pc, #100]	; (8005154 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80050ee:	4b1a      	ldr	r3, [pc, #104]	; (8005158 <BSP_SDRAM_Init+0x70>)
 80050f0:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 80050f2:	2107      	movs	r1, #7
 80050f4:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 80050f6:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 80050f8:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 80050fc:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8005100:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8005104:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8005106:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8005108:	2340      	movs	r3, #64	; 0x40
 800510a:	2220      	movs	r2, #32
 800510c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8005110:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8005112:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8005116:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800511a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800511e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005122:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8005126:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8005128:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800512c:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800512e:	f7ff ff01 	bl	8004f34 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8005132:	4629      	mov	r1, r5
 8005134:	4620      	mov	r0, r4
 8005136:	f002 ff4f 	bl	8007fd8 <HAL_SDRAM_Init>
 800513a:	4c08      	ldr	r4, [pc, #32]	; (800515c <BSP_SDRAM_Init+0x74>)
 800513c:	3800      	subs	r0, #0
 800513e:	bf18      	it	ne
 8005140:	2001      	movne	r0, #1
 8005142:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8005144:	f240 5069 	movw	r0, #1385	; 0x569
 8005148:	f7ff feaa 	bl	8004ea0 <BSP_SDRAM_Initialization_sequence>
}
 800514c:	7820      	ldrb	r0, [r4, #0]
 800514e:	bd38      	pop	{r3, r4, r5, pc}
 8005150:	20004660 	.word	0x20004660
 8005154:	20004584 	.word	0x20004584
 8005158:	a0000140 	.word	0xa0000140
 800515c:	2000004d 	.word	0x2000004d

08005160 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8005160:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8005162:	b148      	cbz	r0, 8005178 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8005164:	2038      	movs	r0, #56	; 0x38
 8005166:	f000 f971 	bl	800544c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800516a:	4804      	ldr	r0, [pc, #16]	; (800517c <BSP_SDRAM_MspDeInit+0x1c>)
 800516c:	4b04      	ldr	r3, [pc, #16]	; (8005180 <BSP_SDRAM_MspDeInit+0x20>)
 800516e:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8005170:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8005174:	f000 ba24 	b.w	80055c0 <HAL_DMA_DeInit>
}
 8005178:	bd08      	pop	{r3, pc}
 800517a:	bf00      	nop
 800517c:	200045a0 	.word	0x200045a0
 8005180:	40026410 	.word	0x40026410

08005184 <BSP_SDRAM_DeInit>:
{
 8005184:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8005186:	4c07      	ldr	r4, [pc, #28]	; (80051a4 <BSP_SDRAM_DeInit+0x20>)
 8005188:	4b07      	ldr	r3, [pc, #28]	; (80051a8 <BSP_SDRAM_DeInit+0x24>)
 800518a:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800518c:	4620      	mov	r0, r4
 800518e:	f002 ff43 	bl	8008018 <HAL_SDRAM_DeInit>
 8005192:	4d06      	ldr	r5, [pc, #24]	; (80051ac <BSP_SDRAM_DeInit+0x28>)
 8005194:	4601      	mov	r1, r0
 8005196:	b918      	cbnz	r0, 80051a0 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8005198:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800519a:	4620      	mov	r0, r4
 800519c:	f7ff ffe0 	bl	8005160 <BSP_SDRAM_MspDeInit>
}
 80051a0:	7828      	ldrb	r0, [r5, #0]
 80051a2:	bd38      	pop	{r3, r4, r5, pc}
 80051a4:	20004660 	.word	0x20004660
 80051a8:	a0000140 	.word	0xa0000140
 80051ac:	2000004c 	.word	0x2000004c

080051b0 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80051b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80051b4:	4d16      	ldr	r5, [pc, #88]	; (8005210 <BSP_TS_Init+0x60>)
 80051b6:	4c17      	ldr	r4, [pc, #92]	; (8005214 <BSP_TS_Init+0x64>)
 80051b8:	682b      	ldr	r3, [r5, #0]
{
 80051ba:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80051bc:	7820      	ldrb	r0, [r4, #0]
{
 80051be:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80051c0:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80051c2:	686b      	ldr	r3, [r5, #4]
 80051c4:	2054      	movs	r0, #84	; 0x54
 80051c6:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80051c8:	b2c0      	uxtb	r0, r0
 80051ca:	2811      	cmp	r0, #17
 80051cc:	d00a      	beq.n	80051e4 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 80051ce:	686b      	ldr	r3, [r5, #4]
 80051d0:	2070      	movs	r0, #112	; 0x70
 80051d2:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80051d4:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80051d6:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80051d8:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80051da:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80051dc:	d004      	beq.n	80051e8 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 80051de:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 80051e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 80051e4:	2354      	movs	r3, #84	; 0x54
 80051e6:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 80051e8:	4b0b      	ldr	r3, [pc, #44]	; (8005218 <BSP_TS_Init+0x68>)
 80051ea:	f8df 8030 	ldr.w	r8, [pc, #48]	; 800521c <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 80051ee:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 80051f0:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 80051f4:	42be      	cmp	r6, r7
 80051f6:	bf34      	ite	cc
 80051f8:	2601      	movcc	r6, #1
 80051fa:	260c      	movcs	r6, #12
 80051fc:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 80051fe:	68ab      	ldr	r3, [r5, #8]
 8005200:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8005202:	f8d8 3000 	ldr.w	r3, [r8]
 8005206:	7820      	ldrb	r0, [r4, #0]
 8005208:	68db      	ldr	r3, [r3, #12]
 800520a:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800520c:	2000      	movs	r0, #0
 800520e:	e7e7      	b.n	80051e0 <BSP_TS_Init+0x30>
 8005210:	20000020 	.word	0x20000020
 8005214:	20004694 	.word	0x20004694
 8005218:	200046ac 	.word	0x200046ac
 800521c:	200046a8 	.word	0x200046a8

08005220 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8005220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8005224:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8005304 <BSP_TS_GetState+0xe4>
 8005228:	4a33      	ldr	r2, [pc, #204]	; (80052f8 <BSP_TS_GetState+0xd8>)
 800522a:	f8db 3000 	ldr.w	r3, [fp]
{
 800522e:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8005230:	691b      	ldr	r3, [r3, #16]
 8005232:	7810      	ldrb	r0, [r2, #0]
{
 8005234:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8005236:	4798      	blx	r3
 8005238:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800523a:	b158      	cbz	r0, 8005254 <BSP_TS_GetState+0x34>
 800523c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005308 <BSP_TS_GetState+0xe8>
 8005240:	4f2e      	ldr	r7, [pc, #184]	; (80052fc <BSP_TS_GetState+0xdc>)
 8005242:	f106 0a02 	add.w	sl, r6, #2
 8005246:	ad03      	add	r5, sp, #12
 8005248:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800524a:	f04f 0900 	mov.w	r9, #0
 800524e:	7833      	ldrb	r3, [r6, #0]
 8005250:	454b      	cmp	r3, r9
 8005252:	d803      	bhi.n	800525c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8005254:	2000      	movs	r0, #0
 8005256:	b005      	add	sp, #20
 8005258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800525c:	f8db 3000 	ldr.w	r3, [fp]
 8005260:	4825      	ldr	r0, [pc, #148]	; (80052f8 <BSP_TS_GetState+0xd8>)
 8005262:	695b      	ldr	r3, [r3, #20]
 8005264:	7800      	ldrb	r0, [r0, #0]
 8005266:	9101      	str	r1, [sp, #4]
 8005268:	462a      	mov	r2, r5
 800526a:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 800526c:	4b24      	ldr	r3, [pc, #144]	; (8005300 <BSP_TS_GetState+0xe0>)
 800526e:	9901      	ldr	r1, [sp, #4]
 8005270:	781b      	ldrb	r3, [r3, #0]
 8005272:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8005276:	bf1f      	itttt	ne
 8005278:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 800527a:	8828      	ldrhne	r0, [r5, #0]
 800527c:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800527e:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8005280:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8005282:	bf41      	itttt	mi
 8005284:	880a      	ldrhmi	r2, [r1, #0]
 8005286:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 800528a:	3203      	addmi	r2, #3
 800528c:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800528e:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8005290:	bf48      	it	mi
 8005292:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8005294:	f8d8 2000 	ldr.w	r2, [r8]
 8005298:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800529c:	bf42      	ittt	mi
 800529e:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80052a2:	3301      	addmi	r3, #1
 80052a4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80052a6:	b293      	uxth	r3, r2
 80052a8:	4290      	cmp	r0, r2
 80052aa:	bf8c      	ite	hi
 80052ac:	1ac3      	subhi	r3, r0, r3
 80052ae:	1a1b      	subls	r3, r3, r0
 80052b0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80052b2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80052b6:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80052b8:	683b      	ldr	r3, [r7, #0]
 80052ba:	b29c      	uxth	r4, r3
 80052bc:	429a      	cmp	r2, r3
 80052be:	bf88      	it	hi
 80052c0:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 80052c2:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80052c4:	bf98      	it	ls
 80052c6:	1aa4      	subls	r4, r4, r2
 80052c8:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 80052ca:	441c      	add	r4, r3
 80052cc:	46c4      	mov	ip, r8
 80052ce:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 80052d0:	bfc8      	it	gt
 80052d2:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 80052d6:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 80052da:	bfc8      	it	gt
 80052dc:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 80052de:	46be      	mov	lr, r7
 80052e0:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 80052e4:	f8de 3000 	ldr.w	r3, [lr]
 80052e8:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 80052ec:	f108 0804 	add.w	r8, r8, #4
 80052f0:	3704      	adds	r7, #4
 80052f2:	f109 0901 	add.w	r9, r9, #1
 80052f6:	e7aa      	b.n	800524e <BSP_TS_GetState+0x2e>
 80052f8:	20004694 	.word	0x20004694
 80052fc:	200046a0 	.word	0x200046a0
 8005300:	200046ac 	.word	0x200046ac
 8005304:	200046a8 	.word	0x200046a8
 8005308:	20004698 	.word	0x20004698

0800530c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800530c:	4b05      	ldr	r3, [pc, #20]	; (8005324 <SystemInit+0x18>)
 800530e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005312:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005316:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800531a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800531e:	609a      	str	r2, [r3, #8]
#endif
}
 8005320:	4770      	bx	lr
 8005322:	bf00      	nop
 8005324:	e000ed00 	.word	0xe000ed00

08005328 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005328:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800532a:	4b0b      	ldr	r3, [pc, #44]	; (8005358 <HAL_Init+0x30>)
 800532c:	681a      	ldr	r2, [r3, #0]
 800532e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005332:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005334:	681a      	ldr	r2, [r3, #0]
 8005336:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800533a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800533c:	681a      	ldr	r2, [r3, #0]
 800533e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005342:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005344:	2003      	movs	r0, #3
 8005346:	f000 f82f 	bl	80053a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800534a:	2000      	movs	r0, #0
 800534c:	f7fc fda4 	bl	8001e98 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005350:	f7fc fb44 	bl	80019dc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005354:	2000      	movs	r0, #0
 8005356:	bd08      	pop	{r3, pc}
 8005358:	40023c00 	.word	0x40023c00

0800535c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800535c:	4a03      	ldr	r2, [pc, #12]	; (800536c <HAL_IncTick+0x10>)
 800535e:	4b04      	ldr	r3, [pc, #16]	; (8005370 <HAL_IncTick+0x14>)
 8005360:	6811      	ldr	r1, [r2, #0]
 8005362:	781b      	ldrb	r3, [r3, #0]
 8005364:	440b      	add	r3, r1
 8005366:	6013      	str	r3, [r2, #0]
}
 8005368:	4770      	bx	lr
 800536a:	bf00      	nop
 800536c:	200046b0 	.word	0x200046b0
 8005370:	20000054 	.word	0x20000054

08005374 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005374:	4b01      	ldr	r3, [pc, #4]	; (800537c <HAL_GetTick+0x8>)
 8005376:	6818      	ldr	r0, [r3, #0]
}
 8005378:	4770      	bx	lr
 800537a:	bf00      	nop
 800537c:	200046b0 	.word	0x200046b0

08005380 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005380:	b538      	push	{r3, r4, r5, lr}
 8005382:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005384:	f7ff fff6 	bl	8005374 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005388:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800538a:	bf1c      	itt	ne
 800538c:	4b05      	ldrne	r3, [pc, #20]	; (80053a4 <HAL_Delay+0x24>)
 800538e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005390:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005392:	bf18      	it	ne
 8005394:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005396:	f7ff ffed 	bl	8005374 <HAL_GetTick>
 800539a:	1b43      	subs	r3, r0, r5
 800539c:	42a3      	cmp	r3, r4
 800539e:	d3fa      	bcc.n	8005396 <HAL_Delay+0x16>
  {
  }
}
 80053a0:	bd38      	pop	{r3, r4, r5, pc}
 80053a2:	bf00      	nop
 80053a4:	20000054 	.word	0x20000054

080053a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80053a8:	4907      	ldr	r1, [pc, #28]	; (80053c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80053aa:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80053ac:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80053b0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80053b2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80053b4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80053b8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80053ba:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80053bc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80053c0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80053c4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80053c6:	4770      	bx	lr
 80053c8:	e000ed00 	.word	0xe000ed00

080053cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80053cc:	4b16      	ldr	r3, [pc, #88]	; (8005428 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80053ce:	b530      	push	{r4, r5, lr}
 80053d0:	68dc      	ldr	r4, [r3, #12]
 80053d2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80053d6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80053da:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80053dc:	2d04      	cmp	r5, #4
 80053de:	bf28      	it	cs
 80053e0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80053e2:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80053e4:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80053e8:	bf8c      	ite	hi
 80053ea:	3c03      	subhi	r4, #3
 80053ec:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80053ee:	fa03 f505 	lsl.w	r5, r3, r5
 80053f2:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80053f6:	40a3      	lsls	r3, r4
 80053f8:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80053fc:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80053fe:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8005400:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005404:	bfac      	ite	ge
 8005406:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800540a:	4a08      	ldrlt	r2, [pc, #32]	; (800542c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800540c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005410:	bfb8      	it	lt
 8005412:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005416:	b2db      	uxtb	r3, r3
 8005418:	bfaa      	itet	ge
 800541a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800541e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8005420:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8005424:	bd30      	pop	{r4, r5, pc}
 8005426:	bf00      	nop
 8005428:	e000ed00 	.word	0xe000ed00
 800542c:	e000ed14 	.word	0xe000ed14

08005430 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8005430:	2800      	cmp	r0, #0
 8005432:	db08      	blt.n	8005446 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005434:	0942      	lsrs	r2, r0, #5
 8005436:	2301      	movs	r3, #1
 8005438:	f000 001f 	and.w	r0, r0, #31
 800543c:	fa03 f000 	lsl.w	r0, r3, r0
 8005440:	4b01      	ldr	r3, [pc, #4]	; (8005448 <HAL_NVIC_EnableIRQ+0x18>)
 8005442:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8005446:	4770      	bx	lr
 8005448:	e000e100 	.word	0xe000e100

0800544c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800544c:	2800      	cmp	r0, #0
 800544e:	db0d      	blt.n	800546c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8005450:	0943      	lsrs	r3, r0, #5
 8005452:	2201      	movs	r2, #1
 8005454:	f000 001f 	and.w	r0, r0, #31
 8005458:	fa02 f000 	lsl.w	r0, r2, r0
 800545c:	3320      	adds	r3, #32
 800545e:	4a04      	ldr	r2, [pc, #16]	; (8005470 <HAL_NVIC_DisableIRQ+0x24>)
 8005460:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8005464:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8005468:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800546c:	4770      	bx	lr
 800546e:	bf00      	nop
 8005470:	e000e100 	.word	0xe000e100

08005474 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8005474:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8005476:	4604      	mov	r4, r0
 8005478:	b150      	cbz	r0, 8005490 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800547a:	7943      	ldrb	r3, [r0, #5]
 800547c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005480:	b913      	cbnz	r3, 8005488 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8005482:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8005484:	f7fc faca 	bl	8001a1c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8005488:	2301      	movs	r3, #1
 800548a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800548c:	2000      	movs	r0, #0
}
 800548e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005490:	2001      	movs	r0, #1
 8005492:	e7fc      	b.n	800548e <HAL_CRC_Init+0x1a>

08005494 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8005494:	6803      	ldr	r3, [r0, #0]
{
 8005496:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8005498:	4c08      	ldr	r4, [pc, #32]	; (80054bc <DMA_CalcBaseAndBitshift+0x28>)
{
 800549a:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800549c:	b2d9      	uxtb	r1, r3
 800549e:	3910      	subs	r1, #16
 80054a0:	2018      	movs	r0, #24
 80054a2:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80054a6:	5c20      	ldrb	r0, [r4, r0]
 80054a8:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80054aa:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 80054ae:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 80054b2:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80054b4:	bf88      	it	hi
 80054b6:	3004      	addhi	r0, #4
 80054b8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 80054ba:	bd10      	pop	{r4, pc}
 80054bc:	08021f9d 	.word	0x08021f9d

080054c0 <HAL_DMA_Init>:
{
 80054c0:	b570      	push	{r4, r5, r6, lr}
 80054c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80054c4:	f7ff ff56 	bl	8005374 <HAL_GetTick>
 80054c8:	4605      	mov	r5, r0
  if(hdma == NULL)
 80054ca:	2c00      	cmp	r4, #0
 80054cc:	d073      	beq.n	80055b6 <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 80054ce:	2300      	movs	r3, #0
 80054d0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80054d4:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 80054d6:	2302      	movs	r3, #2
 80054d8:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80054dc:	6813      	ldr	r3, [r2, #0]
 80054de:	f023 0301 	bic.w	r3, r3, #1
 80054e2:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80054e4:	6821      	ldr	r1, [r4, #0]
 80054e6:	680b      	ldr	r3, [r1, #0]
 80054e8:	07d8      	lsls	r0, r3, #31
 80054ea:	d42f      	bmi.n	800554c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 80054ec:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80054ee:	4d33      	ldr	r5, [pc, #204]	; (80055bc <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80054f0:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80054f2:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80054f4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 80054f8:	4313      	orrs	r3, r2
 80054fa:	68e2      	ldr	r2, [r4, #12]
 80054fc:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80054fe:	6922      	ldr	r2, [r4, #16]
 8005500:	4313      	orrs	r3, r2
 8005502:	6962      	ldr	r2, [r4, #20]
 8005504:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8005506:	69e2      	ldr	r2, [r4, #28]
 8005508:	4303      	orrs	r3, r0
 800550a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800550c:	6a22      	ldr	r2, [r4, #32]
 800550e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005510:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005512:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8005514:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8005518:	bf02      	ittt	eq
 800551a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800551e:	4335      	orreq	r5, r6
 8005520:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8005522:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8005524:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005526:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8005528:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800552c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8005530:	d133      	bne.n	800559a <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8005532:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8005534:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8005536:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8005538:	b37d      	cbz	r5, 800559a <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800553a:	b990      	cbnz	r0, 8005562 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800553c:	2a01      	cmp	r2, #1
 800553e:	d021      	beq.n	8005584 <HAL_DMA_Init+0xc4>
 8005540:	f032 0202 	bics.w	r2, r2, #2
 8005544:	d129      	bne.n	800559a <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8005546:	01ea      	lsls	r2, r5, #7
 8005548:	d527      	bpl.n	800559a <HAL_DMA_Init+0xda>
 800554a:	e01e      	b.n	800558a <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800554c:	f7ff ff12 	bl	8005374 <HAL_GetTick>
 8005550:	1b40      	subs	r0, r0, r5
 8005552:	2805      	cmp	r0, #5
 8005554:	d9c6      	bls.n	80054e4 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8005556:	2320      	movs	r3, #32
 8005558:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800555a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800555c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8005560:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8005562:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8005566:	d114      	bne.n	8005592 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8005568:	2a03      	cmp	r2, #3
 800556a:	d816      	bhi.n	800559a <HAL_DMA_Init+0xda>
 800556c:	a001      	add	r0, pc, #4	; (adr r0, 8005574 <HAL_DMA_Init+0xb4>)
 800556e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8005572:	bf00      	nop
 8005574:	0800558b 	.word	0x0800558b
 8005578:	08005547 	.word	0x08005547
 800557c:	0800558b 	.word	0x0800558b
 8005580:	08005585 	.word	0x08005585
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8005584:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8005588:	d107      	bne.n	800559a <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800558a:	2340      	movs	r3, #64	; 0x40
 800558c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800558e:	2001      	movs	r0, #1
 8005590:	e7e4      	b.n	800555c <HAL_DMA_Init+0x9c>
    switch (tmp)
 8005592:	2a02      	cmp	r2, #2
 8005594:	d9f9      	bls.n	800558a <HAL_DMA_Init+0xca>
 8005596:	2a03      	cmp	r2, #3
 8005598:	d0d5      	beq.n	8005546 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800559a:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800559c:	4620      	mov	r0, r4
 800559e:	f7ff ff79 	bl	8005494 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80055a2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80055a4:	233f      	movs	r3, #63	; 0x3f
 80055a6:	4093      	lsls	r3, r2
 80055a8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80055aa:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80055ac:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80055ae:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80055b0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80055b4:	e7d4      	b.n	8005560 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 80055b6:	2001      	movs	r0, #1
 80055b8:	e7d2      	b.n	8005560 <HAL_DMA_Init+0xa0>
 80055ba:	bf00      	nop
 80055bc:	f010803f 	.word	0xf010803f

080055c0 <HAL_DMA_DeInit>:
{
 80055c0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 80055c2:	4605      	mov	r5, r0
 80055c4:	b320      	cbz	r0, 8005610 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80055c6:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80055ca:	2b02      	cmp	r3, #2
 80055cc:	b2dc      	uxtb	r4, r3
 80055ce:	d01d      	beq.n	800560c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 80055d0:	6803      	ldr	r3, [r0, #0]
 80055d2:	681a      	ldr	r2, [r3, #0]
 80055d4:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 80055d8:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 80055da:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 80055dc:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 80055de:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 80055e0:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 80055e2:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 80055e4:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 80055e6:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 80055e8:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80055ea:	f7ff ff53 	bl	8005494 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80055ee:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80055f0:	233f      	movs	r3, #63	; 0x3f
 80055f2:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 80055f4:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 80055f8:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 80055fc:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8005600:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8005602:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8005604:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8005608:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800560c:	4620      	mov	r0, r4
 800560e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005610:	2401      	movs	r4, #1
 8005612:	e7fb      	b.n	800560c <HAL_DMA_DeInit+0x4c>

08005614 <HAL_DMA_Abort>:
{
 8005614:	b570      	push	{r4, r5, r6, lr}
 8005616:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8005618:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800561a:	f7ff feab 	bl	8005374 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800561e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8005622:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8005624:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8005626:	d006      	beq.n	8005636 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8005628:	2380      	movs	r3, #128	; 0x80
 800562a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800562c:	2300      	movs	r3, #0
 800562e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8005632:	2001      	movs	r0, #1
}
 8005634:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8005636:	6823      	ldr	r3, [r4, #0]
 8005638:	681a      	ldr	r2, [r3, #0]
 800563a:	f022 0216 	bic.w	r2, r2, #22
 800563e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8005640:	695a      	ldr	r2, [r3, #20]
 8005642:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005646:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8005648:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800564a:	b90a      	cbnz	r2, 8005650 <HAL_DMA_Abort+0x3c>
 800564c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800564e:	b11a      	cbz	r2, 8005658 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8005650:	681a      	ldr	r2, [r3, #0]
 8005652:	f022 0208 	bic.w	r2, r2, #8
 8005656:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8005658:	681a      	ldr	r2, [r3, #0]
 800565a:	f022 0201 	bic.w	r2, r2, #1
 800565e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8005660:	6823      	ldr	r3, [r4, #0]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	f013 0301 	ands.w	r3, r3, #1
 8005668:	d10a      	bne.n	8005680 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800566a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800566c:	223f      	movs	r2, #63	; 0x3f
 800566e:	408a      	lsls	r2, r1
 8005670:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8005672:	2201      	movs	r2, #1
    __HAL_UNLOCK(hdma);
 8005674:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 8005678:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  return HAL_OK;
 800567c:	4618      	mov	r0, r3
 800567e:	e7d9      	b.n	8005634 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8005680:	f7ff fe78 	bl	8005374 <HAL_GetTick>
 8005684:	1b40      	subs	r0, r0, r5
 8005686:	2805      	cmp	r0, #5
 8005688:	d9ea      	bls.n	8005660 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800568a:	2320      	movs	r3, #32
 800568c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800568e:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8005690:	2300      	movs	r3, #0
 8005692:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8005696:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        return HAL_TIMEOUT;
 800569a:	e7cb      	b.n	8005634 <HAL_DMA_Abort+0x20>

0800569c <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 800569c:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 800569e:	6804      	ldr	r4, [r0, #0]
 80056a0:	9d04      	ldr	r5, [sp, #16]
 80056a2:	6c66      	ldr	r6, [r4, #68]	; 0x44
 80056a4:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80056a8:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 80056ac:	4333      	orrs	r3, r6
 80056ae:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80056b0:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 80056b2:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 80056b4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80056b8:	d130      	bne.n	800571c <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 80056ba:	6886      	ldr	r6, [r0, #8]
 80056bc:	b11e      	cbz	r6, 80056c6 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 80056be:	2e01      	cmp	r6, #1
 80056c0:	d103      	bne.n	80056ca <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 80056c2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 80056c6:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 80056c8:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80056ca:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 80056cc:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 80056d0:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 80056d4:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 80056d6:	d107      	bne.n	80056e8 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 80056d8:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 10U);
 80056da:	0aa9      	lsrs	r1, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 80056dc:	02db      	lsls	r3, r3, #11
 80056de:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
 80056e2:	ea43 01d0 	orr.w	r1, r3, r0, lsr #3
 80056e6:	e7ee      	b.n	80056c6 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80056e8:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 80056ea:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80056ee:	d10a      	bne.n	8005706 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 80056f0:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 11U);
 80056f2:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80056f4:	0289      	lsls	r1, r1, #10
 80056f6:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 80056fa:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 80056fe:	0fd3      	lsrs	r3, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8005700:	ea41 31c3 	orr.w	r1, r1, r3, lsl #15
 8005704:	e7df      	b.n	80056c6 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 8005706:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8005708:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800570a:	0209      	lsls	r1, r1, #8
 800570c:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8005710:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8005714:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8005716:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 800571a:	e7d4      	b.n	80056c6 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 800571c:	60e1      	str	r1, [r4, #12]
}
 800571e:	e7d3      	b.n	80056c8 <DMA2D_SetConfig+0x2c>

08005720 <HAL_DMA2D_Init>:
{
 8005720:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 8005722:	4604      	mov	r4, r0
 8005724:	b330      	cbz	r0, 8005774 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8005726:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800572a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800572e:	b91b      	cbnz	r3, 8005738 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8005730:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8005734:	f7fc f98a 	bl	8001a4c <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005738:	6822      	ldr	r2, [r4, #0]
 800573a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800573c:	2302      	movs	r3, #2
 800573e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8005742:	6813      	ldr	r3, [r2, #0]
 8005744:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005748:	430b      	orrs	r3, r1
 800574a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800574c:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800574e:	68a1      	ldr	r1, [r4, #8]
 8005750:	f023 0307 	bic.w	r3, r3, #7
 8005754:	430b      	orrs	r3, r1
 8005756:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8005758:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800575a:	68e1      	ldr	r1, [r4, #12]
 800575c:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8005760:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005764:	430b      	orrs	r3, r1
 8005766:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8005768:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800576a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800576c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800576e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 8005772:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8005774:	2001      	movs	r0, #1
 8005776:	e7fc      	b.n	8005772 <HAL_DMA2D_Init+0x52>

08005778 <HAL_DMA2D_Start_IT>:
{
 8005778:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 800577a:	f890 5038 	ldrb.w	r5, [r0, #56]	; 0x38
 800577e:	2d01      	cmp	r5, #1
{
 8005780:	4604      	mov	r4, r0
 8005782:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 8005786:	d013      	beq.n	80057b0 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005788:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800578c:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 800578e:	9d06      	ldr	r5, [sp, #24]
  __HAL_LOCK(hdma2d);
 8005790:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8005794:	9500      	str	r5, [sp, #0]
 8005796:	f7ff ff81 	bl	800569c <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800579a:	6823      	ldr	r3, [r4, #0]
 800579c:	681a      	ldr	r2, [r3, #0]
 800579e:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80057a2:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80057a4:	681a      	ldr	r2, [r3, #0]
 80057a6:	4332      	orrs	r2, r6
 80057a8:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80057aa:	2000      	movs	r0, #0
}
 80057ac:	b002      	add	sp, #8
 80057ae:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80057b0:	4628      	mov	r0, r5
 80057b2:	e7fb      	b.n	80057ac <HAL_DMA2D_Start_IT+0x34>

080057b4 <HAL_DMA2D_BlendingStart_IT>:
{
 80057b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80057b6:	4616      	mov	r6, r2
 80057b8:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 80057ba:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80057be:	2b01      	cmp	r3, #1
{
 80057c0:	4604      	mov	r4, r0
 80057c2:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 80057c6:	d017      	beq.n	80057f8 <HAL_DMA2D_BlendingStart_IT+0x44>
 80057c8:	2301      	movs	r3, #1
 80057ca:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80057ce:	6803      	ldr	r3, [r0, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80057d0:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 80057d4:	615e      	str	r6, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 80057d6:	9b07      	ldr	r3, [sp, #28]
 80057d8:	9300      	str	r3, [sp, #0]
 80057da:	9b06      	ldr	r3, [sp, #24]
 80057dc:	f7ff ff5e 	bl	800569c <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80057e0:	6823      	ldr	r3, [r4, #0]
 80057e2:	681a      	ldr	r2, [r3, #0]
 80057e4:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 80057e8:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 80057ea:	681a      	ldr	r2, [r3, #0]
 80057ec:	f042 0201 	orr.w	r2, r2, #1
 80057f0:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 80057f2:	2000      	movs	r0, #0
}
 80057f4:	b002      	add	sp, #8
 80057f6:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 80057f8:	4628      	mov	r0, r5
 80057fa:	e7fb      	b.n	80057f4 <HAL_DMA2D_BlendingStart_IT+0x40>

080057fc <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80057fc:	6802      	ldr	r2, [r0, #0]
{
 80057fe:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8005800:	6813      	ldr	r3, [r2, #0]
 8005802:	f023 0305 	bic.w	r3, r3, #5
 8005806:	f043 0304 	orr.w	r3, r3, #4
 800580a:	6013      	str	r3, [r2, #0]
{
 800580c:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 800580e:	f7ff fdb1 	bl	8005374 <HAL_GetTick>
 8005812:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8005814:	6822      	ldr	r2, [r4, #0]
 8005816:	6813      	ldr	r3, [r2, #0]
 8005818:	f013 0301 	ands.w	r3, r3, #1
 800581c:	d109      	bne.n	8005832 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800581e:	6811      	ldr	r1, [r2, #0]
 8005820:	f421 510c 	bic.w	r1, r1, #8960	; 0x2300
 8005824:	6011      	str	r1, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005826:	2201      	movs	r2, #1
 8005828:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800582c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8005830:	e00f      	b.n	8005852 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8005832:	f7ff fd9f 	bl	8005374 <HAL_GetTick>
 8005836:	1b40      	subs	r0, r0, r5
 8005838:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800583c:	d9ea      	bls.n	8005814 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800583e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005840:	f043 0320 	orr.w	r3, r3, #32
 8005844:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 8005846:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8005848:	2303      	movs	r3, #3
 800584a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800584e:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 8005852:	4618      	mov	r0, r3
}
 8005854:	bd38      	pop	{r3, r4, r5, pc}

08005856 <HAL_DMA2D_CLUTLoading_Abort>:
{
 8005856:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8005858:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 800585a:	682a      	ldr	r2, [r5, #0]
 800585c:	f042 0204 	orr.w	r2, r2, #4
 8005860:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8005862:	2901      	cmp	r1, #1
{
 8005864:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8005866:	bf14      	ite	ne
 8005868:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 800586a:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 800586c:	f7ff fd82 	bl	8005374 <HAL_GetTick>
 8005870:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8005872:	682b      	ldr	r3, [r5, #0]
 8005874:	f013 0320 	ands.w	r3, r3, #32
 8005878:	d10a      	bne.n	8005890 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 800587a:	6821      	ldr	r1, [r4, #0]
 800587c:	680a      	ldr	r2, [r1, #0]
 800587e:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8005882:	600a      	str	r2, [r1, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005884:	2201      	movs	r2, #1
 8005886:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800588a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800588e:	e00f      	b.n	80058b0 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8005890:	f7ff fd70 	bl	8005374 <HAL_GetTick>
 8005894:	1b80      	subs	r0, r0, r6
 8005896:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800589a:	d9ea      	bls.n	8005872 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800589c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800589e:	f043 0320 	orr.w	r3, r3, #32
 80058a2:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 80058a4:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80058a6:	2303      	movs	r3, #3
 80058a8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80058ac:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 80058b0:	4618      	mov	r0, r3
}
 80058b2:	bd70      	pop	{r4, r5, r6, pc}

080058b4 <HAL_DMA2D_DeInit>:
{
 80058b4:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 80058b6:	4605      	mov	r5, r0
 80058b8:	b908      	cbnz	r0, 80058be <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 80058ba:	2001      	movs	r0, #1
}
 80058bc:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 80058be:	4b16      	ldr	r3, [pc, #88]	; (8005918 <HAL_DMA2D_DeInit+0x64>)
 80058c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058c2:	0219      	lsls	r1, r3, #8
 80058c4:	d413      	bmi.n	80058ee <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 80058c6:	682b      	ldr	r3, [r5, #0]
 80058c8:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 80058ca:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 80058cc:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 80058ce:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 80058d0:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 80058d2:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 80058d4:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 80058d6:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 80058d8:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80058da:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 80058dc:	f7fc f8d8 	bl	8001a90 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80058e0:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 80058e2:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80058e6:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 80058ea:	4620      	mov	r0, r4
 80058ec:	e7e6      	b.n	80058bc <HAL_DMA2D_DeInit+0x8>
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 80058ee:	6803      	ldr	r3, [r0, #0]
 80058f0:	6819      	ldr	r1, [r3, #0]
 80058f2:	f011 0101 	ands.w	r1, r1, #1
 80058f6:	d004      	beq.n	8005902 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 80058f8:	f7ff ff80 	bl	80057fc <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80058fc:	2800      	cmp	r0, #0
 80058fe:	d0e2      	beq.n	80058c6 <HAL_DMA2D_DeInit+0x12>
 8005900:	e7db      	b.n	80058ba <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8005902:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005904:	0692      	lsls	r2, r2, #26
 8005906:	d502      	bpl.n	800590e <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8005908:	f7ff ffa5 	bl	8005856 <HAL_DMA2D_CLUTLoading_Abort>
 800590c:	e7f6      	b.n	80058fc <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 800590e:	69db      	ldr	r3, [r3, #28]
 8005910:	069b      	lsls	r3, r3, #26
 8005912:	d5d8      	bpl.n	80058c6 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8005914:	2101      	movs	r1, #1
 8005916:	e7f7      	b.n	8005908 <HAL_DMA2D_DeInit+0x54>
 8005918:	40023800 	.word	0x40023800

0800591c <HAL_DMA2D_LineEventCallback>:
 800591c:	4770      	bx	lr

0800591e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800591e:	4770      	bx	lr

08005920 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005920:	6803      	ldr	r3, [r0, #0]
{
 8005922:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005924:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8005926:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005928:	07f2      	lsls	r2, r6, #31
{
 800592a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800592c:	d514      	bpl.n	8005958 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800592e:	05e9      	lsls	r1, r5, #23
 8005930:	d512      	bpl.n	8005958 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005932:	681a      	ldr	r2, [r3, #0]
 8005934:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005938:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800593a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800593c:	f042 0201 	orr.w	r2, r2, #1
 8005940:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005942:	2201      	movs	r2, #1
 8005944:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005946:	2304      	movs	r3, #4
 8005948:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800594c:	2300      	movs	r3, #0
 800594e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8005952:	6943      	ldr	r3, [r0, #20]
 8005954:	b103      	cbz	r3, 8005958 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 8005956:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8005958:	06b2      	lsls	r2, r6, #26
 800595a:	d516      	bpl.n	800598a <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 800595c:	04ab      	lsls	r3, r5, #18
 800595e:	d514      	bpl.n	800598a <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8005960:	6823      	ldr	r3, [r4, #0]
 8005962:	681a      	ldr	r2, [r3, #0]
 8005964:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005968:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800596a:	2220      	movs	r2, #32
 800596c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800596e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005970:	f043 0302 	orr.w	r3, r3, #2
 8005974:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8005976:	2304      	movs	r3, #4
 8005978:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800597c:	2300      	movs	r3, #0
 800597e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8005982:	6963      	ldr	r3, [r4, #20]
 8005984:	b10b      	cbz	r3, 800598a <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8005986:	4620      	mov	r0, r4
 8005988:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800598a:	0730      	lsls	r0, r6, #28
 800598c:	d516      	bpl.n	80059bc <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800598e:	0529      	lsls	r1, r5, #20
 8005990:	d514      	bpl.n	80059bc <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8005992:	6823      	ldr	r3, [r4, #0]
 8005994:	681a      	ldr	r2, [r3, #0]
 8005996:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800599a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800599c:	2208      	movs	r2, #8
 800599e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80059a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80059a2:	f043 0304 	orr.w	r3, r3, #4
 80059a6:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80059a8:	2304      	movs	r3, #4
 80059aa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80059ae:	2300      	movs	r3, #0
 80059b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80059b4:	6963      	ldr	r3, [r4, #20]
 80059b6:	b10b      	cbz	r3, 80059bc <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 80059b8:	4620      	mov	r0, r4
 80059ba:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80059bc:	0772      	lsls	r2, r6, #29
 80059be:	d50b      	bpl.n	80059d8 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 80059c0:	056b      	lsls	r3, r5, #21
 80059c2:	d509      	bpl.n	80059d8 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 80059c4:	6823      	ldr	r3, [r4, #0]
 80059c6:	681a      	ldr	r2, [r3, #0]
 80059c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80059cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80059ce:	2204      	movs	r2, #4
 80059d0:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 80059d2:	4620      	mov	r0, r4
 80059d4:	f7ff ffa2 	bl	800591c <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80059d8:	07b0      	lsls	r0, r6, #30
 80059da:	d514      	bpl.n	8005a06 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 80059dc:	05a9      	lsls	r1, r5, #22
 80059de:	d512      	bpl.n	8005a06 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80059e0:	6823      	ldr	r3, [r4, #0]
 80059e2:	681a      	ldr	r2, [r3, #0]
 80059e4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80059e8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80059ea:	2202      	movs	r2, #2
 80059ec:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80059ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80059f0:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80059f2:	2301      	movs	r3, #1
 80059f4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80059f8:	2300      	movs	r3, #0
 80059fa:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 80059fe:	6923      	ldr	r3, [r4, #16]
 8005a00:	b10b      	cbz	r3, 8005a06 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8005a02:	4620      	mov	r0, r4
 8005a04:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8005a06:	06f2      	lsls	r2, r6, #27
 8005a08:	d513      	bpl.n	8005a32 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8005a0a:	04eb      	lsls	r3, r5, #19
 8005a0c:	d511      	bpl.n	8005a32 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8005a0e:	6823      	ldr	r3, [r4, #0]
 8005a10:	681a      	ldr	r2, [r3, #0]
 8005a12:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005a16:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8005a18:	2210      	movs	r2, #16
 8005a1a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8005a1c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8005a1e:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8005a20:	2301      	movs	r3, #1
 8005a22:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8005a26:	2300      	movs	r3, #0
 8005a28:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005a2c:	4620      	mov	r0, r4
 8005a2e:	f7ff ff76 	bl	800591e <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8005a32:	bd70      	pop	{r4, r5, r6, pc}

08005a34 <HAL_DMA2D_ConfigLayer>:
{
 8005a34:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
 8005a36:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8005a3a:	2b01      	cmp	r3, #1
 8005a3c:	f04f 0302 	mov.w	r3, #2
 8005a40:	d02b      	beq.n	8005a9a <HAL_DMA2D_ConfigLayer+0x66>
 8005a42:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005a44:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8005a48:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005a4c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8005a50:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8005a54:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8005a56:	4f18      	ldr	r7, [pc, #96]	; (8005ab8 <HAL_DMA2D_ConfigLayer+0x84>)
 8005a58:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005a5c:	3c09      	subs	r4, #9
 8005a5e:	2c01      	cmp	r4, #1
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8005a60:	bf9c      	itt	ls
 8005a62:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8005a66:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005a68:	ea4f 1601 	mov.w	r6, r1, lsl #4
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005a6c:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8005a6e:	bf88      	it	hi
 8005a70:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8005a74:	b999      	cbnz	r1, 8005a9e <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8005a76:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005a78:	4039      	ands	r1, r7
 8005a7a:	430a      	orrs	r2, r1
 8005a7c:	625a      	str	r2, [r3, #36]	; 0x24
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005a7e:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8005a80:	6982      	ldr	r2, [r0, #24]
 8005a82:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005a84:	d803      	bhi.n	8005a8e <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8005a86:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8005a88:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8005a8c:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8005a8e:	2301      	movs	r3, #1
 8005a90:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 8005a94:	2300      	movs	r3, #0
 8005a96:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8005a9a:	4618      	mov	r0, r3
}
 8005a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8005a9e:	69d9      	ldr	r1, [r3, #28]
 8005aa0:	4039      	ands	r1, r7
 8005aa2:	430a      	orrs	r2, r1
 8005aa4:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005aa6:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005aa8:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005aaa:	6992      	ldr	r2, [r2, #24]
 8005aac:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8005aae:	bf9c      	itt	ls
 8005ab0:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8005ab4:	621d      	strls	r5, [r3, #32]
 8005ab6:	e7ea      	b.n	8005a8e <HAL_DMA2D_ConfigLayer+0x5a>
 8005ab8:	00fcfff0 	.word	0x00fcfff0

08005abc <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8005abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ac0:	4607      	mov	r7, r0
 8005ac2:	460d      	mov	r5, r1
 8005ac4:	4614      	mov	r4, r2
 8005ac6:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8005ac8:	f7ff fc54 	bl	8005374 <HAL_GetTick>
 8005acc:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8005ace:	683b      	ldr	r3, [r7, #0]
 8005ad0:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8005ad2:	07d2      	lsls	r2, r2, #31
 8005ad4:	d50a      	bpl.n	8005aec <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8005ad6:	9906      	ldr	r1, [sp, #24]
 8005ad8:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 8005adc:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8005ae0:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8005ae4:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8005ae6:	2000      	movs	r0, #0
}
 8005ae8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8005aec:	f7ff fc42 	bl	8005374 <HAL_GetTick>
 8005af0:	eba0 0008 	sub.w	r0, r0, r8
 8005af4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005af8:	d9e9      	bls.n	8005ace <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8005afa:	2003      	movs	r0, #3
 8005afc:	e7f4      	b.n	8005ae8 <DSI_ShortWrite+0x2c>

08005afe <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005afe:	7c03      	ldrb	r3, [r0, #16]
 8005b00:	2b01      	cmp	r3, #1
 8005b02:	d05d      	beq.n	8005bc0 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8005b04:	6803      	ldr	r3, [r0, #0]
 8005b06:	2200      	movs	r2, #0
 8005b08:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8005b0c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8005b10:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8005b12:	bf48      	it	mi
 8005b14:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8005b18:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8005b1a:	bf42      	ittt	mi
 8005b1c:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8005b20:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8005b24:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8005b28:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8005b2a:	bf42      	ittt	mi
 8005b2c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8005b30:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8005b34:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8005b38:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8005b3a:	bf42      	ittt	mi
 8005b3c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005b40:	f042 0201 	orrmi.w	r2, r2, #1
 8005b44:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8005b48:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8005b4a:	bf42      	ittt	mi
 8005b4c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005b50:	f042 0202 	orrmi.w	r2, r2, #2
 8005b54:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8005b58:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8005b5a:	bf42      	ittt	mi
 8005b5c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005b60:	f042 020c 	orrmi.w	r2, r2, #12
 8005b64:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8005b68:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8005b6a:	bf42      	ittt	mi
 8005b6c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005b70:	f042 0210 	orrmi.w	r2, r2, #16
 8005b74:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8005b78:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8005b7a:	bf42      	ittt	mi
 8005b7c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005b80:	f042 0220 	orrmi.w	r2, r2, #32
 8005b84:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8005b88:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8005b8a:	bf42      	ittt	mi
 8005b8c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005b90:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8005b94:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8005b98:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8005b9a:	bf42      	ittt	mi
 8005b9c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005ba0:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8005ba4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8005ba8:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8005baa:	bf42      	ittt	mi
 8005bac:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8005bb0:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8005bb4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8005bb8:	2300      	movs	r3, #0
 8005bba:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005bbc:	4618      	mov	r0, r3
 8005bbe:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005bc0:	2002      	movs	r0, #2
}
 8005bc2:	4770      	bx	lr

08005bc4 <HAL_DSI_Init>:
{
 8005bc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005bc6:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8005bc8:	4604      	mov	r4, r0
 8005bca:	2800      	cmp	r0, #0
 8005bcc:	f000 80a6 	beq.w	8005d1c <HAL_DSI_Init+0x158>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8005bd0:	7c43      	ldrb	r3, [r0, #17]
 8005bd2:	b90b      	cbnz	r3, 8005bd8 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8005bd4:	f7fb ff6e 	bl	8001ab4 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8005bd8:	2303      	movs	r3, #3
 8005bda:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8005bdc:	2300      	movs	r3, #0
 8005bde:	9300      	str	r3, [sp, #0]
 8005be0:	6823      	ldr	r3, [r4, #0]
 8005be2:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8005be6:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8005bea:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8005bee:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8005bf2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005bf6:	9300      	str	r3, [sp, #0]
 8005bf8:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8005bfa:	f7ff fbbb 	bl	8005374 <HAL_GetTick>
 8005bfe:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8005c00:	6822      	ldr	r2, [r4, #0]
 8005c02:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8005c06:	04d9      	lsls	r1, r3, #19
 8005c08:	d577      	bpl.n	8005cfa <HAL_DSI_Init+0x136>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8005c0a:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8005c0e:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8005c12:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8005c16:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 8005c1a:	e9d5 0300 	ldrd	r0, r3, [r5]
 8005c1e:	02db      	lsls	r3, r3, #11
 8005c20:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8005c24:	68a8      	ldr	r0, [r5, #8]
 8005c26:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8005c2a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8005c2e:	430b      	orrs	r3, r1
 8005c30:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8005c34:	2300      	movs	r3, #0
 8005c36:	9301      	str	r3, [sp, #4]
 8005c38:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8005c3c:	f043 0301 	orr.w	r3, r3, #1
 8005c40:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8005c44:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8005c48:	f003 0301 	and.w	r3, r3, #1
 8005c4c:	9301      	str	r3, [sp, #4]
 8005c4e:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8005c50:	f7ff fb90 	bl	8005374 <HAL_GetTick>
 8005c54:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8005c56:	6823      	ldr	r3, [r4, #0]
 8005c58:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8005c5c:	05d2      	lsls	r2, r2, #23
 8005c5e:	d556      	bpl.n	8005d0e <HAL_DSI_Init+0x14a>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8005c60:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8005c64:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8005c66:	f042 0206 	orr.w	r2, r2, #6
 8005c6a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8005c6e:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005c72:	f022 0203 	bic.w	r2, r2, #3
 8005c76:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8005c7a:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8005c7e:	430a      	orrs	r2, r1
 8005c80:	f042 0201 	orr.w	r2, r2, #1
 8005c84:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8005c88:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005c8c:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8005c8e:	f022 0203 	bic.w	r2, r2, #3
 8005c92:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8005c96:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005c9a:	430a      	orrs	r2, r1
 8005c9c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8005ca0:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005ca2:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8005ca4:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005ca8:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8005caa:	689a      	ldr	r2, [r3, #8]
 8005cac:	430a      	orrs	r2, r1
 8005cae:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8005cb0:	686a      	ldr	r2, [r5, #4]
 8005cb2:	491b      	ldr	r1, [pc, #108]	; (8005d20 <HAL_DSI_Init+0x15c>)
 8005cb4:	2a01      	cmp	r2, #1
 8005cb6:	bf38      	it	cc
 8005cb8:	2201      	movcc	r2, #1
 8005cba:	434a      	muls	r2, r1
 8005cbc:	68a9      	ldr	r1, [r5, #8]
 8005cbe:	f001 0103 	and.w	r1, r1, #3
 8005cc2:	408a      	lsls	r2, r1
 8005cc4:	6829      	ldr	r1, [r5, #0]
 8005cc6:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8005cca:	4341      	muls	r1, r0
 8005ccc:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8005cd0:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8005cd4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8005cd8:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8005cdc:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8005ce0:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8005ce2:	430a      	orrs	r2, r1
 8005ce4:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8005ce8:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8005cec:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8005cf0:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8005cf2:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8005cf4:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8005cf6:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8005cf8:	e007      	b.n	8005d0a <HAL_DSI_Init+0x146>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005cfa:	f7ff fb3b 	bl	8005374 <HAL_GetTick>
 8005cfe:	1b80      	subs	r0, r0, r6
 8005d00:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005d04:	f67f af7c 	bls.w	8005c00 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8005d08:	2003      	movs	r0, #3
}
 8005d0a:	b002      	add	sp, #8
 8005d0c:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8005d0e:	f7ff fb31 	bl	8005374 <HAL_GetTick>
 8005d12:	1b80      	subs	r0, r0, r6
 8005d14:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005d18:	d99d      	bls.n	8005c56 <HAL_DSI_Init+0x92>
 8005d1a:	e7f5      	b.n	8005d08 <HAL_DSI_Init+0x144>
    return HAL_ERROR;
 8005d1c:	2001      	movs	r0, #1
 8005d1e:	e7f4      	b.n	8005d0a <HAL_DSI_Init+0x146>
 8005d20:	003d0900 	.word	0x003d0900

08005d24 <HAL_DSI_ErrorCallback>:
 8005d24:	4770      	bx	lr

08005d26 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8005d26:	6803      	ldr	r3, [r0, #0]
 8005d28:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8005d2c:	07d1      	lsls	r1, r2, #31
{
 8005d2e:	b510      	push	{r4, lr}
 8005d30:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8005d32:	d508      	bpl.n	8005d46 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8005d34:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005d38:	07d2      	lsls	r2, r2, #31
 8005d3a:	d504      	bpl.n	8005d46 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8005d3c:	2201      	movs	r2, #1
 8005d3e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8005d42:	f7fa fec3 	bl	8000acc <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8005d46:	6823      	ldr	r3, [r4, #0]
 8005d48:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8005d4c:	0791      	lsls	r1, r2, #30
 8005d4e:	d509      	bpl.n	8005d64 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8005d50:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005d54:	0792      	lsls	r2, r2, #30
 8005d56:	d505      	bpl.n	8005d64 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8005d58:	2202      	movs	r2, #2
 8005d5a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8005d5e:	4620      	mov	r0, r4
 8005d60:	f7fa fee8 	bl	8000b34 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8005d64:	69a3      	ldr	r3, [r4, #24]
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d04e      	beq.n	8005e08 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8005d6a:	6821      	ldr	r1, [r4, #0]
 8005d6c:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8005d70:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8005d74:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8005d78:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8005d7a:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8005d7e:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8005d80:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8005d82:	b119      	cbz	r1, 8005d8c <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8005d84:	6961      	ldr	r1, [r4, #20]
 8005d86:	f041 0101 	orr.w	r1, r1, #1
 8005d8a:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8005d8c:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8005d90:	bf1e      	ittt	ne
 8005d92:	6962      	ldrne	r2, [r4, #20]
 8005d94:	f042 0202 	orrne.w	r2, r2, #2
 8005d98:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8005d9a:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8005d9c:	bf42      	ittt	mi
 8005d9e:	6962      	ldrmi	r2, [r4, #20]
 8005da0:	f042 0204 	orrmi.w	r2, r2, #4
 8005da4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8005da6:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8005da8:	bf42      	ittt	mi
 8005daa:	6962      	ldrmi	r2, [r4, #20]
 8005dac:	f042 0208 	orrmi.w	r2, r2, #8
 8005db0:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8005db2:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8005db6:	bf1e      	ittt	ne
 8005db8:	6962      	ldrne	r2, [r4, #20]
 8005dba:	f042 0210 	orrne.w	r2, r2, #16
 8005dbe:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8005dc0:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8005dc2:	bf42      	ittt	mi
 8005dc4:	6962      	ldrmi	r2, [r4, #20]
 8005dc6:	f042 0220 	orrmi.w	r2, r2, #32
 8005dca:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8005dcc:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8005dce:	bf42      	ittt	mi
 8005dd0:	6962      	ldrmi	r2, [r4, #20]
 8005dd2:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8005dd6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8005dd8:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8005dda:	bf42      	ittt	mi
 8005ddc:	6962      	ldrmi	r2, [r4, #20]
 8005dde:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8005de2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8005de4:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8005de6:	bf42      	ittt	mi
 8005de8:	6962      	ldrmi	r2, [r4, #20]
 8005dea:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8005dee:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8005df0:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8005df4:	bf1e      	ittt	ne
 8005df6:	6963      	ldrne	r3, [r4, #20]
 8005df8:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8005dfc:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8005dfe:	6963      	ldr	r3, [r4, #20]
 8005e00:	b113      	cbz	r3, 8005e08 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8005e02:	4620      	mov	r0, r4
 8005e04:	f7ff ff8e 	bl	8005d24 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8005e08:	bd10      	pop	{r4, pc}

08005e0a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005e0a:	7c03      	ldrb	r3, [r0, #16]
 8005e0c:	2b01      	cmp	r3, #1
 8005e0e:	d00b      	beq.n	8005e28 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8005e10:	6803      	ldr	r3, [r0, #0]
 8005e12:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005e14:	f022 0203 	bic.w	r2, r2, #3
 8005e18:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8005e1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005e1c:	4311      	orrs	r1, r2
 8005e1e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005e20:	2300      	movs	r3, #0
 8005e22:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005e24:	4618      	mov	r0, r3
 8005e26:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005e28:	2002      	movs	r0, #2
}
 8005e2a:	4770      	bx	lr

08005e2c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8005e2c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005e2e:	7c03      	ldrb	r3, [r0, #16]
 8005e30:	2b01      	cmp	r3, #1
 8005e32:	d06a      	beq.n	8005f0a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8005e34:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8005e36:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8005e38:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e3a:	f042 0201 	orr.w	r2, r2, #1
 8005e3e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8005e40:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8005e44:	f022 0201 	bic.w	r2, r2, #1
 8005e48:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8005e4c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8005e50:	f042 0201 	orr.w	r2, r2, #1
 8005e54:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8005e58:	68da      	ldr	r2, [r3, #12]
 8005e5a:	f022 0203 	bic.w	r2, r2, #3
 8005e5e:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8005e60:	68da      	ldr	r2, [r3, #12]
 8005e62:	4322      	orrs	r2, r4
 8005e64:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8005e66:	695a      	ldr	r2, [r3, #20]
 8005e68:	f022 0207 	bic.w	r2, r2, #7
 8005e6c:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8005e6e:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8005e72:	432a      	orrs	r2, r5
 8005e74:	694d      	ldr	r5, [r1, #20]
 8005e76:	695c      	ldr	r4, [r3, #20]
 8005e78:	432a      	orrs	r2, r5
 8005e7a:	4322      	orrs	r2, r4
 8005e7c:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8005e7e:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8005e80:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8005e82:	f022 020f 	bic.w	r2, r2, #15
 8005e86:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8005e88:	691c      	ldr	r4, [r3, #16]
 8005e8a:	432c      	orrs	r4, r5
 8005e8c:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8005e8e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005e92:	f024 040e 	bic.w	r4, r4, #14
 8005e96:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8005e9a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005e9e:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8005ea0:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8005ea4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8005ea8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005eaa:	0c12      	lsrs	r2, r2, #16
 8005eac:	0412      	lsls	r2, r2, #16
 8005eae:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8005eb0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8005eb2:	4322      	orrs	r2, r4
 8005eb4:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8005eb6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8005eba:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8005ebe:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005ec2:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8005ec6:	432a      	orrs	r2, r5
 8005ec8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8005eca:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8005ece:	432a      	orrs	r2, r5
 8005ed0:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005ed2:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8005ed4:	432a      	orrs	r2, r5
 8005ed6:	4322      	orrs	r2, r4
 8005ed8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8005edc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005ede:	f022 0201 	bic.w	r2, r2, #1
 8005ee2:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8005ee4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8005ee6:	430a      	orrs	r2, r1
 8005ee8:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8005eea:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005eee:	f042 0201 	orr.w	r2, r2, #1
 8005ef2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8005ef6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8005efa:	f042 0202 	orr.w	r2, r2, #2
 8005efe:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005f02:	2300      	movs	r3, #0
 8005f04:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005f06:	4618      	mov	r0, r3
}
 8005f08:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005f0a:	2002      	movs	r0, #2
 8005f0c:	e7fc      	b.n	8005f08 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08005f10 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8005f10:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005f12:	7c03      	ldrb	r3, [r0, #16]
 8005f14:	2b01      	cmp	r3, #1
 8005f16:	d02a      	beq.n	8005f6e <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8005f18:	6802      	ldr	r2, [r0, #0]
 8005f1a:	4b16      	ldr	r3, [pc, #88]	; (8005f74 <HAL_DSI_ConfigCommand+0x64>)
 8005f1c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8005f1e:	4023      	ands	r3, r4
 8005f20:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005f22:	e9d1 3500 	ldrd	r3, r5, [r1]
 8005f26:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8005f28:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005f2a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8005f2c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8005f2e:	68cd      	ldr	r5, [r1, #12]
 8005f30:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8005f32:	690d      	ldr	r5, [r1, #16]
 8005f34:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8005f36:	694d      	ldr	r5, [r1, #20]
 8005f38:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8005f3a:	698d      	ldr	r5, [r1, #24]
 8005f3c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8005f3e:	69cd      	ldr	r5, [r1, #28]
 8005f40:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8005f42:	6a0d      	ldr	r5, [r1, #32]
 8005f44:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8005f46:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8005f48:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8005f4a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8005f4c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8005f4e:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8005f50:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8005f52:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8005f54:	4323      	orrs	r3, r4
 8005f56:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8005f58:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8005f5a:	f023 0302 	bic.w	r3, r3, #2
 8005f5e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8005f60:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8005f62:	430b      	orrs	r3, r1
 8005f64:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005f66:	2300      	movs	r3, #0
 8005f68:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005f6a:	4618      	mov	r0, r3
}
 8005f6c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8005f6e:	2002      	movs	r0, #2
 8005f70:	e7fc      	b.n	8005f6c <HAL_DSI_ConfigCommand+0x5c>
 8005f72:	bf00      	nop
 8005f74:	fef080ff 	.word	0xfef080ff

08005f78 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005f78:	7c03      	ldrb	r3, [r0, #16]
 8005f7a:	2b01      	cmp	r3, #1
 8005f7c:	d00b      	beq.n	8005f96 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8005f7e:	6803      	ldr	r3, [r0, #0]
 8005f80:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005f82:	f022 021f 	bic.w	r2, r2, #31
 8005f86:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8005f88:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005f8a:	4311      	orrs	r1, r2
 8005f8c:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8005f8e:	2300      	movs	r3, #0
 8005f90:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8005f92:	4618      	mov	r0, r3
 8005f94:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8005f96:	2002      	movs	r0, #2
}
 8005f98:	4770      	bx	lr

08005f9a <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8005f9a:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8005f9c:	7c03      	ldrb	r3, [r0, #16]
 8005f9e:	2b01      	cmp	r3, #1
 8005fa0:	d035      	beq.n	800600e <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005fa2:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005fa6:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8005fa8:	4294      	cmp	r4, r2
 8005faa:	bf38      	it	cc
 8005fac:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8005fae:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005fb2:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8005fb6:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8005fba:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8005fbe:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8005fc2:	4322      	orrs	r2, r4
 8005fc4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8005fc8:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8005fcc:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8005fd0:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8005fd4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8005fd8:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8005fda:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8005fde:	690d      	ldr	r5, [r1, #16]
 8005fe0:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005fe4:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8005fe6:	432a      	orrs	r2, r5
 8005fe8:	4322      	orrs	r2, r4
 8005fea:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8005fee:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005ff2:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8005ff6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8005ffa:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8005ffe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006002:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006006:	2300      	movs	r3, #0
 8006008:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800600a:	4618      	mov	r0, r3
}
 800600c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800600e:	2002      	movs	r0, #2
 8006010:	e7fc      	b.n	800600c <HAL_DSI_ConfigPhyTimer+0x72>
	...

08006014 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8006014:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006016:	7c03      	ldrb	r3, [r0, #16]
 8006018:	2b01      	cmp	r3, #1
 800601a:	d05c      	beq.n	80060d6 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800601c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800601e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006020:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8006022:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006024:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006028:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800602a:	689a      	ldr	r2, [r3, #8]
 800602c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8006030:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8006032:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8006034:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8006036:	b292      	uxth	r2, r2
 8006038:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800603a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800603c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006040:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8006042:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8006044:	4a25      	ldr	r2, [pc, #148]	; (80060dc <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8006046:	4014      	ands	r4, r2
 8006048:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800604a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800604c:	432c      	orrs	r4, r5
 800604e:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8006050:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8006052:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8006054:	4014      	ands	r4, r2
 8006056:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8006058:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800605a:	432c      	orrs	r4, r5
 800605c:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800605e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8006062:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8006064:	4014      	ands	r4, r2
 8006066:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800606a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800606e:	432c      	orrs	r4, r5
 8006070:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8006074:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8006078:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800607a:	4014      	ands	r4, r2
 800607c:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8006080:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006084:	432c      	orrs	r4, r5
 8006086:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800608a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800608e:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8006092:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8006096:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800609a:	698d      	ldr	r5, [r1, #24]
 800609c:	432c      	orrs	r4, r5
 800609e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80060a2:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80060a6:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80060a8:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80060aa:	4014      	ands	r4, r2
 80060ac:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80060b0:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80060b4:	432c      	orrs	r4, r5
 80060b6:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80060ba:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80060be:	4022      	ands	r2, r4
 80060c0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80060c4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80060c8:	430a      	orrs	r2, r1
 80060ca:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80060ce:	2300      	movs	r3, #0
 80060d0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80060d2:	4618      	mov	r0, r3
}
 80060d4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80060d6:	2002      	movs	r0, #2
 80060d8:	e7fc      	b.n	80060d4 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80060da:	bf00      	nop
 80060dc:	ffff0000 	.word	0xffff0000

080060e0 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80060e0:	7c03      	ldrb	r3, [r0, #16]
 80060e2:	2b01      	cmp	r3, #1
{
 80060e4:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80060e6:	d01c      	beq.n	8006122 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80060e8:	6802      	ldr	r2, [r0, #0]
 80060ea:	2300      	movs	r3, #0
 80060ec:	9300      	str	r3, [sp, #0]
 80060ee:	6851      	ldr	r1, [r2, #4]
 80060f0:	f041 0101 	orr.w	r1, r1, #1
 80060f4:	6051      	str	r1, [r2, #4]
 80060f6:	6851      	ldr	r1, [r2, #4]
 80060f8:	f001 0101 	and.w	r1, r1, #1
 80060fc:	9100      	str	r1, [sp, #0]
 80060fe:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006100:	9301      	str	r3, [sp, #4]
 8006102:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8006106:	f041 0108 	orr.w	r1, r1, #8
 800610a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800610e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006112:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006114:	f002 0208 	and.w	r2, r2, #8
 8006118:	9201      	str	r2, [sp, #4]
 800611a:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800611c:	4618      	mov	r0, r3
}
 800611e:	b002      	add	sp, #8
 8006120:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006122:	2002      	movs	r0, #2
 8006124:	e7fb      	b.n	800611e <HAL_DSI_Start+0x3e>

08006126 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006126:	7c03      	ldrb	r3, [r0, #16]
 8006128:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800612a:	bf1f      	itttt	ne
 800612c:	6802      	ldrne	r2, [r0, #0]
 800612e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8006132:	f043 0304 	orrne.w	r3, r3, #4
 8006136:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800613a:	bf1d      	ittte	ne
 800613c:	2300      	movne	r3, #0
 800613e:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8006140:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8006142:	2002      	moveq	r0, #2
}
 8006144:	4770      	bx	lr

08006146 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8006146:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8006148:	7c05      	ldrb	r5, [r0, #16]
 800614a:	2d01      	cmp	r5, #1
{
 800614c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800614e:	d009      	beq.n	8006164 <HAL_DSI_ShortWrite+0x1e>
 8006150:	2501      	movs	r5, #1
 8006152:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8006154:	9d06      	ldr	r5, [sp, #24]
 8006156:	9500      	str	r5, [sp, #0]
 8006158:	f7ff fcb0 	bl	8005abc <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800615c:	2300      	movs	r3, #0
 800615e:	7423      	strb	r3, [r4, #16]

  return status;
}
 8006160:	b003      	add	sp, #12
 8006162:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006164:	2002      	movs	r0, #2
 8006166:	e7fb      	b.n	8006160 <HAL_DSI_ShortWrite+0x1a>

08006168 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8006168:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800616c:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800616e:	7c03      	ldrb	r3, [r0, #16]
 8006170:	2b01      	cmp	r3, #1
{
 8006172:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8006176:	4606      	mov	r6, r0
 8006178:	460f      	mov	r7, r1
 800617a:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800617c:	d053      	beq.n	8006226 <HAL_DSI_LongWrite+0xbe>
 800617e:	2301      	movs	r3, #1
 8006180:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8006182:	f7ff f8f7 	bl	8005374 <HAL_GetTick>
 8006186:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8006188:	6831      	ldr	r1, [r6, #0]
 800618a:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 800618c:	f013 0a01 	ands.w	sl, r3, #1
 8006190:	d01a      	beq.n	80061c8 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8006192:	2c03      	cmp	r4, #3
 8006194:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 8006196:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800619a:	bf28      	it	cs
 800619c:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800619e:	4282      	cmp	r2, r0
 80061a0:	d11e      	bne.n	80061e0 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80061a2:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 80061a4:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 80061a8:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80061aa:	bb1b      	cbnz	r3, 80061f4 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80061ac:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80061ae:	0222      	lsls	r2, r4, #8
 80061b0:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 80061b4:	b292      	uxth	r2, r2
 80061b6:	0224      	lsls	r4, r4, #8
 80061b8:	4315      	orrs	r5, r2
 80061ba:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80061be:	432c      	orrs	r4, r5
 80061c0:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80061c2:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 80061c4:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80061c6:	e009      	b.n	80061dc <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80061c8:	f7ff f8d4 	bl	8005374 <HAL_GetTick>
 80061cc:	eba0 000b 	sub.w	r0, r0, fp
 80061d0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80061d4:	d9d8      	bls.n	8006188 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 80061d6:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 80061da:	2003      	movs	r0, #3
}
 80061dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 80061e0:	f818 3002 	ldrb.w	r3, [r8, r2]
 80061e4:	3201      	adds	r2, #1
 80061e6:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 80061ea:	fa03 f30c 	lsl.w	r3, r3, ip
 80061ee:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 80061f2:	e7d4      	b.n	800619e <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80061f4:	2b04      	cmp	r3, #4
    fifoword = 0U;
 80061f6:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80061fa:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 80061fc:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80061fe:	bf28      	it	cs
 8006200:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006204:	f812 8000 	ldrb.w	r8, [r2, r0]
 8006208:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800620c:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800620e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8006212:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006214:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8006218:	d1f4      	bne.n	8006204 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800621a:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 800621e:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8006222:	4472      	add	r2, lr
 8006224:	e7c1      	b.n	80061aa <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8006226:	2002      	movs	r0, #2
 8006228:	e7d8      	b.n	80061dc <HAL_DSI_LongWrite+0x74>

0800622a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800622a:	7c03      	ldrb	r3, [r0, #16]
 800622c:	2b01      	cmp	r3, #1
 800622e:	d010      	beq.n	8006252 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8006230:	6803      	ldr	r3, [r0, #0]
 8006232:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8006236:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800623a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800623e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8006242:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8006246:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800624a:	2300      	movs	r3, #0
 800624c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800624e:	4618      	mov	r0, r3
 8006250:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006252:	2002      	movs	r0, #2
}
 8006254:	4770      	bx	lr
	...

08006258 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006258:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800625c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006420 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006260:	4a6d      	ldr	r2, [pc, #436]	; (8006418 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006262:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006424 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006266:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006268:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800626a:	2401      	movs	r4, #1
 800626c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800626e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006272:	43ac      	bics	r4, r5
 8006274:	f040 80b7 	bne.w	80063e6 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006278:	684c      	ldr	r4, [r1, #4]
 800627a:	f024 0c10 	bic.w	ip, r4, #16
 800627e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006282:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006284:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006288:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800628c:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800628e:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006292:	d811      	bhi.n	80062b8 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006294:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006296:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800629a:	68cf      	ldr	r7, [r1, #12]
 800629c:	fa07 f70e 	lsl.w	r7, r7, lr
 80062a0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80062a4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80062a6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80062a8:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80062ac:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80062b0:	409f      	lsls	r7, r3
 80062b2:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80062b6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80062b8:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80062ba:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80062be:	688f      	ldr	r7, [r1, #8]
 80062c0:	fa07 f70e 	lsl.w	r7, r7, lr
 80062c4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80062c8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80062cc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80062ce:	d116      	bne.n	80062fe <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80062d0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80062d4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80062d8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80062dc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80062e0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80062e4:	f04f 0c0f 	mov.w	ip, #15
 80062e8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80062ec:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80062f0:	690f      	ldr	r7, [r1, #16]
 80062f2:	fa07 f70b 	lsl.w	r7, r7, fp
 80062f6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80062fa:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80062fe:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006300:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006302:	f004 0703 	and.w	r7, r4, #3
 8006306:	fa07 f70e 	lsl.w	r7, r7, lr
 800630a:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 800630c:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800630e:	00e5      	lsls	r5, r4, #3
 8006310:	d569      	bpl.n	80063e6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006312:	f04f 0b00 	mov.w	fp, #0
 8006316:	f8cd b004 	str.w	fp, [sp, #4]
 800631a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800631e:	4d3f      	ldr	r5, [pc, #252]	; (800641c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006320:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006324:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006328:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800632c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006330:	9701      	str	r7, [sp, #4]
 8006332:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006334:	f023 0703 	bic.w	r7, r3, #3
 8006338:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800633c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006340:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006344:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006348:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800634c:	f04f 0c0f 	mov.w	ip, #15
 8006350:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006354:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006356:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800635a:	d04b      	beq.n	80063f4 <HAL_GPIO_Init+0x19c>
 800635c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006360:	42a8      	cmp	r0, r5
 8006362:	d049      	beq.n	80063f8 <HAL_GPIO_Init+0x1a0>
 8006364:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006368:	42a8      	cmp	r0, r5
 800636a:	d047      	beq.n	80063fc <HAL_GPIO_Init+0x1a4>
 800636c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006370:	42a8      	cmp	r0, r5
 8006372:	d045      	beq.n	8006400 <HAL_GPIO_Init+0x1a8>
 8006374:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006378:	42a8      	cmp	r0, r5
 800637a:	d043      	beq.n	8006404 <HAL_GPIO_Init+0x1ac>
 800637c:	4548      	cmp	r0, r9
 800637e:	d043      	beq.n	8006408 <HAL_GPIO_Init+0x1b0>
 8006380:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006384:	42a8      	cmp	r0, r5
 8006386:	d041      	beq.n	800640c <HAL_GPIO_Init+0x1b4>
 8006388:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800638c:	42a8      	cmp	r0, r5
 800638e:	d03f      	beq.n	8006410 <HAL_GPIO_Init+0x1b8>
 8006390:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006394:	42a8      	cmp	r0, r5
 8006396:	d03d      	beq.n	8006414 <HAL_GPIO_Init+0x1bc>
 8006398:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800639c:	42a8      	cmp	r0, r5
 800639e:	bf0c      	ite	eq
 80063a0:	2509      	moveq	r5, #9
 80063a2:	250a      	movne	r5, #10
 80063a4:	fa05 f50e 	lsl.w	r5, r5, lr
 80063a8:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80063ac:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80063ae:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80063b0:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80063b2:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80063b6:	bf0c      	ite	eq
 80063b8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80063ba:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80063bc:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80063be:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80063c0:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80063c4:	bf0c      	ite	eq
 80063c6:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80063c8:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80063ca:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80063cc:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80063ce:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80063d2:	bf0c      	ite	eq
 80063d4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80063d6:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80063d8:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80063da:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80063dc:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80063de:	bf54      	ite	pl
 80063e0:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80063e2:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80063e4:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80063e6:	3301      	adds	r3, #1
 80063e8:	2b10      	cmp	r3, #16
 80063ea:	f47f af3d 	bne.w	8006268 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80063ee:	b003      	add	sp, #12
 80063f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80063f4:	465d      	mov	r5, fp
 80063f6:	e7d5      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 80063f8:	2501      	movs	r5, #1
 80063fa:	e7d3      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 80063fc:	2502      	movs	r5, #2
 80063fe:	e7d1      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 8006400:	2503      	movs	r5, #3
 8006402:	e7cf      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 8006404:	2504      	movs	r5, #4
 8006406:	e7cd      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 8006408:	2505      	movs	r5, #5
 800640a:	e7cb      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 800640c:	2506      	movs	r5, #6
 800640e:	e7c9      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 8006410:	2507      	movs	r5, #7
 8006412:	e7c7      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 8006414:	2508      	movs	r5, #8
 8006416:	e7c5      	b.n	80063a4 <HAL_GPIO_Init+0x14c>
 8006418:	40013c00 	.word	0x40013c00
 800641c:	40020000 	.word	0x40020000
 8006420:	40023800 	.word	0x40023800
 8006424:	40021400 	.word	0x40021400

08006428 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8006428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800642c:	4c4a      	ldr	r4, [pc, #296]	; (8006558 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800642e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8006560 <HAL_GPIO_DeInit+0x138>
 8006432:	f8df a130 	ldr.w	sl, [pc, #304]	; 8006564 <HAL_GPIO_DeInit+0x13c>
 8006436:	f8df b130 	ldr.w	fp, [pc, #304]	; 8006568 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800643a:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800643c:	2301      	movs	r3, #1
 800643e:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8006442:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8006446:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800644a:	d16e      	bne.n	800652a <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800644c:	f022 0503 	bic.w	r5, r2, #3
 8006450:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8006454:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006458:	4b40      	ldr	r3, [pc, #256]	; (800655c <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800645a:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800645e:	f002 0c03 	and.w	ip, r2, #3
 8006462:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006466:	260f      	movs	r6, #15
 8006468:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800646c:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800646e:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006472:	d05f      	beq.n	8006534 <HAL_GPIO_DeInit+0x10c>
 8006474:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006478:	4298      	cmp	r0, r3
 800647a:	d05d      	beq.n	8006538 <HAL_GPIO_DeInit+0x110>
 800647c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006480:	4298      	cmp	r0, r3
 8006482:	d05b      	beq.n	800653c <HAL_GPIO_DeInit+0x114>
 8006484:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006488:	4298      	cmp	r0, r3
 800648a:	d059      	beq.n	8006540 <HAL_GPIO_DeInit+0x118>
 800648c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006490:	4298      	cmp	r0, r3
 8006492:	d057      	beq.n	8006544 <HAL_GPIO_DeInit+0x11c>
 8006494:	4548      	cmp	r0, r9
 8006496:	d057      	beq.n	8006548 <HAL_GPIO_DeInit+0x120>
 8006498:	4550      	cmp	r0, sl
 800649a:	d057      	beq.n	800654c <HAL_GPIO_DeInit+0x124>
 800649c:	4558      	cmp	r0, fp
 800649e:	d057      	beq.n	8006550 <HAL_GPIO_DeInit+0x128>
 80064a0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80064a4:	4298      	cmp	r0, r3
 80064a6:	d055      	beq.n	8006554 <HAL_GPIO_DeInit+0x12c>
 80064a8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80064ac:	4298      	cmp	r0, r3
 80064ae:	bf0c      	ite	eq
 80064b0:	2309      	moveq	r3, #9
 80064b2:	230a      	movne	r3, #10
 80064b4:	fa03 f30c 	lsl.w	r3, r3, ip
 80064b8:	4543      	cmp	r3, r8
 80064ba:	d113      	bne.n	80064e4 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80064bc:	6823      	ldr	r3, [r4, #0]
 80064be:	ea23 0307 	bic.w	r3, r3, r7
 80064c2:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80064c4:	6863      	ldr	r3, [r4, #4]
 80064c6:	ea23 0307 	bic.w	r3, r3, r7
 80064ca:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80064cc:	68a3      	ldr	r3, [r4, #8]
 80064ce:	ea23 0307 	bic.w	r3, r3, r7
 80064d2:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80064d4:	68e3      	ldr	r3, [r4, #12]
 80064d6:	ea23 0307 	bic.w	r3, r3, r7
 80064da:	60e3      	str	r3, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80064dc:	68ab      	ldr	r3, [r5, #8]
 80064de:	ea23 0306 	bic.w	r3, r3, r6
 80064e2:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80064e4:	6805      	ldr	r5, [r0, #0]
 80064e6:	2603      	movs	r6, #3
 80064e8:	0053      	lsls	r3, r2, #1
 80064ea:	fa06 f303 	lsl.w	r3, r6, r3
 80064ee:	ea25 0503 	bic.w	r5, r5, r3
 80064f2:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064f4:	fa22 f506 	lsr.w	r5, r2, r6
 80064f8:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 80064fc:	f002 0c07 	and.w	ip, r2, #7
 8006500:	6a2e      	ldr	r6, [r5, #32]
 8006502:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006506:	270f      	movs	r7, #15
 8006508:	fa07 f70c 	lsl.w	r7, r7, ip
 800650c:	ea26 0707 	bic.w	r7, r6, r7
 8006510:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006512:	68c5      	ldr	r5, [r0, #12]
 8006514:	ea25 0503 	bic.w	r5, r5, r3
 8006518:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800651a:	6845      	ldr	r5, [r0, #4]
 800651c:	ea25 050e 	bic.w	r5, r5, lr
 8006520:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006522:	6885      	ldr	r5, [r0, #8]
 8006524:	ea25 0303 	bic.w	r3, r5, r3
 8006528:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800652a:	3201      	adds	r2, #1
 800652c:	2a10      	cmp	r2, #16
 800652e:	d185      	bne.n	800643c <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8006530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8006534:	2300      	movs	r3, #0
 8006536:	e7bd      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006538:	2301      	movs	r3, #1
 800653a:	e7bb      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 800653c:	2302      	movs	r3, #2
 800653e:	e7b9      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006540:	2303      	movs	r3, #3
 8006542:	e7b7      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006544:	2304      	movs	r3, #4
 8006546:	e7b5      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006548:	2305      	movs	r3, #5
 800654a:	e7b3      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 800654c:	2306      	movs	r3, #6
 800654e:	e7b1      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006550:	2307      	movs	r3, #7
 8006552:	e7af      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006554:	2308      	movs	r3, #8
 8006556:	e7ad      	b.n	80064b4 <HAL_GPIO_DeInit+0x8c>
 8006558:	40013c00 	.word	0x40013c00
 800655c:	40020000 	.word	0x40020000
 8006560:	40021400 	.word	0x40021400
 8006564:	40021800 	.word	0x40021800
 8006568:	40021c00 	.word	0x40021c00

0800656c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800656c:	6903      	ldr	r3, [r0, #16]
 800656e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8006570:	bf14      	ite	ne
 8006572:	2001      	movne	r0, #1
 8006574:	2000      	moveq	r0, #0
 8006576:	4770      	bx	lr

08006578 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006578:	b10a      	cbz	r2, 800657e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800657a:	6181      	str	r1, [r0, #24]
  }
}
 800657c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800657e:	0409      	lsls	r1, r1, #16
 8006580:	e7fb      	b.n	800657a <HAL_GPIO_WritePin+0x2>

08006582 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 8006582:	6943      	ldr	r3, [r0, #20]
 8006584:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8006588:	bf08      	it	eq
 800658a:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 800658c:	6181      	str	r1, [r0, #24]
  }
}
 800658e:	4770      	bx	lr

08006590 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006590:	6801      	ldr	r1, [r0, #0]
 8006592:	694b      	ldr	r3, [r1, #20]
 8006594:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006598:	f04f 0200 	mov.w	r2, #0
 800659c:	d010      	beq.n	80065c0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800659e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80065a2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80065a4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80065a6:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80065a8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80065ac:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80065b0:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80065b2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80065b6:	f043 0304 	orr.w	r3, r3, #4
 80065ba:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80065bc:	2001      	movs	r0, #1
 80065be:	4770      	bx	lr
  }
  return HAL_OK;
 80065c0:	4618      	mov	r0, r3
}
 80065c2:	4770      	bx	lr

080065c4 <I2C_WaitOnFlagUntilTimeout>:
{
 80065c4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80065c8:	4606      	mov	r6, r0
 80065ca:	460f      	mov	r7, r1
 80065cc:	4691      	mov	r9, r2
 80065ce:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80065d0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80065d4:	6833      	ldr	r3, [r6, #0]
 80065d6:	f1ba 0f01 	cmp.w	sl, #1
 80065da:	bf0c      	ite	eq
 80065dc:	695c      	ldreq	r4, [r3, #20]
 80065de:	699c      	ldrne	r4, [r3, #24]
 80065e0:	ea27 0404 	bic.w	r4, r7, r4
 80065e4:	b2a4      	uxth	r4, r4
 80065e6:	fab4 f484 	clz	r4, r4
 80065ea:	0964      	lsrs	r4, r4, #5
 80065ec:	45a1      	cmp	r9, r4
 80065ee:	d001      	beq.n	80065f4 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80065f0:	2000      	movs	r0, #0
 80065f2:	e017      	b.n	8006624 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80065f4:	1c6a      	adds	r2, r5, #1
 80065f6:	d0ee      	beq.n	80065d6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80065f8:	f7fe febc 	bl	8005374 <HAL_GetTick>
 80065fc:	9b08      	ldr	r3, [sp, #32]
 80065fe:	1ac0      	subs	r0, r0, r3
 8006600:	42a8      	cmp	r0, r5
 8006602:	d801      	bhi.n	8006608 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006604:	2d00      	cmp	r5, #0
 8006606:	d1e5      	bne.n	80065d4 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006608:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800660a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800660c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800660e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006612:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006616:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006618:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800661c:	f042 0220 	orr.w	r2, r2, #32
 8006620:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006622:	2001      	movs	r0, #1
}
 8006624:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006628 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800662c:	4604      	mov	r4, r0
 800662e:	460f      	mov	r7, r1
 8006630:	4616      	mov	r6, r2
 8006632:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006634:	6825      	ldr	r5, [r4, #0]
 8006636:	6968      	ldr	r0, [r5, #20]
 8006638:	ea27 0000 	bic.w	r0, r7, r0
 800663c:	b280      	uxth	r0, r0
 800663e:	b1b8      	cbz	r0, 8006670 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006640:	696b      	ldr	r3, [r5, #20]
 8006642:	055a      	lsls	r2, r3, #21
 8006644:	d516      	bpl.n	8006674 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006646:	682b      	ldr	r3, [r5, #0]
 8006648:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800664c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800664e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006652:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006654:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006656:	2300      	movs	r3, #0
 8006658:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800665a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800665e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006662:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006664:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006668:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800666a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800666e:	2001      	movs	r0, #1
}
 8006670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006674:	1c73      	adds	r3, r6, #1
 8006676:	d0de      	beq.n	8006636 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006678:	f7fe fe7c 	bl	8005374 <HAL_GetTick>
 800667c:	eba0 0008 	sub.w	r0, r0, r8
 8006680:	42b0      	cmp	r0, r6
 8006682:	d801      	bhi.n	8006688 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006684:	2e00      	cmp	r6, #0
 8006686:	d1d5      	bne.n	8006634 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006688:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800668a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800668c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800668e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006692:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006696:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006698:	f042 0220 	orr.w	r2, r2, #32
 800669c:	e7e4      	b.n	8006668 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800669e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800669e:	b570      	push	{r4, r5, r6, lr}
 80066a0:	4604      	mov	r4, r0
 80066a2:	460d      	mov	r5, r1
 80066a4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80066a6:	6821      	ldr	r1, [r4, #0]
 80066a8:	694b      	ldr	r3, [r1, #20]
 80066aa:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80066ae:	d001      	beq.n	80066b4 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80066b0:	2000      	movs	r0, #0
 80066b2:	e010      	b.n	80066d6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80066b4:	694a      	ldr	r2, [r1, #20]
 80066b6:	06d2      	lsls	r2, r2, #27
 80066b8:	d50e      	bpl.n	80066d8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80066ba:	f06f 0210 	mvn.w	r2, #16
 80066be:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80066c0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066c2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066c4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066c8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80066cc:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066ce:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80066d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80066d4:	2001      	movs	r0, #1
}
 80066d6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066d8:	f7fe fe4c 	bl	8005374 <HAL_GetTick>
 80066dc:	1b80      	subs	r0, r0, r6
 80066de:	42a8      	cmp	r0, r5
 80066e0:	d801      	bhi.n	80066e6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80066e2:	2d00      	cmp	r5, #0
 80066e4:	d1df      	bne.n	80066a6 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066e6:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80066e8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066ea:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066ec:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066f0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066f6:	f042 0220 	orr.w	r2, r2, #32
 80066fa:	e7e8      	b.n	80066ce <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080066fc <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80066fc:	b570      	push	{r4, r5, r6, lr}
 80066fe:	4604      	mov	r4, r0
 8006700:	460d      	mov	r5, r1
 8006702:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006704:	6823      	ldr	r3, [r4, #0]
 8006706:	695b      	ldr	r3, [r3, #20]
 8006708:	075b      	lsls	r3, r3, #29
 800670a:	d501      	bpl.n	8006710 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800670c:	2000      	movs	r0, #0
}
 800670e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006710:	4620      	mov	r0, r4
 8006712:	f7ff ff3d 	bl	8006590 <I2C_IsAcknowledgeFailed>
 8006716:	b9a8      	cbnz	r0, 8006744 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006718:	1c6a      	adds	r2, r5, #1
 800671a:	d0f3      	beq.n	8006704 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800671c:	f7fe fe2a 	bl	8005374 <HAL_GetTick>
 8006720:	1b80      	subs	r0, r0, r6
 8006722:	42a8      	cmp	r0, r5
 8006724:	d801      	bhi.n	800672a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006726:	2d00      	cmp	r5, #0
 8006728:	d1ec      	bne.n	8006704 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800672a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800672c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800672e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006730:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006734:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006738:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800673a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800673e:	f042 0220 	orr.w	r2, r2, #32
 8006742:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006744:	2001      	movs	r0, #1
 8006746:	e7e2      	b.n	800670e <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08006748 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8006748:	b570      	push	{r4, r5, r6, lr}
 800674a:	4604      	mov	r4, r0
 800674c:	460d      	mov	r5, r1
 800674e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006750:	6823      	ldr	r3, [r4, #0]
 8006752:	695b      	ldr	r3, [r3, #20]
 8006754:	061b      	lsls	r3, r3, #24
 8006756:	d501      	bpl.n	800675c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8006758:	2000      	movs	r0, #0
}
 800675a:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800675c:	4620      	mov	r0, r4
 800675e:	f7ff ff17 	bl	8006590 <I2C_IsAcknowledgeFailed>
 8006762:	b9a8      	cbnz	r0, 8006790 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006764:	1c6a      	adds	r2, r5, #1
 8006766:	d0f3      	beq.n	8006750 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006768:	f7fe fe04 	bl	8005374 <HAL_GetTick>
 800676c:	1b80      	subs	r0, r0, r6
 800676e:	42a8      	cmp	r0, r5
 8006770:	d801      	bhi.n	8006776 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006772:	2d00      	cmp	r5, #0
 8006774:	d1ec      	bne.n	8006750 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006776:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006778:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800677a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800677c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006780:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006784:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006786:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800678a:	f042 0220 	orr.w	r2, r2, #32
 800678e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006790:	2001      	movs	r0, #1
 8006792:	e7e2      	b.n	800675a <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08006794 <I2C_RequestMemoryWrite>:
{
 8006794:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006798:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800679a:	6802      	ldr	r2, [r0, #0]
{
 800679c:	b085      	sub	sp, #20
 800679e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80067a2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80067a4:	6813      	ldr	r3, [r2, #0]
 80067a6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80067aa:	6013      	str	r3, [r2, #0]
{
 80067ac:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80067ae:	463b      	mov	r3, r7
 80067b0:	f8cd 8000 	str.w	r8, [sp]
 80067b4:	2200      	movs	r2, #0
 80067b6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80067ba:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80067bc:	f7ff ff02 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 80067c0:	6823      	ldr	r3, [r4, #0]
 80067c2:	b138      	cbz	r0, 80067d4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80067c4:	681b      	ldr	r3, [r3, #0]
 80067c6:	05db      	lsls	r3, r3, #23
 80067c8:	d502      	bpl.n	80067d0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80067ca:	f44f 7300 	mov.w	r3, #512	; 0x200
 80067ce:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80067d0:	2003      	movs	r0, #3
 80067d2:	e00a      	b.n	80067ea <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80067d4:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80067d8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80067da:	4919      	ldr	r1, [pc, #100]	; (8006840 <I2C_RequestMemoryWrite+0xac>)
 80067dc:	4643      	mov	r3, r8
 80067de:	463a      	mov	r2, r7
 80067e0:	4620      	mov	r0, r4
 80067e2:	f7ff ff21 	bl	8006628 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80067e6:	b118      	cbz	r0, 80067f0 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80067e8:	2001      	movs	r0, #1
}
 80067ea:	b005      	add	sp, #20
 80067ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80067f0:	6823      	ldr	r3, [r4, #0]
 80067f2:	9003      	str	r0, [sp, #12]
 80067f4:	695a      	ldr	r2, [r3, #20]
 80067f6:	9203      	str	r2, [sp, #12]
 80067f8:	699b      	ldr	r3, [r3, #24]
 80067fa:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80067fc:	4642      	mov	r2, r8
 80067fe:	4639      	mov	r1, r7
 8006800:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006802:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006804:	f7ff ffa0 	bl	8006748 <I2C_WaitOnTXEFlagUntilTimeout>
 8006808:	b140      	cbz	r0, 800681c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800680a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800680c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800680e:	bf01      	itttt	eq
 8006810:	6822      	ldreq	r2, [r4, #0]
 8006812:	6813      	ldreq	r3, [r2, #0]
 8006814:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006818:	6013      	streq	r3, [r2, #0]
 800681a:	e7e5      	b.n	80067e8 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800681c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006820:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006822:	d102      	bne.n	800682a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006824:	b2ed      	uxtb	r5, r5
 8006826:	611d      	str	r5, [r3, #16]
 8006828:	e7df      	b.n	80067ea <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800682a:	0a2a      	lsrs	r2, r5, #8
 800682c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800682e:	4639      	mov	r1, r7
 8006830:	4642      	mov	r2, r8
 8006832:	4620      	mov	r0, r4
 8006834:	f7ff ff88 	bl	8006748 <I2C_WaitOnTXEFlagUntilTimeout>
 8006838:	2800      	cmp	r0, #0
 800683a:	d1e6      	bne.n	800680a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800683c:	6823      	ldr	r3, [r4, #0]
 800683e:	e7f1      	b.n	8006824 <I2C_RequestMemoryWrite+0x90>
 8006840:	00010002 	.word	0x00010002

08006844 <I2C_RequestMemoryRead>:
{
 8006844:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006848:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800684a:	6803      	ldr	r3, [r0, #0]
{
 800684c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800684e:	681a      	ldr	r2, [r3, #0]
 8006850:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006854:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006856:	681a      	ldr	r2, [r3, #0]
{
 8006858:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800685c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006860:	601a      	str	r2, [r3, #0]
{
 8006862:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006864:	463b      	mov	r3, r7
 8006866:	f8cd 8000 	str.w	r8, [sp]
 800686a:	2200      	movs	r2, #0
 800686c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006870:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006872:	f7ff fea7 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 8006876:	6823      	ldr	r3, [r4, #0]
 8006878:	b148      	cbz	r0, 800688e <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800687a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800687c:	05db      	lsls	r3, r3, #23
 800687e:	d502      	bpl.n	8006886 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006880:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006884:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006886:	2003      	movs	r0, #3
}
 8006888:	b004      	add	sp, #16
 800688a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800688e:	fa5f f986 	uxtb.w	r9, r6
 8006892:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006896:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006898:	492a      	ldr	r1, [pc, #168]	; (8006944 <I2C_RequestMemoryRead+0x100>)
 800689a:	4643      	mov	r3, r8
 800689c:	463a      	mov	r2, r7
 800689e:	4620      	mov	r0, r4
 80068a0:	f7ff fec2 	bl	8006628 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80068a4:	b108      	cbz	r0, 80068aa <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 80068a6:	2001      	movs	r0, #1
 80068a8:	e7ee      	b.n	8006888 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068aa:	6823      	ldr	r3, [r4, #0]
 80068ac:	9003      	str	r0, [sp, #12]
 80068ae:	695a      	ldr	r2, [r3, #20]
 80068b0:	9203      	str	r2, [sp, #12]
 80068b2:	699b      	ldr	r3, [r3, #24]
 80068b4:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068b6:	4642      	mov	r2, r8
 80068b8:	4639      	mov	r1, r7
 80068ba:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068bc:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068be:	f7ff ff43 	bl	8006748 <I2C_WaitOnTXEFlagUntilTimeout>
 80068c2:	b140      	cbz	r0, 80068d6 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80068c4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80068c6:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068c8:	bf01      	itttt	eq
 80068ca:	6822      	ldreq	r2, [r4, #0]
 80068cc:	6813      	ldreq	r3, [r2, #0]
 80068ce:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80068d2:	6013      	streq	r3, [r2, #0]
 80068d4:	e7e7      	b.n	80068a6 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068d6:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068da:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068dc:	d11a      	bne.n	8006914 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068de:	b2ed      	uxtb	r5, r5
 80068e0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068e2:	4642      	mov	r2, r8
 80068e4:	4639      	mov	r1, r7
 80068e6:	4620      	mov	r0, r4
 80068e8:	f7ff ff2e 	bl	8006748 <I2C_WaitOnTXEFlagUntilTimeout>
 80068ec:	2800      	cmp	r0, #0
 80068ee:	d1e9      	bne.n	80068c4 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068f0:	6822      	ldr	r2, [r4, #0]
 80068f2:	6813      	ldr	r3, [r2, #0]
 80068f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80068f8:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068fa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80068fe:	4602      	mov	r2, r0
 8006900:	f8cd 8000 	str.w	r8, [sp]
 8006904:	463b      	mov	r3, r7
 8006906:	4620      	mov	r0, r4
 8006908:	f7ff fe5c 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 800690c:	6822      	ldr	r2, [r4, #0]
 800690e:	b160      	cbz	r0, 800692a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006910:	6813      	ldr	r3, [r2, #0]
 8006912:	e7b3      	b.n	800687c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006914:	0a2a      	lsrs	r2, r5, #8
 8006916:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006918:	4639      	mov	r1, r7
 800691a:	4642      	mov	r2, r8
 800691c:	4620      	mov	r0, r4
 800691e:	f7ff ff13 	bl	8006748 <I2C_WaitOnTXEFlagUntilTimeout>
 8006922:	2800      	cmp	r0, #0
 8006924:	d1ce      	bne.n	80068c4 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006926:	6823      	ldr	r3, [r4, #0]
 8006928:	e7d9      	b.n	80068de <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800692a:	f049 0301 	orr.w	r3, r9, #1
 800692e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006930:	4904      	ldr	r1, [pc, #16]	; (8006944 <I2C_RequestMemoryRead+0x100>)
 8006932:	4643      	mov	r3, r8
 8006934:	463a      	mov	r2, r7
 8006936:	4620      	mov	r0, r4
 8006938:	f7ff fe76 	bl	8006628 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800693c:	3800      	subs	r0, #0
 800693e:	bf18      	it	ne
 8006940:	2001      	movne	r0, #1
 8006942:	e7a1      	b.n	8006888 <I2C_RequestMemoryRead+0x44>
 8006944:	00010002 	.word	0x00010002

08006948 <HAL_I2C_Init>:
{
 8006948:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800694a:	4604      	mov	r4, r0
 800694c:	b908      	cbnz	r0, 8006952 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800694e:	2001      	movs	r0, #1
}
 8006950:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006952:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006956:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800695a:	b91b      	cbnz	r3, 8006964 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800695c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006960:	f7fb f8e4 	bl	8001b2c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006964:	2324      	movs	r3, #36	; 0x24
 8006966:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800696a:	6823      	ldr	r3, [r4, #0]
 800696c:	681a      	ldr	r2, [r3, #0]
 800696e:	f022 0201 	bic.w	r2, r2, #1
 8006972:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006974:	681a      	ldr	r2, [r3, #0]
 8006976:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800697a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800697c:	681a      	ldr	r2, [r3, #0]
 800697e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006982:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006984:	f001 f80e 	bl	80079a4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006988:	4b3f      	ldr	r3, [pc, #252]	; (8006a88 <HAL_I2C_Init+0x140>)
 800698a:	6865      	ldr	r5, [r4, #4]
 800698c:	429d      	cmp	r5, r3
 800698e:	bf94      	ite	ls
 8006990:	4b3e      	ldrls	r3, [pc, #248]	; (8006a8c <HAL_I2C_Init+0x144>)
 8006992:	4b3f      	ldrhi	r3, [pc, #252]	; (8006a90 <HAL_I2C_Init+0x148>)
 8006994:	4298      	cmp	r0, r3
 8006996:	bf8c      	ite	hi
 8006998:	2300      	movhi	r3, #0
 800699a:	2301      	movls	r3, #1
 800699c:	2b00      	cmp	r3, #0
 800699e:	d1d6      	bne.n	800694e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80069a0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80069a2:	4e39      	ldr	r6, [pc, #228]	; (8006a88 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80069a4:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80069a6:	493b      	ldr	r1, [pc, #236]	; (8006a94 <HAL_I2C_Init+0x14c>)
 80069a8:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80069ac:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80069b0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80069b2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80069b4:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80069b6:	bf88      	it	hi
 80069b8:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 80069bc:	6a13      	ldr	r3, [r2, #32]
 80069be:	bf88      	it	hi
 80069c0:	4371      	mulhi	r1, r6
 80069c2:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80069c6:	bf84      	itt	hi
 80069c8:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80069cc:	fbb1 f1f6 	udivhi	r1, r1, r6
 80069d0:	3101      	adds	r1, #1
 80069d2:	4319      	orrs	r1, r3
 80069d4:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80069d6:	69d1      	ldr	r1, [r2, #28]
 80069d8:	1e43      	subs	r3, r0, #1
 80069da:	482b      	ldr	r0, [pc, #172]	; (8006a88 <HAL_I2C_Init+0x140>)
 80069dc:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80069e0:	4285      	cmp	r5, r0
 80069e2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80069e6:	d832      	bhi.n	8006a4e <HAL_I2C_Init+0x106>
 80069e8:	006d      	lsls	r5, r5, #1
 80069ea:	f640 70fc 	movw	r0, #4092	; 0xffc
 80069ee:	fbb3 f3f5 	udiv	r3, r3, r5
 80069f2:	3301      	adds	r3, #1
 80069f4:	4203      	tst	r3, r0
 80069f6:	d042      	beq.n	8006a7e <HAL_I2C_Init+0x136>
 80069f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80069fc:	430b      	orrs	r3, r1
 80069fe:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006a00:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006a04:	6811      	ldr	r1, [r2, #0]
 8006a06:	4303      	orrs	r3, r0
 8006a08:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006a0c:	430b      	orrs	r3, r1
 8006a0e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006a10:	6891      	ldr	r1, [r2, #8]
 8006a12:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006a16:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006a1a:	4303      	orrs	r3, r0
 8006a1c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a20:	430b      	orrs	r3, r1
 8006a22:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006a24:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006a28:	68d1      	ldr	r1, [r2, #12]
 8006a2a:	4303      	orrs	r3, r0
 8006a2c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a30:	430b      	orrs	r3, r1
 8006a32:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006a34:	6813      	ldr	r3, [r2, #0]
 8006a36:	f043 0301 	orr.w	r3, r3, #1
 8006a3a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006a3c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006a3e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006a40:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006a42:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006a46:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006a48:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006a4c:	e780      	b.n	8006950 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a4e:	68a0      	ldr	r0, [r4, #8]
 8006a50:	b950      	cbnz	r0, 8006a68 <HAL_I2C_Init+0x120>
 8006a52:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006a56:	fbb3 f3f5 	udiv	r3, r3, r5
 8006a5a:	3301      	adds	r3, #1
 8006a5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a60:	b17b      	cbz	r3, 8006a82 <HAL_I2C_Init+0x13a>
 8006a62:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006a66:	e7c9      	b.n	80069fc <HAL_I2C_Init+0xb4>
 8006a68:	2019      	movs	r0, #25
 8006a6a:	4345      	muls	r5, r0
 8006a6c:	fbb3 f3f5 	udiv	r3, r3, r5
 8006a70:	3301      	adds	r3, #1
 8006a72:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a76:	b123      	cbz	r3, 8006a82 <HAL_I2C_Init+0x13a>
 8006a78:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006a7c:	e7be      	b.n	80069fc <HAL_I2C_Init+0xb4>
 8006a7e:	2304      	movs	r3, #4
 8006a80:	e7bc      	b.n	80069fc <HAL_I2C_Init+0xb4>
 8006a82:	2301      	movs	r3, #1
 8006a84:	e7ba      	b.n	80069fc <HAL_I2C_Init+0xb4>
 8006a86:	bf00      	nop
 8006a88:	000186a0 	.word	0x000186a0
 8006a8c:	001e847f 	.word	0x001e847f
 8006a90:	003d08ff 	.word	0x003d08ff
 8006a94:	000f4240 	.word	0x000f4240

08006a98 <HAL_I2C_DeInit>:
{
 8006a98:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8006a9a:	4604      	mov	r4, r0
 8006a9c:	b198      	cbz	r0, 8006ac6 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8006a9e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006aa0:	2324      	movs	r3, #36	; 0x24
 8006aa2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006aa6:	6813      	ldr	r3, [r2, #0]
 8006aa8:	f023 0301 	bic.w	r3, r3, #1
 8006aac:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8006aae:	f7fb f881 	bl	8001bb4 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8006ab2:	2000      	movs	r0, #0
 8006ab4:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8006ab6:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8006aba:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006abe:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8006ac0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8006ac4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006ac6:	2001      	movs	r0, #1
 8006ac8:	e7fc      	b.n	8006ac4 <HAL_I2C_DeInit+0x2c>
	...

08006acc <HAL_I2C_Mem_Write>:
{
 8006acc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006ad0:	4604      	mov	r4, r0
 8006ad2:	4699      	mov	r9, r3
 8006ad4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006ad6:	460f      	mov	r7, r1
 8006ad8:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006ada:	f7fe fc4b 	bl	8005374 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006ade:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006ae2:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006ae4:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006ae6:	d003      	beq.n	8006af0 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006ae8:	2002      	movs	r0, #2
}
 8006aea:	b003      	add	sp, #12
 8006aec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006af0:	9000      	str	r0, [sp, #0]
 8006af2:	493c      	ldr	r1, [pc, #240]	; (8006be4 <HAL_I2C_Mem_Write+0x118>)
 8006af4:	2319      	movs	r3, #25
 8006af6:	2201      	movs	r2, #1
 8006af8:	4620      	mov	r0, r4
 8006afa:	f7ff fd63 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 8006afe:	2800      	cmp	r0, #0
 8006b00:	d1f2      	bne.n	8006ae8 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b02:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b06:	2b01      	cmp	r3, #1
 8006b08:	d0ee      	beq.n	8006ae8 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b0a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b0c:	2301      	movs	r3, #1
 8006b0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b12:	6803      	ldr	r3, [r0, #0]
 8006b14:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b16:	bf5e      	ittt	pl
 8006b18:	6803      	ldrpl	r3, [r0, #0]
 8006b1a:	f043 0301 	orrpl.w	r3, r3, #1
 8006b1e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b20:	6803      	ldr	r3, [r0, #0]
 8006b22:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b26:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006b28:	2321      	movs	r3, #33	; 0x21
 8006b2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006b2e:	2340      	movs	r3, #64	; 0x40
 8006b30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b34:	2300      	movs	r3, #0
 8006b36:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006b38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b3a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006b3c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006b40:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006b42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b44:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006b46:	4b28      	ldr	r3, [pc, #160]	; (8006be8 <HAL_I2C_Mem_Write+0x11c>)
 8006b48:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006b4a:	e9cd 6500 	strd	r6, r5, [sp]
 8006b4e:	464b      	mov	r3, r9
 8006b50:	4642      	mov	r2, r8
 8006b52:	4639      	mov	r1, r7
 8006b54:	4620      	mov	r0, r4
 8006b56:	f7ff fe1d 	bl	8006794 <I2C_RequestMemoryWrite>
 8006b5a:	2800      	cmp	r0, #0
 8006b5c:	d02a      	beq.n	8006bb4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006b5e:	2001      	movs	r0, #1
 8006b60:	e7c3      	b.n	8006aea <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006b62:	f7ff fdf1 	bl	8006748 <I2C_WaitOnTXEFlagUntilTimeout>
 8006b66:	b140      	cbz	r0, 8006b7a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006b68:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006b6a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006b6c:	bf01      	itttt	eq
 8006b6e:	6822      	ldreq	r2, [r4, #0]
 8006b70:	6813      	ldreq	r3, [r2, #0]
 8006b72:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006b76:	6013      	streq	r3, [r2, #0]
 8006b78:	e7f1      	b.n	8006b5e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006b7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006b7c:	6827      	ldr	r7, [r4, #0]
 8006b7e:	461a      	mov	r2, r3
 8006b80:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006b84:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006b86:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006b88:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006b8a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006b8c:	3a01      	subs	r2, #1
 8006b8e:	b292      	uxth	r2, r2
 8006b90:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006b92:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006b94:	1e48      	subs	r0, r1, #1
 8006b96:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006b98:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006b9a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006b9c:	d50a      	bpl.n	8006bb4 <HAL_I2C_Mem_Write+0xe8>
 8006b9e:	b148      	cbz	r0, 8006bb4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006ba0:	785a      	ldrb	r2, [r3, #1]
 8006ba2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006ba4:	3302      	adds	r3, #2
 8006ba6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006ba8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006baa:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006bac:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006bae:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006bb0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006bb2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006bb4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bb6:	462a      	mov	r2, r5
 8006bb8:	4631      	mov	r1, r6
 8006bba:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d1d0      	bne.n	8006b62 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bc0:	f7ff fd9c 	bl	80066fc <I2C_WaitOnBTFFlagUntilTimeout>
 8006bc4:	2800      	cmp	r0, #0
 8006bc6:	d1cf      	bne.n	8006b68 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006bc8:	6822      	ldr	r2, [r4, #0]
 8006bca:	6813      	ldr	r3, [r2, #0]
 8006bcc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006bd0:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006bd2:	2320      	movs	r3, #32
 8006bd4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006bd8:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006bdc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006be0:	e783      	b.n	8006aea <HAL_I2C_Mem_Write+0x1e>
 8006be2:	bf00      	nop
 8006be4:	00100002 	.word	0x00100002
 8006be8:	ffff0000 	.word	0xffff0000

08006bec <HAL_I2C_Mem_Read>:
{
 8006bec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006bf0:	4604      	mov	r4, r0
 8006bf2:	b087      	sub	sp, #28
 8006bf4:	4699      	mov	r9, r3
 8006bf6:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006bf8:	460d      	mov	r5, r1
 8006bfa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006bfc:	f7fe fbba 	bl	8005374 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c00:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c04:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c06:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c08:	d004      	beq.n	8006c14 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c0a:	2502      	movs	r5, #2
}
 8006c0c:	4628      	mov	r0, r5
 8006c0e:	b007      	add	sp, #28
 8006c10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c14:	9000      	str	r0, [sp, #0]
 8006c16:	4976      	ldr	r1, [pc, #472]	; (8006df0 <HAL_I2C_Mem_Read+0x204>)
 8006c18:	2319      	movs	r3, #25
 8006c1a:	2201      	movs	r2, #1
 8006c1c:	4620      	mov	r0, r4
 8006c1e:	f7ff fcd1 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 8006c22:	2800      	cmp	r0, #0
 8006c24:	d1f1      	bne.n	8006c0a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006c26:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c2a:	2b01      	cmp	r3, #1
 8006c2c:	d0ed      	beq.n	8006c0a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c2e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c30:	2301      	movs	r3, #1
 8006c32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c36:	6803      	ldr	r3, [r0, #0]
 8006c38:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006c3a:	bf5e      	ittt	pl
 8006c3c:	6803      	ldrpl	r3, [r0, #0]
 8006c3e:	f043 0301 	orrpl.w	r3, r3, #1
 8006c42:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006c44:	6803      	ldr	r3, [r0, #0]
 8006c46:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c4a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006c4c:	2322      	movs	r3, #34	; 0x22
 8006c4e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006c52:	2340      	movs	r3, #64	; 0x40
 8006c54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006c58:	2300      	movs	r3, #0
 8006c5a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006c5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c5e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006c60:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006c64:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006c66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006c68:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006c6a:	4b62      	ldr	r3, [pc, #392]	; (8006df4 <HAL_I2C_Mem_Read+0x208>)
 8006c6c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006c6e:	4629      	mov	r1, r5
 8006c70:	e9cd 7600 	strd	r7, r6, [sp]
 8006c74:	464b      	mov	r3, r9
 8006c76:	4642      	mov	r2, r8
 8006c78:	4620      	mov	r0, r4
 8006c7a:	f7ff fde3 	bl	8006844 <I2C_RequestMemoryRead>
 8006c7e:	4605      	mov	r5, r0
 8006c80:	b108      	cbz	r0, 8006c86 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006c82:	2501      	movs	r5, #1
 8006c84:	e7c2      	b.n	8006c0c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006c86:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006c88:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006c8a:	b9b2      	cbnz	r2, 8006cba <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006c8c:	9002      	str	r0, [sp, #8]
 8006c8e:	695a      	ldr	r2, [r3, #20]
 8006c90:	9202      	str	r2, [sp, #8]
 8006c92:	699a      	ldr	r2, [r3, #24]
 8006c94:	9202      	str	r2, [sp, #8]
 8006c96:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c98:	681a      	ldr	r2, [r3, #0]
 8006c9a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006c9e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006ca0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006df8 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006ca4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006ca6:	2b00      	cmp	r3, #0
 8006ca8:	d12c      	bne.n	8006d04 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006caa:	2220      	movs	r2, #32
 8006cac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006cb0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006cb4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006cb8:	e7a8      	b.n	8006c0c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006cba:	2a01      	cmp	r2, #1
 8006cbc:	d10a      	bne.n	8006cd4 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006cbe:	681a      	ldr	r2, [r3, #0]
 8006cc0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006cc4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cc6:	9003      	str	r0, [sp, #12]
 8006cc8:	695a      	ldr	r2, [r3, #20]
 8006cca:	9203      	str	r2, [sp, #12]
 8006ccc:	699a      	ldr	r2, [r3, #24]
 8006cce:	9203      	str	r2, [sp, #12]
 8006cd0:	9a03      	ldr	r2, [sp, #12]
 8006cd2:	e7e1      	b.n	8006c98 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006cd4:	2a02      	cmp	r2, #2
 8006cd6:	d10e      	bne.n	8006cf6 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006cd8:	681a      	ldr	r2, [r3, #0]
 8006cda:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006cde:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006ce0:	681a      	ldr	r2, [r3, #0]
 8006ce2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006ce6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006ce8:	9004      	str	r0, [sp, #16]
 8006cea:	695a      	ldr	r2, [r3, #20]
 8006cec:	9204      	str	r2, [sp, #16]
 8006cee:	699b      	ldr	r3, [r3, #24]
 8006cf0:	9304      	str	r3, [sp, #16]
 8006cf2:	9b04      	ldr	r3, [sp, #16]
 8006cf4:	e7d4      	b.n	8006ca0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cf6:	9005      	str	r0, [sp, #20]
 8006cf8:	695a      	ldr	r2, [r3, #20]
 8006cfa:	9205      	str	r2, [sp, #20]
 8006cfc:	699b      	ldr	r3, [r3, #24]
 8006cfe:	9305      	str	r3, [sp, #20]
 8006d00:	9b05      	ldr	r3, [sp, #20]
 8006d02:	e7cd      	b.n	8006ca0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d04:	2b03      	cmp	r3, #3
 8006d06:	d856      	bhi.n	8006db6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d08:	2b01      	cmp	r3, #1
 8006d0a:	d115      	bne.n	8006d38 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d0c:	4632      	mov	r2, r6
 8006d0e:	4639      	mov	r1, r7
 8006d10:	4620      	mov	r0, r4
 8006d12:	f7ff fcc4 	bl	800669e <I2C_WaitOnRXNEFlagUntilTimeout>
 8006d16:	2800      	cmp	r0, #0
 8006d18:	d1b3      	bne.n	8006c82 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d1a:	6823      	ldr	r3, [r4, #0]
 8006d1c:	691a      	ldr	r2, [r3, #16]
 8006d1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d20:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d24:	3301      	adds	r3, #1
 8006d26:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d28:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d2a:	3b01      	subs	r3, #1
 8006d2c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d30:	3b01      	subs	r3, #1
 8006d32:	b29b      	uxth	r3, r3
 8006d34:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006d36:	e7b5      	b.n	8006ca4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006d38:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d3a:	9600      	str	r6, [sp, #0]
 8006d3c:	463b      	mov	r3, r7
 8006d3e:	f04f 0200 	mov.w	r2, #0
 8006d42:	4641      	mov	r1, r8
 8006d44:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006d46:	d119      	bne.n	8006d7c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d48:	f7ff fc3c 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 8006d4c:	2800      	cmp	r0, #0
 8006d4e:	d198      	bne.n	8006c82 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d50:	6823      	ldr	r3, [r4, #0]
 8006d52:	681a      	ldr	r2, [r3, #0]
 8006d54:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d58:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d5a:	691a      	ldr	r2, [r3, #16]
 8006d5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d5e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d60:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006d62:	1c53      	adds	r3, r2, #1
 8006d64:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d66:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d68:	3b01      	subs	r3, #1
 8006d6a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d6c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d6e:	3b01      	subs	r3, #1
 8006d70:	b29b      	uxth	r3, r3
 8006d72:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d74:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d76:	691b      	ldr	r3, [r3, #16]
 8006d78:	7053      	strb	r3, [r2, #1]
 8006d7a:	e7d2      	b.n	8006d22 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d7c:	f7ff fc22 	bl	80065c4 <I2C_WaitOnFlagUntilTimeout>
 8006d80:	2800      	cmp	r0, #0
 8006d82:	f47f af7e 	bne.w	8006c82 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d86:	6823      	ldr	r3, [r4, #0]
 8006d88:	681a      	ldr	r2, [r3, #0]
 8006d8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d8e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d90:	691a      	ldr	r2, [r3, #16]
 8006d92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d94:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d96:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d98:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006d9a:	3301      	adds	r3, #1
 8006d9c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d9e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006da0:	3b01      	subs	r3, #1
 8006da2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006da4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006da6:	3b01      	subs	r3, #1
 8006da8:	b29b      	uxth	r3, r3
 8006daa:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dac:	4602      	mov	r2, r0
 8006dae:	463b      	mov	r3, r7
 8006db0:	4641      	mov	r1, r8
 8006db2:	4620      	mov	r0, r4
 8006db4:	e7c8      	b.n	8006d48 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006db6:	4632      	mov	r2, r6
 8006db8:	4639      	mov	r1, r7
 8006dba:	4620      	mov	r0, r4
 8006dbc:	f7ff fc6f 	bl	800669e <I2C_WaitOnRXNEFlagUntilTimeout>
 8006dc0:	2800      	cmp	r0, #0
 8006dc2:	f47f af5e 	bne.w	8006c82 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dc6:	6823      	ldr	r3, [r4, #0]
 8006dc8:	691a      	ldr	r2, [r3, #16]
 8006dca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dcc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006dce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006dd0:	1c53      	adds	r3, r2, #1
 8006dd2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006dd4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006dd6:	3b01      	subs	r3, #1
 8006dd8:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006dda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ddc:	3b01      	subs	r3, #1
 8006dde:	b29b      	uxth	r3, r3
 8006de0:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006de2:	6823      	ldr	r3, [r4, #0]
 8006de4:	6959      	ldr	r1, [r3, #20]
 8006de6:	0749      	lsls	r1, r1, #29
 8006de8:	f57f af5c 	bpl.w	8006ca4 <HAL_I2C_Mem_Read+0xb8>
 8006dec:	e7c3      	b.n	8006d76 <HAL_I2C_Mem_Read+0x18a>
 8006dee:	bf00      	nop
 8006df0:	00100002 	.word	0x00100002
 8006df4:	ffff0000 	.word	0xffff0000
 8006df8:	00010004 	.word	0x00010004

08006dfc <HAL_I2C_GetState>:
  return hi2c->State;
 8006dfc:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8006e00:	4770      	bx	lr

08006e02 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006e02:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006e04:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006e08:	01d2      	lsls	r2, r2, #7
 8006e0a:	3284      	adds	r2, #132	; 0x84
 8006e0c:	1883      	adds	r3, r0, r2
{
 8006e0e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006e12:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006e14:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006e16:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006e18:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006e1c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006e20:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006e22:	68c5      	ldr	r5, [r0, #12]
 8006e24:	f10c 0701 	add.w	r7, ip, #1
 8006e28:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006e2c:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006e30:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006e32:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006e34:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006e38:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006e3a:	68c5      	ldr	r5, [r0, #12]
 8006e3c:	68ce      	ldr	r6, [r1, #12]
 8006e3e:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006e42:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006e44:	689d      	ldr	r5, [r3, #8]
 8006e46:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006e4a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006e4c:	68c7      	ldr	r7, [r0, #12]
 8006e4e:	688d      	ldr	r5, [r1, #8]
 8006e50:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006e54:	3501      	adds	r5, #1
 8006e56:	443d      	add	r5, r7
 8006e58:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006e5c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006e5e:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006e60:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006e62:	f025 0507 	bic.w	r5, r5, #7
 8006e66:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006e68:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006e6c:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006e6e:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006e70:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006e74:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006e78:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006e7c:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006e80:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006e84:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006e88:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006e8c:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006e8e:	695d      	ldr	r5, [r3, #20]
 8006e90:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006e94:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006e96:	694d      	ldr	r5, [r1, #20]
 8006e98:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006e9a:	69dd      	ldr	r5, [r3, #28]
 8006e9c:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006ea0:	f025 0507 	bic.w	r5, r5, #7
 8006ea4:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006ea6:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006eaa:	433d      	orrs	r5, r7
 8006eac:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006eae:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006eb0:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006eb2:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006eb6:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006eb8:	b31e      	cbz	r6, 8006f02 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006eba:	2e01      	cmp	r6, #1
 8006ebc:	d023      	beq.n	8006f06 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006ebe:	1eb5      	subs	r5, r6, #2
 8006ec0:	2d02      	cmp	r5, #2
 8006ec2:	d922      	bls.n	8006f0a <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006ec4:	2e07      	cmp	r6, #7
 8006ec6:	bf0c      	ite	eq
 8006ec8:	2502      	moveq	r5, #2
 8006eca:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006ecc:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006ece:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006ed2:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006ed4:	eba4 040c 	sub.w	r4, r4, ip
 8006ed8:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006eda:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006edc:	436c      	muls	r4, r5
 8006ede:	436e      	muls	r6, r5
 8006ee0:	3403      	adds	r4, #3
 8006ee2:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006ee6:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006ee8:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006eea:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006eee:	f024 0407 	bic.w	r4, r4, #7
 8006ef2:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006ef4:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006ef6:	5883      	ldr	r3, [r0, r2]
 8006ef8:	f043 0301 	orr.w	r3, r3, #1
 8006efc:	5083      	str	r3, [r0, r2]
}
 8006efe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006f02:	2504      	movs	r5, #4
 8006f04:	e7e2      	b.n	8006ecc <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006f06:	2503      	movs	r5, #3
 8006f08:	e7e0      	b.n	8006ecc <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006f0a:	2502      	movs	r5, #2
 8006f0c:	e7de      	b.n	8006ecc <LTDC_SetConfig+0xca>
	...

08006f10 <HAL_LTDC_Init>:
{
 8006f10:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006f12:	4604      	mov	r4, r0
 8006f14:	2800      	cmp	r0, #0
 8006f16:	d063      	beq.n	8006fe0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006f18:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006f1c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006f20:	b91b      	cbnz	r3, 8006f2a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006f22:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006f26:	f7fa fe63 	bl	8001bf0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006f2a:	2302      	movs	r3, #2
 8006f2c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006f30:	6823      	ldr	r3, [r4, #0]
 8006f32:	699a      	ldr	r2, [r3, #24]
 8006f34:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006f38:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006f3a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006f3e:	4302      	orrs	r2, r0
 8006f40:	68e0      	ldr	r0, [r4, #12]
 8006f42:	6999      	ldr	r1, [r3, #24]
 8006f44:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006f46:	6920      	ldr	r0, [r4, #16]
 8006f48:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006f4a:	430a      	orrs	r2, r1
 8006f4c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006f4e:	689a      	ldr	r2, [r3, #8]
 8006f50:	4924      	ldr	r1, [pc, #144]	; (8006fe4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8006f52:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006f54:	400a      	ands	r2, r1
 8006f56:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8006f58:	689a      	ldr	r2, [r3, #8]
 8006f5a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006f5e:	69a0      	ldr	r0, [r4, #24]
 8006f60:	4302      	orrs	r2, r0
 8006f62:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006f64:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8006f66:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8006f68:	400a      	ands	r2, r1
 8006f6a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8006f6c:	68da      	ldr	r2, [r3, #12]
 8006f6e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006f72:	6a20      	ldr	r0, [r4, #32]
 8006f74:	4302      	orrs	r2, r0
 8006f76:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006f78:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006f7a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006f7c:	400a      	ands	r2, r1
 8006f7e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8006f80:	691a      	ldr	r2, [r3, #16]
 8006f82:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006f86:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006f88:	4302      	orrs	r2, r0
 8006f8a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006f8c:	695a      	ldr	r2, [r3, #20]
 8006f8e:	4011      	ands	r1, r2
 8006f90:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006f92:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006f94:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8006f96:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8006f9a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8006f9c:	430a      	orrs	r2, r1
 8006f9e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006fa0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8006fa2:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006fa6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006faa:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8006fae:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006fb0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006fb2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8006fb6:	430a      	orrs	r2, r1
 8006fb8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8006fbc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8006fc0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8006fc2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006fc4:	f042 0206 	orr.w	r2, r2, #6
 8006fc8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8006fca:	699a      	ldr	r2, [r3, #24]
 8006fcc:	f042 0201 	orr.w	r2, r2, #1
 8006fd0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006fd2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8006fd4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8006fd6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8006fda:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8006fde:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006fe0:	2001      	movs	r0, #1
 8006fe2:	e7fc      	b.n	8006fde <HAL_LTDC_Init+0xce>
 8006fe4:	f000f800 	.word	0xf000f800

08006fe8 <HAL_LTDC_ErrorCallback>:
 8006fe8:	4770      	bx	lr

08006fea <HAL_LTDC_LineEventCallback>:
 8006fea:	4770      	bx	lr

08006fec <HAL_LTDC_ReloadEventCallback>:
 8006fec:	4770      	bx	lr

08006fee <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006fee:	6803      	ldr	r3, [r0, #0]
{
 8006ff0:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8006ff2:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8006ff4:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006ff6:	0772      	lsls	r2, r6, #29
{
 8006ff8:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8006ffa:	d514      	bpl.n	8007026 <HAL_LTDC_IRQHandler+0x38>
 8006ffc:	0769      	lsls	r1, r5, #29
 8006ffe:	d512      	bpl.n	8007026 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007000:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007002:	f022 0204 	bic.w	r2, r2, #4
 8007006:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8007008:	2204      	movs	r2, #4
 800700a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800700c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007010:	f043 0301 	orr.w	r3, r3, #1
 8007014:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007018:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800701a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800701e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007022:	f7ff ffe1 	bl	8006fe8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007026:	07b2      	lsls	r2, r6, #30
 8007028:	d516      	bpl.n	8007058 <HAL_LTDC_IRQHandler+0x6a>
 800702a:	07ab      	lsls	r3, r5, #30
 800702c:	d514      	bpl.n	8007058 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800702e:	6823      	ldr	r3, [r4, #0]
 8007030:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007032:	f022 0202 	bic.w	r2, r2, #2
 8007036:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007038:	2202      	movs	r2, #2
 800703a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800703c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007040:	4313      	orrs	r3, r2
 8007042:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007046:	2304      	movs	r3, #4
 8007048:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800704c:	2300      	movs	r3, #0
 800704e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007052:	4620      	mov	r0, r4
 8007054:	f7ff ffc8 	bl	8006fe8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007058:	07f0      	lsls	r0, r6, #31
 800705a:	d510      	bpl.n	800707e <HAL_LTDC_IRQHandler+0x90>
 800705c:	07e9      	lsls	r1, r5, #31
 800705e:	d50e      	bpl.n	800707e <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007060:	6823      	ldr	r3, [r4, #0]
 8007062:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007064:	f022 0201 	bic.w	r2, r2, #1
 8007068:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800706a:	2201      	movs	r2, #1
 800706c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800706e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007070:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007074:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007078:	4620      	mov	r0, r4
 800707a:	f7ff ffb6 	bl	8006fea <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800707e:	0732      	lsls	r2, r6, #28
 8007080:	d511      	bpl.n	80070a6 <HAL_LTDC_IRQHandler+0xb8>
 8007082:	072b      	lsls	r3, r5, #28
 8007084:	d50f      	bpl.n	80070a6 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007086:	6823      	ldr	r3, [r4, #0]
 8007088:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800708a:	f022 0208 	bic.w	r2, r2, #8
 800708e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007090:	2208      	movs	r2, #8
 8007092:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007094:	2301      	movs	r3, #1
 8007096:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800709a:	2300      	movs	r3, #0
 800709c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80070a0:	4620      	mov	r0, r4
 80070a2:	f7ff ffa3 	bl	8006fec <HAL_LTDC_ReloadEventCallback>
}
 80070a6:	bd70      	pop	{r4, r5, r6, pc}

080070a8 <HAL_LTDC_ConfigLayer>:
{
 80070a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80070ac:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80070b0:	2b01      	cmp	r3, #1
{
 80070b2:	4606      	mov	r6, r0
 80070b4:	460f      	mov	r7, r1
 80070b6:	4694      	mov	ip, r2
 80070b8:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80070bc:	d01f      	beq.n	80070fe <HAL_LTDC_ConfigLayer+0x56>
 80070be:	f04f 0801 	mov.w	r8, #1
 80070c2:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80070c6:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80070ca:	2434      	movs	r4, #52	; 0x34
 80070cc:	460d      	mov	r5, r1
 80070ce:	fb04 6402 	mla	r4, r4, r2, r6
 80070d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80070d4:	3438      	adds	r4, #56	; 0x38
 80070d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80070d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80070da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80070dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80070de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80070e0:	682b      	ldr	r3, [r5, #0]
 80070e2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80070e4:	4630      	mov	r0, r6
 80070e6:	4662      	mov	r2, ip
 80070e8:	4639      	mov	r1, r7
 80070ea:	f7ff fe8a 	bl	8006e02 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80070ee:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80070f0:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80070f2:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80070f6:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80070fa:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80070fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007104 <HAL_LTDC_SetPitch>:
{
 8007104:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8007106:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800710a:	2b01      	cmp	r3, #1
 800710c:	f04f 0302 	mov.w	r3, #2
 8007110:	d02c      	beq.n	800716c <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8007112:	2434      	movs	r4, #52	; 0x34
 8007114:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007118:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800711c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800711e:	b33c      	cbz	r4, 8007170 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007120:	2c01      	cmp	r4, #1
 8007122:	d027      	beq.n	8007174 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007124:	1ea5      	subs	r5, r4, #2
 8007126:	429d      	cmp	r5, r3
 8007128:	d902      	bls.n	8007130 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800712a:	2c07      	cmp	r4, #7
 800712c:	bf18      	it	ne
 800712e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8007130:	6804      	ldr	r4, [r0, #0]
 8007132:	01d2      	lsls	r2, r2, #7
 8007134:	3284      	adds	r2, #132	; 0x84
 8007136:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8007138:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800713a:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800713c:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8007140:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8007144:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8007146:	4c0c      	ldr	r4, [pc, #48]	; (8007178 <HAL_LTDC_SetPitch+0x74>)
 8007148:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800714a:	f045 0501 	orr.w	r5, r5, #1
 800714e:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8007150:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8007152:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007156:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8007158:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800715a:	f043 0301 	orr.w	r3, r3, #1
 800715e:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8007160:	2301      	movs	r3, #1
 8007162:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007166:	2300      	movs	r3, #0
 8007168:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800716c:	4618      	mov	r0, r3
 800716e:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8007170:	2304      	movs	r3, #4
 8007172:	e7dd      	b.n	8007130 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8007174:	2303      	movs	r3, #3
 8007176:	e7db      	b.n	8007130 <HAL_LTDC_SetPitch+0x2c>
 8007178:	40016800 	.word	0x40016800

0800717c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800717c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800717e:	2300      	movs	r3, #0
 8007180:	9301      	str	r3, [sp, #4]
 8007182:	4b18      	ldr	r3, [pc, #96]	; (80071e4 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8007184:	4d18      	ldr	r5, [pc, #96]	; (80071e8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8007186:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007188:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800718c:	641a      	str	r2, [r3, #64]	; 0x40
 800718e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007190:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007194:	9301      	str	r3, [sp, #4]
 8007196:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8007198:	4b14      	ldr	r3, [pc, #80]	; (80071ec <HAL_PWREx_EnableOverDrive+0x70>)
 800719a:	2201      	movs	r2, #1
 800719c:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800719e:	f7fe f8e9 	bl	8005374 <HAL_GetTick>
 80071a2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80071a4:	686b      	ldr	r3, [r5, #4]
 80071a6:	03da      	lsls	r2, r3, #15
 80071a8:	d50b      	bpl.n	80071c2 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80071aa:	4b10      	ldr	r3, [pc, #64]	; (80071ec <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80071ac:	4d0e      	ldr	r5, [pc, #56]	; (80071e8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80071ae:	2201      	movs	r2, #1
 80071b0:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 80071b2:	f7fe f8df 	bl	8005374 <HAL_GetTick>
 80071b6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80071b8:	686b      	ldr	r3, [r5, #4]
 80071ba:	039b      	lsls	r3, r3, #14
 80071bc:	d50a      	bpl.n	80071d4 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80071be:	2000      	movs	r0, #0
 80071c0:	e006      	b.n	80071d0 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80071c2:	f7fe f8d7 	bl	8005374 <HAL_GetTick>
 80071c6:	1b00      	subs	r0, r0, r4
 80071c8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80071cc:	d9ea      	bls.n	80071a4 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80071ce:	2003      	movs	r0, #3
}
 80071d0:	b003      	add	sp, #12
 80071d2:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80071d4:	f7fe f8ce 	bl	8005374 <HAL_GetTick>
 80071d8:	1b00      	subs	r0, r0, r4
 80071da:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80071de:	d9eb      	bls.n	80071b8 <HAL_PWREx_EnableOverDrive+0x3c>
 80071e0:	e7f5      	b.n	80071ce <HAL_PWREx_EnableOverDrive+0x52>
 80071e2:	bf00      	nop
 80071e4:	40023800 	.word	0x40023800
 80071e8:	40007000 	.word	0x40007000
 80071ec:	420e0000 	.word	0x420e0000

080071f0 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80071f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 80071f4:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 80071f6:	b13e      	cbz	r6, 8007208 <QSPI_Config+0x18>
 80071f8:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 80071fc:	bf1f      	itttt	ne
 80071fe:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8007200:	6804      	ldrne	r4, [r0, #0]
 8007202:	f103 33ff 	addne.w	r3, r3, #4294967295
 8007206:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8007208:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800720c:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8007210:	f1b9 0f00 	cmp.w	r9, #0
 8007214:	d04f      	beq.n	80072b6 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007216:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8007218:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800721a:	f8d1 a000 	ldr.w	sl, [r1]
 800721e:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8007222:	ea46 0909 	orr.w	r9, r6, r9
 8007226:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800722a:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800722e:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8007232:	b335      	cbz	r5, 8007282 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007234:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007236:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8007238:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800723a:	ea49 0505 	orr.w	r5, r9, r5
 800723e:	b19f      	cbz	r7, 8007268 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007240:	ea4a 0307 	orr.w	r3, sl, r7
 8007244:	4323      	orrs	r3, r4
 8007246:	ea43 0308 	orr.w	r3, r3, r8
 800724a:	68cc      	ldr	r4, [r1, #12]
 800724c:	ea43 030e 	orr.w	r3, r3, lr
 8007250:	4333      	orrs	r3, r6
 8007252:	4323      	orrs	r3, r4
 8007254:	ea43 030c 	orr.w	r3, r3, ip
 8007258:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800725a:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800725e:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8007260:	d00d      	beq.n	800727e <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8007262:	684b      	ldr	r3, [r1, #4]
 8007264:	6183      	str	r3, [r0, #24]
 8007266:	e00a      	b.n	800727e <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007268:	ea4a 0304 	orr.w	r3, sl, r4
 800726c:	ea43 0308 	orr.w	r3, r3, r8
 8007270:	ea43 030e 	orr.w	r3, r3, lr
 8007274:	4333      	orrs	r3, r6
 8007276:	ea43 030c 	orr.w	r3, r3, ip
 800727a:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800727c:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800727e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8007282:	b16f      	cbz	r7, 80072a0 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007284:	ea4a 0307 	orr.w	r3, sl, r7
 8007288:	4323      	orrs	r3, r4
 800728a:	ea43 0308 	orr.w	r3, r3, r8
 800728e:	68cc      	ldr	r4, [r1, #12]
 8007290:	ea43 030e 	orr.w	r3, r3, lr
 8007294:	4323      	orrs	r3, r4
 8007296:	ea43 030c 	orr.w	r3, r3, ip
 800729a:	ea43 0309 	orr.w	r3, r3, r9
 800729e:	e7dc      	b.n	800725a <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80072a0:	ea4a 0304 	orr.w	r3, sl, r4
 80072a4:	ea43 0308 	orr.w	r3, r3, r8
 80072a8:	ea43 030e 	orr.w	r3, r3, lr
 80072ac:	ea43 030c 	orr.w	r3, r3, ip
 80072b0:	ea43 0309 	orr.w	r3, r3, r9
 80072b4:	e7e2      	b.n	800727c <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80072b6:	b345      	cbz	r5, 800730a <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80072b8:	6804      	ldr	r4, [r0, #0]
 80072ba:	688b      	ldr	r3, [r1, #8]
 80072bc:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80072be:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80072c2:	694e      	ldr	r6, [r1, #20]
 80072c4:	6908      	ldr	r0, [r1, #16]
 80072c6:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80072ca:	ea43 0502 	orr.w	r5, r3, r2
 80072ce:	04b6      	lsls	r6, r6, #18
 80072d0:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80072d4:	b187      	cbz	r7, 80072f8 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80072d6:	4338      	orrs	r0, r7
 80072d8:	ea40 0008 	orr.w	r0, r0, r8
 80072dc:	4303      	orrs	r3, r0
 80072de:	68c8      	ldr	r0, [r1, #12]
 80072e0:	ea43 030c 	orr.w	r3, r3, ip
 80072e4:	4303      	orrs	r3, r0
 80072e6:	4333      	orrs	r3, r6
 80072e8:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80072ea:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80072ee:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80072f0:	d0c5      	beq.n	800727e <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80072f2:	684b      	ldr	r3, [r1, #4]
 80072f4:	61a3      	str	r3, [r4, #24]
 80072f6:	e7c2      	b.n	800727e <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80072f8:	ea40 0008 	orr.w	r0, r0, r8
 80072fc:	4303      	orrs	r3, r0
 80072fe:	ea43 030c 	orr.w	r3, r3, ip
 8007302:	4333      	orrs	r3, r6
 8007304:	432b      	orrs	r3, r5
 8007306:	6163      	str	r3, [r4, #20]
 8007308:	e7b9      	b.n	800727e <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800730a:	b17f      	cbz	r7, 800732c <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800730c:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800730e:	6800      	ldr	r0, [r0, #0]
 8007310:	ea46 0307 	orr.w	r3, r6, r7
 8007314:	4313      	orrs	r3, r2
 8007316:	4323      	orrs	r3, r4
 8007318:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800731a:	4323      	orrs	r3, r4
 800731c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800731e:	4323      	orrs	r3, r4
 8007320:	68cc      	ldr	r4, [r1, #12]
 8007322:	4323      	orrs	r3, r4
 8007324:	694c      	ldr	r4, [r1, #20]
 8007326:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800732a:	e796      	b.n	800725a <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800732c:	2e00      	cmp	r6, #0
 800732e:	d0a6      	beq.n	800727e <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8007330:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8007332:	6800      	ldr	r0, [r0, #0]
 8007334:	4333      	orrs	r3, r6
 8007336:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8007338:	431a      	orrs	r2, r3
 800733a:	4332      	orrs	r2, r6
 800733c:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800733e:	694b      	ldr	r3, [r1, #20]
 8007340:	4332      	orrs	r2, r6
 8007342:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8007346:	6142      	str	r2, [r0, #20]
}
 8007348:	e799      	b.n	800727e <QSPI_Config+0x8e>

0800734a <QSPI_WaitFlagStateUntilTimeout>:
{
 800734a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800734e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8007352:	4604      	mov	r4, r0
 8007354:	460e      	mov	r6, r1
 8007356:	4615      	mov	r5, r2
 8007358:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800735a:	6822      	ldr	r2, [r4, #0]
 800735c:	6893      	ldr	r3, [r2, #8]
 800735e:	4233      	tst	r3, r6
 8007360:	bf14      	ite	ne
 8007362:	2301      	movne	r3, #1
 8007364:	2300      	moveq	r3, #0
 8007366:	42ab      	cmp	r3, r5
 8007368:	d101      	bne.n	800736e <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800736a:	2000      	movs	r0, #0
 800736c:	e012      	b.n	8007394 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800736e:	f1b8 3fff 	cmp.w	r8, #4294967295
 8007372:	d0f3      	beq.n	800735c <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007374:	f7fd fffe 	bl	8005374 <HAL_GetTick>
 8007378:	1bc0      	subs	r0, r0, r7
 800737a:	4540      	cmp	r0, r8
 800737c:	d802      	bhi.n	8007384 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800737e:	f1b8 0f00 	cmp.w	r8, #0
 8007382:	d1ea      	bne.n	800735a <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8007384:	2304      	movs	r3, #4
 8007386:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800738a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800738c:	f043 0301 	orr.w	r3, r3, #1
 8007390:	6463      	str	r3, [r4, #68]	; 0x44
 8007392:	2001      	movs	r0, #1
}
 8007394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08007398 <HAL_QSPI_Init>:
{
 8007398:	b530      	push	{r4, r5, lr}
 800739a:	b085      	sub	sp, #20
 800739c:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800739e:	f7fd ffe9 	bl	8005374 <HAL_GetTick>
 80073a2:	4603      	mov	r3, r0
  if(hqspi == NULL)
 80073a4:	2c00      	cmp	r4, #0
 80073a6:	d047      	beq.n	8007438 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80073a8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80073ac:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80073b0:	b94a      	cbnz	r2, 80073c6 <HAL_QSPI_Init+0x2e>
 80073b2:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 80073b4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 80073b8:	4620      	mov	r0, r4
 80073ba:	f7fa fc3b 	bl	8001c34 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80073be:	f241 3288 	movw	r2, #5000	; 0x1388
 80073c2:	9b03      	ldr	r3, [sp, #12]
 80073c4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80073c6:	6820      	ldr	r0, [r4, #0]
 80073c8:	68a1      	ldr	r1, [r4, #8]
 80073ca:	6802      	ldr	r2, [r0, #0]
 80073cc:	3901      	subs	r1, #1
 80073ce:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80073d2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80073d6:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80073d8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80073da:	9200      	str	r2, [sp, #0]
 80073dc:	2120      	movs	r1, #32
 80073de:	2200      	movs	r2, #0
 80073e0:	4620      	mov	r0, r4
 80073e2:	f7ff ffb2 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 80073e6:	bb10      	cbnz	r0, 800742e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80073e8:	69e5      	ldr	r5, [r4, #28]
 80073ea:	68e3      	ldr	r3, [r4, #12]
 80073ec:	6822      	ldr	r2, [r4, #0]
 80073ee:	432b      	orrs	r3, r5
 80073f0:	6a25      	ldr	r5, [r4, #32]
 80073f2:	6811      	ldr	r1, [r2, #0]
 80073f4:	432b      	orrs	r3, r5
 80073f6:	6865      	ldr	r5, [r4, #4]
 80073f8:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80073fc:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8007400:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8007404:	430b      	orrs	r3, r1
 8007406:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8007408:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800740c:	430b      	orrs	r3, r1
 800740e:	6921      	ldr	r1, [r4, #16]
 8007410:	6855      	ldr	r5, [r2, #4]
 8007412:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8007416:	4909      	ldr	r1, [pc, #36]	; (800743c <HAL_QSPI_Init+0xa4>)
 8007418:	4029      	ands	r1, r5
 800741a:	430b      	orrs	r3, r1
 800741c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800741e:	6813      	ldr	r3, [r2, #0]
 8007420:	f043 0301 	orr.w	r3, r3, #1
 8007424:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8007426:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007428:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800742a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800742e:	2300      	movs	r3, #0
 8007430:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007434:	b005      	add	sp, #20
 8007436:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8007438:	2001      	movs	r0, #1
 800743a:	e7fb      	b.n	8007434 <HAL_QSPI_Init+0x9c>
 800743c:	ffe0f8fe 	.word	0xffe0f8fe

08007440 <HAL_QSPI_DeInit>:
{
 8007440:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8007442:	4604      	mov	r4, r0
 8007444:	b168      	cbz	r0, 8007462 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8007446:	6802      	ldr	r2, [r0, #0]
 8007448:	6813      	ldr	r3, [r2, #0]
 800744a:	f023 0301 	bic.w	r3, r3, #1
 800744e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8007450:	f7fa fc4a 	bl	8001ce8 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007454:	2000      	movs	r0, #0
 8007456:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8007458:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800745c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8007460:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007462:	2001      	movs	r0, #1
 8007464:	e7fc      	b.n	8007460 <HAL_QSPI_DeInit+0x20>

08007466 <HAL_QSPI_Command>:
{
 8007466:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800746a:	4604      	mov	r4, r0
 800746c:	b085      	sub	sp, #20
 800746e:	4617      	mov	r7, r2
 8007470:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8007472:	f7fd ff7f 	bl	8005374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8007476:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800747a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800747c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800747e:	d034      	beq.n	80074ea <HAL_QSPI_Command+0x84>
 8007480:	2201      	movs	r2, #1
 8007482:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007486:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800748a:	2a01      	cmp	r2, #1
 800748c:	fa5f f882 	uxtb.w	r8, r2
 8007490:	f04f 0602 	mov.w	r6, #2
 8007494:	d127      	bne.n	80074e6 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8007496:	2200      	movs	r2, #0
 8007498:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800749a:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800749c:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80074a0:	9700      	str	r7, [sp, #0]
 80074a2:	2120      	movs	r1, #32
 80074a4:	4620      	mov	r0, r4
 80074a6:	f7ff ff50 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80074aa:	4605      	mov	r5, r0
 80074ac:	b9a0      	cbnz	r0, 80074d8 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80074ae:	4602      	mov	r2, r0
 80074b0:	4649      	mov	r1, r9
 80074b2:	4620      	mov	r0, r4
 80074b4:	f7ff fe9c 	bl	80071f0 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80074b8:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80074bc:	9b03      	ldr	r3, [sp, #12]
 80074be:	b94a      	cbnz	r2, 80074d4 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80074c0:	9700      	str	r7, [sp, #0]
 80074c2:	4642      	mov	r2, r8
 80074c4:	4631      	mov	r1, r6
 80074c6:	4620      	mov	r0, r4
 80074c8:	f7ff ff3f 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80074cc:	4605      	mov	r5, r0
 80074ce:	b918      	cbnz	r0, 80074d8 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80074d0:	6823      	ldr	r3, [r4, #0]
 80074d2:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80074d4:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80074d8:	2300      	movs	r3, #0
 80074da:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80074de:	4628      	mov	r0, r5
 80074e0:	b005      	add	sp, #20
 80074e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80074e6:	4635      	mov	r5, r6
 80074e8:	e7f6      	b.n	80074d8 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 80074ea:	2502      	movs	r5, #2
 80074ec:	e7f7      	b.n	80074de <HAL_QSPI_Command+0x78>

080074ee <HAL_QSPI_AutoPolling>:
{
 80074ee:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80074f2:	4604      	mov	r4, r0
 80074f4:	4615      	mov	r5, r2
 80074f6:	461e      	mov	r6, r3
 80074f8:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80074fa:	f7fd ff3b 	bl	8005374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80074fe:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007502:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007504:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007506:	d040      	beq.n	800758a <HAL_QSPI_AutoPolling+0x9c>
 8007508:	2201      	movs	r2, #1
 800750a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800750e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007512:	2a01      	cmp	r2, #1
 8007514:	b2d7      	uxtb	r7, r2
 8007516:	d136      	bne.n	8007586 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007518:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800751a:	2200      	movs	r2, #0
 800751c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800751e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8007520:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8007524:	9600      	str	r6, [sp, #0]
 8007526:	2120      	movs	r1, #32
 8007528:	4620      	mov	r0, r4
 800752a:	f7ff ff0e 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800752e:	bb20      	cbnz	r0, 800757a <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8007530:	6821      	ldr	r1, [r4, #0]
 8007532:	682a      	ldr	r2, [r5, #0]
 8007534:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8007536:	686a      	ldr	r2, [r5, #4]
 8007538:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800753a:	68aa      	ldr	r2, [r5, #8]
 800753c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800753e:	680a      	ldr	r2, [r1, #0]
 8007540:	6928      	ldr	r0, [r5, #16]
 8007542:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8007546:	4302      	orrs	r2, r0
 8007548:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800754c:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800754e:	68ea      	ldr	r2, [r5, #12]
 8007550:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8007554:	4641      	mov	r1, r8
 8007556:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800755a:	4620      	mov	r0, r4
 800755c:	f7ff fe48 	bl	80071f0 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8007560:	9b03      	ldr	r3, [sp, #12]
 8007562:	9600      	str	r6, [sp, #0]
 8007564:	463a      	mov	r2, r7
 8007566:	2108      	movs	r1, #8
 8007568:	4620      	mov	r0, r4
 800756a:	f7ff feee 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800756e:	b920      	cbnz	r0, 800757a <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8007570:	6823      	ldr	r3, [r4, #0]
 8007572:	2208      	movs	r2, #8
 8007574:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8007576:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800757a:	2300      	movs	r3, #0
 800757c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007580:	b004      	add	sp, #16
 8007582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8007586:	2002      	movs	r0, #2
 8007588:	e7f7      	b.n	800757a <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800758a:	2002      	movs	r0, #2
 800758c:	e7f8      	b.n	8007580 <HAL_QSPI_AutoPolling+0x92>

0800758e <HAL_QSPI_MemoryMapped>:
{
 800758e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007590:	4604      	mov	r4, r0
 8007592:	4616      	mov	r6, r2
 8007594:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007596:	f7fd feed 	bl	8005374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800759a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800759e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80075a0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80075a2:	d032      	beq.n	800760a <HAL_QSPI_MemoryMapped+0x7c>
 80075a4:	2201      	movs	r2, #1
 80075a6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80075aa:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80075ae:	2a01      	cmp	r2, #1
 80075b0:	d129      	bne.n	8007606 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80075b2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80075b4:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80075b6:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80075b8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80075bc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80075be:	9100      	str	r1, [sp, #0]
 80075c0:	4620      	mov	r0, r4
 80075c2:	2120      	movs	r1, #32
 80075c4:	f7ff fec1 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80075c8:	4605      	mov	r5, r0
 80075ca:	b9b0      	cbnz	r0, 80075fa <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80075cc:	6823      	ldr	r3, [r4, #0]
 80075ce:	6872      	ldr	r2, [r6, #4]
 80075d0:	6818      	ldr	r0, [r3, #0]
 80075d2:	f020 0008 	bic.w	r0, r0, #8
 80075d6:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80075d8:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80075da:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80075dc:	d107      	bne.n	80075ee <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80075de:	6832      	ldr	r2, [r6, #0]
 80075e0:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80075e2:	2210      	movs	r2, #16
 80075e4:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80075e6:	681a      	ldr	r2, [r3, #0]
 80075e8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80075ec:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80075ee:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80075f2:	4639      	mov	r1, r7
 80075f4:	4620      	mov	r0, r4
 80075f6:	f7ff fdfb 	bl	80071f0 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 80075fa:	2300      	movs	r3, #0
 80075fc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8007600:	4628      	mov	r0, r5
 8007602:	b003      	add	sp, #12
 8007604:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8007606:	2502      	movs	r5, #2
 8007608:	e7f7      	b.n	80075fa <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800760a:	2502      	movs	r5, #2
 800760c:	e7f8      	b.n	8007600 <HAL_QSPI_MemoryMapped+0x72>

0800760e <HAL_QSPI_Abort>:
{
 800760e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007610:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8007612:	f7fd feaf 	bl	8005374 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8007616:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800761a:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800761c:	f012 0002 	ands.w	r0, r2, #2
 8007620:	d036      	beq.n	8007690 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8007622:	2200      	movs	r2, #0
 8007624:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8007628:	6822      	ldr	r2, [r4, #0]
 800762a:	6811      	ldr	r1, [r2, #0]
 800762c:	0749      	lsls	r1, r1, #29
 800762e:	d50d      	bpl.n	800764c <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8007630:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8007632:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8007634:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8007636:	f021 0104 	bic.w	r1, r1, #4
 800763a:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800763c:	f7fd ffea 	bl	8005614 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8007640:	9b03      	ldr	r3, [sp, #12]
 8007642:	b118      	cbz	r0, 800764c <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8007644:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8007646:	f042 0204 	orr.w	r2, r2, #4
 800764a:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800764c:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800764e:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8007650:	680a      	ldr	r2, [r1, #0]
 8007652:	f042 0202 	orr.w	r2, r2, #2
 8007656:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8007658:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800765a:	9200      	str	r2, [sp, #0]
 800765c:	2102      	movs	r1, #2
 800765e:	2201      	movs	r2, #1
 8007660:	4620      	mov	r0, r4
 8007662:	f7ff fe72 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8007666:	9b03      	ldr	r3, [sp, #12]
 8007668:	b990      	cbnz	r0, 8007690 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800766a:	6822      	ldr	r2, [r4, #0]
 800766c:	2102      	movs	r1, #2
 800766e:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8007670:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8007672:	9200      	str	r2, [sp, #0]
 8007674:	2120      	movs	r1, #32
 8007676:	4602      	mov	r2, r0
 8007678:	4620      	mov	r0, r4
 800767a:	f7ff fe66 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800767e:	b938      	cbnz	r0, 8007690 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8007680:	6822      	ldr	r2, [r4, #0]
 8007682:	6953      	ldr	r3, [r2, #20]
 8007684:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8007688:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800768a:	2301      	movs	r3, #1
 800768c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8007690:	b004      	add	sp, #16
 8007692:	bd10      	pop	{r4, pc}

08007694 <HAL_QSPI_Transmit>:
{
 8007694:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007696:	4604      	mov	r4, r0
 8007698:	b085      	sub	sp, #20
 800769a:	4616      	mov	r6, r2
 800769c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800769e:	f7fd fe69 	bl	8005374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80076a2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80076a6:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80076a8:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80076aa:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80076ac:	d04c      	beq.n	8007748 <HAL_QSPI_Transmit+0xb4>
 80076ae:	2201      	movs	r2, #1
 80076b0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80076b4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80076b8:	2a01      	cmp	r2, #1
 80076ba:	b2d0      	uxtb	r0, r2
 80076bc:	d142      	bne.n	8007744 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80076be:	2200      	movs	r2, #0
 80076c0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80076c2:	2f00      	cmp	r7, #0
 80076c4:	d039      	beq.n	800773a <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80076c6:	2212      	movs	r2, #18
 80076c8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80076cc:	692a      	ldr	r2, [r5, #16]
 80076ce:	3201      	adds	r2, #1
 80076d0:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80076d2:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80076d4:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80076d6:	3201      	adds	r2, #1
 80076d8:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80076da:	696a      	ldr	r2, [r5, #20]
 80076dc:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80076e0:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 80076e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80076e4:	b9a2      	cbnz	r2, 8007710 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80076e6:	9600      	str	r6, [sp, #0]
 80076e8:	2201      	movs	r2, #1
 80076ea:	2102      	movs	r1, #2
 80076ec:	4620      	mov	r0, r4
 80076ee:	f7ff fe2c 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80076f2:	b928      	cbnz	r0, 8007700 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80076f4:	6823      	ldr	r3, [r4, #0]
 80076f6:	2202      	movs	r2, #2
 80076f8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80076fa:	4620      	mov	r0, r4
 80076fc:	f7ff ff87 	bl	800760e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8007700:	2301      	movs	r3, #1
 8007702:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8007706:	2300      	movs	r3, #0
 8007708:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800770c:	b005      	add	sp, #20
 800770e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8007710:	9600      	str	r6, [sp, #0]
 8007712:	2201      	movs	r2, #1
 8007714:	2104      	movs	r1, #4
 8007716:	4620      	mov	r0, r4
 8007718:	9303      	str	r3, [sp, #12]
 800771a:	f7ff fe16 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800771e:	2800      	cmp	r0, #0
 8007720:	d1ee      	bne.n	8007700 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8007722:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8007724:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8007726:	7812      	ldrb	r2, [r2, #0]
 8007728:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800772c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800772e:	3201      	adds	r2, #1
 8007730:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8007732:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007734:	3a01      	subs	r2, #1
 8007736:	62e2      	str	r2, [r4, #44]	; 0x2c
 8007738:	e7d3      	b.n	80076e2 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800773a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800773c:	f043 0308 	orr.w	r3, r3, #8
 8007740:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007742:	e7e0      	b.n	8007706 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8007744:	2002      	movs	r0, #2
 8007746:	e7de      	b.n	8007706 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8007748:	2002      	movs	r0, #2
 800774a:	e7df      	b.n	800770c <HAL_QSPI_Transmit+0x78>

0800774c <HAL_QSPI_Receive>:
{
 800774c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800774e:	4604      	mov	r4, r0
 8007750:	b085      	sub	sp, #20
 8007752:	4616      	mov	r6, r2
 8007754:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8007756:	f7fd fe0d 	bl	8005374 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800775a:	6825      	ldr	r5, [r4, #0]
 800775c:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8007760:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007764:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8007766:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8007768:	d050      	beq.n	800780c <HAL_QSPI_Receive+0xc0>
 800776a:	2201      	movs	r2, #1
 800776c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8007770:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8007774:	2a01      	cmp	r2, #1
 8007776:	b2d0      	uxtb	r0, r2
 8007778:	d146      	bne.n	8007808 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800777a:	2200      	movs	r2, #0
 800777c:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800777e:	2f00      	cmp	r7, #0
 8007780:	d03d      	beq.n	80077fe <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8007782:	2222      	movs	r2, #34	; 0x22
 8007784:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8007788:	692a      	ldr	r2, [r5, #16]
 800778a:	3201      	adds	r2, #1
 800778c:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800778e:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8007790:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8007792:	3201      	adds	r2, #1
 8007794:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8007796:	6969      	ldr	r1, [r5, #20]
 8007798:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800779c:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80077a0:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80077a2:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80077a6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80077a8:	b9a2      	cbnz	r2, 80077d4 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80077aa:	9600      	str	r6, [sp, #0]
 80077ac:	2201      	movs	r2, #1
 80077ae:	2102      	movs	r1, #2
 80077b0:	4620      	mov	r0, r4
 80077b2:	f7ff fdca 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80077b6:	b928      	cbnz	r0, 80077c4 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80077b8:	6823      	ldr	r3, [r4, #0]
 80077ba:	2202      	movs	r2, #2
 80077bc:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80077be:	4620      	mov	r0, r4
 80077c0:	f7ff ff25 	bl	800760e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80077c4:	2301      	movs	r3, #1
 80077c6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80077ca:	2300      	movs	r3, #0
 80077cc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80077d0:	b005      	add	sp, #20
 80077d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80077d4:	9600      	str	r6, [sp, #0]
 80077d6:	2201      	movs	r2, #1
 80077d8:	2106      	movs	r1, #6
 80077da:	4620      	mov	r0, r4
 80077dc:	9303      	str	r3, [sp, #12]
 80077de:	f7ff fdb4 	bl	800734a <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80077e2:	2800      	cmp	r0, #0
 80077e4:	d1ee      	bne.n	80077c4 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80077e6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80077e8:	f895 1020 	ldrb.w	r1, [r5, #32]
 80077ec:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 80077ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80077f0:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 80077f2:	3201      	adds	r2, #1
 80077f4:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80077f6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80077f8:	3a01      	subs	r2, #1
 80077fa:	63a2      	str	r2, [r4, #56]	; 0x38
 80077fc:	e7d3      	b.n	80077a6 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 80077fe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8007800:	f043 0308 	orr.w	r3, r3, #8
 8007804:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8007806:	e7e0      	b.n	80077ca <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8007808:	2002      	movs	r0, #2
 800780a:	e7de      	b.n	80077ca <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800780c:	2002      	movs	r0, #2
 800780e:	e7df      	b.n	80077d0 <HAL_QSPI_Receive+0x84>

08007810 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007810:	4913      	ldr	r1, [pc, #76]	; (8007860 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007812:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007814:	688b      	ldr	r3, [r1, #8]
 8007816:	f003 030c 	and.w	r3, r3, #12
 800781a:	2b04      	cmp	r3, #4
 800781c:	d01c      	beq.n	8007858 <HAL_RCC_GetSysClockFreq+0x48>
 800781e:	2b08      	cmp	r3, #8
 8007820:	d11c      	bne.n	800785c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007822:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007824:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007826:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007828:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800782c:	bf14      	ite	ne
 800782e:	480d      	ldrne	r0, [pc, #52]	; (8007864 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007830:	480d      	ldreq	r0, [pc, #52]	; (8007868 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007832:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007836:	bf18      	it	ne
 8007838:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800783a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800783e:	fba1 0100 	umull	r0, r1, r1, r0
 8007842:	f7f8 fd2d 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007846:	4b06      	ldr	r3, [pc, #24]	; (8007860 <HAL_RCC_GetSysClockFreq+0x50>)
 8007848:	685b      	ldr	r3, [r3, #4]
 800784a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800784e:	3301      	adds	r3, #1
 8007850:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007852:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007856:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007858:	4802      	ldr	r0, [pc, #8]	; (8007864 <HAL_RCC_GetSysClockFreq+0x54>)
 800785a:	e7fc      	b.n	8007856 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800785c:	4802      	ldr	r0, [pc, #8]	; (8007868 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800785e:	e7fa      	b.n	8007856 <HAL_RCC_GetSysClockFreq+0x46>
 8007860:	40023800 	.word	0x40023800
 8007864:	007a1200 	.word	0x007a1200
 8007868:	00f42400 	.word	0x00f42400

0800786c <HAL_RCC_ClockConfig>:
{
 800786c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007870:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007872:	4604      	mov	r4, r0
 8007874:	b910      	cbnz	r0, 800787c <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007876:	2001      	movs	r0, #1
}
 8007878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800787c:	4b44      	ldr	r3, [pc, #272]	; (8007990 <HAL_RCC_ClockConfig+0x124>)
 800787e:	681a      	ldr	r2, [r3, #0]
 8007880:	f002 020f 	and.w	r2, r2, #15
 8007884:	428a      	cmp	r2, r1
 8007886:	d328      	bcc.n	80078da <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007888:	6822      	ldr	r2, [r4, #0]
 800788a:	0797      	lsls	r7, r2, #30
 800788c:	d42d      	bmi.n	80078ea <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800788e:	07d0      	lsls	r0, r2, #31
 8007890:	d441      	bmi.n	8007916 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007892:	4b3f      	ldr	r3, [pc, #252]	; (8007990 <HAL_RCC_ClockConfig+0x124>)
 8007894:	681a      	ldr	r2, [r3, #0]
 8007896:	f002 020f 	and.w	r2, r2, #15
 800789a:	42aa      	cmp	r2, r5
 800789c:	d866      	bhi.n	800796c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800789e:	6822      	ldr	r2, [r4, #0]
 80078a0:	0751      	lsls	r1, r2, #29
 80078a2:	d46c      	bmi.n	800797e <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80078a4:	0713      	lsls	r3, r2, #28
 80078a6:	d507      	bpl.n	80078b8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80078a8:	4a3a      	ldr	r2, [pc, #232]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 80078aa:	6921      	ldr	r1, [r4, #16]
 80078ac:	6893      	ldr	r3, [r2, #8]
 80078ae:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80078b2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80078b6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80078b8:	f7ff ffaa 	bl	8007810 <HAL_RCC_GetSysClockFreq>
 80078bc:	4b35      	ldr	r3, [pc, #212]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 80078be:	4a36      	ldr	r2, [pc, #216]	; (8007998 <HAL_RCC_ClockConfig+0x12c>)
 80078c0:	689b      	ldr	r3, [r3, #8]
 80078c2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80078c6:	5cd3      	ldrb	r3, [r2, r3]
 80078c8:	40d8      	lsrs	r0, r3
 80078ca:	4b34      	ldr	r3, [pc, #208]	; (800799c <HAL_RCC_ClockConfig+0x130>)
 80078cc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80078ce:	4b34      	ldr	r3, [pc, #208]	; (80079a0 <HAL_RCC_ClockConfig+0x134>)
 80078d0:	6818      	ldr	r0, [r3, #0]
 80078d2:	f7fa fae1 	bl	8001e98 <HAL_InitTick>
  return HAL_OK;
 80078d6:	2000      	movs	r0, #0
 80078d8:	e7ce      	b.n	8007878 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80078da:	b2ca      	uxtb	r2, r1
 80078dc:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	f003 030f 	and.w	r3, r3, #15
 80078e4:	428b      	cmp	r3, r1
 80078e6:	d1c6      	bne.n	8007876 <HAL_RCC_ClockConfig+0xa>
 80078e8:	e7ce      	b.n	8007888 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80078ea:	4b2a      	ldr	r3, [pc, #168]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 80078ec:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80078f0:	bf1e      	ittt	ne
 80078f2:	6899      	ldrne	r1, [r3, #8]
 80078f4:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80078f8:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80078fa:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80078fc:	bf42      	ittt	mi
 80078fe:	6899      	ldrmi	r1, [r3, #8]
 8007900:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007904:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007906:	4923      	ldr	r1, [pc, #140]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 8007908:	68a0      	ldr	r0, [r4, #8]
 800790a:	688b      	ldr	r3, [r1, #8]
 800790c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007910:	4303      	orrs	r3, r0
 8007912:	608b      	str	r3, [r1, #8]
 8007914:	e7bb      	b.n	800788e <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007916:	6862      	ldr	r2, [r4, #4]
 8007918:	4b1e      	ldr	r3, [pc, #120]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 800791a:	2a01      	cmp	r2, #1
 800791c:	d11c      	bne.n	8007958 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800791e:	681b      	ldr	r3, [r3, #0]
 8007920:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007924:	d0a7      	beq.n	8007876 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007926:	4e1b      	ldr	r6, [pc, #108]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 8007928:	68b3      	ldr	r3, [r6, #8]
 800792a:	f023 0303 	bic.w	r3, r3, #3
 800792e:	4313      	orrs	r3, r2
 8007930:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007932:	f7fd fd1f 	bl	8005374 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007936:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800793a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800793c:	68b3      	ldr	r3, [r6, #8]
 800793e:	6862      	ldr	r2, [r4, #4]
 8007940:	f003 030c 	and.w	r3, r3, #12
 8007944:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007948:	d0a3      	beq.n	8007892 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800794a:	f7fd fd13 	bl	8005374 <HAL_GetTick>
 800794e:	1bc0      	subs	r0, r0, r7
 8007950:	4540      	cmp	r0, r8
 8007952:	d9f3      	bls.n	800793c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007954:	2003      	movs	r0, #3
 8007956:	e78f      	b.n	8007878 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007958:	1e91      	subs	r1, r2, #2
 800795a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800795c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800795e:	d802      	bhi.n	8007966 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007960:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007964:	e7de      	b.n	8007924 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007966:	f013 0f02 	tst.w	r3, #2
 800796a:	e7db      	b.n	8007924 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800796c:	b2ea      	uxtb	r2, r5
 800796e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	f003 030f 	and.w	r3, r3, #15
 8007976:	42ab      	cmp	r3, r5
 8007978:	f47f af7d 	bne.w	8007876 <HAL_RCC_ClockConfig+0xa>
 800797c:	e78f      	b.n	800789e <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800797e:	4905      	ldr	r1, [pc, #20]	; (8007994 <HAL_RCC_ClockConfig+0x128>)
 8007980:	68e0      	ldr	r0, [r4, #12]
 8007982:	688b      	ldr	r3, [r1, #8]
 8007984:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007988:	4303      	orrs	r3, r0
 800798a:	608b      	str	r3, [r1, #8]
 800798c:	e78a      	b.n	80078a4 <HAL_RCC_ClockConfig+0x38>
 800798e:	bf00      	nop
 8007990:	40023c00 	.word	0x40023c00
 8007994:	40023800 	.word	0x40023800
 8007998:	08021f85 	.word	0x08021f85
 800799c:	20000050 	.word	0x20000050
 80079a0:	20000058 	.word	0x20000058

080079a4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80079a4:	4b04      	ldr	r3, [pc, #16]	; (80079b8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80079a6:	4a05      	ldr	r2, [pc, #20]	; (80079bc <HAL_RCC_GetPCLK1Freq+0x18>)
 80079a8:	689b      	ldr	r3, [r3, #8]
 80079aa:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80079ae:	5cd3      	ldrb	r3, [r2, r3]
 80079b0:	4a03      	ldr	r2, [pc, #12]	; (80079c0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80079b2:	6810      	ldr	r0, [r2, #0]
}
 80079b4:	40d8      	lsrs	r0, r3
 80079b6:	4770      	bx	lr
 80079b8:	40023800 	.word	0x40023800
 80079bc:	08021f95 	.word	0x08021f95
 80079c0:	20000050 	.word	0x20000050

080079c4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80079c4:	230f      	movs	r3, #15
 80079c6:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80079c8:	4b0b      	ldr	r3, [pc, #44]	; (80079f8 <HAL_RCC_GetClockConfig+0x34>)
 80079ca:	689a      	ldr	r2, [r3, #8]
 80079cc:	f002 0203 	and.w	r2, r2, #3
 80079d0:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80079d2:	689a      	ldr	r2, [r3, #8]
 80079d4:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80079d8:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80079da:	689a      	ldr	r2, [r3, #8]
 80079dc:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80079e0:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80079e2:	689b      	ldr	r3, [r3, #8]
 80079e4:	08db      	lsrs	r3, r3, #3
 80079e6:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80079ea:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80079ec:	4b03      	ldr	r3, [pc, #12]	; (80079fc <HAL_RCC_GetClockConfig+0x38>)
 80079ee:	681b      	ldr	r3, [r3, #0]
 80079f0:	f003 030f 	and.w	r3, r3, #15
 80079f4:	600b      	str	r3, [r1, #0]
}
 80079f6:	4770      	bx	lr
 80079f8:	40023800 	.word	0x40023800
 80079fc:	40023c00 	.word	0x40023c00

08007a00 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8007a00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8007a02:	6802      	ldr	r2, [r0, #0]
{
 8007a04:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8007a06:	0610      	lsls	r0, r2, #24
 8007a08:	d508      	bpl.n	8007a1c <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8007a0a:	49aa      	ldr	r1, [pc, #680]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007a0c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8007a0e:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8007a12:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8007a16:	4303      	orrs	r3, r0
 8007a18:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8007a1c:	05d1      	lsls	r1, r2, #23
 8007a1e:	d508      	bpl.n	8007a32 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8007a20:	49a4      	ldr	r1, [pc, #656]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007a22:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8007a24:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8007a28:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007a2c:	4303      	orrs	r3, r0
 8007a2e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007a32:	f012 0f43 	tst.w	r2, #67	; 0x43
 8007a36:	d173      	bne.n	8007b20 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007a38:	6823      	ldr	r3, [r4, #0]
 8007a3a:	f013 0f0c 	tst.w	r3, #12
 8007a3e:	f000 80c1 	beq.w	8007bc4 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007a42:	4b9d      	ldr	r3, [pc, #628]	; (8007cb8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007a44:	4d9b      	ldr	r5, [pc, #620]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007a46:	2200      	movs	r2, #0
 8007a48:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007a4a:	f7fd fc93 	bl	8005374 <HAL_GetTick>
 8007a4e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007a50:	682b      	ldr	r3, [r5, #0]
 8007a52:	009b      	lsls	r3, r3, #2
 8007a54:	f100 80fc 	bmi.w	8007c50 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007a58:	6821      	ldr	r1, [r4, #0]
 8007a5a:	074f      	lsls	r7, r1, #29
 8007a5c:	d51a      	bpl.n	8007a94 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8007a5e:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007a62:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8007a66:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007a6a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007a6e:	4313      	orrs	r3, r2
 8007a70:	6922      	ldr	r2, [r4, #16]
 8007a72:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007a76:	69a2      	ldr	r2, [r4, #24]
 8007a78:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007a7c:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007a80:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007a84:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007a86:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007a8a:	3a01      	subs	r2, #1
 8007a8c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007a90:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007a94:	070e      	lsls	r6, r1, #28
 8007a96:	d519      	bpl.n	8007acc <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8007a98:	4a86      	ldr	r2, [pc, #536]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007a9a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007a9e:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8007aa2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007aa6:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8007aaa:	4303      	orrs	r3, r0
 8007aac:	6920      	ldr	r0, [r4, #16]
 8007aae:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007ab2:	69e0      	ldr	r0, [r4, #28]
 8007ab4:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8007ab8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007abc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007ac0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007ac2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007ac6:	4303      	orrs	r3, r0
 8007ac8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8007acc:	060d      	lsls	r5, r1, #24
 8007ace:	d517      	bpl.n	8007b00 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8007ad0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007ad2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8007ad6:	d113      	bne.n	8007b00 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007ad8:	4976      	ldr	r1, [pc, #472]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007ada:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007ade:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8007ae2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8007ae6:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007aea:	4313      	orrs	r3, r2
 8007aec:	6922      	ldr	r2, [r4, #16]
 8007aee:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007af2:	6962      	ldr	r2, [r4, #20]
 8007af4:	0852      	lsrs	r2, r2, #1
 8007af6:	3a01      	subs	r2, #1
 8007af8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007afc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007b00:	4b6d      	ldr	r3, [pc, #436]	; (8007cb8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007b02:	4e6c      	ldr	r6, [pc, #432]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007b04:	2201      	movs	r2, #1
 8007b06:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007b08:	f7fd fc34 	bl	8005374 <HAL_GetTick>
 8007b0c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007b0e:	6833      	ldr	r3, [r6, #0]
 8007b10:	0098      	lsls	r0, r3, #2
 8007b12:	d459      	bmi.n	8007bc8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007b14:	f7fd fc2e 	bl	8005374 <HAL_GetTick>
 8007b18:	1b40      	subs	r0, r0, r5
 8007b1a:	2802      	cmp	r0, #2
 8007b1c:	d9f7      	bls.n	8007b0e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8007b1e:	e04e      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8007b20:	4b65      	ldr	r3, [pc, #404]	; (8007cb8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007b22:	4e64      	ldr	r6, [pc, #400]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007b24:	2200      	movs	r2, #0
 8007b26:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007b28:	f7fd fc24 	bl	8005374 <HAL_GetTick>
 8007b2c:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007b2e:	6833      	ldr	r3, [r6, #0]
 8007b30:	011b      	lsls	r3, r3, #4
 8007b32:	d43f      	bmi.n	8007bb4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007b34:	6821      	ldr	r1, [r4, #0]
 8007b36:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007b38:	bf41      	itttt	mi
 8007b3a:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007b3e:	071b      	lslmi	r3, r3, #28
 8007b40:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8007b44:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007b48:	078e      	lsls	r6, r1, #30
 8007b4a:	d515      	bpl.n	8007b78 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007b4c:	4a59      	ldr	r2, [pc, #356]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007b4e:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007b50:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007b54:	6865      	ldr	r5, [r4, #4]
 8007b56:	061b      	lsls	r3, r3, #24
 8007b58:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007b5c:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007b60:	4303      	orrs	r3, r0
 8007b62:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007b66:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007b6a:	6a23      	ldr	r3, [r4, #32]
 8007b6c:	f020 001f 	bic.w	r0, r0, #31
 8007b70:	3b01      	subs	r3, #1
 8007b72:	4303      	orrs	r3, r0
 8007b74:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007b78:	064d      	lsls	r5, r1, #25
 8007b7a:	d50a      	bpl.n	8007b92 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007b7c:	68e3      	ldr	r3, [r4, #12]
 8007b7e:	6862      	ldr	r2, [r4, #4]
 8007b80:	061b      	lsls	r3, r3, #24
 8007b82:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007b86:	68a2      	ldr	r2, [r4, #8]
 8007b88:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007b8c:	4a49      	ldr	r2, [pc, #292]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007b8e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007b92:	4b49      	ldr	r3, [pc, #292]	; (8007cb8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007b94:	4e47      	ldr	r6, [pc, #284]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007b96:	2201      	movs	r2, #1
 8007b98:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007b9a:	f7fd fbeb 	bl	8005374 <HAL_GetTick>
 8007b9e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007ba0:	6833      	ldr	r3, [r6, #0]
 8007ba2:	0118      	lsls	r0, r3, #4
 8007ba4:	f53f af48 	bmi.w	8007a38 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007ba8:	f7fd fbe4 	bl	8005374 <HAL_GetTick>
 8007bac:	1b40      	subs	r0, r0, r5
 8007bae:	2802      	cmp	r0, #2
 8007bb0:	d9f6      	bls.n	8007ba0 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8007bb2:	e004      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007bb4:	f7fd fbde 	bl	8005374 <HAL_GetTick>
 8007bb8:	1b40      	subs	r0, r0, r5
 8007bba:	2802      	cmp	r0, #2
 8007bbc:	d9b7      	bls.n	8007b2e <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 8007bbe:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8007bc0:	b003      	add	sp, #12
 8007bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8007bc4:	0619      	lsls	r1, r3, #24
 8007bc6:	d43e      	bmi.n	8007c46 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007bc8:	6823      	ldr	r3, [r4, #0]
 8007bca:	069a      	lsls	r2, r3, #26
 8007bcc:	d530      	bpl.n	8007c30 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 8007bce:	2300      	movs	r3, #0
 8007bd0:	9301      	str	r3, [sp, #4]
 8007bd2:	4b38      	ldr	r3, [pc, #224]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8007bd4:	4d39      	ldr	r5, [pc, #228]	; (8007cbc <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007bd6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007bd8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007bdc:	641a      	str	r2, [r3, #64]	; 0x40
 8007bde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007be0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007be4:	9301      	str	r3, [sp, #4]
 8007be6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007be8:	682b      	ldr	r3, [r5, #0]
 8007bea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007bee:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8007bf0:	f7fd fbc0 	bl	8005374 <HAL_GetTick>
 8007bf4:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007bf6:	682b      	ldr	r3, [r5, #0]
 8007bf8:	05d9      	lsls	r1, r3, #23
 8007bfa:	d530      	bpl.n	8007c5e <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007bfc:	4d2d      	ldr	r5, [pc, #180]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007bfe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007c00:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007c04:	d131      	bne.n	8007c6a <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007c06:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007c08:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007c0c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007c10:	4a28      	ldr	r2, [pc, #160]	; (8007cb4 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8007c12:	d14b      	bne.n	8007cac <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8007c14:	6891      	ldr	r1, [r2, #8]
 8007c16:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007c1a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007c1e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007c22:	4301      	orrs	r1, r0
 8007c24:	6091      	str	r1, [r2, #8]
 8007c26:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007c28:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007c2c:	430b      	orrs	r3, r1
 8007c2e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007c30:	6820      	ldr	r0, [r4, #0]
 8007c32:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007c36:	bf1f      	itttt	ne
 8007c38:	4b21      	ldrne	r3, [pc, #132]	; (8007cc0 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8007c3a:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8007c3e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8007c42:	2000      	movne	r0, #0
 8007c44:	e7bc      	b.n	8007bc0 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8007c46:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007c48:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8007c4c:	d1bc      	bne.n	8007bc8 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8007c4e:	e6f8      	b.n	8007a42 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007c50:	f7fd fb90 	bl	8005374 <HAL_GetTick>
 8007c54:	1b80      	subs	r0, r0, r6
 8007c56:	2802      	cmp	r0, #2
 8007c58:	f67f aefa 	bls.w	8007a50 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8007c5c:	e7af      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007c5e:	f7fd fb89 	bl	8005374 <HAL_GetTick>
 8007c62:	1b80      	subs	r0, r0, r6
 8007c64:	2802      	cmp	r0, #2
 8007c66:	d9c6      	bls.n	8007bf6 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8007c68:	e7a9      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007c6a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007c6c:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007c70:	4293      	cmp	r3, r2
 8007c72:	d0c8      	beq.n	8007c06 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007c74:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007c76:	4a10      	ldr	r2, [pc, #64]	; (8007cb8 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8007c78:	2101      	movs	r1, #1
 8007c7a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007c7e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007c82:	2100      	movs	r1, #0
 8007c84:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007c88:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007c8a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007c8c:	07da      	lsls	r2, r3, #31
 8007c8e:	d5ba      	bpl.n	8007c06 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8007c90:	f7fd fb70 	bl	8005374 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007c94:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007c98:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007c9a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007c9c:	079b      	lsls	r3, r3, #30
 8007c9e:	d4b2      	bmi.n	8007c06 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007ca0:	f7fd fb68 	bl	8005374 <HAL_GetTick>
 8007ca4:	1b80      	subs	r0, r0, r6
 8007ca6:	42b8      	cmp	r0, r7
 8007ca8:	d9f7      	bls.n	8007c9a <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8007caa:	e788      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007cac:	6891      	ldr	r1, [r2, #8]
 8007cae:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007cb2:	e7b7      	b.n	8007c24 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8007cb4:	40023800 	.word	0x40023800
 8007cb8:	42470000 	.word	0x42470000
 8007cbc:	40007000 	.word	0x40007000
 8007cc0:	42471000 	.word	0x42471000

08007cc4 <HAL_RCC_OscConfig>:
  uint32_t tickstart = 0U;

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007cc4:	6803      	ldr	r3, [r0, #0]
{
 8007cc6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007cca:	07dd      	lsls	r5, r3, #31
{
 8007ccc:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007cce:	d410      	bmi.n	8007cf2 <HAL_RCC_OscConfig+0x2e>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8007cd0:	6823      	ldr	r3, [r4, #0]
 8007cd2:	0798      	lsls	r0, r3, #30
 8007cd4:	d45e      	bmi.n	8007d94 <HAL_RCC_OscConfig+0xd0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007cd6:	6823      	ldr	r3, [r4, #0]
 8007cd8:	071a      	lsls	r2, r3, #28
 8007cda:	f100 80a0 	bmi.w	8007e1e <HAL_RCC_OscConfig+0x15a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007cde:	6823      	ldr	r3, [r4, #0]
 8007ce0:	075b      	lsls	r3, r3, #29
 8007ce2:	f100 80c0 	bmi.w	8007e66 <HAL_RCC_OscConfig+0x1a2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007ce6:	69a2      	ldr	r2, [r4, #24]
 8007ce8:	2a00      	cmp	r2, #0
 8007cea:	f040 8127 	bne.w	8007f3c <HAL_RCC_OscConfig+0x278>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 8007cee:	2000      	movs	r0, #0
 8007cf0:	e015      	b.n	8007d1e <HAL_RCC_OscConfig+0x5a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8007cf2:	4b8f      	ldr	r3, [pc, #572]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007cf4:	689a      	ldr	r2, [r3, #8]
 8007cf6:	f002 020c 	and.w	r2, r2, #12
 8007cfa:	2a04      	cmp	r2, #4
 8007cfc:	d007      	beq.n	8007d0e <HAL_RCC_OscConfig+0x4a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007cfe:	689a      	ldr	r2, [r3, #8]
 8007d00:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8007d04:	2a08      	cmp	r2, #8
 8007d06:	d10d      	bne.n	8007d24 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007d08:	685a      	ldr	r2, [r3, #4]
 8007d0a:	0251      	lsls	r1, r2, #9
 8007d0c:	d50a      	bpl.n	8007d24 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007d0e:	4b88      	ldr	r3, [pc, #544]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	039a      	lsls	r2, r3, #14
 8007d14:	d5dc      	bpl.n	8007cd0 <HAL_RCC_OscConfig+0xc>
 8007d16:	6863      	ldr	r3, [r4, #4]
 8007d18:	2b00      	cmp	r3, #0
 8007d1a:	d1d9      	bne.n	8007cd0 <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 8007d1c:	2001      	movs	r0, #1
}
 8007d1e:	b002      	add	sp, #8
 8007d20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007d24:	6862      	ldr	r2, [r4, #4]
 8007d26:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007d2a:	d111      	bne.n	8007d50 <HAL_RCC_OscConfig+0x8c>
 8007d2c:	681a      	ldr	r2, [r3, #0]
 8007d2e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007d32:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007d34:	f7fd fb1e 	bl	8005374 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007d38:	4e7d      	ldr	r6, [pc, #500]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8007d3a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007d3c:	6833      	ldr	r3, [r6, #0]
 8007d3e:	039b      	lsls	r3, r3, #14
 8007d40:	d4c6      	bmi.n	8007cd0 <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007d42:	f7fd fb17 	bl	8005374 <HAL_GetTick>
 8007d46:	1b40      	subs	r0, r0, r5
 8007d48:	2864      	cmp	r0, #100	; 0x64
 8007d4a:	d9f7      	bls.n	8007d3c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8007d4c:	2003      	movs	r0, #3
 8007d4e:	e7e6      	b.n	8007d1e <HAL_RCC_OscConfig+0x5a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007d50:	4d77      	ldr	r5, [pc, #476]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007d52:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007d56:	682b      	ldr	r3, [r5, #0]
 8007d58:	d107      	bne.n	8007d6a <HAL_RCC_OscConfig+0xa6>
 8007d5a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007d5e:	602b      	str	r3, [r5, #0]
 8007d60:	682b      	ldr	r3, [r5, #0]
 8007d62:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d66:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007d68:	e7e4      	b.n	8007d34 <HAL_RCC_OscConfig+0x70>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007d6a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d6e:	602b      	str	r3, [r5, #0]
 8007d70:	682b      	ldr	r3, [r5, #0]
 8007d72:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007d76:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007d78:	2a00      	cmp	r2, #0
 8007d7a:	d1db      	bne.n	8007d34 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 8007d7c:	f7fd fafa 	bl	8005374 <HAL_GetTick>
 8007d80:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8007d82:	682b      	ldr	r3, [r5, #0]
 8007d84:	039f      	lsls	r7, r3, #14
 8007d86:	d5a3      	bpl.n	8007cd0 <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007d88:	f7fd faf4 	bl	8005374 <HAL_GetTick>
 8007d8c:	1b80      	subs	r0, r0, r6
 8007d8e:	2864      	cmp	r0, #100	; 0x64
 8007d90:	d9f7      	bls.n	8007d82 <HAL_RCC_OscConfig+0xbe>
 8007d92:	e7db      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8007d94:	4b66      	ldr	r3, [pc, #408]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007d96:	689a      	ldr	r2, [r3, #8]
 8007d98:	f012 0f0c 	tst.w	r2, #12
 8007d9c:	d007      	beq.n	8007dae <HAL_RCC_OscConfig+0xea>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007d9e:	689a      	ldr	r2, [r3, #8]
 8007da0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8007da4:	2a08      	cmp	r2, #8
 8007da6:	d111      	bne.n	8007dcc <HAL_RCC_OscConfig+0x108>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007da8:	685b      	ldr	r3, [r3, #4]
 8007daa:	025e      	lsls	r6, r3, #9
 8007dac:	d40e      	bmi.n	8007dcc <HAL_RCC_OscConfig+0x108>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007dae:	4a60      	ldr	r2, [pc, #384]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007db0:	6813      	ldr	r3, [r2, #0]
 8007db2:	079d      	lsls	r5, r3, #30
 8007db4:	d502      	bpl.n	8007dbc <HAL_RCC_OscConfig+0xf8>
 8007db6:	68e3      	ldr	r3, [r4, #12]
 8007db8:	2b01      	cmp	r3, #1
 8007dba:	d1af      	bne.n	8007d1c <HAL_RCC_OscConfig+0x58>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007dbc:	6813      	ldr	r3, [r2, #0]
 8007dbe:	6921      	ldr	r1, [r4, #16]
 8007dc0:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007dc4:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007dc8:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007dca:	e784      	b.n	8007cd6 <HAL_RCC_OscConfig+0x12>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8007dcc:	68e2      	ldr	r2, [r4, #12]
 8007dce:	4b59      	ldr	r3, [pc, #356]	; (8007f34 <HAL_RCC_OscConfig+0x270>)
 8007dd0:	b1b2      	cbz	r2, 8007e00 <HAL_RCC_OscConfig+0x13c>
        __HAL_RCC_HSI_ENABLE();
 8007dd2:	2201      	movs	r2, #1
 8007dd4:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007dd6:	f7fd facd 	bl	8005374 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007dda:	4d55      	ldr	r5, [pc, #340]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8007ddc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007dde:	682b      	ldr	r3, [r5, #0]
 8007de0:	0798      	lsls	r0, r3, #30
 8007de2:	d507      	bpl.n	8007df4 <HAL_RCC_OscConfig+0x130>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007de4:	682b      	ldr	r3, [r5, #0]
 8007de6:	6922      	ldr	r2, [r4, #16]
 8007de8:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007dec:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007df0:	602b      	str	r3, [r5, #0]
 8007df2:	e770      	b.n	8007cd6 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007df4:	f7fd fabe 	bl	8005374 <HAL_GetTick>
 8007df8:	1b80      	subs	r0, r0, r6
 8007dfa:	2802      	cmp	r0, #2
 8007dfc:	d9ef      	bls.n	8007dde <HAL_RCC_OscConfig+0x11a>
 8007dfe:	e7a5      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8007e00:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007e02:	f7fd fab7 	bl	8005374 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007e06:	4e4a      	ldr	r6, [pc, #296]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8007e08:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007e0a:	6833      	ldr	r3, [r6, #0]
 8007e0c:	0799      	lsls	r1, r3, #30
 8007e0e:	f57f af62 	bpl.w	8007cd6 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007e12:	f7fd faaf 	bl	8005374 <HAL_GetTick>
 8007e16:	1b40      	subs	r0, r0, r5
 8007e18:	2802      	cmp	r0, #2
 8007e1a:	d9f6      	bls.n	8007e0a <HAL_RCC_OscConfig+0x146>
 8007e1c:	e796      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007e1e:	6962      	ldr	r2, [r4, #20]
 8007e20:	4b44      	ldr	r3, [pc, #272]	; (8007f34 <HAL_RCC_OscConfig+0x270>)
 8007e22:	b182      	cbz	r2, 8007e46 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8007e24:	2201      	movs	r2, #1
 8007e26:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007e2a:	f7fd faa3 	bl	8005374 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007e2e:	4e40      	ldr	r6, [pc, #256]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8007e30:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007e32:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007e34:	079f      	lsls	r7, r3, #30
 8007e36:	f53f af52 	bmi.w	8007cde <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007e3a:	f7fd fa9b 	bl	8005374 <HAL_GetTick>
 8007e3e:	1b40      	subs	r0, r0, r5
 8007e40:	2802      	cmp	r0, #2
 8007e42:	d9f6      	bls.n	8007e32 <HAL_RCC_OscConfig+0x16e>
 8007e44:	e782      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 8007e46:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007e4a:	f7fd fa93 	bl	8005374 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007e4e:	4e38      	ldr	r6, [pc, #224]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8007e50:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007e52:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007e54:	0798      	lsls	r0, r3, #30
 8007e56:	f57f af42 	bpl.w	8007cde <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007e5a:	f7fd fa8b 	bl	8005374 <HAL_GetTick>
 8007e5e:	1b40      	subs	r0, r0, r5
 8007e60:	2802      	cmp	r0, #2
 8007e62:	d9f6      	bls.n	8007e52 <HAL_RCC_OscConfig+0x18e>
 8007e64:	e772      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007e66:	4b32      	ldr	r3, [pc, #200]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007e68:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007e6a:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8007e6e:	d128      	bne.n	8007ec2 <HAL_RCC_OscConfig+0x1fe>
      __HAL_RCC_PWR_CLK_ENABLE();
 8007e70:	9201      	str	r2, [sp, #4]
 8007e72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007e74:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007e78:	641a      	str	r2, [r3, #64]	; 0x40
 8007e7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007e7c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007e80:	9301      	str	r3, [sp, #4]
 8007e82:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8007e84:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007e86:	4d2c      	ldr	r5, [pc, #176]	; (8007f38 <HAL_RCC_OscConfig+0x274>)
 8007e88:	682b      	ldr	r3, [r5, #0]
 8007e8a:	05d9      	lsls	r1, r3, #23
 8007e8c:	d51b      	bpl.n	8007ec6 <HAL_RCC_OscConfig+0x202>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007e8e:	68a3      	ldr	r3, [r4, #8]
 8007e90:	4d27      	ldr	r5, [pc, #156]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007e92:	2b01      	cmp	r3, #1
 8007e94:	d127      	bne.n	8007ee6 <HAL_RCC_OscConfig+0x222>
 8007e96:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007e98:	f043 0301 	orr.w	r3, r3, #1
 8007e9c:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007e9e:	f7fd fa69 	bl	8005374 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007ea2:	4e23      	ldr	r6, [pc, #140]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8007ea4:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007ea6:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007eaa:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8007eac:	079b      	lsls	r3, r3, #30
 8007eae:	d539      	bpl.n	8007f24 <HAL_RCC_OscConfig+0x260>
    if(pwrclkchanged == SET)
 8007eb0:	2f00      	cmp	r7, #0
 8007eb2:	f43f af18 	beq.w	8007ce6 <HAL_RCC_OscConfig+0x22>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007eb6:	4a1e      	ldr	r2, [pc, #120]	; (8007f30 <HAL_RCC_OscConfig+0x26c>)
 8007eb8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007eba:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007ebe:	6413      	str	r3, [r2, #64]	; 0x40
 8007ec0:	e711      	b.n	8007ce6 <HAL_RCC_OscConfig+0x22>
    FlagStatus       pwrclkchanged = RESET;
 8007ec2:	2700      	movs	r7, #0
 8007ec4:	e7df      	b.n	8007e86 <HAL_RCC_OscConfig+0x1c2>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007ec6:	682b      	ldr	r3, [r5, #0]
 8007ec8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007ecc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8007ece:	f7fd fa51 	bl	8005374 <HAL_GetTick>
 8007ed2:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007ed4:	682b      	ldr	r3, [r5, #0]
 8007ed6:	05da      	lsls	r2, r3, #23
 8007ed8:	d4d9      	bmi.n	8007e8e <HAL_RCC_OscConfig+0x1ca>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007eda:	f7fd fa4b 	bl	8005374 <HAL_GetTick>
 8007ede:	1b80      	subs	r0, r0, r6
 8007ee0:	2802      	cmp	r0, #2
 8007ee2:	d9f7      	bls.n	8007ed4 <HAL_RCC_OscConfig+0x210>
 8007ee4:	e732      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007ee6:	2b05      	cmp	r3, #5
 8007ee8:	d104      	bne.n	8007ef4 <HAL_RCC_OscConfig+0x230>
 8007eea:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007eec:	f043 0304 	orr.w	r3, r3, #4
 8007ef0:	672b      	str	r3, [r5, #112]	; 0x70
 8007ef2:	e7d0      	b.n	8007e96 <HAL_RCC_OscConfig+0x1d2>
 8007ef4:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007ef6:	f022 0201 	bic.w	r2, r2, #1
 8007efa:	672a      	str	r2, [r5, #112]	; 0x70
 8007efc:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007efe:	f022 0204 	bic.w	r2, r2, #4
 8007f02:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d1ca      	bne.n	8007e9e <HAL_RCC_OscConfig+0x1da>
      tickstart = HAL_GetTick();
 8007f08:	f7fd fa34 	bl	8005374 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007f0c:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8007f10:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007f12:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007f14:	0798      	lsls	r0, r3, #30
 8007f16:	d5cb      	bpl.n	8007eb0 <HAL_RCC_OscConfig+0x1ec>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007f18:	f7fd fa2c 	bl	8005374 <HAL_GetTick>
 8007f1c:	1b80      	subs	r0, r0, r6
 8007f1e:	4540      	cmp	r0, r8
 8007f20:	d9f7      	bls.n	8007f12 <HAL_RCC_OscConfig+0x24e>
 8007f22:	e713      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007f24:	f7fd fa26 	bl	8005374 <HAL_GetTick>
 8007f28:	1b40      	subs	r0, r0, r5
 8007f2a:	4540      	cmp	r0, r8
 8007f2c:	d9bd      	bls.n	8007eaa <HAL_RCC_OscConfig+0x1e6>
 8007f2e:	e70d      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
 8007f30:	40023800 	.word	0x40023800
 8007f34:	42470000 	.word	0x42470000
 8007f38:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007f3c:	4d24      	ldr	r5, [pc, #144]	; (8007fd0 <HAL_RCC_OscConfig+0x30c>)
 8007f3e:	68ab      	ldr	r3, [r5, #8]
 8007f40:	f003 030c 	and.w	r3, r3, #12
 8007f44:	2b08      	cmp	r3, #8
 8007f46:	f43f aee9 	beq.w	8007d1c <HAL_RCC_OscConfig+0x58>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007f4a:	4b22      	ldr	r3, [pc, #136]	; (8007fd4 <HAL_RCC_OscConfig+0x310>)
 8007f4c:	2a02      	cmp	r2, #2
 8007f4e:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 8007f52:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007f54:	d12e      	bne.n	8007fb4 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8007f56:	f7fd fa0d 	bl	8005374 <HAL_GetTick>
 8007f5a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007f5c:	682b      	ldr	r3, [r5, #0]
 8007f5e:	0199      	lsls	r1, r3, #6
 8007f60:	d422      	bmi.n	8007fa8 <HAL_RCC_OscConfig+0x2e4>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007f62:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007f66:	4313      	orrs	r3, r2
 8007f68:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007f6a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007f6e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007f70:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007f74:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007f76:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007f7a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007f7c:	0852      	lsrs	r2, r2, #1
 8007f7e:	3a01      	subs	r2, #1
 8007f80:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007f84:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8007f86:	4b13      	ldr	r3, [pc, #76]	; (8007fd4 <HAL_RCC_OscConfig+0x310>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007f88:	4d11      	ldr	r5, [pc, #68]	; (8007fd0 <HAL_RCC_OscConfig+0x30c>)
        __HAL_RCC_PLL_ENABLE();
 8007f8a:	2201      	movs	r2, #1
 8007f8c:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8007f8e:	f7fd f9f1 	bl	8005374 <HAL_GetTick>
 8007f92:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007f94:	682b      	ldr	r3, [r5, #0]
 8007f96:	019a      	lsls	r2, r3, #6
 8007f98:	f53f aea9 	bmi.w	8007cee <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007f9c:	f7fd f9ea 	bl	8005374 <HAL_GetTick>
 8007fa0:	1b00      	subs	r0, r0, r4
 8007fa2:	2802      	cmp	r0, #2
 8007fa4:	d9f6      	bls.n	8007f94 <HAL_RCC_OscConfig+0x2d0>
 8007fa6:	e6d1      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007fa8:	f7fd f9e4 	bl	8005374 <HAL_GetTick>
 8007fac:	1b80      	subs	r0, r0, r6
 8007fae:	2802      	cmp	r0, #2
 8007fb0:	d9d4      	bls.n	8007f5c <HAL_RCC_OscConfig+0x298>
 8007fb2:	e6cb      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8007fb4:	f7fd f9de 	bl	8005374 <HAL_GetTick>
 8007fb8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007fba:	682b      	ldr	r3, [r5, #0]
 8007fbc:	019b      	lsls	r3, r3, #6
 8007fbe:	f57f ae96 	bpl.w	8007cee <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007fc2:	f7fd f9d7 	bl	8005374 <HAL_GetTick>
 8007fc6:	1b00      	subs	r0, r0, r4
 8007fc8:	2802      	cmp	r0, #2
 8007fca:	d9f6      	bls.n	8007fba <HAL_RCC_OscConfig+0x2f6>
 8007fcc:	e6be      	b.n	8007d4c <HAL_RCC_OscConfig+0x88>
 8007fce:	bf00      	nop
 8007fd0:	40023800 	.word	0x40023800
 8007fd4:	42470000 	.word	0x42470000

08007fd8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007fd8:	b538      	push	{r3, r4, r5, lr}
 8007fda:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007fdc:	4604      	mov	r4, r0
 8007fde:	b1c8      	cbz	r0, 8008014 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007fe0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007fe4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007fe8:	b91b      	cbnz	r3, 8007ff2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007fea:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007fee:	f7f9 fe99 	bl	8001d24 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007ff2:	2302      	movs	r3, #2
 8007ff4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007ff8:	1d21      	adds	r1, r4, #4
 8007ffa:	6820      	ldr	r0, [r4, #0]
 8007ffc:	f000 f97c 	bl	80082f8 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8008000:	6862      	ldr	r2, [r4, #4]
 8008002:	6820      	ldr	r0, [r4, #0]
 8008004:	4629      	mov	r1, r5
 8008006:	f000 f9ad 	bl	8008364 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800800a:	2301      	movs	r3, #1
 800800c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8008010:	2000      	movs	r0, #0
}
 8008012:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008014:	2001      	movs	r0, #1
 8008016:	e7fc      	b.n	8008012 <HAL_SDRAM_Init+0x3a>

08008018 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8008018:	b510      	push	{r4, lr}
 800801a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800801c:	f7f9 fefa 	bl	8001e14 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8008020:	e9d4 0100 	ldrd	r0, r1, [r4]
 8008024:	f000 f9da 	bl	80083dc <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8008028:	2000      	movs	r0, #0
 800802a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800802e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8008032:	bd10      	pop	{r4, pc}

08008034 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008034:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008036:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800803a:	2b02      	cmp	r3, #2
{
 800803c:	4604      	mov	r4, r0
 800803e:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008040:	b2d8      	uxtb	r0, r3
 8008042:	d00d      	beq.n	8008060 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008044:	2302      	movs	r3, #2
 8008046:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800804a:	6820      	ldr	r0, [r4, #0]
 800804c:	f000 f9d5 	bl	80083fa <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008050:	682b      	ldr	r3, [r5, #0]
 8008052:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8008054:	bf0c      	ite	eq
 8008056:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8008058:	2301      	movne	r3, #1
 800805a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 800805e:	2000      	movs	r0, #0
}
 8008060:	bd38      	pop	{r3, r4, r5, pc}

08008062 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8008062:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008064:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008068:	2b02      	cmp	r3, #2
{
 800806a:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 800806c:	b2d8      	uxtb	r0, r3
 800806e:	d009      	beq.n	8008084 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008070:	2302      	movs	r3, #2
 8008072:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8008076:	6820      	ldr	r0, [r4, #0]
 8008078:	f000 f9e6 	bl	8008448 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800807c:	2301      	movs	r3, #1
 800807e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8008082:	2000      	movs	r0, #0
}
 8008084:	bd10      	pop	{r4, pc}

08008086 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8008086:	4770      	bx	lr

08008088 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008088:	6803      	ldr	r3, [r0, #0]
 800808a:	68da      	ldr	r2, [r3, #12]
 800808c:	f042 0201 	orr.w	r2, r2, #1
 8008090:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008092:	689a      	ldr	r2, [r3, #8]
 8008094:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008098:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 800809a:	bf1e      	ittt	ne
 800809c:	681a      	ldrne	r2, [r3, #0]
 800809e:	f042 0201 	orrne.w	r2, r2, #1
 80080a2:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80080a4:	2000      	movs	r0, #0
 80080a6:	4770      	bx	lr

080080a8 <HAL_TIM_OC_DelayElapsedCallback>:
 80080a8:	4770      	bx	lr

080080aa <HAL_TIM_IC_CaptureCallback>:
 80080aa:	4770      	bx	lr

080080ac <HAL_TIM_PWM_PulseFinishedCallback>:
 80080ac:	4770      	bx	lr

080080ae <HAL_TIM_TriggerCallback>:
 80080ae:	4770      	bx	lr

080080b0 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080b0:	6803      	ldr	r3, [r0, #0]
 80080b2:	691a      	ldr	r2, [r3, #16]
 80080b4:	0791      	lsls	r1, r2, #30
{
 80080b6:	b510      	push	{r4, lr}
 80080b8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80080ba:	d50e      	bpl.n	80080da <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80080bc:	68da      	ldr	r2, [r3, #12]
 80080be:	0792      	lsls	r2, r2, #30
 80080c0:	d50b      	bpl.n	80080da <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80080c2:	f06f 0202 	mvn.w	r2, #2
 80080c6:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80080c8:	2201      	movs	r2, #1
 80080ca:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80080cc:	699b      	ldr	r3, [r3, #24]
 80080ce:	079b      	lsls	r3, r3, #30
 80080d0:	d077      	beq.n	80081c2 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80080d2:	f7ff ffea 	bl	80080aa <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080d6:	2300      	movs	r3, #0
 80080d8:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80080da:	6823      	ldr	r3, [r4, #0]
 80080dc:	691a      	ldr	r2, [r3, #16]
 80080de:	0750      	lsls	r0, r2, #29
 80080e0:	d510      	bpl.n	8008104 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80080e2:	68da      	ldr	r2, [r3, #12]
 80080e4:	0751      	lsls	r1, r2, #29
 80080e6:	d50d      	bpl.n	8008104 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80080e8:	f06f 0204 	mvn.w	r2, #4
 80080ec:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80080ee:	2202      	movs	r2, #2
 80080f0:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080f2:	699b      	ldr	r3, [r3, #24]
 80080f4:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080f8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080fa:	d068      	beq.n	80081ce <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80080fc:	f7ff ffd5 	bl	80080aa <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008100:	2300      	movs	r3, #0
 8008102:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8008104:	6823      	ldr	r3, [r4, #0]
 8008106:	691a      	ldr	r2, [r3, #16]
 8008108:	0712      	lsls	r2, r2, #28
 800810a:	d50f      	bpl.n	800812c <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800810c:	68da      	ldr	r2, [r3, #12]
 800810e:	0710      	lsls	r0, r2, #28
 8008110:	d50c      	bpl.n	800812c <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008112:	f06f 0208 	mvn.w	r2, #8
 8008116:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008118:	2204      	movs	r2, #4
 800811a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800811c:	69db      	ldr	r3, [r3, #28]
 800811e:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008120:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008122:	d05a      	beq.n	80081da <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008124:	f7ff ffc1 	bl	80080aa <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008128:	2300      	movs	r3, #0
 800812a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800812c:	6823      	ldr	r3, [r4, #0]
 800812e:	691a      	ldr	r2, [r3, #16]
 8008130:	06d2      	lsls	r2, r2, #27
 8008132:	d510      	bpl.n	8008156 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008134:	68da      	ldr	r2, [r3, #12]
 8008136:	06d0      	lsls	r0, r2, #27
 8008138:	d50d      	bpl.n	8008156 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800813a:	f06f 0210 	mvn.w	r2, #16
 800813e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008140:	2208      	movs	r2, #8
 8008142:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008144:	69db      	ldr	r3, [r3, #28]
 8008146:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800814a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800814c:	d04b      	beq.n	80081e6 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800814e:	f7ff ffac 	bl	80080aa <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008152:	2300      	movs	r3, #0
 8008154:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008156:	6823      	ldr	r3, [r4, #0]
 8008158:	691a      	ldr	r2, [r3, #16]
 800815a:	07d1      	lsls	r1, r2, #31
 800815c:	d508      	bpl.n	8008170 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800815e:	68da      	ldr	r2, [r3, #12]
 8008160:	07d2      	lsls	r2, r2, #31
 8008162:	d505      	bpl.n	8008170 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008164:	f06f 0201 	mvn.w	r2, #1
 8008168:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800816a:	4620      	mov	r0, r4
 800816c:	f7f9 fc2c 	bl	80019c8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008170:	6823      	ldr	r3, [r4, #0]
 8008172:	691a      	ldr	r2, [r3, #16]
 8008174:	0610      	lsls	r0, r2, #24
 8008176:	d508      	bpl.n	800818a <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008178:	68da      	ldr	r2, [r3, #12]
 800817a:	0611      	lsls	r1, r2, #24
 800817c:	d505      	bpl.n	800818a <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800817e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008182:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008184:	4620      	mov	r0, r4
 8008186:	f000 f8b6 	bl	80082f6 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800818a:	6823      	ldr	r3, [r4, #0]
 800818c:	691a      	ldr	r2, [r3, #16]
 800818e:	0652      	lsls	r2, r2, #25
 8008190:	d508      	bpl.n	80081a4 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008192:	68da      	ldr	r2, [r3, #12]
 8008194:	0650      	lsls	r0, r2, #25
 8008196:	d505      	bpl.n	80081a4 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008198:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800819c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800819e:	4620      	mov	r0, r4
 80081a0:	f7ff ff85 	bl	80080ae <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80081a4:	6823      	ldr	r3, [r4, #0]
 80081a6:	691a      	ldr	r2, [r3, #16]
 80081a8:	0691      	lsls	r1, r2, #26
 80081aa:	d522      	bpl.n	80081f2 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80081ac:	68da      	ldr	r2, [r3, #12]
 80081ae:	0692      	lsls	r2, r2, #26
 80081b0:	d51f      	bpl.n	80081f2 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081b2:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80081b6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80081b8:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80081ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80081be:	f000 b899 	b.w	80082f4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80081c2:	f7ff ff71 	bl	80080a8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081c6:	4620      	mov	r0, r4
 80081c8:	f7ff ff70 	bl	80080ac <HAL_TIM_PWM_PulseFinishedCallback>
 80081cc:	e783      	b.n	80080d6 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081ce:	f7ff ff6b 	bl	80080a8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081d2:	4620      	mov	r0, r4
 80081d4:	f7ff ff6a 	bl	80080ac <HAL_TIM_PWM_PulseFinishedCallback>
 80081d8:	e792      	b.n	8008100 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081da:	f7ff ff65 	bl	80080a8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081de:	4620      	mov	r0, r4
 80081e0:	f7ff ff64 	bl	80080ac <HAL_TIM_PWM_PulseFinishedCallback>
 80081e4:	e7a0      	b.n	8008128 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081e6:	f7ff ff5f 	bl	80080a8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081ea:	4620      	mov	r0, r4
 80081ec:	f7ff ff5e 	bl	80080ac <HAL_TIM_PWM_PulseFinishedCallback>
 80081f0:	e7af      	b.n	8008152 <HAL_TIM_IRQHandler+0xa2>
}
 80081f2:	bd10      	pop	{r4, pc}

080081f4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081f4:	4a30      	ldr	r2, [pc, #192]	; (80082b8 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80081f6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081f8:	4290      	cmp	r0, r2
 80081fa:	d012      	beq.n	8008222 <TIM_Base_SetConfig+0x2e>
 80081fc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008200:	d00f      	beq.n	8008222 <TIM_Base_SetConfig+0x2e>
 8008202:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008206:	4290      	cmp	r0, r2
 8008208:	d00b      	beq.n	8008222 <TIM_Base_SetConfig+0x2e>
 800820a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800820e:	4290      	cmp	r0, r2
 8008210:	d007      	beq.n	8008222 <TIM_Base_SetConfig+0x2e>
 8008212:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008216:	4290      	cmp	r0, r2
 8008218:	d003      	beq.n	8008222 <TIM_Base_SetConfig+0x2e>
 800821a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800821e:	4290      	cmp	r0, r2
 8008220:	d119      	bne.n	8008256 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008222:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008224:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008228:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800822a:	4a23      	ldr	r2, [pc, #140]	; (80082b8 <TIM_Base_SetConfig+0xc4>)
 800822c:	4290      	cmp	r0, r2
 800822e:	d029      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 8008230:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008234:	d026      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 8008236:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800823a:	4290      	cmp	r0, r2
 800823c:	d022      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 800823e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008242:	4290      	cmp	r0, r2
 8008244:	d01e      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 8008246:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800824a:	4290      	cmp	r0, r2
 800824c:	d01a      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 800824e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008252:	4290      	cmp	r0, r2
 8008254:	d016      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 8008256:	4a19      	ldr	r2, [pc, #100]	; (80082bc <TIM_Base_SetConfig+0xc8>)
 8008258:	4290      	cmp	r0, r2
 800825a:	d013      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 800825c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008260:	4290      	cmp	r0, r2
 8008262:	d00f      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 8008264:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008268:	4290      	cmp	r0, r2
 800826a:	d00b      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 800826c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008270:	4290      	cmp	r0, r2
 8008272:	d007      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 8008274:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008278:	4290      	cmp	r0, r2
 800827a:	d003      	beq.n	8008284 <TIM_Base_SetConfig+0x90>
 800827c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008280:	4290      	cmp	r0, r2
 8008282:	d103      	bne.n	800828c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008284:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008286:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800828a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800828c:	694a      	ldr	r2, [r1, #20]
 800828e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008292:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008294:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008296:	688b      	ldr	r3, [r1, #8]
 8008298:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800829a:	680b      	ldr	r3, [r1, #0]
 800829c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800829e:	4b06      	ldr	r3, [pc, #24]	; (80082b8 <TIM_Base_SetConfig+0xc4>)
 80082a0:	4298      	cmp	r0, r3
 80082a2:	d003      	beq.n	80082ac <TIM_Base_SetConfig+0xb8>
 80082a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80082a8:	4298      	cmp	r0, r3
 80082aa:	d101      	bne.n	80082b0 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80082ac:	690b      	ldr	r3, [r1, #16]
 80082ae:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80082b0:	2301      	movs	r3, #1
 80082b2:	6143      	str	r3, [r0, #20]
}
 80082b4:	4770      	bx	lr
 80082b6:	bf00      	nop
 80082b8:	40010000 	.word	0x40010000
 80082bc:	40014000 	.word	0x40014000

080082c0 <HAL_TIM_Base_Init>:
{
 80082c0:	b510      	push	{r4, lr}
  if (htim == NULL)
 80082c2:	4604      	mov	r4, r0
 80082c4:	b1a0      	cbz	r0, 80082f0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80082c6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80082ca:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80082ce:	b91b      	cbnz	r3, 80082d8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80082d0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80082d4:	f7ff fed7 	bl	8008086 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80082d8:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082da:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80082dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082e0:	1d21      	adds	r1, r4, #4
 80082e2:	f7ff ff87 	bl	80081f4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80082e6:	2301      	movs	r3, #1
 80082e8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80082ec:	2000      	movs	r0, #0
}
 80082ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082f0:	2001      	movs	r0, #1
 80082f2:	e7fc      	b.n	80082ee <HAL_TIM_Base_Init+0x2e>

080082f4 <HAL_TIMEx_CommutCallback>:
 80082f4:	4770      	bx	lr

080082f6 <HAL_TIMEx_BreakCallback>:
 80082f6:	4770      	bx	lr

080082f8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80082f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 80082fc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 80082fe:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8008302:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8008306:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 800830a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800830e:	6809      	ldr	r1, [r1, #0]
 8008310:	2901      	cmp	r1, #1
 8008312:	ea43 0304 	orr.w	r3, r3, r4
 8008316:	4912      	ldr	r1, [pc, #72]	; (8008360 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008318:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800831a:	d00f      	beq.n	800833c <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800831c:	431a      	orrs	r2, r3
 800831e:	432a      	orrs	r2, r5
 8008320:	ea42 0308 	orr.w	r3, r2, r8
 8008324:	ea43 030e 	orr.w	r3, r3, lr
 8008328:	ea43 030c 	orr.w	r3, r3, ip
 800832c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 800832e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008330:	4333      	orrs	r3, r6
 8008332:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8008334:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8008336:	2000      	movs	r0, #0
 8008338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800833c:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800833e:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008340:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008342:	ea45 0208 	orr.w	r2, r5, r8
 8008346:	ea42 020e 	orr.w	r2, r2, lr
 800834a:	ea42 020c 	orr.w	r2, r2, ip
 800834e:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8008350:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008354:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008356:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008358:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800835a:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 800835c:	6042      	str	r2, [r0, #4]
 800835e:	e7ea      	b.n	8008336 <FMC_SDRAM_Init+0x3e>
 8008360:	ffff8000 	.word	0xffff8000

08008364 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008364:	68cb      	ldr	r3, [r1, #12]
{
 8008366:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008368:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800836a:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800836c:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 800836e:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8008370:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008372:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008376:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8008378:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 800837a:	3b01      	subs	r3, #1
 800837c:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 800837e:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008380:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008382:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8008384:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8008386:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008388:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 800838c:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8008390:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8008394:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008398:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 800839c:	d00c      	beq.n	80083b8 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800839e:	ea43 030c 	orr.w	r3, r3, ip
 80083a2:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083a4:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083a6:	4333      	orrs	r3, r6
 80083a8:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80083aa:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ae:	430b      	orrs	r3, r1
 80083b0:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80083b2:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80083b4:	2000      	movs	r0, #0
 80083b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083b8:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 80083ba:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 80083be:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80083c2:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083c4:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80083c6:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 80083ca:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80083cc:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80083ce:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80083d0:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 80083d4:	430a      	orrs	r2, r1
 80083d6:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80083d8:	60c2      	str	r2, [r0, #12]
 80083da:	e7eb      	b.n	80083b4 <FMC_SDRAM_Timing_Init+0x50>

080083dc <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80083dc:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80083e0:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80083e4:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 80083e8:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80083ec:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80083ee:	2300      	movs	r3, #0
 80083f0:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80083f2:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80083f4:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80083f6:	4618      	mov	r0, r3
 80083f8:	4770      	bx	lr

080083fa <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80083fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 80083fc:	2300      	movs	r3, #0
 80083fe:	9301      	str	r3, [sp, #4]
{
 8008400:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008402:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008406:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008408:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800840a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800840e:	688a      	ldr	r2, [r1, #8]
 8008410:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008412:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008416:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008418:	9b01      	ldr	r3, [sp, #4]
 800841a:	6103      	str	r3, [r0, #16]
{
 800841c:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800841e:	f7fc ffa9 	bl	8005374 <HAL_GetTick>
 8008422:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008424:	69a3      	ldr	r3, [r4, #24]
 8008426:	f013 0320 	ands.w	r3, r3, #32
 800842a:	d101      	bne.n	8008430 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800842c:	4618      	mov	r0, r3
 800842e:	e003      	b.n	8008438 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8008430:	1c6b      	adds	r3, r5, #1
 8008432:	d0f7      	beq.n	8008424 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008434:	b915      	cbnz	r5, 800843c <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008436:	2003      	movs	r0, #3
}
 8008438:	b002      	add	sp, #8
 800843a:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800843c:	f7fc ff9a 	bl	8005374 <HAL_GetTick>
 8008440:	1b80      	subs	r0, r0, r6
 8008442:	42a8      	cmp	r0, r5
 8008444:	d9ee      	bls.n	8008424 <FMC_SDRAM_SendCommand+0x2a>
 8008446:	e7f6      	b.n	8008436 <FMC_SDRAM_SendCommand+0x3c>

08008448 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008448:	6943      	ldr	r3, [r0, #20]
 800844a:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800844e:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8008450:	2000      	movs	r0, #0
 8008452:	4770      	bx	lr

08008454 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008454:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008458:	b113      	cbz	r3, 8008460 <osKernelInitialize+0xc>
    stat = osErrorISR;
 800845a:	f06f 0005 	mvn.w	r0, #5
 800845e:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008460:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008464:	4b07      	ldr	r3, [pc, #28]	; (8008484 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008466:	b912      	cbnz	r2, 800846e <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008468:	f3ef 8211 	mrs	r2, BASEPRI
 800846c:	b112      	cbz	r2, 8008474 <osKernelInitialize+0x20>
 800846e:	681a      	ldr	r2, [r3, #0]
 8008470:	2a02      	cmp	r2, #2
 8008472:	d0f2      	beq.n	800845a <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8008474:	6818      	ldr	r0, [r3, #0]
 8008476:	b910      	cbnz	r0, 800847e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008478:	2201      	movs	r2, #1
 800847a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800847c:	4770      	bx	lr
    } else {
      stat = osError;
 800847e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008482:	4770      	bx	lr
 8008484:	20004914 	.word	0x20004914

08008488 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008488:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800848a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800848e:	b113      	cbz	r3, 8008496 <osKernelStart+0xe>
    stat = osErrorISR;
 8008490:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8008494:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008496:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 800849a:	4b0a      	ldr	r3, [pc, #40]	; (80084c4 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 800849c:	b912      	cbnz	r2, 80084a4 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800849e:	f3ef 8211 	mrs	r2, BASEPRI
 80084a2:	b112      	cbz	r2, 80084aa <osKernelStart+0x22>
 80084a4:	681a      	ldr	r2, [r3, #0]
 80084a6:	2a02      	cmp	r2, #2
 80084a8:	d0f2      	beq.n	8008490 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80084aa:	681a      	ldr	r2, [r3, #0]
 80084ac:	2a01      	cmp	r2, #1
 80084ae:	d105      	bne.n	80084bc <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80084b0:	2202      	movs	r2, #2
 80084b2:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80084b4:	f001 fcde 	bl	8009e74 <vTaskStartScheduler>
      stat = osOK;
 80084b8:	2000      	movs	r0, #0
 80084ba:	e7eb      	b.n	8008494 <osKernelStart+0xc>
      stat = osError;
 80084bc:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80084c0:	e7e8      	b.n	8008494 <osKernelStart+0xc>
 80084c2:	bf00      	nop
 80084c4:	20004914 	.word	0x20004914

080084c8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084ca:	b087      	sub	sp, #28
 80084cc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80084ce:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084d0:	460b      	mov	r3, r1
  hTask = NULL;
 80084d2:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084d4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80084d8:	bb22      	cbnz	r2, 8008524 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084da:	f3ef 8210 	mrs	r2, PRIMASK
 80084de:	b912      	cbnz	r2, 80084e6 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084e0:	f3ef 8211 	mrs	r2, BASEPRI
 80084e4:	b11a      	cbz	r2, 80084ee <osThreadNew+0x26>
 80084e6:	4a22      	ldr	r2, [pc, #136]	; (8008570 <osThreadNew+0xa8>)
 80084e8:	6812      	ldr	r2, [r2, #0]
 80084ea:	2a02      	cmp	r2, #2
 80084ec:	d01a      	beq.n	8008524 <osThreadNew+0x5c>
 80084ee:	b1c8      	cbz	r0, 8008524 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80084f0:	2c00      	cmp	r4, #0
 80084f2:	d02f      	beq.n	8008554 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80084f4:	69a5      	ldr	r5, [r4, #24]
 80084f6:	2d00      	cmp	r5, #0
 80084f8:	bf08      	it	eq
 80084fa:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80084fc:	1e6a      	subs	r2, r5, #1
 80084fe:	2a37      	cmp	r2, #55	; 0x37
 8008500:	46ac      	mov	ip, r5
 8008502:	d82b      	bhi.n	800855c <osThreadNew+0x94>
 8008504:	6862      	ldr	r2, [r4, #4]
 8008506:	07d2      	lsls	r2, r2, #31
 8008508:	d428      	bmi.n	800855c <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800850a:	6966      	ldr	r6, [r4, #20]
 800850c:	b16e      	cbz	r6, 800852a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800850e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008510:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008514:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008516:	b157      	cbz	r7, 800852e <osThreadNew+0x66>
 8008518:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800851c:	d902      	bls.n	8008524 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800851e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008520:	b104      	cbz	r4, 8008524 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008522:	b9ee      	cbnz	r6, 8008560 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008524:	9805      	ldr	r0, [sp, #20]
}
 8008526:	b007      	add	sp, #28
 8008528:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800852a:	2280      	movs	r2, #128	; 0x80
 800852c:	e7f0      	b.n	8008510 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800852e:	f1be 0f00 	cmp.w	lr, #0
 8008532:	d1f7      	bne.n	8008524 <osThreadNew+0x5c>
      if (mem == 0) {
 8008534:	6924      	ldr	r4, [r4, #16]
 8008536:	2c00      	cmp	r4, #0
 8008538:	d1f4      	bne.n	8008524 <osThreadNew+0x5c>
 800853a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800853c:	a905      	add	r1, sp, #20
 800853e:	e9cd c100 	strd	ip, r1, [sp]
 8008542:	b292      	uxth	r2, r2
 8008544:	4621      	mov	r1, r4
 8008546:	f001 fb34 	bl	8009bb2 <xTaskCreate>
 800854a:	2801      	cmp	r0, #1
          hTask = NULL;
 800854c:	bf1c      	itt	ne
 800854e:	2300      	movne	r3, #0
 8008550:	9305      	strne	r3, [sp, #20]
 8008552:	e7e7      	b.n	8008524 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008554:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008558:	2280      	movs	r2, #128	; 0x80
 800855a:	e7ef      	b.n	800853c <osThreadNew+0x74>
        return (NULL);
 800855c:	2000      	movs	r0, #0
 800855e:	e7e2      	b.n	8008526 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008560:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008564:	9500      	str	r5, [sp, #0]
 8008566:	f001 faec 	bl	8009b42 <xTaskCreateStatic>
 800856a:	9005      	str	r0, [sp, #20]
 800856c:	e7da      	b.n	8008524 <osThreadNew+0x5c>
 800856e:	bf00      	nop
 8008570:	20004914 	.word	0x20004914

08008574 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008574:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008576:	460e      	mov	r6, r1
 8008578:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800857a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800857e:	b11b      	cbz	r3, 8008588 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008580:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008582:	4620      	mov	r0, r4
 8008584:	b002      	add	sp, #8
 8008586:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008588:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800858c:	b913      	cbnz	r3, 8008594 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800858e:	f3ef 8311 	mrs	r3, BASEPRI
 8008592:	b11b      	cbz	r3, 800859c <osSemaphoreNew+0x28>
 8008594:	4b21      	ldr	r3, [pc, #132]	; (800861c <osSemaphoreNew+0xa8>)
 8008596:	681b      	ldr	r3, [r3, #0]
 8008598:	2b02      	cmp	r3, #2
 800859a:	d0f1      	beq.n	8008580 <osSemaphoreNew+0xc>
 800859c:	2800      	cmp	r0, #0
 800859e:	d0ef      	beq.n	8008580 <osSemaphoreNew+0xc>
 80085a0:	42b0      	cmp	r0, r6
 80085a2:	d3ed      	bcc.n	8008580 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 80085a4:	b1ed      	cbz	r5, 80085e2 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 80085a6:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 80085aa:	b1c3      	cbz	r3, 80085de <osSemaphoreNew+0x6a>
 80085ac:	2a4f      	cmp	r2, #79	; 0x4f
 80085ae:	d9e7      	bls.n	8008580 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80085b0:	2801      	cmp	r0, #1
 80085b2:	d129      	bne.n	8008608 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80085b4:	2203      	movs	r2, #3
 80085b6:	9200      	str	r2, [sp, #0]
 80085b8:	2200      	movs	r2, #0
 80085ba:	4611      	mov	r1, r2
 80085bc:	f000 fd2b 	bl	8009016 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 80085c0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80085c2:	2800      	cmp	r0, #0
 80085c4:	d0dc      	beq.n	8008580 <osSemaphoreNew+0xc>
 80085c6:	b1ce      	cbz	r6, 80085fc <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80085c8:	2300      	movs	r3, #0
 80085ca:	461a      	mov	r2, r3
 80085cc:	4619      	mov	r1, r3
 80085ce:	f000 fdd7 	bl	8009180 <xQueueGenericSend>
 80085d2:	2801      	cmp	r0, #1
 80085d4:	d012      	beq.n	80085fc <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 80085d6:	4620      	mov	r0, r4
 80085d8:	f001 f912 	bl	8009800 <vQueueDelete>
 80085dc:	e7d0      	b.n	8008580 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80085de:	2a00      	cmp	r2, #0
 80085e0:	d1ce      	bne.n	8008580 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 80085e2:	2801      	cmp	r0, #1
 80085e4:	d104      	bne.n	80085f0 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 80085e6:	2203      	movs	r2, #3
 80085e8:	2100      	movs	r1, #0
 80085ea:	f000 fd62 	bl	80090b2 <xQueueGenericCreate>
 80085ee:	e7e7      	b.n	80085c0 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80085f0:	4631      	mov	r1, r6
 80085f2:	f000 fda7 	bl	8009144 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80085f6:	4604      	mov	r4, r0
 80085f8:	2800      	cmp	r0, #0
 80085fa:	d0c1      	beq.n	8008580 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 80085fc:	b95d      	cbnz	r5, 8008616 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 80085fe:	4629      	mov	r1, r5
 8008600:	4620      	mov	r0, r4
 8008602:	f001 f8d7 	bl	80097b4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008606:	e7bc      	b.n	8008582 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008608:	461a      	mov	r2, r3
 800860a:	4631      	mov	r1, r6
 800860c:	f000 fd78 	bl	8009100 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008610:	4604      	mov	r4, r0
 8008612:	2800      	cmp	r0, #0
 8008614:	d0b4      	beq.n	8008580 <osSemaphoreNew+0xc>
          name = attr->name;
 8008616:	682d      	ldr	r5, [r5, #0]
 8008618:	e7f1      	b.n	80085fe <osSemaphoreNew+0x8a>
 800861a:	bf00      	nop
 800861c:	20004914 	.word	0x20004914

08008620 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008620:	b513      	push	{r0, r1, r4, lr}
 8008622:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008624:	b918      	cbnz	r0, 800862e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008626:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800862a:	b002      	add	sp, #8
 800862c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800862e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008632:	b163      	cbz	r3, 800864e <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008634:	2c00      	cmp	r4, #0
 8008636:	d1f6      	bne.n	8008626 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008638:	aa01      	add	r2, sp, #4
 800863a:	4621      	mov	r1, r4
      yield = pdFALSE;
 800863c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800863e:	f001 f869 	bl	8009714 <xQueueReceiveFromISR>
 8008642:	2801      	cmp	r0, #1
 8008644:	d113      	bne.n	800866e <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8008646:	9b01      	ldr	r3, [sp, #4]
 8008648:	b9a3      	cbnz	r3, 8008674 <osSemaphoreAcquire+0x54>
  stat = osOK;
 800864a:	2000      	movs	r0, #0
 800864c:	e7ed      	b.n	800862a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800864e:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008652:	b913      	cbnz	r3, 800865a <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008654:	f3ef 8311 	mrs	r3, BASEPRI
 8008658:	b11b      	cbz	r3, 8008662 <osSemaphoreAcquire+0x42>
 800865a:	4b0d      	ldr	r3, [pc, #52]	; (8008690 <osSemaphoreAcquire+0x70>)
 800865c:	681b      	ldr	r3, [r3, #0]
 800865e:	2b02      	cmp	r3, #2
 8008660:	d0e8      	beq.n	8008634 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8008662:	4621      	mov	r1, r4
 8008664:	f000 ff93 	bl	800958e <xQueueSemaphoreTake>
 8008668:	2801      	cmp	r0, #1
 800866a:	d0ee      	beq.n	800864a <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 800866c:	b96c      	cbnz	r4, 800868a <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 800866e:	f06f 0002 	mvn.w	r0, #2
 8008672:	e7da      	b.n	800862a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008674:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008678:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800867c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008680:	f3bf 8f4f 	dsb	sy
 8008684:	f3bf 8f6f 	isb	sy
 8008688:	e7df      	b.n	800864a <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800868a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800868e:	e7cc      	b.n	800862a <osSemaphoreAcquire+0xa>
 8008690:	20004914 	.word	0x20004914

08008694 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008694:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008696:	b370      	cbz	r0, 80086f6 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008698:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800869c:	b14b      	cbz	r3, 80086b2 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 800869e:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80086a0:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 80086a2:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 80086a4:	f000 fe80 	bl	80093a8 <xQueueGiveFromISR>
 80086a8:	2801      	cmp	r0, #1
 80086aa:	d014      	beq.n	80086d6 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 80086ac:	f06f 0002 	mvn.w	r0, #2
 80086b0:	e014      	b.n	80086dc <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086b2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80086b6:	b913      	cbnz	r3, 80086be <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086b8:	f3ef 8311 	mrs	r3, BASEPRI
 80086bc:	b11b      	cbz	r3, 80086c6 <osSemaphoreRelease+0x32>
 80086be:	4b0f      	ldr	r3, [pc, #60]	; (80086fc <osSemaphoreRelease+0x68>)
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	2b02      	cmp	r3, #2
 80086c4:	d0eb      	beq.n	800869e <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80086c6:	2300      	movs	r3, #0
 80086c8:	461a      	mov	r2, r3
 80086ca:	4619      	mov	r1, r3
 80086cc:	f000 fd58 	bl	8009180 <xQueueGenericSend>
 80086d0:	2801      	cmp	r0, #1
 80086d2:	d002      	beq.n	80086da <osSemaphoreRelease+0x46>
 80086d4:	e7ea      	b.n	80086ac <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 80086d6:	9b01      	ldr	r3, [sp, #4]
 80086d8:	b913      	cbnz	r3, 80086e0 <osSemaphoreRelease+0x4c>
  stat = osOK;
 80086da:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 80086dc:	b002      	add	sp, #8
 80086de:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 80086e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086ec:	f3bf 8f4f 	dsb	sy
 80086f0:	f3bf 8f6f 	isb	sy
 80086f4:	e7f1      	b.n	80086da <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 80086f6:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80086fa:	e7ef      	b.n	80086dc <osSemaphoreRelease+0x48>
 80086fc:	20004914 	.word	0x20004914

08008700 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008700:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008702:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008704:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008708:	b11b      	cbz	r3, 8008712 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800870a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800870c:	4628      	mov	r0, r5
 800870e:	b002      	add	sp, #8
 8008710:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008712:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008716:	b913      	cbnz	r3, 800871e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008718:	f3ef 8311 	mrs	r3, BASEPRI
 800871c:	b11b      	cbz	r3, 8008726 <osMessageQueueNew+0x26>
 800871e:	4b1a      	ldr	r3, [pc, #104]	; (8008788 <osMessageQueueNew+0x88>)
 8008720:	681b      	ldr	r3, [r3, #0]
 8008722:	2b02      	cmp	r3, #2
 8008724:	d0f1      	beq.n	800870a <osMessageQueueNew+0xa>
 8008726:	2800      	cmp	r0, #0
 8008728:	d0ef      	beq.n	800870a <osMessageQueueNew+0xa>
 800872a:	2900      	cmp	r1, #0
 800872c:	d0ed      	beq.n	800870a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800872e:	b1ec      	cbz	r4, 800876c <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008730:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008734:	b193      	cbz	r3, 800875c <osMessageQueueNew+0x5c>
 8008736:	2a4f      	cmp	r2, #79	; 0x4f
 8008738:	d9e7      	bls.n	800870a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800873a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800873c:	2a00      	cmp	r2, #0
 800873e:	d0e4      	beq.n	800870a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008740:	6966      	ldr	r6, [r4, #20]
 8008742:	fb01 f500 	mul.w	r5, r1, r0
 8008746:	42ae      	cmp	r6, r5
 8008748:	d3df      	bcc.n	800870a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800874a:	2500      	movs	r5, #0
 800874c:	9500      	str	r5, [sp, #0]
 800874e:	f000 fc62 	bl	8009016 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8008752:	4605      	mov	r5, r0
 8008754:	2800      	cmp	r0, #0
 8008756:	d0d8      	beq.n	800870a <osMessageQueueNew+0xa>
        name = attr->name;
 8008758:	6824      	ldr	r4, [r4, #0]
 800875a:	e00f      	b.n	800877c <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800875c:	2a00      	cmp	r2, #0
 800875e:	d1d4      	bne.n	800870a <osMessageQueueNew+0xa>
 8008760:	6923      	ldr	r3, [r4, #16]
 8008762:	2b00      	cmp	r3, #0
 8008764:	d1d1      	bne.n	800870a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8008766:	6963      	ldr	r3, [r4, #20]
 8008768:	2b00      	cmp	r3, #0
 800876a:	d1ce      	bne.n	800870a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 800876c:	2200      	movs	r2, #0
 800876e:	f000 fca0 	bl	80090b2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008772:	4605      	mov	r5, r0
 8008774:	2800      	cmp	r0, #0
 8008776:	d0c8      	beq.n	800870a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8008778:	2c00      	cmp	r4, #0
 800877a:	d1ed      	bne.n	8008758 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 800877c:	4621      	mov	r1, r4
 800877e:	4628      	mov	r0, r5
 8008780:	f001 f818 	bl	80097b4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008784:	e7c2      	b.n	800870c <osMessageQueueNew+0xc>
 8008786:	bf00      	nop
 8008788:	20004914 	.word	0x20004914

0800878c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800878c:	b513      	push	{r0, r1, r4, lr}
 800878e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008790:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008794:	b123      	cbz	r3, 80087a0 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008796:	b9d8      	cbnz	r0, 80087d0 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8008798:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800879c:	b002      	add	sp, #8
 800879e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087a0:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80087a4:	b913      	cbnz	r3, 80087ac <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087a6:	f3ef 8311 	mrs	r3, BASEPRI
 80087aa:	b11b      	cbz	r3, 80087b4 <osMessageQueuePut+0x28>
 80087ac:	4b17      	ldr	r3, [pc, #92]	; (800880c <osMessageQueuePut+0x80>)
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	2b02      	cmp	r3, #2
 80087b2:	d0f0      	beq.n	8008796 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80087b4:	2800      	cmp	r0, #0
 80087b6:	d0ef      	beq.n	8008798 <osMessageQueuePut+0xc>
 80087b8:	2900      	cmp	r1, #0
 80087ba:	d0ed      	beq.n	8008798 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80087bc:	2300      	movs	r3, #0
 80087be:	4622      	mov	r2, r4
 80087c0:	f000 fcde 	bl	8009180 <xQueueGenericSend>
 80087c4:	2801      	cmp	r0, #1
 80087c6:	d010      	beq.n	80087ea <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 80087c8:	b9e4      	cbnz	r4, 8008804 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 80087ca:	f06f 0002 	mvn.w	r0, #2
 80087ce:	e7e5      	b.n	800879c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80087d0:	2900      	cmp	r1, #0
 80087d2:	d0e1      	beq.n	8008798 <osMessageQueuePut+0xc>
 80087d4:	2c00      	cmp	r4, #0
 80087d6:	d1df      	bne.n	8008798 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80087d8:	4623      	mov	r3, r4
 80087da:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80087dc:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80087de:	f000 fd82 	bl	80092e6 <xQueueGenericSendFromISR>
 80087e2:	2801      	cmp	r0, #1
 80087e4:	d1f1      	bne.n	80087ca <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 80087e6:	9b01      	ldr	r3, [sp, #4]
 80087e8:	b90b      	cbnz	r3, 80087ee <osMessageQueuePut+0x62>
  stat = osOK;
 80087ea:	2000      	movs	r0, #0
 80087ec:	e7d6      	b.n	800879c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 80087ee:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80087f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80087f6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80087fa:	f3bf 8f4f 	dsb	sy
 80087fe:	f3bf 8f6f 	isb	sy
 8008802:	e7f2      	b.n	80087ea <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008804:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008808:	e7c8      	b.n	800879c <osMessageQueuePut+0x10>
 800880a:	bf00      	nop
 800880c:	20004914 	.word	0x20004914

08008810 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008810:	b513      	push	{r0, r1, r4, lr}
 8008812:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008814:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008818:	b123      	cbz	r3, 8008824 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800881a:	b9d0      	cbnz	r0, 8008852 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800881c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008820:	b002      	add	sp, #8
 8008822:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008824:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008828:	b913      	cbnz	r3, 8008830 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800882a:	f3ef 8311 	mrs	r3, BASEPRI
 800882e:	b11b      	cbz	r3, 8008838 <osMessageQueueGet+0x28>
 8008830:	4b16      	ldr	r3, [pc, #88]	; (800888c <osMessageQueueGet+0x7c>)
 8008832:	681b      	ldr	r3, [r3, #0]
 8008834:	2b02      	cmp	r3, #2
 8008836:	d0f0      	beq.n	800881a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008838:	2800      	cmp	r0, #0
 800883a:	d0ef      	beq.n	800881c <osMessageQueueGet+0xc>
 800883c:	2900      	cmp	r1, #0
 800883e:	d0ed      	beq.n	800881c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008840:	4622      	mov	r2, r4
 8008842:	f000 fe05 	bl	8009450 <xQueueReceive>
 8008846:	2801      	cmp	r0, #1
 8008848:	d00f      	beq.n	800886a <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 800884a:	b9dc      	cbnz	r4, 8008884 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 800884c:	f06f 0002 	mvn.w	r0, #2
 8008850:	e7e6      	b.n	8008820 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008852:	2900      	cmp	r1, #0
 8008854:	d0e2      	beq.n	800881c <osMessageQueueGet+0xc>
 8008856:	2c00      	cmp	r4, #0
 8008858:	d1e0      	bne.n	800881c <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800885a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800885c:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800885e:	f000 ff59 	bl	8009714 <xQueueReceiveFromISR>
 8008862:	2801      	cmp	r0, #1
 8008864:	d1f2      	bne.n	800884c <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8008866:	9b01      	ldr	r3, [sp, #4]
 8008868:	b90b      	cbnz	r3, 800886e <osMessageQueueGet+0x5e>
  stat = osOK;
 800886a:	2000      	movs	r0, #0
 800886c:	e7d8      	b.n	8008820 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 800886e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008872:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008876:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800887a:	f3bf 8f4f 	dsb	sy
 800887e:	f3bf 8f6f 	isb	sy
 8008882:	e7f2      	b.n	800886a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008884:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008888:	e7ca      	b.n	8008820 <osMessageQueueGet+0x10>
 800888a:	bf00      	nop
 800888c:	20004914 	.word	0x20004914

08008890 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008890:	4b03      	ldr	r3, [pc, #12]	; (80088a0 <vApplicationGetIdleTaskMemory+0x10>)
 8008892:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008894:	4b03      	ldr	r3, [pc, #12]	; (80088a4 <vApplicationGetIdleTaskMemory+0x14>)
 8008896:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008898:	2380      	movs	r3, #128	; 0x80
 800889a:	6013      	str	r3, [r2, #0]
}
 800889c:	4770      	bx	lr
 800889e:	bf00      	nop
 80088a0:	200048b4 	.word	0x200048b4
 80088a4:	200046b4 	.word	0x200046b4

080088a8 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80088a8:	4b03      	ldr	r3, [pc, #12]	; (80088b8 <vApplicationGetTimerTaskMemory+0x10>)
 80088aa:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80088ac:	4b03      	ldr	r3, [pc, #12]	; (80088bc <vApplicationGetTimerTaskMemory+0x14>)
 80088ae:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80088b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80088b4:	6013      	str	r3, [r2, #0]
}
 80088b6:	4770      	bx	lr
 80088b8:	20004d18 	.word	0x20004d18
 80088bc:	20004918 	.word	0x20004918

080088c0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80088c0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80088c2:	4b0f      	ldr	r3, [pc, #60]	; (8008900 <prvInsertBlockIntoFreeList+0x40>)
 80088c4:	461a      	mov	r2, r3
 80088c6:	681b      	ldr	r3, [r3, #0]
 80088c8:	4283      	cmp	r3, r0
 80088ca:	d3fb      	bcc.n	80088c4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80088cc:	6854      	ldr	r4, [r2, #4]
 80088ce:	1911      	adds	r1, r2, r4
 80088d0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80088d2:	bf01      	itttt	eq
 80088d4:	6841      	ldreq	r1, [r0, #4]
 80088d6:	4610      	moveq	r0, r2
 80088d8:	1909      	addeq	r1, r1, r4
 80088da:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80088dc:	6844      	ldr	r4, [r0, #4]
 80088de:	1901      	adds	r1, r0, r4
 80088e0:	428b      	cmp	r3, r1
 80088e2:	d107      	bne.n	80088f4 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80088e4:	4907      	ldr	r1, [pc, #28]	; (8008904 <prvInsertBlockIntoFreeList+0x44>)
 80088e6:	6809      	ldr	r1, [r1, #0]
 80088e8:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80088ea:	bf1f      	itttt	ne
 80088ec:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80088ee:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80088f0:	1909      	addne	r1, r1, r4
 80088f2:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80088f4:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80088f6:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80088f8:	bf18      	it	ne
 80088fa:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80088fc:	bd10      	pop	{r4, pc}
 80088fe:	bf00      	nop
 8008900:	2000cd88 	.word	0x2000cd88
 8008904:	20004d78 	.word	0x20004d78

08008908 <pvPortMalloc>:
{
 8008908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800890c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800890e:	f001 f97d 	bl	8009c0c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008912:	4840      	ldr	r0, [pc, #256]	; (8008a14 <pvPortMalloc+0x10c>)
 8008914:	4d40      	ldr	r5, [pc, #256]	; (8008a18 <pvPortMalloc+0x110>)
 8008916:	6803      	ldr	r3, [r0, #0]
 8008918:	bb0b      	cbnz	r3, 800895e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800891a:	4940      	ldr	r1, [pc, #256]	; (8008a1c <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800891c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800891e:	bf1f      	itttt	ne
 8008920:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008922:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008926:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 800892a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800892c:	bf14      	ite	ne
 800892e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008930:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008934:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008936:	4e3a      	ldr	r6, [pc, #232]	; (8008a20 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008938:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800893a:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800893e:	2300      	movs	r3, #0
 8008940:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008942:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008944:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008948:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800894a:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800894e:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008950:	4a34      	ldr	r2, [pc, #208]	; (8008a24 <pvPortMalloc+0x11c>)
 8008952:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008954:	4a34      	ldr	r2, [pc, #208]	; (8008a28 <pvPortMalloc+0x120>)
 8008956:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008958:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800895c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800895e:	682f      	ldr	r7, [r5, #0]
 8008960:	4227      	tst	r7, r4
 8008962:	d151      	bne.n	8008a08 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008964:	2c00      	cmp	r4, #0
 8008966:	d042      	beq.n	80089ee <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008968:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800896c:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800896e:	bf1c      	itt	ne
 8008970:	f023 0307 	bicne.w	r3, r3, #7
 8008974:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008976:	2b00      	cmp	r3, #0
 8008978:	d046      	beq.n	8008a08 <pvPortMalloc+0x100>
 800897a:	4c2b      	ldr	r4, [pc, #172]	; (8008a28 <pvPortMalloc+0x120>)
 800897c:	6826      	ldr	r6, [r4, #0]
 800897e:	429e      	cmp	r6, r3
 8008980:	d342      	bcc.n	8008a08 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008982:	4a27      	ldr	r2, [pc, #156]	; (8008a20 <pvPortMalloc+0x118>)
 8008984:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008986:	6869      	ldr	r1, [r5, #4]
 8008988:	4299      	cmp	r1, r3
 800898a:	d204      	bcs.n	8008996 <pvPortMalloc+0x8e>
 800898c:	f8d5 c000 	ldr.w	ip, [r5]
 8008990:	f1bc 0f00 	cmp.w	ip, #0
 8008994:	d115      	bne.n	80089c2 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008996:	6800      	ldr	r0, [r0, #0]
 8008998:	42a8      	cmp	r0, r5
 800899a:	d035      	beq.n	8008a08 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800899c:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800899e:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80089a0:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80089a4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80089a6:	2910      	cmp	r1, #16
 80089a8:	d912      	bls.n	80089d0 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80089aa:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80089ac:	0742      	lsls	r2, r0, #29
 80089ae:	d00b      	beq.n	80089c8 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80089b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089b4:	f383 8811 	msr	BASEPRI, r3
 80089b8:	f3bf 8f6f 	isb	sy
 80089bc:	f3bf 8f4f 	dsb	sy
 80089c0:	e7fe      	b.n	80089c0 <pvPortMalloc+0xb8>
 80089c2:	462a      	mov	r2, r5
 80089c4:	4665      	mov	r5, ip
 80089c6:	e7de      	b.n	8008986 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80089c8:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80089ca:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80089cc:	f7ff ff78 	bl	80088c0 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80089d0:	4914      	ldr	r1, [pc, #80]	; (8008a24 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80089d2:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80089d4:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80089d6:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80089d8:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80089da:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 80089dc:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80089e0:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80089e2:	bf38      	it	cc
 80089e4:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80089e6:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80089ea:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 80089ec:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 80089ee:	f001 f9b1 	bl	8009d54 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80089f2:	0763      	lsls	r3, r4, #29
 80089f4:	d00a      	beq.n	8008a0c <pvPortMalloc+0x104>
 80089f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089fa:	f383 8811 	msr	BASEPRI, r3
 80089fe:	f3bf 8f6f 	isb	sy
 8008a02:	f3bf 8f4f 	dsb	sy
 8008a06:	e7fe      	b.n	8008a06 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008a08:	2400      	movs	r4, #0
 8008a0a:	e7f0      	b.n	80089ee <pvPortMalloc+0xe6>
}
 8008a0c:	4620      	mov	r0, r4
 8008a0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a12:	bf00      	nop
 8008a14:	20004d78 	.word	0x20004d78
 8008a18:	2000cd7c 	.word	0x2000cd7c
 8008a1c:	20004d7c 	.word	0x20004d7c
 8008a20:	2000cd88 	.word	0x2000cd88
 8008a24:	2000cd84 	.word	0x2000cd84
 8008a28:	2000cd80 	.word	0x2000cd80

08008a2c <vPortFree>:
{
 8008a2c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008a2e:	4604      	mov	r4, r0
 8008a30:	b370      	cbz	r0, 8008a90 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008a32:	4a18      	ldr	r2, [pc, #96]	; (8008a94 <vPortFree+0x68>)
 8008a34:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008a38:	6812      	ldr	r2, [r2, #0]
 8008a3a:	4213      	tst	r3, r2
 8008a3c:	d108      	bne.n	8008a50 <vPortFree+0x24>
 8008a3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a42:	f383 8811 	msr	BASEPRI, r3
 8008a46:	f3bf 8f6f 	isb	sy
 8008a4a:	f3bf 8f4f 	dsb	sy
 8008a4e:	e7fe      	b.n	8008a4e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008a50:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008a54:	b141      	cbz	r1, 8008a68 <vPortFree+0x3c>
 8008a56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5a:	f383 8811 	msr	BASEPRI, r3
 8008a5e:	f3bf 8f6f 	isb	sy
 8008a62:	f3bf 8f4f 	dsb	sy
 8008a66:	e7fe      	b.n	8008a66 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008a68:	ea23 0302 	bic.w	r3, r3, r2
 8008a6c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008a70:	f001 f8cc 	bl	8009c0c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008a74:	4a08      	ldr	r2, [pc, #32]	; (8008a98 <vPortFree+0x6c>)
 8008a76:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008a7a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008a7c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008a80:	440b      	add	r3, r1
 8008a82:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008a84:	f7ff ff1c 	bl	80088c0 <prvInsertBlockIntoFreeList>
}
 8008a88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008a8c:	f001 b962 	b.w	8009d54 <xTaskResumeAll>
}
 8008a90:	bd10      	pop	{r4, pc}
 8008a92:	bf00      	nop
 8008a94:	2000cd7c 	.word	0x2000cd7c
 8008a98:	2000cd80 	.word	0x2000cd80

08008a9c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008a9c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008aa0:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008aa4:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008aa8:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008aaa:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008aac:	2300      	movs	r3, #0
 8008aae:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008ab0:	4770      	bx	lr

08008ab2 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008ab2:	2300      	movs	r3, #0
 8008ab4:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008ab6:	4770      	bx	lr

08008ab8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008ab8:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008aba:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008abc:	689a      	ldr	r2, [r3, #8]
 8008abe:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008ac0:	689a      	ldr	r2, [r3, #8]
 8008ac2:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008ac4:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008ac6:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008ac8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008aca:	3301      	adds	r3, #1
 8008acc:	6003      	str	r3, [r0, #0]
}
 8008ace:	4770      	bx	lr

08008ad0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008ad0:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008ad2:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008ad4:	1c63      	adds	r3, r4, #1
 8008ad6:	d10a      	bne.n	8008aee <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008ad8:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008ada:	685a      	ldr	r2, [r3, #4]
 8008adc:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008ade:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008ae0:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008ae2:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008ae4:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008ae6:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008ae8:	3301      	adds	r3, #1
 8008aea:	6003      	str	r3, [r0, #0]
}
 8008aec:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008aee:	f100 0208 	add.w	r2, r0, #8
 8008af2:	4613      	mov	r3, r2
 8008af4:	6852      	ldr	r2, [r2, #4]
 8008af6:	6815      	ldr	r5, [r2, #0]
 8008af8:	42a5      	cmp	r5, r4
 8008afa:	d9fa      	bls.n	8008af2 <vListInsert+0x22>
 8008afc:	e7ed      	b.n	8008ada <vListInsert+0xa>

08008afe <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008afe:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b02:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b04:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b06:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b08:	6859      	ldr	r1, [r3, #4]
 8008b0a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b0c:	bf08      	it	eq
 8008b0e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008b10:	2200      	movs	r2, #0
 8008b12:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008b14:	681a      	ldr	r2, [r3, #0]
 8008b16:	3a01      	subs	r2, #1
 8008b18:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008b1a:	6818      	ldr	r0, [r3, #0]
}
 8008b1c:	4770      	bx	lr
	...

08008b20 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008b20:	4808      	ldr	r0, [pc, #32]	; (8008b44 <prvPortStartFirstTask+0x24>)
 8008b22:	6800      	ldr	r0, [r0, #0]
 8008b24:	6800      	ldr	r0, [r0, #0]
 8008b26:	f380 8808 	msr	MSP, r0
 8008b2a:	f04f 0000 	mov.w	r0, #0
 8008b2e:	f380 8814 	msr	CONTROL, r0
 8008b32:	b662      	cpsie	i
 8008b34:	b661      	cpsie	f
 8008b36:	f3bf 8f4f 	dsb	sy
 8008b3a:	f3bf 8f6f 	isb	sy
 8008b3e:	df00      	svc	0
 8008b40:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008b42:	0000      	.short	0x0000
 8008b44:	e000ed08 	.word	0xe000ed08

08008b48 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008b48:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008b58 <vPortEnableVFP+0x10>
 8008b4c:	6801      	ldr	r1, [r0, #0]
 8008b4e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008b52:	6001      	str	r1, [r0, #0]
 8008b54:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008b56:	0000      	.short	0x0000
 8008b58:	e000ed88 	.word	0xe000ed88

08008b5c <prvTaskExitError>:
{
 8008b5c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008b5e:	2300      	movs	r3, #0
 8008b60:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008b62:	4b0d      	ldr	r3, [pc, #52]	; (8008b98 <prvTaskExitError+0x3c>)
 8008b64:	681b      	ldr	r3, [r3, #0]
 8008b66:	3301      	adds	r3, #1
 8008b68:	d008      	beq.n	8008b7c <prvTaskExitError+0x20>
 8008b6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b6e:	f383 8811 	msr	BASEPRI, r3
 8008b72:	f3bf 8f6f 	isb	sy
 8008b76:	f3bf 8f4f 	dsb	sy
 8008b7a:	e7fe      	b.n	8008b7a <prvTaskExitError+0x1e>
 8008b7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b80:	f383 8811 	msr	BASEPRI, r3
 8008b84:	f3bf 8f6f 	isb	sy
 8008b88:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008b8c:	9b01      	ldr	r3, [sp, #4]
 8008b8e:	2b00      	cmp	r3, #0
 8008b90:	d0fc      	beq.n	8008b8c <prvTaskExitError+0x30>
}
 8008b92:	b002      	add	sp, #8
 8008b94:	4770      	bx	lr
 8008b96:	bf00      	nop
 8008b98:	2000005c 	.word	0x2000005c

08008b9c <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008b9c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008ba0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008ba4:	4b07      	ldr	r3, [pc, #28]	; (8008bc4 <pxPortInitialiseStack+0x28>)
 8008ba6:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008baa:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008bae:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008bb2:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008bb6:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008bba:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008bbe:	3844      	subs	r0, #68	; 0x44
 8008bc0:	4770      	bx	lr
 8008bc2:	bf00      	nop
 8008bc4:	08008b5d 	.word	0x08008b5d
	...

08008bd0 <SVC_Handler>:
	__asm volatile (
 8008bd0:	4b07      	ldr	r3, [pc, #28]	; (8008bf0 <pxCurrentTCBConst2>)
 8008bd2:	6819      	ldr	r1, [r3, #0]
 8008bd4:	6808      	ldr	r0, [r1, #0]
 8008bd6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bda:	f380 8809 	msr	PSP, r0
 8008bde:	f3bf 8f6f 	isb	sy
 8008be2:	f04f 0000 	mov.w	r0, #0
 8008be6:	f380 8811 	msr	BASEPRI, r0
 8008bea:	4770      	bx	lr
 8008bec:	f3af 8000 	nop.w

08008bf0 <pxCurrentTCBConst2>:
 8008bf0:	2000cdd8 	.word	0x2000cdd8

08008bf4 <vPortEnterCritical>:
 8008bf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bf8:	f383 8811 	msr	BASEPRI, r3
 8008bfc:	f3bf 8f6f 	isb	sy
 8008c00:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c04:	4a0a      	ldr	r2, [pc, #40]	; (8008c30 <vPortEnterCritical+0x3c>)
 8008c06:	6813      	ldr	r3, [r2, #0]
 8008c08:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c0a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c0c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c0e:	d10e      	bne.n	8008c2e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008c10:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c14:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008c18:	b2db      	uxtb	r3, r3
 8008c1a:	b143      	cbz	r3, 8008c2e <vPortEnterCritical+0x3a>
 8008c1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c20:	f383 8811 	msr	BASEPRI, r3
 8008c24:	f3bf 8f6f 	isb	sy
 8008c28:	f3bf 8f4f 	dsb	sy
 8008c2c:	e7fe      	b.n	8008c2c <vPortEnterCritical+0x38>
}
 8008c2e:	4770      	bx	lr
 8008c30:	2000005c 	.word	0x2000005c

08008c34 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008c34:	4a08      	ldr	r2, [pc, #32]	; (8008c58 <vPortExitCritical+0x24>)
 8008c36:	6813      	ldr	r3, [r2, #0]
 8008c38:	b943      	cbnz	r3, 8008c4c <vPortExitCritical+0x18>
 8008c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3e:	f383 8811 	msr	BASEPRI, r3
 8008c42:	f3bf 8f6f 	isb	sy
 8008c46:	f3bf 8f4f 	dsb	sy
 8008c4a:	e7fe      	b.n	8008c4a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008c4c:	3b01      	subs	r3, #1
 8008c4e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008c50:	b90b      	cbnz	r3, 8008c56 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008c52:	f383 8811 	msr	BASEPRI, r3
}
 8008c56:	4770      	bx	lr
 8008c58:	2000005c 	.word	0x2000005c
 8008c5c:	00000000 	.word	0x00000000

08008c60 <PendSV_Handler>:
	__asm volatile
 8008c60:	f3ef 8009 	mrs	r0, PSP
 8008c64:	f3bf 8f6f 	isb	sy
 8008c68:	4b15      	ldr	r3, [pc, #84]	; (8008cc0 <pxCurrentTCBConst>)
 8008c6a:	681a      	ldr	r2, [r3, #0]
 8008c6c:	f01e 0f10 	tst.w	lr, #16
 8008c70:	bf08      	it	eq
 8008c72:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008c76:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c7a:	6010      	str	r0, [r2, #0]
 8008c7c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008c80:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008c84:	f380 8811 	msr	BASEPRI, r0
 8008c88:	f3bf 8f4f 	dsb	sy
 8008c8c:	f3bf 8f6f 	isb	sy
 8008c90:	f001 f93e 	bl	8009f10 <vTaskSwitchContext>
 8008c94:	f04f 0000 	mov.w	r0, #0
 8008c98:	f380 8811 	msr	BASEPRI, r0
 8008c9c:	bc09      	pop	{r0, r3}
 8008c9e:	6819      	ldr	r1, [r3, #0]
 8008ca0:	6808      	ldr	r0, [r1, #0]
 8008ca2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ca6:	f01e 0f10 	tst.w	lr, #16
 8008caa:	bf08      	it	eq
 8008cac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008cb0:	f380 8809 	msr	PSP, r0
 8008cb4:	f3bf 8f6f 	isb	sy
 8008cb8:	4770      	bx	lr
 8008cba:	bf00      	nop
 8008cbc:	f3af 8000 	nop.w

08008cc0 <pxCurrentTCBConst>:
 8008cc0:	2000cdd8 	.word	0x2000cdd8

08008cc4 <SysTick_Handler>:
{
 8008cc4:	b508      	push	{r3, lr}
	__asm volatile
 8008cc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cca:	f383 8811 	msr	BASEPRI, r3
 8008cce:	f3bf 8f6f 	isb	sy
 8008cd2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008cd6:	f000 ffa7 	bl	8009c28 <xTaskIncrementTick>
 8008cda:	b128      	cbz	r0, 8008ce8 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008cdc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ce0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ce4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008ce8:	2300      	movs	r3, #0
 8008cea:	f383 8811 	msr	BASEPRI, r3
}
 8008cee:	bd08      	pop	{r3, pc}

08008cf0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008cf0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008cf4:	2300      	movs	r3, #0
 8008cf6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008cf8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008cfa:	4b05      	ldr	r3, [pc, #20]	; (8008d10 <vPortSetupTimerInterrupt+0x20>)
 8008cfc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008d00:	681b      	ldr	r3, [r3, #0]
 8008d02:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d06:	3b01      	subs	r3, #1
 8008d08:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d0a:	2307      	movs	r3, #7
 8008d0c:	6113      	str	r3, [r2, #16]
}
 8008d0e:	4770      	bx	lr
 8008d10:	20000050 	.word	0x20000050

08008d14 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008d18:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d1a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008d1e:	4a3a      	ldr	r2, [pc, #232]	; (8008e08 <xPortStartScheduler+0xf4>)
 8008d20:	4291      	cmp	r1, r2
 8008d22:	d108      	bne.n	8008d36 <xPortStartScheduler+0x22>
	__asm volatile
 8008d24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d28:	f383 8811 	msr	BASEPRI, r3
 8008d2c:	f3bf 8f6f 	isb	sy
 8008d30:	f3bf 8f4f 	dsb	sy
 8008d34:	e7fe      	b.n	8008d34 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008d36:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008d3a:	4b34      	ldr	r3, [pc, #208]	; (8008e0c <xPortStartScheduler+0xf8>)
 8008d3c:	429a      	cmp	r2, r3
 8008d3e:	d108      	bne.n	8008d52 <xPortStartScheduler+0x3e>
 8008d40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d44:	f383 8811 	msr	BASEPRI, r3
 8008d48:	f3bf 8f6f 	isb	sy
 8008d4c:	f3bf 8f4f 	dsb	sy
 8008d50:	e7fe      	b.n	8008d50 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008d52:	4b2f      	ldr	r3, [pc, #188]	; (8008e10 <xPortStartScheduler+0xfc>)
 8008d54:	781a      	ldrb	r2, [r3, #0]
 8008d56:	b2d2      	uxtb	r2, r2
 8008d58:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008d5a:	22ff      	movs	r2, #255	; 0xff
 8008d5c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008d5e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008d60:	4a2c      	ldr	r2, [pc, #176]	; (8008e14 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008d62:	b2db      	uxtb	r3, r3
 8008d64:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008d68:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008d6c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008d70:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008d72:	4a29      	ldr	r2, [pc, #164]	; (8008e18 <xPortStartScheduler+0x104>)
 8008d74:	2307      	movs	r3, #7
 8008d76:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008d78:	2100      	movs	r1, #0
 8008d7a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008d7e:	0600      	lsls	r0, r0, #24
 8008d80:	f103 34ff 	add.w	r4, r3, #4294967295
 8008d84:	d40c      	bmi.n	8008da0 <xPortStartScheduler+0x8c>
 8008d86:	b111      	cbz	r1, 8008d8e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008d88:	2b03      	cmp	r3, #3
 8008d8a:	6013      	str	r3, [r2, #0]
 8008d8c:	d011      	beq.n	8008db2 <xPortStartScheduler+0x9e>
 8008d8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d92:	f383 8811 	msr	BASEPRI, r3
 8008d96:	f3bf 8f6f 	isb	sy
 8008d9a:	f3bf 8f4f 	dsb	sy
 8008d9e:	e7fe      	b.n	8008d9e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008da0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008da4:	005b      	lsls	r3, r3, #1
 8008da6:	b2db      	uxtb	r3, r3
 8008da8:	f88d 3003 	strb.w	r3, [sp, #3]
 8008dac:	2101      	movs	r1, #1
 8008dae:	4623      	mov	r3, r4
 8008db0:	e7e3      	b.n	8008d7a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008db2:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008db6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008db8:	9b01      	ldr	r3, [sp, #4]
 8008dba:	4a15      	ldr	r2, [pc, #84]	; (8008e10 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008dbc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008dc0:	b2db      	uxtb	r3, r3
 8008dc2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008dc4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008dc8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008dcc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008dd0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008dd4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008dd8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008ddc:	f7ff ff88 	bl	8008cf0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008de0:	4b0e      	ldr	r3, [pc, #56]	; (8008e1c <xPortStartScheduler+0x108>)
 8008de2:	2500      	movs	r5, #0
 8008de4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008de6:	f7ff feaf 	bl	8008b48 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008dea:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008dee:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008df2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008df6:	f7ff fe93 	bl	8008b20 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008dfa:	f001 f889 	bl	8009f10 <vTaskSwitchContext>
	prvTaskExitError();
 8008dfe:	f7ff fead 	bl	8008b5c <prvTaskExitError>
}
 8008e02:	4628      	mov	r0, r5
 8008e04:	b003      	add	sp, #12
 8008e06:	bd30      	pop	{r4, r5, pc}
 8008e08:	410fc271 	.word	0x410fc271
 8008e0c:	410fc270 	.word	0x410fc270
 8008e10:	e000e400 	.word	0xe000e400
 8008e14:	2000cd90 	.word	0x2000cd90
 8008e18:	2000cd94 	.word	0x2000cd94
 8008e1c:	2000005c 	.word	0x2000005c

08008e20 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008e20:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008e24:	2b0f      	cmp	r3, #15
 8008e26:	d90e      	bls.n	8008e46 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008e28:	4a11      	ldr	r2, [pc, #68]	; (8008e70 <vPortValidateInterruptPriority+0x50>)
 8008e2a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008e2c:	4a11      	ldr	r2, [pc, #68]	; (8008e74 <vPortValidateInterruptPriority+0x54>)
 8008e2e:	7812      	ldrb	r2, [r2, #0]
 8008e30:	429a      	cmp	r2, r3
 8008e32:	d908      	bls.n	8008e46 <vPortValidateInterruptPriority+0x26>
 8008e34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e38:	f383 8811 	msr	BASEPRI, r3
 8008e3c:	f3bf 8f6f 	isb	sy
 8008e40:	f3bf 8f4f 	dsb	sy
 8008e44:	e7fe      	b.n	8008e44 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008e46:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e4a:	4a0b      	ldr	r2, [pc, #44]	; (8008e78 <vPortValidateInterruptPriority+0x58>)
 8008e4c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008e50:	6812      	ldr	r2, [r2, #0]
 8008e52:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008e56:	4293      	cmp	r3, r2
 8008e58:	d908      	bls.n	8008e6c <vPortValidateInterruptPriority+0x4c>
 8008e5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e5e:	f383 8811 	msr	BASEPRI, r3
 8008e62:	f3bf 8f6f 	isb	sy
 8008e66:	f3bf 8f4f 	dsb	sy
 8008e6a:	e7fe      	b.n	8008e6a <vPortValidateInterruptPriority+0x4a>
	}
 8008e6c:	4770      	bx	lr
 8008e6e:	bf00      	nop
 8008e70:	e000e3f0 	.word	0xe000e3f0
 8008e74:	2000cd90 	.word	0x2000cd90
 8008e78:	2000cd94 	.word	0x2000cd94

08008e7c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008e7c:	b510      	push	{r4, lr}
 8008e7e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008e80:	f7ff feb8 	bl	8008bf4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008e84:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008e86:	f7ff fed5 	bl	8008c34 <vPortExitCritical>

	return xReturn;
}
 8008e8a:	fab4 f084 	clz	r0, r4
 8008e8e:	0940      	lsrs	r0, r0, #5
 8008e90:	bd10      	pop	{r4, pc}

08008e92 <prvCopyDataToQueue>:
{
 8008e92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e94:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008e96:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008e98:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008e9a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008e9c:	b952      	cbnz	r2, 8008eb4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008e9e:	6807      	ldr	r7, [r0, #0]
 8008ea0:	bb47      	cbnz	r7, 8008ef4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008ea2:	6880      	ldr	r0, [r0, #8]
 8008ea4:	f001 f994 	bl	800a1d0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008ea8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008eaa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008eac:	3601      	adds	r6, #1
 8008eae:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008eb0:	4628      	mov	r0, r5
 8008eb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008eb4:	b965      	cbnz	r5, 8008ed0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008eb6:	6840      	ldr	r0, [r0, #4]
 8008eb8:	f016 fb1a 	bl	801f4f0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008ebc:	6863      	ldr	r3, [r4, #4]
 8008ebe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008ec0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ec2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008ec4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ec6:	4293      	cmp	r3, r2
 8008ec8:	d3f0      	bcc.n	8008eac <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008eca:	6823      	ldr	r3, [r4, #0]
 8008ecc:	6063      	str	r3, [r4, #4]
 8008ece:	e7ed      	b.n	8008eac <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008ed0:	68c0      	ldr	r0, [r0, #12]
 8008ed2:	f016 fb0d 	bl	801f4f0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008ed6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008ed8:	68e3      	ldr	r3, [r4, #12]
 8008eda:	4251      	negs	r1, r2
 8008edc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ede:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008ee0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008ee2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008ee4:	bf3e      	ittt	cc
 8008ee6:	68a3      	ldrcc	r3, [r4, #8]
 8008ee8:	185b      	addcc	r3, r3, r1
 8008eea:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008eec:	2d02      	cmp	r5, #2
 8008eee:	d101      	bne.n	8008ef4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008ef0:	b116      	cbz	r6, 8008ef8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008ef2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008ef4:	2500      	movs	r5, #0
 8008ef6:	e7d9      	b.n	8008eac <prvCopyDataToQueue+0x1a>
 8008ef8:	4635      	mov	r5, r6
 8008efa:	e7d7      	b.n	8008eac <prvCopyDataToQueue+0x1a>

08008efc <prvCopyDataFromQueue>:
{
 8008efc:	4603      	mov	r3, r0
 8008efe:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f00:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f02:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f04:	b16a      	cbz	r2, 8008f22 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f06:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f08:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f0a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f0c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f0e:	bf28      	it	cs
 8008f10:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f12:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f14:	bf28      	it	cs
 8008f16:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f18:	68d9      	ldr	r1, [r3, #12]
}
 8008f1a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f1e:	f016 bae7 	b.w	801f4f0 <memcpy>
}
 8008f22:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f26:	4770      	bx	lr

08008f28 <prvUnlockQueue>:
{
 8008f28:	b570      	push	{r4, r5, r6, lr}
 8008f2a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008f2c:	f7ff fe62 	bl	8008bf4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008f30:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f34:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008f38:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008f3a:	2d00      	cmp	r5, #0
 8008f3c:	dc14      	bgt.n	8008f68 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008f3e:	23ff      	movs	r3, #255	; 0xff
 8008f40:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008f44:	f7ff fe76 	bl	8008c34 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008f48:	f7ff fe54 	bl	8008bf4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008f4c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f50:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008f54:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008f56:	2d00      	cmp	r5, #0
 8008f58:	dc12      	bgt.n	8008f80 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008f5a:	23ff      	movs	r3, #255	; 0xff
 8008f5c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008f60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008f64:	f7ff be66 	b.w	8008c34 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008f68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008f6a:	2b00      	cmp	r3, #0
 8008f6c:	d0e7      	beq.n	8008f3e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f6e:	4630      	mov	r0, r6
 8008f70:	f001 f84a 	bl	800a008 <xTaskRemoveFromEventList>
 8008f74:	b108      	cbz	r0, 8008f7a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008f76:	f001 f8d3 	bl	800a120 <vTaskMissedYield>
			--cTxLock;
 8008f7a:	3d01      	subs	r5, #1
 8008f7c:	b26d      	sxtb	r5, r5
 8008f7e:	e7dc      	b.n	8008f3a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008f80:	6923      	ldr	r3, [r4, #16]
 8008f82:	2b00      	cmp	r3, #0
 8008f84:	d0e9      	beq.n	8008f5a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008f86:	4630      	mov	r0, r6
 8008f88:	f001 f83e 	bl	800a008 <xTaskRemoveFromEventList>
 8008f8c:	b108      	cbz	r0, 8008f92 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008f8e:	f001 f8c7 	bl	800a120 <vTaskMissedYield>
				--cRxLock;
 8008f92:	3d01      	subs	r5, #1
 8008f94:	b26d      	sxtb	r5, r5
 8008f96:	e7de      	b.n	8008f56 <prvUnlockQueue+0x2e>

08008f98 <xQueueGenericReset>:
{
 8008f98:	b538      	push	{r3, r4, r5, lr}
 8008f9a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008f9c:	4604      	mov	r4, r0
 8008f9e:	b940      	cbnz	r0, 8008fb2 <xQueueGenericReset+0x1a>
 8008fa0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fa4:	f383 8811 	msr	BASEPRI, r3
 8008fa8:	f3bf 8f6f 	isb	sy
 8008fac:	f3bf 8f4f 	dsb	sy
 8008fb0:	e7fe      	b.n	8008fb0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8008fb2:	f7ff fe1f 	bl	8008bf4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fb6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 8008fba:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8008fbc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fbe:	434b      	muls	r3, r1
 8008fc0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fc2:	1a5b      	subs	r3, r3, r1
 8008fc4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fc6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8008fc8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008fca:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8008fcc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8008fce:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8008fd0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8008fd4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8008fd8:	b9a5      	cbnz	r5, 8009004 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008fda:	6923      	ldr	r3, [r4, #16]
 8008fdc:	b173      	cbz	r3, 8008ffc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fde:	f104 0010 	add.w	r0, r4, #16
 8008fe2:	f001 f811 	bl	800a008 <xTaskRemoveFromEventList>
 8008fe6:	b148      	cbz	r0, 8008ffc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8008fe8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008ff0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008ff4:	f3bf 8f4f 	dsb	sy
 8008ff8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8008ffc:	f7ff fe1a 	bl	8008c34 <vPortExitCritical>
}
 8009000:	2001      	movs	r0, #1
 8009002:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009004:	f104 0010 	add.w	r0, r4, #16
 8009008:	f7ff fd48 	bl	8008a9c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800900c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009010:	f7ff fd44 	bl	8008a9c <vListInitialise>
 8009014:	e7f2      	b.n	8008ffc <xQueueGenericReset+0x64>

08009016 <xQueueGenericCreateStatic>:
	{
 8009016:	b513      	push	{r0, r1, r4, lr}
 8009018:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800901a:	b940      	cbnz	r0, 800902e <xQueueGenericCreateStatic+0x18>
 800901c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009020:	f383 8811 	msr	BASEPRI, r3
 8009024:	f3bf 8f6f 	isb	sy
 8009028:	f3bf 8f4f 	dsb	sy
 800902c:	e7fe      	b.n	800902c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800902e:	b943      	cbnz	r3, 8009042 <xQueueGenericCreateStatic+0x2c>
 8009030:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009034:	f383 8811 	msr	BASEPRI, r3
 8009038:	f3bf 8f6f 	isb	sy
 800903c:	f3bf 8f4f 	dsb	sy
 8009040:	e7fe      	b.n	8009040 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009042:	b14a      	cbz	r2, 8009058 <xQueueGenericCreateStatic+0x42>
 8009044:	b991      	cbnz	r1, 800906c <xQueueGenericCreateStatic+0x56>
 8009046:	f04f 0350 	mov.w	r3, #80	; 0x50
 800904a:	f383 8811 	msr	BASEPRI, r3
 800904e:	f3bf 8f6f 	isb	sy
 8009052:	f3bf 8f4f 	dsb	sy
 8009056:	e7fe      	b.n	8009056 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8009058:	b141      	cbz	r1, 800906c <xQueueGenericCreateStatic+0x56>
 800905a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800905e:	f383 8811 	msr	BASEPRI, r3
 8009062:	f3bf 8f6f 	isb	sy
 8009066:	f3bf 8f4f 	dsb	sy
 800906a:	e7fe      	b.n	800906a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800906c:	2350      	movs	r3, #80	; 0x50
 800906e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009070:	9b01      	ldr	r3, [sp, #4]
 8009072:	2b50      	cmp	r3, #80	; 0x50
 8009074:	d008      	beq.n	8009088 <xQueueGenericCreateStatic+0x72>
 8009076:	f04f 0350 	mov.w	r3, #80	; 0x50
 800907a:	f383 8811 	msr	BASEPRI, r3
 800907e:	f3bf 8f6f 	isb	sy
 8009082:	f3bf 8f4f 	dsb	sy
 8009086:	e7fe      	b.n	8009086 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009088:	2900      	cmp	r1, #0
 800908a:	bf08      	it	eq
 800908c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800908e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009090:	6022      	str	r2, [r4, #0]
 8009092:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009094:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009098:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800909c:	4619      	mov	r1, r3
 800909e:	4620      	mov	r0, r4
 80090a0:	f7ff ff7a 	bl	8008f98 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80090a4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80090a8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80090ac:	4620      	mov	r0, r4
 80090ae:	b002      	add	sp, #8
 80090b0:	bd10      	pop	{r4, pc}

080090b2 <xQueueGenericCreate>:
	{
 80090b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090b4:	460d      	mov	r5, r1
 80090b6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80090b8:	4606      	mov	r6, r0
 80090ba:	b940      	cbnz	r0, 80090ce <xQueueGenericCreate+0x1c>
 80090bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090c0:	f383 8811 	msr	BASEPRI, r3
 80090c4:	f3bf 8f6f 	isb	sy
 80090c8:	f3bf 8f4f 	dsb	sy
 80090cc:	e7fe      	b.n	80090cc <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80090ce:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80090d0:	3050      	adds	r0, #80	; 0x50
 80090d2:	f7ff fc19 	bl	8008908 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80090d6:	4604      	mov	r4, r0
 80090d8:	b170      	cbz	r0, 80090f8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80090da:	2300      	movs	r3, #0
 80090dc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80090e0:	b165      	cbz	r5, 80090fc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80090e2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 80090e6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 80090ea:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80090ec:	2101      	movs	r1, #1
 80090ee:	4620      	mov	r0, r4
 80090f0:	f7ff ff52 	bl	8008f98 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80090f4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80090f8:	4620      	mov	r0, r4
 80090fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80090fc:	4603      	mov	r3, r0
 80090fe:	e7f2      	b.n	80090e6 <xQueueGenericCreate+0x34>

08009100 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009100:	b513      	push	{r0, r1, r4, lr}
 8009102:	4613      	mov	r3, r2
 8009104:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009106:	b940      	cbnz	r0, 800911a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009108:	f04f 0350 	mov.w	r3, #80	; 0x50
 800910c:	f383 8811 	msr	BASEPRI, r3
 8009110:	f3bf 8f6f 	isb	sy
 8009114:	f3bf 8f4f 	dsb	sy
 8009118:	e7fe      	b.n	8009118 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800911a:	4288      	cmp	r0, r1
 800911c:	d208      	bcs.n	8009130 <xQueueCreateCountingSemaphoreStatic+0x30>
 800911e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009122:	f383 8811 	msr	BASEPRI, r3
 8009126:	f3bf 8f6f 	isb	sy
 800912a:	f3bf 8f4f 	dsb	sy
 800912e:	e7fe      	b.n	800912e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009130:	2202      	movs	r2, #2
 8009132:	9200      	str	r2, [sp, #0]
 8009134:	2200      	movs	r2, #0
 8009136:	4611      	mov	r1, r2
 8009138:	f7ff ff6d 	bl	8009016 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800913c:	b100      	cbz	r0, 8009140 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800913e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009140:	b002      	add	sp, #8
 8009142:	bd10      	pop	{r4, pc}

08009144 <xQueueCreateCountingSemaphore>:
	{
 8009144:	b510      	push	{r4, lr}
 8009146:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009148:	b940      	cbnz	r0, 800915c <xQueueCreateCountingSemaphore+0x18>
 800914a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800914e:	f383 8811 	msr	BASEPRI, r3
 8009152:	f3bf 8f6f 	isb	sy
 8009156:	f3bf 8f4f 	dsb	sy
 800915a:	e7fe      	b.n	800915a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800915c:	4288      	cmp	r0, r1
 800915e:	d208      	bcs.n	8009172 <xQueueCreateCountingSemaphore+0x2e>
 8009160:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009164:	f383 8811 	msr	BASEPRI, r3
 8009168:	f3bf 8f6f 	isb	sy
 800916c:	f3bf 8f4f 	dsb	sy
 8009170:	e7fe      	b.n	8009170 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009172:	2202      	movs	r2, #2
 8009174:	2100      	movs	r1, #0
 8009176:	f7ff ff9c 	bl	80090b2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800917a:	b100      	cbz	r0, 800917e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800917c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800917e:	bd10      	pop	{r4, pc}

08009180 <xQueueGenericSend>:
{
 8009180:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009184:	b085      	sub	sp, #20
 8009186:	4688      	mov	r8, r1
 8009188:	9201      	str	r2, [sp, #4]
 800918a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800918c:	4604      	mov	r4, r0
 800918e:	b940      	cbnz	r0, 80091a2 <xQueueGenericSend+0x22>
 8009190:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009194:	f383 8811 	msr	BASEPRI, r3
 8009198:	f3bf 8f6f 	isb	sy
 800919c:	f3bf 8f4f 	dsb	sy
 80091a0:	e7fe      	b.n	80091a0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80091a2:	b951      	cbnz	r1, 80091ba <xQueueGenericSend+0x3a>
 80091a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80091a6:	b143      	cbz	r3, 80091ba <xQueueGenericSend+0x3a>
 80091a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ac:	f383 8811 	msr	BASEPRI, r3
 80091b0:	f3bf 8f6f 	isb	sy
 80091b4:	f3bf 8f4f 	dsb	sy
 80091b8:	e7fe      	b.n	80091b8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80091ba:	2f02      	cmp	r7, #2
 80091bc:	d10b      	bne.n	80091d6 <xQueueGenericSend+0x56>
 80091be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80091c0:	2b01      	cmp	r3, #1
 80091c2:	d008      	beq.n	80091d6 <xQueueGenericSend+0x56>
 80091c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c8:	f383 8811 	msr	BASEPRI, r3
 80091cc:	f3bf 8f6f 	isb	sy
 80091d0:	f3bf 8f4f 	dsb	sy
 80091d4:	e7fe      	b.n	80091d4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80091d6:	f000 ffa9 	bl	800a12c <xTaskGetSchedulerState>
 80091da:	4606      	mov	r6, r0
 80091dc:	b950      	cbnz	r0, 80091f4 <xQueueGenericSend+0x74>
 80091de:	9b01      	ldr	r3, [sp, #4]
 80091e0:	b14b      	cbz	r3, 80091f6 <xQueueGenericSend+0x76>
 80091e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091e6:	f383 8811 	msr	BASEPRI, r3
 80091ea:	f3bf 8f6f 	isb	sy
 80091ee:	f3bf 8f4f 	dsb	sy
 80091f2:	e7fe      	b.n	80091f2 <xQueueGenericSend+0x72>
 80091f4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80091f6:	f04f 0900 	mov.w	r9, #0
 80091fa:	e037      	b.n	800926c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 80091fc:	9d01      	ldr	r5, [sp, #4]
 80091fe:	b91d      	cbnz	r5, 8009208 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009200:	f7ff fd18 	bl	8008c34 <vPortExitCritical>
			return errQUEUE_FULL;
 8009204:	2000      	movs	r0, #0
 8009206:	e052      	b.n	80092ae <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009208:	b916      	cbnz	r6, 8009210 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800920a:	a802      	add	r0, sp, #8
 800920c:	f000 ff40 	bl	800a090 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009210:	f7ff fd10 	bl	8008c34 <vPortExitCritical>
		vTaskSuspendAll();
 8009214:	f000 fcfa 	bl	8009c0c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009218:	f7ff fcec 	bl	8008bf4 <vPortEnterCritical>
 800921c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009220:	2bff      	cmp	r3, #255	; 0xff
 8009222:	bf08      	it	eq
 8009224:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009228:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800922c:	2bff      	cmp	r3, #255	; 0xff
 800922e:	bf08      	it	eq
 8009230:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009234:	f7ff fcfe 	bl	8008c34 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009238:	a901      	add	r1, sp, #4
 800923a:	a802      	add	r0, sp, #8
 800923c:	f000 ff34 	bl	800a0a8 <xTaskCheckForTimeOut>
 8009240:	2800      	cmp	r0, #0
 8009242:	d14a      	bne.n	80092da <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009244:	f7ff fcd6 	bl	8008bf4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009248:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800924a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800924c:	429a      	cmp	r2, r3
 800924e:	d131      	bne.n	80092b4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009250:	f7ff fcf0 	bl	8008c34 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009254:	9901      	ldr	r1, [sp, #4]
 8009256:	f104 0010 	add.w	r0, r4, #16
 800925a:	f000 fe9d 	bl	8009f98 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800925e:	4620      	mov	r0, r4
 8009260:	f7ff fe62 	bl	8008f28 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009264:	f000 fd76 	bl	8009d54 <xTaskResumeAll>
 8009268:	b360      	cbz	r0, 80092c4 <xQueueGenericSend+0x144>
 800926a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800926c:	f7ff fcc2 	bl	8008bf4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009270:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009272:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009274:	429a      	cmp	r2, r3
 8009276:	d301      	bcc.n	800927c <xQueueGenericSend+0xfc>
 8009278:	2f02      	cmp	r7, #2
 800927a:	d1bf      	bne.n	80091fc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800927c:	463a      	mov	r2, r7
 800927e:	4641      	mov	r1, r8
 8009280:	4620      	mov	r0, r4
 8009282:	f7ff fe06 	bl	8008e92 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009286:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009288:	b11b      	cbz	r3, 8009292 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800928a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800928e:	f000 febb 	bl	800a008 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009292:	b148      	cbz	r0, 80092a8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009294:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009298:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800929c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80092a0:	f3bf 8f4f 	dsb	sy
 80092a4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80092a8:	f7ff fcc4 	bl	8008c34 <vPortExitCritical>
				return pdPASS;
 80092ac:	2001      	movs	r0, #1
}
 80092ae:	b005      	add	sp, #20
 80092b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80092b4:	f7ff fcbe 	bl	8008c34 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80092b8:	4620      	mov	r0, r4
 80092ba:	f7ff fe35 	bl	8008f28 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80092be:	f000 fd49 	bl	8009d54 <xTaskResumeAll>
 80092c2:	e7d2      	b.n	800926a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80092c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80092c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80092cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80092d0:	f3bf 8f4f 	dsb	sy
 80092d4:	f3bf 8f6f 	isb	sy
 80092d8:	e7c7      	b.n	800926a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80092da:	4620      	mov	r0, r4
 80092dc:	f7ff fe24 	bl	8008f28 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80092e0:	f000 fd38 	bl	8009d54 <xTaskResumeAll>
 80092e4:	e78e      	b.n	8009204 <xQueueGenericSend+0x84>

080092e6 <xQueueGenericSendFromISR>:
{
 80092e6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80092ea:	4689      	mov	r9, r1
 80092ec:	4690      	mov	r8, r2
 80092ee:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80092f0:	4604      	mov	r4, r0
 80092f2:	b940      	cbnz	r0, 8009306 <xQueueGenericSendFromISR+0x20>
 80092f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f8:	f383 8811 	msr	BASEPRI, r3
 80092fc:	f3bf 8f6f 	isb	sy
 8009300:	f3bf 8f4f 	dsb	sy
 8009304:	e7fe      	b.n	8009304 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009306:	b951      	cbnz	r1, 800931e <xQueueGenericSendFromISR+0x38>
 8009308:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800930a:	b143      	cbz	r3, 800931e <xQueueGenericSendFromISR+0x38>
 800930c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009310:	f383 8811 	msr	BASEPRI, r3
 8009314:	f3bf 8f6f 	isb	sy
 8009318:	f3bf 8f4f 	dsb	sy
 800931c:	e7fe      	b.n	800931c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800931e:	2f02      	cmp	r7, #2
 8009320:	d10b      	bne.n	800933a <xQueueGenericSendFromISR+0x54>
 8009322:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009324:	2b01      	cmp	r3, #1
 8009326:	d008      	beq.n	800933a <xQueueGenericSendFromISR+0x54>
 8009328:	f04f 0350 	mov.w	r3, #80	; 0x50
 800932c:	f383 8811 	msr	BASEPRI, r3
 8009330:	f3bf 8f6f 	isb	sy
 8009334:	f3bf 8f4f 	dsb	sy
 8009338:	e7fe      	b.n	8009338 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800933a:	f7ff fd71 	bl	8008e20 <vPortValidateInterruptPriority>
	__asm volatile
 800933e:	f3ef 8611 	mrs	r6, BASEPRI
 8009342:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009346:	f383 8811 	msr	BASEPRI, r3
 800934a:	f3bf 8f6f 	isb	sy
 800934e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009352:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009354:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009356:	429a      	cmp	r2, r3
 8009358:	d301      	bcc.n	800935e <xQueueGenericSendFromISR+0x78>
 800935a:	2f02      	cmp	r7, #2
 800935c:	d122      	bne.n	80093a4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 800935e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009362:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8009364:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009366:	4649      	mov	r1, r9
 8009368:	4620      	mov	r0, r4
 800936a:	f7ff fd92 	bl	8008e92 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800936e:	1c6b      	adds	r3, r5, #1
 8009370:	d113      	bne.n	800939a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009372:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009374:	b90b      	cbnz	r3, 800937a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009376:	2001      	movs	r0, #1
 8009378:	e00b      	b.n	8009392 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800937a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800937e:	f000 fe43 	bl	800a008 <xTaskRemoveFromEventList>
 8009382:	2800      	cmp	r0, #0
 8009384:	d0f7      	beq.n	8009376 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009386:	f1b8 0f00 	cmp.w	r8, #0
 800938a:	d0f4      	beq.n	8009376 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800938c:	2001      	movs	r0, #1
 800938e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009392:	f386 8811 	msr	BASEPRI, r6
}
 8009396:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800939a:	3501      	adds	r5, #1
 800939c:	b26d      	sxtb	r5, r5
 800939e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80093a2:	e7e8      	b.n	8009376 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 80093a4:	2000      	movs	r0, #0
 80093a6:	e7f4      	b.n	8009392 <xQueueGenericSendFromISR+0xac>

080093a8 <xQueueGiveFromISR>:
{
 80093a8:	b570      	push	{r4, r5, r6, lr}
 80093aa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80093ac:	4604      	mov	r4, r0
 80093ae:	b940      	cbnz	r0, 80093c2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80093b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b4:	f383 8811 	msr	BASEPRI, r3
 80093b8:	f3bf 8f6f 	isb	sy
 80093bc:	f3bf 8f4f 	dsb	sy
 80093c0:	e7fe      	b.n	80093c0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80093c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80093c4:	b143      	cbz	r3, 80093d8 <xQueueGiveFromISR+0x30>
 80093c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ca:	f383 8811 	msr	BASEPRI, r3
 80093ce:	f3bf 8f6f 	isb	sy
 80093d2:	f3bf 8f4f 	dsb	sy
 80093d6:	e7fe      	b.n	80093d6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80093d8:	6803      	ldr	r3, [r0, #0]
 80093da:	b953      	cbnz	r3, 80093f2 <xQueueGiveFromISR+0x4a>
 80093dc:	6883      	ldr	r3, [r0, #8]
 80093de:	b143      	cbz	r3, 80093f2 <xQueueGiveFromISR+0x4a>
 80093e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093e4:	f383 8811 	msr	BASEPRI, r3
 80093e8:	f3bf 8f6f 	isb	sy
 80093ec:	f3bf 8f4f 	dsb	sy
 80093f0:	e7fe      	b.n	80093f0 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80093f2:	f7ff fd15 	bl	8008e20 <vPortValidateInterruptPriority>
	__asm volatile
 80093f6:	f3ef 8611 	mrs	r6, BASEPRI
 80093fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093fe:	f383 8811 	msr	BASEPRI, r3
 8009402:	f3bf 8f6f 	isb	sy
 8009406:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800940a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800940c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800940e:	4293      	cmp	r3, r2
 8009410:	d91c      	bls.n	800944c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009412:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009416:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009418:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800941a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800941c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800941e:	d110      	bne.n	8009442 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009420:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009422:	b90b      	cbnz	r3, 8009428 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009424:	2001      	movs	r0, #1
 8009426:	e009      	b.n	800943c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009428:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800942c:	f000 fdec 	bl	800a008 <xTaskRemoveFromEventList>
 8009430:	2800      	cmp	r0, #0
 8009432:	d0f7      	beq.n	8009424 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009434:	2d00      	cmp	r5, #0
 8009436:	d0f5      	beq.n	8009424 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009438:	2001      	movs	r0, #1
 800943a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800943c:	f386 8811 	msr	BASEPRI, r6
}
 8009440:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009442:	3301      	adds	r3, #1
 8009444:	b25b      	sxtb	r3, r3
 8009446:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800944a:	e7eb      	b.n	8009424 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800944c:	2000      	movs	r0, #0
 800944e:	e7f5      	b.n	800943c <xQueueGiveFromISR+0x94>

08009450 <xQueueReceive>:
{
 8009450:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009454:	460f      	mov	r7, r1
 8009456:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009458:	4604      	mov	r4, r0
 800945a:	b940      	cbnz	r0, 800946e <xQueueReceive+0x1e>
	__asm volatile
 800945c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009460:	f383 8811 	msr	BASEPRI, r3
 8009464:	f3bf 8f6f 	isb	sy
 8009468:	f3bf 8f4f 	dsb	sy
 800946c:	e7fe      	b.n	800946c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800946e:	b951      	cbnz	r1, 8009486 <xQueueReceive+0x36>
 8009470:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009472:	b143      	cbz	r3, 8009486 <xQueueReceive+0x36>
 8009474:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009478:	f383 8811 	msr	BASEPRI, r3
 800947c:	f3bf 8f6f 	isb	sy
 8009480:	f3bf 8f4f 	dsb	sy
 8009484:	e7fe      	b.n	8009484 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009486:	f000 fe51 	bl	800a12c <xTaskGetSchedulerState>
 800948a:	4606      	mov	r6, r0
 800948c:	b950      	cbnz	r0, 80094a4 <xQueueReceive+0x54>
 800948e:	9b01      	ldr	r3, [sp, #4]
 8009490:	b14b      	cbz	r3, 80094a6 <xQueueReceive+0x56>
 8009492:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009496:	f383 8811 	msr	BASEPRI, r3
 800949a:	f3bf 8f6f 	isb	sy
 800949e:	f3bf 8f4f 	dsb	sy
 80094a2:	e7fe      	b.n	80094a2 <xQueueReceive+0x52>
 80094a4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80094a6:	f04f 0800 	mov.w	r8, #0
 80094aa:	e03d      	b.n	8009528 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80094ac:	9d01      	ldr	r5, [sp, #4]
 80094ae:	b91d      	cbnz	r5, 80094b8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 80094b0:	f7ff fbc0 	bl	8008c34 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80094b4:	2000      	movs	r0, #0
 80094b6:	e056      	b.n	8009566 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 80094b8:	b916      	cbnz	r6, 80094c0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80094ba:	a802      	add	r0, sp, #8
 80094bc:	f000 fde8 	bl	800a090 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80094c0:	f7ff fbb8 	bl	8008c34 <vPortExitCritical>
		vTaskSuspendAll();
 80094c4:	f000 fba2 	bl	8009c0c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80094c8:	f7ff fb94 	bl	8008bf4 <vPortEnterCritical>
 80094cc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80094d0:	2bff      	cmp	r3, #255	; 0xff
 80094d2:	bf08      	it	eq
 80094d4:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 80094d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80094dc:	2bff      	cmp	r3, #255	; 0xff
 80094de:	bf08      	it	eq
 80094e0:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 80094e4:	f7ff fba6 	bl	8008c34 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80094e8:	a901      	add	r1, sp, #4
 80094ea:	a802      	add	r0, sp, #8
 80094ec:	f000 fddc 	bl	800a0a8 <xTaskCheckForTimeOut>
 80094f0:	2800      	cmp	r0, #0
 80094f2:	d141      	bne.n	8009578 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80094f4:	4620      	mov	r0, r4
 80094f6:	f7ff fcc1 	bl	8008e7c <prvIsQueueEmpty>
 80094fa:	b3b8      	cbz	r0, 800956c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80094fc:	9901      	ldr	r1, [sp, #4]
 80094fe:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009502:	f000 fd49 	bl	8009f98 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009506:	4620      	mov	r0, r4
 8009508:	f7ff fd0e 	bl	8008f28 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800950c:	f000 fc22 	bl	8009d54 <xTaskResumeAll>
 8009510:	b948      	cbnz	r0, 8009526 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009512:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009516:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800951a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800951e:	f3bf 8f4f 	dsb	sy
 8009522:	f3bf 8f6f 	isb	sy
 8009526:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009528:	f7ff fb64 	bl	8008bf4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800952c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800952e:	2d00      	cmp	r5, #0
 8009530:	d0bc      	beq.n	80094ac <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009532:	4639      	mov	r1, r7
 8009534:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009536:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009538:	f7ff fce0 	bl	8008efc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800953c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800953e:	6923      	ldr	r3, [r4, #16]
 8009540:	b173      	cbz	r3, 8009560 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009542:	f104 0010 	add.w	r0, r4, #16
 8009546:	f000 fd5f 	bl	800a008 <xTaskRemoveFromEventList>
 800954a:	b148      	cbz	r0, 8009560 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800954c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009550:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009554:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009558:	f3bf 8f4f 	dsb	sy
 800955c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009560:	f7ff fb68 	bl	8008c34 <vPortExitCritical>
				return pdPASS;
 8009564:	2001      	movs	r0, #1
}
 8009566:	b004      	add	sp, #16
 8009568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800956c:	4620      	mov	r0, r4
 800956e:	f7ff fcdb 	bl	8008f28 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009572:	f000 fbef 	bl	8009d54 <xTaskResumeAll>
 8009576:	e7d6      	b.n	8009526 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009578:	4620      	mov	r0, r4
 800957a:	f7ff fcd5 	bl	8008f28 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800957e:	f000 fbe9 	bl	8009d54 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009582:	4620      	mov	r0, r4
 8009584:	f7ff fc7a 	bl	8008e7c <prvIsQueueEmpty>
 8009588:	2800      	cmp	r0, #0
 800958a:	d0cc      	beq.n	8009526 <xQueueReceive+0xd6>
 800958c:	e792      	b.n	80094b4 <xQueueReceive+0x64>

0800958e <xQueueSemaphoreTake>:
{
 800958e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009590:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009592:	4604      	mov	r4, r0
{
 8009594:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009596:	b940      	cbnz	r0, 80095aa <xQueueSemaphoreTake+0x1c>
 8009598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800959c:	f383 8811 	msr	BASEPRI, r3
 80095a0:	f3bf 8f6f 	isb	sy
 80095a4:	f3bf 8f4f 	dsb	sy
 80095a8:	e7fe      	b.n	80095a8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80095aa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80095ac:	b145      	cbz	r5, 80095c0 <xQueueSemaphoreTake+0x32>
 80095ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095b2:	f383 8811 	msr	BASEPRI, r3
 80095b6:	f3bf 8f6f 	isb	sy
 80095ba:	f3bf 8f4f 	dsb	sy
 80095be:	e7fe      	b.n	80095be <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80095c0:	f000 fdb4 	bl	800a12c <xTaskGetSchedulerState>
 80095c4:	4606      	mov	r6, r0
 80095c6:	b950      	cbnz	r0, 80095de <xQueueSemaphoreTake+0x50>
 80095c8:	9b01      	ldr	r3, [sp, #4]
 80095ca:	b15b      	cbz	r3, 80095e4 <xQueueSemaphoreTake+0x56>
 80095cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095d0:	f383 8811 	msr	BASEPRI, r3
 80095d4:	f3bf 8f6f 	isb	sy
 80095d8:	f3bf 8f4f 	dsb	sy
 80095dc:	e7fe      	b.n	80095dc <xQueueSemaphoreTake+0x4e>
 80095de:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 80095e0:	2700      	movs	r7, #0
 80095e2:	e053      	b.n	800968c <xQueueSemaphoreTake+0xfe>
 80095e4:	4605      	mov	r5, r0
 80095e6:	e7fb      	b.n	80095e0 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 80095e8:	9b01      	ldr	r3, [sp, #4]
 80095ea:	b963      	cbnz	r3, 8009606 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 80095ec:	b145      	cbz	r5, 8009600 <xQueueSemaphoreTake+0x72>
 80095ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095f2:	f383 8811 	msr	BASEPRI, r3
 80095f6:	f3bf 8f6f 	isb	sy
 80095fa:	f3bf 8f4f 	dsb	sy
 80095fe:	e7fe      	b.n	80095fe <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009600:	f7ff fb18 	bl	8008c34 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009604:	e062      	b.n	80096cc <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009606:	b916      	cbnz	r6, 800960e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009608:	a802      	add	r0, sp, #8
 800960a:	f000 fd41 	bl	800a090 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800960e:	f7ff fb11 	bl	8008c34 <vPortExitCritical>
		vTaskSuspendAll();
 8009612:	f000 fafb 	bl	8009c0c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009616:	f7ff faed 	bl	8008bf4 <vPortEnterCritical>
 800961a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800961e:	2bff      	cmp	r3, #255	; 0xff
 8009620:	bf08      	it	eq
 8009622:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009626:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800962a:	2bff      	cmp	r3, #255	; 0xff
 800962c:	bf08      	it	eq
 800962e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009632:	f7ff faff 	bl	8008c34 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009636:	a901      	add	r1, sp, #4
 8009638:	a802      	add	r0, sp, #8
 800963a:	f000 fd35 	bl	800a0a8 <xTaskCheckForTimeOut>
 800963e:	2800      	cmp	r0, #0
 8009640:	d14d      	bne.n	80096de <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009642:	4620      	mov	r0, r4
 8009644:	f7ff fc1a 	bl	8008e7c <prvIsQueueEmpty>
 8009648:	2800      	cmp	r0, #0
 800964a:	d042      	beq.n	80096d2 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800964c:	6823      	ldr	r3, [r4, #0]
 800964e:	b93b      	cbnz	r3, 8009660 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009650:	f7ff fad0 	bl	8008bf4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009654:	68a0      	ldr	r0, [r4, #8]
 8009656:	f000 fd79 	bl	800a14c <xTaskPriorityInherit>
 800965a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800965c:	f7ff faea 	bl	8008c34 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009660:	9901      	ldr	r1, [sp, #4]
 8009662:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009666:	f000 fc97 	bl	8009f98 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800966a:	4620      	mov	r0, r4
 800966c:	f7ff fc5c 	bl	8008f28 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009670:	f000 fb70 	bl	8009d54 <xTaskResumeAll>
 8009674:	b948      	cbnz	r0, 800968a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009676:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800967a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800967e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009682:	f3bf 8f4f 	dsb	sy
 8009686:	f3bf 8f6f 	isb	sy
 800968a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800968c:	f7ff fab2 	bl	8008bf4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009690:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009692:	2b00      	cmp	r3, #0
 8009694:	d0a8      	beq.n	80095e8 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009696:	3b01      	subs	r3, #1
 8009698:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800969a:	6823      	ldr	r3, [r4, #0]
 800969c:	b913      	cbnz	r3, 80096a4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800969e:	f000 fe2d 	bl	800a2fc <pvTaskIncrementMutexHeldCount>
 80096a2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096a4:	6923      	ldr	r3, [r4, #16]
 80096a6:	b173      	cbz	r3, 80096c6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096a8:	f104 0010 	add.w	r0, r4, #16
 80096ac:	f000 fcac 	bl	800a008 <xTaskRemoveFromEventList>
 80096b0:	b148      	cbz	r0, 80096c6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80096b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096be:	f3bf 8f4f 	dsb	sy
 80096c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80096c6:	f7ff fab5 	bl	8008c34 <vPortExitCritical>
				return pdPASS;
 80096ca:	2501      	movs	r5, #1
}
 80096cc:	4628      	mov	r0, r5
 80096ce:	b005      	add	sp, #20
 80096d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 80096d2:	4620      	mov	r0, r4
 80096d4:	f7ff fc28 	bl	8008f28 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80096d8:	f000 fb3c 	bl	8009d54 <xTaskResumeAll>
 80096dc:	e7d5      	b.n	800968a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80096de:	4620      	mov	r0, r4
 80096e0:	f7ff fc22 	bl	8008f28 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80096e4:	f000 fb36 	bl	8009d54 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096e8:	4620      	mov	r0, r4
 80096ea:	f7ff fbc7 	bl	8008e7c <prvIsQueueEmpty>
 80096ee:	2800      	cmp	r0, #0
 80096f0:	d0cb      	beq.n	800968a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 80096f2:	2d00      	cmp	r5, #0
 80096f4:	d0ea      	beq.n	80096cc <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 80096f6:	f7ff fa7d 	bl	8008bf4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 80096fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80096fc:	b119      	cbz	r1, 8009706 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 80096fe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009700:	6819      	ldr	r1, [r3, #0]
 8009702:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009706:	68a0      	ldr	r0, [r4, #8]
 8009708:	f000 fda6 	bl	800a258 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800970c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800970e:	f7ff fa91 	bl	8008c34 <vPortExitCritical>
 8009712:	e7db      	b.n	80096cc <xQueueSemaphoreTake+0x13e>

08009714 <xQueueReceiveFromISR>:
{
 8009714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009718:	4689      	mov	r9, r1
 800971a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800971c:	4605      	mov	r5, r0
 800971e:	b940      	cbnz	r0, 8009732 <xQueueReceiveFromISR+0x1e>
 8009720:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009724:	f383 8811 	msr	BASEPRI, r3
 8009728:	f3bf 8f6f 	isb	sy
 800972c:	f3bf 8f4f 	dsb	sy
 8009730:	e7fe      	b.n	8009730 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009732:	b951      	cbnz	r1, 800974a <xQueueReceiveFromISR+0x36>
 8009734:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009736:	b143      	cbz	r3, 800974a <xQueueReceiveFromISR+0x36>
 8009738:	f04f 0350 	mov.w	r3, #80	; 0x50
 800973c:	f383 8811 	msr	BASEPRI, r3
 8009740:	f3bf 8f6f 	isb	sy
 8009744:	f3bf 8f4f 	dsb	sy
 8009748:	e7fe      	b.n	8009748 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800974a:	f7ff fb69 	bl	8008e20 <vPortValidateInterruptPriority>
	__asm volatile
 800974e:	f3ef 8711 	mrs	r7, BASEPRI
 8009752:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009756:	f383 8811 	msr	BASEPRI, r3
 800975a:	f3bf 8f6f 	isb	sy
 800975e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009762:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009764:	b31c      	cbz	r4, 80097ae <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009766:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800976a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800976c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800976e:	4628      	mov	r0, r5
 8009770:	f7ff fbc4 	bl	8008efc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009774:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009776:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009778:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800977a:	d113      	bne.n	80097a4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800977c:	692b      	ldr	r3, [r5, #16]
 800977e:	b90b      	cbnz	r3, 8009784 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009780:	2001      	movs	r0, #1
 8009782:	e00b      	b.n	800979c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009784:	f105 0010 	add.w	r0, r5, #16
 8009788:	f000 fc3e 	bl	800a008 <xTaskRemoveFromEventList>
 800978c:	2800      	cmp	r0, #0
 800978e:	d0f7      	beq.n	8009780 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009790:	f1b8 0f00 	cmp.w	r8, #0
 8009794:	d0f4      	beq.n	8009780 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009796:	2001      	movs	r0, #1
 8009798:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800979c:	f387 8811 	msr	BASEPRI, r7
}
 80097a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80097a4:	3601      	adds	r6, #1
 80097a6:	b276      	sxtb	r6, r6
 80097a8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80097ac:	e7e8      	b.n	8009780 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80097ae:	4620      	mov	r0, r4
 80097b0:	e7f4      	b.n	800979c <xQueueReceiveFromISR+0x88>
	...

080097b4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80097b4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80097b6:	4a07      	ldr	r2, [pc, #28]	; (80097d4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097b8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80097ba:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80097be:	b92c      	cbnz	r4, 80097cc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80097c0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80097c4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80097c8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80097ca:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097cc:	3301      	adds	r3, #1
 80097ce:	2b08      	cmp	r3, #8
 80097d0:	d1f3      	bne.n	80097ba <vQueueAddToRegistry+0x6>
 80097d2:	e7fa      	b.n	80097ca <vQueueAddToRegistry+0x16>
 80097d4:	2000cd98 	.word	0x2000cd98

080097d8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 80097d8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80097da:	4a08      	ldr	r2, [pc, #32]	; (80097fc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097dc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80097de:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 80097e2:	684c      	ldr	r4, [r1, #4]
 80097e4:	4284      	cmp	r4, r0
 80097e6:	d104      	bne.n	80097f2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80097e8:	2000      	movs	r0, #0
 80097ea:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 80097ee:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 80097f0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80097f2:	3301      	adds	r3, #1
 80097f4:	2b08      	cmp	r3, #8
 80097f6:	d1f2      	bne.n	80097de <vQueueUnregisterQueue+0x6>
 80097f8:	e7fa      	b.n	80097f0 <vQueueUnregisterQueue+0x18>
 80097fa:	bf00      	nop
 80097fc:	2000cd98 	.word	0x2000cd98

08009800 <vQueueDelete>:
{
 8009800:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009802:	4604      	mov	r4, r0
 8009804:	b940      	cbnz	r0, 8009818 <vQueueDelete+0x18>
	__asm volatile
 8009806:	f04f 0350 	mov.w	r3, #80	; 0x50
 800980a:	f383 8811 	msr	BASEPRI, r3
 800980e:	f3bf 8f6f 	isb	sy
 8009812:	f3bf 8f4f 	dsb	sy
 8009816:	e7fe      	b.n	8009816 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009818:	f7ff ffde 	bl	80097d8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800981c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009820:	b923      	cbnz	r3, 800982c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009822:	4620      	mov	r0, r4
}
 8009824:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009828:	f7ff b900 	b.w	8008a2c <vPortFree>
}
 800982c:	bd10      	pop	{r4, pc}

0800982e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800982e:	b570      	push	{r4, r5, r6, lr}
 8009830:	4604      	mov	r4, r0
 8009832:	460d      	mov	r5, r1
 8009834:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009836:	f7ff f9dd 	bl	8008bf4 <vPortEnterCritical>
 800983a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800983e:	2bff      	cmp	r3, #255	; 0xff
 8009840:	bf04      	itt	eq
 8009842:	2300      	moveq	r3, #0
 8009844:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8009848:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800984c:	2bff      	cmp	r3, #255	; 0xff
 800984e:	bf04      	itt	eq
 8009850:	2300      	moveq	r3, #0
 8009852:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8009856:	f7ff f9ed 	bl	8008c34 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800985a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800985c:	b92b      	cbnz	r3, 800986a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800985e:	4632      	mov	r2, r6
 8009860:	4629      	mov	r1, r5
 8009862:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009866:	f000 fbb1 	bl	8009fcc <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800986a:	4620      	mov	r0, r4
	}
 800986c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009870:	f7ff bb5a 	b.w	8008f28 <prvUnlockQueue>

08009874 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009874:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009878:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800987a:	f7ff f9bb 	bl	8008bf4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800987e:	4b30      	ldr	r3, [pc, #192]	; (8009940 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009880:	4e30      	ldr	r6, [pc, #192]	; (8009944 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009882:	681a      	ldr	r2, [r3, #0]
 8009884:	4f30      	ldr	r7, [pc, #192]	; (8009948 <prvAddNewTaskToReadyList+0xd4>)
 8009886:	3201      	adds	r2, #1
 8009888:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800988a:	6835      	ldr	r5, [r6, #0]
 800988c:	2d00      	cmp	r5, #0
 800988e:	d14b      	bne.n	8009928 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009890:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009892:	681b      	ldr	r3, [r3, #0]
 8009894:	2b01      	cmp	r3, #1
 8009896:	d11f      	bne.n	80098d8 <prvAddNewTaskToReadyList+0x64>
 8009898:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800989a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800989c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800989e:	f7ff f8fd 	bl	8008a9c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098a2:	2d38      	cmp	r5, #56	; 0x38
 80098a4:	f108 0814 	add.w	r8, r8, #20
 80098a8:	d1f7      	bne.n	800989a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80098aa:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009970 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80098ae:	4d27      	ldr	r5, [pc, #156]	; (800994c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80098b0:	4640      	mov	r0, r8
 80098b2:	f7ff f8f3 	bl	8008a9c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80098b6:	4628      	mov	r0, r5
 80098b8:	f7ff f8f0 	bl	8008a9c <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80098bc:	4824      	ldr	r0, [pc, #144]	; (8009950 <prvAddNewTaskToReadyList+0xdc>)
 80098be:	f7ff f8ed 	bl	8008a9c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80098c2:	4824      	ldr	r0, [pc, #144]	; (8009954 <prvAddNewTaskToReadyList+0xe0>)
 80098c4:	f7ff f8ea 	bl	8008a9c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80098c8:	4823      	ldr	r0, [pc, #140]	; (8009958 <prvAddNewTaskToReadyList+0xe4>)
 80098ca:	f7ff f8e7 	bl	8008a9c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80098ce:	4b23      	ldr	r3, [pc, #140]	; (800995c <prvAddNewTaskToReadyList+0xe8>)
 80098d0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80098d4:	4b22      	ldr	r3, [pc, #136]	; (8009960 <prvAddNewTaskToReadyList+0xec>)
 80098d6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 80098d8:	4a22      	ldr	r2, [pc, #136]	; (8009964 <prvAddNewTaskToReadyList+0xf0>)
 80098da:	6813      	ldr	r3, [r2, #0]
 80098dc:	3301      	adds	r3, #1
 80098de:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 80098e0:	4a21      	ldr	r2, [pc, #132]	; (8009968 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 80098e2:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 80098e4:	6811      	ldr	r1, [r2, #0]
 80098e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80098e8:	2014      	movs	r0, #20
 80098ea:	428b      	cmp	r3, r1
 80098ec:	fb00 7003 	mla	r0, r0, r3, r7
 80098f0:	f104 0104 	add.w	r1, r4, #4
 80098f4:	bf88      	it	hi
 80098f6:	6013      	strhi	r3, [r2, #0]
 80098f8:	f7ff f8de 	bl	8008ab8 <vListInsertEnd>
	taskEXIT_CRITICAL();
 80098fc:	f7ff f99a 	bl	8008c34 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009900:	4b1a      	ldr	r3, [pc, #104]	; (800996c <prvAddNewTaskToReadyList+0xf8>)
 8009902:	681b      	ldr	r3, [r3, #0]
 8009904:	b173      	cbz	r3, 8009924 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009906:	6833      	ldr	r3, [r6, #0]
 8009908:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800990a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800990c:	429a      	cmp	r2, r3
 800990e:	d209      	bcs.n	8009924 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009910:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009914:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009918:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800991c:	f3bf 8f4f 	dsb	sy
 8009920:	f3bf 8f6f 	isb	sy
}
 8009924:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009928:	4b10      	ldr	r3, [pc, #64]	; (800996c <prvAddNewTaskToReadyList+0xf8>)
 800992a:	681b      	ldr	r3, [r3, #0]
 800992c:	2b00      	cmp	r3, #0
 800992e:	d1d3      	bne.n	80098d8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009930:	6833      	ldr	r3, [r6, #0]
 8009932:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009934:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009936:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009938:	bf98      	it	ls
 800993a:	6034      	strls	r4, [r6, #0]
 800993c:	e7cc      	b.n	80098d8 <prvAddNewTaskToReadyList+0x64>
 800993e:	bf00      	nop
 8009940:	2000d244 	.word	0x2000d244
 8009944:	2000cdd8 	.word	0x2000cdd8
 8009948:	2000cde4 	.word	0x2000cde4
 800994c:	2000d270 	.word	0x2000d270
 8009950:	2000d28c 	.word	0x2000d28c
 8009954:	2000d2b8 	.word	0x2000d2b8
 8009958:	2000d2a4 	.word	0x2000d2a4
 800995c:	2000cddc 	.word	0x2000cddc
 8009960:	2000cde0 	.word	0x2000cde0
 8009964:	2000d254 	.word	0x2000d254
 8009968:	2000d258 	.word	0x2000d258
 800996c:	2000d2a0 	.word	0x2000d2a0
 8009970:	2000d25c 	.word	0x2000d25c

08009974 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009976:	4b15      	ldr	r3, [pc, #84]	; (80099cc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009978:	4e15      	ldr	r6, [pc, #84]	; (80099d0 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800997a:	681d      	ldr	r5, [r3, #0]
{
 800997c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800997e:	6830      	ldr	r0, [r6, #0]
 8009980:	3004      	adds	r0, #4
{
 8009982:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009984:	f7ff f8bb 	bl	8008afe <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009988:	1c63      	adds	r3, r4, #1
 800998a:	d107      	bne.n	800999c <prvAddCurrentTaskToDelayedList+0x28>
 800998c:	b137      	cbz	r7, 800999c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800998e:	6831      	ldr	r1, [r6, #0]
 8009990:	4810      	ldr	r0, [pc, #64]	; (80099d4 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009992:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009996:	3104      	adds	r1, #4
 8009998:	f7ff b88e 	b.w	8008ab8 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800999c:	6833      	ldr	r3, [r6, #0]
 800999e:	192c      	adds	r4, r5, r4
 80099a0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80099a2:	d307      	bcc.n	80099b4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099a4:	4b0c      	ldr	r3, [pc, #48]	; (80099d8 <prvAddCurrentTaskToDelayedList+0x64>)
 80099a6:	6818      	ldr	r0, [r3, #0]
 80099a8:	6831      	ldr	r1, [r6, #0]
}
 80099aa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099ae:	3104      	adds	r1, #4
 80099b0:	f7ff b88e 	b.w	8008ad0 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099b4:	4b09      	ldr	r3, [pc, #36]	; (80099dc <prvAddCurrentTaskToDelayedList+0x68>)
 80099b6:	6818      	ldr	r0, [r3, #0]
 80099b8:	6831      	ldr	r1, [r6, #0]
 80099ba:	3104      	adds	r1, #4
 80099bc:	f7ff f888 	bl	8008ad0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80099c0:	4b07      	ldr	r3, [pc, #28]	; (80099e0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80099c2:	681a      	ldr	r2, [r3, #0]
 80099c4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80099c6:	bf88      	it	hi
 80099c8:	601c      	strhi	r4, [r3, #0]
}
 80099ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80099cc:	2000d2cc 	.word	0x2000d2cc
 80099d0:	2000cdd8 	.word	0x2000cdd8
 80099d4:	2000d2a4 	.word	0x2000d2a4
 80099d8:	2000cde0 	.word	0x2000cde0
 80099dc:	2000cddc 	.word	0x2000cddc
 80099e0:	2000d284 	.word	0x2000d284

080099e4 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80099e4:	4a06      	ldr	r2, [pc, #24]	; (8009a00 <prvResetNextTaskUnblockTime+0x1c>)
 80099e6:	6813      	ldr	r3, [r2, #0]
 80099e8:	6819      	ldr	r1, [r3, #0]
 80099ea:	4b06      	ldr	r3, [pc, #24]	; (8009a04 <prvResetNextTaskUnblockTime+0x20>)
 80099ec:	b919      	cbnz	r1, 80099f6 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 80099ee:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80099f2:	601a      	str	r2, [r3, #0]
}
 80099f4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80099f6:	6812      	ldr	r2, [r2, #0]
 80099f8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80099fa:	68d2      	ldr	r2, [r2, #12]
 80099fc:	6852      	ldr	r2, [r2, #4]
 80099fe:	e7f8      	b.n	80099f2 <prvResetNextTaskUnblockTime+0xe>
 8009a00:	2000cddc 	.word	0x2000cddc
 8009a04:	2000d284 	.word	0x2000d284

08009a08 <prvDeleteTCB>:
	{
 8009a08:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a0a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8009a0e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a10:	b93b      	cbnz	r3, 8009a22 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009a12:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009a14:	f7ff f80a 	bl	8008a2c <vPortFree>
				vPortFree( pxTCB );
 8009a18:	4620      	mov	r0, r4
	}
 8009a1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009a1e:	f7ff b805 	b.w	8008a2c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a22:	2b01      	cmp	r3, #1
 8009a24:	d0f9      	beq.n	8009a1a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009a26:	2b02      	cmp	r3, #2
 8009a28:	d008      	beq.n	8009a3c <prvDeleteTCB+0x34>
 8009a2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a2e:	f383 8811 	msr	BASEPRI, r3
 8009a32:	f3bf 8f6f 	isb	sy
 8009a36:	f3bf 8f4f 	dsb	sy
 8009a3a:	e7fe      	b.n	8009a3a <prvDeleteTCB+0x32>
	}
 8009a3c:	bd10      	pop	{r4, pc}
	...

08009a40 <prvIdleTask>:
{
 8009a40:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a42:	4c14      	ldr	r4, [pc, #80]	; (8009a94 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a44:	4f14      	ldr	r7, [pc, #80]	; (8009a98 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009a46:	4d15      	ldr	r5, [pc, #84]	; (8009a9c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009a48:	6823      	ldr	r3, [r4, #0]
 8009a4a:	b983      	cbnz	r3, 8009a6e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009a4c:	4b14      	ldr	r3, [pc, #80]	; (8009aa0 <prvIdleTask+0x60>)
 8009a4e:	681b      	ldr	r3, [r3, #0]
 8009a50:	2b01      	cmp	r3, #1
 8009a52:	d909      	bls.n	8009a68 <prvIdleTask+0x28>
				taskYIELD();
 8009a54:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a58:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a5c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a60:	f3bf 8f4f 	dsb	sy
 8009a64:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009a68:	f7f7 fcd6 	bl	8001418 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8009a6c:	e7eb      	b.n	8009a46 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009a6e:	f7ff f8c1 	bl	8008bf4 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a72:	68fb      	ldr	r3, [r7, #12]
 8009a74:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009a76:	1d30      	adds	r0, r6, #4
 8009a78:	f7ff f841 	bl	8008afe <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009a7c:	682b      	ldr	r3, [r5, #0]
 8009a7e:	3b01      	subs	r3, #1
 8009a80:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009a82:	6823      	ldr	r3, [r4, #0]
 8009a84:	3b01      	subs	r3, #1
 8009a86:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009a88:	f7ff f8d4 	bl	8008c34 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009a8c:	4630      	mov	r0, r6
 8009a8e:	f7ff ffbb 	bl	8009a08 <prvDeleteTCB>
 8009a92:	e7d9      	b.n	8009a48 <prvIdleTask+0x8>
 8009a94:	2000d248 	.word	0x2000d248
 8009a98:	2000d2b8 	.word	0x2000d2b8
 8009a9c:	2000d244 	.word	0x2000d244
 8009aa0:	2000cde4 	.word	0x2000cde4

08009aa4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009aa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009aa8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009aac:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009ab0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009ab2:	4606      	mov	r6, r0
 8009ab4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009ab6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009ab8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009aba:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009abc:	f015 fd26 	bl	801f50c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009ac0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009ac2:	f1a9 0904 	sub.w	r9, r9, #4
 8009ac6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009ac8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009acc:	b3b5      	cbz	r5, 8009b3c <prvInitialiseNewTask.constprop.0+0x98>
 8009ace:	1e6b      	subs	r3, r5, #1
 8009ad0:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009ad4:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009ad6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009ada:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009ade:	b108      	cbz	r0, 8009ae4 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009ae0:	42ab      	cmp	r3, r5
 8009ae2:	d1f8      	bne.n	8009ad6 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009ae4:	2300      	movs	r3, #0
 8009ae6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009aea:	9d08      	ldr	r5, [sp, #32]
 8009aec:	2d37      	cmp	r5, #55	; 0x37
 8009aee:	bf28      	it	cs
 8009af0:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009af2:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009af6:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009af8:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009afa:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009afc:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b00:	f7fe ffd7 	bl	8008ab2 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b04:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b08:	f104 0018 	add.w	r0, r4, #24
 8009b0c:	f7fe ffd1 	bl	8008ab2 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009b10:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b14:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b16:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b18:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009b1a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009b1e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b22:	463a      	mov	r2, r7
 8009b24:	4631      	mov	r1, r6
 8009b26:	4648      	mov	r0, r9
 8009b28:	f7ff f838 	bl	8008b9c <pxPortInitialiseStack>
 8009b2c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009b2e:	f1b8 0f00 	cmp.w	r8, #0
 8009b32:	d001      	beq.n	8009b38 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009b34:	f8c8 4000 	str.w	r4, [r8]
}
 8009b38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009b3c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009b40:	e7d3      	b.n	8009aea <prvInitialiseNewTask.constprop.0+0x46>

08009b42 <xTaskCreateStatic>:
	{
 8009b42:	b570      	push	{r4, r5, r6, lr}
 8009b44:	b086      	sub	sp, #24
 8009b46:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009b4a:	b945      	cbnz	r5, 8009b5e <xTaskCreateStatic+0x1c>
 8009b4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b50:	f383 8811 	msr	BASEPRI, r3
 8009b54:	f3bf 8f6f 	isb	sy
 8009b58:	f3bf 8f4f 	dsb	sy
 8009b5c:	e7fe      	b.n	8009b5c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009b5e:	b944      	cbnz	r4, 8009b72 <xTaskCreateStatic+0x30>
 8009b60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b64:	f383 8811 	msr	BASEPRI, r3
 8009b68:	f3bf 8f6f 	isb	sy
 8009b6c:	f3bf 8f4f 	dsb	sy
 8009b70:	e7fe      	b.n	8009b70 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009b72:	2660      	movs	r6, #96	; 0x60
 8009b74:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009b76:	9e05      	ldr	r6, [sp, #20]
 8009b78:	2e60      	cmp	r6, #96	; 0x60
 8009b7a:	d008      	beq.n	8009b8e <xTaskCreateStatic+0x4c>
 8009b7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b80:	f383 8811 	msr	BASEPRI, r3
 8009b84:	f3bf 8f6f 	isb	sy
 8009b88:	f3bf 8f4f 	dsb	sy
 8009b8c:	e7fe      	b.n	8009b8c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009b8e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009b90:	2502      	movs	r5, #2
 8009b92:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009b96:	ad04      	add	r5, sp, #16
 8009b98:	9501      	str	r5, [sp, #4]
 8009b9a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009b9c:	9402      	str	r4, [sp, #8]
 8009b9e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009ba0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009ba2:	f7ff ff7f 	bl	8009aa4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009ba6:	4620      	mov	r0, r4
 8009ba8:	f7ff fe64 	bl	8009874 <prvAddNewTaskToReadyList>
	}
 8009bac:	9804      	ldr	r0, [sp, #16]
 8009bae:	b006      	add	sp, #24
 8009bb0:	bd70      	pop	{r4, r5, r6, pc}

08009bb2 <xTaskCreate>:
	{
 8009bb2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009bb6:	4607      	mov	r7, r0
 8009bb8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009bba:	0090      	lsls	r0, r2, #2
	{
 8009bbc:	4688      	mov	r8, r1
 8009bbe:	4616      	mov	r6, r2
 8009bc0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009bc2:	f7fe fea1 	bl	8008908 <pvPortMalloc>
			if( pxStack != NULL )
 8009bc6:	4605      	mov	r5, r0
 8009bc8:	b1e8      	cbz	r0, 8009c06 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009bca:	2060      	movs	r0, #96	; 0x60
 8009bcc:	f7fe fe9c 	bl	8008908 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009bd0:	4604      	mov	r4, r0
 8009bd2:	b1a8      	cbz	r0, 8009c00 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009bd4:	2300      	movs	r3, #0
 8009bd6:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009bda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009bdc:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009bde:	9301      	str	r3, [sp, #4]
 8009be0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009be2:	9002      	str	r0, [sp, #8]
 8009be4:	9300      	str	r3, [sp, #0]
 8009be6:	4632      	mov	r2, r6
 8009be8:	464b      	mov	r3, r9
 8009bea:	4641      	mov	r1, r8
 8009bec:	4638      	mov	r0, r7
 8009bee:	f7ff ff59 	bl	8009aa4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009bf2:	4620      	mov	r0, r4
 8009bf4:	f7ff fe3e 	bl	8009874 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009bf8:	2001      	movs	r0, #1
	}
 8009bfa:	b005      	add	sp, #20
 8009bfc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009c00:	4628      	mov	r0, r5
 8009c02:	f7fe ff13 	bl	8008a2c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c06:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009c0a:	e7f6      	b.n	8009bfa <xTaskCreate+0x48>

08009c0c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009c0c:	4a02      	ldr	r2, [pc, #8]	; (8009c18 <vTaskSuspendAll+0xc>)
 8009c0e:	6813      	ldr	r3, [r2, #0]
 8009c10:	3301      	adds	r3, #1
 8009c12:	6013      	str	r3, [r2, #0]
}
 8009c14:	4770      	bx	lr
 8009c16:	bf00      	nop
 8009c18:	2000d250 	.word	0x2000d250

08009c1c <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009c1c:	4b01      	ldr	r3, [pc, #4]	; (8009c24 <xTaskGetTickCount+0x8>)
 8009c1e:	6818      	ldr	r0, [r3, #0]
}
 8009c20:	4770      	bx	lr
 8009c22:	bf00      	nop
 8009c24:	2000d2cc 	.word	0x2000d2cc

08009c28 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c28:	4b3f      	ldr	r3, [pc, #252]	; (8009d28 <xTaskIncrementTick+0x100>)
 8009c2a:	681b      	ldr	r3, [r3, #0]
{
 8009c2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009c30:	2b00      	cmp	r3, #0
 8009c32:	d173      	bne.n	8009d1c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009c34:	4b3d      	ldr	r3, [pc, #244]	; (8009d2c <xTaskIncrementTick+0x104>)
 8009c36:	681d      	ldr	r5, [r3, #0]
 8009c38:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009c3a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009c3c:	b9bd      	cbnz	r5, 8009c6e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009c3e:	4b3c      	ldr	r3, [pc, #240]	; (8009d30 <xTaskIncrementTick+0x108>)
 8009c40:	681a      	ldr	r2, [r3, #0]
 8009c42:	6812      	ldr	r2, [r2, #0]
 8009c44:	b142      	cbz	r2, 8009c58 <xTaskIncrementTick+0x30>
 8009c46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c4a:	f383 8811 	msr	BASEPRI, r3
 8009c4e:	f3bf 8f6f 	isb	sy
 8009c52:	f3bf 8f4f 	dsb	sy
 8009c56:	e7fe      	b.n	8009c56 <xTaskIncrementTick+0x2e>
 8009c58:	4a36      	ldr	r2, [pc, #216]	; (8009d34 <xTaskIncrementTick+0x10c>)
 8009c5a:	6819      	ldr	r1, [r3, #0]
 8009c5c:	6810      	ldr	r0, [r2, #0]
 8009c5e:	6018      	str	r0, [r3, #0]
 8009c60:	6011      	str	r1, [r2, #0]
 8009c62:	4a35      	ldr	r2, [pc, #212]	; (8009d38 <xTaskIncrementTick+0x110>)
 8009c64:	6813      	ldr	r3, [r2, #0]
 8009c66:	3301      	adds	r3, #1
 8009c68:	6013      	str	r3, [r2, #0]
 8009c6a:	f7ff febb 	bl	80099e4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009c6e:	4e33      	ldr	r6, [pc, #204]	; (8009d3c <xTaskIncrementTick+0x114>)
 8009c70:	4f33      	ldr	r7, [pc, #204]	; (8009d40 <xTaskIncrementTick+0x118>)
 8009c72:	6833      	ldr	r3, [r6, #0]
 8009c74:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009d4c <xTaskIncrementTick+0x124>
 8009c78:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009c7a:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009c7e:	d911      	bls.n	8009ca4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009c80:	f8d8 3000 	ldr.w	r3, [r8]
 8009c84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c86:	2214      	movs	r2, #20
 8009c88:	4353      	muls	r3, r2
 8009c8a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009c8c:	2b02      	cmp	r3, #2
 8009c8e:	bf28      	it	cs
 8009c90:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009c92:	4b2c      	ldr	r3, [pc, #176]	; (8009d44 <xTaskIncrementTick+0x11c>)
 8009c94:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009c96:	2b00      	cmp	r3, #0
}
 8009c98:	bf0c      	ite	eq
 8009c9a:	4620      	moveq	r0, r4
 8009c9c:	2001      	movne	r0, #1
 8009c9e:	b003      	add	sp, #12
 8009ca0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ca4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009d30 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009ca8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009d50 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009cac:	f8d9 3000 	ldr.w	r3, [r9]
 8009cb0:	681b      	ldr	r3, [r3, #0]
 8009cb2:	b91b      	cbnz	r3, 8009cbc <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cb4:	f04f 33ff 	mov.w	r3, #4294967295
 8009cb8:	6033      	str	r3, [r6, #0]
					break;
 8009cba:	e7e1      	b.n	8009c80 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009cbc:	f8d9 3000 	ldr.w	r3, [r9]
 8009cc0:	68db      	ldr	r3, [r3, #12]
 8009cc2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009cc6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009cca:	4295      	cmp	r5, r2
 8009ccc:	d201      	bcs.n	8009cd2 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009cce:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009cd0:	e7d6      	b.n	8009c80 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009cd2:	f10b 0104 	add.w	r1, fp, #4
 8009cd6:	4608      	mov	r0, r1
 8009cd8:	9101      	str	r1, [sp, #4]
 8009cda:	f7fe ff10 	bl	8008afe <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009cde:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009ce2:	9901      	ldr	r1, [sp, #4]
 8009ce4:	b122      	cbz	r2, 8009cf0 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ce6:	f10b 0018 	add.w	r0, fp, #24
 8009cea:	f7fe ff08 	bl	8008afe <uxListRemove>
 8009cee:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009cf0:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009cf4:	f8da 2000 	ldr.w	r2, [sl]
 8009cf8:	2314      	movs	r3, #20
 8009cfa:	4290      	cmp	r0, r2
 8009cfc:	bf88      	it	hi
 8009cfe:	f8ca 0000 	strhi.w	r0, [sl]
 8009d02:	fb03 7000 	mla	r0, r3, r0, r7
 8009d06:	f7fe fed7 	bl	8008ab8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009d0a:	f8d8 1000 	ldr.w	r1, [r8]
 8009d0e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009d12:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009d14:	429a      	cmp	r2, r3
 8009d16:	bf28      	it	cs
 8009d18:	2401      	movcs	r4, #1
 8009d1a:	e7c7      	b.n	8009cac <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009d1c:	4a0a      	ldr	r2, [pc, #40]	; (8009d48 <xTaskIncrementTick+0x120>)
 8009d1e:	6813      	ldr	r3, [r2, #0]
 8009d20:	3301      	adds	r3, #1
 8009d22:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009d24:	2400      	movs	r4, #0
 8009d26:	e7b4      	b.n	8009c92 <xTaskIncrementTick+0x6a>
 8009d28:	2000d250 	.word	0x2000d250
 8009d2c:	2000d2cc 	.word	0x2000d2cc
 8009d30:	2000cddc 	.word	0x2000cddc
 8009d34:	2000cde0 	.word	0x2000cde0
 8009d38:	2000d288 	.word	0x2000d288
 8009d3c:	2000d284 	.word	0x2000d284
 8009d40:	2000cde4 	.word	0x2000cde4
 8009d44:	2000d2d0 	.word	0x2000d2d0
 8009d48:	2000d24c 	.word	0x2000d24c
 8009d4c:	2000cdd8 	.word	0x2000cdd8
 8009d50:	2000d258 	.word	0x2000d258

08009d54 <xTaskResumeAll>:
{
 8009d54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009d56:	4c31      	ldr	r4, [pc, #196]	; (8009e1c <xTaskResumeAll+0xc8>)
 8009d58:	6823      	ldr	r3, [r4, #0]
 8009d5a:	b943      	cbnz	r3, 8009d6e <xTaskResumeAll+0x1a>
 8009d5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d60:	f383 8811 	msr	BASEPRI, r3
 8009d64:	f3bf 8f6f 	isb	sy
 8009d68:	f3bf 8f4f 	dsb	sy
 8009d6c:	e7fe      	b.n	8009d6c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009d6e:	f7fe ff41 	bl	8008bf4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009d72:	6823      	ldr	r3, [r4, #0]
 8009d74:	3b01      	subs	r3, #1
 8009d76:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d78:	6824      	ldr	r4, [r4, #0]
 8009d7a:	b12c      	cbz	r4, 8009d88 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009d7c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009d7e:	f7fe ff59 	bl	8008c34 <vPortExitCritical>
}
 8009d82:	4620      	mov	r0, r4
 8009d84:	b003      	add	sp, #12
 8009d86:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009d88:	4b25      	ldr	r3, [pc, #148]	; (8009e20 <xTaskResumeAll+0xcc>)
 8009d8a:	681b      	ldr	r3, [r3, #0]
 8009d8c:	2b00      	cmp	r3, #0
 8009d8e:	d0f5      	beq.n	8009d7c <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009d90:	4d24      	ldr	r5, [pc, #144]	; (8009e24 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009d92:	4e25      	ldr	r6, [pc, #148]	; (8009e28 <xTaskResumeAll+0xd4>)
 8009d94:	4f25      	ldr	r7, [pc, #148]	; (8009e2c <xTaskResumeAll+0xd8>)
 8009d96:	e01e      	b.n	8009dd6 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009d98:	68eb      	ldr	r3, [r5, #12]
 8009d9a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009d9c:	f104 0018 	add.w	r0, r4, #24
 8009da0:	f7fe fead 	bl	8008afe <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009da4:	1d21      	adds	r1, r4, #4
 8009da6:	4608      	mov	r0, r1
 8009da8:	9101      	str	r1, [sp, #4]
 8009daa:	f7fe fea8 	bl	8008afe <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009dae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009db0:	6832      	ldr	r2, [r6, #0]
 8009db2:	9901      	ldr	r1, [sp, #4]
 8009db4:	2014      	movs	r0, #20
 8009db6:	4293      	cmp	r3, r2
 8009db8:	fb00 7003 	mla	r0, r0, r3, r7
 8009dbc:	bf88      	it	hi
 8009dbe:	6033      	strhi	r3, [r6, #0]
 8009dc0:	f7fe fe7a 	bl	8008ab8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009dc4:	4b1a      	ldr	r3, [pc, #104]	; (8009e30 <xTaskResumeAll+0xdc>)
 8009dc6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009dc8:	681b      	ldr	r3, [r3, #0]
 8009dca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dcc:	429a      	cmp	r2, r3
 8009dce:	d302      	bcc.n	8009dd6 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009dd0:	4b18      	ldr	r3, [pc, #96]	; (8009e34 <xTaskResumeAll+0xe0>)
 8009dd2:	2201      	movs	r2, #1
 8009dd4:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009dd6:	682b      	ldr	r3, [r5, #0]
 8009dd8:	2b00      	cmp	r3, #0
 8009dda:	d1dd      	bne.n	8009d98 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009ddc:	b10c      	cbz	r4, 8009de2 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009dde:	f7ff fe01 	bl	80099e4 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009de2:	4d15      	ldr	r5, [pc, #84]	; (8009e38 <xTaskResumeAll+0xe4>)
 8009de4:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009de6:	b144      	cbz	r4, 8009dfa <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009de8:	4e12      	ldr	r6, [pc, #72]	; (8009e34 <xTaskResumeAll+0xe0>)
 8009dea:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009dec:	f7ff ff1c 	bl	8009c28 <xTaskIncrementTick>
 8009df0:	b100      	cbz	r0, 8009df4 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009df2:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009df4:	3c01      	subs	r4, #1
 8009df6:	d1f9      	bne.n	8009dec <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009df8:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009dfa:	4b0e      	ldr	r3, [pc, #56]	; (8009e34 <xTaskResumeAll+0xe0>)
 8009dfc:	681b      	ldr	r3, [r3, #0]
 8009dfe:	2b00      	cmp	r3, #0
 8009e00:	d0bc      	beq.n	8009d7c <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009e02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009e0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009e0e:	f3bf 8f4f 	dsb	sy
 8009e12:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009e16:	2401      	movs	r4, #1
 8009e18:	e7b1      	b.n	8009d7e <xTaskResumeAll+0x2a>
 8009e1a:	bf00      	nop
 8009e1c:	2000d250 	.word	0x2000d250
 8009e20:	2000d244 	.word	0x2000d244
 8009e24:	2000d28c 	.word	0x2000d28c
 8009e28:	2000d258 	.word	0x2000d258
 8009e2c:	2000cde4 	.word	0x2000cde4
 8009e30:	2000cdd8 	.word	0x2000cdd8
 8009e34:	2000d2d0 	.word	0x2000d2d0
 8009e38:	2000d24c 	.word	0x2000d24c

08009e3c <vTaskSetApplicationTaskTag>:
	{
 8009e3c:	b538      	push	{r3, r4, r5, lr}
 8009e3e:	460d      	mov	r5, r1
		if( xTask == NULL )
 8009e40:	4604      	mov	r4, r0
 8009e42:	b908      	cbnz	r0, 8009e48 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8009e44:	4b04      	ldr	r3, [pc, #16]	; (8009e58 <vTaskSetApplicationTaskTag+0x1c>)
 8009e46:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8009e48:	f7fe fed4 	bl	8008bf4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8009e4c:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8009e4e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 8009e52:	f7fe beef 	b.w	8008c34 <vPortExitCritical>
 8009e56:	bf00      	nop
 8009e58:	2000cdd8 	.word	0x2000cdd8

08009e5c <xTaskCallApplicationTaskHook>:
	{
 8009e5c:	4603      	mov	r3, r0
 8009e5e:	4608      	mov	r0, r1
		if( xTask == NULL )
 8009e60:	b90b      	cbnz	r3, 8009e66 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 8009e62:	4b03      	ldr	r3, [pc, #12]	; (8009e70 <xTaskCallApplicationTaskHook+0x14>)
 8009e64:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 8009e66:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009e68:	b103      	cbz	r3, 8009e6c <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8009e6a:	4718      	bx	r3
	}
 8009e6c:	4618      	mov	r0, r3
 8009e6e:	4770      	bx	lr
 8009e70:	2000cdd8 	.word	0x2000cdd8

08009e74 <vTaskStartScheduler>:
{
 8009e74:	b510      	push	{r4, lr}
 8009e76:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009e78:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009e7a:	aa07      	add	r2, sp, #28
 8009e7c:	a906      	add	r1, sp, #24
 8009e7e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009e80:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009e84:	f7fe fd04 	bl	8008890 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009e88:	9b05      	ldr	r3, [sp, #20]
 8009e8a:	9302      	str	r3, [sp, #8]
 8009e8c:	9b06      	ldr	r3, [sp, #24]
 8009e8e:	9a07      	ldr	r2, [sp, #28]
 8009e90:	4919      	ldr	r1, [pc, #100]	; (8009ef8 <vTaskStartScheduler+0x84>)
 8009e92:	481a      	ldr	r0, [pc, #104]	; (8009efc <vTaskStartScheduler+0x88>)
 8009e94:	e9cd 4300 	strd	r4, r3, [sp]
 8009e98:	4623      	mov	r3, r4
 8009e9a:	f7ff fe52 	bl	8009b42 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009e9e:	b340      	cbz	r0, 8009ef2 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009ea0:	f000 fa8a 	bl	800a3b8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009ea4:	2801      	cmp	r0, #1
 8009ea6:	d119      	bne.n	8009edc <vTaskStartScheduler+0x68>
 8009ea8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009eac:	f383 8811 	msr	BASEPRI, r3
 8009eb0:	f3bf 8f6f 	isb	sy
 8009eb4:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8009eb8:	4b11      	ldr	r3, [pc, #68]	; (8009f00 <vTaskStartScheduler+0x8c>)
 8009eba:	f04f 32ff 	mov.w	r2, #4294967295
 8009ebe:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009ec0:	4b10      	ldr	r3, [pc, #64]	; (8009f04 <vTaskStartScheduler+0x90>)
 8009ec2:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009ec4:	4b10      	ldr	r3, [pc, #64]	; (8009f08 <vTaskStartScheduler+0x94>)
 8009ec6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8009ec8:	4b10      	ldr	r3, [pc, #64]	; (8009f0c <vTaskStartScheduler+0x98>)
 8009eca:	4621      	mov	r1, r4
 8009ecc:	6818      	ldr	r0, [r3, #0]
 8009ece:	f7ff ffc5 	bl	8009e5c <xTaskCallApplicationTaskHook>
}
 8009ed2:	b008      	add	sp, #32
 8009ed4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009ed8:	f7fe bf1c 	b.w	8008d14 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009edc:	3001      	adds	r0, #1
 8009ede:	d108      	bne.n	8009ef2 <vTaskStartScheduler+0x7e>
 8009ee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ee4:	f383 8811 	msr	BASEPRI, r3
 8009ee8:	f3bf 8f6f 	isb	sy
 8009eec:	f3bf 8f4f 	dsb	sy
 8009ef0:	e7fe      	b.n	8009ef0 <vTaskStartScheduler+0x7c>
}
 8009ef2:	b008      	add	sp, #32
 8009ef4:	bd10      	pop	{r4, pc}
 8009ef6:	bf00      	nop
 8009ef8:	08021fa5 	.word	0x08021fa5
 8009efc:	08009a41 	.word	0x08009a41
 8009f00:	2000d284 	.word	0x2000d284
 8009f04:	2000d2a0 	.word	0x2000d2a0
 8009f08:	2000d2cc 	.word	0x2000d2cc
 8009f0c:	2000cdd8 	.word	0x2000cdd8

08009f10 <vTaskSwitchContext>:
{
 8009f10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009f12:	4b1c      	ldr	r3, [pc, #112]	; (8009f84 <vTaskSwitchContext+0x74>)
 8009f14:	681a      	ldr	r2, [r3, #0]
 8009f16:	4b1c      	ldr	r3, [pc, #112]	; (8009f88 <vTaskSwitchContext+0x78>)
 8009f18:	b112      	cbz	r2, 8009f20 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009f1a:	2201      	movs	r2, #1
 8009f1c:	601a      	str	r2, [r3, #0]
}
 8009f1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8009f20:	4c1a      	ldr	r4, [pc, #104]	; (8009f8c <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 8009f22:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f24:	4e1a      	ldr	r6, [pc, #104]	; (8009f90 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 8009f26:	6820      	ldr	r0, [r4, #0]
 8009f28:	2101      	movs	r1, #1
 8009f2a:	f7ff ff97 	bl	8009e5c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f2e:	6832      	ldr	r2, [r6, #0]
 8009f30:	4918      	ldr	r1, [pc, #96]	; (8009f94 <vTaskSwitchContext+0x84>)
 8009f32:	2714      	movs	r7, #20
 8009f34:	fb07 f302 	mul.w	r3, r7, r2
 8009f38:	18c8      	adds	r0, r1, r3
 8009f3a:	58cd      	ldr	r5, [r1, r3]
 8009f3c:	b1ad      	cbz	r5, 8009f6a <vTaskSwitchContext+0x5a>
 8009f3e:	6845      	ldr	r5, [r0, #4]
 8009f40:	3308      	adds	r3, #8
 8009f42:	686d      	ldr	r5, [r5, #4]
 8009f44:	6045      	str	r5, [r0, #4]
 8009f46:	440b      	add	r3, r1
 8009f48:	429d      	cmp	r5, r3
 8009f4a:	bf04      	itt	eq
 8009f4c:	686b      	ldreq	r3, [r5, #4]
 8009f4e:	6043      	streq	r3, [r0, #4]
 8009f50:	2314      	movs	r3, #20
 8009f52:	fb03 1102 	mla	r1, r3, r2, r1
 8009f56:	684b      	ldr	r3, [r1, #4]
 8009f58:	68db      	ldr	r3, [r3, #12]
 8009f5a:	6023      	str	r3, [r4, #0]
 8009f5c:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 8009f5e:	6820      	ldr	r0, [r4, #0]
 8009f60:	2100      	movs	r1, #0
}
 8009f62:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 8009f66:	f7ff bf79 	b.w	8009e5c <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f6a:	b942      	cbnz	r2, 8009f7e <vTaskSwitchContext+0x6e>
 8009f6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f70:	f383 8811 	msr	BASEPRI, r3
 8009f74:	f3bf 8f6f 	isb	sy
 8009f78:	f3bf 8f4f 	dsb	sy
 8009f7c:	e7fe      	b.n	8009f7c <vTaskSwitchContext+0x6c>
 8009f7e:	3a01      	subs	r2, #1
 8009f80:	e7d8      	b.n	8009f34 <vTaskSwitchContext+0x24>
 8009f82:	bf00      	nop
 8009f84:	2000d250 	.word	0x2000d250
 8009f88:	2000d2d0 	.word	0x2000d2d0
 8009f8c:	2000cdd8 	.word	0x2000cdd8
 8009f90:	2000d258 	.word	0x2000d258
 8009f94:	2000cde4 	.word	0x2000cde4

08009f98 <vTaskPlaceOnEventList>:
{
 8009f98:	b510      	push	{r4, lr}
 8009f9a:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8009f9c:	b940      	cbnz	r0, 8009fb0 <vTaskPlaceOnEventList+0x18>
 8009f9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fa2:	f383 8811 	msr	BASEPRI, r3
 8009fa6:	f3bf 8f6f 	isb	sy
 8009faa:	f3bf 8f4f 	dsb	sy
 8009fae:	e7fe      	b.n	8009fae <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009fb0:	4b05      	ldr	r3, [pc, #20]	; (8009fc8 <vTaskPlaceOnEventList+0x30>)
 8009fb2:	6819      	ldr	r1, [r3, #0]
 8009fb4:	3118      	adds	r1, #24
 8009fb6:	f7fe fd8b 	bl	8008ad0 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009fba:	4620      	mov	r0, r4
 8009fbc:	2101      	movs	r1, #1
}
 8009fbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8009fc2:	f7ff bcd7 	b.w	8009974 <prvAddCurrentTaskToDelayedList>
 8009fc6:	bf00      	nop
 8009fc8:	2000cdd8 	.word	0x2000cdd8

08009fcc <vTaskPlaceOnEventListRestricted>:
	{
 8009fcc:	b538      	push	{r3, r4, r5, lr}
 8009fce:	460d      	mov	r5, r1
 8009fd0:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8009fd2:	b940      	cbnz	r0, 8009fe6 <vTaskPlaceOnEventListRestricted+0x1a>
 8009fd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fd8:	f383 8811 	msr	BASEPRI, r3
 8009fdc:	f3bf 8f6f 	isb	sy
 8009fe0:	f3bf 8f4f 	dsb	sy
 8009fe4:	e7fe      	b.n	8009fe4 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8009fe6:	4b07      	ldr	r3, [pc, #28]	; (800a004 <vTaskPlaceOnEventListRestricted+0x38>)
 8009fe8:	6819      	ldr	r1, [r3, #0]
 8009fea:	3118      	adds	r1, #24
 8009fec:	f7fe fd64 	bl	8008ab8 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8009ff0:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8009ff2:	4621      	mov	r1, r4
 8009ff4:	bf0c      	ite	eq
 8009ff6:	4628      	moveq	r0, r5
 8009ff8:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8009ffc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a000:	f7ff bcb8 	b.w	8009974 <prvAddCurrentTaskToDelayedList>
 800a004:	2000cdd8 	.word	0x2000cdd8

0800a008 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a008:	68c3      	ldr	r3, [r0, #12]
{
 800a00a:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a00c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a00e:	b944      	cbnz	r4, 800a022 <xTaskRemoveFromEventList+0x1a>
 800a010:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a014:	f383 8811 	msr	BASEPRI, r3
 800a018:	f3bf 8f6f 	isb	sy
 800a01c:	f3bf 8f4f 	dsb	sy
 800a020:	e7fe      	b.n	800a020 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a022:	f104 0118 	add.w	r1, r4, #24
 800a026:	4608      	mov	r0, r1
 800a028:	9101      	str	r1, [sp, #4]
 800a02a:	f7fe fd68 	bl	8008afe <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a02e:	4b12      	ldr	r3, [pc, #72]	; (800a078 <xTaskRemoveFromEventList+0x70>)
 800a030:	9901      	ldr	r1, [sp, #4]
 800a032:	681b      	ldr	r3, [r3, #0]
 800a034:	b9eb      	cbnz	r3, 800a072 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a036:	1d21      	adds	r1, r4, #4
 800a038:	4608      	mov	r0, r1
 800a03a:	9101      	str	r1, [sp, #4]
 800a03c:	f7fe fd5f 	bl	8008afe <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a040:	4a0e      	ldr	r2, [pc, #56]	; (800a07c <xTaskRemoveFromEventList+0x74>)
 800a042:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a044:	6810      	ldr	r0, [r2, #0]
 800a046:	9901      	ldr	r1, [sp, #4]
 800a048:	4283      	cmp	r3, r0
 800a04a:	bf88      	it	hi
 800a04c:	6013      	strhi	r3, [r2, #0]
 800a04e:	4a0c      	ldr	r2, [pc, #48]	; (800a080 <xTaskRemoveFromEventList+0x78>)
 800a050:	2014      	movs	r0, #20
 800a052:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a056:	f7fe fd2f 	bl	8008ab8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a05a:	4b0a      	ldr	r3, [pc, #40]	; (800a084 <xTaskRemoveFromEventList+0x7c>)
 800a05c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a05e:	681b      	ldr	r3, [r3, #0]
 800a060:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a062:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a064:	bf85      	ittet	hi
 800a066:	4b08      	ldrhi	r3, [pc, #32]	; (800a088 <xTaskRemoveFromEventList+0x80>)
 800a068:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a06a:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a06c:	6018      	strhi	r0, [r3, #0]
}
 800a06e:	b002      	add	sp, #8
 800a070:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a072:	4806      	ldr	r0, [pc, #24]	; (800a08c <xTaskRemoveFromEventList+0x84>)
 800a074:	e7ef      	b.n	800a056 <xTaskRemoveFromEventList+0x4e>
 800a076:	bf00      	nop
 800a078:	2000d250 	.word	0x2000d250
 800a07c:	2000d258 	.word	0x2000d258
 800a080:	2000cde4 	.word	0x2000cde4
 800a084:	2000cdd8 	.word	0x2000cdd8
 800a088:	2000d2d0 	.word	0x2000d2d0
 800a08c:	2000d28c 	.word	0x2000d28c

0800a090 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a090:	4b03      	ldr	r3, [pc, #12]	; (800a0a0 <vTaskInternalSetTimeOutState+0x10>)
 800a092:	681b      	ldr	r3, [r3, #0]
 800a094:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a096:	4b03      	ldr	r3, [pc, #12]	; (800a0a4 <vTaskInternalSetTimeOutState+0x14>)
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	6043      	str	r3, [r0, #4]
}
 800a09c:	4770      	bx	lr
 800a09e:	bf00      	nop
 800a0a0:	2000d288 	.word	0x2000d288
 800a0a4:	2000d2cc 	.word	0x2000d2cc

0800a0a8 <xTaskCheckForTimeOut>:
{
 800a0a8:	b570      	push	{r4, r5, r6, lr}
 800a0aa:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a0ac:	4605      	mov	r5, r0
 800a0ae:	b940      	cbnz	r0, 800a0c2 <xTaskCheckForTimeOut+0x1a>
 800a0b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0b4:	f383 8811 	msr	BASEPRI, r3
 800a0b8:	f3bf 8f6f 	isb	sy
 800a0bc:	f3bf 8f4f 	dsb	sy
 800a0c0:	e7fe      	b.n	800a0c0 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a0c2:	b941      	cbnz	r1, 800a0d6 <xTaskCheckForTimeOut+0x2e>
 800a0c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0c8:	f383 8811 	msr	BASEPRI, r3
 800a0cc:	f3bf 8f6f 	isb	sy
 800a0d0:	f3bf 8f4f 	dsb	sy
 800a0d4:	e7fe      	b.n	800a0d4 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a0d6:	f7fe fd8d 	bl	8008bf4 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a0da:	4b0f      	ldr	r3, [pc, #60]	; (800a118 <xTaskCheckForTimeOut+0x70>)
 800a0dc:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a0de:	6823      	ldr	r3, [r4, #0]
 800a0e0:	1c5a      	adds	r2, r3, #1
 800a0e2:	d010      	beq.n	800a106 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a0e4:	480d      	ldr	r0, [pc, #52]	; (800a11c <xTaskCheckForTimeOut+0x74>)
 800a0e6:	682e      	ldr	r6, [r5, #0]
 800a0e8:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a0ea:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a0ec:	4286      	cmp	r6, r0
 800a0ee:	d001      	beq.n	800a0f4 <xTaskCheckForTimeOut+0x4c>
 800a0f0:	428a      	cmp	r2, r1
 800a0f2:	d90f      	bls.n	800a114 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a0f4:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a0f6:	4283      	cmp	r3, r0
 800a0f8:	d90a      	bls.n	800a110 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a0fa:	1a5b      	subs	r3, r3, r1
 800a0fc:	4413      	add	r3, r2
 800a0fe:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a100:	4628      	mov	r0, r5
 800a102:	f7ff ffc5 	bl	800a090 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a106:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a108:	f7fe fd94 	bl	8008c34 <vPortExitCritical>
}
 800a10c:	4620      	mov	r0, r4
 800a10e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a110:	2300      	movs	r3, #0
 800a112:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a114:	2401      	movs	r4, #1
 800a116:	e7f7      	b.n	800a108 <xTaskCheckForTimeOut+0x60>
 800a118:	2000d2cc 	.word	0x2000d2cc
 800a11c:	2000d288 	.word	0x2000d288

0800a120 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a120:	4b01      	ldr	r3, [pc, #4]	; (800a128 <vTaskMissedYield+0x8>)
 800a122:	2201      	movs	r2, #1
 800a124:	601a      	str	r2, [r3, #0]
}
 800a126:	4770      	bx	lr
 800a128:	2000d2d0 	.word	0x2000d2d0

0800a12c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a12c:	4b05      	ldr	r3, [pc, #20]	; (800a144 <xTaskGetSchedulerState+0x18>)
 800a12e:	681b      	ldr	r3, [r3, #0]
 800a130:	b133      	cbz	r3, 800a140 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a132:	4b05      	ldr	r3, [pc, #20]	; (800a148 <xTaskGetSchedulerState+0x1c>)
 800a134:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a136:	2b00      	cmp	r3, #0
 800a138:	bf0c      	ite	eq
 800a13a:	2002      	moveq	r0, #2
 800a13c:	2000      	movne	r0, #0
 800a13e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a140:	2001      	movs	r0, #1
	}
 800a142:	4770      	bx	lr
 800a144:	2000d2a0 	.word	0x2000d2a0
 800a148:	2000d250 	.word	0x2000d250

0800a14c <xTaskPriorityInherit>:
	{
 800a14c:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a14e:	4604      	mov	r4, r0
 800a150:	b348      	cbz	r0, 800a1a6 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a152:	4d1c      	ldr	r5, [pc, #112]	; (800a1c4 <xTaskPriorityInherit+0x78>)
 800a154:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a156:	682a      	ldr	r2, [r5, #0]
 800a158:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a15a:	4293      	cmp	r3, r2
 800a15c:	d229      	bcs.n	800a1b2 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a15e:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a160:	4e19      	ldr	r6, [pc, #100]	; (800a1c8 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a162:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a164:	bfa1      	itttt	ge
 800a166:	682a      	ldrge	r2, [r5, #0]
 800a168:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a16a:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a16e:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a170:	2214      	movs	r2, #20
 800a172:	fb02 6303 	mla	r3, r2, r3, r6
 800a176:	6942      	ldr	r2, [r0, #20]
 800a178:	429a      	cmp	r2, r3
 800a17a:	d116      	bne.n	800a1aa <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a17c:	1d01      	adds	r1, r0, #4
 800a17e:	4608      	mov	r0, r1
 800a180:	9101      	str	r1, [sp, #4]
 800a182:	f7fe fcbc 	bl	8008afe <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a186:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a188:	4a10      	ldr	r2, [pc, #64]	; (800a1cc <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a18a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a18c:	6810      	ldr	r0, [r2, #0]
 800a18e:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a190:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a192:	4283      	cmp	r3, r0
 800a194:	f04f 0014 	mov.w	r0, #20
 800a198:	fb00 6003 	mla	r0, r0, r3, r6
 800a19c:	bf88      	it	hi
 800a19e:	6013      	strhi	r3, [r2, #0]
 800a1a0:	f7fe fc8a 	bl	8008ab8 <vListInsertEnd>
				xReturn = pdTRUE;
 800a1a4:	2001      	movs	r0, #1
	}
 800a1a6:	b002      	add	sp, #8
 800a1a8:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a1aa:	682b      	ldr	r3, [r5, #0]
 800a1ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1ae:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a1b0:	e7f8      	b.n	800a1a4 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a1b2:	682b      	ldr	r3, [r5, #0]
 800a1b4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a1b6:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a1b8:	42a0      	cmp	r0, r4
 800a1ba:	bf2c      	ite	cs
 800a1bc:	2000      	movcs	r0, #0
 800a1be:	2001      	movcc	r0, #1
 800a1c0:	e7f1      	b.n	800a1a6 <xTaskPriorityInherit+0x5a>
 800a1c2:	bf00      	nop
 800a1c4:	2000cdd8 	.word	0x2000cdd8
 800a1c8:	2000cde4 	.word	0x2000cde4
 800a1cc:	2000d258 	.word	0x2000d258

0800a1d0 <xTaskPriorityDisinherit>:
	{
 800a1d0:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a1d2:	b910      	cbnz	r0, 800a1da <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a1d4:	2000      	movs	r0, #0
	}
 800a1d6:	b002      	add	sp, #8
 800a1d8:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a1da:	4b1c      	ldr	r3, [pc, #112]	; (800a24c <xTaskPriorityDisinherit+0x7c>)
 800a1dc:	681c      	ldr	r4, [r3, #0]
 800a1de:	4284      	cmp	r4, r0
 800a1e0:	d008      	beq.n	800a1f4 <xTaskPriorityDisinherit+0x24>
 800a1e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1e6:	f383 8811 	msr	BASEPRI, r3
 800a1ea:	f3bf 8f6f 	isb	sy
 800a1ee:	f3bf 8f4f 	dsb	sy
 800a1f2:	e7fe      	b.n	800a1f2 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a1f4:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a1f6:	b943      	cbnz	r3, 800a20a <xTaskPriorityDisinherit+0x3a>
 800a1f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1fc:	f383 8811 	msr	BASEPRI, r3
 800a200:	f3bf 8f6f 	isb	sy
 800a204:	f3bf 8f4f 	dsb	sy
 800a208:	e7fe      	b.n	800a208 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a20a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a20c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a20e:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a210:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a212:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a214:	d0de      	beq.n	800a1d4 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a216:	2b00      	cmp	r3, #0
 800a218:	d1dc      	bne.n	800a1d4 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a21a:	1d21      	adds	r1, r4, #4
 800a21c:	4608      	mov	r0, r1
 800a21e:	9101      	str	r1, [sp, #4]
 800a220:	f7fe fc6d 	bl	8008afe <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a224:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a226:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a228:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a22a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a22e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a230:	4a07      	ldr	r2, [pc, #28]	; (800a250 <xTaskPriorityDisinherit+0x80>)
 800a232:	6810      	ldr	r0, [r2, #0]
 800a234:	4283      	cmp	r3, r0
 800a236:	bf88      	it	hi
 800a238:	6013      	strhi	r3, [r2, #0]
 800a23a:	4a06      	ldr	r2, [pc, #24]	; (800a254 <xTaskPriorityDisinherit+0x84>)
 800a23c:	2014      	movs	r0, #20
 800a23e:	fb00 2003 	mla	r0, r0, r3, r2
 800a242:	f7fe fc39 	bl	8008ab8 <vListInsertEnd>
					xReturn = pdTRUE;
 800a246:	2001      	movs	r0, #1
		return xReturn;
 800a248:	e7c5      	b.n	800a1d6 <xTaskPriorityDisinherit+0x6>
 800a24a:	bf00      	nop
 800a24c:	2000cdd8 	.word	0x2000cdd8
 800a250:	2000d258 	.word	0x2000d258
 800a254:	2000cde4 	.word	0x2000cde4

0800a258 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a258:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a25a:	4604      	mov	r4, r0
 800a25c:	2800      	cmp	r0, #0
 800a25e:	d044      	beq.n	800a2ea <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a260:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a262:	b942      	cbnz	r2, 800a276 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a264:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a268:	f383 8811 	msr	BASEPRI, r3
 800a26c:	f3bf 8f6f 	isb	sy
 800a270:	f3bf 8f4f 	dsb	sy
 800a274:	e7fe      	b.n	800a274 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a276:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a278:	4299      	cmp	r1, r3
 800a27a:	bf38      	it	cc
 800a27c:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a27e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a280:	428b      	cmp	r3, r1
 800a282:	d032      	beq.n	800a2ea <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a284:	2a01      	cmp	r2, #1
 800a286:	d130      	bne.n	800a2ea <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a288:	4a19      	ldr	r2, [pc, #100]	; (800a2f0 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a28a:	6812      	ldr	r2, [r2, #0]
 800a28c:	4282      	cmp	r2, r0
 800a28e:	d108      	bne.n	800a2a2 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a290:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a294:	f383 8811 	msr	BASEPRI, r3
 800a298:	f3bf 8f6f 	isb	sy
 800a29c:	f3bf 8f4f 	dsb	sy
 800a2a0:	e7fe      	b.n	800a2a0 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2a2:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2a4:	4d13      	ldr	r5, [pc, #76]	; (800a2f4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a2a6:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a2a8:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2aa:	f04f 0214 	mov.w	r2, #20
 800a2ae:	fb02 5303 	mla	r3, r2, r3, r5
 800a2b2:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2b4:	bfa4      	itt	ge
 800a2b6:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a2ba:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a2bc:	429a      	cmp	r2, r3
 800a2be:	d114      	bne.n	800a2ea <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2c0:	1d01      	adds	r1, r0, #4
 800a2c2:	4608      	mov	r0, r1
 800a2c4:	9101      	str	r1, [sp, #4]
 800a2c6:	f7fe fc1a 	bl	8008afe <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a2ca:	4a0b      	ldr	r2, [pc, #44]	; (800a2f8 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a2cc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a2ce:	6810      	ldr	r0, [r2, #0]
 800a2d0:	9901      	ldr	r1, [sp, #4]
 800a2d2:	4283      	cmp	r3, r0
 800a2d4:	f04f 0014 	mov.w	r0, #20
 800a2d8:	fb00 5003 	mla	r0, r0, r3, r5
 800a2dc:	bf88      	it	hi
 800a2de:	6013      	strhi	r3, [r2, #0]
	}
 800a2e0:	b003      	add	sp, #12
 800a2e2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a2e6:	f7fe bbe7 	b.w	8008ab8 <vListInsertEnd>
	}
 800a2ea:	b003      	add	sp, #12
 800a2ec:	bd30      	pop	{r4, r5, pc}
 800a2ee:	bf00      	nop
 800a2f0:	2000cdd8 	.word	0x2000cdd8
 800a2f4:	2000cde4 	.word	0x2000cde4
 800a2f8:	2000d258 	.word	0x2000d258

0800a2fc <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a2fc:	4b04      	ldr	r3, [pc, #16]	; (800a310 <pvTaskIncrementMutexHeldCount+0x14>)
 800a2fe:	681a      	ldr	r2, [r3, #0]
 800a300:	b11a      	cbz	r2, 800a30a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a302:	6819      	ldr	r1, [r3, #0]
 800a304:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a306:	3201      	adds	r2, #1
 800a308:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a30a:	6818      	ldr	r0, [r3, #0]
	}
 800a30c:	4770      	bx	lr
 800a30e:	bf00      	nop
 800a310:	2000cdd8 	.word	0x2000cdd8

0800a314 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a314:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a316:	4c11      	ldr	r4, [pc, #68]	; (800a35c <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a318:	f7fe fc6c 	bl	8008bf4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a31c:	6825      	ldr	r5, [r4, #0]
 800a31e:	b9bd      	cbnz	r5, 800a350 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a320:	4f0f      	ldr	r7, [pc, #60]	; (800a360 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a322:	4e10      	ldr	r6, [pc, #64]	; (800a364 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a324:	4638      	mov	r0, r7
 800a326:	f7fe fbb9 	bl	8008a9c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a32a:	4630      	mov	r0, r6
 800a32c:	f7fe fbb6 	bl	8008a9c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a330:	4b0d      	ldr	r3, [pc, #52]	; (800a368 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a332:	4a0e      	ldr	r2, [pc, #56]	; (800a36c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a334:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a336:	4b0e      	ldr	r3, [pc, #56]	; (800a370 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a338:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a33a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a33c:	200a      	movs	r0, #10
 800a33e:	4b0d      	ldr	r3, [pc, #52]	; (800a374 <prvCheckForValidListAndQueue+0x60>)
 800a340:	9500      	str	r5, [sp, #0]
 800a342:	f7fe fe68 	bl	8009016 <xQueueGenericCreateStatic>
 800a346:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a348:	b110      	cbz	r0, 800a350 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a34a:	490b      	ldr	r1, [pc, #44]	; (800a378 <prvCheckForValidListAndQueue+0x64>)
 800a34c:	f7ff fa32 	bl	80097b4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a350:	b003      	add	sp, #12
 800a352:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a356:	f7fe bc6d 	b.w	8008c34 <vPortExitCritical>
 800a35a:	bf00      	nop
 800a35c:	2000d3f8 	.word	0x2000d3f8
 800a360:	2000d37c 	.word	0x2000d37c
 800a364:	2000d390 	.word	0x2000d390
 800a368:	2000d2d4 	.word	0x2000d2d4
 800a36c:	2000d2dc 	.word	0x2000d2dc
 800a370:	2000d2d8 	.word	0x2000d2d8
 800a374:	2000d3a8 	.word	0x2000d3a8
 800a378:	08021faa 	.word	0x08021faa

0800a37c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a37c:	4291      	cmp	r1, r2
{
 800a37e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a380:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a382:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a384:	d80a      	bhi.n	800a39c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a386:	1ad2      	subs	r2, r2, r3
 800a388:	6983      	ldr	r3, [r0, #24]
 800a38a:	429a      	cmp	r2, r3
 800a38c:	d20d      	bcs.n	800a3aa <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a38e:	4b08      	ldr	r3, [pc, #32]	; (800a3b0 <prvInsertTimerInActiveList+0x34>)
 800a390:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a392:	6818      	ldr	r0, [r3, #0]
 800a394:	f7fe fb9c 	bl	8008ad0 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a398:	2000      	movs	r0, #0
}
 800a39a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a39c:	429a      	cmp	r2, r3
 800a39e:	d201      	bcs.n	800a3a4 <prvInsertTimerInActiveList+0x28>
 800a3a0:	4299      	cmp	r1, r3
 800a3a2:	d202      	bcs.n	800a3aa <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a3a4:	4b03      	ldr	r3, [pc, #12]	; (800a3b4 <prvInsertTimerInActiveList+0x38>)
 800a3a6:	1d01      	adds	r1, r0, #4
 800a3a8:	e7f3      	b.n	800a392 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a3aa:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a3ac:	e7f5      	b.n	800a39a <prvInsertTimerInActiveList+0x1e>
 800a3ae:	bf00      	nop
 800a3b0:	2000d2d8 	.word	0x2000d2d8
 800a3b4:	2000d2d4 	.word	0x2000d2d4

0800a3b8 <xTimerCreateTimerTask>:
{
 800a3b8:	b510      	push	{r4, lr}
 800a3ba:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a3bc:	f7ff ffaa 	bl	800a314 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a3c0:	4b12      	ldr	r3, [pc, #72]	; (800a40c <xTimerCreateTimerTask+0x54>)
 800a3c2:	681b      	ldr	r3, [r3, #0]
 800a3c4:	b1b3      	cbz	r3, 800a3f4 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a3c6:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a3c8:	aa07      	add	r2, sp, #28
 800a3ca:	a906      	add	r1, sp, #24
 800a3cc:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a3ce:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a3d2:	f7fe fa69 	bl	80088a8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a3d6:	9b05      	ldr	r3, [sp, #20]
 800a3d8:	9302      	str	r3, [sp, #8]
 800a3da:	9b06      	ldr	r3, [sp, #24]
 800a3dc:	9301      	str	r3, [sp, #4]
 800a3de:	2302      	movs	r3, #2
 800a3e0:	9300      	str	r3, [sp, #0]
 800a3e2:	9a07      	ldr	r2, [sp, #28]
 800a3e4:	490a      	ldr	r1, [pc, #40]	; (800a410 <xTimerCreateTimerTask+0x58>)
 800a3e6:	480b      	ldr	r0, [pc, #44]	; (800a414 <xTimerCreateTimerTask+0x5c>)
 800a3e8:	4623      	mov	r3, r4
 800a3ea:	f7ff fbaa 	bl	8009b42 <xTaskCreateStatic>
 800a3ee:	4b0a      	ldr	r3, [pc, #40]	; (800a418 <xTimerCreateTimerTask+0x60>)
 800a3f0:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a3f2:	b940      	cbnz	r0, 800a406 <xTimerCreateTimerTask+0x4e>
 800a3f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3f8:	f383 8811 	msr	BASEPRI, r3
 800a3fc:	f3bf 8f6f 	isb	sy
 800a400:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a404:	e7fe      	b.n	800a404 <xTimerCreateTimerTask+0x4c>
}
 800a406:	2001      	movs	r0, #1
 800a408:	b008      	add	sp, #32
 800a40a:	bd10      	pop	{r4, pc}
 800a40c:	2000d3f8 	.word	0x2000d3f8
 800a410:	08021faf 	.word	0x08021faf
 800a414:	0800a521 	.word	0x0800a521
 800a418:	2000d3fc 	.word	0x2000d3fc

0800a41c <xTimerGenericCommand>:
{
 800a41c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a41e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a420:	4604      	mov	r4, r0
{
 800a422:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a424:	b940      	cbnz	r0, 800a438 <xTimerGenericCommand+0x1c>
 800a426:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a42a:	f383 8811 	msr	BASEPRI, r3
 800a42e:	f3bf 8f6f 	isb	sy
 800a432:	f3bf 8f4f 	dsb	sy
 800a436:	e7fe      	b.n	800a436 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a438:	4d0d      	ldr	r5, [pc, #52]	; (800a470 <xTimerGenericCommand+0x54>)
 800a43a:	6828      	ldr	r0, [r5, #0]
 800a43c:	b180      	cbz	r0, 800a460 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a43e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a440:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a444:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a446:	dc0d      	bgt.n	800a464 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a448:	f7ff fe70 	bl	800a12c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a44c:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a44e:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a450:	bf08      	it	eq
 800a452:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a454:	6828      	ldr	r0, [r5, #0]
 800a456:	bf18      	it	ne
 800a458:	461a      	movne	r2, r3
 800a45a:	4669      	mov	r1, sp
 800a45c:	f7fe fe90 	bl	8009180 <xQueueGenericSend>
}
 800a460:	b004      	add	sp, #16
 800a462:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a464:	2300      	movs	r3, #0
 800a466:	4669      	mov	r1, sp
 800a468:	f7fe ff3d 	bl	80092e6 <xQueueGenericSendFromISR>
 800a46c:	e7f8      	b.n	800a460 <xTimerGenericCommand+0x44>
 800a46e:	bf00      	nop
 800a470:	2000d3f8 	.word	0x2000d3f8

0800a474 <prvSampleTimeNow>:
{
 800a474:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a478:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a51c <prvSampleTimeNow+0xa8>
{
 800a47c:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a47e:	f7ff fbcd 	bl	8009c1c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a482:	f8d8 3000 	ldr.w	r3, [r8]
 800a486:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a488:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a48a:	d940      	bls.n	800a50e <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a48c:	4f21      	ldr	r7, [pc, #132]	; (800a514 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a48e:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a492:	683b      	ldr	r3, [r7, #0]
 800a494:	681a      	ldr	r2, [r3, #0]
 800a496:	b95a      	cbnz	r2, 800a4b0 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a498:	4a1f      	ldr	r2, [pc, #124]	; (800a518 <prvSampleTimeNow+0xa4>)
 800a49a:	6811      	ldr	r1, [r2, #0]
 800a49c:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a49e:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a4a0:	2301      	movs	r3, #1
}
 800a4a2:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a4a4:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a4a6:	f8c8 5000 	str.w	r5, [r8]
}
 800a4aa:	b004      	add	sp, #16
 800a4ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4b0:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a4b2:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a4b4:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a4b8:	1d21      	adds	r1, r4, #4
 800a4ba:	4608      	mov	r0, r1
 800a4bc:	9103      	str	r1, [sp, #12]
 800a4be:	f7fe fb1e 	bl	8008afe <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a4c2:	6a23      	ldr	r3, [r4, #32]
 800a4c4:	4620      	mov	r0, r4
 800a4c6:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a4c8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a4cc:	9903      	ldr	r1, [sp, #12]
 800a4ce:	f013 0f04 	tst.w	r3, #4
 800a4d2:	d0de      	beq.n	800a492 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a4d4:	69a3      	ldr	r3, [r4, #24]
 800a4d6:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a4d8:	459a      	cmp	sl, r3
 800a4da:	d205      	bcs.n	800a4e8 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a4dc:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a4de:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a4e0:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a4e2:	f7fe faf5 	bl	8008ad0 <vListInsert>
 800a4e6:	e7d4      	b.n	800a492 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a4e8:	2300      	movs	r3, #0
 800a4ea:	f8cd 9000 	str.w	r9, [sp]
 800a4ee:	4652      	mov	r2, sl
 800a4f0:	4619      	mov	r1, r3
 800a4f2:	4620      	mov	r0, r4
 800a4f4:	f7ff ff92 	bl	800a41c <xTimerGenericCommand>
				configASSERT( xResult );
 800a4f8:	2800      	cmp	r0, #0
 800a4fa:	d1ca      	bne.n	800a492 <prvSampleTimeNow+0x1e>
 800a4fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a500:	f383 8811 	msr	BASEPRI, r3
 800a504:	f3bf 8f6f 	isb	sy
 800a508:	f3bf 8f4f 	dsb	sy
 800a50c:	e7fe      	b.n	800a50c <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a50e:	2300      	movs	r3, #0
 800a510:	e7c7      	b.n	800a4a2 <prvSampleTimeNow+0x2e>
 800a512:	bf00      	nop
 800a514:	2000d2d4 	.word	0x2000d2d4
 800a518:	2000d2d8 	.word	0x2000d2d8
 800a51c:	2000d3a4 	.word	0x2000d3a4

0800a520 <prvTimerTask>:
{
 800a520:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a524:	4d6e      	ldr	r5, [pc, #440]	; (800a6e0 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a526:	4e6f      	ldr	r6, [pc, #444]	; (800a6e4 <prvTimerTask+0x1c4>)
{
 800a528:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a52a:	682b      	ldr	r3, [r5, #0]
 800a52c:	f8d3 8000 	ldr.w	r8, [r3]
 800a530:	f1b8 0f00 	cmp.w	r8, #0
 800a534:	d035      	beq.n	800a5a2 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a536:	68db      	ldr	r3, [r3, #12]
 800a538:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a53c:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a53e:	f7ff fb65 	bl	8009c0c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a542:	a804      	add	r0, sp, #16
 800a544:	f7ff ff96 	bl	800a474 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a548:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a54a:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a54c:	2b00      	cmp	r3, #0
 800a54e:	d169      	bne.n	800a624 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a550:	2c00      	cmp	r4, #0
 800a552:	d14c      	bne.n	800a5ee <prvTimerTask+0xce>
 800a554:	4540      	cmp	r0, r8
 800a556:	d350      	bcc.n	800a5fa <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a558:	f7ff fbfc 	bl	8009d54 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a55c:	682b      	ldr	r3, [r5, #0]
 800a55e:	68db      	ldr	r3, [r3, #12]
 800a560:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a562:	1d38      	adds	r0, r7, #4
 800a564:	f7fe facb 	bl	8008afe <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a568:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a56c:	0758      	lsls	r0, r3, #29
 800a56e:	d51a      	bpl.n	800a5a6 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a570:	69b9      	ldr	r1, [r7, #24]
 800a572:	4643      	mov	r3, r8
 800a574:	464a      	mov	r2, r9
 800a576:	4441      	add	r1, r8
 800a578:	4638      	mov	r0, r7
 800a57a:	f7ff feff 	bl	800a37c <prvInsertTimerInActiveList>
 800a57e:	b1b0      	cbz	r0, 800a5ae <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a580:	9400      	str	r4, [sp, #0]
 800a582:	4623      	mov	r3, r4
 800a584:	4642      	mov	r2, r8
 800a586:	4621      	mov	r1, r4
 800a588:	4638      	mov	r0, r7
 800a58a:	f7ff ff47 	bl	800a41c <xTimerGenericCommand>
			configASSERT( xResult );
 800a58e:	b970      	cbnz	r0, 800a5ae <prvTimerTask+0x8e>
 800a590:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a594:	f383 8811 	msr	BASEPRI, r3
 800a598:	f3bf 8f6f 	isb	sy
 800a59c:	f3bf 8f4f 	dsb	sy
 800a5a0:	e7fe      	b.n	800a5a0 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5a2:	2401      	movs	r4, #1
 800a5a4:	e7cb      	b.n	800a53e <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a5a6:	f023 0301 	bic.w	r3, r3, #1
 800a5aa:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a5ae:	6a3b      	ldr	r3, [r7, #32]
 800a5b0:	4638      	mov	r0, r7
 800a5b2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a5b4:	6830      	ldr	r0, [r6, #0]
 800a5b6:	2200      	movs	r2, #0
 800a5b8:	a904      	add	r1, sp, #16
 800a5ba:	f7fe ff49 	bl	8009450 <xQueueReceive>
 800a5be:	2800      	cmp	r0, #0
 800a5c0:	d0b3      	beq.n	800a52a <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a5c2:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a5c4:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a5c6:	2b00      	cmp	r3, #0
 800a5c8:	db2f      	blt.n	800a62a <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a5ca:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a5cc:	6963      	ldr	r3, [r4, #20]
 800a5ce:	2b00      	cmp	r3, #0
 800a5d0:	d132      	bne.n	800a638 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5d2:	a803      	add	r0, sp, #12
 800a5d4:	f7ff ff4e 	bl	800a474 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a5d8:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5da:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a5dc:	2b09      	cmp	r3, #9
 800a5de:	d8e9      	bhi.n	800a5b4 <prvTimerTask+0x94>
 800a5e0:	e8df f003 	tbb	[pc, r3]
 800a5e4:	572e2e2e 	.word	0x572e2e2e
 800a5e8:	2e2e765e 	.word	0x2e2e765e
 800a5ec:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a5ee:	4b3e      	ldr	r3, [pc, #248]	; (800a6e8 <prvTimerTask+0x1c8>)
 800a5f0:	681b      	ldr	r3, [r3, #0]
 800a5f2:	681c      	ldr	r4, [r3, #0]
 800a5f4:	fab4 f484 	clz	r4, r4
 800a5f8:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5fa:	6830      	ldr	r0, [r6, #0]
 800a5fc:	4622      	mov	r2, r4
 800a5fe:	eba8 0109 	sub.w	r1, r8, r9
 800a602:	f7ff f914 	bl	800982e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a606:	f7ff fba5 	bl	8009d54 <xTaskResumeAll>
 800a60a:	2800      	cmp	r0, #0
 800a60c:	d1d2      	bne.n	800a5b4 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a60e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a612:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a616:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a61a:	f3bf 8f4f 	dsb	sy
 800a61e:	f3bf 8f6f 	isb	sy
 800a622:	e7c7      	b.n	800a5b4 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a624:	f7ff fb96 	bl	8009d54 <xTaskResumeAll>
}
 800a628:	e7c4      	b.n	800a5b4 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a62a:	9b05      	ldr	r3, [sp, #20]
 800a62c:	9907      	ldr	r1, [sp, #28]
 800a62e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a630:	9b04      	ldr	r3, [sp, #16]
 800a632:	2b00      	cmp	r3, #0
 800a634:	dbbe      	blt.n	800a5b4 <prvTimerTask+0x94>
 800a636:	e7c8      	b.n	800a5ca <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a638:	1d20      	adds	r0, r4, #4
 800a63a:	f7fe fa60 	bl	8008afe <uxListRemove>
 800a63e:	e7c8      	b.n	800a5d2 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a640:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a644:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a646:	f043 0301 	orr.w	r3, r3, #1
 800a64a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a64e:	9b05      	ldr	r3, [sp, #20]
 800a650:	4620      	mov	r0, r4
 800a652:	4419      	add	r1, r3
 800a654:	f7ff fe92 	bl	800a37c <prvInsertTimerInActiveList>
 800a658:	2800      	cmp	r0, #0
 800a65a:	d0ab      	beq.n	800a5b4 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a65c:	6a23      	ldr	r3, [r4, #32]
 800a65e:	4620      	mov	r0, r4
 800a660:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a662:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a666:	0759      	lsls	r1, r3, #29
 800a668:	d5a4      	bpl.n	800a5b4 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a66a:	69a2      	ldr	r2, [r4, #24]
 800a66c:	9905      	ldr	r1, [sp, #20]
 800a66e:	2300      	movs	r3, #0
 800a670:	440a      	add	r2, r1
 800a672:	9300      	str	r3, [sp, #0]
 800a674:	4619      	mov	r1, r3
 800a676:	4620      	mov	r0, r4
 800a678:	f7ff fed0 	bl	800a41c <xTimerGenericCommand>
							configASSERT( xResult );
 800a67c:	2800      	cmp	r0, #0
 800a67e:	d199      	bne.n	800a5b4 <prvTimerTask+0x94>
 800a680:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a684:	f383 8811 	msr	BASEPRI, r3
 800a688:	f3bf 8f6f 	isb	sy
 800a68c:	f3bf 8f4f 	dsb	sy
 800a690:	e7fe      	b.n	800a690 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a692:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a696:	f023 0301 	bic.w	r3, r3, #1
 800a69a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a69e:	e789      	b.n	800a5b4 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6a0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6a4:	f043 0301 	orr.w	r3, r3, #1
 800a6a8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a6ac:	9905      	ldr	r1, [sp, #20]
 800a6ae:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a6b0:	b941      	cbnz	r1, 800a6c4 <prvTimerTask+0x1a4>
 800a6b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6b6:	f383 8811 	msr	BASEPRI, r3
 800a6ba:	f3bf 8f6f 	isb	sy
 800a6be:	f3bf 8f4f 	dsb	sy
 800a6c2:	e7fe      	b.n	800a6c2 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a6c4:	4603      	mov	r3, r0
 800a6c6:	4401      	add	r1, r0
 800a6c8:	4620      	mov	r0, r4
 800a6ca:	f7ff fe57 	bl	800a37c <prvInsertTimerInActiveList>
					break;
 800a6ce:	e771      	b.n	800a5b4 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a6d0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6d4:	079a      	lsls	r2, r3, #30
 800a6d6:	d4de      	bmi.n	800a696 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a6d8:	4620      	mov	r0, r4
 800a6da:	f7fe f9a7 	bl	8008a2c <vPortFree>
 800a6de:	e769      	b.n	800a5b4 <prvTimerTask+0x94>
 800a6e0:	2000d2d4 	.word	0x2000d2d4
 800a6e4:	2000d3f8 	.word	0x2000d3f8
 800a6e8:	2000d2d8 	.word	0x2000d2d8

0800a6ec <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a6ec:	8880      	ldrh	r0, [r0, #4]
 800a6ee:	4770      	bx	lr

0800a6f0 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a6f0:	2300      	movs	r3, #0
 800a6f2:	8083      	strh	r3, [r0, #4]
 800a6f4:	4770      	bx	lr
	...

0800a6f8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a6f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a6fa:	6803      	ldr	r3, [r0, #0]
 800a6fc:	4605      	mov	r5, r0
 800a6fe:	460e      	mov	r6, r1
 800a700:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a702:	2100      	movs	r1, #0
 800a704:	4798      	blx	r3
 800a706:	682b      	ldr	r3, [r5, #0]
 800a708:	4604      	mov	r4, r0
 800a70a:	6a1b      	ldr	r3, [r3, #32]
 800a70c:	4628      	mov	r0, r5
 800a70e:	4798      	blx	r3
 800a710:	88ab      	ldrh	r3, [r5, #4]
 800a712:	1b34      	subs	r4, r6, r4
 800a714:	b2a4      	uxth	r4, r4
 800a716:	fbb4 f4f0 	udiv	r4, r4, r0
 800a71a:	42a3      	cmp	r3, r4
 800a71c:	d805      	bhi.n	800a72a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800a71e:	4b0e      	ldr	r3, [pc, #56]	; (800a758 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800a720:	4a0e      	ldr	r2, [pc, #56]	; (800a75c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a722:	2120      	movs	r1, #32
 800a724:	480e      	ldr	r0, [pc, #56]	; (800a760 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800a726:	f014 fe65 	bl	801f3f4 <__assert_func>
 800a72a:	682b      	ldr	r3, [r5, #0]
 800a72c:	2100      	movs	r1, #0
 800a72e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a730:	4628      	mov	r0, r5
 800a732:	4798      	blx	r3
 800a734:	682b      	ldr	r3, [r5, #0]
 800a736:	4607      	mov	r7, r0
 800a738:	6a1b      	ldr	r3, [r3, #32]
 800a73a:	4628      	mov	r0, r5
 800a73c:	4798      	blx	r3
 800a73e:	1bf3      	subs	r3, r6, r7
 800a740:	b29b      	uxth	r3, r3
 800a742:	fbb3 f2f0 	udiv	r2, r3, r0
 800a746:	fb02 3010 	mls	r0, r2, r0, r3
 800a74a:	b118      	cbz	r0, 800a754 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800a74c:	4b05      	ldr	r3, [pc, #20]	; (800a764 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800a74e:	4a03      	ldr	r2, [pc, #12]	; (800a75c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a750:	2121      	movs	r1, #33	; 0x21
 800a752:	e7e7      	b.n	800a724 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800a754:	4620      	mov	r0, r4
 800a756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a758:	08021fb7 	.word	0x08021fb7
 800a75c:	08022122 	.word	0x08022122
 800a760:	08021fcc 	.word	0x08021fcc
 800a764:	08021ffa 	.word	0x08021ffa

0800a768 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a768:	b538      	push	{r3, r4, r5, lr}
 800a76a:	6803      	ldr	r3, [r0, #0]
 800a76c:	6a1b      	ldr	r3, [r3, #32]
 800a76e:	460d      	mov	r5, r1
 800a770:	4604      	mov	r4, r0
 800a772:	4798      	blx	r3
 800a774:	4285      	cmp	r5, r0
 800a776:	d905      	bls.n	800a784 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800a778:	4b0c      	ldr	r3, [pc, #48]	; (800a7ac <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800a77a:	4a0d      	ldr	r2, [pc, #52]	; (800a7b0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a77c:	2132      	movs	r1, #50	; 0x32
 800a77e:	480d      	ldr	r0, [pc, #52]	; (800a7b4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800a780:	f014 fe38 	bl	801f3f4 <__assert_func>
 800a784:	6823      	ldr	r3, [r4, #0]
 800a786:	88a5      	ldrh	r5, [r4, #4]
 800a788:	69db      	ldr	r3, [r3, #28]
 800a78a:	4620      	mov	r0, r4
 800a78c:	4798      	blx	r3
 800a78e:	4285      	cmp	r5, r0
 800a790:	d303      	bcc.n	800a79a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800a792:	4b09      	ldr	r3, [pc, #36]	; (800a7b8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800a794:	4a06      	ldr	r2, [pc, #24]	; (800a7b0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a796:	2133      	movs	r1, #51	; 0x33
 800a798:	e7f1      	b.n	800a77e <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800a79a:	6823      	ldr	r3, [r4, #0]
 800a79c:	88a1      	ldrh	r1, [r4, #4]
 800a79e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7a0:	4620      	mov	r0, r4
 800a7a2:	4798      	blx	r3
 800a7a4:	88a3      	ldrh	r3, [r4, #4]
 800a7a6:	3301      	adds	r3, #1
 800a7a8:	80a3      	strh	r3, [r4, #4]
 800a7aa:	bd38      	pop	{r3, r4, r5, pc}
 800a7ac:	08022074 	.word	0x08022074
 800a7b0:	08022165 	.word	0x08022165
 800a7b4:	08021fcc 	.word	0x08021fcc
 800a7b8:	0802208b 	.word	0x0802208b

0800a7bc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a7bc:	b570      	push	{r4, r5, r6, lr}
 800a7be:	6803      	ldr	r3, [r0, #0]
 800a7c0:	6a1b      	ldr	r3, [r3, #32]
 800a7c2:	4616      	mov	r6, r2
 800a7c4:	4604      	mov	r4, r0
 800a7c6:	460d      	mov	r5, r1
 800a7c8:	4798      	blx	r3
 800a7ca:	4286      	cmp	r6, r0
 800a7cc:	d905      	bls.n	800a7da <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a7ce:	4b06      	ldr	r3, [pc, #24]	; (800a7e8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a7d0:	4a06      	ldr	r2, [pc, #24]	; (800a7ec <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a7d2:	4807      	ldr	r0, [pc, #28]	; (800a7f0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a7d4:	213c      	movs	r1, #60	; 0x3c
 800a7d6:	f014 fe0d 	bl	801f3f4 <__assert_func>
 800a7da:	6823      	ldr	r3, [r4, #0]
 800a7dc:	4629      	mov	r1, r5
 800a7de:	4620      	mov	r0, r4
 800a7e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7e6:	4718      	bx	r3
 800a7e8:	08022074 	.word	0x08022074
 800a7ec:	080220d8 	.word	0x080220d8
 800a7f0:	08021fcc 	.word	0x08021fcc

0800a7f4 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a7f4:	4770      	bx	lr
	...

0800a7f8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a7f8:	4a02      	ldr	r2, [pc, #8]	; (800a804 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a7fa:	6002      	str	r2, [r0, #0]
 800a7fc:	2200      	movs	r2, #0
 800a7fe:	8082      	strh	r2, [r0, #4]
 800a800:	4770      	bx	lr
 800a802:	bf00      	nop
 800a804:	080220ac 	.word	0x080220ac

0800a808 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a808:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a80a:	2000      	movs	r0, #0
 800a80c:	b12b      	cbz	r3, 800a81a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a80e:	b920      	cbnz	r0, 800a81a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a810:	1a5a      	subs	r2, r3, r1
 800a812:	4250      	negs	r0, r2
 800a814:	4150      	adcs	r0, r2
 800a816:	699b      	ldr	r3, [r3, #24]
 800a818:	e7f8      	b.n	800a80c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a81a:	4770      	bx	lr

0800a81c <_ZN8touchgfx9Container9removeAllEv>:
 800a81c:	2200      	movs	r2, #0
 800a81e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a820:	b123      	cbz	r3, 800a82c <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a822:	6999      	ldr	r1, [r3, #24]
 800a824:	6281      	str	r1, [r0, #40]	; 0x28
 800a826:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a82a:	e7f8      	b.n	800a81e <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a82c:	4770      	bx	lr

0800a82e <_ZN8touchgfx9Container6unlinkEv>:
 800a82e:	2300      	movs	r3, #0
 800a830:	6283      	str	r3, [r0, #40]	; 0x28
 800a832:	4770      	bx	lr

0800a834 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a838:	461f      	mov	r7, r3
 800a83a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a83e:	460d      	mov	r5, r1
 800a840:	4616      	mov	r6, r2
 800a842:	b103      	cbz	r3, 800a846 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a844:	6038      	str	r0, [r7, #0]
 800a846:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a848:	b314      	cbz	r4, 800a890 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a84a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a84e:	b1eb      	cbz	r3, 800a88c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a850:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a854:	428d      	cmp	r5, r1
 800a856:	db19      	blt.n	800a88c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a858:	8923      	ldrh	r3, [r4, #8]
 800a85a:	b289      	uxth	r1, r1
 800a85c:	440b      	add	r3, r1
 800a85e:	b21b      	sxth	r3, r3
 800a860:	429d      	cmp	r5, r3
 800a862:	da13      	bge.n	800a88c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a864:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a868:	4296      	cmp	r6, r2
 800a86a:	db0f      	blt.n	800a88c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a86c:	8963      	ldrh	r3, [r4, #10]
 800a86e:	b292      	uxth	r2, r2
 800a870:	4413      	add	r3, r2
 800a872:	b21b      	sxth	r3, r3
 800a874:	429e      	cmp	r6, r3
 800a876:	da09      	bge.n	800a88c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a878:	6823      	ldr	r3, [r4, #0]
 800a87a:	1ab2      	subs	r2, r6, r2
 800a87c:	1a69      	subs	r1, r5, r1
 800a87e:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800a882:	b212      	sxth	r2, r2
 800a884:	463b      	mov	r3, r7
 800a886:	b209      	sxth	r1, r1
 800a888:	4620      	mov	r0, r4
 800a88a:	47c0      	blx	r8
 800a88c:	69a4      	ldr	r4, [r4, #24]
 800a88e:	e7db      	b.n	800a848 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a894 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a894:	2200      	movs	r2, #0
 800a896:	8002      	strh	r2, [r0, #0]
 800a898:	8042      	strh	r2, [r0, #2]
 800a89a:	8082      	strh	r2, [r0, #4]
 800a89c:	80c2      	strh	r2, [r0, #6]
 800a89e:	4770      	bx	lr

0800a8a0 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a8a0:	b570      	push	{r4, r5, r6, lr}
 800a8a2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a8a4:	460d      	mov	r5, r1
 800a8a6:	4616      	mov	r6, r2
 800a8a8:	b13c      	cbz	r4, 800a8ba <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a8aa:	6823      	ldr	r3, [r4, #0]
 800a8ac:	4620      	mov	r0, r4
 800a8ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a8b0:	4632      	mov	r2, r6
 800a8b2:	4629      	mov	r1, r5
 800a8b4:	4798      	blx	r3
 800a8b6:	69a4      	ldr	r4, [r4, #24]
 800a8b8:	e7f6      	b.n	800a8a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a8ba:	bd70      	pop	{r4, r5, r6, pc}

0800a8bc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a8bc:	b538      	push	{r3, r4, r5, lr}
 800a8be:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a8c0:	460d      	mov	r5, r1
 800a8c2:	b134      	cbz	r4, 800a8d2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a8c4:	682b      	ldr	r3, [r5, #0]
 800a8c6:	4621      	mov	r1, r4
 800a8c8:	689b      	ldr	r3, [r3, #8]
 800a8ca:	4628      	mov	r0, r5
 800a8cc:	4798      	blx	r3
 800a8ce:	69a4      	ldr	r4, [r4, #24]
 800a8d0:	e7f7      	b.n	800a8c2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a8d2:	bd38      	pop	{r3, r4, r5, pc}

0800a8d4 <_ZN8touchgfx9ContainerD1Ev>:
 800a8d4:	4770      	bx	lr

0800a8d6 <_ZN8touchgfx9ContainerD0Ev>:
 800a8d6:	b510      	push	{r4, lr}
 800a8d8:	212c      	movs	r1, #44	; 0x2c
 800a8da:	4604      	mov	r4, r0
 800a8dc:	f014 fd5b 	bl	801f396 <_ZdlPvj>
 800a8e0:	4620      	mov	r0, r4
 800a8e2:	bd10      	pop	{r4, pc}

0800a8e4 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a8e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a8e6:	b19b      	cbz	r3, 800a910 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a8e8:	428b      	cmp	r3, r1
 800a8ea:	d109      	bne.n	800a900 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a8ec:	699a      	ldr	r2, [r3, #24]
 800a8ee:	2100      	movs	r1, #0
 800a8f0:	6159      	str	r1, [r3, #20]
 800a8f2:	6282      	str	r2, [r0, #40]	; 0x28
 800a8f4:	b902      	cbnz	r2, 800a8f8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a8f6:	4770      	bx	lr
 800a8f8:	6199      	str	r1, [r3, #24]
 800a8fa:	4770      	bx	lr
 800a8fc:	4613      	mov	r3, r2
 800a8fe:	b13a      	cbz	r2, 800a910 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a900:	699a      	ldr	r2, [r3, #24]
 800a902:	428a      	cmp	r2, r1
 800a904:	d1fa      	bne.n	800a8fc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a906:	698a      	ldr	r2, [r1, #24]
 800a908:	619a      	str	r2, [r3, #24]
 800a90a:	2300      	movs	r3, #0
 800a90c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a910:	4770      	bx	lr

0800a912 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a912:	b410      	push	{r4}
 800a914:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a916:	4604      	mov	r4, r0
 800a918:	b92b      	cbnz	r3, 800a926 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a91a:	6803      	ldr	r3, [r0, #0]
 800a91c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a920:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a922:	4611      	mov	r1, r2
 800a924:	4718      	bx	r3
 800a926:	b941      	cbnz	r1, 800a93a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a928:	6193      	str	r3, [r2, #24]
 800a92a:	6282      	str	r2, [r0, #40]	; 0x28
 800a92c:	6154      	str	r4, [r2, #20]
 800a92e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a932:	4770      	bx	lr
 800a934:	4603      	mov	r3, r0
 800a936:	2800      	cmp	r0, #0
 800a938:	d0f9      	beq.n	800a92e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a93a:	4299      	cmp	r1, r3
 800a93c:	6998      	ldr	r0, [r3, #24]
 800a93e:	d1f9      	bne.n	800a934 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a940:	6190      	str	r0, [r2, #24]
 800a942:	618a      	str	r2, [r1, #24]
 800a944:	e7f2      	b.n	800a92c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800a948 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a948:	4288      	cmp	r0, r1
 800a94a:	b508      	push	{r3, lr}
 800a94c:	d105      	bne.n	800a95a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800a94e:	4b11      	ldr	r3, [pc, #68]	; (800a994 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800a950:	4a11      	ldr	r2, [pc, #68]	; (800a998 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a952:	2123      	movs	r1, #35	; 0x23
 800a954:	4811      	ldr	r0, [pc, #68]	; (800a99c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800a956:	f014 fd4d 	bl	801f3f4 <__assert_func>
 800a95a:	694b      	ldr	r3, [r1, #20]
 800a95c:	b11b      	cbz	r3, 800a966 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800a95e:	4b10      	ldr	r3, [pc, #64]	; (800a9a0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800a960:	4a0d      	ldr	r2, [pc, #52]	; (800a998 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a962:	2124      	movs	r1, #36	; 0x24
 800a964:	e7f6      	b.n	800a954 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a966:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800a96a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a96c:	b913      	cbnz	r3, 800a974 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800a96e:	6281      	str	r1, [r0, #40]	; 0x28
 800a970:	bd08      	pop	{r3, pc}
 800a972:	4613      	mov	r3, r2
 800a974:	699a      	ldr	r2, [r3, #24]
 800a976:	b12a      	cbz	r2, 800a984 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800a978:	428b      	cmp	r3, r1
 800a97a:	d1fa      	bne.n	800a972 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800a97c:	4b09      	ldr	r3, [pc, #36]	; (800a9a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a97e:	4a06      	ldr	r2, [pc, #24]	; (800a998 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a980:	2135      	movs	r1, #53	; 0x35
 800a982:	e7e7      	b.n	800a954 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a984:	428b      	cmp	r3, r1
 800a986:	d103      	bne.n	800a990 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800a988:	4b06      	ldr	r3, [pc, #24]	; (800a9a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a98a:	4a03      	ldr	r2, [pc, #12]	; (800a998 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a98c:	2138      	movs	r1, #56	; 0x38
 800a98e:	e7e1      	b.n	800a954 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a990:	6199      	str	r1, [r3, #24]
 800a992:	e7ed      	b.n	800a970 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800a994:	080221a3 	.word	0x080221a3
 800a998:	080222f4 	.word	0x080222f4
 800a99c:	080221cf 	.word	0x080221cf
 800a9a0:	08022202 	.word	0x08022202
 800a9a4:	08022238 	.word	0x08022238

0800a9a8 <_ZN8touchgfx4RectaNERKS0_>:
 800a9a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a9ac:	f9b1 7000 	ldrsh.w	r7, [r1]
 800a9b0:	888c      	ldrh	r4, [r1, #4]
 800a9b2:	f9b0 9000 	ldrsh.w	r9, [r0]
 800a9b6:	443c      	add	r4, r7
 800a9b8:	b2a4      	uxth	r4, r4
 800a9ba:	fa0f f884 	sxth.w	r8, r4
 800a9be:	45c1      	cmp	r9, r8
 800a9c0:	da2f      	bge.n	800aa22 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a9c2:	8882      	ldrh	r2, [r0, #4]
 800a9c4:	444a      	add	r2, r9
 800a9c6:	b292      	uxth	r2, r2
 800a9c8:	fa0f fe82 	sxth.w	lr, r2
 800a9cc:	4577      	cmp	r7, lr
 800a9ce:	da28      	bge.n	800aa22 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a9d0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a9d4:	88cb      	ldrh	r3, [r1, #6]
 800a9d6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a9da:	442b      	add	r3, r5
 800a9dc:	b21b      	sxth	r3, r3
 800a9de:	429e      	cmp	r6, r3
 800a9e0:	da1f      	bge.n	800aa22 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a9e2:	88c3      	ldrh	r3, [r0, #6]
 800a9e4:	4433      	add	r3, r6
 800a9e6:	b29b      	uxth	r3, r3
 800a9e8:	fa0f fc83 	sxth.w	ip, r3
 800a9ec:	4565      	cmp	r5, ip
 800a9ee:	da18      	bge.n	800aa22 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800a9f0:	454f      	cmp	r7, r9
 800a9f2:	bfb8      	it	lt
 800a9f4:	464f      	movlt	r7, r9
 800a9f6:	42b5      	cmp	r5, r6
 800a9f8:	bfb8      	it	lt
 800a9fa:	4635      	movlt	r5, r6
 800a9fc:	45f0      	cmp	r8, lr
 800a9fe:	bfd8      	it	le
 800aa00:	4622      	movle	r2, r4
 800aa02:	1bd2      	subs	r2, r2, r7
 800aa04:	8082      	strh	r2, [r0, #4]
 800aa06:	884a      	ldrh	r2, [r1, #2]
 800aa08:	88c9      	ldrh	r1, [r1, #6]
 800aa0a:	8007      	strh	r7, [r0, #0]
 800aa0c:	440a      	add	r2, r1
 800aa0e:	b292      	uxth	r2, r2
 800aa10:	b211      	sxth	r1, r2
 800aa12:	458c      	cmp	ip, r1
 800aa14:	bfa8      	it	ge
 800aa16:	4613      	movge	r3, r2
 800aa18:	1b5b      	subs	r3, r3, r5
 800aa1a:	80c3      	strh	r3, [r0, #6]
 800aa1c:	8045      	strh	r5, [r0, #2]
 800aa1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aa22:	2300      	movs	r3, #0
 800aa24:	8003      	strh	r3, [r0, #0]
 800aa26:	8043      	strh	r3, [r0, #2]
 800aa28:	8083      	strh	r3, [r0, #4]
 800aa2a:	80c3      	strh	r3, [r0, #6]
 800aa2c:	e7f7      	b.n	800aa1e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800aa2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aa32:	2b00      	cmp	r3, #0
 800aa34:	dd06      	ble.n	800aa44 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800aa36:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800aa3a:	2800      	cmp	r0, #0
 800aa3c:	bfcc      	ite	gt
 800aa3e:	2000      	movgt	r0, #0
 800aa40:	2001      	movle	r0, #1
 800aa42:	4770      	bx	lr
 800aa44:	2001      	movs	r0, #1
 800aa46:	4770      	bx	lr

0800aa48 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800aa48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aa4c:	2300      	movs	r3, #0
 800aa4e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800aa50:	8003      	strh	r3, [r0, #0]
 800aa52:	4604      	mov	r4, r0
 800aa54:	8043      	strh	r3, [r0, #2]
 800aa56:	8083      	strh	r3, [r0, #4]
 800aa58:	80c3      	strh	r3, [r0, #6]
 800aa5a:	2d00      	cmp	r5, #0
 800aa5c:	d040      	beq.n	800aae0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800aa5e:	1d28      	adds	r0, r5, #4
 800aa60:	f7ff ffe5 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800aa64:	b988      	cbnz	r0, 800aa8a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aa66:	4620      	mov	r0, r4
 800aa68:	f7ff ffe1 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800aa6c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800aa70:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800aa74:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800aa78:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800aa7c:	b138      	cbz	r0, 800aa8e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800aa7e:	8022      	strh	r2, [r4, #0]
 800aa80:	8063      	strh	r3, [r4, #2]
 800aa82:	f8a4 e004 	strh.w	lr, [r4, #4]
 800aa86:	f8a4 c006 	strh.w	ip, [r4, #6]
 800aa8a:	69ad      	ldr	r5, [r5, #24]
 800aa8c:	e7e5      	b.n	800aa5a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800aa8e:	f9b4 0000 	ldrsh.w	r0, [r4]
 800aa92:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800aa96:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800aa9a:	4290      	cmp	r0, r2
 800aa9c:	4607      	mov	r7, r0
 800aa9e:	bfa8      	it	ge
 800aaa0:	4617      	movge	r7, r2
 800aaa2:	4472      	add	r2, lr
 800aaa4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800aaa8:	8027      	strh	r7, [r4, #0]
 800aaaa:	4299      	cmp	r1, r3
 800aaac:	460e      	mov	r6, r1
 800aaae:	4440      	add	r0, r8
 800aab0:	bfa8      	it	ge
 800aab2:	461e      	movge	r6, r3
 800aab4:	4471      	add	r1, lr
 800aab6:	4463      	add	r3, ip
 800aab8:	b200      	sxth	r0, r0
 800aaba:	b212      	sxth	r2, r2
 800aabc:	b209      	sxth	r1, r1
 800aabe:	b21b      	sxth	r3, r3
 800aac0:	4290      	cmp	r0, r2
 800aac2:	bfac      	ite	ge
 800aac4:	ebc7 0200 	rsbge	r2, r7, r0
 800aac8:	ebc7 0202 	rsblt	r2, r7, r2
 800aacc:	4299      	cmp	r1, r3
 800aace:	bfac      	ite	ge
 800aad0:	ebc6 0301 	rsbge	r3, r6, r1
 800aad4:	ebc6 0303 	rsblt	r3, r6, r3
 800aad8:	8066      	strh	r6, [r4, #2]
 800aada:	80a2      	strh	r2, [r4, #4]
 800aadc:	80e3      	strh	r3, [r4, #6]
 800aade:	e7d4      	b.n	800aa8a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800aae0:	4620      	mov	r0, r4
 800aae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aae6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800aae6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800aaea:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800aaee:	b383      	cbz	r3, 800ab52 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aaf0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aaf2:	b374      	cbz	r4, 800ab52 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800aaf4:	f9b1 5000 	ldrsh.w	r5, [r1]
 800aaf8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800aafc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ab00:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ab04:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab08:	b303      	cbz	r3, 800ab4c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ab0a:	4668      	mov	r0, sp
 800ab0c:	1d21      	adds	r1, r4, #4
 800ab0e:	f8ad 5000 	strh.w	r5, [sp]
 800ab12:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ab16:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ab1a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ab1e:	f7ff ff43 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800ab22:	4668      	mov	r0, sp
 800ab24:	f7ff ff83 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ab28:	b980      	cbnz	r0, 800ab4c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ab2a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ab2e:	88a2      	ldrh	r2, [r4, #4]
 800ab30:	1a9b      	subs	r3, r3, r2
 800ab32:	f8ad 3000 	strh.w	r3, [sp]
 800ab36:	88e2      	ldrh	r2, [r4, #6]
 800ab38:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ab3c:	1a9b      	subs	r3, r3, r2
 800ab3e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ab42:	6823      	ldr	r3, [r4, #0]
 800ab44:	4669      	mov	r1, sp
 800ab46:	689b      	ldr	r3, [r3, #8]
 800ab48:	4620      	mov	r0, r4
 800ab4a:	4798      	blx	r3
 800ab4c:	69a4      	ldr	r4, [r4, #24]
 800ab4e:	2c00      	cmp	r4, #0
 800ab50:	d1d8      	bne.n	800ab04 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ab52:	b002      	add	sp, #8
 800ab54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab58 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ab58:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ab5a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ab5e:	460d      	mov	r5, r1
 800ab60:	4616      	mov	r6, r2
 800ab62:	b323      	cbz	r3, 800abae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ab64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab66:	b314      	cbz	r4, 800abae <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ab68:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab6c:	b1eb      	cbz	r3, 800abaa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ab6e:	6828      	ldr	r0, [r5, #0]
 800ab70:	6869      	ldr	r1, [r5, #4]
 800ab72:	466b      	mov	r3, sp
 800ab74:	c303      	stmia	r3!, {r0, r1}
 800ab76:	4668      	mov	r0, sp
 800ab78:	1d21      	adds	r1, r4, #4
 800ab7a:	f7ff ff15 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800ab7e:	4668      	mov	r0, sp
 800ab80:	f7ff ff55 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ab84:	b988      	cbnz	r0, 800abaa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ab86:	f8bd 3000 	ldrh.w	r3, [sp]
 800ab8a:	88a2      	ldrh	r2, [r4, #4]
 800ab8c:	1a9b      	subs	r3, r3, r2
 800ab8e:	f8ad 3000 	strh.w	r3, [sp]
 800ab92:	88e2      	ldrh	r2, [r4, #6]
 800ab94:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ab98:	1a9b      	subs	r3, r3, r2
 800ab9a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ab9e:	6823      	ldr	r3, [r4, #0]
 800aba0:	4632      	mov	r2, r6
 800aba2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800aba4:	4669      	mov	r1, sp
 800aba6:	4620      	mov	r0, r4
 800aba8:	4798      	blx	r3
 800abaa:	69a4      	ldr	r4, [r4, #24]
 800abac:	e7db      	b.n	800ab66 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800abae:	b002      	add	sp, #8
 800abb0:	bd70      	pop	{r4, r5, r6, pc}

0800abb2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800abb2:	b513      	push	{r0, r1, r4, lr}
 800abb4:	6803      	ldr	r3, [r0, #0]
 800abb6:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800abba:	2300      	movs	r3, #0
 800abbc:	e9cd 3300 	strd	r3, r3, [sp]
 800abc0:	466b      	mov	r3, sp
 800abc2:	47a0      	blx	r4
 800abc4:	b002      	add	sp, #8
 800abc6:	bd10      	pop	{r4, pc}

0800abc8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800abc8:	2301      	movs	r3, #1
 800abca:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800abce:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800abd2:	4770      	bx	lr

0800abd4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800abd4:	2301      	movs	r3, #1
 800abd6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800abda:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800abde:	4770      	bx	lr

0800abe0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800abe0:	6843      	ldr	r3, [r0, #4]
 800abe2:	2201      	movs	r2, #1
 800abe4:	725a      	strb	r2, [r3, #9]
 800abe6:	6840      	ldr	r0, [r0, #4]
 800abe8:	6803      	ldr	r3, [r0, #0]
 800abea:	691b      	ldr	r3, [r3, #16]
 800abec:	4718      	bx	r3

0800abee <_ZN8touchgfx3HAL8flushDMAEv>:
 800abee:	6840      	ldr	r0, [r0, #4]
 800abf0:	6803      	ldr	r3, [r0, #0]
 800abf2:	689b      	ldr	r3, [r3, #8]
 800abf4:	4718      	bx	r3
	...

0800abf8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800abf8:	4b04      	ldr	r3, [pc, #16]	; (800ac0c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800abfa:	781b      	ldrb	r3, [r3, #0]
 800abfc:	b123      	cbz	r3, 800ac08 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800abfe:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800ac02:	f080 0001 	eor.w	r0, r0, #1
 800ac06:	4770      	bx	lr
 800ac08:	2001      	movs	r0, #1
 800ac0a:	4770      	bx	lr
 800ac0c:	2000d40a 	.word	0x2000d40a

0800ac10 <_ZN8touchgfx3HAL8endFrameEv>:
 800ac10:	b510      	push	{r4, lr}
 800ac12:	4604      	mov	r4, r0
 800ac14:	6840      	ldr	r0, [r0, #4]
 800ac16:	6803      	ldr	r3, [r0, #0]
 800ac18:	689b      	ldr	r3, [r3, #8]
 800ac1a:	4798      	blx	r3
 800ac1c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800ac20:	b113      	cbz	r3, 800ac28 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ac22:	2301      	movs	r3, #1
 800ac24:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ac28:	bd10      	pop	{r4, pc}
	...

0800ac2c <_ZN8touchgfx3HAL4tickEv>:
 800ac2c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ac2e:	6803      	ldr	r3, [r0, #0]
 800ac30:	4d5c      	ldr	r5, [pc, #368]	; (800ada4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ac32:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800ac36:	4604      	mov	r4, r0
 800ac38:	4798      	blx	r3
 800ac3a:	2800      	cmp	r0, #0
 800ac3c:	f000 8097 	beq.w	800ad6e <_ZN8touchgfx3HAL4tickEv+0x142>
 800ac40:	2001      	movs	r0, #1
 800ac42:	f7f5 fd8d 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ac46:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800ac4a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800ac4e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ac52:	2600      	movs	r6, #0
 800ac54:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800ac58:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800ac5c:	b133      	cbz	r3, 800ac6c <_ZN8touchgfx3HAL4tickEv+0x40>
 800ac5e:	6823      	ldr	r3, [r4, #0]
 800ac60:	4620      	mov	r0, r4
 800ac62:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800ac66:	4798      	blx	r3
 800ac68:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800ac6c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800ac70:	6862      	ldr	r2, [r4, #4]
 800ac72:	f083 0301 	eor.w	r3, r3, #1
 800ac76:	7253      	strb	r3, [r2, #9]
 800ac78:	2601      	movs	r6, #1
 800ac7a:	702e      	strb	r6, [r5, #0]
 800ac7c:	f004 fb5e 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 800ac80:	6803      	ldr	r3, [r0, #0]
 800ac82:	4631      	mov	r1, r6
 800ac84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ac86:	4798      	blx	r3
 800ac88:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800ac8c:	b90b      	cbnz	r3, 800ac92 <_ZN8touchgfx3HAL4tickEv+0x66>
 800ac8e:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800ac92:	f004 fb53 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 800ac96:	6803      	ldr	r3, [r0, #0]
 800ac98:	695b      	ldr	r3, [r3, #20]
 800ac9a:	4798      	blx	r3
 800ac9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ac9e:	6803      	ldr	r3, [r0, #0]
 800aca0:	691b      	ldr	r3, [r3, #16]
 800aca2:	4798      	blx	r3
 800aca4:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800aca8:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800acac:	3b01      	subs	r3, #1
 800acae:	b2db      	uxtb	r3, r3
 800acb0:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800acb4:	b10a      	cbz	r2, 800acba <_ZN8touchgfx3HAL4tickEv+0x8e>
 800acb6:	2b00      	cmp	r3, #0
 800acb8:	d1eb      	bne.n	800ac92 <_ZN8touchgfx3HAL4tickEv+0x66>
 800acba:	4a3b      	ldr	r2, [pc, #236]	; (800ada8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800acbc:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800acc0:	7813      	ldrb	r3, [r2, #0]
 800acc2:	3301      	adds	r3, #1
 800acc4:	b25b      	sxtb	r3, r3
 800acc6:	4299      	cmp	r1, r3
 800acc8:	7013      	strb	r3, [r2, #0]
 800acca:	dc10      	bgt.n	800acee <_ZN8touchgfx3HAL4tickEv+0xc2>
 800accc:	68e0      	ldr	r0, [r4, #12]
 800acce:	2300      	movs	r3, #0
 800acd0:	7013      	strb	r3, [r2, #0]
 800acd2:	6803      	ldr	r3, [r0, #0]
 800acd4:	aa03      	add	r2, sp, #12
 800acd6:	68db      	ldr	r3, [r3, #12]
 800acd8:	a902      	add	r1, sp, #8
 800acda:	4798      	blx	r3
 800acdc:	6823      	ldr	r3, [r4, #0]
 800acde:	2800      	cmp	r0, #0
 800ace0:	d051      	beq.n	800ad86 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800ace2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ace6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800acea:	4620      	mov	r0, r4
 800acec:	4798      	blx	r3
 800acee:	6960      	ldr	r0, [r4, #20]
 800acf0:	2300      	movs	r3, #0
 800acf2:	f88d 3007 	strb.w	r3, [sp, #7]
 800acf6:	b158      	cbz	r0, 800ad10 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800acf8:	6803      	ldr	r3, [r0, #0]
 800acfa:	f10d 0107 	add.w	r1, sp, #7
 800acfe:	68db      	ldr	r3, [r3, #12]
 800ad00:	4798      	blx	r3
 800ad02:	b128      	cbz	r0, 800ad10 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800ad04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ad06:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ad0a:	6803      	ldr	r3, [r0, #0]
 800ad0c:	68db      	ldr	r3, [r3, #12]
 800ad0e:	4798      	blx	r3
 800ad10:	f104 001c 	add.w	r0, r4, #28
 800ad14:	f012 fe60 	bl	801d9d8 <_ZN8touchgfx8Gestures4tickEv>
 800ad18:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800ad1c:	b30b      	cbz	r3, 800ad62 <_ZN8touchgfx3HAL4tickEv+0x136>
 800ad1e:	6920      	ldr	r0, [r4, #16]
 800ad20:	6803      	ldr	r3, [r0, #0]
 800ad22:	691b      	ldr	r3, [r3, #16]
 800ad24:	4798      	blx	r3
 800ad26:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ad28:	4606      	mov	r6, r0
 800ad2a:	b903      	cbnz	r3, 800ad2e <_ZN8touchgfx3HAL4tickEv+0x102>
 800ad2c:	6720      	str	r0, [r4, #112]	; 0x70
 800ad2e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ad30:	4a1e      	ldr	r2, [pc, #120]	; (800adac <_ZN8touchgfx3HAL4tickEv+0x180>)
 800ad32:	1af3      	subs	r3, r6, r3
 800ad34:	4293      	cmp	r3, r2
 800ad36:	d914      	bls.n	800ad62 <_ZN8touchgfx3HAL4tickEv+0x136>
 800ad38:	6920      	ldr	r0, [r4, #16]
 800ad3a:	6803      	ldr	r3, [r0, #0]
 800ad3c:	699b      	ldr	r3, [r3, #24]
 800ad3e:	4798      	blx	r3
 800ad40:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ad42:	2264      	movs	r2, #100	; 0x64
 800ad44:	1af3      	subs	r3, r6, r3
 800ad46:	fbb3 f3f2 	udiv	r3, r3, r2
 800ad4a:	fbb0 f0f3 	udiv	r0, r0, r3
 800ad4e:	2800      	cmp	r0, #0
 800ad50:	dc1e      	bgt.n	800ad90 <_ZN8touchgfx3HAL4tickEv+0x164>
 800ad52:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800ad56:	6920      	ldr	r0, [r4, #16]
 800ad58:	6803      	ldr	r3, [r0, #0]
 800ad5a:	2100      	movs	r1, #0
 800ad5c:	69db      	ldr	r3, [r3, #28]
 800ad5e:	4798      	blx	r3
 800ad60:	6726      	str	r6, [r4, #112]	; 0x70
 800ad62:	f004 faeb 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 800ad66:	6803      	ldr	r3, [r0, #0]
 800ad68:	2100      	movs	r1, #0
 800ad6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ad6c:	4798      	blx	r3
 800ad6e:	6823      	ldr	r3, [r4, #0]
 800ad70:	4620      	mov	r0, r4
 800ad72:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ad76:	4798      	blx	r3
 800ad78:	2001      	movs	r0, #1
 800ad7a:	f7f5 fd0d 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ad7e:	2300      	movs	r3, #0
 800ad80:	702b      	strb	r3, [r5, #0]
 800ad82:	b004      	add	sp, #16
 800ad84:	bd70      	pop	{r4, r5, r6, pc}
 800ad86:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ad8a:	4620      	mov	r0, r4
 800ad8c:	4798      	blx	r3
 800ad8e:	e7ae      	b.n	800acee <_ZN8touchgfx3HAL4tickEv+0xc2>
 800ad90:	2863      	cmp	r0, #99	; 0x63
 800ad92:	bfcb      	itete	gt
 800ad94:	2300      	movgt	r3, #0
 800ad96:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800ad9a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800ad9e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800ada2:	e7d8      	b.n	800ad56 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800ada4:	2000d410 	.word	0x2000d410
 800ada8:	2000d411 	.word	0x2000d411
 800adac:	05f5e100 	.word	0x05f5e100

0800adb0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800adb0:	f7f5 bf8c 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800adb4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800adb4:	6581      	str	r1, [r0, #88]	; 0x58
 800adb6:	301c      	adds	r0, #28
 800adb8:	f012 be0c 	b.w	801d9d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800adbc <_ZN8touchgfx3HAL5touchEll>:
 800adbc:	b530      	push	{r4, r5, lr}
 800adbe:	b087      	sub	sp, #28
 800adc0:	4604      	mov	r4, r0
 800adc2:	a804      	add	r0, sp, #16
 800adc4:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800adc8:	f004 f85c 	bl	800ee84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800adcc:	9b04      	ldr	r3, [sp, #16]
 800adce:	f8ad 300c 	strh.w	r3, [sp, #12]
 800add2:	a906      	add	r1, sp, #24
 800add4:	9b05      	ldr	r3, [sp, #20]
 800add6:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800adda:	a803      	add	r0, sp, #12
 800addc:	f004 f890 	bl	800ef00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ade0:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800ade4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ade8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800adec:	f104 001c 	add.w	r0, r4, #28
 800adf0:	b189      	cbz	r1, 800ae16 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800adf2:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800adf6:	9300      	str	r3, [sp, #0]
 800adf8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800adfc:	4613      	mov	r3, r2
 800adfe:	462a      	mov	r2, r5
 800ae00:	f012 fdf8 	bl	801d9f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ae04:	b128      	cbz	r0, 800ae12 <_ZN8touchgfx3HAL5touchEll+0x56>
 800ae06:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ae0a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800ae0c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ae10:	6623      	str	r3, [r4, #96]	; 0x60
 800ae12:	b007      	add	sp, #28
 800ae14:	bd30      	pop	{r4, r5, pc}
 800ae16:	f012 fe31 	bl	801da7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ae1a:	2301      	movs	r3, #1
 800ae1c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800ae20:	e7f1      	b.n	800ae06 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ae22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ae22:	b570      	push	{r4, r5, r6, lr}
 800ae24:	2b00      	cmp	r3, #0
 800ae26:	d050      	beq.n	800aeca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800ae28:	ea81 0002 	eor.w	r0, r1, r2
 800ae2c:	07c6      	lsls	r6, r0, #31
 800ae2e:	d508      	bpl.n	800ae42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ae30:	3a01      	subs	r2, #1
 800ae32:	18cc      	adds	r4, r1, r3
 800ae34:	42a1      	cmp	r1, r4
 800ae36:	d048      	beq.n	800aeca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800ae38:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ae3c:	f801 0b01 	strb.w	r0, [r1], #1
 800ae40:	e7f8      	b.n	800ae34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ae42:	07d5      	lsls	r5, r2, #31
 800ae44:	bf42      	ittt	mi
 800ae46:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ae4a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ae4e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ae52:	2b01      	cmp	r3, #1
 800ae54:	d915      	bls.n	800ae82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800ae56:	ea82 0001 	eor.w	r0, r2, r1
 800ae5a:	0784      	lsls	r4, r0, #30
 800ae5c:	d02d      	beq.n	800aeba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800ae5e:	1e94      	subs	r4, r2, #2
 800ae60:	4608      	mov	r0, r1
 800ae62:	18ce      	adds	r6, r1, r3
 800ae64:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800ae68:	f820 5b02 	strh.w	r5, [r0], #2
 800ae6c:	1a35      	subs	r5, r6, r0
 800ae6e:	2d01      	cmp	r5, #1
 800ae70:	d8f8      	bhi.n	800ae64 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800ae72:	1e98      	subs	r0, r3, #2
 800ae74:	f020 0001 	bic.w	r0, r0, #1
 800ae78:	3002      	adds	r0, #2
 800ae7a:	4401      	add	r1, r0
 800ae7c:	4402      	add	r2, r0
 800ae7e:	f003 0301 	and.w	r3, r3, #1
 800ae82:	1f14      	subs	r4, r2, #4
 800ae84:	4608      	mov	r0, r1
 800ae86:	18ce      	adds	r6, r1, r3
 800ae88:	1a35      	subs	r5, r6, r0
 800ae8a:	2d03      	cmp	r5, #3
 800ae8c:	d810      	bhi.n	800aeb0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800ae8e:	089c      	lsrs	r4, r3, #2
 800ae90:	00a0      	lsls	r0, r4, #2
 800ae92:	4401      	add	r1, r0
 800ae94:	3801      	subs	r0, #1
 800ae96:	4402      	add	r2, r0
 800ae98:	f06f 0003 	mvn.w	r0, #3
 800ae9c:	fb00 3404 	mla	r4, r0, r4, r3
 800aea0:	440c      	add	r4, r1
 800aea2:	42a1      	cmp	r1, r4
 800aea4:	d011      	beq.n	800aeca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800aea6:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800aeaa:	f801 3b01 	strb.w	r3, [r1], #1
 800aeae:	e7f8      	b.n	800aea2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800aeb0:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800aeb4:	f840 5b04 	str.w	r5, [r0], #4
 800aeb8:	e7e6      	b.n	800ae88 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800aeba:	0790      	lsls	r0, r2, #30
 800aebc:	d0e1      	beq.n	800ae82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800aebe:	f832 0b02 	ldrh.w	r0, [r2], #2
 800aec2:	f821 0b02 	strh.w	r0, [r1], #2
 800aec6:	3b02      	subs	r3, #2
 800aec8:	e7db      	b.n	800ae82 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800aeca:	2001      	movs	r0, #1
 800aecc:	bd70      	pop	{r4, r5, r6, pc}

0800aece <_ZN8touchgfx3HAL7noTouchEv>:
 800aece:	b510      	push	{r4, lr}
 800aed0:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800aed4:	4604      	mov	r4, r0
 800aed6:	b153      	cbz	r3, 800aeee <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800aed8:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800aedc:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800aee0:	2101      	movs	r1, #1
 800aee2:	301c      	adds	r0, #28
 800aee4:	f012 fdca 	bl	801da7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800aee8:	2300      	movs	r3, #0
 800aeea:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800aeee:	bd10      	pop	{r4, pc}

0800aef0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800aef0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aef4:	4604      	mov	r4, r0
 800aef6:	6980      	ldr	r0, [r0, #24]
 800aef8:	b085      	sub	sp, #20
 800aefa:	460f      	mov	r7, r1
 800aefc:	4690      	mov	r8, r2
 800aefe:	4699      	mov	r9, r3
 800af00:	b930      	cbnz	r0, 800af10 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800af02:	4b1c      	ldr	r3, [pc, #112]	; (800af74 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 800af04:	4a1c      	ldr	r2, [pc, #112]	; (800af78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800af06:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800af0a:	481c      	ldr	r0, [pc, #112]	; (800af7c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800af0c:	f014 fa72 	bl	801f3f4 <__assert_func>
 800af10:	ad04      	add	r5, sp, #16
 800af12:	2600      	movs	r6, #0
 800af14:	f845 6d04 	str.w	r6, [r5, #-4]!
 800af18:	6806      	ldr	r6, [r0, #0]
 800af1a:	9501      	str	r5, [sp, #4]
 800af1c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800af20:	9500      	str	r5, [sp, #0]
 800af22:	6835      	ldr	r5, [r6, #0]
 800af24:	47a8      	blx	r5
 800af26:	4d16      	ldr	r5, [pc, #88]	; (800af80 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800af28:	4606      	mov	r6, r0
 800af2a:	f8a5 9000 	strh.w	r9, [r5]
 800af2e:	f7f5 ff5d 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800af32:	6803      	ldr	r3, [r0, #0]
 800af34:	6a1b      	ldr	r3, [r3, #32]
 800af36:	4798      	blx	r3
 800af38:	2801      	cmp	r0, #1
 800af3a:	d012      	beq.n	800af62 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800af3c:	d306      	bcc.n	800af4c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800af3e:	280d      	cmp	r0, #13
 800af40:	d80b      	bhi.n	800af5a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800af42:	4b10      	ldr	r3, [pc, #64]	; (800af84 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800af44:	4a0c      	ldr	r2, [pc, #48]	; (800af78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800af46:	f44f 71b0 	mov.w	r1, #352	; 0x160
 800af4a:	e7de      	b.n	800af0a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800af4c:	882b      	ldrh	r3, [r5, #0]
 800af4e:	fb08 7203 	mla	r2, r8, r3, r7
 800af52:	9b03      	ldr	r3, [sp, #12]
 800af54:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800af58:	63e3      	str	r3, [r4, #60]	; 0x3c
 800af5a:	4630      	mov	r0, r6
 800af5c:	b005      	add	sp, #20
 800af5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800af62:	882a      	ldrh	r2, [r5, #0]
 800af64:	9b03      	ldr	r3, [sp, #12]
 800af66:	fb08 7202 	mla	r2, r8, r2, r7
 800af6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800af6e:	1a9a      	subs	r2, r3, r2
 800af70:	63e2      	str	r2, [r4, #60]	; 0x3c
 800af72:	e7f2      	b.n	800af5a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 800af74:	0802239d 	.word	0x0802239d
 800af78:	080225f7 	.word	0x080225f7
 800af7c:	080223e2 	.word	0x080223e2
 800af80:	2000d406 	.word	0x2000d406
 800af84:	08022408 	.word	0x08022408

0800af88 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800af88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af8c:	4698      	mov	r8, r3
 800af8e:	6803      	ldr	r3, [r0, #0]
 800af90:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800af92:	4b0f      	ldr	r3, [pc, #60]	; (800afd0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800af94:	b087      	sub	sp, #28
 800af96:	f8b3 9000 	ldrh.w	r9, [r3]
 800af9a:	460e      	mov	r6, r1
 800af9c:	4617      	mov	r7, r2
 800af9e:	4604      	mov	r4, r0
 800afa0:	f7f5 ff24 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800afa4:	6803      	ldr	r3, [r0, #0]
 800afa6:	6a1b      	ldr	r3, [r3, #32]
 800afa8:	4798      	blx	r3
 800afaa:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800afae:	9302      	str	r3, [sp, #8]
 800afb0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800afb4:	9301      	str	r3, [sp, #4]
 800afb6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800afba:	9300      	str	r3, [sp, #0]
 800afbc:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800afc0:	4643      	mov	r3, r8
 800afc2:	463a      	mov	r2, r7
 800afc4:	4631      	mov	r1, r6
 800afc6:	4620      	mov	r0, r4
 800afc8:	47a8      	blx	r5
 800afca:	b007      	add	sp, #28
 800afcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800afd0:	2000d406 	.word	0x2000d406

0800afd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800afd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800afd8:	4604      	mov	r4, r0
 800afda:	b08b      	sub	sp, #44	; 0x2c
 800afdc:	4610      	mov	r0, r2
 800afde:	460d      	mov	r5, r1
 800afe0:	4691      	mov	r9, r2
 800afe2:	461e      	mov	r6, r3
 800afe4:	f006 ff06 	bl	8011df4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800afe8:	2800      	cmp	r0, #0
 800afea:	f000 80a0 	beq.w	800b12e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800afee:	6823      	ldr	r3, [r4, #0]
 800aff0:	f8df b170 	ldr.w	fp, [pc, #368]	; 800b164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 800aff4:	6a1b      	ldr	r3, [r3, #32]
 800aff6:	f8df a170 	ldr.w	sl, [pc, #368]	; 800b168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 800affa:	4620      	mov	r0, r4
 800affc:	4798      	blx	r3
 800affe:	6823      	ldr	r3, [r4, #0]
 800b000:	4620      	mov	r0, r4
 800b002:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b004:	4798      	blx	r3
 800b006:	f8bb 3000 	ldrh.w	r3, [fp]
 800b00a:	9301      	str	r3, [sp, #4]
 800b00c:	f8ba 3000 	ldrh.w	r3, [sl]
 800b010:	9302      	str	r3, [sp, #8]
 800b012:	4b51      	ldr	r3, [pc, #324]	; (800b158 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800b014:	881a      	ldrh	r2, [r3, #0]
 800b016:	9203      	str	r2, [sp, #12]
 800b018:	4a50      	ldr	r2, [pc, #320]	; (800b15c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800b01a:	8812      	ldrh	r2, [r2, #0]
 800b01c:	9204      	str	r2, [sp, #16]
 800b01e:	af0a      	add	r7, sp, #40	; 0x28
 800b020:	4a4f      	ldr	r2, [pc, #316]	; (800b160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 800b022:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 800b026:	7812      	ldrb	r2, [r2, #0]
 800b028:	4698      	mov	r8, r3
 800b02a:	4638      	mov	r0, r7
 800b02c:	2a00      	cmp	r2, #0
 800b02e:	f040 8081 	bne.w	800b134 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 800b032:	f006 ff99 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b036:	f8ab 0000 	strh.w	r0, [fp]
 800b03a:	4638      	mov	r0, r7
 800b03c:	f006 ffce 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b040:	f8aa 0000 	strh.w	r0, [sl]
 800b044:	4638      	mov	r0, r7
 800b046:	f006 ff8f 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b04a:	f8a8 0000 	strh.w	r0, [r8]
 800b04e:	4638      	mov	r0, r7
 800b050:	f006 ffc4 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b054:	4b41      	ldr	r3, [pc, #260]	; (800b15c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800b056:	8018      	strh	r0, [r3, #0]
 800b058:	4648      	mov	r0, r9
 800b05a:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b05e:	f006 fec9 	bl	8011df4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b062:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b066:	2200      	movs	r2, #0
 800b068:	4611      	mov	r1, r2
 800b06a:	4628      	mov	r0, r5
 800b06c:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b070:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b074:	f7f7 ff65 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
 800b078:	2301      	movs	r3, #1
 800b07a:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b07e:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b082:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b086:	2b00      	cmp	r3, #0
 800b088:	dd5c      	ble.n	800b144 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800b08a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b08e:	2b00      	cmp	r3, #0
 800b090:	dd58      	ble.n	800b144 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 800b092:	462a      	mov	r2, r5
 800b094:	ab08      	add	r3, sp, #32
 800b096:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b09a:	6851      	ldr	r1, [r2, #4]
 800b09c:	c303      	stmia	r3!, {r0, r1}
 800b09e:	4631      	mov	r1, r6
 800b0a0:	a808      	add	r0, sp, #32
 800b0a2:	f7ff fc81 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800b0a6:	a807      	add	r0, sp, #28
 800b0a8:	f007 f8f0 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b0ac:	4606      	mov	r6, r0
 800b0ae:	f7f5 fe9d 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b0b2:	6803      	ldr	r3, [r0, #0]
 800b0b4:	6a1b      	ldr	r3, [r3, #32]
 800b0b6:	4798      	blx	r3
 800b0b8:	4286      	cmp	r6, r0
 800b0ba:	d04a      	beq.n	800b152 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 800b0bc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b0be:	b150      	cbz	r0, 800b0d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800b0c0:	a807      	add	r0, sp, #28
 800b0c2:	f007 f8e3 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b0c6:	4606      	mov	r6, r0
 800b0c8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b0ca:	6803      	ldr	r3, [r0, #0]
 800b0cc:	6a1b      	ldr	r3, [r3, #32]
 800b0ce:	4798      	blx	r3
 800b0d0:	1a33      	subs	r3, r6, r0
 800b0d2:	4258      	negs	r0, r3
 800b0d4:	4158      	adcs	r0, r3
 800b0d6:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b0da:	2600      	movs	r6, #0
 800b0dc:	682a      	ldr	r2, [r5, #0]
 800b0de:	696b      	ldr	r3, [r5, #20]
 800b0e0:	616e      	str	r6, [r5, #20]
 800b0e2:	9305      	str	r3, [sp, #20]
 800b0e4:	6892      	ldr	r2, [r2, #8]
 800b0e6:	a908      	add	r1, sp, #32
 800b0e8:	4628      	mov	r0, r5
 800b0ea:	4790      	blx	r2
 800b0ec:	9b05      	ldr	r3, [sp, #20]
 800b0ee:	616b      	str	r3, [r5, #20]
 800b0f0:	4652      	mov	r2, sl
 800b0f2:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b0f6:	4649      	mov	r1, r9
 800b0f8:	4628      	mov	r0, r5
 800b0fa:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b0fe:	f7f7 ff20 	bl	8002f42 <_ZN8touchgfx8Drawable5setXYEss>
 800b102:	4b18      	ldr	r3, [pc, #96]	; (800b164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 800b104:	9a01      	ldr	r2, [sp, #4]
 800b106:	801a      	strh	r2, [r3, #0]
 800b108:	4b17      	ldr	r3, [pc, #92]	; (800b168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 800b10a:	9a02      	ldr	r2, [sp, #8]
 800b10c:	801a      	strh	r2, [r3, #0]
 800b10e:	4b12      	ldr	r3, [pc, #72]	; (800b158 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 800b110:	9a03      	ldr	r2, [sp, #12]
 800b112:	801a      	strh	r2, [r3, #0]
 800b114:	4b11      	ldr	r3, [pc, #68]	; (800b15c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800b116:	9a04      	ldr	r2, [sp, #16]
 800b118:	801a      	strh	r2, [r3, #0]
 800b11a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b11e:	6823      	ldr	r3, [r4, #0]
 800b120:	4620      	mov	r0, r4
 800b122:	6a1b      	ldr	r3, [r3, #32]
 800b124:	4798      	blx	r3
 800b126:	6823      	ldr	r3, [r4, #0]
 800b128:	4620      	mov	r0, r4
 800b12a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b12c:	4798      	blx	r3
 800b12e:	b00b      	add	sp, #44	; 0x2c
 800b130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b134:	f006 ff52 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b138:	f8ab 0000 	strh.w	r0, [fp]
 800b13c:	4638      	mov	r0, r7
 800b13e:	f006 ff13 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b142:	e77d      	b.n	800b040 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 800b144:	462a      	mov	r2, r5
 800b146:	ab08      	add	r3, sp, #32
 800b148:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b14c:	6851      	ldr	r1, [r2, #4]
 800b14e:	c303      	stmia	r3!, {r0, r1}
 800b150:	e7a9      	b.n	800b0a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 800b152:	2000      	movs	r0, #0
 800b154:	e7bf      	b.n	800b0d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 800b156:	bf00      	nop
 800b158:	2000d400 	.word	0x2000d400
 800b15c:	2000d402 	.word	0x2000d402
 800b160:	2000d404 	.word	0x2000d404
 800b164:	2000d406 	.word	0x2000d406
 800b168:	2000d408 	.word	0x2000d408

0800b16c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b16c:	b510      	push	{r4, lr}
 800b16e:	4b07      	ldr	r3, [pc, #28]	; (800b18c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b170:	781b      	ldrb	r3, [r3, #0]
 800b172:	4604      	mov	r4, r0
 800b174:	b13b      	cbz	r3, 800b186 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b176:	6803      	ldr	r3, [r0, #0]
 800b178:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b17a:	4798      	blx	r3
 800b17c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b17e:	4283      	cmp	r3, r0
 800b180:	d101      	bne.n	800b186 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b182:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b184:	bd10      	pop	{r4, pc}
 800b186:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b188:	e7fc      	b.n	800b184 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b18a:	bf00      	nop
 800b18c:	2000d40a 	.word	0x2000d40a

0800b190 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b190:	b510      	push	{r4, lr}
 800b192:	4b0b      	ldr	r3, [pc, #44]	; (800b1c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800b194:	781b      	ldrb	r3, [r3, #0]
 800b196:	4604      	mov	r4, r0
 800b198:	b95b      	cbnz	r3, 800b1b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b19a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b19e:	2b02      	cmp	r3, #2
 800b1a0:	d007      	beq.n	800b1b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b1a2:	6840      	ldr	r0, [r0, #4]
 800b1a4:	f000 fbea 	bl	800b97c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b1a8:	b118      	cbz	r0, 800b1b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b1aa:	6862      	ldr	r2, [r4, #4]
 800b1ac:	7a53      	ldrb	r3, [r2, #9]
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d0fc      	beq.n	800b1ac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b1b2:	f7f5 fd83 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b1b6:	4620      	mov	r0, r4
 800b1b8:	f7ff ffd8 	bl	800b16c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b1bc:	bd10      	pop	{r4, pc}
 800b1be:	bf00      	nop
 800b1c0:	2000d40a 	.word	0x2000d40a

0800b1c4 <_ZN8touchgfx3HAL10initializeEv>:
 800b1c4:	b510      	push	{r4, lr}
 800b1c6:	4604      	mov	r4, r0
 800b1c8:	f7f5 fd50 	bl	8000c6c <_ZN8touchgfx10OSWrappers10initializeEv>
 800b1cc:	6860      	ldr	r0, [r4, #4]
 800b1ce:	6803      	ldr	r3, [r0, #0]
 800b1d0:	68db      	ldr	r3, [r3, #12]
 800b1d2:	4798      	blx	r3
 800b1d4:	68e0      	ldr	r0, [r4, #12]
 800b1d6:	6803      	ldr	r3, [r0, #0]
 800b1d8:	689b      	ldr	r3, [r3, #8]
 800b1da:	4798      	blx	r3
 800b1dc:	6823      	ldr	r3, [r4, #0]
 800b1de:	4620      	mov	r0, r4
 800b1e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b1e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b1e6:	4718      	bx	r3

0800b1e8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800b1e8:	b508      	push	{r3, lr}
 800b1ea:	290d      	cmp	r1, #13
 800b1ec:	d817      	bhi.n	800b21e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800b1ee:	e8df f001 	tbb	[pc, r1]
 800b1f2:	090b      	.short	0x090b
 800b1f4:	0d0d0d07 	.word	0x0d0d0d07
 800b1f8:	1414140d 	.word	0x1414140d
 800b1fc:	0d0d1414 	.word	0x0d0d1414
 800b200:	2020      	movs	r0, #32
 800b202:	bd08      	pop	{r3, pc}
 800b204:	2018      	movs	r0, #24
 800b206:	e7fc      	b.n	800b202 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b208:	2010      	movs	r0, #16
 800b20a:	e7fa      	b.n	800b202 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b20c:	4b05      	ldr	r3, [pc, #20]	; (800b224 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800b20e:	4a06      	ldr	r2, [pc, #24]	; (800b228 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800b210:	4806      	ldr	r0, [pc, #24]	; (800b22c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800b212:	f44f 7111 	mov.w	r1, #580	; 0x244
 800b216:	f014 f8ed 	bl	801f3f4 <__assert_func>
 800b21a:	2008      	movs	r0, #8
 800b21c:	e7f1      	b.n	800b202 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b21e:	2000      	movs	r0, #0
 800b220:	e7ef      	b.n	800b202 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b222:	bf00      	nop
 800b224:	080224db 	.word	0x080224db
 800b228:	080227b9 	.word	0x080227b9
 800b22c:	080223e2 	.word	0x080223e2

0800b230 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800b230:	b570      	push	{r4, r5, r6, lr}
 800b232:	460d      	mov	r5, r1
 800b234:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800b238:	4616      	mov	r6, r2
 800b23a:	461c      	mov	r4, r3
 800b23c:	f7ff ffd4 	bl	800b1e8 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800b240:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800b244:	10c0      	asrs	r0, r0, #3
 800b246:	fb06 5101 	mla	r1, r6, r1, r5
 800b24a:	fb00 4001 	mla	r0, r0, r1, r4
 800b24e:	bd70      	pop	{r4, r5, r6, pc}

0800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800b250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b254:	b08a      	sub	sp, #40	; 0x28
 800b256:	f04f 0c00 	mov.w	ip, #0
 800b25a:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800b25e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b262:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800b266:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800b26a:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800b26e:	f8cd c020 	str.w	ip, [sp, #32]
 800b272:	f1b8 0f02 	cmp.w	r8, #2
 800b276:	4604      	mov	r4, r0
 800b278:	469a      	mov	sl, r3
 800b27a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800b27e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b282:	d030      	beq.n	800b2e6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800b284:	2bff      	cmp	r3, #255	; 0xff
 800b286:	d12c      	bne.n	800b2e2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800b288:	4560      	cmp	r0, ip
 800b28a:	bf14      	ite	ne
 800b28c:	2004      	movne	r0, #4
 800b28e:	2001      	moveq	r0, #1
 800b290:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800b294:	9204      	str	r2, [sp, #16]
 800b296:	4620      	mov	r0, r4
 800b298:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800b29c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b2a0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b2a4:	f8ad 6018 	strh.w	r6, [sp, #24]
 800b2a8:	f8ad 501a 	strh.w	r5, [sp, #26]
 800b2ac:	f7ff ff5e 	bl	800b16c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b2b0:	e9cd 9700 	strd	r9, r7, [sp]
 800b2b4:	4603      	mov	r3, r0
 800b2b6:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800b2ba:	4651      	mov	r1, sl
 800b2bc:	4620      	mov	r0, r4
 800b2be:	f7ff ffb7 	bl	800b230 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b2c2:	f8ad 901e 	strh.w	r9, [sp, #30]
 800b2c6:	9005      	str	r0, [sp, #20]
 800b2c8:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800b2cc:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800b2d0:	b106      	cbz	r6, 800b2d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800b2d2:	b98d      	cbnz	r5, 800b2f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800b2d4:	4b12      	ldr	r3, [pc, #72]	; (800b320 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800b2d6:	4a13      	ldr	r2, [pc, #76]	; (800b324 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800b2d8:	f240 11c3 	movw	r1, #451	; 0x1c3
 800b2dc:	4812      	ldr	r0, [pc, #72]	; (800b328 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800b2de:	f014 f889 	bl	801f3f4 <__assert_func>
 800b2e2:	2004      	movs	r0, #4
 800b2e4:	e7d4      	b.n	800b290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800b2e6:	2bff      	cmp	r3, #255	; 0xff
 800b2e8:	d104      	bne.n	800b2f4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800b2ea:	2800      	cmp	r0, #0
 800b2ec:	bf14      	ite	ne
 800b2ee:	2040      	movne	r0, #64	; 0x40
 800b2f0:	2020      	moveq	r0, #32
 800b2f2:	e7cd      	b.n	800b290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800b2f4:	2040      	movs	r0, #64	; 0x40
 800b2f6:	e7cb      	b.n	800b290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800b2f8:	6823      	ldr	r3, [r4, #0]
 800b2fa:	9d02      	ldr	r5, [sp, #8]
 800b2fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b2fe:	4620      	mov	r0, r4
 800b300:	4798      	blx	r3
 800b302:	4228      	tst	r0, r5
 800b304:	d104      	bne.n	800b310 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800b306:	4b09      	ldr	r3, [pc, #36]	; (800b32c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800b308:	4a06      	ldr	r2, [pc, #24]	; (800b324 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800b30a:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 800b30e:	e7e5      	b.n	800b2dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800b310:	6860      	ldr	r0, [r4, #4]
 800b312:	6803      	ldr	r3, [r0, #0]
 800b314:	a902      	add	r1, sp, #8
 800b316:	685b      	ldr	r3, [r3, #4]
 800b318:	4798      	blx	r3
 800b31a:	b00a      	add	sp, #40	; 0x28
 800b31c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b320:	0802245e 	.word	0x0802245e
 800b324:	0802265b 	.word	0x0802265b
 800b328:	080223e2 	.word	0x080223e2
 800b32c:	08022496 	.word	0x08022496

0800b330 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800b330:	b510      	push	{r4, lr}
 800b332:	b08a      	sub	sp, #40	; 0x28
 800b334:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800b338:	9408      	str	r4, [sp, #32]
 800b33a:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800b33e:	9407      	str	r4, [sp, #28]
 800b340:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800b344:	9406      	str	r4, [sp, #24]
 800b346:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800b34a:	9405      	str	r4, [sp, #20]
 800b34c:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800b350:	9404      	str	r4, [sp, #16]
 800b352:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800b356:	9403      	str	r4, [sp, #12]
 800b358:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800b35c:	9402      	str	r4, [sp, #8]
 800b35e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800b362:	e9cd 3400 	strd	r3, r4, [sp]
 800b366:	4613      	mov	r3, r2
 800b368:	2200      	movs	r2, #0
 800b36a:	f7ff ff71 	bl	800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800b36e:	b00a      	add	sp, #40	; 0x28
 800b370:	bd10      	pop	{r4, pc}
	...

0800b374 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800b374:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b376:	b08b      	sub	sp, #44	; 0x2c
 800b378:	4616      	mov	r6, r2
 800b37a:	460d      	mov	r5, r1
 800b37c:	461f      	mov	r7, r3
 800b37e:	4604      	mov	r4, r0
 800b380:	f7f5 fd34 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b384:	6803      	ldr	r3, [r0, #0]
 800b386:	6a1b      	ldr	r3, [r3, #32]
 800b388:	4798      	blx	r3
 800b38a:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800b38e:	4b0d      	ldr	r3, [pc, #52]	; (800b3c4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800b390:	881b      	ldrh	r3, [r3, #0]
 800b392:	9306      	str	r3, [sp, #24]
 800b394:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b398:	9305      	str	r3, [sp, #20]
 800b39a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b39e:	9304      	str	r3, [sp, #16]
 800b3a0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3a4:	9303      	str	r3, [sp, #12]
 800b3a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b3aa:	9302      	str	r3, [sp, #8]
 800b3ac:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b3b0:	2200      	movs	r2, #0
 800b3b2:	e9cd 7300 	strd	r7, r3, [sp]
 800b3b6:	4629      	mov	r1, r5
 800b3b8:	4633      	mov	r3, r6
 800b3ba:	4620      	mov	r0, r4
 800b3bc:	f7ff ff48 	bl	800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800b3c0:	b00b      	add	sp, #44	; 0x2c
 800b3c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3c4:	2000d406 	.word	0x2000d406

0800b3c8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800b3c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3cc:	461f      	mov	r7, r3
 800b3ce:	4b14      	ldr	r3, [pc, #80]	; (800b420 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800b3d0:	b08a      	sub	sp, #40	; 0x28
 800b3d2:	4616      	mov	r6, r2
 800b3d4:	f8b3 8000 	ldrh.w	r8, [r3]
 800b3d8:	460d      	mov	r5, r1
 800b3da:	4604      	mov	r4, r0
 800b3dc:	f7f5 fd06 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b3e0:	6803      	ldr	r3, [r0, #0]
 800b3e2:	6a1b      	ldr	r3, [r3, #32]
 800b3e4:	4798      	blx	r3
 800b3e6:	2302      	movs	r3, #2
 800b3e8:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800b3ec:	2301      	movs	r3, #1
 800b3ee:	9305      	str	r3, [sp, #20]
 800b3f0:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b3f4:	9304      	str	r3, [sp, #16]
 800b3f6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3fa:	9303      	str	r3, [sp, #12]
 800b3fc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b400:	9302      	str	r3, [sp, #8]
 800b402:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b406:	9008      	str	r0, [sp, #32]
 800b408:	e9cd 7300 	strd	r7, r3, [sp]
 800b40c:	2200      	movs	r2, #0
 800b40e:	4633      	mov	r3, r6
 800b410:	4629      	mov	r1, r5
 800b412:	4620      	mov	r0, r4
 800b414:	f7ff ff1c 	bl	800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800b418:	b00a      	add	sp, #40	; 0x28
 800b41a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b41e:	bf00      	nop
 800b420:	2000d406 	.word	0x2000d406

0800b424 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800b424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b428:	b08b      	sub	sp, #44	; 0x2c
 800b42a:	469b      	mov	fp, r3
 800b42c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800b430:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800b434:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800b438:	2fff      	cmp	r7, #255	; 0xff
 800b43a:	bf14      	ite	ne
 800b43c:	2308      	movne	r3, #8
 800b43e:	2302      	moveq	r3, #2
 800b440:	2600      	movs	r6, #0
 800b442:	4604      	mov	r4, r0
 800b444:	4689      	mov	r9, r1
 800b446:	4692      	mov	sl, r2
 800b448:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800b44c:	9608      	str	r6, [sp, #32]
 800b44e:	f7ff fe8d 	bl	800b16c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b452:	e9cd 8500 	strd	r8, r5, [sp]
 800b456:	4603      	mov	r3, r0
 800b458:	465a      	mov	r2, fp
 800b45a:	4651      	mov	r1, sl
 800b45c:	4620      	mov	r0, r4
 800b45e:	f7ff fee7 	bl	800b230 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b462:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b466:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b46a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b46e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b472:	6823      	ldr	r3, [r4, #0]
 800b474:	9005      	str	r0, [sp, #20]
 800b476:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800b47a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800b47e:	f8ad 601c 	strh.w	r6, [sp, #28]
 800b482:	f8ad 801e 	strh.w	r8, [sp, #30]
 800b486:	f8cd 9020 	str.w	r9, [sp, #32]
 800b48a:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800b48e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b490:	9d02      	ldr	r5, [sp, #8]
 800b492:	4620      	mov	r0, r4
 800b494:	4798      	blx	r3
 800b496:	4228      	tst	r0, r5
 800b498:	d106      	bne.n	800b4a8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800b49a:	4b07      	ldr	r3, [pc, #28]	; (800b4b8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800b49c:	4a07      	ldr	r2, [pc, #28]	; (800b4bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800b49e:	4808      	ldr	r0, [pc, #32]	; (800b4c0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800b4a0:	f240 11fb 	movw	r1, #507	; 0x1fb
 800b4a4:	f013 ffa6 	bl	801f3f4 <__assert_func>
 800b4a8:	6860      	ldr	r0, [r4, #4]
 800b4aa:	6803      	ldr	r3, [r0, #0]
 800b4ac:	a902      	add	r1, sp, #8
 800b4ae:	685b      	ldr	r3, [r3, #4]
 800b4b0:	4798      	blx	r3
 800b4b2:	b00b      	add	sp, #44	; 0x2c
 800b4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b4b8:	08022496 	.word	0x08022496
 800b4bc:	08022724 	.word	0x08022724
 800b4c0:	080223e2 	.word	0x080223e2

0800b4c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b4c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b4c8:	461f      	mov	r7, r3
 800b4ca:	4b0b      	ldr	r3, [pc, #44]	; (800b4f8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b4cc:	460d      	mov	r5, r1
 800b4ce:	f8b3 8000 	ldrh.w	r8, [r3]
 800b4d2:	4616      	mov	r6, r2
 800b4d4:	4604      	mov	r4, r0
 800b4d6:	f7f5 fc89 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b4da:	6803      	ldr	r3, [r0, #0]
 800b4dc:	6a1b      	ldr	r3, [r3, #32]
 800b4de:	4798      	blx	r3
 800b4e0:	463b      	mov	r3, r7
 800b4e2:	e9cd 8000 	strd	r8, r0, [sp]
 800b4e6:	4632      	mov	r2, r6
 800b4e8:	4629      	mov	r1, r5
 800b4ea:	4620      	mov	r0, r4
 800b4ec:	f7ff fea0 	bl	800b230 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b4f0:	b002      	add	sp, #8
 800b4f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4f6:	bf00      	nop
 800b4f8:	2000d406 	.word	0x2000d406

0800b4fc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800b4fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b500:	b088      	sub	sp, #32
 800b502:	4698      	mov	r8, r3
 800b504:	2300      	movs	r3, #0
 800b506:	9306      	str	r3, [sp, #24]
 800b508:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b50c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800b510:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b514:	f8ad 6010 	strh.w	r6, [sp, #16]
 800b518:	e9cd 3100 	strd	r3, r1, [sp]
 800b51c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b520:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b524:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800b528:	f88d 301c 	strb.w	r3, [sp, #28]
 800b52c:	4617      	mov	r7, r2
 800b52e:	4604      	mov	r4, r0
 800b530:	f8ad 5012 	strh.w	r5, [sp, #18]
 800b534:	f7ff fe1a 	bl	800b16c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b538:	4642      	mov	r2, r8
 800b53a:	4603      	mov	r3, r0
 800b53c:	4639      	mov	r1, r7
 800b53e:	4620      	mov	r0, r4
 800b540:	f7ff ffc0 	bl	800b4c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b544:	4b16      	ldr	r3, [pc, #88]	; (800b5a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800b546:	9003      	str	r0, [sp, #12]
 800b548:	881b      	ldrh	r3, [r3, #0]
 800b54a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b54e:	f7f5 fc4d 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b552:	6803      	ldr	r3, [r0, #0]
 800b554:	6a1b      	ldr	r3, [r3, #32]
 800b556:	4798      	blx	r3
 800b558:	f88d 001e 	strb.w	r0, [sp, #30]
 800b55c:	f88d 001d 	strb.w	r0, [sp, #29]
 800b560:	b106      	cbz	r6, 800b564 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800b562:	b935      	cbnz	r5, 800b572 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800b564:	4b0f      	ldr	r3, [pc, #60]	; (800b5a4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800b566:	4a10      	ldr	r2, [pc, #64]	; (800b5a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800b568:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 800b56c:	480f      	ldr	r0, [pc, #60]	; (800b5ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800b56e:	f013 ff41 	bl	801f3f4 <__assert_func>
 800b572:	6823      	ldr	r3, [r4, #0]
 800b574:	9d00      	ldr	r5, [sp, #0]
 800b576:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b578:	4620      	mov	r0, r4
 800b57a:	4798      	blx	r3
 800b57c:	4228      	tst	r0, r5
 800b57e:	d104      	bne.n	800b58a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800b580:	4b0b      	ldr	r3, [pc, #44]	; (800b5b0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800b582:	4a09      	ldr	r2, [pc, #36]	; (800b5a8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800b584:	f240 11e1 	movw	r1, #481	; 0x1e1
 800b588:	e7f0      	b.n	800b56c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800b58a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b58c:	6860      	ldr	r0, [r4, #4]
 800b58e:	9306      	str	r3, [sp, #24]
 800b590:	6803      	ldr	r3, [r0, #0]
 800b592:	4669      	mov	r1, sp
 800b594:	685b      	ldr	r3, [r3, #4]
 800b596:	4798      	blx	r3
 800b598:	b008      	add	sp, #32
 800b59a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b59e:	bf00      	nop
 800b5a0:	2000d406 	.word	0x2000d406
 800b5a4:	0802245e 	.word	0x0802245e
 800b5a8:	0802250d 	.word	0x0802250d
 800b5ac:	080223e2 	.word	0x080223e2
 800b5b0:	08022496 	.word	0x08022496

0800b5b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b5b4:	b570      	push	{r4, r5, r6, lr}
 800b5b6:	b08a      	sub	sp, #40	; 0x28
 800b5b8:	466b      	mov	r3, sp
 800b5ba:	e883 0006 	stmia.w	r3, {r1, r2}
 800b5be:	4b20      	ldr	r3, [pc, #128]	; (800b640 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800b5c0:	781b      	ldrb	r3, [r3, #0]
 800b5c2:	4604      	mov	r4, r0
 800b5c4:	b933      	cbnz	r3, 800b5d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800b5c6:	4b1f      	ldr	r3, [pc, #124]	; (800b644 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800b5c8:	4a1f      	ldr	r2, [pc, #124]	; (800b648 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800b5ca:	4820      	ldr	r0, [pc, #128]	; (800b64c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800b5cc:	f44f 7103 	mov.w	r1, #524	; 0x20c
 800b5d0:	f013 ff10 	bl	801f3f4 <__assert_func>
 800b5d4:	2300      	movs	r3, #0
 800b5d6:	9308      	str	r3, [sp, #32]
 800b5d8:	2301      	movs	r3, #1
 800b5da:	9302      	str	r3, [sp, #8]
 800b5dc:	6803      	ldr	r3, [r0, #0]
 800b5de:	f8bd 5000 	ldrh.w	r5, [sp]
 800b5e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5e4:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800b5e8:	4798      	blx	r3
 800b5ea:	4632      	mov	r2, r6
 800b5ec:	4629      	mov	r1, r5
 800b5ee:	4603      	mov	r3, r0
 800b5f0:	4620      	mov	r0, r4
 800b5f2:	f7ff ff67 	bl	800b4c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b5f6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b5f8:	9305      	str	r3, [sp, #20]
 800b5fa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b5fe:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b602:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b606:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b60a:	4b11      	ldr	r3, [pc, #68]	; (800b650 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800b60c:	9003      	str	r0, [sp, #12]
 800b60e:	881b      	ldrh	r3, [r3, #0]
 800b610:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b614:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b618:	f7f5 fbe8 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b61c:	6803      	ldr	r3, [r0, #0]
 800b61e:	6a1b      	ldr	r3, [r3, #32]
 800b620:	4798      	blx	r3
 800b622:	23ff      	movs	r3, #255	; 0xff
 800b624:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b628:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b62c:	6860      	ldr	r0, [r4, #4]
 800b62e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b632:	6803      	ldr	r3, [r0, #0]
 800b634:	a902      	add	r1, sp, #8
 800b636:	685b      	ldr	r3, [r3, #4]
 800b638:	4798      	blx	r3
 800b63a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b63c:	b00a      	add	sp, #40	; 0x28
 800b63e:	bd70      	pop	{r4, r5, r6, pc}
 800b640:	2000d40b 	.word	0x2000d40b
 800b644:	0802232f 	.word	0x0802232f
 800b648:	080225b1 	.word	0x080225b1
 800b64c:	080223e2 	.word	0x080223e2
 800b650:	2000d406 	.word	0x2000d406

0800b654 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b654:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b656:	b08b      	sub	sp, #44	; 0x2c
 800b658:	466d      	mov	r5, sp
 800b65a:	e885 0006 	stmia.w	r5, {r1, r2}
 800b65e:	461d      	mov	r5, r3
 800b660:	2300      	movs	r3, #0
 800b662:	9308      	str	r3, [sp, #32]
 800b664:	2301      	movs	r3, #1
 800b666:	9302      	str	r3, [sp, #8]
 800b668:	6803      	ldr	r3, [r0, #0]
 800b66a:	f8bd 6000 	ldrh.w	r6, [sp]
 800b66e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b670:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b674:	4604      	mov	r4, r0
 800b676:	4798      	blx	r3
 800b678:	463a      	mov	r2, r7
 800b67a:	4631      	mov	r1, r6
 800b67c:	4603      	mov	r3, r0
 800b67e:	4620      	mov	r0, r4
 800b680:	f7ff ff20 	bl	800b4c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b684:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b688:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b68c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b690:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b694:	4b0e      	ldr	r3, [pc, #56]	; (800b6d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800b696:	9003      	str	r0, [sp, #12]
 800b698:	881b      	ldrh	r3, [r3, #0]
 800b69a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b69e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b6a0:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b6a4:	9505      	str	r5, [sp, #20]
 800b6a6:	f7f5 fba1 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800b6aa:	6803      	ldr	r3, [r0, #0]
 800b6ac:	6a1b      	ldr	r3, [r3, #32]
 800b6ae:	4798      	blx	r3
 800b6b0:	23ff      	movs	r3, #255	; 0xff
 800b6b2:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b6b6:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b6ba:	6860      	ldr	r0, [r4, #4]
 800b6bc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b6c0:	6803      	ldr	r3, [r0, #0]
 800b6c2:	a902      	add	r1, sp, #8
 800b6c4:	685b      	ldr	r3, [r3, #4]
 800b6c6:	4798      	blx	r3
 800b6c8:	4628      	mov	r0, r5
 800b6ca:	b00b      	add	sp, #44	; 0x2c
 800b6cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b6ce:	bf00      	nop
 800b6d0:	2000d406 	.word	0x2000d406

0800b6d4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b6d4:	b570      	push	{r4, r5, r6, lr}
 800b6d6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b6da:	4604      	mov	r4, r0
 800b6dc:	b19b      	cbz	r3, 800b706 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b6de:	2002      	movs	r0, #2
 800b6e0:	f7f5 f876 	bl	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b6e4:	2300      	movs	r3, #0
 800b6e6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b6ea:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b6ee:	6823      	ldr	r3, [r4, #0]
 800b6f0:	4620      	mov	r0, r4
 800b6f2:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800b6f6:	f7ff fd39 	bl	800b16c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6fa:	462b      	mov	r3, r5
 800b6fc:	4601      	mov	r1, r0
 800b6fe:	4620      	mov	r0, r4
 800b700:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b704:	4718      	bx	r3
 800b706:	bd70      	pop	{r4, r5, r6, pc}

0800b708 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800b708:	b570      	push	{r4, r5, r6, lr}
 800b70a:	4605      	mov	r5, r0
 800b70c:	460c      	mov	r4, r1
 800b70e:	2003      	movs	r0, #3
 800b710:	b149      	cbz	r1, 800b726 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800b712:	f7f5 f825 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b716:	6928      	ldr	r0, [r5, #16]
 800b718:	b168      	cbz	r0, 800b736 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b71a:	6803      	ldr	r3, [r0, #0]
 800b71c:	695b      	ldr	r3, [r3, #20]
 800b71e:	2101      	movs	r1, #1
 800b720:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b724:	4718      	bx	r3
 800b726:	f7f5 f837 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b72a:	6928      	ldr	r0, [r5, #16]
 800b72c:	b118      	cbz	r0, 800b736 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800b72e:	6803      	ldr	r3, [r0, #0]
 800b730:	4621      	mov	r1, r4
 800b732:	695b      	ldr	r3, [r3, #20]
 800b734:	e7f4      	b.n	800b720 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800b736:	bd70      	pop	{r4, r5, r6, pc}

0800b738 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 800b738:	4770      	bx	lr

0800b73a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b73a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b73e:	1a13      	subs	r3, r2, r0
 800b740:	4258      	negs	r0, r3
 800b742:	4158      	adcs	r0, r3
 800b744:	4770      	bx	lr

0800b746 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b746:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b74a:	1a9b      	subs	r3, r3, r2
 800b74c:	2b00      	cmp	r3, #0
 800b74e:	bfdc      	itt	le
 800b750:	6882      	ldrle	r2, [r0, #8]
 800b752:	189b      	addle	r3, r3, r2
 800b754:	2b01      	cmp	r3, #1
 800b756:	bfcc      	ite	gt
 800b758:	2000      	movgt	r0, #0
 800b75a:	2001      	movle	r0, #1
 800b75c:	4770      	bx	lr

0800b75e <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b75e:	6902      	ldr	r2, [r0, #16]
 800b760:	6840      	ldr	r0, [r0, #4]
 800b762:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800b766:	4770      	bx	lr

0800b768 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b768:	6803      	ldr	r3, [r0, #0]
 800b76a:	691b      	ldr	r3, [r3, #16]
 800b76c:	4718      	bx	r3

0800b76e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b76e:	4770      	bx	lr

0800b770 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b770:	4770      	bx	lr

0800b772 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b772:	4770      	bx	lr

0800b774 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b774:	b570      	push	{r4, r5, r6, lr}
 800b776:	2301      	movs	r3, #1
 800b778:	7203      	strb	r3, [r0, #8]
 800b77a:	4604      	mov	r4, r0
 800b77c:	6840      	ldr	r0, [r0, #4]
 800b77e:	6803      	ldr	r3, [r0, #0]
 800b780:	699b      	ldr	r3, [r3, #24]
 800b782:	4798      	blx	r3
 800b784:	6803      	ldr	r3, [r0, #0]
 800b786:	2b08      	cmp	r3, #8
 800b788:	4605      	mov	r5, r0
 800b78a:	d01e      	beq.n	800b7ca <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800b78c:	d80b      	bhi.n	800b7a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b78e:	2b02      	cmp	r3, #2
 800b790:	d027      	beq.n	800b7e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b792:	2b04      	cmp	r3, #4
 800b794:	d011      	beq.n	800b7ba <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b796:	2b01      	cmp	r3, #1
 800b798:	d028      	beq.n	800b7ec <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b79a:	4b17      	ldr	r3, [pc, #92]	; (800b7f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800b79c:	4a17      	ldr	r2, [pc, #92]	; (800b7fc <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800b79e:	4818      	ldr	r0, [pc, #96]	; (800b800 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800b7a0:	218c      	movs	r1, #140	; 0x8c
 800b7a2:	f013 fe27 	bl	801f3f4 <__assert_func>
 800b7a6:	2b40      	cmp	r3, #64	; 0x40
 800b7a8:	d020      	beq.n	800b7ec <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b7aa:	d801      	bhi.n	800b7b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b7ac:	2b20      	cmp	r3, #32
 800b7ae:	e7f3      	b.n	800b798 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b7b0:	2b80      	cmp	r3, #128	; 0x80
 800b7b2:	d01b      	beq.n	800b7ec <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b7b4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b7b8:	e7ee      	b.n	800b798 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b7ba:	6823      	ldr	r3, [r4, #0]
 800b7bc:	7f01      	ldrb	r1, [r0, #28]
 800b7be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b7c0:	4620      	mov	r0, r4
 800b7c2:	4798      	blx	r3
 800b7c4:	6823      	ldr	r3, [r4, #0]
 800b7c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b7c8:	e006      	b.n	800b7d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b7ca:	6823      	ldr	r3, [r4, #0]
 800b7cc:	7f01      	ldrb	r1, [r0, #28]
 800b7ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b7d0:	4620      	mov	r0, r4
 800b7d2:	4798      	blx	r3
 800b7d4:	6823      	ldr	r3, [r4, #0]
 800b7d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b7d8:	4629      	mov	r1, r5
 800b7da:	4620      	mov	r0, r4
 800b7dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7e0:	4718      	bx	r3
 800b7e2:	6823      	ldr	r3, [r4, #0]
 800b7e4:	4620      	mov	r0, r4
 800b7e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b7e8:	4798      	blx	r3
 800b7ea:	e7f3      	b.n	800b7d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800b7ec:	6823      	ldr	r3, [r4, #0]
 800b7ee:	4620      	mov	r0, r4
 800b7f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b7f2:	4798      	blx	r3
 800b7f4:	e7e6      	b.n	800b7c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800b7f6:	bf00      	nop
 800b7f8:	08022802 	.word	0x08022802
 800b7fc:	080228c4 	.word	0x080228c4
 800b800:	08022827 	.word	0x08022827

0800b804 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b804:	b570      	push	{r4, r5, r6, lr}
 800b806:	4604      	mov	r4, r0
 800b808:	460e      	mov	r6, r1
 800b80a:	6860      	ldr	r0, [r4, #4]
 800b80c:	6803      	ldr	r3, [r0, #0]
 800b80e:	685b      	ldr	r3, [r3, #4]
 800b810:	4798      	blx	r3
 800b812:	2800      	cmp	r0, #0
 800b814:	d1f9      	bne.n	800b80a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b816:	4d0d      	ldr	r5, [pc, #52]	; (800b84c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800b818:	6828      	ldr	r0, [r5, #0]
 800b81a:	6803      	ldr	r3, [r0, #0]
 800b81c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b81e:	4798      	blx	r3
 800b820:	f7f5 fa5a 	bl	8000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b824:	6828      	ldr	r0, [r5, #0]
 800b826:	2101      	movs	r1, #1
 800b828:	f7ff ff86 	bl	800b738 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800b82c:	6860      	ldr	r0, [r4, #4]
 800b82e:	6803      	ldr	r3, [r0, #0]
 800b830:	4631      	mov	r1, r6
 800b832:	689b      	ldr	r3, [r3, #8]
 800b834:	4798      	blx	r3
 800b836:	6823      	ldr	r3, [r4, #0]
 800b838:	4620      	mov	r0, r4
 800b83a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b83c:	4798      	blx	r3
 800b83e:	6828      	ldr	r0, [r5, #0]
 800b840:	6803      	ldr	r3, [r0, #0]
 800b842:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b846:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b848:	4718      	bx	r3
 800b84a:	bf00      	nop
 800b84c:	2000d40c 	.word	0x2000d40c

0800b850 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b850:	b508      	push	{r3, lr}
 800b852:	f7f5 fa33 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b856:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b85a:	f7f5 ba37 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b85e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b85e:	b510      	push	{r4, lr}
 800b860:	2114      	movs	r1, #20
 800b862:	4604      	mov	r4, r0
 800b864:	f013 fd97 	bl	801f396 <_ZdlPvj>
 800b868:	4620      	mov	r0, r4
 800b86a:	bd10      	pop	{r4, pc}

0800b86c <_ZN8touchgfx13DMA_Interface5startEv>:
 800b86c:	b510      	push	{r4, lr}
 800b86e:	4604      	mov	r4, r0
 800b870:	6840      	ldr	r0, [r0, #4]
 800b872:	6803      	ldr	r3, [r0, #0]
 800b874:	681b      	ldr	r3, [r3, #0]
 800b876:	4798      	blx	r3
 800b878:	b948      	cbnz	r0, 800b88e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b87a:	7a63      	ldrb	r3, [r4, #9]
 800b87c:	b13b      	cbz	r3, 800b88e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b87e:	7a23      	ldrb	r3, [r4, #8]
 800b880:	b92b      	cbnz	r3, 800b88e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b882:	6823      	ldr	r3, [r4, #0]
 800b884:	4620      	mov	r0, r4
 800b886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b888:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b88c:	4718      	bx	r3
 800b88e:	bd10      	pop	{r4, pc}

0800b890 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b890:	b510      	push	{r4, lr}
 800b892:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800b896:	1b12      	subs	r2, r2, r4
 800b898:	2a00      	cmp	r2, #0
 800b89a:	bfdc      	itt	le
 800b89c:	6883      	ldrle	r3, [r0, #8]
 800b89e:	18d2      	addle	r2, r2, r3
 800b8a0:	2a01      	cmp	r2, #1
 800b8a2:	dd18      	ble.n	800b8d6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800b8a4:	6843      	ldr	r3, [r0, #4]
 800b8a6:	f101 021c 	add.w	r2, r1, #28
 800b8aa:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800b8ae:	f851 4b04 	ldr.w	r4, [r1], #4
 800b8b2:	f843 4b04 	str.w	r4, [r3], #4
 800b8b6:	4291      	cmp	r1, r2
 800b8b8:	d1f9      	bne.n	800b8ae <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800b8ba:	880a      	ldrh	r2, [r1, #0]
 800b8bc:	801a      	strh	r2, [r3, #0]
 800b8be:	788a      	ldrb	r2, [r1, #2]
 800b8c0:	709a      	strb	r2, [r3, #2]
 800b8c2:	68c3      	ldr	r3, [r0, #12]
 800b8c4:	6882      	ldr	r2, [r0, #8]
 800b8c6:	f3bf 8f5b 	dmb	ish
 800b8ca:	3301      	adds	r3, #1
 800b8cc:	429a      	cmp	r2, r3
 800b8ce:	bfd8      	it	le
 800b8d0:	1a9b      	suble	r3, r3, r2
 800b8d2:	60c3      	str	r3, [r0, #12]
 800b8d4:	bd10      	pop	{r4, pc}
 800b8d6:	4b03      	ldr	r3, [pc, #12]	; (800b8e4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b8d8:	4a03      	ldr	r2, [pc, #12]	; (800b8e8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b8da:	4804      	ldr	r0, [pc, #16]	; (800b8ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800b8dc:	2139      	movs	r1, #57	; 0x39
 800b8de:	f013 fd89 	bl	801f3f4 <__assert_func>
 800b8e2:	bf00      	nop
 800b8e4:	0802284d 	.word	0x0802284d
 800b8e8:	080228f4 	.word	0x080228f4
 800b8ec:	08022827 	.word	0x08022827

0800b8f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b8f0:	b510      	push	{r4, lr}
 800b8f2:	6803      	ldr	r3, [r0, #0]
 800b8f4:	681b      	ldr	r3, [r3, #0]
 800b8f6:	4604      	mov	r4, r0
 800b8f8:	4798      	blx	r3
 800b8fa:	b128      	cbz	r0, 800b908 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b8fc:	4b07      	ldr	r3, [pc, #28]	; (800b91c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b8fe:	4a08      	ldr	r2, [pc, #32]	; (800b920 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b900:	4808      	ldr	r0, [pc, #32]	; (800b924 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b902:	213f      	movs	r1, #63	; 0x3f
 800b904:	f013 fd76 	bl	801f3f4 <__assert_func>
 800b908:	6923      	ldr	r3, [r4, #16]
 800b90a:	68a2      	ldr	r2, [r4, #8]
 800b90c:	f3bf 8f5b 	dmb	ish
 800b910:	3301      	adds	r3, #1
 800b912:	429a      	cmp	r2, r3
 800b914:	bfd8      	it	le
 800b916:	1a9b      	suble	r3, r3, r2
 800b918:	6123      	str	r3, [r4, #16]
 800b91a:	bd10      	pop	{r4, pc}
 800b91c:	08022870 	.word	0x08022870
 800b920:	08022942 	.word	0x08022942
 800b924:	08022827 	.word	0x08022827

0800b928 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b928:	b570      	push	{r4, r5, r6, lr}
 800b92a:	4604      	mov	r4, r0
 800b92c:	6840      	ldr	r0, [r0, #4]
 800b92e:	6803      	ldr	r3, [r0, #0]
 800b930:	681b      	ldr	r3, [r3, #0]
 800b932:	4798      	blx	r3
 800b934:	4605      	mov	r5, r0
 800b936:	b930      	cbnz	r0, 800b946 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b938:	7a23      	ldrb	r3, [r4, #8]
 800b93a:	b123      	cbz	r3, 800b946 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b93c:	6860      	ldr	r0, [r4, #4]
 800b93e:	6803      	ldr	r3, [r0, #0]
 800b940:	695b      	ldr	r3, [r3, #20]
 800b942:	4798      	blx	r3
 800b944:	7225      	strb	r5, [r4, #8]
 800b946:	6860      	ldr	r0, [r4, #4]
 800b948:	6803      	ldr	r3, [r0, #0]
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	4798      	blx	r3
 800b94e:	b928      	cbnz	r0, 800b95c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b950:	6823      	ldr	r3, [r4, #0]
 800b952:	4620      	mov	r0, r4
 800b954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b956:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b95a:	4718      	bx	r3
 800b95c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b960:	f7f5 b9c2 	b.w	8000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b964 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b964:	b510      	push	{r4, lr}
 800b966:	4c04      	ldr	r4, [pc, #16]	; (800b978 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b968:	6082      	str	r2, [r0, #8]
 800b96a:	2200      	movs	r2, #0
 800b96c:	e9c0 4100 	strd	r4, r1, [r0]
 800b970:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b974:	bd10      	pop	{r4, pc}
 800b976:	bf00      	nop
 800b978:	080228a8 	.word	0x080228a8

0800b97c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b97c:	6840      	ldr	r0, [r0, #4]
 800b97e:	6803      	ldr	r3, [r0, #0]
 800b980:	681b      	ldr	r3, [r3, #0]
 800b982:	4718      	bx	r3

0800b984 <_ZN8touchgfx19PainterRGB565BitmapD1Ev>:
 800b984:	4770      	bx	lr
	...

0800b988 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh>:
 800b988:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b98c:	4614      	mov	r4, r2
 800b98e:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800b992:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b994:	4422      	add	r2, r4
 800b996:	60c2      	str	r2, [r0, #12]
 800b998:	4698      	mov	r8, r3
 800b99a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800b99e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b9a0:	441a      	add	r2, r3
 800b9a2:	6803      	ldr	r3, [r0, #0]
 800b9a4:	6102      	str	r2, [r0, #16]
 800b9a6:	695b      	ldr	r3, [r3, #20]
 800b9a8:	4607      	mov	r7, r0
 800b9aa:	460d      	mov	r5, r1
 800b9ac:	4798      	blx	r3
 800b9ae:	2800      	cmp	r0, #0
 800b9b0:	d037      	beq.n	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800b9b2:	68fb      	ldr	r3, [r7, #12]
 800b9b4:	990d      	ldr	r1, [sp, #52]	; 0x34
 800b9b6:	f9b7 2026 	ldrsh.w	r2, [r7, #38]	; 0x26
 800b9ba:	4419      	add	r1, r3
 800b9bc:	4291      	cmp	r1, r2
 800b9be:	bfc8      	it	gt
 800b9c0:	1ad3      	subgt	r3, r2, r3
 800b9c2:	4444      	add	r4, r8
 800b9c4:	bfc8      	it	gt
 800b9c6:	930d      	strgt	r3, [sp, #52]	; 0x34
 800b9c8:	eb05 0544 	add.w	r5, r5, r4, lsl #1
 800b9cc:	7a3b      	ldrb	r3, [r7, #8]
 800b9ce:	7a7c      	ldrb	r4, [r7, #9]
 800b9d0:	4363      	muls	r3, r4
 800b9d2:	1c5c      	adds	r4, r3, #1
 800b9d4:	f107 0820 	add.w	r8, r7, #32
 800b9d8:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 800b9dc:	4640      	mov	r0, r8
 800b9de:	1224      	asrs	r4, r4, #8
 800b9e0:	f006 fc54 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b9e4:	2800      	cmp	r0, #0
 800b9e6:	f040 8120 	bne.w	800bc2a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2a2>
 800b9ea:	e9d7 cb06 	ldrd	ip, fp, [r7, #24]
 800b9ee:	f1bb 0f00 	cmp.w	fp, #0
 800b9f2:	f000 8099 	beq.w	800bb28 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1a0>
 800b9f6:	2cff      	cmp	r4, #255	; 0xff
 800b9f8:	d149      	bne.n	800ba8e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x106>
 800b9fa:	f8df 937c 	ldr.w	r9, [pc, #892]	; 800bd78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3f0>
 800b9fe:	f81b 1000 	ldrb.w	r1, [fp, r0]
 800ba02:	5c33      	ldrb	r3, [r6, r0]
 800ba04:	434b      	muls	r3, r1
 800ba06:	1c59      	adds	r1, r3, #1
 800ba08:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 800ba0c:	1209      	asrs	r1, r1, #8
 800ba0e:	29ff      	cmp	r1, #255	; 0xff
 800ba10:	d10a      	bne.n	800ba28 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0xa0>
 800ba12:	f83c 3010 	ldrh.w	r3, [ip, r0, lsl #1]
 800ba16:	f825 3010 	strh.w	r3, [r5, r0, lsl #1]
 800ba1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ba1c:	3001      	adds	r0, #1
 800ba1e:	4283      	cmp	r3, r0
 800ba20:	d1ed      	bne.n	800b9fe <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x76>
 800ba22:	b003      	add	sp, #12
 800ba24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba28:	b2cf      	uxtb	r7, r1
 800ba2a:	2900      	cmp	r1, #0
 800ba2c:	d0f5      	beq.n	800ba1a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x92>
 800ba2e:	f835 8010 	ldrh.w	r8, [r5, r0, lsl #1]
 800ba32:	f83c 2010 	ldrh.w	r2, [ip, r0, lsl #1]
 800ba36:	43ff      	mvns	r7, r7
 800ba38:	b2ff      	uxtb	r7, r7
 800ba3a:	ea08 0309 	and.w	r3, r8, r9
 800ba3e:	437b      	muls	r3, r7
 800ba40:	ea02 0e09 	and.w	lr, r2, r9
 800ba44:	f408 6afc 	and.w	sl, r8, #2016	; 0x7e0
 800ba48:	fb01 3e0e 	mla	lr, r1, lr, r3
 800ba4c:	fb07 fa0a 	mul.w	sl, r7, sl
 800ba50:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 800ba54:	f008 081f 	and.w	r8, r8, #31
 800ba58:	fb01 a303 	mla	r3, r1, r3, sl
 800ba5c:	fb9e fef4 	sdiv	lr, lr, r4
 800ba60:	fb93 f3f4 	sdiv	r3, r3, r4
 800ba64:	ea0e 0e09 	and.w	lr, lr, r9
 800ba68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800ba6c:	f002 021f 	and.w	r2, r2, #31
 800ba70:	fb07 f708 	mul.w	r7, r7, r8
 800ba74:	ea4e 0e03 	orr.w	lr, lr, r3
 800ba78:	fb01 7102 	mla	r1, r1, r2, r7
 800ba7c:	fb91 f1f4 	sdiv	r1, r1, r4
 800ba80:	f001 011f 	and.w	r1, r1, #31
 800ba84:	ea4e 0e01 	orr.w	lr, lr, r1
 800ba88:	f825 e010 	strh.w	lr, [r5, r0, lsl #1]
 800ba8c:	e7c5      	b.n	800ba1a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x92>
 800ba8e:	f8df a2e8 	ldr.w	sl, [pc, #744]	; 800bd78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3f0>
 800ba92:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800ba96:	f81b 3000 	ldrb.w	r3, [fp, r0]
 800ba9a:	fb13 f304 	smulbb	r3, r3, r4
 800ba9e:	b29b      	uxth	r3, r3
 800baa0:	1c59      	adds	r1, r3, #1
 800baa2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800baa6:	1219      	asrs	r1, r3, #8
 800baa8:	5c33      	ldrb	r3, [r6, r0]
 800baaa:	fb13 f301 	smulbb	r3, r3, r1
 800baae:	b29b      	uxth	r3, r3
 800bab0:	1c59      	adds	r1, r3, #1
 800bab2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 800bab6:	1209      	asrs	r1, r1, #8
 800bab8:	d031      	beq.n	800bb1e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x196>
 800baba:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800babe:	f83c 3010 	ldrh.w	r3, [ip, r0, lsl #1]
 800bac2:	9301      	str	r3, [sp, #4]
 800bac4:	43cf      	mvns	r7, r1
 800bac6:	b2ff      	uxtb	r7, r7
 800bac8:	ea0e 090a 	and.w	r9, lr, sl
 800bacc:	fb07 f909 	mul.w	r9, r7, r9
 800bad0:	ea03 030a 	and.w	r3, r3, sl
 800bad4:	fb01 9303 	mla	r3, r1, r3, r9
 800bad8:	fb93 f3f8 	sdiv	r3, r3, r8
 800badc:	ea03 030a 	and.w	r3, r3, sl
 800bae0:	461a      	mov	r2, r3
 800bae2:	9b01      	ldr	r3, [sp, #4]
 800bae4:	f40e 69fc 	and.w	r9, lr, #2016	; 0x7e0
 800bae8:	fb07 f909 	mul.w	r9, r7, r9
 800baec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800baf0:	fb01 9303 	mla	r3, r1, r3, r9
 800baf4:	fb93 f3f8 	sdiv	r3, r3, r8
 800baf8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800bafc:	4313      	orrs	r3, r2
 800bafe:	9a01      	ldr	r2, [sp, #4]
 800bb00:	f00e 0e1f 	and.w	lr, lr, #31
 800bb04:	f002 021f 	and.w	r2, r2, #31
 800bb08:	fb07 f70e 	mul.w	r7, r7, lr
 800bb0c:	fb01 7102 	mla	r1, r1, r2, r7
 800bb10:	fb91 f1f8 	sdiv	r1, r1, r8
 800bb14:	f001 011f 	and.w	r1, r1, #31
 800bb18:	430b      	orrs	r3, r1
 800bb1a:	f825 3010 	strh.w	r3, [r5, r0, lsl #1]
 800bb1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bb20:	3001      	adds	r0, #1
 800bb22:	4283      	cmp	r3, r0
 800bb24:	d1b7      	bne.n	800ba96 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x10e>
 800bb26:	e77c      	b.n	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800bb28:	2cff      	cmp	r4, #255	; 0xff
 800bb2a:	d13a      	bne.n	800bba2 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x21a>
 800bb2c:	4892      	ldr	r0, [pc, #584]	; (800bd78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3f0>)
 800bb2e:	f816 700b 	ldrb.w	r7, [r6, fp]
 800bb32:	f83c 301b 	ldrh.w	r3, [ip, fp, lsl #1]
 800bb36:	2fff      	cmp	r7, #255	; 0xff
 800bb38:	d107      	bne.n	800bb4a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1c2>
 800bb3a:	f825 301b 	strh.w	r3, [r5, fp, lsl #1]
 800bb3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bb40:	f10b 0b01 	add.w	fp, fp, #1
 800bb44:	455b      	cmp	r3, fp
 800bb46:	d1f2      	bne.n	800bb2e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1a6>
 800bb48:	e76b      	b.n	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800bb4a:	f835 e01b 	ldrh.w	lr, [r5, fp, lsl #1]
 800bb4e:	43f9      	mvns	r1, r7
 800bb50:	b2c9      	uxtb	r1, r1
 800bb52:	ea0e 0800 	and.w	r8, lr, r0
 800bb56:	fb01 f808 	mul.w	r8, r1, r8
 800bb5a:	ea03 0200 	and.w	r2, r3, r0
 800bb5e:	f40e 69fc 	and.w	r9, lr, #2016	; 0x7e0
 800bb62:	fb07 8202 	mla	r2, r7, r2, r8
 800bb66:	fb01 f909 	mul.w	r9, r1, r9
 800bb6a:	fb92 f2f4 	sdiv	r2, r2, r4
 800bb6e:	f00e 0e1f 	and.w	lr, lr, #31
 800bb72:	ea02 0800 	and.w	r8, r2, r0
 800bb76:	f403 62fc 	and.w	r2, r3, #2016	; 0x7e0
 800bb7a:	fb07 9202 	mla	r2, r7, r2, r9
 800bb7e:	f003 031f 	and.w	r3, r3, #31
 800bb82:	fb92 f2f4 	sdiv	r2, r2, r4
 800bb86:	fb01 f10e 	mul.w	r1, r1, lr
 800bb8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bb8e:	ea48 0202 	orr.w	r2, r8, r2
 800bb92:	fb07 1303 	mla	r3, r7, r3, r1
 800bb96:	fb93 f3f4 	sdiv	r3, r3, r4
 800bb9a:	f003 031f 	and.w	r3, r3, #31
 800bb9e:	4313      	orrs	r3, r2
 800bba0:	e7cb      	b.n	800bb3a <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x1b2>
 800bba2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bba4:	4f74      	ldr	r7, [pc, #464]	; (800bd78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3f0>)
 800bba6:	f1ac 0c02 	sub.w	ip, ip, #2
 800bbaa:	eb06 0e03 	add.w	lr, r6, r3
 800bbae:	20ff      	movs	r0, #255	; 0xff
 800bbb0:	f816 3b01 	ldrb.w	r3, [r6], #1
 800bbb4:	f8b5 9000 	ldrh.w	r9, [r5]
 800bbb8:	fb13 f304 	smulbb	r3, r3, r4
 800bbbc:	b29b      	uxth	r3, r3
 800bbbe:	1c5a      	adds	r2, r3, #1
 800bbc0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 800bbc4:	1211      	asrs	r1, r2, #8
 800bbc6:	ea6f 0801 	mvn.w	r8, r1
 800bbca:	f83c 2f02 	ldrh.w	r2, [ip, #2]!
 800bbce:	fa5f f888 	uxtb.w	r8, r8
 800bbd2:	ea09 0a07 	and.w	sl, r9, r7
 800bbd6:	fb08 fa0a 	mul.w	sl, r8, sl
 800bbda:	ea02 0307 	and.w	r3, r2, r7
 800bbde:	f409 6bfc 	and.w	fp, r9, #2016	; 0x7e0
 800bbe2:	fb01 a303 	mla	r3, r1, r3, sl
 800bbe6:	fb08 fb0b 	mul.w	fp, r8, fp
 800bbea:	fb93 f3f0 	sdiv	r3, r3, r0
 800bbee:	f009 091f 	and.w	r9, r9, #31
 800bbf2:	ea03 0a07 	and.w	sl, r3, r7
 800bbf6:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 800bbfa:	fb01 b303 	mla	r3, r1, r3, fp
 800bbfe:	f002 021f 	and.w	r2, r2, #31
 800bc02:	fb93 f3f0 	sdiv	r3, r3, r0
 800bc06:	fb08 f809 	mul.w	r8, r8, r9
 800bc0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800bc0e:	ea4a 0303 	orr.w	r3, sl, r3
 800bc12:	fb01 8202 	mla	r2, r1, r2, r8
 800bc16:	fb92 f2f0 	sdiv	r2, r2, r0
 800bc1a:	f002 021f 	and.w	r2, r2, #31
 800bc1e:	4313      	orrs	r3, r2
 800bc20:	4576      	cmp	r6, lr
 800bc22:	f825 3b02 	strh.w	r3, [r5], #2
 800bc26:	d1c3      	bne.n	800bbb0 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x228>
 800bc28:	e6fb      	b.n	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800bc2a:	4640      	mov	r0, r8
 800bc2c:	f006 fb2e 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bc30:	2802      	cmp	r0, #2
 800bc32:	f47f aef6 	bne.w	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800bc36:	2cff      	cmp	r4, #255	; 0xff
 800bc38:	f8d7 b014 	ldr.w	fp, [r7, #20]
 800bc3c:	d14f      	bne.n	800bcde <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x356>
 800bc3e:	4f4e      	ldr	r7, [pc, #312]	; (800bd78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3f0>)
 800bc40:	2000      	movs	r0, #0
 800bc42:	f85b 3020 	ldr.w	r3, [fp, r0, lsl #2]
 800bc46:	5c32      	ldrb	r2, [r6, r0]
 800bc48:	0e19      	lsrs	r1, r3, #24
 800bc4a:	434a      	muls	r2, r1
 800bc4c:	1c51      	adds	r1, r2, #1
 800bc4e:	eb01 2122 	add.w	r1, r1, r2, asr #8
 800bc52:	1209      	asrs	r1, r1, #8
 800bc54:	29ff      	cmp	r1, #255	; 0xff
 800bc56:	d10f      	bne.n	800bc78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2f0>
 800bc58:	0959      	lsrs	r1, r3, #5
 800bc5a:	ea07 2213 	and.w	r2, r7, r3, lsr #8
 800bc5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 800bc62:	430a      	orrs	r2, r1
 800bc64:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800bc68:	4313      	orrs	r3, r2
 800bc6a:	f825 3010 	strh.w	r3, [r5, r0, lsl #1]
 800bc6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bc70:	3001      	adds	r0, #1
 800bc72:	4283      	cmp	r3, r0
 800bc74:	d1e5      	bne.n	800bc42 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2ba>
 800bc76:	e6d4      	b.n	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800bc78:	fa5f fc81 	uxtb.w	ip, r1
 800bc7c:	2900      	cmp	r1, #0
 800bc7e:	d0f6      	beq.n	800bc6e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2e6>
 800bc80:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800bc84:	ea6f 0c0c 	mvn.w	ip, ip
 800bc88:	fa5f fc8c 	uxtb.w	ip, ip
 800bc8c:	ea07 2213 	and.w	r2, r7, r3, lsr #8
 800bc90:	ea0e 0807 	and.w	r8, lr, r7
 800bc94:	fb0c f808 	mul.w	r8, ip, r8
 800bc98:	b292      	uxth	r2, r2
 800bc9a:	fb01 8202 	mla	r2, r1, r2, r8
 800bc9e:	f40e 69fc 	and.w	r9, lr, #2016	; 0x7e0
 800bca2:	fb92 f2f4 	sdiv	r2, r2, r4
 800bca6:	ea02 0807 	and.w	r8, r2, r7
 800bcaa:	095a      	lsrs	r2, r3, #5
 800bcac:	fb0c f909 	mul.w	r9, ip, r9
 800bcb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bcb4:	f00e 0e1f 	and.w	lr, lr, #31
 800bcb8:	fb01 9202 	mla	r2, r1, r2, r9
 800bcbc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 800bcc0:	fb92 f2f4 	sdiv	r2, r2, r4
 800bcc4:	fb0c fc0e 	mul.w	ip, ip, lr
 800bcc8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bccc:	fb01 c303 	mla	r3, r1, r3, ip
 800bcd0:	ea48 0202 	orr.w	r2, r8, r2
 800bcd4:	fb93 f3f4 	sdiv	r3, r3, r4
 800bcd8:	f003 031f 	and.w	r3, r3, #31
 800bcdc:	e7c4      	b.n	800bc68 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x2e0>
 800bcde:	f8df 8098 	ldr.w	r8, [pc, #152]	; 800bd78 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3f0>
 800bce2:	2700      	movs	r7, #0
 800bce4:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800bce8:	f85b 2027 	ldr.w	r2, [fp, r7, lsl #2]
 800bcec:	0e13      	lsrs	r3, r2, #24
 800bcee:	fb13 f304 	smulbb	r3, r3, r4
 800bcf2:	b29b      	uxth	r3, r3
 800bcf4:	1c59      	adds	r1, r3, #1
 800bcf6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800bcfa:	1219      	asrs	r1, r3, #8
 800bcfc:	5df3      	ldrb	r3, [r6, r7]
 800bcfe:	fb13 f301 	smulbb	r3, r3, r1
 800bd02:	b29b      	uxth	r3, r3
 800bd04:	1c59      	adds	r1, r3, #1
 800bd06:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 800bd0a:	1209      	asrs	r1, r1, #8
 800bd0c:	d02f      	beq.n	800bd6e <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x3e6>
 800bd0e:	f835 e017 	ldrh.w	lr, [r5, r7, lsl #1]
 800bd12:	ea6f 0c01 	mvn.w	ip, r1
 800bd16:	fa5f fc8c 	uxtb.w	ip, ip
 800bd1a:	ea08 2012 	and.w	r0, r8, r2, lsr #8
 800bd1e:	ea0e 0308 	and.w	r3, lr, r8
 800bd22:	fb0c f303 	mul.w	r3, ip, r3
 800bd26:	b280      	uxth	r0, r0
 800bd28:	fb01 3000 	mla	r0, r1, r0, r3
 800bd2c:	f40e 6afc 	and.w	sl, lr, #2016	; 0x7e0
 800bd30:	0953      	lsrs	r3, r2, #5
 800bd32:	fb0c fa0a 	mul.w	sl, ip, sl
 800bd36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800bd3a:	f00e 0e1f 	and.w	lr, lr, #31
 800bd3e:	fb01 a303 	mla	r3, r1, r3, sl
 800bd42:	fb90 f0f9 	sdiv	r0, r0, r9
 800bd46:	fb93 f3f9 	sdiv	r3, r3, r9
 800bd4a:	ea00 0008 	and.w	r0, r0, r8
 800bd4e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800bd52:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 800bd56:	fb0c fc0e 	mul.w	ip, ip, lr
 800bd5a:	4318      	orrs	r0, r3
 800bd5c:	fb01 c102 	mla	r1, r1, r2, ip
 800bd60:	fb91 f1f9 	sdiv	r1, r1, r9
 800bd64:	f001 011f 	and.w	r1, r1, #31
 800bd68:	4308      	orrs	r0, r1
 800bd6a:	f825 0017 	strh.w	r0, [r5, r7, lsl #1]
 800bd6e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bd70:	3701      	adds	r7, #1
 800bd72:	42bb      	cmp	r3, r7
 800bd74:	d1b8      	bne.n	800bce8 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x360>
 800bd76:	e654      	b.n	800ba22 <_ZN8touchgfx19PainterRGB565Bitmap6renderEPhiiijPKh+0x9a>
 800bd78:	fffff800 	.word	0xfffff800

0800bd7c <_ZN8touchgfx19PainterRGB565BitmapD0Ev>:
 800bd7c:	b510      	push	{r4, lr}
 800bd7e:	212c      	movs	r1, #44	; 0x2c
 800bd80:	4604      	mov	r4, r0
 800bd82:	f013 fb08 	bl	801f396 <_ZdlPvj>
 800bd86:	4620      	mov	r0, r4
 800bd88:	bd10      	pop	{r4, pc}

0800bd8a <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_>:
 800bd8a:	b570      	push	{r4, r5, r6, lr}
 800bd8c:	f9b0 4026 	ldrsh.w	r4, [r0, #38]	; 0x26
 800bd90:	68c6      	ldr	r6, [r0, #12]
 800bd92:	9d04      	ldr	r5, [sp, #16]
 800bd94:	42a6      	cmp	r6, r4
 800bd96:	da41      	bge.n	800be1c <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x92>
 800bd98:	6944      	ldr	r4, [r0, #20]
 800bd9a:	b1fc      	cbz	r4, 800bddc <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x52>
 800bd9c:	1d26      	adds	r6, r4, #4
 800bd9e:	6146      	str	r6, [r0, #20]
 800bda0:	6824      	ldr	r4, [r4, #0]
 800bda2:	0e26      	lsrs	r6, r4, #24
 800bda4:	702e      	strb	r6, [r5, #0]
 800bda6:	0c26      	lsrs	r6, r4, #16
 800bda8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800bdac:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 800bdb0:	700e      	strb	r6, [r1, #0]
 800bdb2:	0a21      	lsrs	r1, r4, #8
 800bdb4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 800bdb8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 800bdbc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 800bdc0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 800bdc4:	7011      	strb	r1, [r2, #0]
 800bdc6:	701c      	strb	r4, [r3, #0]
 800bdc8:	782b      	ldrb	r3, [r5, #0]
 800bdca:	7a42      	ldrb	r2, [r0, #9]
 800bdcc:	435a      	muls	r2, r3
 800bdce:	1c53      	adds	r3, r2, #1
 800bdd0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 800bdd4:	121b      	asrs	r3, r3, #8
 800bdd6:	702b      	strb	r3, [r5, #0]
 800bdd8:	2001      	movs	r0, #1
 800bdda:	bd70      	pop	{r4, r5, r6, pc}
 800bddc:	6984      	ldr	r4, [r0, #24]
 800bdde:	2c00      	cmp	r4, #0
 800bde0:	d0f2      	beq.n	800bdc8 <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x3e>
 800bde2:	1ca6      	adds	r6, r4, #2
 800bde4:	6186      	str	r6, [r0, #24]
 800bde6:	8826      	ldrh	r6, [r4, #0]
 800bde8:	1234      	asrs	r4, r6, #8
 800bdea:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 800bdee:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 800bdf2:	700c      	strb	r4, [r1, #0]
 800bdf4:	10f1      	asrs	r1, r6, #3
 800bdf6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 800bdfa:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 800bdfe:	7011      	strb	r1, [r2, #0]
 800be00:	f3c6 0282 	ubfx	r2, r6, #2, #3
 800be04:	ea42 06c6 	orr.w	r6, r2, r6, lsl #3
 800be08:	701e      	strb	r6, [r3, #0]
 800be0a:	69c3      	ldr	r3, [r0, #28]
 800be0c:	b123      	cbz	r3, 800be18 <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x8e>
 800be0e:	1c5a      	adds	r2, r3, #1
 800be10:	61c2      	str	r2, [r0, #28]
 800be12:	781b      	ldrb	r3, [r3, #0]
 800be14:	702b      	strb	r3, [r5, #0]
 800be16:	e7d7      	b.n	800bdc8 <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x3e>
 800be18:	23ff      	movs	r3, #255	; 0xff
 800be1a:	e7fb      	b.n	800be14 <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x8a>
 800be1c:	2000      	movs	r0, #0
 800be1e:	e7dc      	b.n	800bdda <_ZN8touchgfx19PainterRGB565Bitmap10renderNextERhS1_S1_S1_+0x50>

0800be20 <_ZNK8touchgfx6Bitmap5getIdEv>:
 800be20:	b508      	push	{r3, lr}
 800be22:	4b05      	ldr	r3, [pc, #20]	; (800be38 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 800be24:	681b      	ldr	r3, [r3, #0]
 800be26:	b92b      	cbnz	r3, 800be34 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 800be28:	4b04      	ldr	r3, [pc, #16]	; (800be3c <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 800be2a:	4a05      	ldr	r2, [pc, #20]	; (800be40 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 800be2c:	4805      	ldr	r0, [pc, #20]	; (800be44 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 800be2e:	218b      	movs	r1, #139	; 0x8b
 800be30:	f013 fae0 	bl	801f3f4 <__assert_func>
 800be34:	8800      	ldrh	r0, [r0, #0]
 800be36:	bd08      	pop	{r3, pc}
 800be38:	2000d4b4 	.word	0x2000d4b4
 800be3c:	08022a6c 	.word	0x08022a6c
 800be40:	08022b3f 	.word	0x08022b3f
 800be44:	08022aa8 	.word	0x08022aa8

0800be48 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv>:
 800be48:	b538      	push	{r3, r4, r5, lr}
 800be4a:	2300      	movs	r3, #0
 800be4c:	f100 0520 	add.w	r5, r0, #32
 800be50:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800be54:	61c3      	str	r3, [r0, #28]
 800be56:	4604      	mov	r4, r0
 800be58:	4628      	mov	r0, r5
 800be5a:	f7ff ffe1 	bl	800be20 <_ZNK8touchgfx6Bitmap5getIdEv>
 800be5e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800be62:	4298      	cmp	r0, r3
 800be64:	d101      	bne.n	800be6a <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x22>
 800be66:	2000      	movs	r0, #0
 800be68:	bd38      	pop	{r3, r4, r5, pc}
 800be6a:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 800be6e:	68e2      	ldr	r2, [r4, #12]
 800be70:	429a      	cmp	r2, r3
 800be72:	daf8      	bge.n	800be66 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 800be74:	f9b4 3028 	ldrsh.w	r3, [r4, #40]	; 0x28
 800be78:	6922      	ldr	r2, [r4, #16]
 800be7a:	429a      	cmp	r2, r3
 800be7c:	daf3      	bge.n	800be66 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 800be7e:	4628      	mov	r0, r5
 800be80:	f006 fa04 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800be84:	2802      	cmp	r0, #2
 800be86:	4628      	mov	r0, r5
 800be88:	d10f      	bne.n	800beaa <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x62>
 800be8a:	f006 f975 	bl	8012178 <_ZNK8touchgfx6Bitmap7getDataEv>
 800be8e:	6160      	str	r0, [r4, #20]
 800be90:	2800      	cmp	r0, #0
 800be92:	d0e8      	beq.n	800be66 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 800be94:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800be98:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 800be9c:	fb01 2303 	mla	r3, r1, r3, r2
 800bea0:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800bea4:	6160      	str	r0, [r4, #20]
 800bea6:	2001      	movs	r0, #1
 800bea8:	e7de      	b.n	800be68 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x20>
 800beaa:	f006 f9ef 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800beae:	2800      	cmp	r0, #0
 800beb0:	d1d9      	bne.n	800be66 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 800beb2:	4628      	mov	r0, r5
 800beb4:	f006 f960 	bl	8012178 <_ZNK8touchgfx6Bitmap7getDataEv>
 800beb8:	61a0      	str	r0, [r4, #24]
 800beba:	2800      	cmp	r0, #0
 800bebc:	d0d3      	beq.n	800be66 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x1e>
 800bebe:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800bec2:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 800bec6:	fb01 2303 	mla	r3, r1, r3, r2
 800beca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800bece:	61a0      	str	r0, [r4, #24]
 800bed0:	4628      	mov	r0, r5
 800bed2:	f006 f983 	bl	80121dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800bed6:	61e0      	str	r0, [r4, #28]
 800bed8:	2800      	cmp	r0, #0
 800beda:	d0e4      	beq.n	800bea6 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x5e>
 800bedc:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800bee0:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
 800bee4:	fb01 2303 	mla	r3, r1, r3, r2
 800bee8:	4418      	add	r0, r3
 800beea:	61e0      	str	r0, [r4, #28]
 800beec:	e7db      	b.n	800bea6 <_ZN8touchgfx19PainterRGB565Bitmap10renderInitEv+0x5e>
	...

0800bef0 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
 800bef0:	b570      	push	{r4, r5, r6, lr}
 800bef2:	4604      	mov	r4, r0
 800bef4:	880b      	ldrh	r3, [r1, #0]
 800bef6:	f824 3f20 	strh.w	r3, [r4, #32]!
 800befa:	4605      	mov	r5, r0
 800befc:	4620      	mov	r0, r4
 800befe:	f7ff ff8f 	bl	800be20 <_ZNK8touchgfx6Bitmap5getIdEv>
 800bf02:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf06:	4298      	cmp	r0, r3
 800bf08:	d00e      	beq.n	800bf28 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 800bf0a:	4620      	mov	r0, r4
 800bf0c:	f006 f9be 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bf10:	b150      	cbz	r0, 800bf28 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 800bf12:	4620      	mov	r0, r4
 800bf14:	f006 f9ba 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800bf18:	2802      	cmp	r0, #2
 800bf1a:	d005      	beq.n	800bf28 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x38>
 800bf1c:	4b0b      	ldr	r3, [pc, #44]	; (800bf4c <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x5c>)
 800bf1e:	4a0c      	ldr	r2, [pc, #48]	; (800bf50 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x60>)
 800bf20:	480c      	ldr	r0, [pc, #48]	; (800bf54 <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE+0x64>)
 800bf22:	2117      	movs	r1, #23
 800bf24:	f013 fa66 	bl	801f3f4 <__assert_func>
 800bf28:	4620      	mov	r0, r4
 800bf2a:	f006 f81d 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bf2e:	4606      	mov	r6, r0
 800bf30:	4620      	mov	r0, r4
 800bf32:	f006 f853 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bf36:	2300      	movs	r3, #0
 800bf38:	8528      	strh	r0, [r5, #40]	; 0x28
 800bf3a:	846b      	strh	r3, [r5, #34]	; 0x22
 800bf3c:	84ab      	strh	r3, [r5, #36]	; 0x24
 800bf3e:	84ee      	strh	r6, [r5, #38]	; 0x26
 800bf40:	f105 0022 	add.w	r0, r5, #34	; 0x22
 800bf44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf48:	f003 b864 	b.w	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800bf4c:	08022972 	.word	0x08022972
 800bf50:	08022af8 	.word	0x08022af8
 800bf54:	08022a2b 	.word	0x08022a2b

0800bf58 <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 800bf58:	2001      	movs	r0, #1
 800bf5a:	4770      	bx	lr

0800bf5c <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 800bf5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bf60:	4617      	mov	r7, r2
 800bf62:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800bf66:	b085      	sub	sp, #20
 800bf68:	443a      	add	r2, r7
 800bf6a:	60c2      	str	r2, [r0, #12]
 800bf6c:	4698      	mov	r8, r3
 800bf6e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800bf72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bf74:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bf76:	441a      	add	r2, r3
 800bf78:	6803      	ldr	r3, [r0, #0]
 800bf7a:	6102      	str	r2, [r0, #16]
 800bf7c:	695b      	ldr	r3, [r3, #20]
 800bf7e:	4604      	mov	r4, r0
 800bf80:	460d      	mov	r5, r1
 800bf82:	4798      	blx	r3
 800bf84:	2800      	cmp	r0, #0
 800bf86:	d03a      	beq.n	800bffe <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa2>
 800bf88:	4447      	add	r7, r8
 800bf8a:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 800bf8e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800bf90:	4437      	add	r7, r6
 800bf92:	6823      	ldr	r3, [r4, #0]
 800bf94:	f10d 020f 	add.w	r2, sp, #15
 800bf98:	9200      	str	r2, [sp, #0]
 800bf9a:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800bf9e:	f10d 020d 	add.w	r2, sp, #13
 800bfa2:	f10d 030e 	add.w	r3, sp, #14
 800bfa6:	a903      	add	r1, sp, #12
 800bfa8:	4620      	mov	r0, r4
 800bfaa:	47c0      	blx	r8
 800bfac:	b1f8      	cbz	r0, 800bfee <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x92>
 800bfae:	f89d 300f 	ldrb.w	r3, [sp, #15]
 800bfb2:	7a20      	ldrb	r0, [r4, #8]
 800bfb4:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800bfb8:	f89d c00e 	ldrb.w	ip, [sp, #14]
 800bfbc:	4358      	muls	r0, r3
 800bfbe:	1c43      	adds	r3, r0, #1
 800bfc0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 800bfc4:	7830      	ldrb	r0, [r6, #0]
 800bfc6:	121b      	asrs	r3, r3, #8
 800bfc8:	fb10 f003 	smulbb	r0, r0, r3
 800bfcc:	b283      	uxth	r3, r0
 800bfce:	1c58      	adds	r0, r3, #1
 800bfd0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800bfd4:	1200      	asrs	r0, r0, #8
 800bfd6:	6823      	ldr	r3, [r4, #0]
 800bfd8:	28ff      	cmp	r0, #255	; 0xff
 800bfda:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800bfde:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800bfe2:	d10f      	bne.n	800c004 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa8>
 800bfe4:	f8cd c000 	str.w	ip, [sp]
 800bfe8:	4629      	mov	r1, r5
 800bfea:	4620      	mov	r0, r4
 800bfec:	47c0      	blx	r8
 800bfee:	68e3      	ldr	r3, [r4, #12]
 800bff0:	3601      	adds	r6, #1
 800bff2:	3301      	adds	r3, #1
 800bff4:	42b7      	cmp	r7, r6
 800bff6:	f105 0502 	add.w	r5, r5, #2
 800bffa:	60e3      	str	r3, [r4, #12]
 800bffc:	d1c9      	bne.n	800bf92 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x36>
 800bffe:	b005      	add	sp, #20
 800c000:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c004:	8829      	ldrh	r1, [r5, #0]
 800c006:	fa1f fe80 	uxth.w	lr, r0
 800c00a:	ea4f 2921 	mov.w	r9, r1, asr #8
 800c00e:	43c0      	mvns	r0, r0
 800c010:	b2c0      	uxtb	r0, r0
 800c012:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 800c016:	fb12 f20e 	smulbb	r2, r2, lr
 800c01a:	fb09 2200 	mla	r2, r9, r0, r2
 800c01e:	ea4f 09e1 	mov.w	r9, r1, asr #3
 800c022:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800c026:	fb13 f30e 	smulbb	r3, r3, lr
 800c02a:	fb09 3300 	mla	r3, r9, r0, r3
 800c02e:	00c9      	lsls	r1, r1, #3
 800c030:	b29b      	uxth	r3, r3
 800c032:	b2c9      	uxtb	r1, r1
 800c034:	fb1c fc0e 	smulbb	ip, ip, lr
 800c038:	b292      	uxth	r2, r2
 800c03a:	fb01 c000 	mla	r0, r1, r0, ip
 800c03e:	1c59      	adds	r1, r3, #1
 800c040:	b280      	uxth	r0, r0
 800c042:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 800c046:	1c51      	adds	r1, r2, #1
 800c048:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 800c04c:	1c41      	adds	r1, r0, #1
 800c04e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 800c052:	f3c0 2007 	ubfx	r0, r0, #8, #8
 800c056:	9000      	str	r0, [sp, #0]
 800c058:	f3c3 2307 	ubfx	r3, r3, #8, #8
 800c05c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800c060:	e7c2      	b.n	800bfe8 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8c>
	...

0800c064 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 800c064:	f89d 0000 	ldrb.w	r0, [sp]
 800c068:	00db      	lsls	r3, r3, #3
 800c06a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800c06e:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 800c072:	4803      	ldr	r0, [pc, #12]	; (800c080 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 800c074:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 800c078:	4313      	orrs	r3, r2
 800c07a:	800b      	strh	r3, [r1, #0]
 800c07c:	4770      	bx	lr
 800c07e:	bf00      	nop
 800c080:	fffff800 	.word	0xfffff800

0800c084 <_ZN8touchgfx6CircleD1Ev>:
 800c084:	4770      	bx	lr

0800c086 <_ZN8touchgfx6CircleD0Ev>:
 800c086:	b510      	push	{r4, lr}
 800c088:	214c      	movs	r1, #76	; 0x4c
 800c08a:	4604      	mov	r4, r0
 800c08c:	f013 f983 	bl	801f396 <_ZdlPvj>
 800c090:	4620      	mov	r0, r4
 800c092:	bd10      	pop	{r4, pc}

0800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800c094:	b507      	push	{r0, r1, r2, lr}
 800c096:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800c09a:	ab01      	add	r3, sp, #4
 800c09c:	6809      	ldr	r1, [r1, #0]
 800c09e:	6800      	ldr	r0, [r0, #0]
 800c0a0:	f004 face 	bl	8010640 <_ZN8touchgfx6muldivElllRl>
 800c0a4:	b003      	add	sp, #12
 800c0a6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800c0ac <_ZN8touchgfx7CWRUtil4sineEi>:
 800c0ac:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800c0b0:	fb90 f3f2 	sdiv	r3, r0, r2
 800c0b4:	fb03 0312 	mls	r3, r3, r2, r0
 800c0b8:	4413      	add	r3, r2
 800c0ba:	fb93 f0f2 	sdiv	r0, r3, r2
 800c0be:	fb02 3010 	mls	r0, r2, r0, r3
 800c0c2:	285a      	cmp	r0, #90	; 0x5a
 800c0c4:	4b09      	ldr	r3, [pc, #36]	; (800c0ec <_ZN8touchgfx7CWRUtil4sineEi+0x40>)
 800c0c6:	dc02      	bgt.n	800c0ce <_ZN8touchgfx7CWRUtil4sineEi+0x22>
 800c0c8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800c0cc:	4770      	bx	lr
 800c0ce:	28b4      	cmp	r0, #180	; 0xb4
 800c0d0:	dc02      	bgt.n	800c0d8 <_ZN8touchgfx7CWRUtil4sineEi+0x2c>
 800c0d2:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800c0d6:	e7f7      	b.n	800c0c8 <_ZN8touchgfx7CWRUtil4sineEi+0x1c>
 800c0d8:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800c0dc:	bfd4      	ite	le
 800c0de:	38b4      	suble	r0, #180	; 0xb4
 800c0e0:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800c0e4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800c0e8:	4240      	negs	r0, r0
 800c0ea:	4770      	bx	lr
 800c0ec:	08022b9c 	.word	0x08022b9c

0800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800c0f0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800c0f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c0f6:	fb90 f3f2 	sdiv	r3, r0, r2
 800c0fa:	fb03 0012 	mls	r0, r3, r2, r0
 800c0fe:	4410      	add	r0, r2
 800c100:	fb90 f4f2 	sdiv	r4, r0, r2
 800c104:	fb02 0414 	mls	r4, r2, r4, r0
 800c108:	f004 061f 	and.w	r6, r4, #31
 800c10c:	1164      	asrs	r4, r4, #5
 800c10e:	4620      	mov	r0, r4
 800c110:	f7ff ffcc 	bl	800c0ac <_ZN8touchgfx7CWRUtil4sineEi>
 800c114:	4605      	mov	r5, r0
 800c116:	b90e      	cbnz	r6, 800c11c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x2c>
 800c118:	b002      	add	sp, #8
 800c11a:	bd70      	pop	{r4, r5, r6, pc}
 800c11c:	1c60      	adds	r0, r4, #1
 800c11e:	f7ff ffc5 	bl	800c0ac <_ZN8touchgfx7CWRUtil4sineEi>
 800c122:	ab01      	add	r3, sp, #4
 800c124:	2220      	movs	r2, #32
 800c126:	4631      	mov	r1, r6
 800c128:	1b40      	subs	r0, r0, r5
 800c12a:	f004 fa89 	bl	8010640 <_ZN8touchgfx6muldivElllRl>
 800c12e:	4428      	add	r0, r5
 800c130:	e7f2      	b.n	800c118 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>

0800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800c132:	b508      	push	{r3, lr}
 800c134:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800c138:	f7ff ffda 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c13c:	bd08      	pop	{r3, pc}
	...

0800c140 <_ZN8touchgfx6CircleC1Ev>:
 800c140:	b510      	push	{r4, lr}
 800c142:	4604      	mov	r4, r0
 800c144:	f000 fc3e 	bl	800c9c4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800c148:	4b08      	ldr	r3, [pc, #32]	; (800c16c <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800c14a:	6023      	str	r3, [r4, #0]
 800c14c:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800c150:	2300      	movs	r3, #0
 800c152:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 800c156:	f24b 4205 	movw	r2, #46085	; 0xb405
 800c15a:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
 800c15e:	e9c4 330e 	strd	r3, r3, [r4, #56]	; 0x38
 800c162:	f8a4 2048 	strh.w	r2, [r4, #72]	; 0x48
 800c166:	60a3      	str	r3, [r4, #8]
 800c168:	4620      	mov	r0, r4
 800c16a:	bd10      	pop	{r4, pc}
 800c16c:	08022c5c 	.word	0x08022c5c

0800c170 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800c170:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c174:	4606      	mov	r6, r0
 800c176:	6810      	ldr	r0, [r2, #0]
 800c178:	4698      	mov	r8, r3
 800c17a:	4691      	mov	r9, r2
 800c17c:	460f      	mov	r7, r1
 800c17e:	f7ff ffb7 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c182:	a902      	add	r1, sp, #8
 800c184:	2402      	movs	r4, #2
 800c186:	f841 0d08 	str.w	r0, [r1, #-8]!
 800c18a:	4640      	mov	r0, r8
 800c18c:	f7ff ff82 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c190:	6b35      	ldr	r5, [r6, #48]	; 0x30
 800c192:	fb90 f0f4 	sdiv	r0, r0, r4
 800c196:	4405      	add	r5, r0
 800c198:	f8d9 0000 	ldr.w	r0, [r9]
 800c19c:	f7ff ffc9 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c1a0:	a902      	add	r1, sp, #8
 800c1a2:	f841 0d04 	str.w	r0, [r1, #-4]!
 800c1a6:	4640      	mov	r0, r8
 800c1a8:	f7ff ff74 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c1ac:	6b72      	ldr	r2, [r6, #52]	; 0x34
 800c1ae:	fb90 f0f4 	sdiv	r0, r0, r4
 800c1b2:	4629      	mov	r1, r5
 800c1b4:	1a12      	subs	r2, r2, r0
 800c1b6:	4638      	mov	r0, r7
 800c1b8:	f011 fedb 	bl	801df72 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800c1bc:	b003      	add	sp, #12
 800c1be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c1c2 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>:
 800c1c2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c1c6:	9e08      	ldr	r6, [sp, #32]
 800c1c8:	6830      	ldr	r0, [r6, #0]
 800c1ca:	4698      	mov	r8, r3
 800c1cc:	4615      	mov	r5, r2
 800c1ce:	460f      	mov	r7, r1
 800c1d0:	f7ff ff8e 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c1d4:	a902      	add	r1, sp, #8
 800c1d6:	2402      	movs	r4, #2
 800c1d8:	f841 0d08 	str.w	r0, [r1, #-8]!
 800c1dc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c1de:	f7ff ff59 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c1e2:	682d      	ldr	r5, [r5, #0]
 800c1e4:	fb90 f0f4 	sdiv	r0, r0, r4
 800c1e8:	4405      	add	r5, r0
 800c1ea:	6830      	ldr	r0, [r6, #0]
 800c1ec:	f7ff ffa1 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c1f0:	a902      	add	r1, sp, #8
 800c1f2:	f841 0d04 	str.w	r0, [r1, #-4]!
 800c1f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c1f8:	f7ff ff4c 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c1fc:	f8d8 2000 	ldr.w	r2, [r8]
 800c200:	fb90 f0f4 	sdiv	r0, r0, r4
 800c204:	4629      	mov	r1, r5
 800c206:	1a12      	subs	r2, r2, r0
 800c208:	4638      	mov	r0, r7
 800c20a:	f011 fe41 	bl	801de90 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c20e:	b002      	add	sp, #8
 800c210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c214 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>:
 800c214:	b513      	push	{r0, r1, r4, lr}
 800c216:	e9cd 2300 	strd	r2, r3, [sp]
 800c21a:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800c21e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800c222:	f7ff ffce 	bl	800c1c2 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800c226:	b002      	add	sp, #8
 800c228:	bd10      	pop	{r4, pc}

0800c22a <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800c22a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c22c:	680e      	ldr	r6, [r1, #0]
 800c22e:	681f      	ldr	r7, [r3, #0]
 800c230:	9807      	ldr	r0, [sp, #28]
 800c232:	e9dd 5405 	ldrd	r5, r4, [sp, #20]
 800c236:	42be      	cmp	r6, r7
 800c238:	bfb8      	it	lt
 800c23a:	601e      	strlt	r6, [r3, #0]
 800c23c:	680b      	ldr	r3, [r1, #0]
 800c23e:	6829      	ldr	r1, [r5, #0]
 800c240:	428b      	cmp	r3, r1
 800c242:	bfc8      	it	gt
 800c244:	602b      	strgt	r3, [r5, #0]
 800c246:	6813      	ldr	r3, [r2, #0]
 800c248:	6821      	ldr	r1, [r4, #0]
 800c24a:	428b      	cmp	r3, r1
 800c24c:	bfb8      	it	lt
 800c24e:	6023      	strlt	r3, [r4, #0]
 800c250:	6813      	ldr	r3, [r2, #0]
 800c252:	6802      	ldr	r2, [r0, #0]
 800c254:	4293      	cmp	r3, r2
 800c256:	bfc8      	it	gt
 800c258:	6003      	strgt	r3, [r0, #0]
 800c25a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c25c <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>:
 800c25c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c260:	4606      	mov	r6, r0
 800c262:	b089      	sub	sp, #36	; 0x24
 800c264:	6808      	ldr	r0, [r1, #0]
 800c266:	4690      	mov	r8, r2
 800c268:	461f      	mov	r7, r3
 800c26a:	4689      	mov	r9, r1
 800c26c:	f7ff ff40 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c270:	ad08      	add	r5, sp, #32
 800c272:	2402      	movs	r4, #2
 800c274:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c278:	4640      	mov	r0, r8
 800c27a:	4629      	mov	r1, r5
 800c27c:	f7ff ff0a 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c280:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800c282:	fb90 f0f4 	sdiv	r0, r0, r4
 800c286:	4418      	add	r0, r3
 800c288:	9005      	str	r0, [sp, #20]
 800c28a:	f8d9 0000 	ldr.w	r0, [r9]
 800c28e:	f7ff ff50 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c292:	4629      	mov	r1, r5
 800c294:	9007      	str	r0, [sp, #28]
 800c296:	4640      	mov	r0, r8
 800c298:	f7ff fefc 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c29c:	fb90 f0f4 	sdiv	r0, r0, r4
 800c2a0:	6b74      	ldr	r4, [r6, #52]	; 0x34
 800c2a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c2a4:	aa08      	add	r2, sp, #32
 800c2a6:	1a24      	subs	r4, r4, r0
 800c2a8:	f842 4d08 	str.w	r4, [r2, #-8]!
 800c2ac:	9302      	str	r3, [sp, #8]
 800c2ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c2b0:	9301      	str	r3, [sp, #4]
 800c2b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c2b4:	9300      	str	r3, [sp, #0]
 800c2b6:	a905      	add	r1, sp, #20
 800c2b8:	463b      	mov	r3, r7
 800c2ba:	4630      	mov	r0, r6
 800c2bc:	f7ff ffb5 	bl	800c22a <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c2c0:	b009      	add	sp, #36	; 0x24
 800c2c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c2c6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800c2c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2ca:	4291      	cmp	r1, r2
 800c2cc:	b08d      	sub	sp, #52	; 0x34
 800c2ce:	e9cd 2106 	strd	r2, r1, [sp, #24]
 800c2d2:	bfc8      	it	gt
 800c2d4:	e9cd 1206 	strdgt	r1, r2, [sp, #24]
 800c2d8:	461e      	mov	r6, r3
 800c2da:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800c2de:	1a9b      	subs	r3, r3, r2
 800c2e0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c2e4:	bfa2      	ittt	ge
 800c2e6:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800c2ea:	2200      	movge	r2, #0
 800c2ec:	e9cd 3206 	strdge	r3, r2, [sp, #24]
 800c2f0:	6b82      	ldr	r2, [r0, #56]	; 0x38
 800c2f2:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c2f4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 800c2f8:	ad0c      	add	r5, sp, #48	; 0x30
 800c2fa:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800c2fe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c302:	f845 3d04 	str.w	r3, [r5, #-4]!
 800c306:	a907      	add	r1, sp, #28
 800c308:	4633      	mov	r3, r6
 800c30a:	462a      	mov	r2, r5
 800c30c:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c310:	9700      	str	r7, [sp, #0]
 800c312:	4604      	mov	r4, r0
 800c314:	f7ff ffa2 	bl	800c25c <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c318:	9b07      	ldr	r3, [sp, #28]
 800c31a:	f44f 6034 	mov.w	r0, #2880	; 0xb40
 800c31e:	f103 0120 	add.w	r1, r3, #32
 800c322:	fb91 f3f0 	sdiv	r3, r1, r0
 800c326:	fb00 1313 	mls	r3, r0, r3, r1
 800c32a:	1ac3      	subs	r3, r0, r3
 800c32c:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 800c330:	fb93 f2f0 	sdiv	r2, r3, r0
 800c334:	fb00 3312 	mls	r3, r0, r2, r3
 800c338:	440b      	add	r3, r1
 800c33a:	f84a 3d0c 	str.w	r3, [sl, #-12]!
 800c33e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c340:	9906      	ldr	r1, [sp, #24]
 800c342:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c344:	4291      	cmp	r1, r2
 800c346:	db11      	blt.n	800c36c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xa6>
 800c348:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c34a:	9700      	str	r7, [sp, #0]
 800c34c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c350:	930b      	str	r3, [sp, #44]	; 0x2c
 800c352:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c356:	4633      	mov	r3, r6
 800c358:	462a      	mov	r2, r5
 800c35a:	4651      	mov	r1, sl
 800c35c:	4620      	mov	r0, r4
 800c35e:	f7ff ff7d 	bl	800c25c <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c362:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c364:	f503 6334 	add.w	r3, r3, #2880	; 0xb40
 800c368:	9309      	str	r3, [sp, #36]	; 0x24
 800c36a:	e7e8      	b.n	800c33e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x78>
 800c36c:	f5a2 6234 	sub.w	r2, r2, #2880	; 0xb40
 800c370:	4291      	cmp	r1, r2
 800c372:	dd0c      	ble.n	800c38e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xc8>
 800c374:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c376:	9700      	str	r7, [sp, #0]
 800c378:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c37c:	930b      	str	r3, [sp, #44]	; 0x2c
 800c37e:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c382:	4633      	mov	r3, r6
 800c384:	462a      	mov	r2, r5
 800c386:	a906      	add	r1, sp, #24
 800c388:	4620      	mov	r0, r4
 800c38a:	f7ff ff67 	bl	800c25c <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c38e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c390:	2b00      	cmp	r3, #0
 800c392:	f040 8097 	bne.w	800c4c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1fe>
 800c396:	e9dd 2106 	ldrd	r2, r1, [sp, #24]
 800c39a:	1a52      	subs	r2, r2, r1
 800c39c:	f5b2 5f34 	cmp.w	r2, #11520	; 0x2d00
 800c3a0:	da0a      	bge.n	800c3b8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xf2>
 800c3a2:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c3a6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800c3aa:	9700      	str	r7, [sp, #0]
 800c3ac:	4633      	mov	r3, r6
 800c3ae:	462a      	mov	r2, r5
 800c3b0:	a90a      	add	r1, sp, #40	; 0x28
 800c3b2:	4620      	mov	r0, r4
 800c3b4:	f7ff ff52 	bl	800c25c <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c3b8:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800c3bc:	2bb3      	cmp	r3, #179	; 0xb3
 800c3be:	d87e      	bhi.n	800c4be <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800c3c0:	e9dd 3006 	ldrd	r3, r0, [sp, #24]
 800c3c4:	1a1b      	subs	r3, r3, r0
 800c3c6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c3ca:	da78      	bge.n	800c4be <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x1f8>
 800c3cc:	f7ff fe90 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c3d0:	ad0c      	add	r5, sp, #48	; 0x30
 800c3d2:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c3d6:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c3da:	4658      	mov	r0, fp
 800c3dc:	4629      	mov	r1, r5
 800c3de:	f7ff fe59 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c3e4:	18c3      	adds	r3, r0, r3
 800c3e6:	9807      	ldr	r0, [sp, #28]
 800c3e8:	9305      	str	r3, [sp, #20]
 800c3ea:	f7ff fea2 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c3ee:	4629      	mov	r1, r5
 800c3f0:	900b      	str	r0, [sp, #44]	; 0x2c
 800c3f2:	4658      	mov	r0, fp
 800c3f4:	f7ff fe4e 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c3f8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c3fa:	9a05      	ldr	r2, [sp, #20]
 800c3fc:	9700      	str	r7, [sp, #0]
 800c3fe:	1a1b      	subs	r3, r3, r0
 800c400:	f04f 0a02 	mov.w	sl, #2
 800c404:	9304      	str	r3, [sp, #16]
 800c406:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c408:	fb93 f3fa 	sdiv	r3, r3, sl
 800c40c:	1ad2      	subs	r2, r2, r3
 800c40e:	920a      	str	r2, [sp, #40]	; 0x28
 800c410:	9a04      	ldr	r2, [sp, #16]
 800c412:	1ad3      	subs	r3, r2, r3
 800c414:	930b      	str	r3, [sp, #44]	; 0x2c
 800c416:	462a      	mov	r2, r5
 800c418:	4633      	mov	r3, r6
 800c41a:	a90a      	add	r1, sp, #40	; 0x28
 800c41c:	4620      	mov	r0, r4
 800c41e:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c422:	f7ff ff02 	bl	800c22a <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c426:	9a05      	ldr	r2, [sp, #20]
 800c428:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c42a:	fb93 f3fa 	sdiv	r3, r3, sl
 800c42e:	189a      	adds	r2, r3, r2
 800c430:	920a      	str	r2, [sp, #40]	; 0x28
 800c432:	9a04      	ldr	r2, [sp, #16]
 800c434:	9700      	str	r7, [sp, #0]
 800c436:	4413      	add	r3, r2
 800c438:	a90a      	add	r1, sp, #40	; 0x28
 800c43a:	462a      	mov	r2, r5
 800c43c:	930b      	str	r3, [sp, #44]	; 0x2c
 800c43e:	4620      	mov	r0, r4
 800c440:	4633      	mov	r3, r6
 800c442:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c446:	f7ff fef0 	bl	800c22a <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c44a:	9806      	ldr	r0, [sp, #24]
 800c44c:	f7ff fe50 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c450:	4629      	mov	r1, r5
 800c452:	900b      	str	r0, [sp, #44]	; 0x2c
 800c454:	4658      	mov	r0, fp
 800c456:	f7ff fe1d 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c45a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c45c:	18c3      	adds	r3, r0, r3
 800c45e:	9806      	ldr	r0, [sp, #24]
 800c460:	9304      	str	r3, [sp, #16]
 800c462:	f7ff fe66 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c466:	4629      	mov	r1, r5
 800c468:	900b      	str	r0, [sp, #44]	; 0x2c
 800c46a:	4658      	mov	r0, fp
 800c46c:	f7ff fe12 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c470:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c472:	9a04      	ldr	r2, [sp, #16]
 800c474:	9700      	str	r7, [sp, #0]
 800c476:	eba3 0b00 	sub.w	fp, r3, r0
 800c47a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c47c:	fb93 f3fa 	sdiv	r3, r3, sl
 800c480:	1ad2      	subs	r2, r2, r3
 800c482:	ebab 0303 	sub.w	r3, fp, r3
 800c486:	920a      	str	r2, [sp, #40]	; 0x28
 800c488:	930b      	str	r3, [sp, #44]	; 0x2c
 800c48a:	462a      	mov	r2, r5
 800c48c:	4633      	mov	r3, r6
 800c48e:	a90a      	add	r1, sp, #40	; 0x28
 800c490:	4620      	mov	r0, r4
 800c492:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c496:	f7ff fec8 	bl	800c22a <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c49a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c49c:	fb93 fafa 	sdiv	sl, r3, sl
 800c4a0:	9b04      	ldr	r3, [sp, #16]
 800c4a2:	9700      	str	r7, [sp, #0]
 800c4a4:	4453      	add	r3, sl
 800c4a6:	930a      	str	r3, [sp, #40]	; 0x28
 800c4a8:	eb0a 030b 	add.w	r3, sl, fp
 800c4ac:	930b      	str	r3, [sp, #44]	; 0x2c
 800c4ae:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c4b2:	4633      	mov	r3, r6
 800c4b4:	462a      	mov	r2, r5
 800c4b6:	a90a      	add	r1, sp, #40	; 0x28
 800c4b8:	4620      	mov	r0, r4
 800c4ba:	f7ff feb6 	bl	800c22a <_ZNK8touchgfx6Circle14updateMinMaxXYERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c4be:	b00d      	add	sp, #52	; 0x34
 800c4c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c4c6:	9700      	str	r7, [sp, #0]
 800c4c8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c4cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800c4ce:	462a      	mov	r2, r5
 800c4d0:	4633      	mov	r3, r6
 800c4d2:	a907      	add	r1, sp, #28
 800c4d4:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c4d8:	4620      	mov	r0, r4
 800c4da:	f7ff febf 	bl	800c25c <_ZNK8touchgfx6Circle14updateMinMaxARERKNS_7CWRUtil2Q5ES4_RS2_S5_S5_S5_>
 800c4de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c4e0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c4e2:	9700      	str	r7, [sp, #0]
 800c4e4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c4e8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c4ea:	e9cd 8901 	strd	r8, r9, [sp, #4]
 800c4ee:	4633      	mov	r3, r6
 800c4f0:	462a      	mov	r2, r5
 800c4f2:	a906      	add	r1, sp, #24
 800c4f4:	e75d      	b.n	800c3b2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xec>

0800c4f6 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800c4f6:	b530      	push	{r4, r5, lr}
 800c4f8:	4604      	mov	r4, r0
 800c4fa:	4608      	mov	r0, r1
 800c4fc:	4611      	mov	r1, r2
 800c4fe:	461a      	mov	r2, r3
 800c500:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c504:	b089      	sub	sp, #36	; 0x24
 800c506:	015b      	lsls	r3, r3, #5
 800c508:	9304      	str	r3, [sp, #16]
 800c50a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c50e:	2500      	movs	r5, #0
 800c510:	015b      	lsls	r3, r3, #5
 800c512:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800c516:	ab07      	add	r3, sp, #28
 800c518:	9302      	str	r3, [sp, #8]
 800c51a:	ab06      	add	r3, sp, #24
 800c51c:	9301      	str	r3, [sp, #4]
 800c51e:	ab05      	add	r3, sp, #20
 800c520:	9300      	str	r3, [sp, #0]
 800c522:	ab04      	add	r3, sp, #16
 800c524:	9505      	str	r5, [sp, #20]
 800c526:	f7ff fece 	bl	800c2c6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800c52a:	2520      	movs	r5, #32
 800c52c:	9a04      	ldr	r2, [sp, #16]
 800c52e:	9805      	ldr	r0, [sp, #20]
 800c530:	fb92 f2f5 	sdiv	r2, r2, r5
 800c534:	fb90 f0f5 	sdiv	r0, r0, r5
 800c538:	b292      	uxth	r2, r2
 800c53a:	3002      	adds	r0, #2
 800c53c:	1a80      	subs	r0, r0, r2
 800c53e:	9b06      	ldr	r3, [sp, #24]
 800c540:	9907      	ldr	r1, [sp, #28]
 800c542:	fb93 f3f5 	sdiv	r3, r3, r5
 800c546:	fb91 f1f5 	sdiv	r1, r1, r5
 800c54a:	b29b      	uxth	r3, r3
 800c54c:	3102      	adds	r1, #2
 800c54e:	1ac9      	subs	r1, r1, r3
 800c550:	3a01      	subs	r2, #1
 800c552:	3b01      	subs	r3, #1
 800c554:	80a0      	strh	r0, [r4, #4]
 800c556:	4620      	mov	r0, r4
 800c558:	8022      	strh	r2, [r4, #0]
 800c55a:	8063      	strh	r3, [r4, #2]
 800c55c:	80e1      	strh	r1, [r4, #6]
 800c55e:	b009      	add	sp, #36	; 0x24
 800c560:	bd30      	pop	{r4, r5, pc}

0800c562 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800c562:	b510      	push	{r4, lr}
 800c564:	e9d1 230f 	ldrd	r2, r3, [r1, #60]	; 0x3c
 800c568:	4604      	mov	r4, r0
 800c56a:	f7ff ffc4 	bl	800c4f6 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800c56e:	4620      	mov	r0, r4
 800c570:	bd10      	pop	{r4, pc}

0800c572 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800c572:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c576:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800c578:	6c02      	ldr	r2, [r0, #64]	; 0x40
 800c57a:	b0ba      	sub	sp, #232	; 0xe8
 800c57c:	429a      	cmp	r2, r3
 800c57e:	9303      	str	r3, [sp, #12]
 800c580:	9204      	str	r2, [sp, #16]
 800c582:	bfb8      	it	lt
 800c584:	e9cd 2303 	strdlt	r2, r3, [sp, #12]
 800c588:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
 800c58c:	1a9b      	subs	r3, r3, r2
 800c58e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c592:	bfa2      	ittt	ge
 800c594:	2200      	movge	r2, #0
 800c596:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800c59a:	e9cd 2303 	strdge	r2, r3, [sp, #12]
 800c59e:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800c5a0:	4604      	mov	r4, r0
 800c5a2:	460f      	mov	r7, r1
 800c5a4:	ae0a      	add	r6, sp, #40	; 0x28
 800c5a6:	2a00      	cmp	r2, #0
 800c5a8:	d131      	bne.n	800c60e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x9c>
 800c5aa:	463a      	mov	r2, r7
 800c5ac:	4621      	mov	r1, r4
 800c5ae:	a80b      	add	r0, sp, #44	; 0x2c
 800c5b0:	f011 fb16 	bl	801dbe0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800c5b4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5b6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c5b8:	9205      	str	r2, [sp, #20]
 800c5ba:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800c5be:	9306      	str	r3, [sp, #24]
 800c5c0:	dc6d      	bgt.n	800c69e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x12c>
 800c5c2:	9b03      	ldr	r3, [sp, #12]
 800c5c4:	9307      	str	r3, [sp, #28]
 800c5c6:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800c5ca:	f894 5048 	ldrb.w	r5, [r4, #72]	; 0x48
 800c5ce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c5d2:	930a      	str	r3, [sp, #40]	; 0x28
 800c5d4:	aa07      	add	r2, sp, #28
 800c5d6:	4633      	mov	r3, r6
 800c5d8:	a90b      	add	r1, sp, #44	; 0x2c
 800c5da:	4620      	mov	r0, r4
 800c5dc:	016d      	lsls	r5, r5, #5
 800c5de:	f7ff fdc7 	bl	800c170 <_ZNK8touchgfx6Circle9moveToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800c5e2:	9f07      	ldr	r7, [sp, #28]
 800c5e4:	2d00      	cmp	r5, #0
 800c5e6:	d163      	bne.n	800c6b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x13e>
 800c5e8:	3720      	adds	r7, #32
 800c5ea:	9a04      	ldr	r2, [sp, #16]
 800c5ec:	9b06      	ldr	r3, [sp, #24]
 800c5ee:	4639      	mov	r1, r7
 800c5f0:	4291      	cmp	r1, r2
 800c5f2:	442f      	add	r7, r5
 800c5f4:	dc69      	bgt.n	800c6ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x158>
 800c5f6:	9a05      	ldr	r2, [sp, #20]
 800c5f8:	9107      	str	r1, [sp, #28]
 800c5fa:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c5fe:	930a      	str	r3, [sp, #40]	; 0x28
 800c600:	aa07      	add	r2, sp, #28
 800c602:	4633      	mov	r3, r6
 800c604:	a90b      	add	r1, sp, #44	; 0x2c
 800c606:	4620      	mov	r0, r4
 800c608:	f7ff fe04 	bl	800c214 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800c60c:	e7ed      	b.n	800c5ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800c60e:	f9b1 c000 	ldrsh.w	ip, [r1]
 800c612:	88bd      	ldrh	r5, [r7, #4]
 800c614:	f9b1 0002 	ldrsh.w	r0, [r1, #2]
 800c618:	e9d4 310c 	ldrd	r3, r1, [r4, #48]	; 0x30
 800c61c:	4465      	add	r5, ip
 800c61e:	b22d      	sxth	r5, r5
 800c620:	eba3 1545 	sub.w	r5, r3, r5, lsl #5
 800c624:	2d00      	cmp	r5, #0
 800c626:	eba3 134c 	sub.w	r3, r3, ip, lsl #5
 800c62a:	bfb8      	it	lt
 800c62c:	426d      	neglt	r5, r5
 800c62e:	2b00      	cmp	r3, #0
 800c630:	bfb8      	it	lt
 800c632:	425b      	neglt	r3, r3
 800c634:	429d      	cmp	r5, r3
 800c636:	bfb8      	it	lt
 800c638:	461d      	movlt	r5, r3
 800c63a:	88fb      	ldrh	r3, [r7, #6]
 800c63c:	4403      	add	r3, r0
 800c63e:	b21b      	sxth	r3, r3
 800c640:	eba1 1343 	sub.w	r3, r1, r3, lsl #5
 800c644:	2b00      	cmp	r3, #0
 800c646:	eba1 1140 	sub.w	r1, r1, r0, lsl #5
 800c64a:	bfb8      	it	lt
 800c64c:	425b      	neglt	r3, r3
 800c64e:	2900      	cmp	r1, #0
 800c650:	bfb8      	it	lt
 800c652:	4249      	neglt	r1, r1
 800c654:	428b      	cmp	r3, r1
 800c656:	bfb8      	it	lt
 800c658:	460b      	movlt	r3, r1
 800c65a:	115b      	asrs	r3, r3, #5
 800c65c:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800c660:	116d      	asrs	r5, r5, #5
 800c662:	3301      	adds	r3, #1
 800c664:	435b      	muls	r3, r3
 800c666:	3501      	adds	r5, #1
 800c668:	fb05 3505 	mla	r5, r5, r5, r3
 800c66c:	3001      	adds	r0, #1
 800c66e:	2302      	movs	r3, #2
 800c670:	fb92 f2f3 	sdiv	r2, r2, r3
 800c674:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c676:	1040      	asrs	r0, r0, #1
 800c678:	1a9a      	subs	r2, r3, r2
 800c67a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800c67e:	920a      	str	r2, [sp, #40]	; 0x28
 800c680:	f7ff fd14 	bl	800c0ac <_ZN8touchgfx7CWRUtil4sineEi>
 800c684:	a90b      	add	r1, sp, #44	; 0x2c
 800c686:	900b      	str	r0, [sp, #44]	; 0x2c
 800c688:	4630      	mov	r0, r6
 800c68a:	f7ff fd03 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c68e:	2320      	movs	r3, #32
 800c690:	fb90 f0f3 	sdiv	r0, r0, r3
 800c694:	4340      	muls	r0, r0
 800c696:	42a8      	cmp	r0, r5
 800c698:	dd87      	ble.n	800c5aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x38>
 800c69a:	2401      	movs	r4, #1
 800c69c:	e037      	b.n	800c70e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x19c>
 800c69e:	2102      	movs	r1, #2
 800c6a0:	fb93 f3f1 	sdiv	r3, r3, r1
 800c6a4:	4413      	add	r3, r2
 800c6a6:	9306      	str	r3, [sp, #24]
 800c6a8:	fb93 f3f1 	sdiv	r3, r3, r1
 800c6ac:	9305      	str	r3, [sp, #20]
 800c6ae:	e788      	b.n	800c5c2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x50>
 800c6b0:	f107 0320 	add.w	r3, r7, #32
 800c6b4:	fb93 f7f5 	sdiv	r7, r3, r5
 800c6b8:	fb05 3717 	mls	r7, r5, r7, r3
 800c6bc:	1bea      	subs	r2, r5, r7
 800c6be:	fb92 f7f5 	sdiv	r7, r2, r5
 800c6c2:	fb05 2717 	mls	r7, r5, r7, r2
 800c6c6:	441f      	add	r7, r3
 800c6c8:	e78f      	b.n	800c5ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x78>
 800c6ca:	9907      	ldr	r1, [sp, #28]
 800c6cc:	428a      	cmp	r2, r1
 800c6ce:	dd09      	ble.n	800c6e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x172>
 800c6d0:	9a05      	ldr	r2, [sp, #20]
 800c6d2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800c6d6:	930a      	str	r3, [sp, #40]	; 0x28
 800c6d8:	aa04      	add	r2, sp, #16
 800c6da:	4633      	mov	r3, r6
 800c6dc:	a90b      	add	r1, sp, #44	; 0x2c
 800c6de:	4620      	mov	r0, r4
 800c6e0:	f7ff fd98 	bl	800c214 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800c6e4:	e9dd 3003 	ldrd	r3, r0, [sp, #12]
 800c6e8:	9a06      	ldr	r2, [sp, #24]
 800c6ea:	1ac3      	subs	r3, r0, r3
 800c6ec:	b99a      	cbnz	r2, 800c716 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1a4>
 800c6ee:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c6f2:	da04      	bge.n	800c6fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800c6f4:	e9d4 120c 	ldrd	r1, r2, [r4, #48]	; 0x30
 800c6f8:	a80b      	add	r0, sp, #44	; 0x2c
 800c6fa:	f011 fbc9 	bl	801de90 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800c6fe:	21ff      	movs	r1, #255	; 0xff
 800c700:	a80b      	add	r0, sp, #44	; 0x2c
 800c702:	f011 fd3a 	bl	801e17a <_ZN8touchgfx6Canvas6renderEh>
 800c706:	4604      	mov	r4, r0
 800c708:	a80b      	add	r0, sp, #44	; 0x2c
 800c70a:	f011 fd75 	bl	801e1f8 <_ZN8touchgfx6CanvasD1Ev>
 800c70e:	4620      	mov	r0, r4
 800c710:	b03a      	add	sp, #232	; 0xe8
 800c712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c716:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
 800c71a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c71e:	ea4f 1747 	mov.w	r7, r7, lsl #5
 800c722:	da2b      	bge.n	800c77c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800c724:	f7ff fce4 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c728:	4631      	mov	r1, r6
 800c72a:	900a      	str	r0, [sp, #40]	; 0x28
 800c72c:	a805      	add	r0, sp, #20
 800c72e:	f7ff fcb1 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c732:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c734:	4418      	add	r0, r3
 800c736:	9008      	str	r0, [sp, #32]
 800c738:	9804      	ldr	r0, [sp, #16]
 800c73a:	f7ff fcfa 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c73e:	4631      	mov	r1, r6
 800c740:	900a      	str	r0, [sp, #40]	; 0x28
 800c742:	a805      	add	r0, sp, #20
 800c744:	f7ff fca6 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c748:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c74a:	1a18      	subs	r0, r3, r0
 800c74c:	9b04      	ldr	r3, [sp, #16]
 800c74e:	9009      	str	r0, [sp, #36]	; 0x24
 800c750:	443b      	add	r3, r7
 800c752:	930a      	str	r3, [sp, #40]	; 0x28
 800c754:	f10d 0818 	add.w	r8, sp, #24
 800c758:	9b04      	ldr	r3, [sp, #16]
 800c75a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c75c:	f503 53b4 	add.w	r3, r3, #5760	; 0x1680
 800c760:	4293      	cmp	r3, r2
 800c762:	dd0b      	ble.n	800c77c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x20a>
 800c764:	ab09      	add	r3, sp, #36	; 0x24
 800c766:	e9cd 6800 	strd	r6, r8, [sp]
 800c76a:	aa08      	add	r2, sp, #32
 800c76c:	a90b      	add	r1, sp, #44	; 0x2c
 800c76e:	4620      	mov	r0, r4
 800c770:	f7ff fd27 	bl	800c1c2 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800c774:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c776:	443b      	add	r3, r7
 800c778:	930a      	str	r3, [sp, #40]	; 0x28
 800c77a:	e7ed      	b.n	800c758 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e6>
 800c77c:	9a04      	ldr	r2, [sp, #16]
 800c77e:	9b07      	ldr	r3, [sp, #28]
 800c780:	429a      	cmp	r2, r3
 800c782:	dd0a      	ble.n	800c79a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x228>
 800c784:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800c788:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c78c:	930a      	str	r3, [sp, #40]	; 0x28
 800c78e:	aa04      	add	r2, sp, #16
 800c790:	4633      	mov	r3, r6
 800c792:	a90b      	add	r1, sp, #44	; 0x2c
 800c794:	4620      	mov	r0, r4
 800c796:	f7ff fd3d 	bl	800c214 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800c79a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800c79e:	9b03      	ldr	r3, [sp, #12]
 800c7a0:	4642      	mov	r2, r8
 800c7a2:	429a      	cmp	r2, r3
 800c7a4:	eba8 0805 	sub.w	r8, r8, r5
 800c7a8:	db0c      	blt.n	800c7c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x252>
 800c7aa:	9207      	str	r2, [sp, #28]
 800c7ac:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800c7b0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c7b4:	930a      	str	r3, [sp, #40]	; 0x28
 800c7b6:	aa07      	add	r2, sp, #28
 800c7b8:	4633      	mov	r3, r6
 800c7ba:	a90b      	add	r1, sp, #44	; 0x2c
 800c7bc:	4620      	mov	r0, r4
 800c7be:	f7ff fd29 	bl	800c214 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800c7c2:	e7ec      	b.n	800c79e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22c>
 800c7c4:	9a07      	ldr	r2, [sp, #28]
 800c7c6:	4293      	cmp	r3, r2
 800c7c8:	da0a      	bge.n	800c7e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x26e>
 800c7ca:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
 800c7ce:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800c7d2:	930a      	str	r3, [sp, #40]	; 0x28
 800c7d4:	aa03      	add	r2, sp, #12
 800c7d6:	4633      	mov	r3, r6
 800c7d8:	a90b      	add	r1, sp, #44	; 0x2c
 800c7da:	4620      	mov	r0, r4
 800c7dc:	f7ff fd1a 	bl	800c214 <_ZNK8touchgfx6Circle9lineToAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_>
 800c7e0:	e9dd 0303 	ldrd	r0, r3, [sp, #12]
 800c7e4:	1a1b      	subs	r3, r3, r0
 800c7e6:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800c7ea:	da88      	bge.n	800c6fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800c7ec:	f7ff fc80 	bl	800c0f0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800c7f0:	4631      	mov	r1, r6
 800c7f2:	900a      	str	r0, [sp, #40]	; 0x28
 800c7f4:	a805      	add	r0, sp, #20
 800c7f6:	f7ff fc4d 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c7fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c7fc:	4418      	add	r0, r3
 800c7fe:	9008      	str	r0, [sp, #32]
 800c800:	9803      	ldr	r0, [sp, #12]
 800c802:	f7ff fc96 	bl	800c132 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800c806:	4631      	mov	r1, r6
 800c808:	900a      	str	r0, [sp, #40]	; 0x28
 800c80a:	a805      	add	r0, sp, #20
 800c80c:	f7ff fc42 	bl	800c094 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800c810:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c812:	1a18      	subs	r0, r3, r0
 800c814:	9b03      	ldr	r3, [sp, #12]
 800c816:	9009      	str	r0, [sp, #36]	; 0x24
 800c818:	f5a3 53b4 	sub.w	r3, r3, #5760	; 0x1680
 800c81c:	443b      	add	r3, r7
 800c81e:	930a      	str	r3, [sp, #40]	; 0x28
 800c820:	ad06      	add	r5, sp, #24
 800c822:	9a03      	ldr	r2, [sp, #12]
 800c824:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c826:	429a      	cmp	r2, r3
 800c828:	f77f af69 	ble.w	800c6fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18c>
 800c82c:	ab09      	add	r3, sp, #36	; 0x24
 800c82e:	e9cd 6500 	strd	r6, r5, [sp]
 800c832:	aa08      	add	r2, sp, #32
 800c834:	a90b      	add	r1, sp, #44	; 0x2c
 800c836:	4620      	mov	r0, r4
 800c838:	f7ff fcc3 	bl	800c1c2 <_ZNK8touchgfx6Circle11lineToXYAR2ERNS_6CanvasERKNS_7CWRUtil2Q5ES6_S6_S6_>
 800c83c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c83e:	443b      	add	r3, r7
 800c840:	930a      	str	r3, [sp, #40]	; 0x28
 800c842:	e7ee      	b.n	800c822 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b0>

0800c844 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 800c844:	6281      	str	r1, [r0, #40]	; 0x28
 800c846:	4770      	bx	lr

0800c848 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800c848:	b513      	push	{r0, r1, r4, lr}
 800c84a:	6803      	ldr	r3, [r0, #0]
 800c84c:	4604      	mov	r4, r0
 800c84e:	4601      	mov	r1, r0
 800c850:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c852:	4668      	mov	r0, sp
 800c854:	4798      	blx	r3
 800c856:	6823      	ldr	r3, [r4, #0]
 800c858:	4669      	mov	r1, sp
 800c85a:	691b      	ldr	r3, [r3, #16]
 800c85c:	4620      	mov	r0, r4
 800c85e:	4798      	blx	r3
 800c860:	b002      	add	sp, #8
 800c862:	bd10      	pop	{r4, pc}

0800c864 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 800c864:	b510      	push	{r4, lr}
 800c866:	2200      	movs	r2, #0
 800c868:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800c86c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800c870:	8002      	strh	r2, [r0, #0]
 800c872:	8042      	strh	r2, [r0, #2]
 800c874:	8084      	strh	r4, [r0, #4]
 800c876:	80c1      	strh	r1, [r0, #6]
 800c878:	bd10      	pop	{r4, pc}

0800c87a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 800c87a:	2200      	movs	r2, #0
 800c87c:	8002      	strh	r2, [r0, #0]
 800c87e:	8042      	strh	r2, [r0, #2]
 800c880:	8082      	strh	r2, [r0, #4]
 800c882:	80c2      	strh	r2, [r0, #6]
 800c884:	4770      	bx	lr
	...

0800c888 <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 800c888:	b508      	push	{r3, lr}
 800c88a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c88c:	b928      	cbnz	r0, 800c89a <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 800c88e:	4b03      	ldr	r3, [pc, #12]	; (800c89c <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 800c890:	4a03      	ldr	r2, [pc, #12]	; (800c8a0 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 800c892:	4804      	ldr	r0, [pc, #16]	; (800c8a4 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 800c894:	2123      	movs	r1, #35	; 0x23
 800c896:	f012 fdad 	bl	801f3f4 <__assert_func>
 800c89a:	bd08      	pop	{r3, pc}
 800c89c:	08022cd0 	.word	0x08022cd0
 800c8a0:	08022db0 	.word	0x08022db0
 800c8a4:	08022cf7 	.word	0x08022cf7

0800c8a8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800c8a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8ac:	4604      	mov	r4, r0
 800c8ae:	b089      	sub	sp, #36	; 0x24
 800c8b0:	6808      	ldr	r0, [r1, #0]
 800c8b2:	6849      	ldr	r1, [r1, #4]
 800c8b4:	ab02      	add	r3, sp, #8
 800c8b6:	c303      	stmia	r3!, {r0, r1}
 800c8b8:	4b41      	ldr	r3, [pc, #260]	; (800c9c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x118>)
 800c8ba:	781b      	ldrb	r3, [r3, #0]
 800c8bc:	2b01      	cmp	r3, #1
 800c8be:	6823      	ldr	r3, [r4, #0]
 800c8c0:	4621      	mov	r1, r4
 800c8c2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c8c4:	a804      	add	r0, sp, #16
 800c8c6:	bf1f      	itttt	ne
 800c8c8:	f10d 0906 	addne.w	r9, sp, #6
 800c8cc:	ae03      	addne	r6, sp, #12
 800c8ce:	f10d 050e 	addne.w	r5, sp, #14
 800c8d2:	f10d 080a 	addne.w	r8, sp, #10
 800c8d6:	bf01      	itttt	eq
 800c8d8:	f10d 090e 	addeq.w	r9, sp, #14
 800c8dc:	f10d 0606 	addeq.w	r6, sp, #6
 800c8e0:	ad03      	addeq	r5, sp, #12
 800c8e2:	f10d 0808 	addeq.w	r8, sp, #8
 800c8e6:	4798      	blx	r3
 800c8e8:	f04f 0a00 	mov.w	sl, #0
 800c8ec:	f04f 0b01 	mov.w	fp, #1
 800c8f0:	f9b5 3000 	ldrsh.w	r3, [r5]
 800c8f4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800c8f8:	2b00      	cmp	r3, #0
 800c8fa:	d056      	beq.n	800c9aa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x102>
 800c8fc:	4293      	cmp	r3, r2
 800c8fe:	bfa8      	it	ge
 800c900:	4613      	movge	r3, r2
 800c902:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c906:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 800c90a:	2f00      	cmp	r7, #0
 800c90c:	dd34      	ble.n	800c978 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd0>
 800c90e:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 800c912:	f8bd c014 	ldrh.w	ip, [sp, #20]
 800c916:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 800c91a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800c91e:	f9b6 e000 	ldrsh.w	lr, [r6]
 800c922:	f9b9 1000 	ldrsh.w	r1, [r9]
 800c926:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c92a:	4484      	add	ip, r0
 800c92c:	fa0f fc8c 	sxth.w	ip, ip
 800c930:	4562      	cmp	r2, ip
 800c932:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c936:	f8ad e01c 	strh.w	lr, [sp, #28]
 800c93a:	f8ad 101e 	strh.w	r1, [sp, #30]
 800c93e:	da29      	bge.n	800c994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800c940:	4472      	add	r2, lr
 800c942:	b212      	sxth	r2, r2
 800c944:	4290      	cmp	r0, r2
 800c946:	da25      	bge.n	800c994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800c948:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 800c94c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c950:	4402      	add	r2, r0
 800c952:	b212      	sxth	r2, r2
 800c954:	4293      	cmp	r3, r2
 800c956:	da1d      	bge.n	800c994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800c958:	440b      	add	r3, r1
 800c95a:	b21b      	sxth	r3, r3
 800c95c:	4298      	cmp	r0, r3
 800c95e:	da19      	bge.n	800c994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800c960:	6823      	ldr	r3, [r4, #0]
 800c962:	a906      	add	r1, sp, #24
 800c964:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c966:	4620      	mov	r0, r4
 800c968:	4798      	blx	r3
 800c96a:	b998      	cbnz	r0, 800c994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800c96c:	107f      	asrs	r7, r7, #1
 800c96e:	f8ad 7006 	strh.w	r7, [sp, #6]
 800c972:	f04f 0a01 	mov.w	sl, #1
 800c976:	e7c6      	b.n	800c906 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800c978:	d10c      	bne.n	800c994 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 800c97a:	f8ad b006 	strh.w	fp, [sp, #6]
 800c97e:	f8b8 2000 	ldrh.w	r2, [r8]
 800c982:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 800c986:	440a      	add	r2, r1
 800c988:	f8a8 2000 	strh.w	r2, [r8]
 800c98c:	882b      	ldrh	r3, [r5, #0]
 800c98e:	1a5b      	subs	r3, r3, r1
 800c990:	802b      	strh	r3, [r5, #0]
 800c992:	e7ad      	b.n	800c8f0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800c994:	f1ba 0f00 	cmp.w	sl, #0
 800c998:	d0f1      	beq.n	800c97e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 800c99a:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800c99e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800c9a2:	429a      	cmp	r2, r3
 800c9a4:	bf08      	it	eq
 800c9a6:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 800c9a8:	e7e9      	b.n	800c97e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 800c9aa:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800c9ae:	429a      	cmp	r2, r3
 800c9b0:	bf04      	itt	eq
 800c9b2:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 800c9b6:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 800c9b8:	b009      	add	sp, #36	; 0x24
 800c9ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9be:	bf00      	nop
 800c9c0:	2000d404 	.word	0x2000d404

0800c9c4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c9c4:	2200      	movs	r2, #0
 800c9c6:	8082      	strh	r2, [r0, #4]
 800c9c8:	80c2      	strh	r2, [r0, #6]
 800c9ca:	8102      	strh	r2, [r0, #8]
 800c9cc:	8142      	strh	r2, [r0, #10]
 800c9ce:	8182      	strh	r2, [r0, #12]
 800c9d0:	81c2      	strh	r2, [r0, #14]
 800c9d2:	8202      	strh	r2, [r0, #16]
 800c9d4:	8242      	strh	r2, [r0, #18]
 800c9d6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c9da:	61c2      	str	r2, [r0, #28]
 800c9dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c9e0:	2101      	movs	r1, #1
 800c9e2:	6282      	str	r2, [r0, #40]	; 0x28
 800c9e4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c9e8:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c9ec:	8582      	strh	r2, [r0, #44]	; 0x2c
 800c9ee:	4903      	ldr	r1, [pc, #12]	; (800c9fc <_ZN8touchgfx12CanvasWidgetC1Ev+0x38>)
 800c9f0:	6001      	str	r1, [r0, #0]
 800c9f2:	22ff      	movs	r2, #255	; 0xff
 800c9f4:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800c9f8:	4770      	bx	lr
 800c9fa:	bf00      	nop
 800c9fc:	08022d3c 	.word	0x08022d3c

0800ca00 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800ca00:	6803      	ldr	r3, [r0, #0]
 800ca02:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800ca06:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ca08:	4718      	bx	r3

0800ca0a <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800ca0a:	4770      	bx	lr

0800ca0c <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800ca0c:	b510      	push	{r4, lr}
 800ca0e:	212c      	movs	r1, #44	; 0x2c
 800ca10:	4604      	mov	r4, r0
 800ca12:	f012 fcc0 	bl	801f396 <_ZdlPvj>
 800ca16:	4620      	mov	r0, r4
 800ca18:	bd10      	pop	{r4, pc}

0800ca1a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800ca1a:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800ca1e:	2bff      	cmp	r3, #255	; 0xff
 800ca20:	b510      	push	{r4, lr}
 800ca22:	d104      	bne.n	800ca2e <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800ca24:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800ca26:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ca2a:	429a      	cmp	r2, r3
 800ca2c:	d105      	bne.n	800ca3a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800ca2e:	2300      	movs	r3, #0
 800ca30:	8003      	strh	r3, [r0, #0]
 800ca32:	8043      	strh	r3, [r0, #2]
 800ca34:	8083      	strh	r3, [r0, #4]
 800ca36:	80c3      	strh	r3, [r0, #6]
 800ca38:	bd10      	pop	{r4, pc}
 800ca3a:	2300      	movs	r3, #0
 800ca3c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800ca40:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800ca44:	8003      	strh	r3, [r0, #0]
 800ca46:	8043      	strh	r3, [r0, #2]
 800ca48:	8084      	strh	r4, [r0, #4]
 800ca4a:	80c2      	strh	r2, [r0, #6]
 800ca4c:	e7f4      	b.n	800ca38 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800ca4e <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800ca4e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ca52:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800ca56:	b087      	sub	sp, #28
 800ca58:	4604      	mov	r4, r0
 800ca5a:	4689      	mov	r9, r1
 800ca5c:	b363      	cbz	r3, 800cab8 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800ca5e:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800ca60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ca64:	429a      	cmp	r2, r3
 800ca66:	d027      	beq.n	800cab8 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800ca68:	ad06      	add	r5, sp, #24
 800ca6a:	2700      	movs	r7, #0
 800ca6c:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800ca70:	4628      	mov	r0, r5
 800ca72:	f005 fa79 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ca76:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ca7a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800ca7e:	6823      	ldr	r3, [r4, #0]
 800ca80:	f8ad 0014 	strh.w	r0, [sp, #20]
 800ca84:	a904      	add	r1, sp, #16
 800ca86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca88:	9704      	str	r7, [sp, #16]
 800ca8a:	4620      	mov	r0, r4
 800ca8c:	4798      	blx	r3
 800ca8e:	f7f4 f9ad 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800ca92:	6803      	ldr	r3, [r0, #0]
 800ca94:	4606      	mov	r6, r0
 800ca96:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800ca9a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800ca9c:	f8ad 300c 	strh.w	r3, [sp, #12]
 800caa0:	4628      	mov	r0, r5
 800caa2:	f005 fb69 	bl	8012178 <_ZNK8touchgfx6Bitmap7getDataEv>
 800caa6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800caaa:	9300      	str	r3, [sp, #0]
 800caac:	4601      	mov	r1, r0
 800caae:	9701      	str	r7, [sp, #4]
 800cab0:	464b      	mov	r3, r9
 800cab2:	aa04      	add	r2, sp, #16
 800cab4:	4630      	mov	r0, r6
 800cab6:	47c0      	blx	r8
 800cab8:	b007      	add	sp, #28
 800caba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800cabe <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800cabe:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cac0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cac4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cac8:	6803      	ldr	r3, [r0, #0]
 800caca:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800cace:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cad2:	460d      	mov	r5, r1
 800cad4:	2100      	movs	r1, #0
 800cad6:	4604      	mov	r4, r0
 800cad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cada:	9100      	str	r1, [sp, #0]
 800cadc:	4669      	mov	r1, sp
 800cade:	4798      	blx	r3
 800cae0:	4621      	mov	r1, r4
 800cae2:	a802      	add	r0, sp, #8
 800cae4:	f003 fc7b 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cae8:	f7f4 f980 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800caec:	6803      	ldr	r3, [r0, #0]
 800caee:	aa02      	add	r2, sp, #8
 800caf0:	695e      	ldr	r6, [r3, #20]
 800caf2:	4669      	mov	r1, sp
 800caf4:	462b      	mov	r3, r5
 800caf6:	47b0      	blx	r6
 800caf8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cafc:	2800      	cmp	r0, #0
 800cafe:	bf08      	it	eq
 800cb00:	461d      	moveq	r5, r3
 800cb02:	84e5      	strh	r5, [r4, #38]	; 0x26
 800cb04:	b004      	add	sp, #16
 800cb06:	bd70      	pop	{r4, r5, r6, pc}

0800cb08 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800cb08:	2200      	movs	r2, #0
 800cb0a:	8082      	strh	r2, [r0, #4]
 800cb0c:	80c2      	strh	r2, [r0, #6]
 800cb0e:	8102      	strh	r2, [r0, #8]
 800cb10:	8142      	strh	r2, [r0, #10]
 800cb12:	8182      	strh	r2, [r0, #12]
 800cb14:	81c2      	strh	r2, [r0, #14]
 800cb16:	8202      	strh	r2, [r0, #16]
 800cb18:	8242      	strh	r2, [r0, #18]
 800cb1a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800cb1e:	61c2      	str	r2, [r0, #28]
 800cb20:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800cb24:	2201      	movs	r2, #1
 800cb26:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800cb2a:	4a04      	ldr	r2, [pc, #16]	; (800cb3c <_ZN8touchgfx14SnapshotWidgetC1Ev+0x34>)
 800cb2c:	6002      	str	r2, [r0, #0]
 800cb2e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800cb32:	84c2      	strh	r2, [r0, #38]	; 0x26
 800cb34:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800cb38:	4770      	bx	lr
 800cb3a:	bf00      	nop
 800cb3c:	08022e08 	.word	0x08022e08

0800cb40 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800cb40:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800cb44:	4770      	bx	lr

0800cb46 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800cb46:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800cb4a:	4770      	bx	lr

0800cb4c <_ZN8touchgfx13ScalableImageD1Ev>:
 800cb4c:	4770      	bx	lr

0800cb4e <_ZN8touchgfx13ScalableImageD0Ev>:
 800cb4e:	b510      	push	{r4, lr}
 800cb50:	212c      	movs	r1, #44	; 0x2c
 800cb52:	4604      	mov	r4, r0
 800cb54:	f012 fc1f 	bl	801f396 <_ZdlPvj>
 800cb58:	4620      	mov	r0, r4
 800cb5a:	bd10      	pop	{r4, pc}

0800cb5c <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800cb5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cb5e:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800cb62:	2bff      	cmp	r3, #255	; 0xff
 800cb64:	4605      	mov	r5, r0
 800cb66:	d007      	beq.n	800cb78 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x1c>
 800cb68:	2300      	movs	r3, #0
 800cb6a:	802b      	strh	r3, [r5, #0]
 800cb6c:	806b      	strh	r3, [r5, #2]
 800cb6e:	80ab      	strh	r3, [r5, #4]
 800cb70:	80eb      	strh	r3, [r5, #6]
 800cb72:	4628      	mov	r0, r5
 800cb74:	b004      	add	sp, #16
 800cb76:	bd70      	pop	{r4, r5, r6, pc}
 800cb78:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800cb7c:	4621      	mov	r1, r4
 800cb7e:	4668      	mov	r0, sp
 800cb80:	f005 fa66 	bl	8012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cb84:	4620      	mov	r0, r4
 800cb86:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800cb8a:	f005 f9ed 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cb8e:	4286      	cmp	r6, r0
 800cb90:	d1ea      	bne.n	800cb68 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800cb92:	4621      	mov	r1, r4
 800cb94:	a802      	add	r0, sp, #8
 800cb96:	f005 fa5b 	bl	8012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cb9a:	4620      	mov	r0, r4
 800cb9c:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800cba0:	f005 fa1c 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cba4:	4286      	cmp	r6, r0
 800cba6:	d1df      	bne.n	800cb68 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800cba8:	4621      	mov	r1, r4
 800cbaa:	4628      	mov	r0, r5
 800cbac:	f005 fa50 	bl	8012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800cbb0:	e7df      	b.n	800cb72 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x16>
	...

0800cbb4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800cbb4:	b538      	push	{r3, r4, r5, lr}
 800cbb6:	2300      	movs	r3, #0
 800cbb8:	8083      	strh	r3, [r0, #4]
 800cbba:	80c3      	strh	r3, [r0, #6]
 800cbbc:	8103      	strh	r3, [r0, #8]
 800cbbe:	8143      	strh	r3, [r0, #10]
 800cbc0:	8183      	strh	r3, [r0, #12]
 800cbc2:	81c3      	strh	r3, [r0, #14]
 800cbc4:	8203      	strh	r3, [r0, #16]
 800cbc6:	8243      	strh	r3, [r0, #18]
 800cbc8:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800cbcc:	61c3      	str	r3, [r0, #28]
 800cbce:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800cbd2:	4b09      	ldr	r3, [pc, #36]	; (800cbf8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x44>)
 800cbd4:	6003      	str	r3, [r0, #0]
 800cbd6:	2501      	movs	r5, #1
 800cbd8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cbdc:	4604      	mov	r4, r0
 800cbde:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800cbe2:	84c3      	strh	r3, [r0, #38]	; 0x26
 800cbe4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800cbe8:	f000 fd60 	bl	800d6ac <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800cbec:	4b03      	ldr	r3, [pc, #12]	; (800cbfc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800cbee:	6023      	str	r3, [r4, #0]
 800cbf0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800cbf4:	4620      	mov	r0, r4
 800cbf6:	bd38      	pop	{r3, r4, r5, pc}
 800cbf8:	08023088 	.word	0x08023088
 800cbfc:	08022e74 	.word	0x08022e74

0800cc00 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800cc00:	4603      	mov	r3, r0
 800cc02:	3026      	adds	r0, #38	; 0x26
 800cc04:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800cc08:	b90b      	cbnz	r3, 800cc0e <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800cc0a:	f003 bc8e 	b.w	801052a <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800cc0e:	f003 bc9c 	b.w	801054a <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800cc14 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800cc14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc18:	4604      	mov	r4, r0
 800cc1a:	469b      	mov	fp, r3
 800cc1c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800cc20:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800cc24:	f9b1 6000 	ldrsh.w	r6, [r1]
 800cc28:	8888      	ldrh	r0, [r1, #4]
 800cc2a:	b0ab      	sub	sp, #172	; 0xac
 800cc2c:	4430      	add	r0, r6
 800cc2e:	b280      	uxth	r0, r0
 800cc30:	9206      	str	r2, [sp, #24]
 800cc32:	fa0f fe80 	sxth.w	lr, r0
 800cc36:	2200      	movs	r2, #0
 800cc38:	4596      	cmp	lr, r2
 800cc3a:	e9dd a934 	ldrd	sl, r9, [sp, #208]	; 0xd0
 800cc3e:	e9dd 8736 	ldrd	r8, r7, [sp, #216]	; 0xd8
 800cc42:	920e      	str	r2, [sp, #56]	; 0x38
 800cc44:	f340 80f3 	ble.w	800ce2e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800cc48:	45b4      	cmp	ip, r6
 800cc4a:	f340 80f0 	ble.w	800ce2e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800cc4e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800cc52:	88ca      	ldrh	r2, [r1, #6]
 800cc54:	442a      	add	r2, r5
 800cc56:	b292      	uxth	r2, r2
 800cc58:	b211      	sxth	r1, r2
 800cc5a:	2900      	cmp	r1, #0
 800cc5c:	f340 80e7 	ble.w	800ce2e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800cc60:	42ab      	cmp	r3, r5
 800cc62:	f340 80e4 	ble.w	800ce2e <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800cc66:	45f4      	cmp	ip, lr
 800cc68:	bfb8      	it	lt
 800cc6a:	fa1f f08c 	uxthlt.w	r0, ip
 800cc6e:	428b      	cmp	r3, r1
 800cc70:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800cc74:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800cc78:	bfb8      	it	lt
 800cc7a:	b29a      	uxthlt	r2, r3
 800cc7c:	1b80      	subs	r0, r0, r6
 800cc7e:	1b52      	subs	r2, r2, r5
 800cc80:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
 800cc84:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800cc88:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800cc8c:	f8ad 503a 	strh.w	r5, [sp, #58]	; 0x3a
 800cc90:	ab0e      	add	r3, sp, #56	; 0x38
 800cc92:	e893 0003 	ldmia.w	r3, {r0, r1}
 800cc96:	6822      	ldr	r2, [r4, #0]
 800cc98:	9307      	str	r3, [sp, #28]
 800cc9a:	ad10      	add	r5, sp, #64	; 0x40
 800cc9c:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800cc9e:	e885 0003 	stmia.w	r5, {r0, r1}
 800cca2:	4629      	mov	r1, r5
 800cca4:	4620      	mov	r0, r4
 800cca6:	4790      	blx	r2
 800cca8:	4621      	mov	r1, r4
 800ccaa:	a812      	add	r0, sp, #72	; 0x48
 800ccac:	f003 fb97 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ccb0:	a812      	add	r0, sp, #72	; 0x48
 800ccb2:	f002 f9af 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ccb6:	9b07      	ldr	r3, [sp, #28]
 800ccb8:	1d26      	adds	r6, r4, #4
 800ccba:	4618      	mov	r0, r3
 800ccbc:	4631      	mov	r1, r6
 800ccbe:	f002 f991 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ccc2:	4628      	mov	r0, r5
 800ccc4:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800ccc8:	f002 f9a4 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800cccc:	4628      	mov	r0, r5
 800ccce:	f005 fa53 	bl	8012178 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ccd2:	9007      	str	r0, [sp, #28]
 800ccd4:	2800      	cmp	r0, #0
 800ccd6:	f000 80a7 	beq.w	800ce28 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x214>
 800ccda:	f8db 2000 	ldr.w	r2, [fp]
 800ccde:	9208      	str	r2, [sp, #32]
 800cce0:	f8db 2004 	ldr.w	r2, [fp, #4]
 800cce4:	9209      	str	r2, [sp, #36]	; 0x24
 800cce6:	f8db 2008 	ldr.w	r2, [fp, #8]
 800ccea:	920a      	str	r2, [sp, #40]	; 0x28
 800ccec:	f8da 2000 	ldr.w	r2, [sl]
 800ccf0:	920b      	str	r2, [sp, #44]	; 0x2c
 800ccf2:	f8da 2004 	ldr.w	r2, [sl, #4]
 800ccf6:	920c      	str	r2, [sp, #48]	; 0x30
 800ccf8:	f8da 2008 	ldr.w	r2, [sl, #8]
 800ccfc:	920d      	str	r2, [sp, #52]	; 0x34
 800ccfe:	a90b      	add	r1, sp, #44	; 0x2c
 800cd00:	4632      	mov	r2, r6
 800cd02:	a808      	add	r0, sp, #32
 800cd04:	f002 f952 	bl	800efac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cd08:	4632      	mov	r2, r6
 800cd0a:	a90c      	add	r1, sp, #48	; 0x30
 800cd0c:	a809      	add	r0, sp, #36	; 0x24
 800cd0e:	f002 f94d 	bl	800efac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cd12:	4632      	mov	r2, r6
 800cd14:	a90d      	add	r1, sp, #52	; 0x34
 800cd16:	a80a      	add	r0, sp, #40	; 0x28
 800cd18:	f002 f948 	bl	800efac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800cd1c:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800cd20:	ed97 6a00 	vldr	s12, [r7]
 800cd24:	ed99 5a00 	vldr	s10, [r9]
 800cd28:	edd8 5a00 	vldr	s11, [r8]
 800cd2c:	edd9 6a01 	vldr	s13, [r9, #4]
 800cd30:	f8d9 e008 	ldr.w	lr, [r9, #8]
 800cd34:	f8d8 c008 	ldr.w	ip, [r8, #8]
 800cd38:	f8d7 a004 	ldr.w	sl, [r7, #4]
 800cd3c:	9b06      	ldr	r3, [sp, #24]
 800cd3e:	f8d8 b004 	ldr.w	fp, [r8, #4]
 800cd42:	68bf      	ldr	r7, [r7, #8]
 800cd44:	ed8d 5a1d 	vstr	s10, [sp, #116]	; 0x74
 800cd48:	eeb0 7a67 	vmov.f32	s14, s15
 800cd4c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cd50:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800cd54:	edcd 5a1e 	vstr	s11, [sp, #120]	; 0x78
 800cd58:	ee17 6a10 	vmov	r6, s14
 800cd5c:	eeb0 7a67 	vmov.f32	s14, s15
 800cd60:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cd64:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800cd68:	ed8d 6a1f 	vstr	s12, [sp, #124]	; 0x7c
 800cd6c:	ee17 0a10 	vmov	r0, s14
 800cd70:	eeb0 7a67 	vmov.f32	s14, s15
 800cd74:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cd78:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800cd7c:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 800cd80:	ee17 1a10 	vmov	r1, s14
 800cd84:	eeb0 7a67 	vmov.f32	s14, s15
 800cd88:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cd8c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800cd90:	f8cd e09c 	str.w	lr, [sp, #156]	; 0x9c
 800cd94:	ee17 2a10 	vmov	r2, s14
 800cd98:	ed9d 7a08 	vldr	s14, [sp, #32]
 800cd9c:	9225      	str	r2, [sp, #148]	; 0x94
 800cd9e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800cda2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800cda6:	4a23      	ldr	r2, [pc, #140]	; (800ce34 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800cda8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 800cdac:	e9cd 0120 	strd	r0, r1, [sp, #128]	; 0x80
 800cdb0:	edcd 7a26 	vstr	s15, [sp, #152]	; 0x98
 800cdb4:	f8cd c0a0 	str.w	ip, [sp, #160]	; 0xa0
 800cdb8:	9314      	str	r3, [sp, #80]	; 0x50
 800cdba:	961c      	str	r6, [sp, #112]	; 0x70
 800cdbc:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800cdc0:	f8cd a090 	str.w	sl, [sp, #144]	; 0x90
 800cdc4:	9729      	str	r7, [sp, #164]	; 0xa4
 800cdc6:	4628      	mov	r0, r5
 800cdc8:	8812      	ldrh	r2, [r2, #0]
 800cdca:	9b07      	ldr	r3, [sp, #28]
 800cdcc:	9215      	str	r2, [sp, #84]	; 0x54
 800cdce:	9316      	str	r3, [sp, #88]	; 0x58
 800cdd0:	f005 fa04 	bl	80121dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800cdd4:	9017      	str	r0, [sp, #92]	; 0x5c
 800cdd6:	4628      	mov	r0, r5
 800cdd8:	f005 f8c6 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cddc:	9018      	str	r0, [sp, #96]	; 0x60
 800cdde:	4628      	mov	r0, r5
 800cde0:	f005 f8fc 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800cde4:	9019      	str	r0, [sp, #100]	; 0x64
 800cde6:	4628      	mov	r0, r5
 800cde8:	f005 f8be 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800cdec:	4b12      	ldr	r3, [pc, #72]	; (800ce38 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x224>)
 800cdee:	901a      	str	r0, [sp, #104]	; 0x68
 800cdf0:	681b      	ldr	r3, [r3, #0]
 800cdf2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800cdf6:	b10a      	cbz	r2, 800cdfc <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1e8>
 800cdf8:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800cdfa:	b905      	cbnz	r5, 800cdfe <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800cdfc:	689d      	ldr	r5, [r3, #8]
 800cdfe:	682b      	ldr	r3, [r5, #0]
 800ce00:	4620      	mov	r0, r4
 800ce02:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800ce04:	f7ff fefc 	bl	800cc00 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800ce08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ce0c:	9304      	str	r3, [sp, #16]
 800ce0e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ce12:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800ce16:	ab10      	add	r3, sp, #64	; 0x40
 800ce18:	9301      	str	r3, [sp, #4]
 800ce1a:	ab12      	add	r3, sp, #72	; 0x48
 800ce1c:	9300      	str	r3, [sp, #0]
 800ce1e:	aa1b      	add	r2, sp, #108	; 0x6c
 800ce20:	ab16      	add	r3, sp, #88	; 0x58
 800ce22:	a914      	add	r1, sp, #80	; 0x50
 800ce24:	4628      	mov	r0, r5
 800ce26:	47b0      	blx	r6
 800ce28:	b02b      	add	sp, #172	; 0xac
 800ce2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce2e:	2300      	movs	r3, #0
 800ce30:	930f      	str	r3, [sp, #60]	; 0x3c
 800ce32:	e72d      	b.n	800cc90 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800ce34:	2000d406 	.word	0x2000d406
 800ce38:	2000d40c 	.word	0x2000d40c

0800ce3c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800ce3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce40:	ed2d 8b08 	vpush	{d8-d11}
 800ce44:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800ce48:	b094      	sub	sp, #80	; 0x50
 800ce4a:	4680      	mov	r8, r0
 800ce4c:	4689      	mov	r9, r1
 800ce4e:	2b00      	cmp	r3, #0
 800ce50:	d07d      	beq.n	800cf4e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x112>
 800ce52:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ce56:	ed9f 8a45 	vldr	s16, [pc, #276]	; 800cf6c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x130>
 800ce5a:	ee09 3a10 	vmov	s18, r3
 800ce5e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ce62:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800ce66:	ee08 3a90 	vmov	s17, r3
 800ce6a:	4620      	mov	r0, r4
 800ce6c:	4b40      	ldr	r3, [pc, #256]	; (800cf70 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x134>)
 800ce6e:	930b      	str	r3, [sp, #44]	; 0x2c
 800ce70:	930c      	str	r3, [sp, #48]	; 0x30
 800ce72:	930d      	str	r3, [sp, #52]	; 0x34
 800ce74:	f005 f878 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce78:	ee07 0a90 	vmov	s15, r0
 800ce7c:	4620      	mov	r0, r4
 800ce7e:	eeb8 aa67 	vcvt.f32.u32	s20, s15
 800ce82:	f005 f8ab 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ce86:	4b3b      	ldr	r3, [pc, #236]	; (800cf74 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x138>)
 800ce88:	781b      	ldrb	r3, [r3, #0]
 800ce8a:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800ce8e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800ce92:	ee07 0a90 	vmov	s15, r0
 800ce96:	2b01      	cmp	r3, #1
 800ce98:	ee39 9a08 	vadd.f32	s18, s18, s16
 800ce9c:	ee78 8a88 	vadd.f32	s17, s17, s16
 800cea0:	eef8 9a67 	vcvt.f32.u32	s19, s15
 800cea4:	d158      	bne.n	800cf58 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x11c>
 800cea6:	eef0 aa4a 	vmov.f32	s21, s20
 800ceaa:	eeb0 ba69 	vmov.f32	s22, s19
 800ceae:	eef0 ba69 	vmov.f32	s23, s19
 800ceb2:	ee1a aa10 	vmov	sl, s20
 800ceb6:	eef0 9a48 	vmov.f32	s19, s16
 800ceba:	eeb0 aa48 	vmov.f32	s20, s16
 800cebe:	af11      	add	r7, sp, #68	; 0x44
 800cec0:	ae0e      	add	r6, sp, #56	; 0x38
 800cec2:	ad0b      	add	r5, sp, #44	; 0x2c
 800cec4:	ac08      	add	r4, sp, #32
 800cec6:	ab05      	add	r3, sp, #20
 800cec8:	2200      	movs	r2, #0
 800ceca:	4649      	mov	r1, r9
 800cecc:	4640      	mov	r0, r8
 800cece:	9703      	str	r7, [sp, #12]
 800ced0:	9602      	str	r6, [sp, #8]
 800ced2:	9501      	str	r5, [sp, #4]
 800ced4:	9400      	str	r4, [sp, #0]
 800ced6:	ed8d 8a05 	vstr	s16, [sp, #20]
 800ceda:	ed8d 9a06 	vstr	s18, [sp, #24]
 800cede:	ed8d 9a07 	vstr	s18, [sp, #28]
 800cee2:	ed8d 8a08 	vstr	s16, [sp, #32]
 800cee6:	ed8d 8a09 	vstr	s16, [sp, #36]	; 0x24
 800ceea:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800ceee:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800cef2:	ed8d aa0f 	vstr	s20, [sp, #60]	; 0x3c
 800cef6:	edcd ba10 	vstr	s23, [sp, #64]	; 0x40
 800cefa:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800cefe:	ed8d 8a12 	vstr	s16, [sp, #72]	; 0x48
 800cf02:	edcd 9a13 	vstr	s19, [sp, #76]	; 0x4c
 800cf06:	f7ff fe85 	bl	800cc14 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800cf0a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800cf0e:	e9cd 4500 	strd	r4, r5, [sp]
 800cf12:	ab05      	add	r3, sp, #20
 800cf14:	2200      	movs	r2, #0
 800cf16:	4649      	mov	r1, r9
 800cf18:	4640      	mov	r0, r8
 800cf1a:	ed8d 8a05 	vstr	s16, [sp, #20]
 800cf1e:	ed8d 9a06 	vstr	s18, [sp, #24]
 800cf22:	ed8d 8a07 	vstr	s16, [sp, #28]
 800cf26:	ed8d 8a08 	vstr	s16, [sp, #32]
 800cf2a:	edcd 8a09 	vstr	s17, [sp, #36]	; 0x24
 800cf2e:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800cf32:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800cf36:	edcd ba0f 	vstr	s23, [sp, #60]	; 0x3c
 800cf3a:	ed8d ba10 	vstr	s22, [sp, #64]	; 0x40
 800cf3e:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800cf42:	edcd 9a12 	vstr	s19, [sp, #72]	; 0x48
 800cf46:	edcd aa13 	vstr	s21, [sp, #76]	; 0x4c
 800cf4a:	f7ff fe63 	bl	800cc14 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800cf4e:	b014      	add	sp, #80	; 0x50
 800cf50:	ecbd 8b08 	vpop	{d8-d11}
 800cf54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cf58:	eef0 aa69 	vmov.f32	s21, s19
 800cf5c:	eef0 ba4a 	vmov.f32	s23, s20
 800cf60:	eeb0 ba48 	vmov.f32	s22, s16
 800cf64:	ee18 aa10 	vmov	sl, s16
 800cf68:	e7a9      	b.n	800cebe <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x82>
 800cf6a:	bf00      	nop
 800cf6c:	00000000 	.word	0x00000000
 800cf70:	42c80000 	.word	0x42c80000
 800cf74:	2000d404 	.word	0x2000d404

0800cf78 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800cf78:	2200      	movs	r2, #0
 800cf7a:	8002      	strh	r2, [r0, #0]
 800cf7c:	8042      	strh	r2, [r0, #2]
 800cf7e:	8082      	strh	r2, [r0, #4]
 800cf80:	80c2      	strh	r2, [r0, #6]
 800cf82:	4770      	bx	lr

0800cf84 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800cf84:	b570      	push	{r4, r5, r6, lr}
 800cf86:	6803      	ldr	r3, [r0, #0]
 800cf88:	4604      	mov	r4, r0
 800cf8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf8c:	4615      	mov	r5, r2
 800cf8e:	4798      	blx	r3
 800cf90:	6823      	ldr	r3, [r4, #0]
 800cf92:	4629      	mov	r1, r5
 800cf94:	4620      	mov	r0, r4
 800cf96:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800cf98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cf9c:	4718      	bx	r3

0800cf9e <_ZN8touchgfx8TextAreaD1Ev>:
 800cf9e:	4770      	bx	lr

0800cfa0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800cfa0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cfa2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800cfa4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800cfa8:	4299      	cmp	r1, r3
 800cfaa:	d029      	beq.n	800d000 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800cfac:	4b15      	ldr	r3, [pc, #84]	; (800d004 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800cfae:	681b      	ldr	r3, [r3, #0]
 800cfb0:	b92b      	cbnz	r3, 800cfbe <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800cfb2:	4b15      	ldr	r3, [pc, #84]	; (800d008 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800cfb4:	4a15      	ldr	r2, [pc, #84]	; (800d00c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800cfb6:	21b1      	movs	r1, #177	; 0xb1
 800cfb8:	4815      	ldr	r0, [pc, #84]	; (800d010 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800cfba:	f012 fa1b 	bl	801f3f4 <__assert_func>
 800cfbe:	4a15      	ldr	r2, [pc, #84]	; (800d014 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800cfc0:	8812      	ldrh	r2, [r2, #0]
 800cfc2:	428a      	cmp	r2, r1
 800cfc4:	d803      	bhi.n	800cfce <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800cfc6:	4b14      	ldr	r3, [pc, #80]	; (800d018 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800cfc8:	4a10      	ldr	r2, [pc, #64]	; (800d00c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800cfca:	21b2      	movs	r1, #178	; 0xb2
 800cfcc:	e7f4      	b.n	800cfb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800cfce:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800cfd2:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800cfd6:	4b11      	ldr	r3, [pc, #68]	; (800d01c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800cfd8:	7854      	ldrb	r4, [r2, #1]
 800cfda:	681b      	ldr	r3, [r3, #0]
 800cfdc:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800cfe0:	682b      	ldr	r3, [r5, #0]
 800cfe2:	69de      	ldr	r6, [r3, #28]
 800cfe4:	4b0e      	ldr	r3, [pc, #56]	; (800d020 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800cfe6:	6818      	ldr	r0, [r3, #0]
 800cfe8:	f7f7 f8e2 	bl	80041b0 <_ZNK8touchgfx5Texts7getTextEt>
 800cfec:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800cff0:	2300      	movs	r3, #0
 800cff2:	4602      	mov	r2, r0
 800cff4:	9300      	str	r3, [sp, #0]
 800cff6:	4621      	mov	r1, r4
 800cff8:	4628      	mov	r0, r5
 800cffa:	47b0      	blx	r6
 800cffc:	b002      	add	sp, #8
 800cffe:	bd70      	pop	{r4, r5, r6, pc}
 800d000:	2000      	movs	r0, #0
 800d002:	e7fb      	b.n	800cffc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800d004:	2000d47c 	.word	0x2000d47c
 800d008:	08021534 	.word	0x08021534
 800d00c:	08022f54 	.word	0x08022f54
 800d010:	080215c2 	.word	0x080215c2
 800d014:	2000d480 	.word	0x2000d480
 800d018:	080215eb 	.word	0x080215eb
 800d01c:	2000d484 	.word	0x2000d484
 800d020:	2000d488 	.word	0x2000d488

0800d024 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800d024:	b570      	push	{r4, r5, r6, lr}
 800d026:	6803      	ldr	r3, [r0, #0]
 800d028:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d02a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800d02c:	4b11      	ldr	r3, [pc, #68]	; (800d074 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800d02e:	681b      	ldr	r3, [r3, #0]
 800d030:	4604      	mov	r4, r0
 800d032:	b28d      	uxth	r5, r1
 800d034:	b92b      	cbnz	r3, 800d042 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800d036:	4b10      	ldr	r3, [pc, #64]	; (800d078 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800d038:	4a10      	ldr	r2, [pc, #64]	; (800d07c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800d03a:	21b1      	movs	r1, #177	; 0xb1
 800d03c:	4810      	ldr	r0, [pc, #64]	; (800d080 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800d03e:	f012 f9d9 	bl	801f3f4 <__assert_func>
 800d042:	4910      	ldr	r1, [pc, #64]	; (800d084 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800d044:	8809      	ldrh	r1, [r1, #0]
 800d046:	4291      	cmp	r1, r2
 800d048:	d803      	bhi.n	800d052 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800d04a:	4b0f      	ldr	r3, [pc, #60]	; (800d088 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800d04c:	4a0b      	ldr	r2, [pc, #44]	; (800d07c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800d04e:	21b2      	movs	r1, #178	; 0xb2
 800d050:	e7f4      	b.n	800d03c <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800d052:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800d056:	4b0d      	ldr	r3, [pc, #52]	; (800d08c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800d058:	681b      	ldr	r3, [r3, #0]
 800d05a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800d05e:	6803      	ldr	r3, [r0, #0]
 800d060:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d062:	4798      	blx	r3
 800d064:	1a29      	subs	r1, r5, r0
 800d066:	4633      	mov	r3, r6
 800d068:	4620      	mov	r0, r4
 800d06a:	b209      	sxth	r1, r1
 800d06c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d070:	4718      	bx	r3
 800d072:	bf00      	nop
 800d074:	2000d47c 	.word	0x2000d47c
 800d078:	08021534 	.word	0x08021534
 800d07c:	08022f54 	.word	0x08022f54
 800d080:	080215c2 	.word	0x080215c2
 800d084:	2000d480 	.word	0x2000d480
 800d088:	080215eb 	.word	0x080215eb
 800d08c:	2000d484 	.word	0x2000d484

0800d090 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800d090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d094:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d096:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d09a:	4293      	cmp	r3, r2
 800d09c:	b08c      	sub	sp, #48	; 0x30
 800d09e:	4604      	mov	r4, r0
 800d0a0:	4688      	mov	r8, r1
 800d0a2:	d05f      	beq.n	800d164 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800d0a4:	4e31      	ldr	r6, [pc, #196]	; (800d16c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800d0a6:	6832      	ldr	r2, [r6, #0]
 800d0a8:	b92a      	cbnz	r2, 800d0b6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800d0aa:	4b31      	ldr	r3, [pc, #196]	; (800d170 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800d0ac:	4a31      	ldr	r2, [pc, #196]	; (800d174 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800d0ae:	21b1      	movs	r1, #177	; 0xb1
 800d0b0:	4831      	ldr	r0, [pc, #196]	; (800d178 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800d0b2:	f012 f99f 	bl	801f3f4 <__assert_func>
 800d0b6:	4d31      	ldr	r5, [pc, #196]	; (800d17c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800d0b8:	8829      	ldrh	r1, [r5, #0]
 800d0ba:	4299      	cmp	r1, r3
 800d0bc:	d803      	bhi.n	800d0c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800d0be:	4b30      	ldr	r3, [pc, #192]	; (800d180 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800d0c0:	4a2c      	ldr	r2, [pc, #176]	; (800d174 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800d0c2:	21b2      	movs	r1, #178	; 0xb2
 800d0c4:	e7f4      	b.n	800d0b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800d0c6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800d0ca:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d0ce:	4b2d      	ldr	r3, [pc, #180]	; (800d184 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800d0d0:	681b      	ldr	r3, [r3, #0]
 800d0d2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800d0d6:	2a00      	cmp	r2, #0
 800d0d8:	d044      	beq.n	800d164 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800d0da:	784b      	ldrb	r3, [r1, #1]
 800d0dc:	9207      	str	r2, [sp, #28]
 800d0de:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800d0e2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d0e6:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800d0ea:	4b27      	ldr	r3, [pc, #156]	; (800d188 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800d0ec:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800d0f0:	681b      	ldr	r3, [r3, #0]
 800d0f2:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800d0f6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d0fa:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800d0fe:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800d102:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800d106:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800d108:	9009      	str	r0, [sp, #36]	; 0x24
 800d10a:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800d10e:	f88d 9020 	strb.w	r9, [sp, #32]
 800d112:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800d116:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800d11a:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800d11e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800d122:	b10a      	cbz	r2, 800d128 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800d124:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800d126:	b907      	cbnz	r7, 800d12a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800d128:	689f      	ldr	r7, [r3, #8]
 800d12a:	f10d 0914 	add.w	r9, sp, #20
 800d12e:	4621      	mov	r1, r4
 800d130:	4648      	mov	r0, r9
 800d132:	f003 f954 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d136:	6833      	ldr	r3, [r6, #0]
 800d138:	2b00      	cmp	r3, #0
 800d13a:	d0b6      	beq.n	800d0aa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800d13c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800d13e:	882b      	ldrh	r3, [r5, #0]
 800d140:	428b      	cmp	r3, r1
 800d142:	d9bc      	bls.n	800d0be <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800d144:	4b11      	ldr	r3, [pc, #68]	; (800d18c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800d146:	6818      	ldr	r0, [r3, #0]
 800d148:	f7f7 f832 	bl	80041b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d14c:	2300      	movs	r3, #0
 800d14e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800d152:	ab07      	add	r3, sp, #28
 800d154:	9001      	str	r0, [sp, #4]
 800d156:	9300      	str	r3, [sp, #0]
 800d158:	e899 0006 	ldmia.w	r9, {r1, r2}
 800d15c:	4643      	mov	r3, r8
 800d15e:	4638      	mov	r0, r7
 800d160:	f7f6 ffd8 	bl	8004114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d164:	b00c      	add	sp, #48	; 0x30
 800d166:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d16a:	bf00      	nop
 800d16c:	2000d47c 	.word	0x2000d47c
 800d170:	08021534 	.word	0x08021534
 800d174:	08022f54 	.word	0x08022f54
 800d178:	080215c2 	.word	0x080215c2
 800d17c:	2000d480 	.word	0x2000d480
 800d180:	080215eb 	.word	0x080215eb
 800d184:	2000d484 	.word	0x2000d484
 800d188:	2000d40c 	.word	0x2000d40c
 800d18c:	2000d488 	.word	0x2000d488

0800d190 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800d190:	b40e      	push	{r1, r2, r3}
 800d192:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d196:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800d198:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d19c:	4293      	cmp	r3, r2
 800d19e:	b09b      	sub	sp, #108	; 0x6c
 800d1a0:	4604      	mov	r4, r0
 800d1a2:	d061      	beq.n	800d268 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800d1a4:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800d27c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800d1a8:	aa24      	add	r2, sp, #144	; 0x90
 800d1aa:	9203      	str	r2, [sp, #12]
 800d1ac:	f8da 2000 	ldr.w	r2, [sl]
 800d1b0:	b92a      	cbnz	r2, 800d1be <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800d1b2:	4b2e      	ldr	r3, [pc, #184]	; (800d26c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800d1b4:	4a2e      	ldr	r2, [pc, #184]	; (800d270 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800d1b6:	21b1      	movs	r1, #177	; 0xb1
 800d1b8:	482e      	ldr	r0, [pc, #184]	; (800d274 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800d1ba:	f012 f91b 	bl	801f3f4 <__assert_func>
 800d1be:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800d280 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800d1c2:	f8b8 1000 	ldrh.w	r1, [r8]
 800d1c6:	4299      	cmp	r1, r3
 800d1c8:	d803      	bhi.n	800d1d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800d1ca:	4b2b      	ldr	r3, [pc, #172]	; (800d278 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800d1cc:	4a28      	ldr	r2, [pc, #160]	; (800d270 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800d1ce:	21b2      	movs	r1, #178	; 0xb2
 800d1d0:	e7f2      	b.n	800d1b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800d1d2:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800d284 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800d1d6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d1da:	f8d9 3000 	ldr.w	r3, [r9]
 800d1de:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800d1e2:	683b      	ldr	r3, [r7, #0]
 800d1e4:	4638      	mov	r0, r7
 800d1e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d1e8:	4798      	blx	r3
 800d1ea:	4606      	mov	r6, r0
 800d1ec:	b205      	sxth	r5, r0
 800d1ee:	a804      	add	r0, sp, #16
 800d1f0:	f003 fe50 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 800d1f4:	683b      	ldr	r3, [r7, #0]
 800d1f6:	4638      	mov	r0, r7
 800d1f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d1fa:	4798      	blx	r3
 800d1fc:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800d1fe:	9a03      	ldr	r2, [sp, #12]
 800d200:	4603      	mov	r3, r0
 800d202:	a804      	add	r0, sp, #16
 800d204:	f003 fe8b 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d208:	f8da 3000 	ldr.w	r3, [sl]
 800d20c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800d210:	2b00      	cmp	r3, #0
 800d212:	d0ce      	beq.n	800d1b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800d214:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800d216:	f8b8 0000 	ldrh.w	r0, [r8]
 800d21a:	4290      	cmp	r0, r2
 800d21c:	d9d5      	bls.n	800d1ca <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800d21e:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800d222:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800d226:	787a      	ldrb	r2, [r7, #1]
 800d228:	f8d9 3000 	ldr.w	r3, [r9]
 800d22c:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800d230:	9700      	str	r7, [sp, #0]
 800d232:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800d236:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800d23a:	a804      	add	r0, sp, #16
 800d23c:	f001 fbcc 	bl	800e9d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800d240:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800d244:	18a9      	adds	r1, r5, r2
 800d246:	2900      	cmp	r1, #0
 800d248:	b203      	sxth	r3, r0
 800d24a:	dd0b      	ble.n	800d264 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800d24c:	3b01      	subs	r3, #1
 800d24e:	fb13 f302 	smulbb	r3, r3, r2
 800d252:	fb16 3300 	smlabb	r3, r6, r0, r3
 800d256:	b21d      	sxth	r5, r3
 800d258:	4628      	mov	r0, r5
 800d25a:	b01b      	add	sp, #108	; 0x6c
 800d25c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d260:	b003      	add	sp, #12
 800d262:	4770      	bx	lr
 800d264:	2b00      	cmp	r3, #0
 800d266:	dcf7      	bgt.n	800d258 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d268:	2500      	movs	r5, #0
 800d26a:	e7f5      	b.n	800d258 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800d26c:	08021534 	.word	0x08021534
 800d270:	08022f54 	.word	0x08022f54
 800d274:	080215c2 	.word	0x080215c2
 800d278:	080215eb 	.word	0x080215eb
 800d27c:	2000d47c 	.word	0x2000d47c
 800d280:	2000d480 	.word	0x2000d480
 800d284:	2000d484 	.word	0x2000d484

0800d288 <_ZN8touchgfx8TextAreaD0Ev>:
 800d288:	b510      	push	{r4, lr}
 800d28a:	213c      	movs	r1, #60	; 0x3c
 800d28c:	4604      	mov	r4, r0
 800d28e:	f012 f882 	bl	801f396 <_ZdlPvj>
 800d292:	4620      	mov	r0, r4
 800d294:	bd10      	pop	{r4, pc}
	...

0800d298 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800d298:	b570      	push	{r4, r5, r6, lr}
 800d29a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800d29c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d2a0:	4299      	cmp	r1, r3
 800d2a2:	4604      	mov	r4, r0
 800d2a4:	d01e      	beq.n	800d2e4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800d2a6:	6803      	ldr	r3, [r0, #0]
 800d2a8:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 800d2aa:	4b0f      	ldr	r3, [pc, #60]	; (800d2e8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800d2ac:	681b      	ldr	r3, [r3, #0]
 800d2ae:	b92b      	cbnz	r3, 800d2bc <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800d2b0:	4b0e      	ldr	r3, [pc, #56]	; (800d2ec <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800d2b2:	4a0f      	ldr	r2, [pc, #60]	; (800d2f0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800d2b4:	21b1      	movs	r1, #177	; 0xb1
 800d2b6:	480f      	ldr	r0, [pc, #60]	; (800d2f4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800d2b8:	f012 f89c 	bl	801f3f4 <__assert_func>
 800d2bc:	4b0e      	ldr	r3, [pc, #56]	; (800d2f8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800d2be:	881b      	ldrh	r3, [r3, #0]
 800d2c0:	428b      	cmp	r3, r1
 800d2c2:	d803      	bhi.n	800d2cc <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800d2c4:	4b0d      	ldr	r3, [pc, #52]	; (800d2fc <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800d2c6:	4a0a      	ldr	r2, [pc, #40]	; (800d2f0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800d2c8:	21b2      	movs	r1, #178	; 0xb2
 800d2ca:	e7f4      	b.n	800d2b6 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800d2cc:	4b0c      	ldr	r3, [pc, #48]	; (800d300 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800d2ce:	6818      	ldr	r0, [r3, #0]
 800d2d0:	f7f6 ff6e 	bl	80041b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d2d4:	2300      	movs	r3, #0
 800d2d6:	4601      	mov	r1, r0
 800d2d8:	46ac      	mov	ip, r5
 800d2da:	4620      	mov	r0, r4
 800d2dc:	461a      	mov	r2, r3
 800d2de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2e2:	4760      	bx	ip
 800d2e4:	2000      	movs	r0, #0
 800d2e6:	bd70      	pop	{r4, r5, r6, pc}
 800d2e8:	2000d47c 	.word	0x2000d47c
 800d2ec:	08021534 	.word	0x08021534
 800d2f0:	08022f54 	.word	0x08022f54
 800d2f4:	080215c2 	.word	0x080215c2
 800d2f8:	2000d480 	.word	0x2000d480
 800d2fc:	080215eb 	.word	0x080215eb
 800d300:	2000d488 	.word	0x2000d488

0800d304 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800d304:	b570      	push	{r4, r5, r6, lr}
 800d306:	6803      	ldr	r3, [r0, #0]
 800d308:	4604      	mov	r4, r0
 800d30a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d30c:	4615      	mov	r5, r2
 800d30e:	4798      	blx	r3
 800d310:	6823      	ldr	r3, [r4, #0]
 800d312:	4629      	mov	r1, r5
 800d314:	4620      	mov	r0, r4
 800d316:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d318:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d31c:	4718      	bx	r3

0800d31e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800d31e:	b538      	push	{r3, r4, r5, lr}
 800d320:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800d322:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d326:	429a      	cmp	r2, r3
 800d328:	4604      	mov	r4, r0
 800d32a:	d014      	beq.n	800d356 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800d32c:	6803      	ldr	r3, [r0, #0]
 800d32e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d330:	4798      	blx	r3
 800d332:	6823      	ldr	r3, [r4, #0]
 800d334:	4605      	mov	r5, r0
 800d336:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d338:	4620      	mov	r0, r4
 800d33a:	4798      	blx	r3
 800d33c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d340:	b22d      	sxth	r5, r5
 800d342:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d346:	4601      	mov	r1, r0
 800d348:	bf06      	itte	eq
 800d34a:	4602      	moveq	r2, r0
 800d34c:	4629      	moveq	r1, r5
 800d34e:	462a      	movne	r2, r5
 800d350:	4620      	mov	r0, r4
 800d352:	f7ff ffd7 	bl	800d304 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800d356:	bd38      	pop	{r3, r4, r5, pc}

0800d358 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800d358:	888a      	ldrh	r2, [r1, #4]
 800d35a:	8582      	strh	r2, [r0, #44]	; 0x2c
 800d35c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800d360:	b922      	cbnz	r2, 800d36c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800d362:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d366:	b90b      	cbnz	r3, 800d36c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800d368:	f7ff bfd9 	b.w	800d31e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800d36c:	4770      	bx	lr

0800d36e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800d36e:	2300      	movs	r3, #0
 800d370:	8083      	strh	r3, [r0, #4]
 800d372:	80c3      	strh	r3, [r0, #6]
 800d374:	8003      	strh	r3, [r0, #0]
 800d376:	8043      	strh	r3, [r0, #2]
 800d378:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800d37c:	2bff      	cmp	r3, #255	; 0xff
 800d37e:	bf01      	itttt	eq
 800d380:	890b      	ldrheq	r3, [r1, #8]
 800d382:	8083      	strheq	r3, [r0, #4]
 800d384:	894b      	ldrheq	r3, [r1, #10]
 800d386:	80c3      	strheq	r3, [r0, #6]
 800d388:	4770      	bx	lr
	...

0800d38c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800d38c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d38e:	4604      	mov	r4, r0
 800d390:	6808      	ldr	r0, [r1, #0]
 800d392:	6849      	ldr	r1, [r1, #4]
 800d394:	466b      	mov	r3, sp
 800d396:	c303      	stmia	r3!, {r0, r1}
 800d398:	6823      	ldr	r3, [r4, #0]
 800d39a:	4669      	mov	r1, sp
 800d39c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d39e:	4620      	mov	r0, r4
 800d3a0:	4798      	blx	r3
 800d3a2:	4b08      	ldr	r3, [pc, #32]	; (800d3c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800d3a4:	681b      	ldr	r3, [r3, #0]
 800d3a6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d3aa:	b10a      	cbz	r2, 800d3b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800d3ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d3ae:	b900      	cbnz	r0, 800d3b2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800d3b0:	6898      	ldr	r0, [r3, #8]
 800d3b2:	6803      	ldr	r3, [r0, #0]
 800d3b4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800d3b6:	699d      	ldr	r5, [r3, #24]
 800d3b8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d3bc:	4669      	mov	r1, sp
 800d3be:	47a8      	blx	r5
 800d3c0:	b003      	add	sp, #12
 800d3c2:	bd30      	pop	{r4, r5, pc}
 800d3c4:	2000d40c 	.word	0x2000d40c

0800d3c8 <_ZN8touchgfx3BoxD1Ev>:
 800d3c8:	4770      	bx	lr

0800d3ca <_ZN8touchgfx3BoxD0Ev>:
 800d3ca:	b510      	push	{r4, lr}
 800d3cc:	212c      	movs	r1, #44	; 0x2c
 800d3ce:	4604      	mov	r4, r0
 800d3d0:	f011 ffe1 	bl	801f396 <_ZdlPvj>
 800d3d4:	4620      	mov	r0, r4
 800d3d6:	bd10      	pop	{r4, pc}

0800d3d8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800d3d8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800d3dc:	4770      	bx	lr

0800d3de <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800d3de:	b570      	push	{r4, r5, r6, lr}
 800d3e0:	880b      	ldrh	r3, [r1, #0]
 800d3e2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d3e4:	4605      	mov	r5, r0
 800d3e6:	8813      	ldrh	r3, [r2, #0]
 800d3e8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800d3ec:	4604      	mov	r4, r0
 800d3ee:	4628      	mov	r0, r5
 800d3f0:	f004 fdba 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d3f4:	4606      	mov	r6, r0
 800d3f6:	4628      	mov	r0, r5
 800d3f8:	f004 fdf0 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d3fc:	6823      	ldr	r3, [r4, #0]
 800d3fe:	4605      	mov	r5, r0
 800d400:	b231      	sxth	r1, r6
 800d402:	4620      	mov	r0, r4
 800d404:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d406:	4798      	blx	r3
 800d408:	6823      	ldr	r3, [r4, #0]
 800d40a:	b229      	sxth	r1, r5
 800d40c:	4620      	mov	r0, r4
 800d40e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d410:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d414:	4718      	bx	r3

0800d416 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800d416:	b510      	push	{r4, lr}
 800d418:	4604      	mov	r4, r0
 800d41a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d41c:	b150      	cbz	r0, 800d434 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d41e:	6803      	ldr	r3, [r0, #0]
 800d420:	68db      	ldr	r3, [r3, #12]
 800d422:	4798      	blx	r3
 800d424:	b130      	cbz	r0, 800d434 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800d426:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d428:	6803      	ldr	r3, [r0, #0]
 800d42a:	4621      	mov	r1, r4
 800d42c:	689b      	ldr	r3, [r3, #8]
 800d42e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d432:	4718      	bx	r3
 800d434:	bd10      	pop	{r4, pc}

0800d436 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800d436:	b510      	push	{r4, lr}
 800d438:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800d43c:	2bff      	cmp	r3, #255	; 0xff
 800d43e:	4604      	mov	r4, r0
 800d440:	d006      	beq.n	800d450 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800d442:	2300      	movs	r3, #0
 800d444:	8003      	strh	r3, [r0, #0]
 800d446:	8043      	strh	r3, [r0, #2]
 800d448:	8083      	strh	r3, [r0, #4]
 800d44a:	80c3      	strh	r3, [r0, #6]
 800d44c:	4620      	mov	r0, r4
 800d44e:	bd10      	pop	{r4, pc}
 800d450:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800d454:	b11b      	cbz	r3, 800d45e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800d456:	3130      	adds	r1, #48	; 0x30
 800d458:	f004 fdfa 	bl	8012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d45c:	e7f6      	b.n	800d44c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800d45e:	312e      	adds	r1, #46	; 0x2e
 800d460:	e7fa      	b.n	800d458 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800d464 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800d464:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d468:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d46c:	b08a      	sub	sp, #40	; 0x28
 800d46e:	4604      	mov	r4, r0
 800d470:	4688      	mov	r8, r1
 800d472:	2b00      	cmp	r3, #0
 800d474:	d044      	beq.n	800d500 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800d476:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d478:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d47c:	a805      	add	r0, sp, #20
 800d47e:	f004 fd73 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d482:	4605      	mov	r5, r0
 800d484:	b206      	sxth	r6, r0
 800d486:	a805      	add	r0, sp, #20
 800d488:	f004 fda8 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d48c:	f9b8 2000 	ldrsh.w	r2, [r8]
 800d490:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800d494:	4417      	add	r7, r2
 800d496:	b2bf      	uxth	r7, r7
 800d498:	2300      	movs	r3, #0
 800d49a:	fa0f fe87 	sxth.w	lr, r7
 800d49e:	459e      	cmp	lr, r3
 800d4a0:	fa0f fc80 	sxth.w	ip, r0
 800d4a4:	9306      	str	r3, [sp, #24]
 800d4a6:	dd2d      	ble.n	800d504 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d4a8:	4296      	cmp	r6, r2
 800d4aa:	dd2b      	ble.n	800d504 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d4ac:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800d4b0:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800d4b4:	4419      	add	r1, r3
 800d4b6:	b289      	uxth	r1, r1
 800d4b8:	fa0f f881 	sxth.w	r8, r1
 800d4bc:	f1b8 0f00 	cmp.w	r8, #0
 800d4c0:	dd20      	ble.n	800d504 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d4c2:	459c      	cmp	ip, r3
 800d4c4:	dd1e      	ble.n	800d504 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800d4c6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800d4ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800d4ce:	4576      	cmp	r6, lr
 800d4d0:	bfa8      	it	ge
 800d4d2:	463d      	movge	r5, r7
 800d4d4:	45c4      	cmp	ip, r8
 800d4d6:	bfa8      	it	ge
 800d4d8:	4608      	movge	r0, r1
 800d4da:	1aad      	subs	r5, r5, r2
 800d4dc:	1ac0      	subs	r0, r0, r3
 800d4de:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d4e2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d4e6:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d4ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d4ee:	4b1f      	ldr	r3, [pc, #124]	; (800d56c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800d4f0:	681b      	ldr	r3, [r3, #0]
 800d4f2:	b953      	cbnz	r3, 800d50a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800d4f4:	4b1e      	ldr	r3, [pc, #120]	; (800d570 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800d4f6:	4a1f      	ldr	r2, [pc, #124]	; (800d574 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800d4f8:	481f      	ldr	r0, [pc, #124]	; (800d578 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800d4fa:	218b      	movs	r1, #139	; 0x8b
 800d4fc:	f011 ff7a 	bl	801f3f4 <__assert_func>
 800d500:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d502:	e7b9      	b.n	800d478 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800d504:	2300      	movs	r3, #0
 800d506:	9307      	str	r3, [sp, #28]
 800d508:	e7f1      	b.n	800d4ee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800d50a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d50e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d512:	429a      	cmp	r2, r3
 800d514:	d026      	beq.n	800d564 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800d516:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d51a:	2b00      	cmp	r3, #0
 800d51c:	dd22      	ble.n	800d564 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800d51e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d522:	2b00      	cmp	r3, #0
 800d524:	dd1e      	ble.n	800d564 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800d526:	2300      	movs	r3, #0
 800d528:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800d52c:	6823      	ldr	r3, [r4, #0]
 800d52e:	a908      	add	r1, sp, #32
 800d530:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d532:	4620      	mov	r0, r4
 800d534:	4798      	blx	r3
 800d536:	4b11      	ldr	r3, [pc, #68]	; (800d57c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800d538:	681b      	ldr	r3, [r3, #0]
 800d53a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d53e:	b10a      	cbz	r2, 800d544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800d540:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d542:	b900      	cbnz	r0, 800d546 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800d544:	6898      	ldr	r0, [r3, #8]
 800d546:	6801      	ldr	r1, [r0, #0]
 800d548:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d54c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800d550:	2501      	movs	r5, #1
 800d552:	9502      	str	r5, [sp, #8]
 800d554:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800d558:	9401      	str	r4, [sp, #4]
 800d55a:	ac06      	add	r4, sp, #24
 800d55c:	9400      	str	r4, [sp, #0]
 800d55e:	688c      	ldr	r4, [r1, #8]
 800d560:	a905      	add	r1, sp, #20
 800d562:	47a0      	blx	r4
 800d564:	b00a      	add	sp, #40	; 0x28
 800d566:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d56a:	bf00      	nop
 800d56c:	2000d4b4 	.word	0x2000d4b4
 800d570:	08022a6c 	.word	0x08022a6c
 800d574:	08022fe8 	.word	0x08022fe8
 800d578:	08022aa8 	.word	0x08022aa8
 800d57c:	2000d40c 	.word	0x2000d40c

0800d580 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800d580:	4770      	bx	lr

0800d582 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800d582:	b510      	push	{r4, lr}
 800d584:	2134      	movs	r1, #52	; 0x34
 800d586:	4604      	mov	r4, r0
 800d588:	f011 ff05 	bl	801f396 <_ZdlPvj>
 800d58c:	4620      	mov	r0, r4
 800d58e:	bd10      	pop	{r4, pc}

0800d590 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800d590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d594:	4604      	mov	r4, r0
 800d596:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d598:	8962      	ldrh	r2, [r4, #10]
 800d59a:	b218      	sxth	r0, r3
 800d59c:	460e      	mov	r6, r1
 800d59e:	005b      	lsls	r3, r3, #1
 800d5a0:	8921      	ldrh	r1, [r4, #8]
 800d5a2:	b29b      	uxth	r3, r3
 800d5a4:	1ac9      	subs	r1, r1, r3
 800d5a6:	b08e      	sub	sp, #56	; 0x38
 800d5a8:	b209      	sxth	r1, r1
 800d5aa:	1ad3      	subs	r3, r2, r3
 800d5ac:	b21b      	sxth	r3, r3
 800d5ae:	2900      	cmp	r1, #0
 800d5b0:	f8ad 0000 	strh.w	r0, [sp]
 800d5b4:	f8ad 0002 	strh.w	r0, [sp, #2]
 800d5b8:	f8ad 1004 	strh.w	r1, [sp, #4]
 800d5bc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d5c0:	dd5e      	ble.n	800d680 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d5c2:	2b00      	cmp	r3, #0
 800d5c4:	dd5c      	ble.n	800d680 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800d5c6:	6830      	ldr	r0, [r6, #0]
 800d5c8:	6871      	ldr	r1, [r6, #4]
 800d5ca:	ab02      	add	r3, sp, #8
 800d5cc:	c303      	stmia	r3!, {r0, r1}
 800d5ce:	4669      	mov	r1, sp
 800d5d0:	a802      	add	r0, sp, #8
 800d5d2:	f7fd f9e9 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800d5d6:	4620      	mov	r0, r4
 800d5d8:	a902      	add	r1, sp, #8
 800d5da:	f7ff fed7 	bl	800d38c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800d5de:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800d5e0:	2800      	cmp	r0, #0
 800d5e2:	d05f      	beq.n	800d6a4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d5e4:	8963      	ldrh	r3, [r4, #10]
 800d5e6:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800d5ea:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d5ee:	1a1f      	subs	r7, r3, r0
 800d5f0:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800d5f4:	b202      	sxth	r2, r0
 800d5f6:	2500      	movs	r5, #0
 800d5f8:	b21b      	sxth	r3, r3
 800d5fa:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800d5fe:	1a09      	subs	r1, r1, r0
 800d600:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800d604:	9506      	str	r5, [sp, #24]
 800d606:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d60a:	f8ad 5020 	strh.w	r5, [sp, #32]
 800d60e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800d612:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800d616:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d61a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d61e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d622:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800d626:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800d62a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800d62e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800d632:	af04      	add	r7, sp, #16
 800d634:	ab06      	add	r3, sp, #24
 800d636:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d63a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800d63e:	e887 0003 	stmia.w	r7, {r0, r1}
 800d642:	4631      	mov	r1, r6
 800d644:	4638      	mov	r0, r7
 800d646:	f7fd f9af 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800d64a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d64e:	2b00      	cmp	r3, #0
 800d650:	dd12      	ble.n	800d678 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d652:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d656:	2b00      	cmp	r3, #0
 800d658:	dd0e      	ble.n	800d678 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800d65a:	6823      	ldr	r3, [r4, #0]
 800d65c:	4639      	mov	r1, r7
 800d65e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d660:	4620      	mov	r0, r4
 800d662:	4798      	blx	r3
 800d664:	f7f3 fbc2 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800d668:	6803      	ldr	r3, [r0, #0]
 800d66a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d66c:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800d670:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d674:	4639      	mov	r1, r7
 800d676:	47c0      	blx	r8
 800d678:	3501      	adds	r5, #1
 800d67a:	2d04      	cmp	r5, #4
 800d67c:	d1da      	bne.n	800d634 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800d67e:	e011      	b.n	800d6a4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800d680:	6830      	ldr	r0, [r6, #0]
 800d682:	6871      	ldr	r1, [r6, #4]
 800d684:	ab06      	add	r3, sp, #24
 800d686:	c303      	stmia	r3!, {r0, r1}
 800d688:	6823      	ldr	r3, [r4, #0]
 800d68a:	a906      	add	r1, sp, #24
 800d68c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d68e:	4620      	mov	r0, r4
 800d690:	4798      	blx	r3
 800d692:	f7f3 fbab 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800d696:	6803      	ldr	r3, [r0, #0]
 800d698:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d69a:	699d      	ldr	r5, [r3, #24]
 800d69c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800d6a0:	a906      	add	r1, sp, #24
 800d6a2:	47a8      	blx	r5
 800d6a4:	b00e      	add	sp, #56	; 0x38
 800d6a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d6aa <_ZN8touchgfx5ImageD1Ev>:
 800d6aa:	4770      	bx	lr

0800d6ac <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800d6ac:	b570      	push	{r4, r5, r6, lr}
 800d6ae:	880b      	ldrh	r3, [r1, #0]
 800d6b0:	84c3      	strh	r3, [r0, #38]	; 0x26
 800d6b2:	4604      	mov	r4, r0
 800d6b4:	4608      	mov	r0, r1
 800d6b6:	460d      	mov	r5, r1
 800d6b8:	f004 fc56 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d6bc:	4606      	mov	r6, r0
 800d6be:	4628      	mov	r0, r5
 800d6c0:	f004 fc8c 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d6c4:	6823      	ldr	r3, [r4, #0]
 800d6c6:	4605      	mov	r5, r0
 800d6c8:	b231      	sxth	r1, r6
 800d6ca:	4620      	mov	r0, r4
 800d6cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d6ce:	4798      	blx	r3
 800d6d0:	6823      	ldr	r3, [r4, #0]
 800d6d2:	b229      	sxth	r1, r5
 800d6d4:	4620      	mov	r0, r4
 800d6d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d6d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d6dc:	4718      	bx	r3

0800d6de <_ZN8touchgfx5ImageD0Ev>:
 800d6de:	b510      	push	{r4, lr}
 800d6e0:	212c      	movs	r1, #44	; 0x2c
 800d6e2:	4604      	mov	r4, r0
 800d6e4:	f011 fe57 	bl	801f396 <_ZdlPvj>
 800d6e8:	4620      	mov	r0, r4
 800d6ea:	bd10      	pop	{r4, pc}

0800d6ec <_ZNK8touchgfx5Image12getSolidRectEv>:
 800d6ec:	b510      	push	{r4, lr}
 800d6ee:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800d6f2:	2bff      	cmp	r3, #255	; 0xff
 800d6f4:	4604      	mov	r4, r0
 800d6f6:	d006      	beq.n	800d706 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800d6f8:	2300      	movs	r3, #0
 800d6fa:	8003      	strh	r3, [r0, #0]
 800d6fc:	8043      	strh	r3, [r0, #2]
 800d6fe:	8083      	strh	r3, [r0, #4]
 800d700:	80c3      	strh	r3, [r0, #6]
 800d702:	4620      	mov	r0, r4
 800d704:	bd10      	pop	{r4, pc}
 800d706:	3126      	adds	r1, #38	; 0x26
 800d708:	f004 fca2 	bl	8012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800d70c:	e7f9      	b.n	800d702 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800d710 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800d710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d714:	4604      	mov	r4, r0
 800d716:	b088      	sub	sp, #32
 800d718:	f854 3b26 	ldr.w	r3, [r4], #38
 800d71c:	2500      	movs	r5, #0
 800d71e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d720:	460f      	mov	r7, r1
 800d722:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800d726:	a904      	add	r1, sp, #16
 800d728:	4606      	mov	r6, r0
 800d72a:	4798      	blx	r3
 800d72c:	4620      	mov	r0, r4
 800d72e:	f004 fc1b 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d732:	4680      	mov	r8, r0
 800d734:	4620      	mov	r0, r4
 800d736:	f004 fc51 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d73a:	9506      	str	r5, [sp, #24]
 800d73c:	ad06      	add	r5, sp, #24
 800d73e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800d742:	4639      	mov	r1, r7
 800d744:	4628      	mov	r0, r5
 800d746:	f8ad 801c 	strh.w	r8, [sp, #28]
 800d74a:	f7fd f92d 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800d74e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800d752:	2b00      	cmp	r3, #0
 800d754:	dd19      	ble.n	800d78a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d756:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800d75a:	2b00      	cmp	r3, #0
 800d75c:	dd15      	ble.n	800d78a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800d75e:	4b0c      	ldr	r3, [pc, #48]	; (800d790 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800d760:	681b      	ldr	r3, [r3, #0]
 800d762:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d766:	b10a      	cbz	r2, 800d76c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800d768:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800d76a:	b900      	cbnz	r0, 800d76e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800d76c:	6898      	ldr	r0, [r3, #8]
 800d76e:	6801      	ldr	r1, [r0, #0]
 800d770:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800d774:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800d778:	2701      	movs	r7, #1
 800d77a:	9702      	str	r7, [sp, #8]
 800d77c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800d780:	e9cd 5600 	strd	r5, r6, [sp]
 800d784:	688d      	ldr	r5, [r1, #8]
 800d786:	4621      	mov	r1, r4
 800d788:	47a8      	blx	r5
 800d78a:	b008      	add	sp, #32
 800d78c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d790:	2000d40c 	.word	0x2000d40c

0800d794 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800d794:	4770      	bx	lr

0800d796 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800d796:	b510      	push	{r4, lr}
 800d798:	2148      	movs	r1, #72	; 0x48
 800d79a:	4604      	mov	r4, r0
 800d79c:	f011 fdfb 	bl	801f396 <_ZdlPvj>
 800d7a0:	4620      	mov	r0, r4
 800d7a2:	bd10      	pop	{r4, pc}

0800d7a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800d7a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d7a8:	4604      	mov	r4, r0
 800d7aa:	b08c      	sub	sp, #48	; 0x30
 800d7ac:	4688      	mov	r8, r1
 800d7ae:	f7ff fe59 	bl	800d464 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800d7b2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800d7b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d7b8:	4293      	cmp	r3, r2
 800d7ba:	f000 8099 	beq.w	800d8f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800d7be:	4e54      	ldr	r6, [pc, #336]	; (800d910 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800d7c0:	6832      	ldr	r2, [r6, #0]
 800d7c2:	b92a      	cbnz	r2, 800d7d0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x2c>
 800d7c4:	4b53      	ldr	r3, [pc, #332]	; (800d914 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800d7c6:	4a54      	ldr	r2, [pc, #336]	; (800d918 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800d7c8:	21b1      	movs	r1, #177	; 0xb1
 800d7ca:	4854      	ldr	r0, [pc, #336]	; (800d91c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x178>)
 800d7cc:	f011 fe12 	bl	801f3f4 <__assert_func>
 800d7d0:	4d53      	ldr	r5, [pc, #332]	; (800d920 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x17c>)
 800d7d2:	8829      	ldrh	r1, [r5, #0]
 800d7d4:	4299      	cmp	r1, r3
 800d7d6:	d803      	bhi.n	800d7e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x3c>
 800d7d8:	4b52      	ldr	r3, [pc, #328]	; (800d924 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x180>)
 800d7da:	4a4f      	ldr	r2, [pc, #316]	; (800d918 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800d7dc:	21b2      	movs	r1, #178	; 0xb2
 800d7de:	e7f4      	b.n	800d7ca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x26>
 800d7e0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d7e4:	4b50      	ldr	r3, [pc, #320]	; (800d928 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x184>)
 800d7e6:	f894 e044 	ldrb.w	lr, [r4, #68]	; 0x44
 800d7ea:	681b      	ldr	r3, [r3, #0]
 800d7ec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800d7f0:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800d7f4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800d7f8:	2300      	movs	r3, #0
 800d7fa:	f1be 0f01 	cmp.w	lr, #1
 800d7fe:	9303      	str	r3, [sp, #12]
 800d800:	b208      	sxth	r0, r1
 800d802:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d806:	f04f 0c02 	mov.w	ip, #2
 800d80a:	d074      	beq.n	800d8f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800d80c:	f1be 0f03 	cmp.w	lr, #3
 800d810:	d071      	beq.n	800d8f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x152>
 800d812:	1a52      	subs	r2, r2, r1
 800d814:	f8ad 3010 	strh.w	r3, [sp, #16]
 800d818:	fb92 f2fc 	sdiv	r2, r2, ip
 800d81c:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d820:	f8ad 200e 	strh.w	r2, [sp, #14]
 800d824:	f10d 090c 	add.w	r9, sp, #12
 800d828:	e899 0003 	ldmia.w	r9, {r0, r1}
 800d82c:	f10d 0a14 	add.w	sl, sp, #20
 800d830:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d834:	4641      	mov	r1, r8
 800d836:	4650      	mov	r0, sl
 800d838:	f7fd f8b6 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800d83c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800d840:	2b00      	cmp	r3, #0
 800d842:	dd55      	ble.n	800d8f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800d844:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800d848:	2b00      	cmp	r3, #0
 800d84a:	dd51      	ble.n	800d8f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>
 800d84c:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d850:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d854:	1a9b      	subs	r3, r3, r2
 800d856:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d85a:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d85e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d862:	1a9b      	subs	r3, r3, r2
 800d864:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d868:	6823      	ldr	r3, [r4, #0]
 800d86a:	4649      	mov	r1, r9
 800d86c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d86e:	4620      	mov	r0, r4
 800d870:	4798      	blx	r3
 800d872:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800d876:	2b00      	cmp	r3, #0
 800d878:	d047      	beq.n	800d90a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x166>
 800d87a:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800d87e:	6833      	ldr	r3, [r6, #0]
 800d880:	f894 c032 	ldrb.w	ip, [r4, #50]	; 0x32
 800d884:	2b00      	cmp	r3, #0
 800d886:	d09d      	beq.n	800d7c4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x20>
 800d888:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d88a:	8828      	ldrh	r0, [r5, #0]
 800d88c:	4288      	cmp	r0, r1
 800d88e:	d9a3      	bls.n	800d7d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x34>
 800d890:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800d894:	6812      	ldr	r2, [r2, #0]
 800d896:	785b      	ldrb	r3, [r3, #1]
 800d898:	9209      	str	r2, [sp, #36]	; 0x24
 800d89a:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800d89e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d8a2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800d8a6:	2300      	movs	r3, #0
 800d8a8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800d8ac:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800d8b0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800d8b4:	4b1d      	ldr	r3, [pc, #116]	; (800d92c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x188>)
 800d8b6:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800d8ba:	681b      	ldr	r3, [r3, #0]
 800d8bc:	9707      	str	r7, [sp, #28]
 800d8be:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800d8c2:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
 800d8c6:	f88d 5020 	strb.w	r5, [sp, #32]
 800d8ca:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800d8ce:	b10a      	cbz	r2, 800d8d4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x130>
 800d8d0:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800d8d2:	b904      	cbnz	r4, 800d8d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x132>
 800d8d4:	689c      	ldr	r4, [r3, #8]
 800d8d6:	4b16      	ldr	r3, [pc, #88]	; (800d930 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x18c>)
 800d8d8:	6818      	ldr	r0, [r3, #0]
 800d8da:	f7f6 fc69 	bl	80041b0 <_ZNK8touchgfx5Texts7getTextEt>
 800d8de:	ab07      	add	r3, sp, #28
 800d8e0:	9001      	str	r0, [sp, #4]
 800d8e2:	9300      	str	r3, [sp, #0]
 800d8e4:	e899 0006 	ldmia.w	r9, {r1, r2}
 800d8e8:	4653      	mov	r3, sl
 800d8ea:	4620      	mov	r0, r4
 800d8ec:	f7f6 fc12 	bl	8004114 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d8f0:	b00c      	add	sp, #48	; 0x30
 800d8f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d8f6:	1a5b      	subs	r3, r3, r1
 800d8f8:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d8fc:	fb93 f3fc 	sdiv	r3, r3, ip
 800d900:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d904:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d908:	e78c      	b.n	800d824 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x80>
 800d90a:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800d90e:	e7b6      	b.n	800d87e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xda>
 800d910:	2000d47c 	.word	0x2000d47c
 800d914:	08021534 	.word	0x08021534
 800d918:	08023158 	.word	0x08023158
 800d91c:	080215c2 	.word	0x080215c2
 800d920:	2000d480 	.word	0x2000d480
 800d924:	080215eb 	.word	0x080215eb
 800d928:	2000d484 	.word	0x2000d484
 800d92c:	2000d40c 	.word	0x2000d40c
 800d930:	2000d488 	.word	0x2000d488

0800d934 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800d934:	b510      	push	{r4, lr}
 800d936:	2101      	movs	r1, #1
 800d938:	4c12      	ldr	r4, [pc, #72]	; (800d984 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x50>)
 800d93a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d93e:	2200      	movs	r2, #0
 800d940:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800d944:	6004      	str	r4, [r0, #0]
 800d946:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d94a:	4c0f      	ldr	r4, [pc, #60]	; (800d988 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800d94c:	8082      	strh	r2, [r0, #4]
 800d94e:	80c2      	strh	r2, [r0, #6]
 800d950:	8102      	strh	r2, [r0, #8]
 800d952:	8142      	strh	r2, [r0, #10]
 800d954:	8182      	strh	r2, [r0, #12]
 800d956:	81c2      	strh	r2, [r0, #14]
 800d958:	8202      	strh	r2, [r0, #16]
 800d95a:	8242      	strh	r2, [r0, #18]
 800d95c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d960:	61c2      	str	r2, [r0, #28]
 800d962:	6282      	str	r2, [r0, #40]	; 0x28
 800d964:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800d968:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d96a:	8601      	strh	r1, [r0, #48]	; 0x30
 800d96c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800d970:	6344      	str	r4, [r0, #52]	; 0x34
 800d972:	8701      	strh	r1, [r0, #56]	; 0x38
 800d974:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800d978:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800d97c:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800d980:	bd10      	pop	{r4, pc}
 800d982:	bf00      	nop
 800d984:	080230f0 	.word	0x080230f0
 800d988:	08020b88 	.word	0x08020b88

0800d98c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800d98c:	4b02      	ldr	r3, [pc, #8]	; (800d998 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800d98e:	6018      	str	r0, [r3, #0]
 800d990:	4b02      	ldr	r3, [pc, #8]	; (800d99c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800d992:	6019      	str	r1, [r3, #0]
 800d994:	4770      	bx	lr
 800d996:	bf00      	nop
 800d998:	2000d414 	.word	0x2000d414
 800d99c:	2000d428 	.word	0x2000d428

0800d9a0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 800d9a0:	b538      	push	{r3, r4, r5, lr}
 800d9a2:	4c2b      	ldr	r4, [pc, #172]	; (800da50 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 800d9a4:	4b2b      	ldr	r3, [pc, #172]	; (800da54 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 800d9a6:	6821      	ldr	r1, [r4, #0]
 800d9a8:	681a      	ldr	r2, [r3, #0]
 800d9aa:	4d2b      	ldr	r5, [pc, #172]	; (800da58 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 800d9ac:	4281      	cmp	r1, r0
 800d9ae:	492b      	ldr	r1, [pc, #172]	; (800da5c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 800d9b0:	d108      	bne.n	800d9c4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800d9b2:	682b      	ldr	r3, [r5, #0]
 800d9b4:	4293      	cmp	r3, r2
 800d9b6:	d105      	bne.n	800d9c4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 800d9b8:	6808      	ldr	r0, [r1, #0]
 800d9ba:	280f      	cmp	r0, #15
 800d9bc:	bf94      	ite	ls
 800d9be:	2000      	movls	r0, #0
 800d9c0:	2001      	movhi	r0, #1
 800d9c2:	bd38      	pop	{r3, r4, r5, pc}
 800d9c4:	4b26      	ldr	r3, [pc, #152]	; (800da60 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 800d9c6:	6020      	str	r0, [r4, #0]
 800d9c8:	681b      	ldr	r3, [r3, #0]
 800d9ca:	602a      	str	r2, [r5, #0]
 800d9cc:	4298      	cmp	r0, r3
 800d9ce:	d905      	bls.n	800d9dc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 800d9d0:	4b24      	ldr	r3, [pc, #144]	; (800da64 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800d9d2:	4a25      	ldr	r2, [pc, #148]	; (800da68 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800d9d4:	2137      	movs	r1, #55	; 0x37
 800d9d6:	4825      	ldr	r0, [pc, #148]	; (800da6c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 800d9d8:	f011 fd0c 	bl	801f3f4 <__assert_func>
 800d9dc:	f010 0403 	ands.w	r4, r0, #3
 800d9e0:	bf1f      	itttt	ne
 800d9e2:	f1c4 0504 	rsbne	r5, r4, #4
 800d9e6:	3b04      	subne	r3, #4
 800d9e8:	1952      	addne	r2, r2, r5
 800d9ea:	191b      	addne	r3, r3, r4
 800d9ec:	4402      	add	r2, r0
 800d9ee:	1a1b      	subs	r3, r3, r0
 800d9f0:	3001      	adds	r0, #1
 800d9f2:	f020 0401 	bic.w	r4, r0, #1
 800d9f6:	4d1e      	ldr	r5, [pc, #120]	; (800da70 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 800d9f8:	42a3      	cmp	r3, r4
 800d9fa:	602a      	str	r2, [r5, #0]
 800d9fc:	d203      	bcs.n	800da06 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 800d9fe:	4b19      	ldr	r3, [pc, #100]	; (800da64 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800da00:	4a19      	ldr	r2, [pc, #100]	; (800da68 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800da02:	214a      	movs	r1, #74	; 0x4a
 800da04:	e7e7      	b.n	800d9d6 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800da06:	f010 0002 	ands.w	r0, r0, #2
 800da0a:	bf1f      	itttt	ne
 800da0c:	f1c0 0504 	rsbne	r5, r0, #4
 800da10:	1952      	addne	r2, r2, r5
 800da12:	1f05      	subne	r5, r0, #4
 800da14:	195b      	addne	r3, r3, r5
 800da16:	1b1b      	subs	r3, r3, r4
 800da18:	4d16      	ldr	r5, [pc, #88]	; (800da74 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 800da1a:	4422      	add	r2, r4
 800da1c:	429c      	cmp	r4, r3
 800da1e:	602a      	str	r2, [r5, #0]
 800da20:	d903      	bls.n	800da2a <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 800da22:	4b10      	ldr	r3, [pc, #64]	; (800da64 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 800da24:	4a10      	ldr	r2, [pc, #64]	; (800da68 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800da26:	215d      	movs	r1, #93	; 0x5d
 800da28:	e7d5      	b.n	800d9d6 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800da2a:	b120      	cbz	r0, 800da36 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 800da2c:	f1c0 0504 	rsb	r5, r0, #4
 800da30:	3804      	subs	r0, #4
 800da32:	442a      	add	r2, r5
 800da34:	4403      	add	r3, r0
 800da36:	1b1b      	subs	r3, r3, r4
 800da38:	480f      	ldr	r0, [pc, #60]	; (800da78 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 800da3a:	600b      	str	r3, [r1, #0]
 800da3c:	4422      	add	r2, r4
 800da3e:	2b0f      	cmp	r3, #15
 800da40:	6002      	str	r2, [r0, #0]
 800da42:	d803      	bhi.n	800da4c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 800da44:	4b0d      	ldr	r3, [pc, #52]	; (800da7c <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 800da46:	4a08      	ldr	r2, [pc, #32]	; (800da68 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 800da48:	2170      	movs	r1, #112	; 0x70
 800da4a:	e7c4      	b.n	800d9d6 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 800da4c:	2001      	movs	r0, #1
 800da4e:	e7b8      	b.n	800d9c2 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 800da50:	2000d41c 	.word	0x2000d41c
 800da54:	2000d414 	.word	0x2000d414
 800da58:	2000d424 	.word	0x2000d424
 800da5c:	2000d42c 	.word	0x2000d42c
 800da60:	2000d428 	.word	0x2000d428
 800da64:	08023186 	.word	0x08023186
 800da68:	0802324e 	.word	0x0802324e
 800da6c:	080231bf 	.word	0x080231bf
 800da70:	2000d430 	.word	0x2000d430
 800da74:	2000d420 	.word	0x2000d420
 800da78:	2000d418 	.word	0x2000d418
 800da7c:	08023209 	.word	0x08023209

0800da80 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 800da80:	4b04      	ldr	r3, [pc, #16]	; (800da94 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 800da82:	6818      	ldr	r0, [r3, #0]
 800da84:	b120      	cbz	r0, 800da90 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 800da86:	4b04      	ldr	r3, [pc, #16]	; (800da98 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 800da88:	6818      	ldr	r0, [r3, #0]
 800da8a:	3000      	adds	r0, #0
 800da8c:	bf18      	it	ne
 800da8e:	2001      	movne	r0, #1
 800da90:	4770      	bx	lr
 800da92:	bf00      	nop
 800da94:	2000d414 	.word	0x2000d414
 800da98:	2000d428 	.word	0x2000d428

0800da9c <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 800da9c:	4b01      	ldr	r3, [pc, #4]	; (800daa4 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 800da9e:	6818      	ldr	r0, [r3, #0]
 800daa0:	4770      	bx	lr
 800daa2:	bf00      	nop
 800daa4:	2000d41c 	.word	0x2000d41c

0800daa8 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 800daa8:	4b01      	ldr	r3, [pc, #4]	; (800dab0 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 800daaa:	6818      	ldr	r0, [r3, #0]
 800daac:	4770      	bx	lr
 800daae:	bf00      	nop
 800dab0:	2000d424 	.word	0x2000d424

0800dab4 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 800dab4:	4b01      	ldr	r3, [pc, #4]	; (800dabc <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 800dab6:	6818      	ldr	r0, [r3, #0]
 800dab8:	4770      	bx	lr
 800daba:	bf00      	nop
 800dabc:	2000d430 	.word	0x2000d430

0800dac0 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 800dac0:	4b01      	ldr	r3, [pc, #4]	; (800dac8 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 800dac2:	6818      	ldr	r0, [r3, #0]
 800dac4:	4770      	bx	lr
 800dac6:	bf00      	nop
 800dac8:	2000d420 	.word	0x2000d420

0800dacc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800dacc:	4b01      	ldr	r3, [pc, #4]	; (800dad4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800dace:	6818      	ldr	r0, [r3, #0]
 800dad0:	4770      	bx	lr
 800dad2:	bf00      	nop
 800dad4:	2000d418 	.word	0x2000d418

0800dad8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800dad8:	4b01      	ldr	r3, [pc, #4]	; (800dae0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800dada:	6818      	ldr	r0, [r3, #0]
 800dadc:	4770      	bx	lr
 800dade:	bf00      	nop
 800dae0:	2000d42c 	.word	0x2000d42c

0800dae4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800dae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dae8:	b08d      	sub	sp, #52	; 0x34
 800daea:	4688      	mov	r8, r1
 800daec:	9916      	ldr	r1, [sp, #88]	; 0x58
 800daee:	f8d3 c000 	ldr.w	ip, [r3]
 800daf2:	680f      	ldr	r7, [r1, #0]
 800daf4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800daf8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800dafc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800db00:	edd3 6a07 	vldr	s13, [r3, #28]
 800db04:	9918      	ldr	r1, [sp, #96]	; 0x60
 800db06:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800db0a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800db0e:	f9ba 1000 	ldrsh.w	r1, [sl]
 800db12:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800db16:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800db1a:	eba7 070c 	sub.w	r7, r7, ip
 800db1e:	42bc      	cmp	r4, r7
 800db20:	bfa8      	it	ge
 800db22:	463c      	movge	r4, r7
 800db24:	ee07 4a90 	vmov	s15, r4
 800db28:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800db2c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800db30:	ee25 4a04 	vmul.f32	s8, s10, s8
 800db34:	ee65 4a24 	vmul.f32	s9, s10, s9
 800db38:	ee25 5a27 	vmul.f32	s10, s10, s15
 800db3c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800db40:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800db44:	eb09 0e0c 	add.w	lr, r9, ip
 800db48:	4571      	cmp	r1, lr
 800db4a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800db4e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800db52:	ee36 0a84 	vadd.f32	s0, s13, s8
 800db56:	ee61 1a87 	vmul.f32	s3, s3, s14
 800db5a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800db5e:	f340 808d 	ble.w	800dc7c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800db62:	eba1 060e 	sub.w	r6, r1, lr
 800db66:	fb96 f5f4 	sdiv	r5, r6, r4
 800db6a:	ee07 5a10 	vmov	s14, r5
 800db6e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800db72:	2d00      	cmp	r5, #0
 800db74:	fb04 6615 	mls	r6, r4, r5, r6
 800db78:	eea7 0a04 	vfma.f32	s0, s14, s8
 800db7c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800db80:	eea7 1a05 	vfma.f32	s2, s14, s10
 800db84:	dd13      	ble.n	800dbae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800db86:	ee70 6a44 	vsub.f32	s13, s0, s8
 800db8a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800db8e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800db92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800db96:	bf18      	it	ne
 800db98:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800db9c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800dba0:	bf08      	it	eq
 800dba2:	eeb0 7a67 	vmoveq.f32	s14, s15
 800dba6:	ee61 1a87 	vmul.f32	s3, s3, s14
 800dbaa:	ee22 2a07 	vmul.f32	s4, s4, s14
 800dbae:	fb05 f204 	mul.w	r2, r5, r4
 800dbb2:	1abf      	subs	r7, r7, r2
 800dbb4:	4494      	add	ip, r2
 800dbb6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800dbba:	4411      	add	r1, r2
 800dbbc:	eb09 020c 	add.w	r2, r9, ip
 800dbc0:	443a      	add	r2, r7
 800dbc2:	b209      	sxth	r1, r1
 800dbc4:	428a      	cmp	r2, r1
 800dbc6:	bfc4      	itt	gt
 800dbc8:	eba1 0209 	subgt.w	r2, r1, r9
 800dbcc:	eba2 070c 	subgt.w	r7, r2, ip
 800dbd0:	2f00      	cmp	r7, #0
 800dbd2:	dd50      	ble.n	800dc76 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800dbd4:	fb97 f1f4 	sdiv	r1, r7, r4
 800dbd8:	fb04 7211 	mls	r2, r4, r1, r7
 800dbdc:	b90a      	cbnz	r2, 800dbe2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800dbde:	3901      	subs	r1, #1
 800dbe0:	4622      	mov	r2, r4
 800dbe2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800dbe6:	6840      	ldr	r0, [r0, #4]
 800dbe8:	900b      	str	r0, [sp, #44]	; 0x2c
 800dbea:	f8d0 a000 	ldr.w	sl, [r0]
 800dbee:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800dbf0:	9008      	str	r0, [sp, #32]
 800dbf2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800dbf6:	9818      	ldr	r0, [sp, #96]	; 0x60
 800dbf8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800dbfc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800dc00:	695b      	ldr	r3, [r3, #20]
 800dc02:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800dc04:	445b      	add	r3, fp
 800dc06:	eef0 6a42 	vmov.f32	s13, s4
 800dc0a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800dc0e:	ee21 3a23 	vmul.f32	s6, s2, s7
 800dc12:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800dc16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dc1a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800dc1e:	9307      	str	r3, [sp, #28]
 800dc20:	ee17 7a90 	vmov	r7, s15
 800dc24:	ee73 7a42 	vsub.f32	s15, s6, s4
 800dc28:	eeb0 7a61 	vmov.f32	s14, s3
 800dc2c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800dc30:	ee16 3a90 	vmov	r3, s13
 800dc34:	fb97 f7f4 	sdiv	r7, r7, r4
 800dc38:	ee17 ca90 	vmov	ip, s15
 800dc3c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800dc40:	fb9c fcf4 	sdiv	ip, ip, r4
 800dc44:	fb0c 3306 	mla	r3, ip, r6, r3
 800dc48:	9302      	str	r3, [sp, #8]
 800dc4a:	ee17 3a10 	vmov	r3, s14
 800dc4e:	44b6      	add	lr, r6
 800dc50:	fb04 e505 	mla	r5, r4, r5, lr
 800dc54:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800dc58:	fb07 3706 	mla	r7, r7, r6, r3
 800dc5c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800dc60:	e9cd 4700 	strd	r4, r7, [sp]
 800dc64:	2900      	cmp	r1, #0
 800dc66:	bfcc      	ite	gt
 800dc68:	46a1      	movgt	r9, r4
 800dc6a:	4691      	movle	r9, r2
 800dc6c:	eba9 0306 	sub.w	r3, r9, r6
 800dc70:	f8da 4008 	ldr.w	r4, [sl, #8]
 800dc74:	47a0      	blx	r4
 800dc76:	b00d      	add	sp, #52	; 0x34
 800dc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc7c:	2500      	movs	r5, #0
 800dc7e:	462e      	mov	r6, r5
 800dc80:	e799      	b.n	800dbb6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800dc84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800dc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc88:	b0db      	sub	sp, #364	; 0x16c
 800dc8a:	461d      	mov	r5, r3
 800dc8c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800dc90:	930a      	str	r3, [sp, #40]	; 0x28
 800dc92:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800dc96:	930b      	str	r3, [sp, #44]	; 0x2c
 800dc98:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800dc9c:	9310      	str	r3, [sp, #64]	; 0x40
 800dc9e:	6803      	ldr	r3, [r0, #0]
 800dca0:	910f      	str	r1, [sp, #60]	; 0x3c
 800dca2:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800dca4:	9009      	str	r0, [sp, #36]	; 0x24
 800dca6:	4614      	mov	r4, r2
 800dca8:	4629      	mov	r1, r5
 800dcaa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800dcae:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800dcb2:	47b8      	blx	r7
 800dcb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dcb6:	6058      	str	r0, [r3, #4]
 800dcb8:	2800      	cmp	r0, #0
 800dcba:	f000 83a1 	beq.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dcbe:	682b      	ldr	r3, [r5, #0]
 800dcc0:	9314      	str	r3, [sp, #80]	; 0x50
 800dcc2:	686b      	ldr	r3, [r5, #4]
 800dcc4:	9315      	str	r3, [sp, #84]	; 0x54
 800dcc6:	4bc4      	ldr	r3, [pc, #784]	; (800dfd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800dcc8:	ed94 7a02 	vldr	s14, [r4, #8]
 800dccc:	7819      	ldrb	r1, [r3, #0]
 800dcce:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800dcd2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800dcd6:	2900      	cmp	r1, #0
 800dcd8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800dcdc:	bf16      	itet	ne
 800dcde:	4619      	movne	r1, r3
 800dce0:	4611      	moveq	r1, r2
 800dce2:	4613      	movne	r3, r2
 800dce4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dce8:	9116      	str	r1, [sp, #88]	; 0x58
 800dcea:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800dcee:	f240 8387 	bls.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dcf2:	ed94 7a07 	vldr	s14, [r4, #28]
 800dcf6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800dcfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dcfe:	f240 837f 	bls.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd02:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800dd06:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800dd0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800dd0e:	f240 8377 	bls.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd12:	6822      	ldr	r2, [r4, #0]
 800dd14:	4bb1      	ldr	r3, [pc, #708]	; (800dfdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800dd16:	429a      	cmp	r2, r3
 800dd18:	f2c0 8372 	blt.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd1c:	49b0      	ldr	r1, [pc, #704]	; (800dfe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800dd1e:	6963      	ldr	r3, [r4, #20]
 800dd20:	428a      	cmp	r2, r1
 800dd22:	f300 836d 	bgt.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd26:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800dd2a:	48ae      	ldr	r0, [pc, #696]	; (800dfe4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800dd2c:	33ff      	adds	r3, #255	; 0xff
 800dd2e:	4283      	cmp	r3, r0
 800dd30:	f200 8366 	bhi.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd34:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800dd36:	4dac      	ldr	r5, [pc, #688]	; (800dfe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800dd38:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800dd3c:	33ff      	adds	r3, #255	; 0xff
 800dd3e:	42ab      	cmp	r3, r5
 800dd40:	f200 835e 	bhi.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd44:	6862      	ldr	r2, [r4, #4]
 800dd46:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800dd4a:	33ff      	adds	r3, #255	; 0xff
 800dd4c:	4283      	cmp	r3, r0
 800dd4e:	f200 8357 	bhi.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd52:	69a1      	ldr	r1, [r4, #24]
 800dd54:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800dd58:	33ff      	adds	r3, #255	; 0xff
 800dd5a:	4283      	cmp	r3, r0
 800dd5c:	f200 8350 	bhi.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd60:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800dd62:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800dd66:	30ff      	adds	r0, #255	; 0xff
 800dd68:	42a8      	cmp	r0, r5
 800dd6a:	f200 8349 	bhi.w	800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800dd6e:	428a      	cmp	r2, r1
 800dd70:	f280 8110 	bge.w	800df94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800dd74:	429a      	cmp	r2, r3
 800dd76:	f300 8119 	bgt.w	800dfac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800dd7a:	4299      	cmp	r1, r3
 800dd7c:	f280 811d 	bge.w	800dfba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800dd80:	2502      	movs	r5, #2
 800dd82:	2701      	movs	r7, #1
 800dd84:	46a9      	mov	r9, r5
 800dd86:	46b8      	mov	r8, r7
 800dd88:	f04f 0a00 	mov.w	sl, #0
 800dd8c:	4621      	mov	r1, r4
 800dd8e:	a849      	add	r0, sp, #292	; 0x124
 800dd90:	f003 fe38 	bl	8011a04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800dd94:	4622      	mov	r2, r4
 800dd96:	4653      	mov	r3, sl
 800dd98:	a949      	add	r1, sp, #292	; 0x124
 800dd9a:	f8cd 9000 	str.w	r9, [sp]
 800dd9e:	a819      	add	r0, sp, #100	; 0x64
 800dda0:	f003 ff60 	bl	8011c64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800dda4:	4622      	mov	r2, r4
 800dda6:	4653      	mov	r3, sl
 800dda8:	a949      	add	r1, sp, #292	; 0x124
 800ddaa:	f8cd 8000 	str.w	r8, [sp]
 800ddae:	a829      	add	r0, sp, #164	; 0xa4
 800ddb0:	f003 ff58 	bl	8011c64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ddb4:	4643      	mov	r3, r8
 800ddb6:	4622      	mov	r2, r4
 800ddb8:	a949      	add	r1, sp, #292	; 0x124
 800ddba:	f8cd 9000 	str.w	r9, [sp]
 800ddbe:	a839      	add	r0, sp, #228	; 0xe4
 800ddc0:	f003 ff50 	bl	8011c64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ddc4:	42af      	cmp	r7, r5
 800ddc6:	bfb5      	itete	lt
 800ddc8:	2300      	movlt	r3, #0
 800ddca:	2301      	movge	r3, #1
 800ddcc:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ddce:	930e      	strge	r3, [sp, #56]	; 0x38
 800ddd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ddd2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ddd6:	af12      	add	r7, sp, #72	; 0x48
 800ddd8:	bfb9      	ittee	lt
 800ddda:	ad29      	addlt	r5, sp, #164	; 0xa4
 800dddc:	ac19      	addlt	r4, sp, #100	; 0x64
 800ddde:	ad19      	addge	r5, sp, #100	; 0x64
 800dde0:	ac29      	addge	r4, sp, #164	; 0xa4
 800dde2:	e887 0003 	stmia.w	r7, {r0, r1}
 800dde6:	b928      	cbnz	r0, 800ddf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800dde8:	4b80      	ldr	r3, [pc, #512]	; (800dfec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ddea:	6818      	ldr	r0, [r3, #0]
 800ddec:	6803      	ldr	r3, [r0, #0]
 800ddee:	6a1b      	ldr	r3, [r3, #32]
 800ddf0:	4798      	blx	r3
 800ddf2:	6038      	str	r0, [r7, #0]
 800ddf4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ddf6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ddfa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ddfe:	930c      	str	r3, [sp, #48]	; 0x30
 800de00:	990c      	ldr	r1, [sp, #48]	; 0x30
 800de02:	6963      	ldr	r3, [r4, #20]
 800de04:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800de06:	440b      	add	r3, r1
 800de08:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800de0c:	4408      	add	r0, r1
 800de0e:	b200      	sxth	r0, r0
 800de10:	4283      	cmp	r3, r0
 800de12:	900d      	str	r0, [sp, #52]	; 0x34
 800de14:	f280 80dd 	bge.w	800dfd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800de18:	428b      	cmp	r3, r1
 800de1a:	da08      	bge.n	800de2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800de1c:	2a00      	cmp	r2, #0
 800de1e:	dd06      	ble.n	800de2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800de20:	1acb      	subs	r3, r1, r3
 800de22:	429a      	cmp	r2, r3
 800de24:	f2c0 80e4 	blt.w	800dff0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800de28:	2b00      	cmp	r3, #0
 800de2a:	f300 80e2 	bgt.w	800dff2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800de2e:	6967      	ldr	r7, [r4, #20]
 800de30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800de32:	443b      	add	r3, r7
 800de34:	461f      	mov	r7, r3
 800de36:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800de38:	1bdf      	subs	r7, r3, r7
 800de3a:	4297      	cmp	r7, r2
 800de3c:	bfa8      	it	ge
 800de3e:	4617      	movge	r7, r2
 800de40:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800de44:	2f00      	cmp	r7, #0
 800de46:	f340 8166 	ble.w	800e116 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800de4a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800de4c:	6829      	ldr	r1, [r5, #0]
 800de4e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de52:	f9bb 3000 	ldrsh.w	r3, [fp]
 800de56:	6820      	ldr	r0, [r4, #0]
 800de58:	4411      	add	r1, r2
 800de5a:	4299      	cmp	r1, r3
 800de5c:	dd1a      	ble.n	800de94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800de5e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800de62:	440b      	add	r3, r1
 800de64:	4402      	add	r2, r0
 800de66:	b21b      	sxth	r3, r3
 800de68:	429a      	cmp	r2, r3
 800de6a:	dc13      	bgt.n	800de94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800de6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800de6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800de70:	681b      	ldr	r3, [r3, #0]
 800de72:	9206      	str	r2, [sp, #24]
 800de74:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800de76:	9205      	str	r2, [sp, #20]
 800de78:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800de7a:	9500      	str	r5, [sp, #0]
 800de7c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800de80:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800de82:	9809      	ldr	r0, [sp, #36]	; 0x24
 800de84:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800de88:	a912      	add	r1, sp, #72	; 0x48
 800de8a:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800de8e:	aa49      	add	r2, sp, #292	; 0x124
 800de90:	4623      	mov	r3, r4
 800de92:	47c8      	blx	r9
 800de94:	e9d4 2300 	ldrd	r2, r3, [r4]
 800de98:	441a      	add	r2, r3
 800de9a:	6963      	ldr	r3, [r4, #20]
 800de9c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800dea0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800dea4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800dea8:	68a1      	ldr	r1, [r4, #8]
 800deaa:	ed94 6a08 	vldr	s12, [r4, #32]
 800deae:	6022      	str	r2, [r4, #0]
 800deb0:	3301      	adds	r3, #1
 800deb2:	6163      	str	r3, [r4, #20]
 800deb4:	69a3      	ldr	r3, [r4, #24]
 800deb6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800deba:	3b01      	subs	r3, #1
 800debc:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800dec0:	61a3      	str	r3, [r4, #24]
 800dec2:	6923      	ldr	r3, [r4, #16]
 800dec4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800dec8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800decc:	edd4 6a07 	vldr	s13, [r4, #28]
 800ded0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ded4:	440b      	add	r3, r1
 800ded6:	68e1      	ldr	r1, [r4, #12]
 800ded8:	6123      	str	r3, [r4, #16]
 800deda:	ee76 6a86 	vadd.f32	s13, s13, s12
 800dede:	428b      	cmp	r3, r1
 800dee0:	edc4 6a07 	vstr	s13, [r4, #28]
 800dee4:	db15      	blt.n	800df12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800dee6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800deea:	ee76 6a26 	vadd.f32	s13, s12, s13
 800deee:	3201      	adds	r2, #1
 800def0:	edc4 6a07 	vstr	s13, [r4, #28]
 800def4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800def8:	6022      	str	r2, [r4, #0]
 800defa:	ee36 7a87 	vadd.f32	s14, s13, s14
 800defe:	1a5b      	subs	r3, r3, r1
 800df00:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800df04:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800df08:	6123      	str	r3, [r4, #16]
 800df0a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800df0e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800df12:	e9d5 2300 	ldrd	r2, r3, [r5]
 800df16:	441a      	add	r2, r3
 800df18:	696b      	ldr	r3, [r5, #20]
 800df1a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800df1e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800df22:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800df26:	68a9      	ldr	r1, [r5, #8]
 800df28:	ed95 6a08 	vldr	s12, [r5, #32]
 800df2c:	602a      	str	r2, [r5, #0]
 800df2e:	3301      	adds	r3, #1
 800df30:	616b      	str	r3, [r5, #20]
 800df32:	69ab      	ldr	r3, [r5, #24]
 800df34:	ee37 7a27 	vadd.f32	s14, s14, s15
 800df38:	3b01      	subs	r3, #1
 800df3a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800df3e:	61ab      	str	r3, [r5, #24]
 800df40:	692b      	ldr	r3, [r5, #16]
 800df42:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800df46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df4a:	edd5 6a07 	vldr	s13, [r5, #28]
 800df4e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800df52:	440b      	add	r3, r1
 800df54:	68e9      	ldr	r1, [r5, #12]
 800df56:	612b      	str	r3, [r5, #16]
 800df58:	ee76 6a86 	vadd.f32	s13, s13, s12
 800df5c:	428b      	cmp	r3, r1
 800df5e:	edc5 6a07 	vstr	s13, [r5, #28]
 800df62:	db15      	blt.n	800df90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800df64:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800df68:	ee76 6a26 	vadd.f32	s13, s12, s13
 800df6c:	3201      	adds	r2, #1
 800df6e:	edc5 6a07 	vstr	s13, [r5, #28]
 800df72:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800df76:	602a      	str	r2, [r5, #0]
 800df78:	ee36 7a87 	vadd.f32	s14, s13, s14
 800df7c:	1a5b      	subs	r3, r3, r1
 800df7e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800df82:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800df86:	612b      	str	r3, [r5, #16]
 800df88:	ee77 7a27 	vadd.f32	s15, s14, s15
 800df8c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800df90:	3f01      	subs	r7, #1
 800df92:	e757      	b.n	800de44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800df94:	4299      	cmp	r1, r3
 800df96:	dc13      	bgt.n	800dfc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800df98:	429a      	cmp	r2, r3
 800df9a:	da14      	bge.n	800dfc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800df9c:	2502      	movs	r5, #2
 800df9e:	2703      	movs	r7, #3
 800dfa0:	46a9      	mov	r9, r5
 800dfa2:	f04f 0800 	mov.w	r8, #0
 800dfa6:	f04f 0a01 	mov.w	sl, #1
 800dfaa:	e6ef      	b.n	800dd8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800dfac:	2501      	movs	r5, #1
 800dfae:	2700      	movs	r7, #0
 800dfb0:	46a9      	mov	r9, r5
 800dfb2:	46b8      	mov	r8, r7
 800dfb4:	f04f 0a02 	mov.w	sl, #2
 800dfb8:	e6e8      	b.n	800dd8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800dfba:	2501      	movs	r5, #1
 800dfbc:	2702      	movs	r7, #2
 800dfbe:	e6e1      	b.n	800dd84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800dfc0:	2500      	movs	r5, #0
 800dfc2:	2701      	movs	r7, #1
 800dfc4:	e7f4      	b.n	800dfb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800dfc6:	2702      	movs	r7, #2
 800dfc8:	2503      	movs	r5, #3
 800dfca:	f04f 0900 	mov.w	r9, #0
 800dfce:	46b8      	mov	r8, r7
 800dfd0:	e7e9      	b.n	800dfa6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800dfd2:	4613      	mov	r3, r2
 800dfd4:	e728      	b.n	800de28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800dfd6:	bf00      	nop
 800dfd8:	2000d404 	.word	0x2000d404
 800dfdc:	fffd8f01 	.word	0xfffd8f01
 800dfe0:	00027100 	.word	0x00027100
 800dfe4:	0004e1ff 	.word	0x0004e1ff
 800dfe8:	0004e1fe 	.word	0x0004e1fe
 800dfec:	2000d40c 	.word	0x2000d40c
 800dff0:	4613      	mov	r3, r2
 800dff2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800dff4:	9111      	str	r1, [sp, #68]	; 0x44
 800dff6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800dffa:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800dffe:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800e000:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800e004:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800e008:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800e00c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800e010:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800e014:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800e018:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800e01c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800e020:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800e024:	469e      	mov	lr, r3
 800e026:	469c      	mov	ip, r3
 800e028:	f04f 0900 	mov.w	r9, #0
 800e02c:	f1bc 0f00 	cmp.w	ip, #0
 800e030:	d147      	bne.n	800e0c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800e032:	eb03 0c07 	add.w	ip, r3, r7
 800e036:	1ad7      	subs	r7, r2, r3
 800e038:	f1b9 0f00 	cmp.w	r9, #0
 800e03c:	d009      	beq.n	800e052 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800e03e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800e042:	9029      	str	r0, [sp, #164]	; 0xa4
 800e044:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800e048:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800e04c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800e050:	912d      	str	r1, [sp, #180]	; 0xb4
 800e052:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800e054:	9111      	str	r1, [sp, #68]	; 0x44
 800e056:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800e05a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800e05e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800e062:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800e066:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800e06a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800e06e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800e072:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800e076:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800e07a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800e07e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800e082:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800e086:	f04f 0800 	mov.w	r8, #0
 800e08a:	f1be 0f00 	cmp.w	lr, #0
 800e08e:	d031      	beq.n	800e0f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800e090:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e092:	4431      	add	r1, r6
 800e094:	4549      	cmp	r1, r9
 800e096:	4450      	add	r0, sl
 800e098:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e09c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e0a0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e0a4:	db08      	blt.n	800e0b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800e0a6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e0aa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e0ae:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e0b2:	3001      	adds	r0, #1
 800e0b4:	eba1 0109 	sub.w	r1, r1, r9
 800e0b8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e0bc:	f04f 0801 	mov.w	r8, #1
 800e0c0:	e7e3      	b.n	800e08a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800e0c2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800e0c4:	4431      	add	r1, r6
 800e0c6:	4541      	cmp	r1, r8
 800e0c8:	4450      	add	r0, sl
 800e0ca:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e0ce:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e0d2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e0d6:	db08      	blt.n	800e0ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800e0d8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e0dc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e0e0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e0e4:	3001      	adds	r0, #1
 800e0e6:	eba1 0108 	sub.w	r1, r1, r8
 800e0ea:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e0ee:	f04f 0901 	mov.w	r9, #1
 800e0f2:	e79b      	b.n	800e02c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800e0f4:	449c      	add	ip, r3
 800e0f6:	1aff      	subs	r7, r7, r3
 800e0f8:	f1b8 0f00 	cmp.w	r8, #0
 800e0fc:	d009      	beq.n	800e112 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800e0fe:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800e102:	9019      	str	r0, [sp, #100]	; 0x64
 800e104:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800e108:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800e10c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800e110:	911d      	str	r1, [sp, #116]	; 0x74
 800e112:	1ad2      	subs	r2, r2, r3
 800e114:	e68b      	b.n	800de2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800e116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e118:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800e11a:	2b00      	cmp	r3, #0
 800e11c:	f000 80d1 	beq.w	800e2c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800e120:	ad19      	add	r5, sp, #100	; 0x64
 800e122:	ac39      	add	r4, sp, #228	; 0xe4
 800e124:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e126:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800e12a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800e12e:	930c      	str	r3, [sp, #48]	; 0x30
 800e130:	990c      	ldr	r1, [sp, #48]	; 0x30
 800e132:	6963      	ldr	r3, [r4, #20]
 800e134:	440b      	add	r3, r1
 800e136:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800e13a:	4408      	add	r0, r1
 800e13c:	b200      	sxth	r0, r0
 800e13e:	4283      	cmp	r3, r0
 800e140:	900d      	str	r0, [sp, #52]	; 0x34
 800e142:	f280 80c1 	bge.w	800e2c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800e146:	428b      	cmp	r3, r1
 800e148:	da08      	bge.n	800e15c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e14a:	2a00      	cmp	r2, #0
 800e14c:	dd06      	ble.n	800e15c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e14e:	1acb      	subs	r3, r1, r3
 800e150:	429a      	cmp	r2, r3
 800e152:	f2c0 80bb 	blt.w	800e2cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800e156:	2b00      	cmp	r3, #0
 800e158:	f300 80b9 	bgt.w	800e2ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800e15c:	6967      	ldr	r7, [r4, #20]
 800e15e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e160:	443b      	add	r3, r7
 800e162:	461f      	mov	r7, r3
 800e164:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e166:	1bdf      	subs	r7, r3, r7
 800e168:	4297      	cmp	r7, r2
 800e16a:	bfa8      	it	ge
 800e16c:	4617      	movge	r7, r2
 800e16e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800e172:	2f00      	cmp	r7, #0
 800e174:	f340 813c 	ble.w	800e3f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800e178:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800e17a:	6829      	ldr	r1, [r5, #0]
 800e17c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e180:	f9bb 3000 	ldrsh.w	r3, [fp]
 800e184:	6820      	ldr	r0, [r4, #0]
 800e186:	4411      	add	r1, r2
 800e188:	4299      	cmp	r1, r3
 800e18a:	dd1a      	ble.n	800e1c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e18c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800e190:	440b      	add	r3, r1
 800e192:	4402      	add	r2, r0
 800e194:	b21b      	sxth	r3, r3
 800e196:	429a      	cmp	r2, r3
 800e198:	dc13      	bgt.n	800e1c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800e19a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e19c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e19e:	681b      	ldr	r3, [r3, #0]
 800e1a0:	9206      	str	r2, [sp, #24]
 800e1a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e1a4:	9205      	str	r2, [sp, #20]
 800e1a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e1a8:	9500      	str	r5, [sp, #0]
 800e1aa:	e9cd b203 	strd	fp, r2, [sp, #12]
 800e1ae:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800e1b0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e1b2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800e1b6:	a912      	add	r1, sp, #72	; 0x48
 800e1b8:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800e1bc:	aa49      	add	r2, sp, #292	; 0x124
 800e1be:	4623      	mov	r3, r4
 800e1c0:	47c8      	blx	r9
 800e1c2:	e9d4 2300 	ldrd	r2, r3, [r4]
 800e1c6:	441a      	add	r2, r3
 800e1c8:	6963      	ldr	r3, [r4, #20]
 800e1ca:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800e1ce:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800e1d2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800e1d6:	68a1      	ldr	r1, [r4, #8]
 800e1d8:	ed94 6a08 	vldr	s12, [r4, #32]
 800e1dc:	6022      	str	r2, [r4, #0]
 800e1de:	3301      	adds	r3, #1
 800e1e0:	6163      	str	r3, [r4, #20]
 800e1e2:	69a3      	ldr	r3, [r4, #24]
 800e1e4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e1e8:	3b01      	subs	r3, #1
 800e1ea:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800e1ee:	61a3      	str	r3, [r4, #24]
 800e1f0:	6923      	ldr	r3, [r4, #16]
 800e1f2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e1f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e1fa:	edd4 6a07 	vldr	s13, [r4, #28]
 800e1fe:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e202:	440b      	add	r3, r1
 800e204:	68e1      	ldr	r1, [r4, #12]
 800e206:	6123      	str	r3, [r4, #16]
 800e208:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e20c:	428b      	cmp	r3, r1
 800e20e:	edc4 6a07 	vstr	s13, [r4, #28]
 800e212:	db15      	blt.n	800e240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800e214:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800e218:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e21c:	3201      	adds	r2, #1
 800e21e:	edc4 6a07 	vstr	s13, [r4, #28]
 800e222:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800e226:	6022      	str	r2, [r4, #0]
 800e228:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e22c:	1a5b      	subs	r3, r3, r1
 800e22e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800e232:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800e236:	6123      	str	r3, [r4, #16]
 800e238:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e23c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800e240:	e9d5 2300 	ldrd	r2, r3, [r5]
 800e244:	441a      	add	r2, r3
 800e246:	696b      	ldr	r3, [r5, #20]
 800e248:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800e24c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800e250:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800e254:	68a9      	ldr	r1, [r5, #8]
 800e256:	ed95 6a08 	vldr	s12, [r5, #32]
 800e25a:	602a      	str	r2, [r5, #0]
 800e25c:	3301      	adds	r3, #1
 800e25e:	616b      	str	r3, [r5, #20]
 800e260:	69ab      	ldr	r3, [r5, #24]
 800e262:	ee37 7a27 	vadd.f32	s14, s14, s15
 800e266:	3b01      	subs	r3, #1
 800e268:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800e26c:	61ab      	str	r3, [r5, #24]
 800e26e:	692b      	ldr	r3, [r5, #16]
 800e270:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e274:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e278:	edd5 6a07 	vldr	s13, [r5, #28]
 800e27c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e280:	440b      	add	r3, r1
 800e282:	68e9      	ldr	r1, [r5, #12]
 800e284:	612b      	str	r3, [r5, #16]
 800e286:	ee76 6a86 	vadd.f32	s13, s13, s12
 800e28a:	428b      	cmp	r3, r1
 800e28c:	edc5 6a07 	vstr	s13, [r5, #28]
 800e290:	db15      	blt.n	800e2be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800e292:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800e296:	ee76 6a26 	vadd.f32	s13, s12, s13
 800e29a:	3201      	adds	r2, #1
 800e29c:	edc5 6a07 	vstr	s13, [r5, #28]
 800e2a0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800e2a4:	602a      	str	r2, [r5, #0]
 800e2a6:	ee36 7a87 	vadd.f32	s14, s13, s14
 800e2aa:	1a5b      	subs	r3, r3, r1
 800e2ac:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800e2b0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800e2b4:	612b      	str	r3, [r5, #16]
 800e2b6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800e2ba:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800e2be:	3f01      	subs	r7, #1
 800e2c0:	e757      	b.n	800e172 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800e2c2:	ad39      	add	r5, sp, #228	; 0xe4
 800e2c4:	ac19      	add	r4, sp, #100	; 0x64
 800e2c6:	e72d      	b.n	800e124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800e2c8:	4613      	mov	r3, r2
 800e2ca:	e744      	b.n	800e156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800e2cc:	4613      	mov	r3, r2
 800e2ce:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800e2d2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800e2d4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800e2d8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800e2dc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800e2e0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800e2e4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800e2e8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800e2ec:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800e2f0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800e2f2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800e2f6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800e2fa:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800e2fe:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800e302:	960e      	str	r6, [sp, #56]	; 0x38
 800e304:	469e      	mov	lr, r3
 800e306:	461f      	mov	r7, r3
 800e308:	f04f 0900 	mov.w	r9, #0
 800e30c:	2f00      	cmp	r7, #0
 800e30e:	d146      	bne.n	800e39e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800e310:	449c      	add	ip, r3
 800e312:	1ad7      	subs	r7, r2, r3
 800e314:	f1b9 0f00 	cmp.w	r9, #0
 800e318:	d009      	beq.n	800e32e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800e31a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800e31e:	9039      	str	r0, [sp, #228]	; 0xe4
 800e320:	913d      	str	r1, [sp, #244]	; 0xf4
 800e322:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800e326:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800e32a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800e32e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800e330:	910e      	str	r1, [sp, #56]	; 0x38
 800e332:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800e336:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800e33a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800e33e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800e342:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800e346:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800e34a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800e34e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800e352:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800e356:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800e35a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800e35e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800e362:	f04f 0800 	mov.w	r8, #0
 800e366:	f1be 0f00 	cmp.w	lr, #0
 800e36a:	d030      	beq.n	800e3ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800e36c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800e36e:	4431      	add	r1, r6
 800e370:	4549      	cmp	r1, r9
 800e372:	4450      	add	r0, sl
 800e374:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800e378:	ee37 7a04 	vadd.f32	s14, s14, s8
 800e37c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800e380:	db08      	blt.n	800e394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800e382:	ee77 7a85 	vadd.f32	s15, s15, s10
 800e386:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800e38a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800e38e:	3001      	adds	r0, #1
 800e390:	eba1 0109 	sub.w	r1, r1, r9
 800e394:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e398:	f04f 0801 	mov.w	r8, #1
 800e39c:	e7e3      	b.n	800e366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800e39e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800e3a0:	4431      	add	r1, r6
 800e3a2:	4541      	cmp	r1, r8
 800e3a4:	4450      	add	r0, sl
 800e3a6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800e3aa:	ee77 7a84 	vadd.f32	s15, s15, s8
 800e3ae:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800e3b2:	db08      	blt.n	800e3c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800e3b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800e3b8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800e3bc:	ee77 7a86 	vadd.f32	s15, s15, s12
 800e3c0:	3001      	adds	r0, #1
 800e3c2:	eba1 0108 	sub.w	r1, r1, r8
 800e3c6:	3f01      	subs	r7, #1
 800e3c8:	f04f 0901 	mov.w	r9, #1
 800e3cc:	e79e      	b.n	800e30c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800e3ce:	449c      	add	ip, r3
 800e3d0:	1aff      	subs	r7, r7, r3
 800e3d2:	f1b8 0f00 	cmp.w	r8, #0
 800e3d6:	d009      	beq.n	800e3ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800e3d8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800e3dc:	9019      	str	r0, [sp, #100]	; 0x64
 800e3de:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800e3e2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800e3e6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800e3ea:	911d      	str	r1, [sp, #116]	; 0x74
 800e3ec:	1ad2      	subs	r2, r2, r3
 800e3ee:	e6b5      	b.n	800e15c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800e3f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e3f2:	681b      	ldr	r3, [r3, #0]
 800e3f4:	b923      	cbnz	r3, 800e400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800e3f6:	4b04      	ldr	r3, [pc, #16]	; (800e408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800e3f8:	6818      	ldr	r0, [r3, #0]
 800e3fa:	6803      	ldr	r3, [r0, #0]
 800e3fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e3fe:	4798      	blx	r3
 800e400:	b05b      	add	sp, #364	; 0x16c
 800e402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e406:	bf00      	nop
 800e408:	2000d40c 	.word	0x2000d40c

0800e40c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800e40c:	b570      	push	{r4, r5, r6, lr}
 800e40e:	4604      	mov	r4, r0
 800e410:	2500      	movs	r5, #0
 800e412:	7223      	strb	r3, [r4, #8]
 800e414:	9804      	ldr	r0, [sp, #16]
 800e416:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e41a:	8025      	strh	r5, [r4, #0]
 800e41c:	6061      	str	r1, [r4, #4]
 800e41e:	7263      	strb	r3, [r4, #9]
 800e420:	60e0      	str	r0, [r4, #12]
 800e422:	8222      	strh	r2, [r4, #16]
 800e424:	8265      	strh	r5, [r4, #18]
 800e426:	82a5      	strh	r5, [r4, #20]
 800e428:	82e5      	strh	r5, [r4, #22]
 800e42a:	8325      	strh	r5, [r4, #24]
 800e42c:	8365      	strh	r5, [r4, #26]
 800e42e:	83a5      	strh	r5, [r4, #28]
 800e430:	77a5      	strb	r5, [r4, #30]
 800e432:	6803      	ldr	r3, [r0, #0]
 800e434:	695b      	ldr	r3, [r3, #20]
 800e436:	4798      	blx	r3
 800e438:	4606      	mov	r6, r0
 800e43a:	b1f8      	cbz	r0, 800e47c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800e43c:	68e0      	ldr	r0, [r4, #12]
 800e43e:	6803      	ldr	r3, [r0, #0]
 800e440:	4631      	mov	r1, r6
 800e442:	68db      	ldr	r3, [r3, #12]
 800e444:	4798      	blx	r3
 800e446:	7b43      	ldrb	r3, [r0, #13]
 800e448:	7a82      	ldrb	r2, [r0, #10]
 800e44a:	005b      	lsls	r3, r3, #1
 800e44c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e450:	4313      	orrs	r3, r2
 800e452:	83a3      	strh	r3, [r4, #28]
 800e454:	7a63      	ldrb	r3, [r4, #9]
 800e456:	2b04      	cmp	r3, #4
 800e458:	4605      	mov	r5, r0
 800e45a:	d10f      	bne.n	800e47c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800e45c:	68e0      	ldr	r0, [r4, #12]
 800e45e:	6803      	ldr	r3, [r0, #0]
 800e460:	462a      	mov	r2, r5
 800e462:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e464:	4631      	mov	r1, r6
 800e466:	4798      	blx	r3
 800e468:	7b6b      	ldrb	r3, [r5, #13]
 800e46a:	005b      	lsls	r3, r3, #1
 800e46c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e470:	7aab      	ldrb	r3, [r5, #10]
 800e472:	4313      	orrs	r3, r2
 800e474:	4418      	add	r0, r3
 800e476:	8ba3      	ldrh	r3, [r4, #28]
 800e478:	4418      	add	r0, r3
 800e47a:	83a0      	strh	r0, [r4, #28]
 800e47c:	4620      	mov	r0, r4
 800e47e:	bd70      	pop	{r4, r5, r6, pc}

0800e480 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800e480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e484:	2400      	movs	r4, #0
 800e486:	b085      	sub	sp, #20
 800e488:	4681      	mov	r9, r0
 800e48a:	4688      	mov	r8, r1
 800e48c:	4692      	mov	sl, r2
 800e48e:	469b      	mov	fp, r3
 800e490:	4627      	mov	r7, r4
 800e492:	4625      	mov	r5, r4
 800e494:	4626      	mov	r6, r4
 800e496:	4554      	cmp	r4, sl
 800e498:	da2a      	bge.n	800e4f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e49a:	2300      	movs	r3, #0
 800e49c:	9303      	str	r3, [sp, #12]
 800e49e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e4a2:	429d      	cmp	r5, r3
 800e4a4:	d004      	beq.n	800e4b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800e4a6:	f242 030b 	movw	r3, #8203	; 0x200b
 800e4aa:	429d      	cmp	r5, r3
 800e4ac:	bf18      	it	ne
 800e4ae:	462f      	movne	r7, r5
 800e4b0:	ab03      	add	r3, sp, #12
 800e4b2:	4642      	mov	r2, r8
 800e4b4:	4659      	mov	r1, fp
 800e4b6:	4648      	mov	r0, r9
 800e4b8:	f003 f82a 	bl	8011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e4bc:	4605      	mov	r5, r0
 800e4be:	b1b8      	cbz	r0, 800e4f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e4c0:	280a      	cmp	r0, #10
 800e4c2:	d015      	beq.n	800e4f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800e4c4:	9a03      	ldr	r2, [sp, #12]
 800e4c6:	b18a      	cbz	r2, 800e4ec <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800e4c8:	7b50      	ldrb	r0, [r2, #13]
 800e4ca:	7a93      	ldrb	r3, [r2, #10]
 800e4cc:	8895      	ldrh	r5, [r2, #4]
 800e4ce:	0040      	lsls	r0, r0, #1
 800e4d0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800e4d4:	4303      	orrs	r3, r0
 800e4d6:	9301      	str	r3, [sp, #4]
 800e4d8:	f8d8 3000 	ldr.w	r3, [r8]
 800e4dc:	4639      	mov	r1, r7
 800e4de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e4e0:	4640      	mov	r0, r8
 800e4e2:	4798      	blx	r3
 800e4e4:	9b01      	ldr	r3, [sp, #4]
 800e4e6:	4418      	add	r0, r3
 800e4e8:	4406      	add	r6, r0
 800e4ea:	b2b6      	uxth	r6, r6
 800e4ec:	3401      	adds	r4, #1
 800e4ee:	e7d2      	b.n	800e496 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800e4f0:	4630      	mov	r0, r6
 800e4f2:	b005      	add	sp, #20
 800e4f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e4f8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800e4f8:	2a02      	cmp	r2, #2
 800e4fa:	b530      	push	{r4, r5, lr}
 800e4fc:	d011      	beq.n	800e522 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800e4fe:	2a03      	cmp	r2, #3
 800e500:	d01c      	beq.n	800e53c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800e502:	2a01      	cmp	r2, #1
 800e504:	d10c      	bne.n	800e520 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e506:	888b      	ldrh	r3, [r1, #4]
 800e508:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800e50c:	8801      	ldrh	r1, [r0, #0]
 800e50e:	8844      	ldrh	r4, [r0, #2]
 800e510:	8004      	strh	r4, [r0, #0]
 800e512:	1a9b      	subs	r3, r3, r2
 800e514:	1a5b      	subs	r3, r3, r1
 800e516:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800e51a:	8043      	strh	r3, [r0, #2]
 800e51c:	8081      	strh	r1, [r0, #4]
 800e51e:	80c2      	strh	r2, [r0, #6]
 800e520:	bd30      	pop	{r4, r5, pc}
 800e522:	88cb      	ldrh	r3, [r1, #6]
 800e524:	88c2      	ldrh	r2, [r0, #6]
 800e526:	1a9b      	subs	r3, r3, r2
 800e528:	8842      	ldrh	r2, [r0, #2]
 800e52a:	1a9b      	subs	r3, r3, r2
 800e52c:	888a      	ldrh	r2, [r1, #4]
 800e52e:	8881      	ldrh	r1, [r0, #4]
 800e530:	8043      	strh	r3, [r0, #2]
 800e532:	1a52      	subs	r2, r2, r1
 800e534:	8801      	ldrh	r1, [r0, #0]
 800e536:	1a52      	subs	r2, r2, r1
 800e538:	8002      	strh	r2, [r0, #0]
 800e53a:	e7f1      	b.n	800e520 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800e53c:	88cb      	ldrh	r3, [r1, #6]
 800e53e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800e542:	8841      	ldrh	r1, [r0, #2]
 800e544:	f9b0 5000 	ldrsh.w	r5, [r0]
 800e548:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800e54c:	8045      	strh	r5, [r0, #2]
 800e54e:	1a9b      	subs	r3, r3, r2
 800e550:	1a5b      	subs	r3, r3, r1
 800e552:	8003      	strh	r3, [r0, #0]
 800e554:	8082      	strh	r2, [r0, #4]
 800e556:	80c4      	strh	r4, [r0, #6]
 800e558:	e7e2      	b.n	800e520 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800e55a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800e55a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e55e:	b09f      	sub	sp, #124	; 0x7c
 800e560:	9116      	str	r1, [sp, #88]	; 0x58
 800e562:	9317      	str	r3, [sp, #92]	; 0x5c
 800e564:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800e566:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e568:	8809      	ldrh	r1, [r1, #0]
 800e56a:	889b      	ldrh	r3, [r3, #4]
 800e56c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800e570:	9212      	str	r2, [sp, #72]	; 0x48
 800e572:	440b      	add	r3, r1
 800e574:	b21b      	sxth	r3, r3
 800e576:	9310      	str	r3, [sp, #64]	; 0x40
 800e578:	f8d8 3000 	ldr.w	r3, [r8]
 800e57c:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800e580:	7a59      	ldrb	r1, [r3, #9]
 800e582:	7a1b      	ldrb	r3, [r3, #8]
 800e584:	9315      	str	r3, [sp, #84]	; 0x54
 800e586:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800e588:	9011      	str	r0, [sp, #68]	; 0x44
 800e58a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800e58e:	9114      	str	r1, [sp, #80]	; 0x50
 800e590:	f9b3 5000 	ldrsh.w	r5, [r3]
 800e594:	2a00      	cmp	r2, #0
 800e596:	d067      	beq.n	800e668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800e598:	f898 3010 	ldrb.w	r3, [r8, #16]
 800e59c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800e59e:	2b04      	cmp	r3, #4
 800e5a0:	bf14      	ite	ne
 800e5a2:	2301      	movne	r3, #1
 800e5a4:	2302      	moveq	r3, #2
 800e5a6:	4413      	add	r3, r2
 800e5a8:	f04f 0900 	mov.w	r9, #0
 800e5ac:	930f      	str	r3, [sp, #60]	; 0x3c
 800e5ae:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800e5b2:	464c      	mov	r4, r9
 800e5b4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800e5b8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800e5bc:	4293      	cmp	r3, r2
 800e5be:	f280 808c 	bge.w	800e6da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e5c2:	2300      	movs	r3, #0
 800e5c4:	931c      	str	r3, [sp, #112]	; 0x70
 800e5c6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e5ca:	429c      	cmp	r4, r3
 800e5cc:	d006      	beq.n	800e5dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800e5ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e5d0:	f242 020b 	movw	r2, #8203	; 0x200b
 800e5d4:	4294      	cmp	r4, r2
 800e5d6:	bf18      	it	ne
 800e5d8:	4623      	movne	r3, r4
 800e5da:	930d      	str	r3, [sp, #52]	; 0x34
 800e5dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e5de:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800e5e0:	f8d8 2000 	ldr.w	r2, [r8]
 800e5e4:	428b      	cmp	r3, r1
 800e5e6:	db41      	blt.n	800e66c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800e5e8:	6813      	ldr	r3, [r2, #0]
 800e5ea:	4610      	mov	r0, r2
 800e5ec:	695b      	ldr	r3, [r3, #20]
 800e5ee:	4798      	blx	r3
 800e5f0:	4604      	mov	r4, r0
 800e5f2:	f8d8 0000 	ldr.w	r0, [r8]
 800e5f6:	6803      	ldr	r3, [r0, #0]
 800e5f8:	aa1d      	add	r2, sp, #116	; 0x74
 800e5fa:	689e      	ldr	r6, [r3, #8]
 800e5fc:	4621      	mov	r1, r4
 800e5fe:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800e602:	47b0      	blx	r6
 800e604:	901c      	str	r0, [sp, #112]	; 0x70
 800e606:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e60a:	429c      	cmp	r4, r3
 800e60c:	f000 80e9 	beq.w	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e610:	f242 030b 	movw	r3, #8203	; 0x200b
 800e614:	429c      	cmp	r4, r3
 800e616:	f000 80e4 	beq.w	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e61a:	2c00      	cmp	r4, #0
 800e61c:	f000 80f6 	beq.w	800e80c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800e620:	2c0a      	cmp	r4, #10
 800e622:	d060      	beq.n	800e6e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e624:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e626:	b36a      	cbz	r2, 800e684 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800e628:	8894      	ldrh	r4, [r2, #4]
 800e62a:	f1bb 0f00 	cmp.w	fp, #0
 800e62e:	d03b      	beq.n	800e6a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800e630:	f892 900d 	ldrb.w	r9, [r2, #13]
 800e634:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800e638:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800e63c:	f892 900a 	ldrb.w	r9, [r2, #10]
 800e640:	f1bb 0f01 	cmp.w	fp, #1
 800e644:	ea49 0903 	orr.w	r9, r9, r3
 800e648:	d134      	bne.n	800e6b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800e64a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e64c:	eba5 0509 	sub.w	r5, r5, r9
 800e650:	2b00      	cmp	r3, #0
 800e652:	d14f      	bne.n	800e6f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e654:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e656:	eb09 0305 	add.w	r3, r9, r5
 800e65a:	4413      	add	r3, r2
 800e65c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800e65e:	f9b2 2000 	ldrsh.w	r2, [r2]
 800e662:	4293      	cmp	r3, r2
 800e664:	da51      	bge.n	800e70a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800e666:	e038      	b.n	800e6da <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800e668:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800e66a:	e79d      	b.n	800e5a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800e66c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800e670:	9301      	str	r3, [sp, #4]
 800e672:	ab1d      	add	r3, sp, #116	; 0x74
 800e674:	9300      	str	r3, [sp, #0]
 800e676:	4659      	mov	r1, fp
 800e678:	ab1c      	add	r3, sp, #112	; 0x70
 800e67a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800e67c:	f002 ffa0 	bl	80115c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800e680:	4604      	mov	r4, r0
 800e682:	e7c0      	b.n	800e606 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800e684:	f8d8 0000 	ldr.w	r0, [r8]
 800e688:	6803      	ldr	r3, [r0, #0]
 800e68a:	691b      	ldr	r3, [r3, #16]
 800e68c:	4798      	blx	r3
 800e68e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e692:	4298      	cmp	r0, r3
 800e694:	f000 80a5 	beq.w	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e698:	f242 030b 	movw	r3, #8203	; 0x200b
 800e69c:	4298      	cmp	r0, r3
 800e69e:	f000 80a0 	beq.w	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e6a2:	f1bb 0f00 	cmp.w	fp, #0
 800e6a6:	d100      	bne.n	800e6aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800e6a8:	444d      	add	r5, r9
 800e6aa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e6ac:	2a00      	cmp	r2, #0
 800e6ae:	d1bf      	bne.n	800e630 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800e6b0:	4691      	mov	r9, r2
 800e6b2:	e096      	b.n	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e6b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e6b6:	2b00      	cmp	r3, #0
 800e6b8:	f000 80aa 	beq.w	800e810 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800e6bc:	f1bb 0f00 	cmp.w	fp, #0
 800e6c0:	d118      	bne.n	800e6f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800e6c2:	f8d8 0000 	ldr.w	r0, [r8]
 800e6c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e6c8:	6803      	ldr	r3, [r0, #0]
 800e6ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e6cc:	4798      	blx	r3
 800e6ce:	4405      	add	r5, r0
 800e6d0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800e6d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e6d4:	1aeb      	subs	r3, r5, r3
 800e6d6:	4293      	cmp	r3, r2
 800e6d8:	dd17      	ble.n	800e70a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800e6da:	2c00      	cmp	r4, #0
 800e6dc:	f000 8096 	beq.w	800e80c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800e6e0:	2c0a      	cmp	r4, #10
 800e6e2:	f040 8084 	bne.w	800e7ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800e6e6:	240a      	movs	r4, #10
 800e6e8:	fab4 f084 	clz	r0, r4
 800e6ec:	0940      	lsrs	r0, r0, #5
 800e6ee:	b01f      	add	sp, #124	; 0x7c
 800e6f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6f4:	f8d8 0000 	ldr.w	r0, [r8]
 800e6f8:	990d      	ldr	r1, [sp, #52]	; 0x34
 800e6fa:	6803      	ldr	r3, [r0, #0]
 800e6fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e6fe:	4798      	blx	r3
 800e700:	f1bb 0f01 	cmp.w	fp, #1
 800e704:	eba5 0500 	sub.w	r5, r5, r0
 800e708:	d0a4      	beq.n	800e654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800e70a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800e70c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e70e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800e712:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e716:	7b43      	ldrb	r3, [r0, #13]
 800e718:	015b      	lsls	r3, r3, #5
 800e71a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e71e:	7983      	ldrb	r3, [r0, #6]
 800e720:	4429      	add	r1, r5
 800e722:	4313      	orrs	r3, r2
 800e724:	440b      	add	r3, r1
 800e726:	42b3      	cmp	r3, r6
 800e728:	db5b      	blt.n	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e72a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e72c:	4299      	cmp	r1, r3
 800e72e:	da58      	bge.n	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e730:	f8d8 0000 	ldr.w	r0, [r8]
 800e734:	6803      	ldr	r3, [r0, #0]
 800e736:	42ae      	cmp	r6, r5
 800e738:	bfc8      	it	gt
 800e73a:	1b76      	subgt	r6, r6, r5
 800e73c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e73e:	bfcc      	ite	gt
 800e740:	b2b6      	uxthgt	r6, r6
 800e742:	2600      	movle	r6, #0
 800e744:	4798      	blx	r3
 800e746:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e748:	7b5a      	ldrb	r2, [r3, #13]
 800e74a:	00d1      	lsls	r1, r2, #3
 800e74c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800e750:	7a19      	ldrb	r1, [r3, #8]
 800e752:	4339      	orrs	r1, r7
 800e754:	0657      	lsls	r7, r2, #25
 800e756:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800e758:	bf44      	itt	mi
 800e75a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800e75e:	b209      	sxthmi	r1, r1
 800e760:	19c7      	adds	r7, r0, r7
 800e762:	1a7f      	subs	r7, r7, r1
 800e764:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800e766:	b2bf      	uxth	r7, r7
 800e768:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800e76c:	fa0f fa87 	sxth.w	sl, r7
 800e770:	4551      	cmp	r1, sl
 800e772:	dd3a      	ble.n	800e7ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800e774:	0112      	lsls	r2, r2, #4
 800e776:	79d8      	ldrb	r0, [r3, #7]
 800e778:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e77c:	4302      	orrs	r2, r0
 800e77e:	4492      	add	sl, r2
 800e780:	4551      	cmp	r1, sl
 800e782:	dc2e      	bgt.n	800e7e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800e784:	1bcf      	subs	r7, r1, r7
 800e786:	b2bf      	uxth	r7, r7
 800e788:	468a      	mov	sl, r1
 800e78a:	9319      	str	r3, [sp, #100]	; 0x64
 800e78c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e78e:	f8d8 0000 	ldr.w	r0, [r8]
 800e792:	681a      	ldr	r2, [r3, #0]
 800e794:	6801      	ldr	r1, [r0, #0]
 800e796:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800e798:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800e79a:	9313      	str	r3, [sp, #76]	; 0x4c
 800e79c:	9218      	str	r2, [sp, #96]	; 0x60
 800e79e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800e7a0:	4788      	blx	r1
 800e7a2:	f898 1006 	ldrb.w	r1, [r8, #6]
 800e7a6:	910b      	str	r1, [sp, #44]	; 0x2c
 800e7a8:	f898 100e 	ldrb.w	r1, [r8, #14]
 800e7ac:	910a      	str	r1, [sp, #40]	; 0x28
 800e7ae:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800e7b2:	9109      	str	r1, [sp, #36]	; 0x24
 800e7b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e7b6:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800e7ba:	9305      	str	r3, [sp, #20]
 800e7bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800e7be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800e7c0:	9206      	str	r2, [sp, #24]
 800e7c2:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800e7c6:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800e7ca:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e7ce:	442e      	add	r6, r5
 800e7d0:	b236      	sxth	r6, r6
 800e7d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e7d4:	9600      	str	r6, [sp, #0]
 800e7d6:	681a      	ldr	r2, [r3, #0]
 800e7d8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800e7da:	685b      	ldr	r3, [r3, #4]
 800e7dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e7de:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e7e0:	47b0      	blx	r6
 800e7e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e7e4:	3301      	adds	r3, #1
 800e7e6:	930e      	str	r3, [sp, #56]	; 0x38
 800e7e8:	e6e6      	b.n	800e5b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800e7ea:	2700      	movs	r7, #0
 800e7ec:	e7cd      	b.n	800e78a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800e7ee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800e7f0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800e7f2:	3501      	adds	r5, #1
 800e7f4:	429d      	cmp	r5, r3
 800e7f6:	f6bf af77 	bge.w	800e6e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800e7fa:	4659      	mov	r1, fp
 800e7fc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800e7fe:	f7f5 fc45 	bl	800408c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e802:	4604      	mov	r4, r0
 800e804:	b110      	cbz	r0, 800e80c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800e806:	280a      	cmp	r0, #10
 800e808:	d1f2      	bne.n	800e7f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800e80a:	e76c      	b.n	800e6e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800e80c:	2400      	movs	r4, #0
 800e80e:	e76b      	b.n	800e6e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800e810:	f1bb 0f00 	cmp.w	fp, #0
 800e814:	f43f af5c 	beq.w	800e6d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800e818:	e777      	b.n	800e70a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800e81a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800e81a:	b530      	push	{r4, r5, lr}
 800e81c:	8a44      	ldrh	r4, [r0, #18]
 800e81e:	8ac5      	ldrh	r5, [r0, #22]
 800e820:	82c3      	strh	r3, [r0, #22]
 800e822:	442c      	add	r4, r5
 800e824:	1ae4      	subs	r4, r4, r3
 800e826:	8244      	strh	r4, [r0, #18]
 800e828:	8b03      	ldrh	r3, [r0, #24]
 800e82a:	8a84      	ldrh	r4, [r0, #20]
 800e82c:	4422      	add	r2, r4
 800e82e:	440c      	add	r4, r1
 800e830:	1a59      	subs	r1, r3, r1
 800e832:	8342      	strh	r2, [r0, #26]
 800e834:	8284      	strh	r4, [r0, #20]
 800e836:	8301      	strh	r1, [r0, #24]
 800e838:	bd30      	pop	{r4, r5, pc}

0800e83a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800e83a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e83e:	7a43      	ldrb	r3, [r0, #9]
 800e840:	1eda      	subs	r2, r3, #3
 800e842:	b087      	sub	sp, #28
 800e844:	4604      	mov	r4, r0
 800e846:	b2d2      	uxtb	r2, r2
 800e848:	460f      	mov	r7, r1
 800e84a:	2900      	cmp	r1, #0
 800e84c:	d036      	beq.n	800e8bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800e84e:	2a01      	cmp	r2, #1
 800e850:	d932      	bls.n	800e8b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800e852:	1e58      	subs	r0, r3, #1
 800e854:	f1d0 0b00 	rsbs	fp, r0, #0
 800e858:	eb4b 0b00 	adc.w	fp, fp, r0
 800e85c:	1e99      	subs	r1, r3, #2
 800e85e:	424b      	negs	r3, r1
 800e860:	414b      	adcs	r3, r1
 800e862:	9303      	str	r3, [sp, #12]
 800e864:	2300      	movs	r3, #0
 800e866:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e86a:	2500      	movs	r5, #0
 800e86c:	8265      	strh	r5, [r4, #18]
 800e86e:	82a5      	strh	r5, [r4, #20]
 800e870:	46a9      	mov	r9, r5
 800e872:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800e876:	2300      	movs	r3, #0
 800e878:	9305      	str	r3, [sp, #20]
 800e87a:	8823      	ldrh	r3, [r4, #0]
 800e87c:	2b20      	cmp	r3, #32
 800e87e:	d02b      	beq.n	800e8d8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800e880:	eba3 020a 	sub.w	r2, r3, sl
 800e884:	4256      	negs	r6, r2
 800e886:	4156      	adcs	r6, r2
 800e888:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800e88c:	4293      	cmp	r3, r2
 800e88e:	d004      	beq.n	800e89a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800e890:	4553      	cmp	r3, sl
 800e892:	bf16      	itet	ne
 800e894:	4699      	movne	r9, r3
 800e896:	2601      	moveq	r6, #1
 800e898:	2600      	movne	r6, #0
 800e89a:	ab05      	add	r3, sp, #20
 800e89c:	68e2      	ldr	r2, [r4, #12]
 800e89e:	7a21      	ldrb	r1, [r4, #8]
 800e8a0:	6860      	ldr	r0, [r4, #4]
 800e8a2:	f002 fe35 	bl	8011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800e8a6:	8020      	strh	r0, [r4, #0]
 800e8a8:	b9c8      	cbnz	r0, 800e8de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800e8aa:	8b22      	ldrh	r2, [r4, #24]
 800e8ac:	2300      	movs	r3, #0
 800e8ae:	4611      	mov	r1, r2
 800e8b0:	4620      	mov	r0, r4
 800e8b2:	f7ff ffb2 	bl	800e81a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e8b6:	e066      	b.n	800e986 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800e8b8:	468b      	mov	fp, r1
 800e8ba:	e7cf      	b.n	800e85c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800e8bc:	3b01      	subs	r3, #1
 800e8be:	2a01      	cmp	r2, #1
 800e8c0:	bf8c      	ite	hi
 800e8c2:	2200      	movhi	r2, #0
 800e8c4:	2201      	movls	r2, #1
 800e8c6:	2b01      	cmp	r3, #1
 800e8c8:	bf8c      	ite	hi
 800e8ca:	2300      	movhi	r3, #0
 800e8cc:	2301      	movls	r3, #1
 800e8ce:	9202      	str	r2, [sp, #8]
 800e8d0:	9301      	str	r3, [sp, #4]
 800e8d2:	9103      	str	r1, [sp, #12]
 800e8d4:	468b      	mov	fp, r1
 800e8d6:	e7c8      	b.n	800e86a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800e8d8:	4699      	mov	r9, r3
 800e8da:	2601      	movs	r6, #1
 800e8dc:	e7dd      	b.n	800e89a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800e8de:	8ae3      	ldrh	r3, [r4, #22]
 800e8e0:	280a      	cmp	r0, #10
 800e8e2:	f103 0301 	add.w	r3, r3, #1
 800e8e6:	82e3      	strh	r3, [r4, #22]
 800e8e8:	d0df      	beq.n	800e8aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800e8ea:	9a05      	ldr	r2, [sp, #20]
 800e8ec:	bb42      	cbnz	r2, 800e940 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800e8ee:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800e8f2:	4298      	cmp	r0, r3
 800e8f4:	d001      	beq.n	800e8fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800e8f6:	4550      	cmp	r0, sl
 800e8f8:	d1bd      	bne.n	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e8fa:	8823      	ldrh	r3, [r4, #0]
 800e8fc:	8b21      	ldrh	r1, [r4, #24]
 800e8fe:	2b20      	cmp	r3, #32
 800e900:	d001      	beq.n	800e906 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800e902:	4553      	cmp	r3, sl
 800e904:	d131      	bne.n	800e96a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800e906:	2e00      	cmp	r6, #0
 800e908:	bf0a      	itet	eq
 800e90a:	460d      	moveq	r5, r1
 800e90c:	4630      	movne	r0, r6
 800e90e:	2001      	moveq	r0, #1
 800e910:	440a      	add	r2, r1
 800e912:	8aa3      	ldrh	r3, [r4, #20]
 800e914:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800e918:	b292      	uxth	r2, r2
 800e91a:	8322      	strh	r2, [r4, #24]
 800e91c:	4413      	add	r3, r2
 800e91e:	2f00      	cmp	r7, #0
 800e920:	d03a      	beq.n	800e998 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800e922:	f1bb 0f00 	cmp.w	fp, #0
 800e926:	d102      	bne.n	800e92e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800e928:	9903      	ldr	r1, [sp, #12]
 800e92a:	b301      	cbz	r1, 800e96e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800e92c:	b1f8      	cbz	r0, 800e96e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800e92e:	8ba1      	ldrh	r1, [r4, #28]
 800e930:	4419      	add	r1, r3
 800e932:	458c      	cmp	ip, r1
 800e934:	da2a      	bge.n	800e98c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800e936:	8a61      	ldrh	r1, [r4, #18]
 800e938:	b341      	cbz	r1, 800e98c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800e93a:	4563      	cmp	r3, ip
 800e93c:	dd9b      	ble.n	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e93e:	e01c      	b.n	800e97a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800e940:	8893      	ldrh	r3, [r2, #4]
 800e942:	8023      	strh	r3, [r4, #0]
 800e944:	f892 800d 	ldrb.w	r8, [r2, #13]
 800e948:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800e94c:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800e950:	f892 800a 	ldrb.w	r8, [r2, #10]
 800e954:	ea48 0800 	orr.w	r8, r8, r0
 800e958:	68e0      	ldr	r0, [r4, #12]
 800e95a:	6803      	ldr	r3, [r0, #0]
 800e95c:	4649      	mov	r1, r9
 800e95e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e960:	4798      	blx	r3
 800e962:	eb08 0200 	add.w	r2, r8, r0
 800e966:	b292      	uxth	r2, r2
 800e968:	e7c7      	b.n	800e8fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800e96a:	2000      	movs	r0, #0
 800e96c:	e7d0      	b.n	800e910 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800e96e:	4563      	cmp	r3, ip
 800e970:	dd81      	ble.n	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e972:	8a63      	ldrh	r3, [r4, #18]
 800e974:	2b00      	cmp	r3, #0
 800e976:	f43f af7e 	beq.w	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e97a:	2301      	movs	r3, #1
 800e97c:	77a3      	strb	r3, [r4, #30]
 800e97e:	8ba2      	ldrh	r2, [r4, #28]
 800e980:	8b63      	ldrh	r3, [r4, #26]
 800e982:	4413      	add	r3, r2
 800e984:	8363      	strh	r3, [r4, #26]
 800e986:	b007      	add	sp, #28
 800e988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e98c:	2300      	movs	r3, #0
 800e98e:	4611      	mov	r1, r2
 800e990:	4620      	mov	r0, r4
 800e992:	f7ff ff42 	bl	800e81a <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800e996:	e76e      	b.n	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e998:	4563      	cmp	r3, ip
 800e99a:	dd14      	ble.n	800e9c6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800e99c:	9b02      	ldr	r3, [sp, #8]
 800e99e:	b113      	cbz	r3, 800e9a6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800e9a0:	2301      	movs	r3, #1
 800e9a2:	460a      	mov	r2, r1
 800e9a4:	e783      	b.n	800e8ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800e9a6:	9b01      	ldr	r3, [sp, #4]
 800e9a8:	2b00      	cmp	r3, #0
 800e9aa:	f43f af64 	beq.w	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e9ae:	2800      	cmp	r0, #0
 800e9b0:	f47f af61 	bne.w	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e9b4:	b116      	cbz	r6, 800e9bc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800e9b6:	2301      	movs	r3, #1
 800e9b8:	462a      	mov	r2, r5
 800e9ba:	e779      	b.n	800e8b0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800e9bc:	8a63      	ldrh	r3, [r4, #18]
 800e9be:	2b00      	cmp	r3, #0
 800e9c0:	f43f af59 	beq.w	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e9c4:	e7df      	b.n	800e986 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800e9c6:	2800      	cmp	r0, #0
 800e9c8:	f47f af55 	bne.w	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e9cc:	2e00      	cmp	r6, #0
 800e9ce:	f43f af52 	beq.w	800e876 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800e9d2:	2301      	movs	r3, #1
 800e9d4:	462a      	mov	r2, r5
 800e9d6:	e7db      	b.n	800e990 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800e9d8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800e9d8:	b530      	push	{r4, r5, lr}
 800e9da:	4605      	mov	r5, r0
 800e9dc:	b08b      	sub	sp, #44	; 0x2c
 800e9de:	b191      	cbz	r1, 800ea06 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800e9e0:	e9cd 3100 	strd	r3, r1, [sp]
 800e9e4:	4613      	mov	r3, r2
 800e9e6:	4601      	mov	r1, r0
 800e9e8:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800e9ec:	a802      	add	r0, sp, #8
 800e9ee:	f7ff fd0d 	bl	800e40c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800e9f2:	2401      	movs	r4, #1
 800e9f4:	2100      	movs	r1, #0
 800e9f6:	a802      	add	r0, sp, #8
 800e9f8:	f7ff ff1f 	bl	800e83a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e9fc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ea00:	b163      	cbz	r3, 800ea1c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800ea02:	3401      	adds	r4, #1
 800ea04:	e7f6      	b.n	800e9f4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800ea06:	f002 fe7b 	bl	8011700 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ea0a:	2401      	movs	r4, #1
 800ea0c:	280a      	cmp	r0, #10
 800ea0e:	4628      	mov	r0, r5
 800ea10:	bf08      	it	eq
 800ea12:	3401      	addeq	r4, #1
 800ea14:	f002 fe74 	bl	8011700 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ea18:	2800      	cmp	r0, #0
 800ea1a:	d1f7      	bne.n	800ea0c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800ea1c:	b2a0      	uxth	r0, r4
 800ea1e:	b00b      	add	sp, #44	; 0x2c
 800ea20:	bd30      	pop	{r4, r5, pc}

0800ea22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800ea22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea26:	b0db      	sub	sp, #364	; 0x16c
 800ea28:	4689      	mov	r9, r1
 800ea2a:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800ea2e:	900a      	str	r0, [sp, #40]	; 0x28
 800ea30:	461c      	mov	r4, r3
 800ea32:	f1ba 0f00 	cmp.w	sl, #0
 800ea36:	f000 80a5 	beq.w	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ea3a:	681b      	ldr	r3, [r3, #0]
 800ea3c:	2b00      	cmp	r3, #0
 800ea3e:	f000 80a1 	beq.w	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ea42:	7ba3      	ldrb	r3, [r4, #14]
 800ea44:	2b00      	cmp	r3, #0
 800ea46:	f000 809d 	beq.w	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ea4a:	6810      	ldr	r0, [r2, #0]
 800ea4c:	6851      	ldr	r1, [r2, #4]
 800ea4e:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800ea52:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800ea56:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800ea5a:	4643      	mov	r3, r8
 800ea5c:	c303      	stmia	r3!, {r0, r1}
 800ea5e:	2500      	movs	r5, #0
 800ea60:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800ea64:	79a2      	ldrb	r2, [r4, #6]
 800ea66:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ea6a:	a90e      	add	r1, sp, #56	; 0x38
 800ea6c:	4640      	mov	r0, r8
 800ea6e:	950e      	str	r5, [sp, #56]	; 0x38
 800ea70:	f7ff fd42 	bl	800e4f8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ea74:	a90e      	add	r1, sp, #56	; 0x38
 800ea76:	4608      	mov	r0, r1
 800ea78:	79a2      	ldrb	r2, [r4, #6]
 800ea7a:	af18      	add	r7, sp, #96	; 0x60
 800ea7c:	f7ff fd3c 	bl	800e4f8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800ea80:	4638      	mov	r0, r7
 800ea82:	f002 fa07 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 800ea86:	6820      	ldr	r0, [r4, #0]
 800ea88:	6803      	ldr	r3, [r0, #0]
 800ea8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ea8c:	4798      	blx	r3
 800ea8e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ea90:	4603      	mov	r3, r0
 800ea92:	4651      	mov	r1, sl
 800ea94:	4638      	mov	r0, r7
 800ea96:	f002 fa42 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800ea9a:	6820      	ldr	r0, [r4, #0]
 800ea9c:	7923      	ldrb	r3, [r4, #4]
 800ea9e:	9308      	str	r3, [sp, #32]
 800eaa0:	6803      	ldr	r3, [r0, #0]
 800eaa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800eaa4:	4798      	blx	r3
 800eaa6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800eaaa:	181e      	adds	r6, r3, r0
 800eaac:	42ae      	cmp	r6, r5
 800eaae:	dd06      	ble.n	800eabe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800eab0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800eab4:	4282      	cmp	r2, r0
 800eab6:	bfa4      	itt	ge
 800eab8:	189d      	addge	r5, r3, r2
 800eaba:	fb95 f5f6 	sdivge	r5, r5, r6
 800eabe:	a82e      	add	r0, sp, #184	; 0xb8
 800eac0:	f002 f9e8 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 800eac4:	7c23      	ldrb	r3, [r4, #16]
 800eac6:	b14b      	cbz	r3, 800eadc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800eac8:	6820      	ldr	r0, [r4, #0]
 800eaca:	6803      	ldr	r3, [r0, #0]
 800eacc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eace:	4798      	blx	r3
 800ead0:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800ead2:	4603      	mov	r3, r0
 800ead4:	4651      	mov	r1, sl
 800ead6:	a82e      	add	r0, sp, #184	; 0xb8
 800ead8:	f002 fa21 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800eadc:	7c21      	ldrb	r1, [r4, #16]
 800eade:	9101      	str	r1, [sp, #4]
 800eae0:	6821      	ldr	r1, [r4, #0]
 800eae2:	7963      	ldrb	r3, [r4, #5]
 800eae4:	9100      	str	r1, [sp, #0]
 800eae6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800eaea:	a92e      	add	r1, sp, #184	; 0xb8
 800eaec:	a810      	add	r0, sp, #64	; 0x40
 800eaee:	f7ff fc8d 	bl	800e40c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800eaf2:	7c23      	ldrb	r3, [r4, #16]
 800eaf4:	b9bb      	cbnz	r3, 800eb26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800eaf6:	fa1f fa86 	uxth.w	sl, r6
 800eafa:	2d00      	cmp	r5, #0
 800eafc:	dd45      	ble.n	800eb8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800eafe:	4638      	mov	r0, r7
 800eb00:	f002 fdfe 	bl	8011700 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eb04:	2800      	cmp	r0, #0
 800eb06:	d03d      	beq.n	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800eb08:	280a      	cmp	r0, #10
 800eb0a:	d1f6      	bne.n	800eafa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800eb0c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800eb10:	4453      	add	r3, sl
 800eb12:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800eb16:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800eb1a:	eba3 030a 	sub.w	r3, r3, sl
 800eb1e:	3d01      	subs	r5, #1
 800eb20:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800eb24:	e7e9      	b.n	800eafa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800eb26:	0073      	lsls	r3, r6, #1
 800eb28:	9309      	str	r3, [sp, #36]	; 0x24
 800eb2a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800eb2e:	fa1f fa86 	uxth.w	sl, r6
 800eb32:	2d00      	cmp	r5, #0
 800eb34:	dd29      	ble.n	800eb8a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800eb36:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800eb3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800eb3c:	428b      	cmp	r3, r1
 800eb3e:	bfd4      	ite	le
 800eb40:	2100      	movle	r1, #0
 800eb42:	2101      	movgt	r1, #1
 800eb44:	a810      	add	r0, sp, #64	; 0x40
 800eb46:	f7ff fe78 	bl	800e83a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800eb4a:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800eb4e:	3b01      	subs	r3, #1
 800eb50:	b29b      	uxth	r3, r3
 800eb52:	455b      	cmp	r3, fp
 800eb54:	930b      	str	r3, [sp, #44]	; 0x2c
 800eb56:	d005      	beq.n	800eb64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800eb58:	7961      	ldrb	r1, [r4, #5]
 800eb5a:	4638      	mov	r0, r7
 800eb5c:	f7f5 fa96 	bl	800408c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800eb60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eb62:	e7f4      	b.n	800eb4e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800eb64:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800eb68:	4453      	add	r3, sl
 800eb6a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800eb6e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800eb72:	eba3 030a 	sub.w	r3, r3, sl
 800eb76:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800eb7a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800eb7e:	3d01      	subs	r5, #1
 800eb80:	2b00      	cmp	r3, #0
 800eb82:	d1d6      	bne.n	800eb32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800eb84:	b05b      	add	sp, #364	; 0x16c
 800eb86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eb8a:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800eb8e:	ad44      	add	r5, sp, #272	; 0x110
 800eb90:	f04f 0b00 	mov.w	fp, #0
 800eb94:	7c23      	ldrb	r3, [r4, #16]
 800eb96:	2b00      	cmp	r3, #0
 800eb98:	d067      	beq.n	800ec6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800eb9a:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800eb9e:	458a      	cmp	sl, r1
 800eba0:	bfd4      	ite	le
 800eba2:	2100      	movle	r1, #0
 800eba4:	2101      	movgt	r1, #1
 800eba6:	a810      	add	r0, sp, #64	; 0x40
 800eba8:	f7ff fe47 	bl	800e83a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ebac:	9b08      	ldr	r3, [sp, #32]
 800ebae:	2b00      	cmp	r3, #0
 800ebb0:	d056      	beq.n	800ec60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800ebb2:	7c23      	ldrb	r3, [r4, #16]
 800ebb4:	9309      	str	r3, [sp, #36]	; 0x24
 800ebb6:	2258      	movs	r2, #88	; 0x58
 800ebb8:	4639      	mov	r1, r7
 800ebba:	4628      	mov	r0, r5
 800ebbc:	f010 fc98 	bl	801f4f0 <memcpy>
 800ebc0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ebc2:	2b00      	cmp	r3, #0
 800ebc4:	d059      	beq.n	800ec7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800ebc6:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800ebca:	7922      	ldrb	r2, [r4, #4]
 800ebcc:	2a01      	cmp	r2, #1
 800ebce:	d13d      	bne.n	800ec4c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800ebd0:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800ebd4:	1ac0      	subs	r0, r0, r3
 800ebd6:	2302      	movs	r3, #2
 800ebd8:	fb90 f0f3 	sdiv	r0, r0, r3
 800ebdc:	b200      	sxth	r0, r0
 800ebde:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ebe2:	4418      	add	r0, r3
 800ebe4:	7c23      	ldrb	r3, [r4, #16]
 800ebe6:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800ebea:	2b00      	cmp	r3, #0
 800ebec:	d03a      	beq.n	800ec64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800ebee:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800ebf2:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800ebf6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800ebfa:	9500      	str	r5, [sp, #0]
 800ebfc:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800ec00:	e9cd b703 	strd	fp, r7, [sp, #12]
 800ec04:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800ec08:	464a      	mov	r2, r9
 800ec0a:	2100      	movs	r1, #0
 800ec0c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800ec0e:	f7ff fca4 	bl	800e55a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800ec12:	2800      	cmp	r0, #0
 800ec14:	d1b6      	bne.n	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ec16:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800ec1a:	b2b2      	uxth	r2, r6
 800ec1c:	4611      	mov	r1, r2
 800ec1e:	4413      	add	r3, r2
 800ec20:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800ec24:	1a52      	subs	r2, r2, r1
 800ec26:	7c21      	ldrb	r1, [r4, #16]
 800ec28:	b21b      	sxth	r3, r3
 800ec2a:	b212      	sxth	r2, r2
 800ec2c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800ec30:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800ec34:	b109      	cbz	r1, 800ec3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800ec36:	42b2      	cmp	r2, r6
 800ec38:	dba4      	blt.n	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ec3a:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800ec3e:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800ec42:	440a      	add	r2, r1
 800ec44:	b212      	sxth	r2, r2
 800ec46:	4293      	cmp	r3, r2
 800ec48:	dda4      	ble.n	800eb94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800ec4a:	e79b      	b.n	800eb84 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800ec4c:	2a02      	cmp	r2, #2
 800ec4e:	d105      	bne.n	800ec5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800ec50:	7be2      	ldrb	r2, [r4, #15]
 800ec52:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800ec56:	1a80      	subs	r0, r0, r2
 800ec58:	1ac0      	subs	r0, r0, r3
 800ec5a:	e7bf      	b.n	800ebdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800ec5c:	2000      	movs	r0, #0
 800ec5e:	e7be      	b.n	800ebde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800ec60:	7be0      	ldrb	r0, [r4, #15]
 800ec62:	e7bc      	b.n	800ebde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800ec64:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ec68:	e7c3      	b.n	800ebf2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800ec6a:	9b08      	ldr	r3, [sp, #32]
 800ec6c:	2b00      	cmp	r3, #0
 800ec6e:	d0f7      	beq.n	800ec60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800ec70:	2258      	movs	r2, #88	; 0x58
 800ec72:	4639      	mov	r1, r7
 800ec74:	4628      	mov	r0, r5
 800ec76:	f010 fc3b 	bl	801f4f0 <memcpy>
 800ec7a:	2300      	movs	r3, #0
 800ec7c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ec80:	6821      	ldr	r1, [r4, #0]
 800ec82:	4628      	mov	r0, r5
 800ec84:	f7ff fbfc 	bl	800e480 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800ec88:	b203      	sxth	r3, r0
 800ec8a:	e79e      	b.n	800ebca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800ec8c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800ec8c:	b510      	push	{r4, lr}
 800ec8e:	2b02      	cmp	r3, #2
 800ec90:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ec94:	d00b      	beq.n	800ecae <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800ec96:	2b03      	cmp	r3, #3
 800ec98:	d00e      	beq.n	800ecb8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800ec9a:	2b01      	cmp	r3, #1
 800ec9c:	d001      	beq.n	800eca2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800ec9e:	1860      	adds	r0, r4, r1
 800eca0:	bd10      	pop	{r4, pc}
 800eca2:	8880      	ldrh	r0, [r0, #4]
 800eca4:	4420      	add	r0, r4
 800eca6:	b200      	sxth	r0, r0
 800eca8:	1a80      	subs	r0, r0, r2
 800ecaa:	3801      	subs	r0, #1
 800ecac:	e7f8      	b.n	800eca0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800ecae:	8880      	ldrh	r0, [r0, #4]
 800ecb0:	4420      	add	r0, r4
 800ecb2:	b200      	sxth	r0, r0
 800ecb4:	1a40      	subs	r0, r0, r1
 800ecb6:	e7f8      	b.n	800ecaa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800ecb8:	18a0      	adds	r0, r4, r2
 800ecba:	e7f1      	b.n	800eca0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800ecbc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800ecbc:	b510      	push	{r4, lr}
 800ecbe:	2b02      	cmp	r3, #2
 800ecc0:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800ecc4:	d006      	beq.n	800ecd4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800ecc6:	2b03      	cmp	r3, #3
 800ecc8:	d00a      	beq.n	800ece0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800ecca:	2b01      	cmp	r3, #1
 800eccc:	bf14      	ite	ne
 800ecce:	18a0      	addne	r0, r4, r2
 800ecd0:	1860      	addeq	r0, r4, r1
 800ecd2:	bd10      	pop	{r4, pc}
 800ecd4:	88c0      	ldrh	r0, [r0, #6]
 800ecd6:	4420      	add	r0, r4
 800ecd8:	b200      	sxth	r0, r0
 800ecda:	1a80      	subs	r0, r0, r2
 800ecdc:	3801      	subs	r0, #1
 800ecde:	e7f8      	b.n	800ecd2 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800ece0:	88c0      	ldrh	r0, [r0, #6]
 800ece2:	4420      	add	r0, r4
 800ece4:	b200      	sxth	r0, r0
 800ece6:	1a40      	subs	r0, r0, r1
 800ece8:	e7f8      	b.n	800ecdc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800ecec <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800ecec:	4b01      	ldr	r3, [pc, #4]	; (800ecf4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800ecee:	2200      	movs	r2, #0
 800ecf0:	601a      	str	r2, [r3, #0]
 800ecf2:	4770      	bx	lr
 800ecf4:	2000d434 	.word	0x2000d434

0800ecf8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800ecf8:	4603      	mov	r3, r0
 800ecfa:	b1c8      	cbz	r0, 800ed30 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800ecfc:	0c02      	lsrs	r2, r0, #16
 800ecfe:	0412      	lsls	r2, r2, #16
 800ed00:	b9a2      	cbnz	r2, 800ed2c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800ed02:	0403      	lsls	r3, r0, #16
 800ed04:	2010      	movs	r0, #16
 800ed06:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800ed0a:	bf04      	itt	eq
 800ed0c:	021b      	lsleq	r3, r3, #8
 800ed0e:	3008      	addeq	r0, #8
 800ed10:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800ed14:	bf04      	itt	eq
 800ed16:	011b      	lsleq	r3, r3, #4
 800ed18:	3004      	addeq	r0, #4
 800ed1a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800ed1e:	bf04      	itt	eq
 800ed20:	009b      	lsleq	r3, r3, #2
 800ed22:	3002      	addeq	r0, #2
 800ed24:	2b00      	cmp	r3, #0
 800ed26:	db04      	blt.n	800ed32 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800ed28:	3001      	adds	r0, #1
 800ed2a:	4770      	bx	lr
 800ed2c:	2000      	movs	r0, #0
 800ed2e:	e7ea      	b.n	800ed06 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800ed30:	2020      	movs	r0, #32
 800ed32:	4770      	bx	lr

0800ed34 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800ed34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed38:	b087      	sub	sp, #28
 800ed3a:	4681      	mov	r9, r0
 800ed3c:	4698      	mov	r8, r3
 800ed3e:	4610      	mov	r0, r2
 800ed40:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800ed44:	460d      	mov	r5, r1
 800ed46:	b981      	cbnz	r1, 800ed6a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800ed48:	b14b      	cbz	r3, 800ed5e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800ed4a:	460b      	mov	r3, r1
 800ed4c:	e9cd 4700 	strd	r4, r7, [sp]
 800ed50:	464a      	mov	r2, r9
 800ed52:	4641      	mov	r1, r8
 800ed54:	f7ff ffee 	bl	800ed34 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ed58:	b007      	add	sp, #28
 800ed5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed5e:	f04f 33ff 	mov.w	r3, #4294967295
 800ed62:	603b      	str	r3, [r7, #0]
 800ed64:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800ed68:	e7f6      	b.n	800ed58 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800ed6a:	fa32 fa01 	lsrs.w	sl, r2, r1
 800ed6e:	d107      	bne.n	800ed80 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800ed70:	fb09 f602 	mul.w	r6, r9, r2
 800ed74:	fbb6 f0f4 	udiv	r0, r6, r4
 800ed78:	fb04 6610 	mls	r6, r4, r0, r6
 800ed7c:	603e      	str	r6, [r7, #0]
 800ed7e:	e7eb      	b.n	800ed58 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800ed80:	2601      	movs	r6, #1
 800ed82:	408e      	lsls	r6, r1
 800ed84:	3e01      	subs	r6, #1
 800ed86:	4016      	ands	r6, r2
 800ed88:	fa09 fb01 	lsl.w	fp, r9, r1
 800ed8c:	4630      	mov	r0, r6
 800ed8e:	fbbb f3f4 	udiv	r3, fp, r4
 800ed92:	9302      	str	r3, [sp, #8]
 800ed94:	fb0a f303 	mul.w	r3, sl, r3
 800ed98:	9303      	str	r3, [sp, #12]
 800ed9a:	f7ff ffad 	bl	800ecf8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ed9e:	464a      	mov	r2, r9
 800eda0:	460b      	mov	r3, r1
 800eda2:	e9cd 4700 	strd	r4, r7, [sp]
 800eda6:	4601      	mov	r1, r0
 800eda8:	4630      	mov	r0, r6
 800edaa:	f7ff ffc3 	bl	800ed34 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800edae:	9b02      	ldr	r3, [sp, #8]
 800edb0:	fb04 bb13 	mls	fp, r4, r3, fp
 800edb4:	4606      	mov	r6, r0
 800edb6:	4658      	mov	r0, fp
 800edb8:	eb05 0108 	add.w	r1, r5, r8
 800edbc:	f7ff ff9c 	bl	800ecf8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800edc0:	ab05      	add	r3, sp, #20
 800edc2:	e9cd 4300 	strd	r4, r3, [sp]
 800edc6:	465a      	mov	r2, fp
 800edc8:	4603      	mov	r3, r0
 800edca:	4650      	mov	r0, sl
 800edcc:	f7ff ffb2 	bl	800ed34 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800edd0:	6839      	ldr	r1, [r7, #0]
 800edd2:	9a05      	ldr	r2, [sp, #20]
 800edd4:	9b03      	ldr	r3, [sp, #12]
 800edd6:	4411      	add	r1, r2
 800edd8:	fbb1 f2f4 	udiv	r2, r1, r4
 800eddc:	18d3      	adds	r3, r2, r3
 800edde:	441e      	add	r6, r3
 800ede0:	fb04 1412 	mls	r4, r4, r2, r1
 800ede4:	4430      	add	r0, r6
 800ede6:	603c      	str	r4, [r7, #0]
 800ede8:	e7b6      	b.n	800ed58 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800edea <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800edea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800edee:	b085      	sub	sp, #20
 800edf0:	f1b0 0900 	subs.w	r9, r0, #0
 800edf4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800edf6:	461d      	mov	r5, r3
 800edf8:	bfbf      	itttt	lt
 800edfa:	6823      	ldrlt	r3, [r4, #0]
 800edfc:	425b      	neglt	r3, r3
 800edfe:	f1c9 0900 	rsblt	r9, r9, #0
 800ee02:	6023      	strlt	r3, [r4, #0]
 800ee04:	bfb4      	ite	lt
 800ee06:	f04f 36ff 	movlt.w	r6, #4294967295
 800ee0a:	2601      	movge	r6, #1
 800ee0c:	2a00      	cmp	r2, #0
 800ee0e:	4617      	mov	r7, r2
 800ee10:	da04      	bge.n	800ee1c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800ee12:	6823      	ldr	r3, [r4, #0]
 800ee14:	425b      	negs	r3, r3
 800ee16:	4257      	negs	r7, r2
 800ee18:	4276      	negs	r6, r6
 800ee1a:	6023      	str	r3, [r4, #0]
 800ee1c:	2d00      	cmp	r5, #0
 800ee1e:	4638      	mov	r0, r7
 800ee20:	bfba      	itte	lt
 800ee22:	426d      	neglt	r5, r5
 800ee24:	f04f 38ff 	movlt.w	r8, #4294967295
 800ee28:	f04f 0801 	movge.w	r8, #1
 800ee2c:	f7ff ff64 	bl	800ecf8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800ee30:	ab03      	add	r3, sp, #12
 800ee32:	e9cd 5300 	strd	r5, r3, [sp]
 800ee36:	463a      	mov	r2, r7
 800ee38:	4603      	mov	r3, r0
 800ee3a:	4648      	mov	r0, r9
 800ee3c:	f7ff ff7a 	bl	800ed34 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800ee40:	6823      	ldr	r3, [r4, #0]
 800ee42:	9a03      	ldr	r2, [sp, #12]
 800ee44:	4546      	cmp	r6, r8
 800ee46:	441a      	add	r2, r3
 800ee48:	fb92 f3f5 	sdiv	r3, r2, r5
 800ee4c:	4418      	add	r0, r3
 800ee4e:	bf18      	it	ne
 800ee50:	4240      	negne	r0, r0
 800ee52:	fb05 2313 	mls	r3, r5, r3, r2
 800ee56:	1c72      	adds	r2, r6, #1
 800ee58:	6023      	str	r3, [r4, #0]
 800ee5a:	d105      	bne.n	800ee68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800ee5c:	2b00      	cmp	r3, #0
 800ee5e:	f1c3 0200 	rsb	r2, r3, #0
 800ee62:	db0b      	blt.n	800ee7c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800ee64:	6022      	str	r2, [r4, #0]
 800ee66:	e006      	b.n	800ee76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ee68:	2e01      	cmp	r6, #1
 800ee6a:	d104      	bne.n	800ee76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ee6c:	2b00      	cmp	r3, #0
 800ee6e:	da02      	bge.n	800ee76 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800ee70:	442b      	add	r3, r5
 800ee72:	3801      	subs	r0, #1
 800ee74:	6023      	str	r3, [r4, #0]
 800ee76:	b005      	add	sp, #20
 800ee78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ee7c:	3801      	subs	r0, #1
 800ee7e:	1b52      	subs	r2, r2, r5
 800ee80:	e7f0      	b.n	800ee64 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800ee84 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800ee84:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800ee88:	4c1c      	ldr	r4, [pc, #112]	; (800eefc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800ee8a:	6807      	ldr	r7, [r0, #0]
 800ee8c:	69a3      	ldr	r3, [r4, #24]
 800ee8e:	4605      	mov	r5, r0
 800ee90:	b92b      	cbnz	r3, 800ee9e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800ee92:	6840      	ldr	r0, [r0, #4]
 800ee94:	e9c5 7000 	strd	r7, r0, [r5]
 800ee98:	b004      	add	sp, #16
 800ee9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ee9e:	68a2      	ldr	r2, [r4, #8]
 800eea0:	6820      	ldr	r0, [r4, #0]
 800eea2:	ae04      	add	r6, sp, #16
 800eea4:	f04f 0802 	mov.w	r8, #2
 800eea8:	fb93 f1f8 	sdiv	r1, r3, r8
 800eeac:	440a      	add	r2, r1
 800eeae:	f846 2d04 	str.w	r2, [r6, #-4]!
 800eeb2:	69e1      	ldr	r1, [r4, #28]
 800eeb4:	9600      	str	r6, [sp, #0]
 800eeb6:	463a      	mov	r2, r7
 800eeb8:	f7ff ff97 	bl	800edea <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800eebc:	69a3      	ldr	r3, [r4, #24]
 800eebe:	686a      	ldr	r2, [r5, #4]
 800eec0:	6a21      	ldr	r1, [r4, #32]
 800eec2:	9600      	str	r6, [sp, #0]
 800eec4:	4607      	mov	r7, r0
 800eec6:	6860      	ldr	r0, [r4, #4]
 800eec8:	f7ff ff8f 	bl	800edea <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800eecc:	6962      	ldr	r2, [r4, #20]
 800eece:	69a3      	ldr	r3, [r4, #24]
 800eed0:	fb93 f8f8 	sdiv	r8, r3, r8
 800eed4:	4442      	add	r2, r8
 800eed6:	9203      	str	r2, [sp, #12]
 800eed8:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800eeda:	682a      	ldr	r2, [r5, #0]
 800eedc:	9600      	str	r6, [sp, #0]
 800eede:	4407      	add	r7, r0
 800eee0:	68e0      	ldr	r0, [r4, #12]
 800eee2:	f7ff ff82 	bl	800edea <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800eee6:	9600      	str	r6, [sp, #0]
 800eee8:	4680      	mov	r8, r0
 800eeea:	69a3      	ldr	r3, [r4, #24]
 800eeec:	686a      	ldr	r2, [r5, #4]
 800eeee:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800eef0:	6920      	ldr	r0, [r4, #16]
 800eef2:	f7ff ff7a 	bl	800edea <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800eef6:	4440      	add	r0, r8
 800eef8:	e7cc      	b.n	800ee94 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800eefa:	bf00      	nop
 800eefc:	2000d438 	.word	0x2000d438

0800ef00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ef00:	b510      	push	{r4, lr}
 800ef02:	4b07      	ldr	r3, [pc, #28]	; (800ef20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ef04:	781b      	ldrb	r3, [r3, #0]
 800ef06:	2b01      	cmp	r3, #1
 800ef08:	d108      	bne.n	800ef1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ef0a:	4b06      	ldr	r3, [pc, #24]	; (800ef24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ef0c:	880c      	ldrh	r4, [r1, #0]
 800ef0e:	881b      	ldrh	r3, [r3, #0]
 800ef10:	f9b0 2000 	ldrsh.w	r2, [r0]
 800ef14:	3b01      	subs	r3, #1
 800ef16:	1b1b      	subs	r3, r3, r4
 800ef18:	8003      	strh	r3, [r0, #0]
 800ef1a:	800a      	strh	r2, [r1, #0]
 800ef1c:	bd10      	pop	{r4, pc}
 800ef1e:	bf00      	nop
 800ef20:	2000d404 	.word	0x2000d404
 800ef24:	2000d408 	.word	0x2000d408

0800ef28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800ef28:	b510      	push	{r4, lr}
 800ef2a:	4b0a      	ldr	r3, [pc, #40]	; (800ef54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800ef2c:	781b      	ldrb	r3, [r3, #0]
 800ef2e:	2b01      	cmp	r3, #1
 800ef30:	d10e      	bne.n	800ef50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800ef32:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ef36:	8843      	ldrh	r3, [r0, #2]
 800ef38:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ef3c:	8044      	strh	r4, [r0, #2]
 800ef3e:	18ca      	adds	r2, r1, r3
 800ef40:	4b05      	ldr	r3, [pc, #20]	; (800ef58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800ef42:	881b      	ldrh	r3, [r3, #0]
 800ef44:	1a9b      	subs	r3, r3, r2
 800ef46:	8003      	strh	r3, [r0, #0]
 800ef48:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ef4c:	80c3      	strh	r3, [r0, #6]
 800ef4e:	8081      	strh	r1, [r0, #4]
 800ef50:	bd10      	pop	{r4, pc}
 800ef52:	bf00      	nop
 800ef54:	2000d404 	.word	0x2000d404
 800ef58:	2000d400 	.word	0x2000d400

0800ef5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800ef5c:	b510      	push	{r4, lr}
 800ef5e:	4b07      	ldr	r3, [pc, #28]	; (800ef7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800ef60:	781b      	ldrb	r3, [r3, #0]
 800ef62:	2b01      	cmp	r3, #1
 800ef64:	d108      	bne.n	800ef78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800ef66:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ef6a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800ef6e:	8003      	strh	r3, [r0, #0]
 800ef70:	8893      	ldrh	r3, [r2, #4]
 800ef72:	3b01      	subs	r3, #1
 800ef74:	1b1b      	subs	r3, r3, r4
 800ef76:	800b      	strh	r3, [r1, #0]
 800ef78:	bd10      	pop	{r4, pc}
 800ef7a:	bf00      	nop
 800ef7c:	2000d404 	.word	0x2000d404

0800ef80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800ef80:	b513      	push	{r0, r1, r4, lr}
 800ef82:	4b08      	ldr	r3, [pc, #32]	; (800efa4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800ef84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ef88:	4b07      	ldr	r3, [pc, #28]	; (800efa8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800ef8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ef8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ef92:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ef96:	2400      	movs	r4, #0
 800ef98:	466a      	mov	r2, sp
 800ef9a:	9400      	str	r4, [sp, #0]
 800ef9c:	f7ff ffde 	bl	800ef5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800efa0:	b002      	add	sp, #8
 800efa2:	bd10      	pop	{r4, pc}
 800efa4:	2000d400 	.word	0x2000d400
 800efa8:	2000d402 	.word	0x2000d402

0800efac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800efac:	4b0b      	ldr	r3, [pc, #44]	; (800efdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800efae:	781b      	ldrb	r3, [r3, #0]
 800efb0:	2b01      	cmp	r3, #1
 800efb2:	d111      	bne.n	800efd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800efb4:	680b      	ldr	r3, [r1, #0]
 800efb6:	ed90 7a00 	vldr	s14, [r0]
 800efba:	6003      	str	r3, [r0, #0]
 800efbc:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800efc0:	eddf 6a07 	vldr	s13, [pc, #28]	; 800efe0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800efc4:	ee07 3a90 	vmov	s15, r3
 800efc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800efcc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800efd0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800efd4:	edc1 7a00 	vstr	s15, [r1]
 800efd8:	4770      	bx	lr
 800efda:	bf00      	nop
 800efdc:	2000d404 	.word	0x2000d404
 800efe0:	38d1b717 	.word	0x38d1b717

0800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800efe4:	b510      	push	{r4, lr}
 800efe6:	4b0a      	ldr	r3, [pc, #40]	; (800f010 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800efe8:	781b      	ldrb	r3, [r3, #0]
 800efea:	2b01      	cmp	r3, #1
 800efec:	460a      	mov	r2, r1
 800efee:	d10d      	bne.n	800f00c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800eff0:	8881      	ldrh	r1, [r0, #4]
 800eff2:	8803      	ldrh	r3, [r0, #0]
 800eff4:	440b      	add	r3, r1
 800eff6:	4601      	mov	r1, r0
 800eff8:	3b01      	subs	r3, #1
 800effa:	f821 3b02 	strh.w	r3, [r1], #2
 800effe:	f7ff ffad 	bl	800ef5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800f002:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f006:	88c2      	ldrh	r2, [r0, #6]
 800f008:	8082      	strh	r2, [r0, #4]
 800f00a:	80c3      	strh	r3, [r0, #6]
 800f00c:	bd10      	pop	{r4, pc}
 800f00e:	bf00      	nop
 800f010:	2000d404 	.word	0x2000d404

0800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800f014:	b507      	push	{r0, r1, r2, lr}
 800f016:	4b09      	ldr	r3, [pc, #36]	; (800f03c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800f018:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f01c:	4b08      	ldr	r3, [pc, #32]	; (800f040 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800f01e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f022:	2100      	movs	r1, #0
 800f024:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f028:	9100      	str	r1, [sp, #0]
 800f02a:	4669      	mov	r1, sp
 800f02c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f030:	f7ff ffd8 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800f034:	b003      	add	sp, #12
 800f036:	f85d fb04 	ldr.w	pc, [sp], #4
 800f03a:	bf00      	nop
 800f03c:	2000d400 	.word	0x2000d400
 800f040:	2000d402 	.word	0x2000d402

0800f044 <_ZN8touchgfx11Application13requestRedrawEv>:
 800f044:	4b06      	ldr	r3, [pc, #24]	; (800f060 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800f046:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f04a:	4b06      	ldr	r3, [pc, #24]	; (800f064 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800f04c:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800f050:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f054:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800f058:	2100      	movs	r1, #0
 800f05a:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800f05e:	4770      	bx	lr
 800f060:	2000d400 	.word	0x2000d400
 800f064:	2000d402 	.word	0x2000d402

0800f068 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800f068:	4b03      	ldr	r3, [pc, #12]	; (800f078 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800f06a:	6818      	ldr	r0, [r3, #0]
 800f06c:	b110      	cbz	r0, 800f074 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800f06e:	6803      	ldr	r3, [r0, #0]
 800f070:	699b      	ldr	r3, [r3, #24]
 800f072:	4718      	bx	r3
 800f074:	4770      	bx	lr
 800f076:	bf00      	nop
 800f078:	2000d468 	.word	0x2000d468

0800f07c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800f07c:	4770      	bx	lr
	...

0800f080 <_ZN8touchgfx11Application4drawEv>:
 800f080:	b507      	push	{r0, r1, r2, lr}
 800f082:	4b09      	ldr	r3, [pc, #36]	; (800f0a8 <_ZN8touchgfx11Application4drawEv+0x28>)
 800f084:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f088:	4b08      	ldr	r3, [pc, #32]	; (800f0ac <_ZN8touchgfx11Application4drawEv+0x2c>)
 800f08a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f08e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f092:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f096:	6803      	ldr	r3, [r0, #0]
 800f098:	2100      	movs	r1, #0
 800f09a:	9100      	str	r1, [sp, #0]
 800f09c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f09e:	4669      	mov	r1, sp
 800f0a0:	4798      	blx	r3
 800f0a2:	b003      	add	sp, #12
 800f0a4:	f85d fb04 	ldr.w	pc, [sp], #4
 800f0a8:	2000d400 	.word	0x2000d400
 800f0ac:	2000d402 	.word	0x2000d402

0800f0b0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800f0b0:	4b03      	ldr	r3, [pc, #12]	; (800f0c0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800f0b2:	6818      	ldr	r0, [r3, #0]
 800f0b4:	b110      	cbz	r0, 800f0bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800f0b6:	6803      	ldr	r3, [r0, #0]
 800f0b8:	69db      	ldr	r3, [r3, #28]
 800f0ba:	4718      	bx	r3
 800f0bc:	4770      	bx	lr
 800f0be:	bf00      	nop
 800f0c0:	2000d468 	.word	0x2000d468

0800f0c4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800f0c4:	4b03      	ldr	r3, [pc, #12]	; (800f0d4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800f0c6:	6818      	ldr	r0, [r3, #0]
 800f0c8:	b110      	cbz	r0, 800f0d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800f0ca:	6803      	ldr	r3, [r0, #0]
 800f0cc:	6a1b      	ldr	r3, [r3, #32]
 800f0ce:	4718      	bx	r3
 800f0d0:	4770      	bx	lr
 800f0d2:	bf00      	nop
 800f0d4:	2000d468 	.word	0x2000d468

0800f0d8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800f0d8:	4b03      	ldr	r3, [pc, #12]	; (800f0e8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800f0da:	6818      	ldr	r0, [r3, #0]
 800f0dc:	b110      	cbz	r0, 800f0e4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800f0de:	6803      	ldr	r3, [r0, #0]
 800f0e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f0e2:	4718      	bx	r3
 800f0e4:	4770      	bx	lr
 800f0e6:	bf00      	nop
 800f0e8:	2000d468 	.word	0x2000d468

0800f0ec <_ZN8touchgfx11Application15handleTickEventEv>:
 800f0ec:	b570      	push	{r4, r5, r6, lr}
 800f0ee:	4d34      	ldr	r5, [pc, #208]	; (800f1c0 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800f0f0:	4604      	mov	r4, r0
 800f0f2:	6828      	ldr	r0, [r5, #0]
 800f0f4:	b140      	cbz	r0, 800f108 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f0f6:	7a03      	ldrb	r3, [r0, #8]
 800f0f8:	b933      	cbnz	r3, 800f108 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800f0fa:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800f0fe:	6803      	ldr	r3, [r0, #0]
 800f100:	689b      	ldr	r3, [r3, #8]
 800f102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f106:	4718      	bx	r3
 800f108:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800f10c:	b97b      	cbnz	r3, 800f12e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f10e:	b170      	cbz	r0, 800f12e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f110:	7a03      	ldrb	r3, [r0, #8]
 800f112:	b163      	cbz	r3, 800f12e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800f114:	4b2b      	ldr	r3, [pc, #172]	; (800f1c4 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800f116:	6818      	ldr	r0, [r3, #0]
 800f118:	b110      	cbz	r0, 800f120 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800f11a:	6803      	ldr	r3, [r0, #0]
 800f11c:	691b      	ldr	r3, [r3, #16]
 800f11e:	4798      	blx	r3
 800f120:	6828      	ldr	r0, [r5, #0]
 800f122:	6803      	ldr	r3, [r0, #0]
 800f124:	68db      	ldr	r3, [r3, #12]
 800f126:	4798      	blx	r3
 800f128:	2301      	movs	r3, #1
 800f12a:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800f12e:	2500      	movs	r5, #0
 800f130:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800f134:	42a8      	cmp	r0, r5
 800f136:	dd0c      	ble.n	800f152 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800f138:	1963      	adds	r3, r4, r5
 800f13a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800f13e:	b132      	cbz	r2, 800f14e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800f140:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800f144:	4413      	add	r3, r2
 800f146:	6858      	ldr	r0, [r3, #4]
 800f148:	6803      	ldr	r3, [r0, #0]
 800f14a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f14c:	4798      	blx	r3
 800f14e:	3501      	adds	r5, #1
 800f150:	e7ee      	b.n	800f130 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800f152:	2300      	movs	r3, #0
 800f154:	461a      	mov	r2, r3
 800f156:	4298      	cmp	r0, r3
 800f158:	d114      	bne.n	800f184 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800f15a:	1d25      	adds	r5, r4, #4
 800f15c:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800f160:	1e48      	subs	r0, r1, #1
 800f162:	b280      	uxth	r0, r0
 800f164:	4291      	cmp	r1, r2
 800f166:	dd24      	ble.n	800f1b2 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800f168:	4288      	cmp	r0, r1
 800f16a:	d2fb      	bcs.n	800f164 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800f16c:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800f170:	3304      	adds	r3, #4
 800f172:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800f176:	428b      	cmp	r3, r1
 800f178:	d018      	beq.n	800f1ac <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800f17a:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800f17e:	f843 6c04 	str.w	r6, [r3, #-4]
 800f182:	e7f8      	b.n	800f176 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800f184:	18e1      	adds	r1, r4, r3
 800f186:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800f18a:	b16d      	cbz	r5, 800f1a8 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800f18c:	429a      	cmp	r2, r3
 800f18e:	d00a      	beq.n	800f1a6 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800f190:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800f194:	4431      	add	r1, r6
 800f196:	684e      	ldr	r6, [r1, #4]
 800f198:	b291      	uxth	r1, r2
 800f19a:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800f19e:	604e      	str	r6, [r1, #4]
 800f1a0:	18a1      	adds	r1, r4, r2
 800f1a2:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800f1a6:	3201      	adds	r2, #1
 800f1a8:	3301      	adds	r3, #1
 800f1aa:	e7d4      	b.n	800f156 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800f1ac:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800f1b0:	e7d4      	b.n	800f15c <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800f1b2:	4b04      	ldr	r3, [pc, #16]	; (800f1c4 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800f1b4:	6818      	ldr	r0, [r3, #0]
 800f1b6:	b110      	cbz	r0, 800f1be <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800f1b8:	6803      	ldr	r3, [r0, #0]
 800f1ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1bc:	e7a1      	b.n	800f102 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800f1be:	bd70      	pop	{r4, r5, r6, pc}
 800f1c0:	2000d46c 	.word	0x2000d46c
 800f1c4:	2000d468 	.word	0x2000d468

0800f1c8 <_ZN8touchgfx11ApplicationD1Ev>:
 800f1c8:	4770      	bx	lr

0800f1ca <_ZN8touchgfx11ApplicationD0Ev>:
 800f1ca:	b510      	push	{r4, lr}
 800f1cc:	f44f 719c 	mov.w	r1, #312	; 0x138
 800f1d0:	4604      	mov	r4, r0
 800f1d2:	f010 f8e0 	bl	801f396 <_ZdlPvj>
 800f1d6:	4620      	mov	r0, r4
 800f1d8:	bd10      	pop	{r4, pc}
	...

0800f1dc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800f1dc:	b570      	push	{r4, r5, r6, lr}
 800f1de:	4606      	mov	r6, r0
 800f1e0:	460c      	mov	r4, r1
 800f1e2:	b929      	cbnz	r1, 800f1f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800f1e4:	4b0c      	ldr	r3, [pc, #48]	; (800f218 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800f1e6:	4a0d      	ldr	r2, [pc, #52]	; (800f21c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800f1e8:	480d      	ldr	r0, [pc, #52]	; (800f220 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800f1ea:	2164      	movs	r1, #100	; 0x64
 800f1ec:	f010 f902 	bl	801f3f4 <__assert_func>
 800f1f0:	4d0c      	ldr	r5, [pc, #48]	; (800f224 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800f1f2:	2300      	movs	r3, #0
 800f1f4:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800f1f8:	6828      	ldr	r0, [r5, #0]
 800f1fa:	b110      	cbz	r0, 800f202 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800f1fc:	6803      	ldr	r3, [r0, #0]
 800f1fe:	695b      	ldr	r3, [r3, #20]
 800f200:	4798      	blx	r3
 800f202:	602c      	str	r4, [r5, #0]
 800f204:	6823      	ldr	r3, [r4, #0]
 800f206:	4620      	mov	r0, r4
 800f208:	68db      	ldr	r3, [r3, #12]
 800f20a:	4798      	blx	r3
 800f20c:	6833      	ldr	r3, [r6, #0]
 800f20e:	4630      	mov	r0, r6
 800f210:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f212:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f216:	4718      	bx	r3
 800f218:	08023299 	.word	0x08023299
 800f21c:	08023394 	.word	0x08023394
 800f220:	080232a3 	.word	0x080232a3
 800f224:	2000d468 	.word	0x2000d468

0800f228 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800f228:	b510      	push	{r4, lr}
 800f22a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f22e:	888a      	ldrh	r2, [r1, #4]
 800f230:	f9b0 3000 	ldrsh.w	r3, [r0]
 800f234:	4422      	add	r2, r4
 800f236:	b212      	sxth	r2, r2
 800f238:	4293      	cmp	r3, r2
 800f23a:	da15      	bge.n	800f268 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f23c:	8882      	ldrh	r2, [r0, #4]
 800f23e:	4413      	add	r3, r2
 800f240:	b21b      	sxth	r3, r3
 800f242:	429c      	cmp	r4, r3
 800f244:	da10      	bge.n	800f268 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f246:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f24a:	88c9      	ldrh	r1, [r1, #6]
 800f24c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f250:	4419      	add	r1, r3
 800f252:	b209      	sxth	r1, r1
 800f254:	428a      	cmp	r2, r1
 800f256:	da07      	bge.n	800f268 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800f258:	88c0      	ldrh	r0, [r0, #6]
 800f25a:	4410      	add	r0, r2
 800f25c:	b200      	sxth	r0, r0
 800f25e:	4283      	cmp	r3, r0
 800f260:	bfac      	ite	ge
 800f262:	2000      	movge	r0, #0
 800f264:	2001      	movlt	r0, #1
 800f266:	bd10      	pop	{r4, pc}
 800f268:	2000      	movs	r0, #0
 800f26a:	e7fc      	b.n	800f266 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800f26c <_ZNK8touchgfx4Rect8includesERKS0_>:
 800f26c:	b570      	push	{r4, r5, r6, lr}
 800f26e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800f272:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f276:	42ac      	cmp	r4, r5
 800f278:	db18      	blt.n	800f2ac <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800f27a:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800f27e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800f282:	429a      	cmp	r2, r3
 800f284:	db12      	blt.n	800f2ac <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800f286:	8886      	ldrh	r6, [r0, #4]
 800f288:	4435      	add	r5, r6
 800f28a:	888e      	ldrh	r6, [r1, #4]
 800f28c:	4434      	add	r4, r6
 800f28e:	b22d      	sxth	r5, r5
 800f290:	b224      	sxth	r4, r4
 800f292:	42a5      	cmp	r5, r4
 800f294:	db0a      	blt.n	800f2ac <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800f296:	88c0      	ldrh	r0, [r0, #6]
 800f298:	4418      	add	r0, r3
 800f29a:	88cb      	ldrh	r3, [r1, #6]
 800f29c:	441a      	add	r2, r3
 800f29e:	b200      	sxth	r0, r0
 800f2a0:	b212      	sxth	r2, r2
 800f2a2:	4290      	cmp	r0, r2
 800f2a4:	bfb4      	ite	lt
 800f2a6:	2000      	movlt	r0, #0
 800f2a8:	2001      	movge	r0, #1
 800f2aa:	bd70      	pop	{r4, r5, r6, pc}
 800f2ac:	2000      	movs	r0, #0
 800f2ae:	e7fc      	b.n	800f2aa <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800f2b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800f2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f2b2:	4604      	mov	r4, r0
 800f2b4:	4608      	mov	r0, r1
 800f2b6:	460d      	mov	r5, r1
 800f2b8:	f7fb fbb9 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f2bc:	b978      	cbnz	r0, 800f2de <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800f2be:	4620      	mov	r0, r4
 800f2c0:	f7fb fbb5 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f2c4:	f9b5 6000 	ldrsh.w	r6, [r5]
 800f2c8:	b150      	cbz	r0, 800f2e0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800f2ca:	8026      	strh	r6, [r4, #0]
 800f2cc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f2d0:	8063      	strh	r3, [r4, #2]
 800f2d2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800f2d6:	80a3      	strh	r3, [r4, #4]
 800f2d8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f2dc:	80e3      	strh	r3, [r4, #6]
 800f2de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f2e0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f2e4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f2e8:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800f2ec:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800f2f0:	88ed      	ldrh	r5, [r5, #6]
 800f2f2:	42b1      	cmp	r1, r6
 800f2f4:	460f      	mov	r7, r1
 800f2f6:	bfa8      	it	ge
 800f2f8:	4637      	movge	r7, r6
 800f2fa:	4293      	cmp	r3, r2
 800f2fc:	4618      	mov	r0, r3
 800f2fe:	4466      	add	r6, ip
 800f300:	bfa8      	it	ge
 800f302:	4610      	movge	r0, r2
 800f304:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800f308:	8027      	strh	r7, [r4, #0]
 800f30a:	442a      	add	r2, r5
 800f30c:	88e5      	ldrh	r5, [r4, #6]
 800f30e:	8060      	strh	r0, [r4, #2]
 800f310:	4461      	add	r1, ip
 800f312:	442b      	add	r3, r5
 800f314:	b236      	sxth	r6, r6
 800f316:	b209      	sxth	r1, r1
 800f318:	b212      	sxth	r2, r2
 800f31a:	b21b      	sxth	r3, r3
 800f31c:	428e      	cmp	r6, r1
 800f31e:	bfac      	ite	ge
 800f320:	ebc7 0106 	rsbge	r1, r7, r6
 800f324:	ebc7 0101 	rsblt	r1, r7, r1
 800f328:	429a      	cmp	r2, r3
 800f32a:	bfac      	ite	ge
 800f32c:	ebc0 0202 	rsbge	r2, r0, r2
 800f330:	ebc0 0203 	rsblt	r2, r0, r3
 800f334:	80a1      	strh	r1, [r4, #4]
 800f336:	80e2      	strh	r2, [r4, #6]
 800f338:	e7d1      	b.n	800f2de <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800f33c <_ZN8touchgfx11Application11getInstanceEv>:
 800f33c:	4b01      	ldr	r3, [pc, #4]	; (800f344 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800f33e:	6818      	ldr	r0, [r3, #0]
 800f340:	4770      	bx	lr
 800f342:	bf00      	nop
 800f344:	2000d478 	.word	0x2000d478

0800f348 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800f348:	b570      	push	{r4, r5, r6, lr}
 800f34a:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800f34e:	1d04      	adds	r4, r0, #4
 800f350:	2200      	movs	r2, #0
 800f352:	b295      	uxth	r5, r2
 800f354:	42ab      	cmp	r3, r5
 800f356:	d90f      	bls.n	800f378 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800f358:	f854 6b04 	ldr.w	r6, [r4], #4
 800f35c:	428e      	cmp	r6, r1
 800f35e:	4615      	mov	r5, r2
 800f360:	f102 0201 	add.w	r2, r2, #1
 800f364:	d1f5      	bne.n	800f352 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800f366:	4428      	add	r0, r5
 800f368:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800f36c:	2bff      	cmp	r3, #255	; 0xff
 800f36e:	d002      	beq.n	800f376 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800f370:	3301      	adds	r3, #1
 800f372:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800f376:	bd70      	pop	{r4, r5, r6, pc}
 800f378:	2b20      	cmp	r3, #32
 800f37a:	d106      	bne.n	800f38a <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800f37c:	4b08      	ldr	r3, [pc, #32]	; (800f3a0 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800f37e:	4a09      	ldr	r2, [pc, #36]	; (800f3a4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800f380:	4809      	ldr	r0, [pc, #36]	; (800f3a8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800f382:	f44f 7117 	mov.w	r1, #604	; 0x25c
 800f386:	f010 f835 	bl	801f3f4 <__assert_func>
 800f38a:	18c2      	adds	r2, r0, r3
 800f38c:	2401      	movs	r4, #1
 800f38e:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800f392:	191a      	adds	r2, r3, r4
 800f394:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800f398:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f39c:	6041      	str	r1, [r0, #4]
 800f39e:	e7ea      	b.n	800f376 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800f3a0:	080232cd 	.word	0x080232cd
 800f3a4:	080233d8 	.word	0x080233d8
 800f3a8:	080232a3 	.word	0x080232a3

0800f3ac <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800f3ac:	b570      	push	{r4, r5, r6, lr}
 800f3ae:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800f3b2:	1d04      	adds	r4, r0, #4
 800f3b4:	2300      	movs	r3, #0
 800f3b6:	b29a      	uxth	r2, r3
 800f3b8:	4296      	cmp	r6, r2
 800f3ba:	d90a      	bls.n	800f3d2 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800f3bc:	f854 2b04 	ldr.w	r2, [r4], #4
 800f3c0:	428a      	cmp	r2, r1
 800f3c2:	d107      	bne.n	800f3d4 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800f3c4:	18c5      	adds	r5, r0, r3
 800f3c6:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800f3ca:	b11a      	cbz	r2, 800f3d4 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800f3cc:	3a01      	subs	r2, #1
 800f3ce:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800f3d2:	bd70      	pop	{r4, r5, r6, pc}
 800f3d4:	3301      	adds	r3, #1
 800f3d6:	e7ee      	b.n	800f3b6 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800f3d8:	2300      	movs	r3, #0
 800f3da:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800f3de:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800f3e2:	30a8      	adds	r0, #168	; 0xa8
 800f3e4:	f802 3b01 	strb.w	r3, [r2], #1
 800f3e8:	4282      	cmp	r2, r0
 800f3ea:	d1fb      	bne.n	800f3e4 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800f3ec:	4770      	bx	lr

0800f3ee <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800f3ee:	4603      	mov	r3, r0
 800f3f0:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800f3f4:	2200      	movs	r2, #0
 800f3f6:	801a      	strh	r2, [r3, #0]
 800f3f8:	805a      	strh	r2, [r3, #2]
 800f3fa:	809a      	strh	r2, [r3, #4]
 800f3fc:	80da      	strh	r2, [r3, #6]
 800f3fe:	3308      	adds	r3, #8
 800f400:	428b      	cmp	r3, r1
 800f402:	d1f8      	bne.n	800f3f6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800f404:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800f408:	4770      	bx	lr
	...

0800f40c <_ZN8touchgfx11ApplicationC1Ev>:
 800f40c:	b570      	push	{r4, r5, r6, lr}
 800f40e:	4b1a      	ldr	r3, [pc, #104]	; (800f478 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800f410:	6003      	str	r3, [r0, #0]
 800f412:	2500      	movs	r5, #0
 800f414:	4604      	mov	r4, r0
 800f416:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800f41a:	30a8      	adds	r0, #168	; 0xa8
 800f41c:	f7ff ffe7 	bl	800f3ee <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f420:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800f424:	f7ff ffe3 	bl	800f3ee <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800f428:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800f42c:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800f430:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800f434:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800f438:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800f43c:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800f440:	490e      	ldr	r1, [pc, #56]	; (800f47c <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800f442:	480f      	ldr	r0, [pc, #60]	; (800f480 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800f444:	4e0f      	ldr	r6, [pc, #60]	; (800f484 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800f446:	f00e fa79 	bl	801d93c <CRC_Lock>
 800f44a:	4b0f      	ldr	r3, [pc, #60]	; (800f488 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800f44c:	b158      	cbz	r0, 800f466 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800f44e:	801d      	strh	r5, [r3, #0]
 800f450:	4a0e      	ldr	r2, [pc, #56]	; (800f48c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800f452:	2300      	movs	r3, #0
 800f454:	6013      	str	r3, [r2, #0]
 800f456:	4a0e      	ldr	r2, [pc, #56]	; (800f490 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800f458:	6033      	str	r3, [r6, #0]
 800f45a:	4620      	mov	r0, r4
 800f45c:	6013      	str	r3, [r2, #0]
 800f45e:	f7ff ffbb 	bl	800f3d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800f462:	4620      	mov	r0, r4
 800f464:	bd70      	pop	{r4, r5, r6, pc}
 800f466:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800f46a:	2002      	movs	r0, #2
 800f46c:	801a      	strh	r2, [r3, #0]
 800f46e:	6030      	str	r0, [r6, #0]
 800f470:	f001 fb30 	bl	8010ad4 <_ZN8touchgfx6Screen4drawEv>
 800f474:	e7ec      	b.n	800f450 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800f476:	bf00      	nop
 800f478:	08023358 	.word	0x08023358
 800f47c:	b5e8b5cd 	.word	0xb5e8b5cd
 800f480:	f407a5c2 	.word	0xf407a5c2
 800f484:	2000d468 	.word	0x2000d468
 800f488:	20000060 	.word	0x20000060
 800f48c:	2000d478 	.word	0x2000d478
 800f490:	2000d46c 	.word	0x2000d46c

0800f494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800f494:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800f498:	428b      	cmp	r3, r1
 800f49a:	b510      	push	{r4, lr}
 800f49c:	d90e      	bls.n	800f4bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800f49e:	3b01      	subs	r3, #1
 800f4a0:	b29b      	uxth	r3, r3
 800f4a2:	428b      	cmp	r3, r1
 800f4a4:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800f4a8:	d908      	bls.n	800f4bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800f4aa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800f4ae:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800f4b2:	681a      	ldr	r2, [r3, #0]
 800f4b4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800f4b8:	685a      	ldr	r2, [r3, #4]
 800f4ba:	6062      	str	r2, [r4, #4]
 800f4bc:	bd10      	pop	{r4, pc}
	...

0800f4c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800f4c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f4c2:	466b      	mov	r3, sp
 800f4c4:	e883 0006 	stmia.w	r3, {r1, r2}
 800f4c8:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800f4cc:	2a07      	cmp	r2, #7
 800f4ce:	4604      	mov	r4, r0
 800f4d0:	d906      	bls.n	800f4e0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800f4d2:	4b09      	ldr	r3, [pc, #36]	; (800f4f8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800f4d4:	4a09      	ldr	r2, [pc, #36]	; (800f4fc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800f4d6:	480a      	ldr	r0, [pc, #40]	; (800f500 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800f4d8:	f240 118f 	movw	r1, #399	; 0x18f
 800f4dc:	f00f ff8a 	bl	801f3f4 <__assert_func>
 800f4e0:	1c51      	adds	r1, r2, #1
 800f4e2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800f4e6:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800f4ea:	cb03      	ldmia	r3!, {r0, r1}
 800f4ec:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800f4f0:	6069      	str	r1, [r5, #4]
 800f4f2:	b003      	add	sp, #12
 800f4f4:	bd30      	pop	{r4, r5, pc}
 800f4f6:	bf00      	nop
 800f4f8:	080232f5 	.word	0x080232f5
 800f4fc:	0802341d 	.word	0x0802341d
 800f500:	08023324 	.word	0x08023324

0800f504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800f504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f508:	b08d      	sub	sp, #52	; 0x34
 800f50a:	ac08      	add	r4, sp, #32
 800f50c:	4683      	mov	fp, r0
 800f50e:	4620      	mov	r0, r4
 800f510:	e884 0006 	stmia.w	r4, {r1, r2}
 800f514:	f7fb fa8b 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800f518:	2800      	cmp	r0, #0
 800f51a:	d16a      	bne.n	800f5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800f51c:	9402      	str	r4, [sp, #8]
 800f51e:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800f522:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800f526:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800f52a:	2400      	movs	r4, #0
 800f52c:	9301      	str	r3, [sp, #4]
 800f52e:	36a0      	adds	r6, #160	; 0xa0
 800f530:	42a5      	cmp	r5, r4
 800f532:	d00d      	beq.n	800f550 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800f534:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800f538:	9802      	ldr	r0, [sp, #8]
 800f53a:	f7ff fe97 	bl	800f26c <_ZNK8touchgfx4Rect8includesERKS0_>
 800f53e:	b128      	cbz	r0, 800f54c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800f540:	1e69      	subs	r1, r5, #1
 800f542:	1b09      	subs	r1, r1, r4
 800f544:	b289      	uxth	r1, r1
 800f546:	9801      	ldr	r0, [sp, #4]
 800f548:	f7ff ffa4 	bl	800f494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f54c:	3401      	adds	r4, #1
 800f54e:	e7ef      	b.n	800f530 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800f550:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800f554:	9703      	str	r7, [sp, #12]
 800f556:	1e7b      	subs	r3, r7, #1
 800f558:	9300      	str	r3, [sp, #0]
 800f55a:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800f55e:	2400      	movs	r4, #0
 800f560:	4655      	mov	r5, sl
 800f562:	9704      	str	r7, [sp, #16]
 800f564:	4626      	mov	r6, r4
 800f566:	9b04      	ldr	r3, [sp, #16]
 800f568:	2b00      	cmp	r3, #0
 800f56a:	d078      	beq.n	800f65e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800f56c:	9902      	ldr	r1, [sp, #8]
 800f56e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800f572:	f7ff fe59 	bl	800f228 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f576:	b360      	cbz	r0, 800f5d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800f578:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800f57c:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800f580:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800f584:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800f588:	45e6      	cmp	lr, ip
 800f58a:	db35      	blt.n	800f5f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800f58c:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800f590:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800f594:	4472      	add	r2, lr
 800f596:	4463      	add	r3, ip
 800f598:	b212      	sxth	r2, r2
 800f59a:	b21b      	sxth	r3, r3
 800f59c:	429a      	cmp	r2, r3
 800f59e:	dc2b      	bgt.n	800f5f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800f5a0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800f5a4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f5a8:	fa1f f288 	uxth.w	r2, r8
 800f5ac:	4413      	add	r3, r2
 800f5ae:	b29b      	uxth	r3, r3
 800f5b0:	45c1      	cmp	r9, r8
 800f5b2:	fa0f fe83 	sxth.w	lr, r3
 800f5b6:	fa1f fc89 	uxth.w	ip, r9
 800f5ba:	db0f      	blt.n	800f5dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800f5bc:	eba3 030c 	sub.w	r3, r3, ip
 800f5c0:	1ac9      	subs	r1, r1, r3
 800f5c2:	b209      	sxth	r1, r1
 800f5c4:	2900      	cmp	r1, #0
 800f5c6:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800f5ca:	dd12      	ble.n	800f5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800f5cc:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800f5d0:	4604      	mov	r4, r0
 800f5d2:	9b04      	ldr	r3, [sp, #16]
 800f5d4:	3b01      	subs	r3, #1
 800f5d6:	9304      	str	r3, [sp, #16]
 800f5d8:	3d08      	subs	r5, #8
 800f5da:	e7c4      	b.n	800f566 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800f5dc:	4461      	add	r1, ip
 800f5de:	b209      	sxth	r1, r1
 800f5e0:	4571      	cmp	r1, lr
 800f5e2:	dc3a      	bgt.n	800f65a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800f5e4:	eba2 020c 	sub.w	r2, r2, ip
 800f5e8:	b212      	sxth	r2, r2
 800f5ea:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800f5ee:	2a00      	cmp	r2, #0
 800f5f0:	dcee      	bgt.n	800f5d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800f5f2:	b00d      	add	sp, #52	; 0x34
 800f5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5f8:	45c1      	cmp	r9, r8
 800f5fa:	db2e      	blt.n	800f65a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800f5fc:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800f600:	4499      	add	r9, r3
 800f602:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800f606:	4498      	add	r8, r3
 800f608:	fa0f f989 	sxth.w	r9, r9
 800f60c:	fa0f f888 	sxth.w	r8, r8
 800f610:	45c1      	cmp	r9, r8
 800f612:	dc22      	bgt.n	800f65a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800f614:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800f618:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800f61c:	fa1f f28c 	uxth.w	r2, ip
 800f620:	4413      	add	r3, r2
 800f622:	b29b      	uxth	r3, r3
 800f624:	45e6      	cmp	lr, ip
 800f626:	fa1f f88e 	uxth.w	r8, lr
 800f62a:	fa0f f983 	sxth.w	r9, r3
 800f62e:	db0a      	blt.n	800f646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800f630:	eba3 0308 	sub.w	r3, r3, r8
 800f634:	1ac9      	subs	r1, r1, r3
 800f636:	b209      	sxth	r1, r1
 800f638:	2900      	cmp	r1, #0
 800f63a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800f63e:	ddd8      	ble.n	800f5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800f640:	f8ad 9020 	strh.w	r9, [sp, #32]
 800f644:	e7c4      	b.n	800f5d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800f646:	4441      	add	r1, r8
 800f648:	b209      	sxth	r1, r1
 800f64a:	4549      	cmp	r1, r9
 800f64c:	dc05      	bgt.n	800f65a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800f64e:	eba2 0208 	sub.w	r2, r2, r8
 800f652:	b212      	sxth	r2, r2
 800f654:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800f658:	e7c9      	b.n	800f5ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800f65a:	4606      	mov	r6, r0
 800f65c:	e7b9      	b.n	800f5d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800f65e:	2c00      	cmp	r4, #0
 800f660:	f47f af7d 	bne.w	800f55e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800f664:	2e00      	cmp	r6, #0
 800f666:	f000 81dd 	beq.w	800fa24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800f66a:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800f66e:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800f672:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800f676:	b2b9      	uxth	r1, r7
 800f678:	9104      	str	r1, [sp, #16]
 800f67a:	9804      	ldr	r0, [sp, #16]
 800f67c:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f680:	4401      	add	r1, r0
 800f682:	b2b3      	uxth	r3, r6
 800f684:	b289      	uxth	r1, r1
 800f686:	441a      	add	r2, r3
 800f688:	9105      	str	r1, [sp, #20]
 800f68a:	b292      	uxth	r2, r2
 800f68c:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800f690:	fa0f f882 	sxth.w	r8, r2
 800f694:	4655      	mov	r5, sl
 800f696:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800f69a:	9b03      	ldr	r3, [sp, #12]
 800f69c:	2b00      	cmp	r3, #0
 800f69e:	d054      	beq.n	800f74a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800f6a0:	9902      	ldr	r1, [sp, #8]
 800f6a2:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800f6a6:	f7ff fdbf 	bl	800f228 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f6aa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800f6ae:	b1d8      	cbz	r0, 800f6e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800f6b0:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800f6b4:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800f6b8:	4576      	cmp	r6, lr
 800f6ba:	dc26      	bgt.n	800f70a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800f6bc:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800f6c0:	44f4      	add	ip, lr
 800f6c2:	fa0f fc8c 	sxth.w	ip, ip
 800f6c6:	45e0      	cmp	r8, ip
 800f6c8:	db1f      	blt.n	800f70a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800f6ca:	428f      	cmp	r7, r1
 800f6cc:	fa1f fc81 	uxth.w	ip, r1
 800f6d0:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800f6d4:	dc0f      	bgt.n	800f6f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800f6d6:	9805      	ldr	r0, [sp, #20]
 800f6d8:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800f6dc:	eba0 0c0c 	sub.w	ip, r0, ip
 800f6e0:	eba1 010c 	sub.w	r1, r1, ip
 800f6e4:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800f6e8:	4620      	mov	r0, r4
 800f6ea:	9903      	ldr	r1, [sp, #12]
 800f6ec:	3901      	subs	r1, #1
 800f6ee:	9103      	str	r1, [sp, #12]
 800f6f0:	3d08      	subs	r5, #8
 800f6f2:	4604      	mov	r4, r0
 800f6f4:	e7cf      	b.n	800f696 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800f6f6:	4461      	add	r1, ip
 800f6f8:	b209      	sxth	r1, r1
 800f6fa:	4549      	cmp	r1, r9
 800f6fc:	dcf5      	bgt.n	800f6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f6fe:	9904      	ldr	r1, [sp, #16]
 800f700:	eba1 0c0c 	sub.w	ip, r1, ip
 800f704:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800f708:	e7ee      	b.n	800f6e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800f70a:	428f      	cmp	r7, r1
 800f70c:	dced      	bgt.n	800f6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f70e:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800f712:	4461      	add	r1, ip
 800f714:	b209      	sxth	r1, r1
 800f716:	4589      	cmp	r9, r1
 800f718:	dbe7      	blt.n	800f6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f71a:	4576      	cmp	r6, lr
 800f71c:	fa1f fc8e 	uxth.w	ip, lr
 800f720:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800f724:	dc08      	bgt.n	800f738 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800f726:	eba2 0c0c 	sub.w	ip, r2, ip
 800f72a:	eba1 010c 	sub.w	r1, r1, ip
 800f72e:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800f732:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800f736:	e7d7      	b.n	800f6e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800f738:	4461      	add	r1, ip
 800f73a:	b209      	sxth	r1, r1
 800f73c:	4588      	cmp	r8, r1
 800f73e:	dbd4      	blt.n	800f6ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800f740:	eba3 0c0c 	sub.w	ip, r3, ip
 800f744:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800f748:	e7ce      	b.n	800f6e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800f74a:	2c00      	cmp	r4, #0
 800f74c:	f000 816a 	beq.w	800fa24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800f750:	9b00      	ldr	r3, [sp, #0]
 800f752:	3301      	adds	r3, #1
 800f754:	f000 8166 	beq.w	800fa24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800f758:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800f75c:	4621      	mov	r1, r4
 800f75e:	9802      	ldr	r0, [sp, #8]
 800f760:	f7ff fd84 	bl	800f26c <_ZNK8touchgfx4Rect8includesERKS0_>
 800f764:	b120      	cbz	r0, 800f770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800f766:	f8bd 1000 	ldrh.w	r1, [sp]
 800f76a:	9801      	ldr	r0, [sp, #4]
 800f76c:	f7ff fe92 	bl	800f494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800f770:	9902      	ldr	r1, [sp, #8]
 800f772:	4620      	mov	r0, r4
 800f774:	f7ff fd58 	bl	800f228 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f778:	2800      	cmp	r0, #0
 800f77a:	f000 809b 	beq.w	800f8b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800f77e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800f782:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800f786:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800f78a:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800f78e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800f792:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800f796:	fa1f f288 	uxth.w	r2, r8
 800f79a:	19d5      	adds	r5, r2, r7
 800f79c:	fa1f f985 	uxth.w	r9, r5
 800f7a0:	fa0f f589 	sxth.w	r5, r9
 800f7a4:	b2a1      	uxth	r1, r4
 800f7a6:	440b      	add	r3, r1
 800f7a8:	9503      	str	r5, [sp, #12]
 800f7aa:	45a0      	cmp	r8, r4
 800f7ac:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800f7b0:	9507      	str	r5, [sp, #28]
 800f7b2:	b29b      	uxth	r3, r3
 800f7b4:	f340 809d 	ble.w	800f8f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800f7b8:	1a52      	subs	r2, r2, r1
 800f7ba:	b292      	uxth	r2, r2
 800f7bc:	4584      	cmp	ip, r0
 800f7be:	fa0f fe83 	sxth.w	lr, r3
 800f7c2:	b215      	sxth	r5, r2
 800f7c4:	dd2f      	ble.n	800f826 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800f7c6:	9e00      	ldr	r6, [sp, #0]
 800f7c8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800f7cc:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800f7d0:	9e03      	ldr	r6, [sp, #12]
 800f7d2:	eba6 060e 	sub.w	r6, r6, lr
 800f7d6:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800f7da:	fa1f fc8c 	uxth.w	ip, ip
 800f7de:	b280      	uxth	r0, r0
 800f7e0:	ebac 0300 	sub.w	r3, ip, r0
 800f7e4:	448c      	add	ip, r1
 800f7e6:	4470      	add	r0, lr
 800f7e8:	b29b      	uxth	r3, r3
 800f7ea:	fa0f fc8c 	sxth.w	ip, ip
 800f7ee:	b200      	sxth	r0, r0
 800f7f0:	b21c      	sxth	r4, r3
 800f7f2:	ebac 0000 	sub.w	r0, ip, r0
 800f7f6:	4366      	muls	r6, r4
 800f7f8:	4368      	muls	r0, r5
 800f7fa:	4286      	cmp	r6, r0
 800f7fc:	db09      	blt.n	800f812 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800f7fe:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800f802:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800f806:	4417      	add	r7, r2
 800f808:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f80c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800f810:	e685      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f812:	440b      	add	r3, r1
 800f814:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f818:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800f81c:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800f820:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f824:	e67b      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f826:	9e03      	ldr	r6, [sp, #12]
 800f828:	45b6      	cmp	lr, r6
 800f82a:	da28      	bge.n	800f87e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800f82c:	9b00      	ldr	r3, [sp, #0]
 800f82e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800f832:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800f836:	eb04 030c 	add.w	r3, r4, ip
 800f83a:	fa1f f883 	uxth.w	r8, r3
 800f83e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800f842:	4403      	add	r3, r0
 800f844:	eba3 0308 	sub.w	r3, r3, r8
 800f848:	b29b      	uxth	r3, r3
 800f84a:	fa0f f988 	sxth.w	r9, r8
 800f84e:	eba0 000c 	sub.w	r0, r0, ip
 800f852:	fa0f f883 	sxth.w	r8, r3
 800f856:	eba6 060e 	sub.w	r6, r6, lr
 800f85a:	4368      	muls	r0, r5
 800f85c:	fb08 f606 	mul.w	r6, r8, r6
 800f860:	42b0      	cmp	r0, r6
 800f862:	dc06      	bgt.n	800f872 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800f864:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800f868:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800f86c:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800f870:	e7c9      	b.n	800f806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800f872:	4423      	add	r3, r4
 800f874:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800f878:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800f87c:	e64f      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f87e:	9807      	ldr	r0, [sp, #28]
 800f880:	eba3 0309 	sub.w	r3, r3, r9
 800f884:	b29b      	uxth	r3, r3
 800f886:	2806      	cmp	r0, #6
 800f888:	fa0f fc83 	sxth.w	ip, r3
 800f88c:	d818      	bhi.n	800f8c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800f88e:	4652      	mov	r2, sl
 800f890:	ab0a      	add	r3, sp, #40	; 0x28
 800f892:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800f896:	6851      	ldr	r1, [r2, #4]
 800f898:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800f89c:	c303      	stmia	r3!, {r0, r1}
 800f89e:	9b03      	ldr	r3, [sp, #12]
 800f8a0:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800f8a4:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800f8a8:	ab0a      	add	r3, sp, #40	; 0x28
 800f8aa:	e893 0006 	ldmia.w	r3, {r1, r2}
 800f8ae:	9801      	ldr	r0, [sp, #4]
 800f8b0:	f7ff fe06 	bl	800f4c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800f8b4:	9b00      	ldr	r3, [sp, #0]
 800f8b6:	3b01      	subs	r3, #1
 800f8b8:	9300      	str	r3, [sp, #0]
 800f8ba:	f1aa 0a08 	sub.w	sl, sl, #8
 800f8be:	e747      	b.n	800f750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800f8c0:	9800      	ldr	r0, [sp, #0]
 800f8c2:	45ac      	cmp	ip, r5
 800f8c4:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800f8c8:	db0c      	blt.n	800f8e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800f8ca:	4417      	add	r7, r2
 800f8cc:	b2bf      	uxth	r7, r7
 800f8ce:	4458      	add	r0, fp
 800f8d0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800f8d4:	440f      	add	r7, r1
 800f8d6:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f8da:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800f8de:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800f8e2:	e61c      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f8e4:	4458      	add	r0, fp
 800f8e6:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800f8ea:	443b      	add	r3, r7
 800f8ec:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800f8f0:	e615      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f8f2:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800f8f6:	fa1f f18c 	uxth.w	r1, ip
 800f8fa:	eb01 0e05 	add.w	lr, r1, r5
 800f8fe:	b282      	uxth	r2, r0
 800f900:	fa1f fe8e 	uxth.w	lr, lr
 800f904:	9204      	str	r2, [sp, #16]
 800f906:	fa0f f28e 	sxth.w	r2, lr
 800f90a:	9205      	str	r2, [sp, #20]
 800f90c:	9e04      	ldr	r6, [sp, #16]
 800f90e:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800f912:	4432      	add	r2, r6
 800f914:	b292      	uxth	r2, r2
 800f916:	4584      	cmp	ip, r0
 800f918:	9206      	str	r2, [sp, #24]
 800f91a:	da26      	bge.n	800f96a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800f91c:	eba3 0309 	sub.w	r3, r3, r9
 800f920:	eba2 020e 	sub.w	r2, r2, lr
 800f924:	b29b      	uxth	r3, r3
 800f926:	b292      	uxth	r2, r2
 800f928:	fa0f fa83 	sxth.w	sl, r3
 800f92c:	b211      	sxth	r1, r2
 800f92e:	eba0 000c 	sub.w	r0, r0, ip
 800f932:	eba4 0408 	sub.w	r4, r4, r8
 800f936:	fb0a f000 	mul.w	r0, sl, r0
 800f93a:	434c      	muls	r4, r1
 800f93c:	42a0      	cmp	r0, r4
 800f93e:	9800      	ldr	r0, [sp, #0]
 800f940:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800f944:	dc06      	bgt.n	800f954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800f946:	4458      	add	r0, fp
 800f948:	9a05      	ldr	r2, [sp, #20]
 800f94a:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800f94e:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800f952:	e7ca      	b.n	800f8ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800f954:	eb0b 0300 	add.w	r3, fp, r0
 800f958:	9903      	ldr	r1, [sp, #12]
 800f95a:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800f95e:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800f962:	442a      	add	r2, r5
 800f964:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800f968:	e5d9      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f96a:	9e04      	ldr	r6, [sp, #16]
 800f96c:	9a03      	ldr	r2, [sp, #12]
 800f96e:	1b89      	subs	r1, r1, r6
 800f970:	b21e      	sxth	r6, r3
 800f972:	b289      	uxth	r1, r1
 800f974:	4296      	cmp	r6, r2
 800f976:	fa0f fc81 	sxth.w	ip, r1
 800f97a:	dd26      	ble.n	800f9ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800f97c:	eba3 0309 	sub.w	r3, r3, r9
 800f980:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800f984:	9e05      	ldr	r6, [sp, #20]
 800f986:	b29b      	uxth	r3, r3
 800f988:	eba6 0902 	sub.w	r9, r6, r2
 800f98c:	b218      	sxth	r0, r3
 800f98e:	eba4 0408 	sub.w	r4, r4, r8
 800f992:	fb0c f404 	mul.w	r4, ip, r4
 800f996:	fb00 f909 	mul.w	r9, r0, r9
 800f99a:	9a00      	ldr	r2, [sp, #0]
 800f99c:	454c      	cmp	r4, r9
 800f99e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800f9a2:	db03      	blt.n	800f9ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800f9a4:	445a      	add	r2, fp
 800f9a6:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800f9aa:	e79e      	b.n	800f8ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800f9ac:	eb0b 0302 	add.w	r3, fp, r2
 800f9b0:	9a03      	ldr	r2, [sp, #12]
 800f9b2:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800f9b6:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800f9ba:	4429      	add	r1, r5
 800f9bc:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800f9c0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800f9c4:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800f9c8:	e5a9      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800f9ca:	9b06      	ldr	r3, [sp, #24]
 800f9cc:	9c07      	ldr	r4, [sp, #28]
 800f9ce:	eba3 020e 	sub.w	r2, r3, lr
 800f9d2:	b292      	uxth	r2, r2
 800f9d4:	2c06      	cmp	r4, #6
 800f9d6:	b213      	sxth	r3, r2
 800f9d8:	d80d      	bhi.n	800f9f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800f9da:	4651      	mov	r1, sl
 800f9dc:	aa0a      	add	r2, sp, #40	; 0x28
 800f9de:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800f9e2:	6849      	ldr	r1, [r1, #4]
 800f9e4:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800f9e8:	9b05      	ldr	r3, [sp, #20]
 800f9ea:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800f9ee:	c203      	stmia	r2!, {r0, r1}
 800f9f0:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800f9f4:	e758      	b.n	800f8a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800f9f6:	9c00      	ldr	r4, [sp, #0]
 800f9f8:	4563      	cmp	r3, ip
 800f9fa:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800f9fe:	db0d      	blt.n	800fa1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800fa00:	4429      	add	r1, r5
 800fa02:	9a04      	ldr	r2, [sp, #16]
 800fa04:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fa08:	b289      	uxth	r1, r1
 800fa0a:	445c      	add	r4, fp
 800fa0c:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800fa10:	4411      	add	r1, r2
 800fa12:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800fa16:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800fa1a:	e580      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800fa1c:	445c      	add	r4, fp
 800fa1e:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800fa22:	e79e      	b.n	800f962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800fa24:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800fa28:	2f07      	cmp	r7, #7
 800fa2a:	d806      	bhi.n	800fa3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800fa2c:	ab08      	add	r3, sp, #32
 800fa2e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800fa32:	9801      	ldr	r0, [sp, #4]
 800fa34:	f7ff fd44 	bl	800f4c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800fa38:	e5db      	b.n	800f5f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800fa3a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800fa3e:	f107 39ff 	add.w	r9, r7, #4294967295
 800fa42:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800fa46:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800fa4a:	f04f 35ff 	mov.w	r5, #4294967295
 800fa4e:	2400      	movs	r4, #0
 800fa50:	9304      	str	r3, [sp, #16]
 800fa52:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800fa56:	9300      	str	r3, [sp, #0]
 800fa58:	f109 32ff 	add.w	r2, r9, #4294967295
 800fa5c:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800fa60:	9303      	str	r3, [sp, #12]
 800fa62:	4690      	mov	r8, r2
 800fa64:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800fa68:	f1b8 3fff 	cmp.w	r8, #4294967295
 800fa6c:	bf14      	ite	ne
 800fa6e:	9904      	ldrne	r1, [sp, #16]
 800fa70:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800fa74:	6818      	ldr	r0, [r3, #0]
 800fa76:	9206      	str	r2, [sp, #24]
 800fa78:	bf18      	it	ne
 800fa7a:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800fa7e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800fa82:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800fa86:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800fa8a:	9305      	str	r3, [sp, #20]
 800fa8c:	fb16 f601 	smulbb	r6, r6, r1
 800fa90:	6859      	ldr	r1, [r3, #4]
 800fa92:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fa96:	4671      	mov	r1, lr
 800fa98:	a80a      	add	r0, sp, #40	; 0x28
 800fa9a:	f7ff fc09 	bl	800f2b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fa9e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800faa2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800faa6:	9b03      	ldr	r3, [sp, #12]
 800faa8:	9a00      	ldr	r2, [sp, #0]
 800faaa:	fb11 f100 	smulbb	r1, r1, r0
 800faae:	fb02 6603 	mla	r6, r2, r3, r6
 800fab2:	1b8e      	subs	r6, r1, r6
 800fab4:	2008      	movs	r0, #8
 800fab6:	fb91 f1f0 	sdiv	r1, r1, r0
 800faba:	42b1      	cmp	r1, r6
 800fabc:	dc21      	bgt.n	800fb02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800fabe:	4556      	cmp	r6, sl
 800fac0:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800fac4:	da03      	bge.n	800face <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800fac6:	b1e6      	cbz	r6, 800fb02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800fac8:	46b2      	mov	sl, r6
 800faca:	4645      	mov	r5, r8
 800facc:	464c      	mov	r4, r9
 800face:	f108 38ff 	add.w	r8, r8, #4294967295
 800fad2:	f118 0f02 	cmn.w	r8, #2
 800fad6:	d1c7      	bne.n	800fa68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800fad8:	f1b2 3fff 	cmp.w	r2, #4294967295
 800fadc:	f1a7 0708 	sub.w	r7, r7, #8
 800fae0:	4691      	mov	r9, r2
 800fae2:	d1b6      	bne.n	800fa52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800fae4:	9b01      	ldr	r3, [sp, #4]
 800fae6:	b2a6      	uxth	r6, r4
 800fae8:	00e4      	lsls	r4, r4, #3
 800faea:	1918      	adds	r0, r3, r4
 800faec:	1c6b      	adds	r3, r5, #1
 800faee:	d10b      	bne.n	800fb08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800faf0:	4601      	mov	r1, r0
 800faf2:	9802      	ldr	r0, [sp, #8]
 800faf4:	f7ff fbdc 	bl	800f2b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800faf8:	4631      	mov	r1, r6
 800fafa:	9801      	ldr	r0, [sp, #4]
 800fafc:	f7ff fcca 	bl	800f494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800fb00:	e50d      	b.n	800f51e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800fb02:	4645      	mov	r5, r8
 800fb04:	464c      	mov	r4, r9
 800fb06:	e7ed      	b.n	800fae4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800fb08:	9b01      	ldr	r3, [sp, #4]
 800fb0a:	00ed      	lsls	r5, r5, #3
 800fb0c:	1959      	adds	r1, r3, r5
 800fb0e:	f7ff fbcf 	bl	800f2b0 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800fb12:	9b02      	ldr	r3, [sp, #8]
 800fb14:	cb03      	ldmia	r3!, {r0, r1}
 800fb16:	445d      	add	r5, fp
 800fb18:	445c      	add	r4, fp
 800fb1a:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800fb1e:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800fb22:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800fb26:	9b02      	ldr	r3, [sp, #8]
 800fb28:	6861      	ldr	r1, [r4, #4]
 800fb2a:	c303      	stmia	r3!, {r0, r1}
 800fb2c:	e7e4      	b.n	800faf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800fb30 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fb30:	b530      	push	{r4, r5, lr}
 800fb32:	4b1d      	ldr	r3, [pc, #116]	; (800fba8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800fb34:	b085      	sub	sp, #20
 800fb36:	460c      	mov	r4, r1
 800fb38:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb3c:	4b1b      	ldr	r3, [pc, #108]	; (800fbac <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800fb3e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fb42:	2100      	movs	r1, #0
 800fb44:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb48:	9100      	str	r1, [sp, #0]
 800fb4a:	4605      	mov	r5, r0
 800fb4c:	6861      	ldr	r1, [r4, #4]
 800fb4e:	6820      	ldr	r0, [r4, #0]
 800fb50:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fb54:	ab02      	add	r3, sp, #8
 800fb56:	c303      	stmia	r3!, {r0, r1}
 800fb58:	4669      	mov	r1, sp
 800fb5a:	a802      	add	r0, sp, #8
 800fb5c:	f7fa ff24 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800fb60:	ab02      	add	r3, sp, #8
 800fb62:	cb03      	ldmia	r3!, {r0, r1}
 800fb64:	4b12      	ldr	r3, [pc, #72]	; (800fbb0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800fb66:	6020      	str	r0, [r4, #0]
 800fb68:	6818      	ldr	r0, [r3, #0]
 800fb6a:	6061      	str	r1, [r4, #4]
 800fb6c:	b138      	cbz	r0, 800fb7e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800fb6e:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800fb72:	b133      	cbz	r3, 800fb82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800fb74:	6821      	ldr	r1, [r4, #0]
 800fb76:	6862      	ldr	r2, [r4, #4]
 800fb78:	4628      	mov	r0, r5
 800fb7a:	f7ff fcc3 	bl	800f504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800fb7e:	b005      	add	sp, #20
 800fb80:	bd30      	pop	{r4, r5, pc}
 800fb82:	6803      	ldr	r3, [r0, #0]
 800fb84:	4621      	mov	r1, r4
 800fb86:	689b      	ldr	r3, [r3, #8]
 800fb88:	4798      	blx	r3
 800fb8a:	4b0a      	ldr	r3, [pc, #40]	; (800fbb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800fb8c:	6818      	ldr	r0, [r3, #0]
 800fb8e:	b118      	cbz	r0, 800fb98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800fb90:	6803      	ldr	r3, [r0, #0]
 800fb92:	4621      	mov	r1, r4
 800fb94:	689b      	ldr	r3, [r3, #8]
 800fb96:	4798      	blx	r3
 800fb98:	4b07      	ldr	r3, [pc, #28]	; (800fbb8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800fb9a:	6818      	ldr	r0, [r3, #0]
 800fb9c:	6803      	ldr	r3, [r0, #0]
 800fb9e:	4621      	mov	r1, r4
 800fba0:	695b      	ldr	r3, [r3, #20]
 800fba2:	4798      	blx	r3
 800fba4:	e7eb      	b.n	800fb7e <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800fba6:	bf00      	nop
 800fba8:	2000d400 	.word	0x2000d400
 800fbac:	2000d402 	.word	0x2000d402
 800fbb0:	2000d468 	.word	0x2000d468
 800fbb4:	2000d464 	.word	0x2000d464
 800fbb8:	2000d40c 	.word	0x2000d40c

0800fbbc <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800fbbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbc0:	4604      	mov	r4, r0
 800fbc2:	b09b      	sub	sp, #108	; 0x6c
 800fbc4:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800fbc8:	b129      	cbz	r1, 800fbd6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800fbca:	2300      	movs	r3, #0
 800fbcc:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800fbd0:	b01b      	add	sp, #108	; 0x6c
 800fbd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbd6:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800fbda:	4630      	mov	r0, r6
 800fbdc:	f7fa ff27 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbe0:	4605      	mov	r5, r0
 800fbe2:	b940      	cbnz	r0, 800fbf6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800fbe4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800fbe8:	4620      	mov	r0, r4
 800fbea:	f7ff fc8b 	bl	800f504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800fbee:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800fbf2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800fbf6:	4ba6      	ldr	r3, [pc, #664]	; (800fe90 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 800fbf8:	681b      	ldr	r3, [r3, #0]
 800fbfa:	b33b      	cbz	r3, 800fc4c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800fbfc:	4da5      	ldr	r5, [pc, #660]	; (800fe94 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800fbfe:	4628      	mov	r0, r5
 800fc00:	f7fa ff15 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc04:	4606      	mov	r6, r0
 800fc06:	bb08      	cbnz	r0, 800fc4c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800fc08:	4628      	mov	r0, r5
 800fc0a:	f7ff f98d 	bl	800ef28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800fc0e:	6829      	ldr	r1, [r5, #0]
 800fc10:	686a      	ldr	r2, [r5, #4]
 800fc12:	4620      	mov	r0, r4
 800fc14:	f7ff fc76 	bl	800f504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800fc18:	802e      	strh	r6, [r5, #0]
 800fc1a:	806e      	strh	r6, [r5, #2]
 800fc1c:	80ae      	strh	r6, [r5, #4]
 800fc1e:	80ee      	strh	r6, [r5, #6]
 800fc20:	4f9d      	ldr	r7, [pc, #628]	; (800fe98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800fc22:	a809      	add	r0, sp, #36	; 0x24
 800fc24:	f7ff fbe3 	bl	800f3ee <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fc28:	883d      	ldrh	r5, [r7, #0]
 800fc2a:	462e      	mov	r6, r5
 800fc2c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800fc30:	42b3      	cmp	r3, r6
 800fc32:	d910      	bls.n	800fc56 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800fc34:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800fc38:	a809      	add	r0, sp, #36	; 0x24
 800fc3a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800fc3e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800fc42:	3601      	adds	r6, #1
 800fc44:	f7ff fc3c 	bl	800f4c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800fc48:	b2b6      	uxth	r6, r6
 800fc4a:	e7ef      	b.n	800fc2c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800fc4c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800fc50:	2b00      	cmp	r3, #0
 800fc52:	d1e5      	bne.n	800fc20 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800fc54:	e7bc      	b.n	800fbd0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800fc56:	462e      	mov	r6, r5
 800fc58:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800fc5c:	42b3      	cmp	r3, r6
 800fc5e:	d90b      	bls.n	800fc78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800fc60:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800fc64:	4620      	mov	r0, r4
 800fc66:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800fc6a:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800fc6e:	3601      	adds	r6, #1
 800fc70:	f7ff fc48 	bl	800f504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800fc74:	b2b6      	uxth	r6, r6
 800fc76:	e7ef      	b.n	800fc58 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800fc78:	4a88      	ldr	r2, [pc, #544]	; (800fe9c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800fc7a:	6813      	ldr	r3, [r2, #0]
 800fc7c:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800fc80:	2b01      	cmp	r3, #1
 800fc82:	4690      	mov	r8, r2
 800fc84:	f040 8093 	bne.w	800fdae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 800fc88:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800fc8c:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800fc90:	33aa      	adds	r3, #170	; 0xaa
 800fc92:	f04f 0900 	mov.w	r9, #0
 800fc96:	42a8      	cmp	r0, r5
 800fc98:	f103 0308 	add.w	r3, r3, #8
 800fc9c:	dd0a      	ble.n	800fcb4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800fc9e:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800fca2:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800fca6:	440a      	add	r2, r1
 800fca8:	b212      	sxth	r2, r2
 800fcaa:	4591      	cmp	r9, r2
 800fcac:	bfb8      	it	lt
 800fcae:	4691      	movlt	r9, r2
 800fcb0:	3501      	adds	r5, #1
 800fcb2:	e7f0      	b.n	800fc96 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800fcb4:	4b7a      	ldr	r3, [pc, #488]	; (800fea0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800fcb6:	4e7b      	ldr	r6, [pc, #492]	; (800fea4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800fcb8:	881d      	ldrh	r5, [r3, #0]
 800fcba:	2300      	movs	r3, #0
 800fcbc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800fcc0:	2d0f      	cmp	r5, #15
 800fcc2:	bf8c      	ite	hi
 800fcc4:	08ed      	lsrhi	r5, r5, #3
 800fcc6:	2501      	movls	r5, #1
 800fcc8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800fccc:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800fcd0:	f8d8 0000 	ldr.w	r0, [r8]
 800fcd4:	440b      	add	r3, r1
 800fcd6:	b21b      	sxth	r3, r3
 800fcd8:	4599      	cmp	r9, r3
 800fcda:	6802      	ldr	r2, [r0, #0]
 800fcdc:	dd4a      	ble.n	800fd74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 800fcde:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800fce2:	4798      	blx	r3
 800fce4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800fce8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800fcec:	4413      	add	r3, r2
 800fcee:	b21b      	sxth	r3, r3
 800fcf0:	195a      	adds	r2, r3, r5
 800fcf2:	4290      	cmp	r0, r2
 800fcf4:	da07      	bge.n	800fd06 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800fcf6:	4581      	cmp	r9, r0
 800fcf8:	dd05      	ble.n	800fd06 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800fcfa:	4298      	cmp	r0, r3
 800fcfc:	da33      	bge.n	800fd66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800fcfe:	2b00      	cmp	r3, #0
 800fd00:	dd31      	ble.n	800fd66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800fd02:	4648      	mov	r0, r9
 800fd04:	e004      	b.n	800fd10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800fd06:	4298      	cmp	r0, r3
 800fd08:	dbfb      	blt.n	800fd02 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800fd0a:	4548      	cmp	r0, r9
 800fd0c:	bfa8      	it	ge
 800fd0e:	4648      	movge	r0, r9
 800fd10:	f9b6 2000 	ldrsh.w	r2, [r6]
 800fd14:	f8b7 a000 	ldrh.w	sl, [r7]
 800fd18:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fd1c:	2100      	movs	r1, #0
 800fd1e:	1ac0      	subs	r0, r0, r3
 800fd20:	f8ad 1014 	strh.w	r1, [sp, #20]
 800fd24:	f8ad 2018 	strh.w	r2, [sp, #24]
 800fd28:	f8ad 001a 	strh.w	r0, [sp, #26]
 800fd2c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800fd30:	4553      	cmp	r3, sl
 800fd32:	d9c9      	bls.n	800fcc8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800fd34:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800fd38:	ab07      	add	r3, sp, #28
 800fd3a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800fd3e:	6851      	ldr	r1, [r2, #4]
 800fd40:	c303      	stmia	r3!, {r0, r1}
 800fd42:	a807      	add	r0, sp, #28
 800fd44:	a905      	add	r1, sp, #20
 800fd46:	f7fa fe2f 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 800fd4a:	a807      	add	r0, sp, #28
 800fd4c:	f7fa fe6f 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fd50:	b920      	cbnz	r0, 800fd5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800fd52:	6823      	ldr	r3, [r4, #0]
 800fd54:	a907      	add	r1, sp, #28
 800fd56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fd58:	4620      	mov	r0, r4
 800fd5a:	4798      	blx	r3
 800fd5c:	f10a 0a01 	add.w	sl, sl, #1
 800fd60:	fa1f fa8a 	uxth.w	sl, sl
 800fd64:	e7e2      	b.n	800fd2c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800fd66:	f8d8 0000 	ldr.w	r0, [r8]
 800fd6a:	6803      	ldr	r3, [r0, #0]
 800fd6c:	2101      	movs	r1, #1
 800fd6e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800fd70:	4798      	blx	r3
 800fd72:	e7a9      	b.n	800fcc8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800fd74:	69d3      	ldr	r3, [r2, #28]
 800fd76:	4798      	blx	r3
 800fd78:	4b4b      	ldr	r3, [pc, #300]	; (800fea8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800fd7a:	781b      	ldrb	r3, [r3, #0]
 800fd7c:	2b00      	cmp	r3, #0
 800fd7e:	f43f af27 	beq.w	800fbd0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800fd82:	2300      	movs	r3, #0
 800fd84:	883d      	ldrh	r5, [r7, #0]
 800fd86:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800fd8a:	34ea      	adds	r4, #234	; 0xea
 800fd8c:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800fd90:	42ab      	cmp	r3, r5
 800fd92:	f67f af1d 	bls.w	800fbd0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800fd96:	ab1a      	add	r3, sp, #104	; 0x68
 800fd98:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800fd9c:	3b44      	subs	r3, #68	; 0x44
 800fd9e:	e893 0006 	ldmia.w	r3, {r1, r2}
 800fda2:	4620      	mov	r0, r4
 800fda4:	3501      	adds	r5, #1
 800fda6:	f7ff fb8b 	bl	800f4c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800fdaa:	b2ad      	uxth	r5, r5
 800fdac:	e7ee      	b.n	800fd8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 800fdae:	2b02      	cmp	r3, #2
 800fdb0:	f040 813c 	bne.w	801002c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>
 800fdb4:	4b3d      	ldr	r3, [pc, #244]	; (800feac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800fdb6:	781b      	ldrb	r3, [r3, #0]
 800fdb8:	2b01      	cmp	r3, #1
 800fdba:	d02c      	beq.n	800fe16 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 800fdbc:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800fdc0:	883a      	ldrh	r2, [r7, #0]
 800fdc2:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800fdc6:	3201      	adds	r2, #1
 800fdc8:	b292      	uxth	r2, r2
 800fdca:	2900      	cmp	r1, #0
 800fdcc:	d0d4      	beq.n	800fd78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800fdce:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800fdd2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800fdd6:	441d      	add	r5, r3
 800fdd8:	b22d      	sxth	r5, r5
 800fdda:	4610      	mov	r0, r2
 800fddc:	f04f 0a00 	mov.w	sl, #0
 800fde0:	b283      	uxth	r3, r0
 800fde2:	4299      	cmp	r1, r3
 800fde4:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800fde8:	f240 80c4 	bls.w	800ff74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 800fdec:	4426      	add	r6, r4
 800fdee:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800fdf2:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800fdf6:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800fdfa:	4573      	cmp	r3, lr
 800fdfc:	4684      	mov	ip, r0
 800fdfe:	f340 80a6 	ble.w	800ff4e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 800fe02:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800fe06:	4475      	add	r5, lr
 800fe08:	b22d      	sxth	r5, r5
 800fe0a:	429d      	cmp	r5, r3
 800fe0c:	bfa8      	it	ge
 800fe0e:	461d      	movge	r5, r3
 800fe10:	3001      	adds	r0, #1
 800fe12:	46e2      	mov	sl, ip
 800fe14:	e7e4      	b.n	800fde0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 800fe16:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800fe1a:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800fe1e:	f1bb 0f00 	cmp.w	fp, #0
 800fe22:	d0a9      	beq.n	800fd78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800fe24:	883b      	ldrh	r3, [r7, #0]
 800fe26:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800fe2a:	3301      	adds	r3, #1
 800fe2c:	b29b      	uxth	r3, r3
 800fe2e:	2600      	movs	r6, #0
 800fe30:	b299      	uxth	r1, r3
 800fe32:	458b      	cmp	fp, r1
 800fe34:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800fe38:	d93a      	bls.n	800feb0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800fe3a:	4425      	add	r5, r4
 800fe3c:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800fe40:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800fe44:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800fe48:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800fe4c:	4408      	add	r0, r1
 800fe4e:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800fe52:	4471      	add	r1, lr
 800fe54:	b200      	sxth	r0, r0
 800fe56:	b209      	sxth	r1, r1
 800fe58:	4288      	cmp	r0, r1
 800fe5a:	469c      	mov	ip, r3
 800fe5c:	da06      	bge.n	800fe6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b0>
 800fe5e:	4586      	cmp	lr, r0
 800fe60:	4672      	mov	r2, lr
 800fe62:	bfb8      	it	lt
 800fe64:	4602      	movlt	r2, r0
 800fe66:	3301      	adds	r3, #1
 800fe68:	4666      	mov	r6, ip
 800fe6a:	e7e1      	b.n	800fe30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 800fe6c:	d10b      	bne.n	800fe86 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ca>
 800fe6e:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800fe72:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800fe76:	458c      	cmp	ip, r1
 800fe78:	bfb4      	ite	lt
 800fe7a:	469c      	movlt	ip, r3
 800fe7c:	46b4      	movge	ip, r6
 800fe7e:	4572      	cmp	r2, lr
 800fe80:	bfb8      	it	lt
 800fe82:	4672      	movlt	r2, lr
 800fe84:	e7ef      	b.n	800fe66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800fe86:	428a      	cmp	r2, r1
 800fe88:	bfb8      	it	lt
 800fe8a:	460a      	movlt	r2, r1
 800fe8c:	46b4      	mov	ip, r6
 800fe8e:	e7ea      	b.n	800fe66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800fe90:	2000d464 	.word	0x2000d464
 800fe94:	2000d470 	.word	0x2000d470
 800fe98:	20000060 	.word	0x20000060
 800fe9c:	2000d40c 	.word	0x2000d40c
 800fea0:	2000d402 	.word	0x2000d402
 800fea4:	2000d400 	.word	0x2000d400
 800fea8:	2000d40a 	.word	0x2000d40a
 800feac:	2000d404 	.word	0x2000d404
 800feb0:	1961      	adds	r1, r4, r5
 800feb2:	ab07      	add	r3, sp, #28
 800feb4:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800feb8:	6849      	ldr	r1, [r1, #4]
 800feba:	c303      	stmia	r3!, {r0, r1}
 800febc:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800fec0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800fec4:	2b13      	cmp	r3, #19
 800fec6:	bfd8      	it	le
 800fec8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800fecc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800fed0:	440b      	add	r3, r1
 800fed2:	1a9b      	subs	r3, r3, r2
 800fed4:	a807      	add	r0, sp, #28
 800fed6:	f8ad 3020 	strh.w	r3, [sp, #32]
 800feda:	f7ff f89b 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800fede:	a807      	add	r0, sp, #28
 800fee0:	f7fa fda5 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800fee4:	2800      	cmp	r0, #0
 800fee6:	d198      	bne.n	800fe1a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800fee8:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800feec:	f8d8 0000 	ldr.w	r0, [r8]
 800fef0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800fef4:	f8d0 e000 	ldr.w	lr, [r0]
 800fef8:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800fefc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ff00:	f1bc 0f14 	cmp.w	ip, #20
 800ff04:	bfa8      	it	ge
 800ff06:	f04f 0c14 	movge.w	ip, #20
 800ff0a:	fa1f fc8c 	uxth.w	ip, ip
 800ff0e:	f8cd c000 	str.w	ip, [sp]
 800ff12:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 800ff16:	47d0      	blx	sl
 800ff18:	4682      	mov	sl, r0
 800ff1a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ff1e:	a807      	add	r0, sp, #28
 800ff20:	f7ff f802 	bl	800ef28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ff24:	6823      	ldr	r3, [r4, #0]
 800ff26:	4425      	add	r5, r4
 800ff28:	4620      	mov	r0, r4
 800ff2a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ff2c:	a907      	add	r1, sp, #28
 800ff2e:	4798      	blx	r3
 800ff30:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800ff34:	eba0 000a 	sub.w	r0, r0, sl
 800ff38:	b200      	sxth	r0, r0
 800ff3a:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800ff3e:	2800      	cmp	r0, #0
 800ff40:	f47f af6b 	bne.w	800fe1a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800ff44:	b2b1      	uxth	r1, r6
 800ff46:	4648      	mov	r0, r9
 800ff48:	f7ff faa4 	bl	800f494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ff4c:	e765      	b.n	800fe1a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800ff4e:	d10c      	bne.n	800ff6a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 800ff50:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800ff54:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800ff58:	45b4      	cmp	ip, r6
 800ff5a:	bfb4      	ite	lt
 800ff5c:	4684      	movlt	ip, r0
 800ff5e:	46d4      	movge	ip, sl
 800ff60:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800ff64:	4433      	add	r3, r6
 800ff66:	b21b      	sxth	r3, r3
 800ff68:	e74f      	b.n	800fe0a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 800ff6a:	4575      	cmp	r5, lr
 800ff6c:	bfa8      	it	ge
 800ff6e:	4675      	movge	r5, lr
 800ff70:	46d4      	mov	ip, sl
 800ff72:	e74d      	b.n	800fe10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 800ff74:	eb0b 0006 	add.w	r0, fp, r6
 800ff78:	4426      	add	r6, r4
 800ff7a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800ff7e:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800ff82:	f1b9 0f13 	cmp.w	r9, #19
 800ff86:	bfde      	ittt	le
 800ff88:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800ff8c:	444d      	addle	r5, r9
 800ff8e:	b22d      	sxthle	r5, r5
 800ff90:	f7fa fd4d 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff94:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ff98:	2800      	cmp	r0, #0
 800ff9a:	f47f af16 	bne.w	800fdca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 800ff9e:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800ffa2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ffa6:	eba5 050c 	sub.w	r5, r5, ip
 800ffaa:	fa1f f28c 	uxth.w	r2, ip
 800ffae:	fa1f f989 	uxth.w	r9, r9
 800ffb2:	eb02 0009 	add.w	r0, r2, r9
 800ffb6:	2d14      	cmp	r5, #20
 800ffb8:	bfa8      	it	ge
 800ffba:	2514      	movge	r5, #20
 800ffbc:	b200      	sxth	r0, r0
 800ffbe:	fa1f fe85 	uxth.w	lr, r5
 800ffc2:	eba0 000c 	sub.w	r0, r0, ip
 800ffc6:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800ffca:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800ffce:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ffd2:	4586      	cmp	lr, r0
 800ffd4:	f8d8 0000 	ldr.w	r0, [r8]
 800ffd8:	f8ad c01e 	strh.w	ip, [sp, #30]
 800ffdc:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ffe0:	bfb8      	it	lt
 800ffe2:	46f1      	movlt	r9, lr
 800ffe4:	6805      	ldr	r5, [r0, #0]
 800ffe6:	f8cd 9000 	str.w	r9, [sp]
 800ffea:	b29b      	uxth	r3, r3
 800ffec:	b289      	uxth	r1, r1
 800ffee:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 800fff0:	47a8      	blx	r5
 800fff2:	6823      	ldr	r3, [r4, #0]
 800fff4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800fff8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fffa:	a907      	add	r1, sp, #28
 800fffc:	4620      	mov	r0, r4
 800fffe:	4798      	blx	r3
 8010000:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8010004:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 8010008:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 801000c:	1a5b      	subs	r3, r3, r1
 801000e:	440a      	add	r2, r1
 8010010:	b21b      	sxth	r3, r3
 8010012:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 8010016:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 801001a:	2b00      	cmp	r3, #0
 801001c:	f47f aed0 	bne.w	800fdc0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 8010020:	fa1f f18a 	uxth.w	r1, sl
 8010024:	4658      	mov	r0, fp
 8010026:	f7ff fa35 	bl	800f494 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801002a:	e6c9      	b.n	800fdc0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 801002c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8010030:	42ab      	cmp	r3, r5
 8010032:	f67f aea1 	bls.w	800fd78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 8010036:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801003a:	ab07      	add	r3, sp, #28
 801003c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8010040:	6851      	ldr	r1, [r2, #4]
 8010042:	c303      	stmia	r3!, {r0, r1}
 8010044:	a807      	add	r0, sp, #28
 8010046:	f7fa fcf2 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 801004a:	b920      	cbnz	r0, 8010056 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49a>
 801004c:	6823      	ldr	r3, [r4, #0]
 801004e:	a907      	add	r1, sp, #28
 8010050:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010052:	4620      	mov	r0, r4
 8010054:	4798      	blx	r3
 8010056:	3501      	adds	r5, #1
 8010058:	b2ad      	uxth	r5, r5
 801005a:	e7e7      	b.n	801002c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>

0801005c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801005c:	4b03      	ldr	r3, [pc, #12]	; (801006c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801005e:	2200      	movs	r2, #0
 8010060:	801a      	strh	r2, [r3, #0]
 8010062:	805a      	strh	r2, [r3, #2]
 8010064:	809a      	strh	r2, [r3, #4]
 8010066:	80da      	strh	r2, [r3, #6]
 8010068:	4770      	bx	lr
 801006a:	bf00      	nop
 801006c:	2000d470 	.word	0x2000d470

08010070 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010074:	4607      	mov	r7, r0
 8010076:	b099      	sub	sp, #100	; 0x64
 8010078:	a802      	add	r0, sp, #8
 801007a:	4614      	mov	r4, r2
 801007c:	461d      	mov	r5, r3
 801007e:	468a      	mov	sl, r1
 8010080:	f000 ff08 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 8010084:	683b      	ldr	r3, [r7, #0]
 8010086:	4638      	mov	r0, r7
 8010088:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801008a:	4798      	blx	r3
 801008c:	462a      	mov	r2, r5
 801008e:	4603      	mov	r3, r0
 8010090:	4621      	mov	r1, r4
 8010092:	a802      	add	r0, sp, #8
 8010094:	f000 ff43 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8010098:	2500      	movs	r5, #0
 801009a:	462c      	mov	r4, r5
 801009c:	46a9      	mov	r9, r5
 801009e:	46a8      	mov	r8, r5
 80100a0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80100a4:	2300      	movs	r3, #0
 80100a6:	9301      	str	r3, [sp, #4]
 80100a8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80100ac:	429c      	cmp	r4, r3
 80100ae:	d002      	beq.n	80100b6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 80100b0:	455c      	cmp	r4, fp
 80100b2:	bf18      	it	ne
 80100b4:	4625      	movne	r5, r4
 80100b6:	ab01      	add	r3, sp, #4
 80100b8:	463a      	mov	r2, r7
 80100ba:	4651      	mov	r1, sl
 80100bc:	a802      	add	r0, sp, #8
 80100be:	f001 fa27 	bl	8011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80100c2:	4604      	mov	r4, r0
 80100c4:	b108      	cbz	r0, 80100ca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 80100c6:	280a      	cmp	r0, #10
 80100c8:	d10a      	bne.n	80100e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 80100ca:	45c1      	cmp	r9, r8
 80100cc:	bf38      	it	cc
 80100ce:	46c1      	movcc	r9, r8
 80100d0:	f04f 0800 	mov.w	r8, #0
 80100d4:	2c00      	cmp	r4, #0
 80100d6:	d1e5      	bne.n	80100a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 80100d8:	4648      	mov	r0, r9
 80100da:	b019      	add	sp, #100	; 0x64
 80100dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100e0:	9a01      	ldr	r2, [sp, #4]
 80100e2:	2a00      	cmp	r2, #0
 80100e4:	d0de      	beq.n	80100a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 80100e6:	7b56      	ldrb	r6, [r2, #13]
 80100e8:	683b      	ldr	r3, [r7, #0]
 80100ea:	8894      	ldrh	r4, [r2, #4]
 80100ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80100ee:	0076      	lsls	r6, r6, #1
 80100f0:	f406 7080 	and.w	r0, r6, #256	; 0x100
 80100f4:	7a96      	ldrb	r6, [r2, #10]
 80100f6:	4629      	mov	r1, r5
 80100f8:	4306      	orrs	r6, r0
 80100fa:	4638      	mov	r0, r7
 80100fc:	4798      	blx	r3
 80100fe:	4430      	add	r0, r6
 8010100:	4480      	add	r8, r0
 8010102:	fa1f f888 	uxth.w	r8, r8
 8010106:	e7e5      	b.n	80100d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

08010108 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010108:	b508      	push	{r3, lr}
 801010a:	6803      	ldr	r3, [r0, #0]
 801010c:	68db      	ldr	r3, [r3, #12]
 801010e:	4798      	blx	r3
 8010110:	b128      	cbz	r0, 801011e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010112:	7b43      	ldrb	r3, [r0, #13]
 8010114:	7a80      	ldrb	r0, [r0, #10]
 8010116:	005b      	lsls	r3, r3, #1
 8010118:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801011c:	4318      	orrs	r0, r3
 801011e:	bd08      	pop	{r3, pc}

08010120 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010120:	b40e      	push	{r1, r2, r3}
 8010122:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010124:	b098      	sub	sp, #96	; 0x60
 8010126:	ab1d      	add	r3, sp, #116	; 0x74
 8010128:	4605      	mov	r5, r0
 801012a:	f853 4b04 	ldr.w	r4, [r3], #4
 801012e:	9300      	str	r3, [sp, #0]
 8010130:	a802      	add	r0, sp, #8
 8010132:	f000 feaf 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 8010136:	682b      	ldr	r3, [r5, #0]
 8010138:	4628      	mov	r0, r5
 801013a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801013c:	4798      	blx	r3
 801013e:	ae18      	add	r6, sp, #96	; 0x60
 8010140:	4603      	mov	r3, r0
 8010142:	4621      	mov	r1, r4
 8010144:	9a00      	ldr	r2, [sp, #0]
 8010146:	2400      	movs	r4, #0
 8010148:	a802      	add	r0, sp, #8
 801014a:	f000 fee8 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801014e:	f846 4d5c 	str.w	r4, [r6, #-92]!
 8010152:	462a      	mov	r2, r5
 8010154:	4633      	mov	r3, r6
 8010156:	4621      	mov	r1, r4
 8010158:	a802      	add	r0, sp, #8
 801015a:	f001 f9d9 	bl	8011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801015e:	b1f0      	cbz	r0, 801019e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 8010160:	280a      	cmp	r0, #10
 8010162:	d018      	beq.n	8010196 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 8010164:	9f01      	ldr	r7, [sp, #4]
 8010166:	b1b7      	cbz	r7, 8010196 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 8010168:	7b78      	ldrb	r0, [r7, #13]
 801016a:	7a3b      	ldrb	r3, [r7, #8]
 801016c:	88aa      	ldrh	r2, [r5, #4]
 801016e:	00c1      	lsls	r1, r0, #3
 8010170:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8010174:	4319      	orrs	r1, r3
 8010176:	0643      	lsls	r3, r0, #25
 8010178:	bf44      	itt	mi
 801017a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801017e:	b219      	sxthmi	r1, r3
 8010180:	0100      	lsls	r0, r0, #4
 8010182:	79fb      	ldrb	r3, [r7, #7]
 8010184:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010188:	4303      	orrs	r3, r0
 801018a:	4413      	add	r3, r2
 801018c:	1a5b      	subs	r3, r3, r1
 801018e:	b29b      	uxth	r3, r3
 8010190:	42a3      	cmp	r3, r4
 8010192:	bfc8      	it	gt
 8010194:	b21c      	sxthgt	r4, r3
 8010196:	4633      	mov	r3, r6
 8010198:	462a      	mov	r2, r5
 801019a:	2100      	movs	r1, #0
 801019c:	e7dc      	b.n	8010158 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 801019e:	b2a0      	uxth	r0, r4
 80101a0:	b018      	add	sp, #96	; 0x60
 80101a2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80101a6:	b003      	add	sp, #12
 80101a8:	4770      	bx	lr

080101aa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80101aa:	b40e      	push	{r1, r2, r3}
 80101ac:	b530      	push	{r4, r5, lr}
 80101ae:	b098      	sub	sp, #96	; 0x60
 80101b0:	ab1b      	add	r3, sp, #108	; 0x6c
 80101b2:	4604      	mov	r4, r0
 80101b4:	f853 5b04 	ldr.w	r5, [r3], #4
 80101b8:	9301      	str	r3, [sp, #4]
 80101ba:	a802      	add	r0, sp, #8
 80101bc:	f000 fe6a 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 80101c0:	6823      	ldr	r3, [r4, #0]
 80101c2:	4620      	mov	r0, r4
 80101c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80101c6:	4798      	blx	r3
 80101c8:	9a01      	ldr	r2, [sp, #4]
 80101ca:	4603      	mov	r3, r0
 80101cc:	4629      	mov	r1, r5
 80101ce:	a802      	add	r0, sp, #8
 80101d0:	f000 fea5 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 80101d4:	a802      	add	r0, sp, #8
 80101d6:	f001 fa93 	bl	8011700 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80101da:	2401      	movs	r4, #1
 80101dc:	b2a3      	uxth	r3, r4
 80101de:	b140      	cbz	r0, 80101f2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 80101e0:	280a      	cmp	r0, #10
 80101e2:	bf08      	it	eq
 80101e4:	3301      	addeq	r3, #1
 80101e6:	a802      	add	r0, sp, #8
 80101e8:	bf08      	it	eq
 80101ea:	b21c      	sxtheq	r4, r3
 80101ec:	f001 fa88 	bl	8011700 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80101f0:	e7f4      	b.n	80101dc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 80101f2:	4618      	mov	r0, r3
 80101f4:	b018      	add	sp, #96	; 0x60
 80101f6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80101fa:	b003      	add	sp, #12
 80101fc:	4770      	bx	lr

080101fe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80101fe:	b40e      	push	{r1, r2, r3}
 8010200:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010202:	b098      	sub	sp, #96	; 0x60
 8010204:	ab1d      	add	r3, sp, #116	; 0x74
 8010206:	4604      	mov	r4, r0
 8010208:	f853 5b04 	ldr.w	r5, [r3], #4
 801020c:	9300      	str	r3, [sp, #0]
 801020e:	a802      	add	r0, sp, #8
 8010210:	f000 fe40 	bl	8010e94 <_ZN8touchgfx12TextProviderC1Ev>
 8010214:	6823      	ldr	r3, [r4, #0]
 8010216:	4620      	mov	r0, r4
 8010218:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801021a:	4798      	blx	r3
 801021c:	4629      	mov	r1, r5
 801021e:	4603      	mov	r3, r0
 8010220:	9a00      	ldr	r2, [sp, #0]
 8010222:	a802      	add	r0, sp, #8
 8010224:	ad18      	add	r5, sp, #96	; 0x60
 8010226:	f000 fe7a 	bl	8010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801022a:	2100      	movs	r1, #0
 801022c:	f845 1d5c 	str.w	r1, [r5, #-92]!
 8010230:	4622      	mov	r2, r4
 8010232:	462b      	mov	r3, r5
 8010234:	a802      	add	r0, sp, #8
 8010236:	f001 f96b 	bl	8011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801023a:	26ff      	movs	r6, #255	; 0xff
 801023c:	b1d8      	cbz	r0, 8010276 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801023e:	280a      	cmp	r0, #10
 8010240:	d012      	beq.n	8010268 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 8010242:	9801      	ldr	r0, [sp, #4]
 8010244:	b180      	cbz	r0, 8010268 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 8010246:	7b47      	ldrb	r7, [r0, #13]
 8010248:	7922      	ldrb	r2, [r4, #4]
 801024a:	00fb      	lsls	r3, r7, #3
 801024c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010250:	7a03      	ldrb	r3, [r0, #8]
 8010252:	430b      	orrs	r3, r1
 8010254:	0679      	lsls	r1, r7, #25
 8010256:	bf44      	itt	mi
 8010258:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801025c:	b21b      	sxthmi	r3, r3
 801025e:	1ad3      	subs	r3, r2, r3
 8010260:	b2db      	uxtb	r3, r3
 8010262:	429e      	cmp	r6, r3
 8010264:	bf28      	it	cs
 8010266:	461e      	movcs	r6, r3
 8010268:	462b      	mov	r3, r5
 801026a:	4622      	mov	r2, r4
 801026c:	2100      	movs	r1, #0
 801026e:	a802      	add	r0, sp, #8
 8010270:	f001 f94e 	bl	8011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010274:	e7e2      	b.n	801023c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 8010276:	4630      	mov	r0, r6
 8010278:	b018      	add	sp, #96	; 0x60
 801027a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801027e:	b003      	add	sp, #12
 8010280:	4770      	bx	lr

08010282 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010282:	b513      	push	{r0, r1, r4, lr}
 8010284:	1d01      	adds	r1, r0, #4
 8010286:	4603      	mov	r3, r0
 8010288:	c903      	ldmia	r1, {r0, r1}
 801028a:	466a      	mov	r2, sp
 801028c:	e882 0003 	stmia.w	r2, {r0, r1}
 8010290:	2100      	movs	r1, #0
 8010292:	9100      	str	r1, [sp, #0]
 8010294:	6819      	ldr	r1, [r3, #0]
 8010296:	4618      	mov	r0, r3
 8010298:	690c      	ldr	r4, [r1, #16]
 801029a:	4611      	mov	r1, r2
 801029c:	47a0      	blx	r4
 801029e:	b002      	add	sp, #8
 80102a0:	bd10      	pop	{r4, pc}

080102a2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80102a2:	b538      	push	{r3, r4, r5, lr}
 80102a4:	680b      	ldr	r3, [r1, #0]
 80102a6:	460c      	mov	r4, r1
 80102a8:	68db      	ldr	r3, [r3, #12]
 80102aa:	4605      	mov	r5, r0
 80102ac:	4798      	blx	r3
 80102ae:	6823      	ldr	r3, [r4, #0]
 80102b0:	4620      	mov	r0, r4
 80102b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80102b4:	4629      	mov	r1, r5
 80102b6:	4798      	blx	r3
 80102b8:	4628      	mov	r0, r5
 80102ba:	bd38      	pop	{r3, r4, r5, pc}

080102bc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80102bc:	b410      	push	{r4}
 80102be:	880a      	ldrh	r2, [r1, #0]
 80102c0:	8884      	ldrh	r4, [r0, #4]
 80102c2:	4422      	add	r2, r4
 80102c4:	800a      	strh	r2, [r1, #0]
 80102c6:	88c4      	ldrh	r4, [r0, #6]
 80102c8:	884a      	ldrh	r2, [r1, #2]
 80102ca:	4422      	add	r2, r4
 80102cc:	804a      	strh	r2, [r1, #2]
 80102ce:	6940      	ldr	r0, [r0, #20]
 80102d0:	b120      	cbz	r0, 80102dc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80102d2:	6803      	ldr	r3, [r0, #0]
 80102d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80102d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80102da:	4718      	bx	r3
 80102dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80102e0:	4770      	bx	lr

080102e2 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80102e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80102e4:	460b      	mov	r3, r1
 80102e6:	b085      	sub	sp, #20
 80102e8:	4604      	mov	r4, r0
 80102ea:	b901      	cbnz	r1, 80102ee <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80102ec:	b322      	cbz	r2, 8010338 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 80102ee:	1d27      	adds	r7, r4, #4
 80102f0:	e897 0003 	ldmia.w	r7, {r0, r1}
 80102f4:	466e      	mov	r6, sp
 80102f6:	e886 0003 	stmia.w	r6, {r0, r1}
 80102fa:	88a1      	ldrh	r1, [r4, #4]
 80102fc:	88e5      	ldrh	r5, [r4, #6]
 80102fe:	4419      	add	r1, r3
 8010300:	6823      	ldr	r3, [r4, #0]
 8010302:	442a      	add	r2, r5
 8010304:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010306:	b209      	sxth	r1, r1
 8010308:	4620      	mov	r0, r4
 801030a:	b215      	sxth	r5, r2
 801030c:	4798      	blx	r3
 801030e:	6823      	ldr	r3, [r4, #0]
 8010310:	4629      	mov	r1, r5
 8010312:	4620      	mov	r0, r4
 8010314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010316:	4798      	blx	r3
 8010318:	e897 0003 	ldmia.w	r7, {r0, r1}
 801031c:	ad02      	add	r5, sp, #8
 801031e:	e885 0003 	stmia.w	r5, {r0, r1}
 8010322:	6960      	ldr	r0, [r4, #20]
 8010324:	b150      	cbz	r0, 801033c <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 8010326:	6803      	ldr	r3, [r0, #0]
 8010328:	4631      	mov	r1, r6
 801032a:	691b      	ldr	r3, [r3, #16]
 801032c:	4798      	blx	r3
 801032e:	6960      	ldr	r0, [r4, #20]
 8010330:	6803      	ldr	r3, [r0, #0]
 8010332:	691b      	ldr	r3, [r3, #16]
 8010334:	4629      	mov	r1, r5
 8010336:	4798      	blx	r3
 8010338:	b005      	add	sp, #20
 801033a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801033c:	f7fe fffe 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8010340:	6803      	ldr	r3, [r0, #0]
 8010342:	4631      	mov	r1, r6
 8010344:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010346:	4798      	blx	r3
 8010348:	f7fe fff8 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 801034c:	6803      	ldr	r3, [r0, #0]
 801034e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010350:	e7f0      	b.n	8010334 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

08010352 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010352:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010354:	8882      	ldrh	r2, [r0, #4]
 8010356:	880b      	ldrh	r3, [r1, #0]
 8010358:	4413      	add	r3, r2
 801035a:	800b      	strh	r3, [r1, #0]
 801035c:	88c2      	ldrh	r2, [r0, #6]
 801035e:	884b      	ldrh	r3, [r1, #2]
 8010360:	4413      	add	r3, r2
 8010362:	4602      	mov	r2, r0
 8010364:	804b      	strh	r3, [r1, #2]
 8010366:	4605      	mov	r5, r0
 8010368:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801036c:	460c      	mov	r4, r1
 801036e:	6851      	ldr	r1, [r2, #4]
 8010370:	466b      	mov	r3, sp
 8010372:	c303      	stmia	r3!, {r0, r1}
 8010374:	4621      	mov	r1, r4
 8010376:	4668      	mov	r0, sp
 8010378:	f7fa fb16 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 801037c:	466b      	mov	r3, sp
 801037e:	cb03      	ldmia	r3!, {r0, r1}
 8010380:	6020      	str	r0, [r4, #0]
 8010382:	6061      	str	r1, [r4, #4]
 8010384:	6968      	ldr	r0, [r5, #20]
 8010386:	b128      	cbz	r0, 8010394 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 8010388:	6803      	ldr	r3, [r0, #0]
 801038a:	691b      	ldr	r3, [r3, #16]
 801038c:	4621      	mov	r1, r4
 801038e:	4798      	blx	r3
 8010390:	b003      	add	sp, #12
 8010392:	bd30      	pop	{r4, r5, pc}
 8010394:	f7fe ffd2 	bl	800f33c <_ZN8touchgfx11Application11getInstanceEv>
 8010398:	6803      	ldr	r3, [r0, #0]
 801039a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801039c:	e7f6      	b.n	801038c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0801039e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801039e:	b570      	push	{r4, r5, r6, lr}
 80103a0:	8882      	ldrh	r2, [r0, #4]
 80103a2:	880b      	ldrh	r3, [r1, #0]
 80103a4:	4413      	add	r3, r2
 80103a6:	800b      	strh	r3, [r1, #0]
 80103a8:	88c2      	ldrh	r2, [r0, #6]
 80103aa:	884b      	ldrh	r3, [r1, #2]
 80103ac:	460c      	mov	r4, r1
 80103ae:	4413      	add	r3, r2
 80103b0:	804b      	strh	r3, [r1, #2]
 80103b2:	4605      	mov	r5, r0
 80103b4:	1d01      	adds	r1, r0, #4
 80103b6:	4620      	mov	r0, r4
 80103b8:	f7fa faf6 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 80103bc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80103c0:	2b00      	cmp	r3, #0
 80103c2:	dd0b      	ble.n	80103dc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80103c4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80103c8:	2b00      	cmp	r3, #0
 80103ca:	dd07      	ble.n	80103dc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80103cc:	6968      	ldr	r0, [r5, #20]
 80103ce:	b128      	cbz	r0, 80103dc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80103d0:	6803      	ldr	r3, [r0, #0]
 80103d2:	4621      	mov	r1, r4
 80103d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80103d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103da:	4718      	bx	r3
 80103dc:	bd70      	pop	{r4, r5, r6, pc}

080103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80103de:	b510      	push	{r4, lr}
 80103e0:	4604      	mov	r4, r0
 80103e2:	4608      	mov	r0, r1
 80103e4:	2300      	movs	r3, #0
 80103e6:	8023      	strh	r3, [r4, #0]
 80103e8:	8063      	strh	r3, [r4, #2]
 80103ea:	6803      	ldr	r3, [r0, #0]
 80103ec:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80103f0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80103f4:	80a1      	strh	r1, [r4, #4]
 80103f6:	80e2      	strh	r2, [r4, #6]
 80103f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80103fa:	4621      	mov	r1, r4
 80103fc:	4798      	blx	r3
 80103fe:	4620      	mov	r0, r4
 8010400:	bd10      	pop	{r4, pc}
	...

08010404 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8010404:	b530      	push	{r4, r5, lr}
 8010406:	8083      	strh	r3, [r0, #4]
 8010408:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801040c:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8010410:	7183      	strb	r3, [r0, #6]
 8010412:	79c3      	ldrb	r3, [r0, #7]
 8010414:	6101      	str	r1, [r0, #16]
 8010416:	f365 0306 	bfi	r3, r5, #0, #7
 801041a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801041e:	8282      	strh	r2, [r0, #20]
 8010420:	f365 13c7 	bfi	r3, r5, #7, #1
 8010424:	71c3      	strb	r3, [r0, #7]
 8010426:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801042a:	7203      	strb	r3, [r0, #8]
 801042c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8010430:	7243      	strb	r3, [r0, #9]
 8010432:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010436:	8143      	strh	r3, [r0, #10]
 8010438:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801043c:	8183      	strh	r3, [r0, #12]
 801043e:	4b01      	ldr	r3, [pc, #4]	; (8010444 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8010440:	6003      	str	r3, [r0, #0]
 8010442:	bd30      	pop	{r4, r5, pc}
 8010444:	0802348c 	.word	0x0802348c

08010448 <_ZNK8touchgfx9ConstFont4findEt>:
 8010448:	b5f0      	push	{r4, r5, r6, r7, lr}
 801044a:	6904      	ldr	r4, [r0, #16]
 801044c:	b3bc      	cbz	r4, 80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801044e:	88a3      	ldrh	r3, [r4, #4]
 8010450:	8a82      	ldrh	r2, [r0, #20]
 8010452:	1acb      	subs	r3, r1, r3
 8010454:	f102 32ff 	add.w	r2, r2, #4294967295
 8010458:	d431      	bmi.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801045a:	4293      	cmp	r3, r2
 801045c:	dd0c      	ble.n	8010478 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801045e:	230e      	movs	r3, #14
 8010460:	fb03 4302 	mla	r3, r3, r2, r4
 8010464:	889b      	ldrh	r3, [r3, #4]
 8010466:	1a5b      	subs	r3, r3, r1
 8010468:	1ad3      	subs	r3, r2, r3
 801046a:	429a      	cmp	r2, r3
 801046c:	db27      	blt.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801046e:	2b00      	cmp	r3, #0
 8010470:	bfbc      	itt	lt
 8010472:	2302      	movlt	r3, #2
 8010474:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010478:	2500      	movs	r5, #0
 801047a:	260e      	movs	r6, #14
 801047c:	4295      	cmp	r5, r2
 801047e:	dc1e      	bgt.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010480:	fb06 4003 	mla	r0, r6, r3, r4
 8010484:	8887      	ldrh	r7, [r0, #4]
 8010486:	42b9      	cmp	r1, r7
 8010488:	d01a      	beq.n	80104c0 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801048a:	d20d      	bcs.n	80104a8 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801048c:	1e5a      	subs	r2, r3, #1
 801048e:	4295      	cmp	r5, r2
 8010490:	dc15      	bgt.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010492:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8010496:	1a5b      	subs	r3, r3, r1
 8010498:	1ad3      	subs	r3, r2, r3
 801049a:	429a      	cmp	r2, r3
 801049c:	db0f      	blt.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801049e:	429d      	cmp	r5, r3
 80104a0:	ddec      	ble.n	801047c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80104a2:	1953      	adds	r3, r2, r5
 80104a4:	105b      	asrs	r3, r3, #1
 80104a6:	e7e9      	b.n	801047c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80104a8:	1c5d      	adds	r5, r3, #1
 80104aa:	42aa      	cmp	r2, r5
 80104ac:	db07      	blt.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80104ae:	8a43      	ldrh	r3, [r0, #18]
 80104b0:	1acb      	subs	r3, r1, r3
 80104b2:	442b      	add	r3, r5
 80104b4:	429d      	cmp	r5, r3
 80104b6:	dc02      	bgt.n	80104be <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80104b8:	429a      	cmp	r2, r3
 80104ba:	dadf      	bge.n	801047c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80104bc:	e7f1      	b.n	80104a2 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80104be:	2000      	movs	r0, #0
 80104c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080104c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80104c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80104c4:	4604      	mov	r4, r0
 80104c6:	4617      	mov	r7, r2
 80104c8:	461e      	mov	r6, r3
 80104ca:	b911      	cbnz	r1, 80104d2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80104cc:	2500      	movs	r5, #0
 80104ce:	4628      	mov	r0, r5
 80104d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80104d2:	290a      	cmp	r1, #10
 80104d4:	d0fa      	beq.n	80104cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80104d6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80104da:	4291      	cmp	r1, r2
 80104dc:	d0f6      	beq.n	80104cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80104de:	f242 020b 	movw	r2, #8203	; 0x200b
 80104e2:	4291      	cmp	r1, r2
 80104e4:	d0f2      	beq.n	80104cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80104e6:	f7ff ffaf 	bl	8010448 <_ZNK8touchgfx9ConstFont4findEt>
 80104ea:	4605      	mov	r5, r0
 80104ec:	b950      	cbnz	r0, 8010504 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80104ee:	6823      	ldr	r3, [r4, #0]
 80104f0:	4620      	mov	r0, r4
 80104f2:	691b      	ldr	r3, [r3, #16]
 80104f4:	4798      	blx	r3
 80104f6:	4601      	mov	r1, r0
 80104f8:	4620      	mov	r0, r4
 80104fa:	f7ff ffa5 	bl	8010448 <_ZNK8touchgfx9ConstFont4findEt>
 80104fe:	4605      	mov	r5, r0
 8010500:	2800      	cmp	r0, #0
 8010502:	d0e3      	beq.n	80104cc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8010504:	6823      	ldr	r3, [r4, #0]
 8010506:	4629      	mov	r1, r5
 8010508:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801050a:	4620      	mov	r0, r4
 801050c:	4798      	blx	r3
 801050e:	6038      	str	r0, [r7, #0]
 8010510:	6823      	ldr	r3, [r4, #0]
 8010512:	4620      	mov	r0, r4
 8010514:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010516:	4798      	blx	r3
 8010518:	7030      	strb	r0, [r6, #0]
 801051a:	e7d8      	b.n	80104ce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801051c <_ZN8touchgfx6memsetEPvhm>:
 801051c:	4402      	add	r2, r0
 801051e:	4290      	cmp	r0, r2
 8010520:	d002      	beq.n	8010528 <_ZN8touchgfx6memsetEPvhm+0xc>
 8010522:	f800 1b01 	strb.w	r1, [r0], #1
 8010526:	e7fa      	b.n	801051e <_ZN8touchgfx6memsetEPvhm+0x2>
 8010528:	4770      	bx	lr

0801052a <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 801052a:	b538      	push	{r3, r4, r5, lr}
 801052c:	4605      	mov	r5, r0
 801052e:	f001 fead 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010532:	4604      	mov	r4, r0
 8010534:	4628      	mov	r0, r5
 8010536:	f001 fde5 	bl	8012104 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801053a:	2800      	cmp	r0, #0
 801053c:	bf14      	ite	ne
 801053e:	2002      	movne	r0, #2
 8010540:	2000      	moveq	r0, #0
 8010542:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8010546:	b280      	uxth	r0, r0
 8010548:	bd38      	pop	{r3, r4, r5, pc}

0801054a <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 801054a:	b538      	push	{r3, r4, r5, lr}
 801054c:	4605      	mov	r5, r0
 801054e:	f001 fe9d 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010552:	4604      	mov	r4, r0
 8010554:	4628      	mov	r0, r5
 8010556:	f001 fdd5 	bl	8012104 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801055a:	2800      	cmp	r0, #0
 801055c:	bf14      	ite	ne
 801055e:	2002      	movne	r0, #2
 8010560:	2000      	moveq	r0, #0
 8010562:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8010566:	f040 0001 	orr.w	r0, r0, #1
 801056a:	b280      	uxth	r0, r0
 801056c:	bd38      	pop	{r3, r4, r5, pc}

0801056e <_ZN8touchgfx4clzuEm>:
 801056e:	4603      	mov	r3, r0
 8010570:	b1c8      	cbz	r0, 80105a6 <_ZN8touchgfx4clzuEm+0x38>
 8010572:	0c02      	lsrs	r2, r0, #16
 8010574:	0412      	lsls	r2, r2, #16
 8010576:	b9a2      	cbnz	r2, 80105a2 <_ZN8touchgfx4clzuEm+0x34>
 8010578:	0403      	lsls	r3, r0, #16
 801057a:	2010      	movs	r0, #16
 801057c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010580:	bf04      	itt	eq
 8010582:	021b      	lsleq	r3, r3, #8
 8010584:	3008      	addeq	r0, #8
 8010586:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801058a:	bf04      	itt	eq
 801058c:	011b      	lsleq	r3, r3, #4
 801058e:	3004      	addeq	r0, #4
 8010590:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010594:	bf04      	itt	eq
 8010596:	009b      	lsleq	r3, r3, #2
 8010598:	3002      	addeq	r0, #2
 801059a:	2b00      	cmp	r3, #0
 801059c:	db04      	blt.n	80105a8 <_ZN8touchgfx4clzuEm+0x3a>
 801059e:	3001      	adds	r0, #1
 80105a0:	4770      	bx	lr
 80105a2:	2000      	movs	r0, #0
 80105a4:	e7ea      	b.n	801057c <_ZN8touchgfx4clzuEm+0xe>
 80105a6:	2020      	movs	r0, #32
 80105a8:	4770      	bx	lr

080105aa <_ZN8touchgfx7muldivuEmmmRm>:
 80105aa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105ae:	4680      	mov	r8, r0
 80105b0:	460f      	mov	r7, r1
 80105b2:	4615      	mov	r5, r2
 80105b4:	461e      	mov	r6, r3
 80105b6:	f7ff ffda 	bl	801056e <_ZN8touchgfx4clzuEm>
 80105ba:	b998      	cbnz	r0, 80105e4 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 80105bc:	4608      	mov	r0, r1
 80105be:	f7ff ffd6 	bl	801056e <_ZN8touchgfx4clzuEm>
 80105c2:	2800      	cmp	r0, #0
 80105c4:	dd08      	ble.n	80105d8 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 80105c6:	4633      	mov	r3, r6
 80105c8:	462a      	mov	r2, r5
 80105ca:	4641      	mov	r1, r8
 80105cc:	4638      	mov	r0, r7
 80105ce:	f7ff ffec 	bl	80105aa <_ZN8touchgfx7muldivuEmmmRm>
 80105d2:	b003      	add	sp, #12
 80105d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105d8:	f04f 33ff 	mov.w	r3, #4294967295
 80105dc:	6033      	str	r3, [r6, #0]
 80105de:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80105e2:	e7f6      	b.n	80105d2 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80105e4:	fa31 f900 	lsrs.w	r9, r1, r0
 80105e8:	fb01 f308 	mul.w	r3, r1, r8
 80105ec:	d105      	bne.n	80105fa <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80105ee:	fbb3 f0f5 	udiv	r0, r3, r5
 80105f2:	fb05 3510 	mls	r5, r5, r0, r3
 80105f6:	6035      	str	r5, [r6, #0]
 80105f8:	e7eb      	b.n	80105d2 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80105fa:	2301      	movs	r3, #1
 80105fc:	fa08 fb00 	lsl.w	fp, r8, r0
 8010600:	fa03 f000 	lsl.w	r0, r3, r0
 8010604:	3801      	subs	r0, #1
 8010606:	462a      	mov	r2, r5
 8010608:	4633      	mov	r3, r6
 801060a:	4641      	mov	r1, r8
 801060c:	4038      	ands	r0, r7
 801060e:	f7ff ffcc 	bl	80105aa <_ZN8touchgfx7muldivuEmmmRm>
 8010612:	fbbb faf5 	udiv	sl, fp, r5
 8010616:	462a      	mov	r2, r5
 8010618:	4607      	mov	r7, r0
 801061a:	ab01      	add	r3, sp, #4
 801061c:	fb05 b11a 	mls	r1, r5, sl, fp
 8010620:	4648      	mov	r0, r9
 8010622:	f7ff ffc2 	bl	80105aa <_ZN8touchgfx7muldivuEmmmRm>
 8010626:	9b01      	ldr	r3, [sp, #4]
 8010628:	6832      	ldr	r2, [r6, #0]
 801062a:	fb09 f40a 	mul.w	r4, r9, sl
 801062e:	441a      	add	r2, r3
 8010630:	fbb2 f3f5 	udiv	r3, r2, r5
 8010634:	441c      	add	r4, r3
 8010636:	443c      	add	r4, r7
 8010638:	4420      	add	r0, r4
 801063a:	fb05 2513 	mls	r5, r5, r3, r2
 801063e:	e7da      	b.n	80105f6 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08010640 <_ZN8touchgfx6muldivElllRl>:
 8010640:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010642:	2800      	cmp	r0, #0
 8010644:	bfba      	itte	lt
 8010646:	4240      	neglt	r0, r0
 8010648:	f04f 34ff 	movlt.w	r4, #4294967295
 801064c:	2401      	movge	r4, #1
 801064e:	2900      	cmp	r1, #0
 8010650:	bfbc      	itt	lt
 8010652:	4249      	neglt	r1, r1
 8010654:	4264      	neglt	r4, r4
 8010656:	2a00      	cmp	r2, #0
 8010658:	bfb6      	itet	lt
 801065a:	4265      	neglt	r5, r4
 801065c:	4625      	movge	r5, r4
 801065e:	4252      	neglt	r2, r2
 8010660:	4288      	cmp	r0, r1
 8010662:	461e      	mov	r6, r3
 8010664:	bfc2      	ittt	gt
 8010666:	4603      	movgt	r3, r0
 8010668:	4608      	movgt	r0, r1
 801066a:	4619      	movgt	r1, r3
 801066c:	ab01      	add	r3, sp, #4
 801066e:	f7ff ff9c 	bl	80105aa <_ZN8touchgfx7muldivuEmmmRm>
 8010672:	9b01      	ldr	r3, [sp, #4]
 8010674:	4368      	muls	r0, r5
 8010676:	435c      	muls	r4, r3
 8010678:	6034      	str	r4, [r6, #0]
 801067a:	b002      	add	sp, #8
 801067c:	bd70      	pop	{r4, r5, r6, pc}

0801067e <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 801067e:	2000      	movs	r0, #0
 8010680:	4770      	bx	lr

08010682 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 8010682:	2001      	movs	r0, #1
 8010684:	4770      	bx	lr

08010686 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 8010686:	2002      	movs	r0, #2
 8010688:	4770      	bx	lr

0801068a <_ZN8touchgfx6ScreenD1Ev>:
 801068a:	4770      	bx	lr

0801068c <_ZN8touchgfx12GestureEventD1Ev>:
 801068c:	4770      	bx	lr

0801068e <_ZN8touchgfx9DragEventD1Ev>:
 801068e:	4770      	bx	lr

08010690 <_ZN8touchgfx10ClickEventD1Ev>:
 8010690:	4770      	bx	lr

08010692 <_ZN8touchgfx10ClickEventD0Ev>:
 8010692:	b510      	push	{r4, lr}
 8010694:	210c      	movs	r1, #12
 8010696:	4604      	mov	r4, r0
 8010698:	f00e fe7d 	bl	801f396 <_ZdlPvj>
 801069c:	4620      	mov	r0, r4
 801069e:	bd10      	pop	{r4, pc}

080106a0 <_ZN8touchgfx9DragEventD0Ev>:
 80106a0:	b510      	push	{r4, lr}
 80106a2:	2110      	movs	r1, #16
 80106a4:	4604      	mov	r4, r0
 80106a6:	f00e fe76 	bl	801f396 <_ZdlPvj>
 80106aa:	4620      	mov	r0, r4
 80106ac:	bd10      	pop	{r4, pc}

080106ae <_ZN8touchgfx12GestureEventD0Ev>:
 80106ae:	b510      	push	{r4, lr}
 80106b0:	210c      	movs	r1, #12
 80106b2:	4604      	mov	r4, r0
 80106b4:	f00e fe6f 	bl	801f396 <_ZdlPvj>
 80106b8:	4620      	mov	r0, r4
 80106ba:	bd10      	pop	{r4, pc}

080106bc <_ZN8touchgfx6ScreenD0Ev>:
 80106bc:	b510      	push	{r4, lr}
 80106be:	213c      	movs	r1, #60	; 0x3c
 80106c0:	4604      	mov	r4, r0
 80106c2:	f00e fe68 	bl	801f396 <_ZdlPvj>
 80106c6:	4620      	mov	r0, r4
 80106c8:	bd10      	pop	{r4, pc}
	...

080106cc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80106cc:	b530      	push	{r4, r5, lr}
 80106ce:	460d      	mov	r5, r1
 80106d0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80106d2:	b087      	sub	sp, #28
 80106d4:	4604      	mov	r4, r0
 80106d6:	b301      	cbz	r1, 801071a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80106d8:	a801      	add	r0, sp, #4
 80106da:	f7ff fe80 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80106de:	892a      	ldrh	r2, [r5, #8]
 80106e0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80106e4:	7928      	ldrb	r0, [r5, #4]
 80106e6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80106ea:	f88d 0010 	strb.w	r0, [sp, #16]
 80106ee:	1ad2      	subs	r2, r2, r3
 80106f0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80106f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80106f4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80106f8:	441a      	add	r2, r3
 80106fa:	896b      	ldrh	r3, [r5, #10]
 80106fc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8010700:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010704:	1b5b      	subs	r3, r3, r5
 8010706:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8010708:	442b      	add	r3, r5
 801070a:	4d05      	ldr	r5, [pc, #20]	; (8010720 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801070c:	9503      	str	r5, [sp, #12]
 801070e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010712:	6803      	ldr	r3, [r0, #0]
 8010714:	a903      	add	r1, sp, #12
 8010716:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010718:	4798      	blx	r3
 801071a:	b007      	add	sp, #28
 801071c:	bd30      	pop	{r4, r5, pc}
 801071e:	bf00      	nop
 8010720:	08023508 	.word	0x08023508

08010724 <_ZNK8touchgfx4Rect9intersectEss>:
 8010724:	b510      	push	{r4, lr}
 8010726:	f9b0 3000 	ldrsh.w	r3, [r0]
 801072a:	428b      	cmp	r3, r1
 801072c:	dc10      	bgt.n	8010750 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 801072e:	8884      	ldrh	r4, [r0, #4]
 8010730:	4423      	add	r3, r4
 8010732:	b21b      	sxth	r3, r3
 8010734:	4299      	cmp	r1, r3
 8010736:	da0b      	bge.n	8010750 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8010738:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801073c:	4293      	cmp	r3, r2
 801073e:	dc07      	bgt.n	8010750 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 8010740:	88c0      	ldrh	r0, [r0, #6]
 8010742:	4418      	add	r0, r3
 8010744:	b200      	sxth	r0, r0
 8010746:	4282      	cmp	r2, r0
 8010748:	bfac      	ite	ge
 801074a:	2000      	movge	r0, #0
 801074c:	2001      	movlt	r0, #1
 801074e:	bd10      	pop	{r4, pc}
 8010750:	2000      	movs	r0, #0
 8010752:	e7fc      	b.n	801074e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

08010754 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8010754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010756:	460c      	mov	r4, r1
 8010758:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801075a:	b089      	sub	sp, #36	; 0x24
 801075c:	4605      	mov	r5, r0
 801075e:	2900      	cmp	r1, #0
 8010760:	d054      	beq.n	801080c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 8010762:	4668      	mov	r0, sp
 8010764:	f7ff fe3b 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010768:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 801076a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 801076c:	8922      	ldrh	r2, [r4, #8]
 801076e:	88e1      	ldrh	r1, [r4, #6]
 8010770:	443a      	add	r2, r7
 8010772:	4431      	add	r1, r6
 8010774:	b212      	sxth	r2, r2
 8010776:	b209      	sxth	r1, r1
 8010778:	4668      	mov	r0, sp
 801077a:	f7ff ffd3 	bl	8010724 <_ZNK8touchgfx4Rect9intersectEss>
 801077e:	b1d0      	cbz	r0, 80107b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8010780:	89a2      	ldrh	r2, [r4, #12]
 8010782:	8961      	ldrh	r1, [r4, #10]
 8010784:	443a      	add	r2, r7
 8010786:	4431      	add	r1, r6
 8010788:	b212      	sxth	r2, r2
 801078a:	b209      	sxth	r1, r1
 801078c:	4668      	mov	r0, sp
 801078e:	f7ff ffc9 	bl	8010724 <_ZNK8touchgfx4Rect9intersectEss>
 8010792:	4603      	mov	r3, r0
 8010794:	b978      	cbnz	r0, 80107b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 8010796:	4a1e      	ldr	r2, [pc, #120]	; (8010810 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 8010798:	9204      	str	r2, [sp, #16]
 801079a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801079c:	f8ad 3016 	strh.w	r3, [sp, #22]
 80107a0:	2202      	movs	r2, #2
 80107a2:	f88d 2014 	strb.w	r2, [sp, #20]
 80107a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80107ae:	6803      	ldr	r3, [r0, #0]
 80107b0:	a904      	add	r1, sp, #16
 80107b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80107b4:	4798      	blx	r3
 80107b6:	6b29      	ldr	r1, [r5, #48]	; 0x30
 80107b8:	a802      	add	r0, sp, #8
 80107ba:	f7ff fe10 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107be:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80107c2:	88e0      	ldrh	r0, [r4, #6]
 80107c4:	8961      	ldrh	r1, [r4, #10]
 80107c6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80107ca:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 80107ce:	8923      	ldrh	r3, [r4, #8]
 80107d0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80107d2:	7927      	ldrb	r7, [r4, #4]
 80107d4:	f88d 7014 	strb.w	r7, [sp, #20]
 80107d8:	1a80      	subs	r0, r0, r2
 80107da:	1a89      	subs	r1, r1, r2
 80107dc:	89a2      	ldrh	r2, [r4, #12]
 80107de:	4c0d      	ldr	r4, [pc, #52]	; (8010814 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 80107e0:	9404      	str	r4, [sp, #16]
 80107e2:	4460      	add	r0, ip
 80107e4:	eba3 030e 	sub.w	r3, r3, lr
 80107e8:	eba2 020e 	sub.w	r2, r2, lr
 80107ec:	f8ad 0016 	strh.w	r0, [sp, #22]
 80107f0:	4433      	add	r3, r6
 80107f2:	4461      	add	r1, ip
 80107f4:	4432      	add	r2, r6
 80107f6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80107f8:	f8ad 101a 	strh.w	r1, [sp, #26]
 80107fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010800:	f8ad 201c 	strh.w	r2, [sp, #28]
 8010804:	6803      	ldr	r3, [r0, #0]
 8010806:	a904      	add	r1, sp, #16
 8010808:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801080a:	4798      	blx	r3
 801080c:	b009      	add	sp, #36	; 0x24
 801080e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010810:	080234e0 	.word	0x080234e0
 8010814:	080234f4 	.word	0x080234f4

08010818 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8010818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801081c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 8010820:	790b      	ldrb	r3, [r1, #4]
 8010822:	b0a1      	sub	sp, #132	; 0x84
 8010824:	4604      	mov	r4, r0
 8010826:	460d      	mov	r5, r1
 8010828:	f1b9 0f00 	cmp.w	r9, #0
 801082c:	d00f      	beq.n	801084e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 801082e:	2b00      	cmp	r3, #0
 8010830:	f040 80a0 	bne.w	8010974 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 8010834:	b021      	add	sp, #132	; 0x84
 8010836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801083a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801083e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 8010842:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8010846:	1d20      	adds	r0, r4, #4
 8010848:	f7f9 fff4 	bl	800a834 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801084c:	e092      	b.n	8010974 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 801084e:	2b00      	cmp	r3, #0
 8010850:	d1f0      	bne.n	8010834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 8010852:	4b5e      	ldr	r3, [pc, #376]	; (80109cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 8010854:	681b      	ldr	r3, [r3, #0]
 8010856:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 801085a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 801085e:	f1ba 0f03 	cmp.w	sl, #3
 8010862:	ddea      	ble.n	801083a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 8010864:	f1ba 0f0c 	cmp.w	sl, #12
 8010868:	f04f 0303 	mov.w	r3, #3
 801086c:	bfdc      	itt	le
 801086e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 8010872:	fb92 f3f3 	sdivle	r3, r2, r3
 8010876:	9301      	str	r3, [sp, #4]
 8010878:	4b55      	ldr	r3, [pc, #340]	; (80109d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 801087a:	4956      	ldr	r1, [pc, #344]	; (80109d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 801087c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010880:	4b55      	ldr	r3, [pc, #340]	; (80109d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 8010882:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010886:	f9b3 3000 	ldrsh.w	r3, [r3]
 801088a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801088e:	ab0e      	add	r3, sp, #56	; 0x38
 8010890:	2248      	movs	r2, #72	; 0x48
 8010892:	2600      	movs	r6, #0
 8010894:	4618      	mov	r0, r3
 8010896:	960a      	str	r6, [sp, #40]	; 0x28
 8010898:	f00e fe2a 	bl	801f4f0 <memcpy>
 801089c:	f04f 32ff 	mov.w	r2, #4294967295
 80108a0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80108a4:	f8cd a008 	str.w	sl, [sp, #8]
 80108a8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80108ac:	fb93 f3f2 	sdiv	r3, r3, r2
 80108b0:	b29b      	uxth	r3, r3
 80108b2:	46b3      	mov	fp, r6
 80108b4:	9303      	str	r3, [sp, #12]
 80108b6:	2300      	movs	r3, #0
 80108b8:	9309      	str	r3, [sp, #36]	; 0x24
 80108ba:	9b07      	ldr	r3, [sp, #28]
 80108bc:	9a03      	ldr	r2, [sp, #12]
 80108be:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 80108c2:	88ef      	ldrh	r7, [r5, #6]
 80108c4:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 80108c8:	fb13 f302 	smulbb	r3, r3, r2
 80108cc:	b29b      	uxth	r3, r3
 80108ce:	9304      	str	r3, [sp, #16]
 80108d0:	9b07      	ldr	r3, [sp, #28]
 80108d2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80108d6:	a80a      	add	r0, sp, #40	; 0x28
 80108d8:	685b      	ldr	r3, [r3, #4]
 80108da:	fb13 f302 	smulbb	r3, r3, r2
 80108de:	b29b      	uxth	r3, r3
 80108e0:	9305      	str	r3, [sp, #20]
 80108e2:	9b04      	ldr	r3, [sp, #16]
 80108e4:	441f      	add	r7, r3
 80108e6:	9b05      	ldr	r3, [sp, #20]
 80108e8:	4498      	add	r8, r3
 80108ea:	b23f      	sxth	r7, r7
 80108ec:	fa0f f888 	sxth.w	r8, r8
 80108f0:	4642      	mov	r2, r8
 80108f2:	4639      	mov	r1, r7
 80108f4:	f7ff ff16 	bl	8010724 <_ZNK8touchgfx4Rect9intersectEss>
 80108f8:	b380      	cbz	r0, 801095c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 80108fa:	4639      	mov	r1, r7
 80108fc:	ab09      	add	r3, sp, #36	; 0x24
 80108fe:	4642      	mov	r2, r8
 8010900:	1d20      	adds	r0, r4, #4
 8010902:	f7f9 ff97 	bl	800a834 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010906:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010908:	b341      	cbz	r1, 801095c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 801090a:	4549      	cmp	r1, r9
 801090c:	d026      	beq.n	801095c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 801090e:	a80c      	add	r0, sp, #48	; 0x30
 8010910:	f7ff fd65 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010914:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8010918:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801091c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8010920:	2002      	movs	r0, #2
 8010922:	fb92 f2f0 	sdiv	r2, r2, r0
 8010926:	440a      	add	r2, r1
 8010928:	1a99      	subs	r1, r3, r2
 801092a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801092e:	fb93 f3f0 	sdiv	r3, r3, r0
 8010932:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 8010936:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 801093a:	4403      	add	r3, r0
 801093c:	1ad3      	subs	r3, r2, r3
 801093e:	435b      	muls	r3, r3
 8010940:	9a06      	ldr	r2, [sp, #24]
 8010942:	fb01 3301 	mla	r3, r1, r1, r3
 8010946:	4293      	cmp	r3, r2
 8010948:	d208      	bcs.n	801095c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 801094a:	9a04      	ldr	r2, [sp, #16]
 801094c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8010950:	86a2      	strh	r2, [r4, #52]	; 0x34
 8010952:	9a05      	ldr	r2, [sp, #20]
 8010954:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 8010958:	86e2      	strh	r2, [r4, #54]	; 0x36
 801095a:	9306      	str	r3, [sp, #24]
 801095c:	f10b 0b02 	add.w	fp, fp, #2
 8010960:	f1bb 0f08 	cmp.w	fp, #8
 8010964:	dda7      	ble.n	80108b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8010966:	9b02      	ldr	r3, [sp, #8]
 8010968:	4453      	add	r3, sl
 801096a:	9302      	str	r3, [sp, #8]
 801096c:	9b01      	ldr	r3, [sp, #4]
 801096e:	3601      	adds	r6, #1
 8010970:	42b3      	cmp	r3, r6
 8010972:	d199      	bne.n	80108a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 8010974:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8010976:	2900      	cmp	r1, #0
 8010978:	f43f af5c 	beq.w	8010834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 801097c:	a80c      	add	r0, sp, #48	; 0x30
 801097e:	f7ff fd2e 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010982:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8010986:	88ea      	ldrh	r2, [r5, #6]
 8010988:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 801098c:	7929      	ldrb	r1, [r5, #4]
 801098e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 8010992:	1ad2      	subs	r2, r2, r3
 8010994:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010996:	441a      	add	r2, r3
 8010998:	892b      	ldrh	r3, [r5, #8]
 801099a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 801099e:	1a1b      	subs	r3, r3, r0
 80109a0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 80109a2:	4403      	add	r3, r0
 80109a4:	480d      	ldr	r0, [pc, #52]	; (80109dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 80109a6:	900e      	str	r0, [sp, #56]	; 0x38
 80109a8:	2600      	movs	r6, #0
 80109aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80109ac:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 80109b0:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 80109b4:	6803      	ldr	r3, [r0, #0]
 80109b6:	a90e      	add	r1, sp, #56	; 0x38
 80109b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80109ba:	4798      	blx	r3
 80109bc:	792b      	ldrb	r3, [r5, #4]
 80109be:	2b00      	cmp	r3, #0
 80109c0:	f43f af38 	beq.w	8010834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 80109c4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80109c8:	e734      	b.n	8010834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 80109ca:	bf00      	nop
 80109cc:	2000d40c 	.word	0x2000d40c
 80109d0:	2000d400 	.word	0x2000d400
 80109d4:	0802056c 	.word	0x0802056c
 80109d8:	2000d402 	.word	0x2000d402
 80109dc:	080234e0 	.word	0x080234e0

080109e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80109e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80109e2:	4604      	mov	r4, r0
 80109e4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80109e8:	3201      	adds	r2, #1
 80109ea:	d112      	bne.n	8010a12 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80109ec:	6803      	ldr	r3, [r0, #0]
 80109ee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80109f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80109f6:	f8ad 1004 	strh.w	r1, [sp, #4]
 80109fa:	2500      	movs	r5, #0
 80109fc:	9500      	str	r5, [sp, #0]
 80109fe:	466d      	mov	r5, sp
 8010a00:	4629      	mov	r1, r5
 8010a02:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010a06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a08:	4798      	blx	r3
 8010a0a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8010a0e:	e884 0003 	stmia.w	r4, {r0, r1}
 8010a12:	4620      	mov	r0, r4
 8010a14:	b003      	add	sp, #12
 8010a16:	bd30      	pop	{r4, r5, pc}

08010a18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8010a18:	b513      	push	{r0, r1, r4, lr}
 8010a1a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8010a1e:	3301      	adds	r3, #1
 8010a20:	4604      	mov	r4, r0
 8010a22:	d109      	bne.n	8010a38 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8010a24:	4601      	mov	r1, r0
 8010a26:	4668      	mov	r0, sp
 8010a28:	f7ff fcd9 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a2c:	f8bd 3000 	ldrh.w	r3, [sp]
 8010a30:	8423      	strh	r3, [r4, #32]
 8010a32:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a36:	8463      	strh	r3, [r4, #34]	; 0x22
 8010a38:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8010a3c:	b002      	add	sp, #8
 8010a3e:	bd10      	pop	{r4, pc}

08010a40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8010a40:	b513      	push	{r0, r1, r4, lr}
 8010a42:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8010a46:	3301      	adds	r3, #1
 8010a48:	4604      	mov	r4, r0
 8010a4a:	d109      	bne.n	8010a60 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8010a4c:	4601      	mov	r1, r0
 8010a4e:	4668      	mov	r0, sp
 8010a50:	f7ff fcc5 	bl	80103de <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a54:	f8bd 3000 	ldrh.w	r3, [sp]
 8010a58:	8423      	strh	r3, [r4, #32]
 8010a5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a5e:	8463      	strh	r3, [r4, #34]	; 0x22
 8010a60:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8010a64:	b002      	add	sp, #8
 8010a66:	bd10      	pop	{r4, pc}

08010a68 <_ZN8touchgfx6ScreenC1Ev>:
 8010a68:	b570      	push	{r4, r5, r6, lr}
 8010a6a:	4605      	mov	r5, r0
 8010a6c:	4b15      	ldr	r3, [pc, #84]	; (8010ac4 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 8010a6e:	f845 3b04 	str.w	r3, [r5], #4
 8010a72:	2300      	movs	r3, #0
 8010a74:	8103      	strh	r3, [r0, #8]
 8010a76:	8143      	strh	r3, [r0, #10]
 8010a78:	8183      	strh	r3, [r0, #12]
 8010a7a:	81c3      	strh	r3, [r0, #14]
 8010a7c:	8203      	strh	r3, [r0, #16]
 8010a7e:	8243      	strh	r3, [r0, #18]
 8010a80:	8283      	strh	r3, [r0, #20]
 8010a82:	82c3      	strh	r3, [r0, #22]
 8010a84:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8010a88:	6203      	str	r3, [r0, #32]
 8010a8a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8010a8e:	4a0e      	ldr	r2, [pc, #56]	; (8010ac8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8010a90:	6343      	str	r3, [r0, #52]	; 0x34
 8010a92:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8010a96:	4b0d      	ldr	r3, [pc, #52]	; (8010acc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8010a98:	6042      	str	r2, [r0, #4]
 8010a9a:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010a9e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8010aa0:	4a0b      	ldr	r2, [pc, #44]	; (8010ad0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8010aa2:	4604      	mov	r4, r0
 8010aa4:	2101      	movs	r1, #1
 8010aa6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8010aaa:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8010aae:	f9b2 1000 	ldrsh.w	r1, [r2]
 8010ab2:	4628      	mov	r0, r5
 8010ab4:	4798      	blx	r3
 8010ab6:	6863      	ldr	r3, [r4, #4]
 8010ab8:	4628      	mov	r0, r5
 8010aba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010abc:	4631      	mov	r1, r6
 8010abe:	4798      	blx	r3
 8010ac0:	4620      	mov	r0, r4
 8010ac2:	bd70      	pop	{r4, r5, r6, pc}
 8010ac4:	0802351c 	.word	0x0802351c
 8010ac8:	08022274 	.word	0x08022274
 8010acc:	2000d402 	.word	0x2000d402
 8010ad0:	2000d400 	.word	0x2000d400

08010ad4 <_ZN8touchgfx6Screen4drawEv>:
 8010ad4:	b507      	push	{r0, r1, r2, lr}
 8010ad6:	4b09      	ldr	r3, [pc, #36]	; (8010afc <_ZN8touchgfx6Screen4drawEv+0x28>)
 8010ad8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010adc:	4b08      	ldr	r3, [pc, #32]	; (8010b00 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8010ade:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010ae2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ae6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010aea:	6803      	ldr	r3, [r0, #0]
 8010aec:	2100      	movs	r1, #0
 8010aee:	9100      	str	r1, [sp, #0]
 8010af0:	689b      	ldr	r3, [r3, #8]
 8010af2:	4669      	mov	r1, sp
 8010af4:	4798      	blx	r3
 8010af6:	b003      	add	sp, #12
 8010af8:	f85d fb04 	ldr.w	pc, [sp], #4
 8010afc:	2000d400 	.word	0x2000d400
 8010b00:	2000d402 	.word	0x2000d402

08010b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8010b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b08:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8010b0c:	2b00      	cmp	r3, #0
 8010b0e:	b089      	sub	sp, #36	; 0x24
 8010b10:	4680      	mov	r8, r0
 8010b12:	460c      	mov	r4, r1
 8010b14:	4615      	mov	r5, r2
 8010b16:	dd0e      	ble.n	8010b36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010b18:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010b1c:	2b00      	cmp	r3, #0
 8010b1e:	dd0a      	ble.n	8010b36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010b20:	4628      	mov	r0, r5
 8010b22:	f7ff ff5d 	bl	80109e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010b26:	4621      	mov	r1, r4
 8010b28:	f7fe fb7e 	bl	800f228 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010b2c:	69eb      	ldr	r3, [r5, #28]
 8010b2e:	b928      	cbnz	r0, 8010b3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8010b30:	461d      	mov	r5, r3
 8010b32:	2b00      	cmp	r3, #0
 8010b34:	d1f4      	bne.n	8010b20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8010b36:	b009      	add	sp, #36	; 0x24
 8010b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b3c:	ae04      	add	r6, sp, #16
 8010b3e:	2b00      	cmp	r3, #0
 8010b40:	f000 80b5 	beq.w	8010cae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010b44:	682b      	ldr	r3, [r5, #0]
 8010b46:	4629      	mov	r1, r5
 8010b48:	68db      	ldr	r3, [r3, #12]
 8010b4a:	a802      	add	r0, sp, #8
 8010b4c:	4798      	blx	r3
 8010b4e:	4628      	mov	r0, r5
 8010b50:	f7ff ff62 	bl	8010a18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010b54:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8010b58:	4407      	add	r7, r0
 8010b5a:	4628      	mov	r0, r5
 8010b5c:	f7ff ff70 	bl	8010a40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010b60:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8010b64:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8010b68:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010b6c:	4418      	add	r0, r3
 8010b6e:	4621      	mov	r1, r4
 8010b70:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010b74:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010b78:	b23f      	sxth	r7, r7
 8010b7a:	4630      	mov	r0, r6
 8010b7c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010b80:	f8ad 7010 	strh.w	r7, [sp, #16]
 8010b84:	f7f9 ff10 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 8010b88:	4628      	mov	r0, r5
 8010b8a:	f7ff ff29 	bl	80109e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010b8e:	4602      	mov	r2, r0
 8010b90:	e896 0003 	ldmia.w	r6, {r0, r1}
 8010b94:	ab06      	add	r3, sp, #24
 8010b96:	e883 0003 	stmia.w	r3, {r0, r1}
 8010b9a:	4611      	mov	r1, r2
 8010b9c:	4618      	mov	r0, r3
 8010b9e:	f7f9 ff03 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 8010ba2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010ba6:	f9b4 1000 	ldrsh.w	r1, [r4]
 8010baa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8010bae:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8010bb2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8010bb6:	4299      	cmp	r1, r3
 8010bb8:	d10b      	bne.n	8010bd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010bba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010bbe:	4552      	cmp	r2, sl
 8010bc0:	d107      	bne.n	8010bd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010bc2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8010bc6:	455a      	cmp	r2, fp
 8010bc8:	d103      	bne.n	8010bd2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8010bca:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010bce:	454a      	cmp	r2, r9
 8010bd0:	d06d      	beq.n	8010cae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010bd2:	f1bb 0f00 	cmp.w	fp, #0
 8010bd6:	dd65      	ble.n	8010ca4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8010bd8:	f1b9 0f00 	cmp.w	r9, #0
 8010bdc:	dd62      	ble.n	8010ca4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8010bde:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8010be2:	fa1f f08a 	uxth.w	r0, sl
 8010be6:	4552      	cmp	r2, sl
 8010be8:	9000      	str	r0, [sp, #0]
 8010bea:	da12      	bge.n	8010c12 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8010bec:	9301      	str	r3, [sp, #4]
 8010bee:	9b00      	ldr	r3, [sp, #0]
 8010bf0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8010bf4:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010bf8:	1a9a      	subs	r2, r3, r2
 8010bfa:	f8ad 1010 	strh.w	r1, [sp, #16]
 8010bfe:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010c02:	f8ad 2016 	strh.w	r2, [sp, #22]
 8010c06:	69ea      	ldr	r2, [r5, #28]
 8010c08:	4631      	mov	r1, r6
 8010c0a:	4640      	mov	r0, r8
 8010c0c:	f7ff ff7a 	bl	8010b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010c10:	9b01      	ldr	r3, [sp, #4]
 8010c12:	f9b4 2000 	ldrsh.w	r2, [r4]
 8010c16:	429a      	cmp	r2, r3
 8010c18:	b29f      	uxth	r7, r3
 8010c1a:	da0d      	bge.n	8010c38 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8010c1c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010c20:	1aba      	subs	r2, r7, r2
 8010c22:	f8ad a012 	strh.w	sl, [sp, #18]
 8010c26:	f8ad 2014 	strh.w	r2, [sp, #20]
 8010c2a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010c2e:	69ea      	ldr	r2, [r5, #28]
 8010c30:	4631      	mov	r1, r6
 8010c32:	4640      	mov	r0, r8
 8010c34:	f7ff ff66 	bl	8010b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010c38:	8822      	ldrh	r2, [r4, #0]
 8010c3a:	88a3      	ldrh	r3, [r4, #4]
 8010c3c:	445f      	add	r7, fp
 8010c3e:	4413      	add	r3, r2
 8010c40:	b29b      	uxth	r3, r3
 8010c42:	b2bf      	uxth	r7, r7
 8010c44:	b23a      	sxth	r2, r7
 8010c46:	b219      	sxth	r1, r3
 8010c48:	4291      	cmp	r1, r2
 8010c4a:	dd0d      	ble.n	8010c68 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8010c4c:	1bdb      	subs	r3, r3, r7
 8010c4e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010c52:	f8ad a012 	strh.w	sl, [sp, #18]
 8010c56:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010c5a:	f8ad 9016 	strh.w	r9, [sp, #22]
 8010c5e:	69ea      	ldr	r2, [r5, #28]
 8010c60:	4631      	mov	r1, r6
 8010c62:	4640      	mov	r0, r8
 8010c64:	f7ff ff4e 	bl	8010b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010c68:	88e2      	ldrh	r2, [r4, #6]
 8010c6a:	8863      	ldrh	r3, [r4, #2]
 8010c6c:	4413      	add	r3, r2
 8010c6e:	9a00      	ldr	r2, [sp, #0]
 8010c70:	444a      	add	r2, r9
 8010c72:	b29b      	uxth	r3, r3
 8010c74:	fa1f f982 	uxth.w	r9, r2
 8010c78:	fa0f f289 	sxth.w	r2, r9
 8010c7c:	b219      	sxth	r1, r3
 8010c7e:	428a      	cmp	r2, r1
 8010c80:	da15      	bge.n	8010cae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8010c82:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010c86:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010c8a:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010c8e:	eba3 0309 	sub.w	r3, r3, r9
 8010c92:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010c96:	f8ad 2012 	strh.w	r2, [sp, #18]
 8010c9a:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010c9e:	69ea      	ldr	r2, [r5, #28]
 8010ca0:	4631      	mov	r1, r6
 8010ca2:	e001      	b.n	8010ca8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8010ca4:	69ea      	ldr	r2, [r5, #28]
 8010ca6:	4621      	mov	r1, r4
 8010ca8:	4640      	mov	r0, r8
 8010caa:	f7ff ff2b 	bl	8010b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010cae:	4628      	mov	r0, r5
 8010cb0:	f7ff fe96 	bl	80109e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8010cb4:	6861      	ldr	r1, [r4, #4]
 8010cb6:	4602      	mov	r2, r0
 8010cb8:	6820      	ldr	r0, [r4, #0]
 8010cba:	4633      	mov	r3, r6
 8010cbc:	c303      	stmia	r3!, {r0, r1}
 8010cbe:	4611      	mov	r1, r2
 8010cc0:	4630      	mov	r0, r6
 8010cc2:	f7f9 fe71 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 8010cc6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8010cca:	2b00      	cmp	r3, #0
 8010ccc:	f77f af33 	ble.w	8010b36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010cd0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010cd4:	2b00      	cmp	r3, #0
 8010cd6:	f77f af2e 	ble.w	8010b36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8010cda:	4628      	mov	r0, r5
 8010cdc:	f7ff fe9c 	bl	8010a18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8010ce0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8010ce4:	1a18      	subs	r0, r3, r0
 8010ce6:	f8ad 0010 	strh.w	r0, [sp, #16]
 8010cea:	4628      	mov	r0, r5
 8010cec:	f7ff fea8 	bl	8010a40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8010cf0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010cf4:	1a18      	subs	r0, r3, r0
 8010cf6:	f8ad 0012 	strh.w	r0, [sp, #18]
 8010cfa:	682b      	ldr	r3, [r5, #0]
 8010cfc:	4631      	mov	r1, r6
 8010cfe:	689b      	ldr	r3, [r3, #8]
 8010d00:	4628      	mov	r0, r5
 8010d02:	4798      	blx	r3
 8010d04:	e717      	b.n	8010b36 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08010d06 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8010d06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010d08:	aa02      	add	r2, sp, #8
 8010d0a:	2300      	movs	r3, #0
 8010d0c:	f842 3d04 	str.w	r3, [r2, #-4]!
 8010d10:	4604      	mov	r4, r0
 8010d12:	3004      	adds	r0, #4
 8010d14:	460d      	mov	r5, r1
 8010d16:	f7f9 ff1f 	bl	800ab58 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8010d1a:	9a01      	ldr	r2, [sp, #4]
 8010d1c:	b11a      	cbz	r2, 8010d26 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 8010d1e:	4629      	mov	r1, r5
 8010d20:	4620      	mov	r0, r4
 8010d22:	f7ff feef 	bl	8010b04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8010d26:	b003      	add	sp, #12
 8010d28:	bd30      	pop	{r4, r5, pc}

08010d2a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8010d2a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010d2c:	4602      	mov	r2, r0
 8010d2e:	4604      	mov	r4, r0
 8010d30:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8010d34:	460d      	mov	r5, r1
 8010d36:	6851      	ldr	r1, [r2, #4]
 8010d38:	466b      	mov	r3, sp
 8010d3a:	c303      	stmia	r3!, {r0, r1}
 8010d3c:	4629      	mov	r1, r5
 8010d3e:	4668      	mov	r0, sp
 8010d40:	f7f9 fe32 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 8010d44:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8010d48:	4669      	mov	r1, sp
 8010d4a:	b123      	cbz	r3, 8010d56 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 8010d4c:	4620      	mov	r0, r4
 8010d4e:	f7ff ffda 	bl	8010d06 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8010d52:	b003      	add	sp, #12
 8010d54:	bd30      	pop	{r4, r5, pc}
 8010d56:	1d20      	adds	r0, r4, #4
 8010d58:	f7f9 fec5 	bl	800aae6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8010d5c:	e7f9      	b.n	8010d52 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

08010d5e <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8010d5e:	680a      	ldr	r2, [r1, #0]
 8010d60:	460b      	mov	r3, r1
 8010d62:	6992      	ldr	r2, [r2, #24]
 8010d64:	1d01      	adds	r1, r0, #4
 8010d66:	4618      	mov	r0, r3
 8010d68:	4710      	bx	r2

08010d6a <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8010d6a:	b510      	push	{r4, lr}
 8010d6c:	4298      	cmp	r0, r3
 8010d6e:	eb01 0402 	add.w	r4, r1, r2
 8010d72:	b224      	sxth	r4, r4
 8010d74:	d22c      	bcs.n	8010dd0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 8010d76:	b35b      	cbz	r3, 8010dd0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x66>
 8010d78:	ee07 0a90 	vmov	s15, r0
 8010d7c:	eeb8 6a67 	vcvt.f32.u32	s12, s15
 8010d80:	ee07 3a90 	vmov	s15, r3
 8010d84:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8010d88:	ee07 2a90 	vmov	s15, r2
 8010d8c:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8010d90:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d94:	ee37 7a66 	vsub.f32	s14, s14, s13
 8010d98:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8010d9c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8010da0:	ee07 1a90 	vmov	s15, r1
 8010da4:	eee5 6a87 	vfma.f32	s13, s11, s14
 8010da8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010dac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8010db0:	eee6 7a26 	vfma.f32	s15, s12, s13
 8010db4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010db8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010dbc:	bfcc      	ite	gt
 8010dbe:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8010dc2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8010dc6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010dca:	ee17 3a90 	vmov	r3, s15
 8010dce:	b21c      	sxth	r4, r3
 8010dd0:	4620      	mov	r0, r4
 8010dd2:	bd10      	pop	{r4, pc}

08010dd4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8010dd4:	b510      	push	{r4, lr}
 8010dd6:	4298      	cmp	r0, r3
 8010dd8:	eb01 0402 	add.w	r4, r1, r2
 8010ddc:	b224      	sxth	r4, r4
 8010dde:	d226      	bcs.n	8010e2e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 8010de0:	b32b      	cbz	r3, 8010e2e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 8010de2:	ee07 2a90 	vmov	s15, r2
 8010de6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8010dea:	ee07 0a90 	vmov	s15, r0
 8010dee:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8010df2:	ee07 3a90 	vmov	s15, r3
 8010df6:	ee67 6a26 	vmul.f32	s13, s14, s13
 8010dfa:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8010dfe:	ee07 1a90 	vmov	s15, r1
 8010e02:	ee86 7a86 	vdiv.f32	s14, s13, s12
 8010e06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010e0a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010e0e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8010e12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010e16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010e1a:	bfcc      	ite	gt
 8010e1c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8010e20:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8010e24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010e28:	ee17 3a90 	vmov	r3, s15
 8010e2c:	b21c      	sxth	r4, r3
 8010e2e:	4620      	mov	r0, r4
 8010e30:	bd10      	pop	{r4, pc}

08010e32 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8010e32:	f7ff bfcf 	b.w	8010dd4 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

08010e36 <_ZN8touchgfx15EasingEquations10quadEaseInEtsst>:
 8010e36:	b510      	push	{r4, lr}
 8010e38:	4298      	cmp	r0, r3
 8010e3a:	eb01 0402 	add.w	r4, r1, r2
 8010e3e:	b224      	sxth	r4, r4
 8010e40:	d226      	bcs.n	8010e90 <_ZN8touchgfx15EasingEquations10quadEaseInEtsst+0x5a>
 8010e42:	b32b      	cbz	r3, 8010e90 <_ZN8touchgfx15EasingEquations10quadEaseInEtsst+0x5a>
 8010e44:	ee07 0a90 	vmov	s15, r0
 8010e48:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8010e4c:	ee07 3a90 	vmov	s15, r3
 8010e50:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8010e54:	ee07 2a90 	vmov	s15, r2
 8010e58:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8010e5c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8010e60:	ee07 1a90 	vmov	s15, r1
 8010e64:	ee27 7a06 	vmul.f32	s14, s14, s12
 8010e68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010e6c:	eee7 7a06 	vfma.f32	s15, s14, s12
 8010e70:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8010e74:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8010e78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010e7c:	bfcc      	ite	gt
 8010e7e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8010e82:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8010e86:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010e8a:	ee17 3a90 	vmov	r3, s15
 8010e8e:	b21c      	sxth	r4, r3
 8010e90:	4620      	mov	r0, r4
 8010e92:	bd10      	pop	{r4, pc}

08010e94 <_ZN8touchgfx12TextProviderC1Ev>:
 8010e94:	b510      	push	{r4, lr}
 8010e96:	2300      	movs	r3, #0
 8010e98:	2201      	movs	r2, #1
 8010e9a:	4604      	mov	r4, r0
 8010e9c:	e9c0 3300 	strd	r3, r3, [r0]
 8010ea0:	60c3      	str	r3, [r0, #12]
 8010ea2:	7403      	strb	r3, [r0, #16]
 8010ea4:	82c3      	strh	r3, [r0, #22]
 8010ea6:	8303      	strh	r3, [r0, #24]
 8010ea8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8010eaa:	8603      	strh	r3, [r0, #48]	; 0x30
 8010eac:	86c3      	strh	r3, [r0, #54]	; 0x36
 8010eae:	8703      	strh	r3, [r0, #56]	; 0x38
 8010eb0:	63c3      	str	r3, [r0, #60]	; 0x3c
 8010eb2:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 8010eb6:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 8010eba:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 8010ebe:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 8010ec2:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 8010ec6:	f7f3 f923 	bl	8004110 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8010eca:	4620      	mov	r0, r4
 8010ecc:	bd10      	pop	{r4, pc}

08010ece <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8010ece:	b530      	push	{r4, r5, lr}
 8010ed0:	2500      	movs	r5, #0
 8010ed2:	2401      	movs	r4, #1
 8010ed4:	6843      	ldr	r3, [r0, #4]
 8010ed6:	b913      	cbnz	r3, 8010ede <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8010ed8:	6803      	ldr	r3, [r0, #0]
 8010eda:	b1f3      	cbz	r3, 8010f1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 8010edc:	6043      	str	r3, [r0, #4]
 8010ede:	7c03      	ldrb	r3, [r0, #16]
 8010ee0:	b143      	cbz	r3, 8010ef4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8010ee2:	68c3      	ldr	r3, [r0, #12]
 8010ee4:	b12b      	cbz	r3, 8010ef2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010ee6:	881a      	ldrh	r2, [r3, #0]
 8010ee8:	b11a      	cbz	r2, 8010ef2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8010eea:	1c9a      	adds	r2, r3, #2
 8010eec:	60c2      	str	r2, [r0, #12]
 8010eee:	8818      	ldrh	r0, [r3, #0]
 8010ef0:	bd30      	pop	{r4, r5, pc}
 8010ef2:	7405      	strb	r5, [r0, #16]
 8010ef4:	6843      	ldr	r3, [r0, #4]
 8010ef6:	8819      	ldrh	r1, [r3, #0]
 8010ef8:	b179      	cbz	r1, 8010f1a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 8010efa:	1c9a      	adds	r2, r3, #2
 8010efc:	2902      	cmp	r1, #2
 8010efe:	6042      	str	r2, [r0, #4]
 8010f00:	d1f5      	bne.n	8010eee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8010f02:	6883      	ldr	r3, [r0, #8]
 8010f04:	1d1a      	adds	r2, r3, #4
 8010f06:	6082      	str	r2, [r0, #8]
 8010f08:	681b      	ldr	r3, [r3, #0]
 8010f0a:	60c3      	str	r3, [r0, #12]
 8010f0c:	2b00      	cmp	r3, #0
 8010f0e:	d0e1      	beq.n	8010ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010f10:	881b      	ldrh	r3, [r3, #0]
 8010f12:	2b00      	cmp	r3, #0
 8010f14:	d0de      	beq.n	8010ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010f16:	7404      	strb	r4, [r0, #16]
 8010f18:	e7dc      	b.n	8010ed4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8010f1a:	2000      	movs	r0, #0
 8010f1c:	e7e8      	b.n	8010ef0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08010f1e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 8010f1e:	b410      	push	{r4}
 8010f20:	63c3      	str	r3, [r0, #60]	; 0x3c
 8010f22:	2300      	movs	r3, #0
 8010f24:	6082      	str	r2, [r0, #8]
 8010f26:	6001      	str	r1, [r0, #0]
 8010f28:	6043      	str	r3, [r0, #4]
 8010f2a:	60c3      	str	r3, [r0, #12]
 8010f2c:	7403      	strb	r3, [r0, #16]
 8010f2e:	8603      	strh	r3, [r0, #48]	; 0x30
 8010f30:	8303      	strh	r3, [r0, #24]
 8010f32:	8703      	strh	r3, [r0, #56]	; 0x38
 8010f34:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010f38:	f7f3 b8ea 	b.w	8004110 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08010f3c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8010f3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f3e:	4605      	mov	r5, r0
 8010f40:	4608      	mov	r0, r1
 8010f42:	b1e9      	cbz	r1, 8010f80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8010f44:	f105 0440 	add.w	r4, r5, #64	; 0x40
 8010f48:	460b      	mov	r3, r1
 8010f4a:	f101 0708 	add.w	r7, r1, #8
 8010f4e:	4622      	mov	r2, r4
 8010f50:	6818      	ldr	r0, [r3, #0]
 8010f52:	6859      	ldr	r1, [r3, #4]
 8010f54:	4626      	mov	r6, r4
 8010f56:	c603      	stmia	r6!, {r0, r1}
 8010f58:	3308      	adds	r3, #8
 8010f5a:	42bb      	cmp	r3, r7
 8010f5c:	4634      	mov	r4, r6
 8010f5e:	d1f7      	bne.n	8010f50 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8010f60:	6818      	ldr	r0, [r3, #0]
 8010f62:	6030      	str	r0, [r6, #0]
 8010f64:	889b      	ldrh	r3, [r3, #4]
 8010f66:	80b3      	strh	r3, [r6, #4]
 8010f68:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 8010f6c:	015b      	lsls	r3, r3, #5
 8010f6e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8010f72:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 8010f76:	430b      	orrs	r3, r1
 8010f78:	425b      	negs	r3, r3
 8010f7a:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 8010f7e:	4610      	mov	r0, r2
 8010f80:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010f82 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8010f82:	b538      	push	{r3, r4, r5, lr}
 8010f84:	460c      	mov	r4, r1
 8010f86:	6811      	ldr	r1, [r2, #0]
 8010f88:	4610      	mov	r0, r2
 8010f8a:	68cd      	ldr	r5, [r1, #12]
 8010f8c:	4619      	mov	r1, r3
 8010f8e:	47a8      	blx	r5
 8010f90:	2800      	cmp	r0, #0
 8010f92:	bf08      	it	eq
 8010f94:	4620      	moveq	r0, r4
 8010f96:	bd38      	pop	{r3, r4, r5, pc}

08010f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8010f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010f9a:	4604      	mov	r4, r0
 8010f9c:	4615      	mov	r5, r2
 8010f9e:	4608      	mov	r0, r1
 8010fa0:	b93a      	cbnz	r2, 8010fb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8010fa2:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 8010fa6:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 8010faa:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8010fae:	4628      	mov	r0, r5
 8010fb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010fb2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8010fb6:	8893      	ldrh	r3, [r2, #4]
 8010fb8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8010fbc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8010fc0:	79ee      	ldrb	r6, [r5, #7]
 8010fc2:	4316      	orrs	r6, r2
 8010fc4:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 8010fc8:	189a      	adds	r2, r3, r2
 8010fca:	b291      	uxth	r1, r2
 8010fcc:	291d      	cmp	r1, #29
 8010fce:	b2b7      	uxth	r7, r6
 8010fd0:	f200 8083 	bhi.w	80110da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8010fd4:	2201      	movs	r2, #1
 8010fd6:	408a      	lsls	r2, r1
 8010fd8:	4978      	ldr	r1, [pc, #480]	; (80111bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 8010fda:	420a      	tst	r2, r1
 8010fdc:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8010fe0:	d12d      	bne.n	801103e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 8010fe2:	f412 7f60 	tst.w	r2, #896	; 0x380
 8010fe6:	d078      	beq.n	80110da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 8010fe8:	f104 0240 	add.w	r2, r4, #64	; 0x40
 8010fec:	462b      	mov	r3, r5
 8010fee:	f105 0e08 	add.w	lr, r5, #8
 8010ff2:	4615      	mov	r5, r2
 8010ff4:	6818      	ldr	r0, [r3, #0]
 8010ff6:	6859      	ldr	r1, [r3, #4]
 8010ff8:	4694      	mov	ip, r2
 8010ffa:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010ffe:	3308      	adds	r3, #8
 8011000:	4573      	cmp	r3, lr
 8011002:	4662      	mov	r2, ip
 8011004:	d1f6      	bne.n	8010ff4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 8011006:	6818      	ldr	r0, [r3, #0]
 8011008:	f8cc 0000 	str.w	r0, [ip]
 801100c:	889b      	ldrh	r3, [r3, #4]
 801100e:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011012:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 8011016:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 801101a:	b2b3      	uxth	r3, r6
 801101c:	1aca      	subs	r2, r1, r3
 801101e:	b292      	uxth	r2, r2
 8011020:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 8011024:	10d2      	asrs	r2, r2, #3
 8011026:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801102a:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801102e:	4302      	orrs	r2, r0
 8011030:	1bcf      	subs	r7, r1, r7
 8011032:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 8011036:	1afb      	subs	r3, r7, r3
 8011038:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 801103c:	e7b7      	b.n	8010fae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801103e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011040:	b92b      	cbnz	r3, 801104e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 8011042:	4b5f      	ldr	r3, [pc, #380]	; (80111c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 8011044:	4a5f      	ldr	r2, [pc, #380]	; (80111c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 8011046:	4860      	ldr	r0, [pc, #384]	; (80111c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 8011048:	21c0      	movs	r1, #192	; 0xc0
 801104a:	f00e f9d3 	bl	801f3f4 <__assert_func>
 801104e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011050:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011054:	8b59      	ldrh	r1, [r3, #26]
 8011056:	f640 6333 	movw	r3, #3635	; 0xe33
 801105a:	4299      	cmp	r1, r3
 801105c:	d110      	bne.n	8011080 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 801105e:	6803      	ldr	r3, [r0, #0]
 8011060:	68db      	ldr	r3, [r3, #12]
 8011062:	4798      	blx	r3
 8011064:	7b41      	ldrb	r1, [r0, #13]
 8011066:	00cb      	lsls	r3, r1, #3
 8011068:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801106c:	7a03      	ldrb	r3, [r0, #8]
 801106e:	0648      	lsls	r0, r1, #25
 8011070:	ea43 0302 	orr.w	r3, r3, r2
 8011074:	bf44      	itt	mi
 8011076:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801107a:	b21b      	sxthmi	r3, r3
 801107c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011080:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 8011084:	443b      	add	r3, r7
 8011086:	4433      	add	r3, r6
 8011088:	b29b      	uxth	r3, r3
 801108a:	f104 0640 	add.w	r6, r4, #64	; 0x40
 801108e:	462a      	mov	r2, r5
 8011090:	f105 0c08 	add.w	ip, r5, #8
 8011094:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011098:	4635      	mov	r5, r6
 801109a:	6810      	ldr	r0, [r2, #0]
 801109c:	6851      	ldr	r1, [r2, #4]
 801109e:	4637      	mov	r7, r6
 80110a0:	c703      	stmia	r7!, {r0, r1}
 80110a2:	3208      	adds	r2, #8
 80110a4:	4562      	cmp	r2, ip
 80110a6:	463e      	mov	r6, r7
 80110a8:	d1f7      	bne.n	801109a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80110aa:	6810      	ldr	r0, [r2, #0]
 80110ac:	6038      	str	r0, [r7, #0]
 80110ae:	8892      	ldrh	r2, [r2, #4]
 80110b0:	80ba      	strh	r2, [r7, #4]
 80110b2:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 80110b6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 80110ba:	10db      	asrs	r3, r3, #3
 80110bc:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80110c0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80110c4:	4313      	orrs	r3, r2
 80110c6:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80110ca:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 80110ce:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 80110d2:	1a9b      	subs	r3, r3, r2
 80110d4:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 80110d8:	e769      	b.n	8010fae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80110da:	f023 0204 	bic.w	r2, r3, #4
 80110de:	f640 611b 	movw	r1, #3611	; 0xe1b
 80110e2:	428a      	cmp	r2, r1
 80110e4:	d003      	beq.n	80110ee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 80110e6:	f640 621d 	movw	r2, #3613	; 0xe1d
 80110ea:	4293      	cmp	r3, r2
 80110ec:	d120      	bne.n	8011130 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 80110ee:	3b01      	subs	r3, #1
 80110f0:	4602      	mov	r2, r0
 80110f2:	b29b      	uxth	r3, r3
 80110f4:	4629      	mov	r1, r5
 80110f6:	4620      	mov	r0, r4
 80110f8:	f7ff ff43 	bl	8010f82 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80110fc:	7b41      	ldrb	r1, [r0, #13]
 80110fe:	00cb      	lsls	r3, r1, #3
 8011100:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011104:	7a03      	ldrb	r3, [r0, #8]
 8011106:	0649      	lsls	r1, r1, #25
 8011108:	ea43 0302 	orr.w	r3, r3, r2
 801110c:	bf44      	itt	mi
 801110e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011112:	b21b      	sxthmi	r3, r3
 8011114:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011118:	7b6b      	ldrb	r3, [r5, #13]
 801111a:	7aaa      	ldrb	r2, [r5, #10]
 801111c:	005b      	lsls	r3, r3, #1
 801111e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011122:	4313      	orrs	r3, r2
 8011124:	115a      	asrs	r2, r3, #5
 8011126:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801112a:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801112e:	e036      	b.n	801119e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 8011130:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8011134:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8011138:	7a2a      	ldrb	r2, [r5, #8]
 801113a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801113e:	ea42 0201 	orr.w	r2, r2, r1
 8011142:	bf1c      	itt	ne
 8011144:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8011148:	b212      	sxthne	r2, r2
 801114a:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 801114e:	f640 6109 	movw	r1, #3593	; 0xe09
 8011152:	f023 0210 	bic.w	r2, r3, #16
 8011156:	428a      	cmp	r2, r1
 8011158:	d003      	beq.n	8011162 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 801115a:	f640 6213 	movw	r2, #3603	; 0xe13
 801115e:	4293      	cmp	r3, r2
 8011160:	d12a      	bne.n	80111b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 8011162:	7b6e      	ldrb	r6, [r5, #13]
 8011164:	0076      	lsls	r6, r6, #1
 8011166:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801116a:	7aae      	ldrb	r6, [r5, #10]
 801116c:	4316      	orrs	r6, r2
 801116e:	f640 6213 	movw	r2, #3603	; 0xe13
 8011172:	4293      	cmp	r3, r2
 8011174:	bf18      	it	ne
 8011176:	f103 33ff 	addne.w	r3, r3, #4294967295
 801117a:	4602      	mov	r2, r0
 801117c:	bf14      	ite	ne
 801117e:	b29b      	uxthne	r3, r3
 8011180:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8011184:	4629      	mov	r1, r5
 8011186:	4620      	mov	r0, r4
 8011188:	f7ff fefb 	bl	8010f82 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801118c:	7b43      	ldrb	r3, [r0, #13]
 801118e:	7a82      	ldrb	r2, [r0, #10]
 8011190:	005b      	lsls	r3, r3, #1
 8011192:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011196:	4313      	orrs	r3, r2
 8011198:	1af6      	subs	r6, r6, r3
 801119a:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 801119e:	7b69      	ldrb	r1, [r5, #13]
 80111a0:	00cb      	lsls	r3, r1, #3
 80111a2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80111a6:	7a2b      	ldrb	r3, [r5, #8]
 80111a8:	4313      	orrs	r3, r2
 80111aa:	064a      	lsls	r2, r1, #25
 80111ac:	bf44      	itt	mi
 80111ae:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80111b2:	b21b      	sxthmi	r3, r3
 80111b4:	1bdb      	subs	r3, r3, r7
 80111b6:	e73f      	b.n	8011038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 80111b8:	2300      	movs	r3, #0
 80111ba:	e7b6      	b.n	801112a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 80111bc:	3fc00079 	.word	0x3fc00079
 80111c0:	08021ab8 	.word	0x08021ab8
 80111c4:	08023777 	.word	0x08023777
 80111c8:	08021b8a 	.word	0x08021b8a

080111cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80111cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80111d0:	4604      	mov	r4, r0
 80111d2:	b942      	cbnz	r2, 80111e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80111d4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80111d8:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 80111dc:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 80111e0:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80111e4:	e046      	b.n	8011274 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 80111e6:	7b51      	ldrb	r1, [r2, #13]
 80111e8:	8893      	ldrh	r3, [r2, #4]
 80111ea:	010f      	lsls	r7, r1, #4
 80111ec:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80111f0:	79d7      	ldrb	r7, [r2, #7]
 80111f2:	4307      	orrs	r7, r0
 80111f4:	2f04      	cmp	r7, #4
 80111f6:	b2bd      	uxth	r5, r7
 80111f8:	bfcc      	ite	gt
 80111fa:	08bf      	lsrgt	r7, r7, #2
 80111fc:	2701      	movle	r7, #1
 80111fe:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8011202:	f200 80ab 	bhi.w	801135c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 8011206:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801120a:	4283      	cmp	r3, r0
 801120c:	d216      	bcs.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801120e:	f240 605b 	movw	r0, #1627	; 0x65b
 8011212:	4283      	cmp	r3, r0
 8011214:	d859      	bhi.n	80112ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 8011216:	f240 6057 	movw	r0, #1623	; 0x657
 801121a:	4283      	cmp	r3, r0
 801121c:	d20e      	bcs.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801121e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8011222:	d24a      	bcs.n	80112ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 8011224:	f240 604e 	movw	r0, #1614	; 0x64e
 8011228:	4283      	cmp	r3, r0
 801122a:	d207      	bcs.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801122c:	f240 601a 	movw	r0, #1562	; 0x61a
 8011230:	4283      	cmp	r3, r0
 8011232:	d02a      	beq.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011234:	d821      	bhi.n	801127a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 8011236:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801123a:	d35b      	bcc.n	80112f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801123c:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 8011240:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011244:	f040 80d0 	bne.w	80113e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8011248:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 801124c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011250:	f040 80ca 	bne.w	80113e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 8011254:	00cb      	lsls	r3, r1, #3
 8011256:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801125a:	7a13      	ldrb	r3, [r2, #8]
 801125c:	0649      	lsls	r1, r1, #25
 801125e:	ea43 0300 	orr.w	r3, r3, r0
 8011262:	bf44      	itt	mi
 8011264:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011268:	b21b      	sxthmi	r3, r3
 801126a:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801126e:	1b5d      	subs	r5, r3, r5
 8011270:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8011274:	4610      	mov	r0, r2
 8011276:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801127a:	f240 604b 	movw	r0, #1611	; 0x64b
 801127e:	4283      	cmp	r3, r0
 8011280:	d338      	bcc.n	80112f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011282:	f240 604c 	movw	r0, #1612	; 0x64c
 8011286:	4283      	cmp	r3, r0
 8011288:	d9d8      	bls.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801128a:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 801128e:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 8011292:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8011296:	f040 80f1 	bne.w	801147c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 801129a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801129e:	f040 80ed 	bne.w	801147c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 80112a2:	00cb      	lsls	r3, r1, #3
 80112a4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80112a8:	7a13      	ldrb	r3, [r2, #8]
 80112aa:	064e      	lsls	r6, r1, #25
 80112ac:	ea43 0300 	orr.w	r3, r3, r0
 80112b0:	bf44      	itt	mi
 80112b2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80112b6:	b21b      	sxthmi	r3, r3
 80112b8:	e7d9      	b.n	801126e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 80112ba:	f240 6054 	movw	r0, #1620	; 0x654
 80112be:	4283      	cmp	r3, r0
 80112c0:	d8e3      	bhi.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80112c2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80112c6:	d9e0      	bls.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80112c8:	e7b8      	b.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80112ca:	f240 6074 	movw	r0, #1652	; 0x674
 80112ce:	4283      	cmp	r3, r0
 80112d0:	d0b4      	beq.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80112d2:	d82d      	bhi.n	8011330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 80112d4:	f240 605e 	movw	r0, #1630	; 0x65e
 80112d8:	4283      	cmp	r3, r0
 80112da:	d804      	bhi.n	80112e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 80112dc:	f240 605d 	movw	r0, #1629	; 0x65d
 80112e0:	4283      	cmp	r3, r0
 80112e2:	d3d2      	bcc.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80112e4:	e7aa      	b.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80112e6:	f240 605f 	movw	r0, #1631	; 0x65f
 80112ea:	4283      	cmp	r3, r0
 80112ec:	d0cd      	beq.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80112ee:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80112f2:	d0a3      	beq.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80112f4:	00cb      	lsls	r3, r1, #3
 80112f6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80112fa:	7a13      	ldrb	r3, [r2, #8]
 80112fc:	0649      	lsls	r1, r1, #25
 80112fe:	ea43 0300 	orr.w	r3, r3, r0
 8011302:	bf44      	itt	mi
 8011304:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011308:	b21b      	sxthmi	r3, r3
 801130a:	1b5d      	subs	r5, r3, r5
 801130c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011310:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8011314:	7b53      	ldrb	r3, [r2, #13]
 8011316:	015b      	lsls	r3, r3, #5
 8011318:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801131c:	7993      	ldrb	r3, [r2, #6]
 801131e:	430b      	orrs	r3, r1
 8011320:	005b      	lsls	r3, r3, #1
 8011322:	2105      	movs	r1, #5
 8011324:	fb93 f3f1 	sdiv	r3, r3, r1
 8011328:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801132c:	440b      	add	r3, r1
 801132e:	e757      	b.n	80111e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011330:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8011334:	4283      	cmp	r3, r0
 8011336:	d809      	bhi.n	801134c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 8011338:	f240 60df 	movw	r0, #1759	; 0x6df
 801133c:	4283      	cmp	r3, r0
 801133e:	f4bf af7d 	bcs.w	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 8011342:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8011346:	2b05      	cmp	r3, #5
 8011348:	d8d4      	bhi.n	80112f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801134a:	e777      	b.n	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801134c:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8011350:	4283      	cmp	r3, r0
 8011352:	d09a      	beq.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011354:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8011358:	4283      	cmp	r3, r0
 801135a:	e7ca      	b.n	80112f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 801135c:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8011360:	d22b      	bcs.n	80113ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 8011362:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8011366:	4283      	cmp	r3, r0
 8011368:	d28f      	bcs.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801136a:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801136e:	4283      	cmp	r3, r0
 8011370:	d816      	bhi.n	80113a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 8011372:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8011376:	4283      	cmp	r3, r0
 8011378:	f4bf af60 	bcs.w	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801137c:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8011380:	4283      	cmp	r3, r0
 8011382:	d80a      	bhi.n	801139a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 8011384:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8011388:	4283      	cmp	r3, r0
 801138a:	f4bf af57 	bcs.w	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801138e:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8011392:	4283      	cmp	r3, r0
 8011394:	f43f af79 	beq.w	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 8011398:	e7ac      	b.n	80112f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801139a:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801139e:	e7f8      	b.n	8011392 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 80113a0:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80113a4:	4283      	cmp	r3, r0
 80113a6:	d802      	bhi.n	80113ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 80113a8:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80113ac:	e798      	b.n	80112e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 80113ae:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80113b2:	4283      	cmp	r3, r0
 80113b4:	f47f af42 	bne.w	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80113b8:	e767      	b.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80113ba:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80113be:	4283      	cmp	r3, r0
 80113c0:	f43f af63 	beq.w	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80113c4:	d802      	bhi.n	80113cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 80113c6:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80113ca:	e7f2      	b.n	80113b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 80113cc:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80113d0:	4283      	cmp	r3, r0
 80113d2:	d805      	bhi.n	80113e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 80113d4:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80113d8:	4283      	cmp	r3, r0
 80113da:	f4ff af2f 	bcc.w	801123c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 80113de:	e754      	b.n	801128a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 80113e0:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80113e4:	4283      	cmp	r3, r0
 80113e6:	e7af      	b.n	8011348 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 80113e8:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80113ec:	4617      	mov	r7, r2
 80113ee:	f102 0808 	add.w	r8, r2, #8
 80113f2:	4666      	mov	r6, ip
 80113f4:	6838      	ldr	r0, [r7, #0]
 80113f6:	6879      	ldr	r1, [r7, #4]
 80113f8:	46e6      	mov	lr, ip
 80113fa:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80113fe:	3708      	adds	r7, #8
 8011400:	4547      	cmp	r7, r8
 8011402:	46f4      	mov	ip, lr
 8011404:	d1f6      	bne.n	80113f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 8011406:	6838      	ldr	r0, [r7, #0]
 8011408:	f8ce 0000 	str.w	r0, [lr]
 801140c:	88b9      	ldrh	r1, [r7, #4]
 801140e:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011412:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 8011416:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801141a:	d009      	beq.n	8011430 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 801141c:	7b51      	ldrb	r1, [r2, #13]
 801141e:	7992      	ldrb	r2, [r2, #6]
 8011420:	0149      	lsls	r1, r1, #5
 8011422:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011426:	4311      	orrs	r1, r2
 8011428:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801142c:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 8011430:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8011434:	d00d      	beq.n	8011452 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 8011436:	442b      	add	r3, r5
 8011438:	b29b      	uxth	r3, r3
 801143a:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 801143e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 8011442:	10db      	asrs	r3, r3, #3
 8011444:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8011448:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801144c:	4313      	orrs	r3, r2
 801144e:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 8011452:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 8011456:	00cb      	lsls	r3, r1, #3
 8011458:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801145c:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 8011460:	064f      	lsls	r7, r1, #25
 8011462:	ea43 0302 	orr.w	r3, r3, r2
 8011466:	bf44      	itt	mi
 8011468:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801146c:	b21b      	sxthmi	r3, r3
 801146e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 8011472:	1b5d      	subs	r5, r3, r5
 8011474:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 8011478:	4632      	mov	r2, r6
 801147a:	e6fb      	b.n	8011274 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801147c:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 8011480:	4694      	mov	ip, r2
 8011482:	f102 0908 	add.w	r9, r2, #8
 8011486:	4676      	mov	r6, lr
 8011488:	f8dc 0000 	ldr.w	r0, [ip]
 801148c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011490:	46f0      	mov	r8, lr
 8011492:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011496:	f10c 0c08 	add.w	ip, ip, #8
 801149a:	45cc      	cmp	ip, r9
 801149c:	46c6      	mov	lr, r8
 801149e:	d1f3      	bne.n	8011488 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 80114a0:	f8dc 0000 	ldr.w	r0, [ip]
 80114a4:	f8c8 0000 	str.w	r0, [r8]
 80114a8:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 80114ac:	f8a8 1004 	strh.w	r1, [r8, #4]
 80114b0:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 80114b4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80114b8:	d009      	beq.n	80114ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 80114ba:	7b51      	ldrb	r1, [r2, #13]
 80114bc:	7992      	ldrb	r2, [r2, #6]
 80114be:	0149      	lsls	r1, r1, #5
 80114c0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80114c4:	4311      	orrs	r1, r2
 80114c6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80114ca:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 80114ce:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80114d2:	d00d      	beq.n	80114f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80114d4:	1bdb      	subs	r3, r3, r7
 80114d6:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 80114da:	b29b      	uxth	r3, r3
 80114dc:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 80114e0:	10db      	asrs	r3, r3, #3
 80114e2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80114e6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80114ea:	4313      	orrs	r3, r2
 80114ec:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 80114f0:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 80114f4:	00cb      	lsls	r3, r1, #3
 80114f6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80114fa:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 80114fe:	0648      	lsls	r0, r1, #25
 8011500:	ea43 0302 	orr.w	r3, r3, r2
 8011504:	bf44      	itt	mi
 8011506:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801150a:	b21b      	sxthmi	r3, r3
 801150c:	e7b1      	b.n	8011472 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

08011510 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011514:	461e      	mov	r6, r3
 8011516:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011518:	4604      	mov	r4, r0
 801151a:	4617      	mov	r7, r2
 801151c:	b92b      	cbnz	r3, 801152a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 801151e:	4b25      	ldr	r3, [pc, #148]	; (80115b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 8011520:	4a25      	ldr	r2, [pc, #148]	; (80115b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 8011522:	4826      	ldr	r0, [pc, #152]	; (80115bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 8011524:	21c0      	movs	r1, #192	; 0xc0
 8011526:	f00d ff65 	bl	801f3f4 <__assert_func>
 801152a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801152c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011530:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8011534:	f7f2 fdaa 	bl	800408c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011538:	4605      	mov	r5, r0
 801153a:	b918      	cbnz	r0, 8011544 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 801153c:	6030      	str	r0, [r6, #0]
 801153e:	4628      	mov	r0, r5
 8011540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011544:	683b      	ldr	r3, [r7, #0]
 8011546:	4601      	mov	r1, r0
 8011548:	68db      	ldr	r3, [r3, #12]
 801154a:	4638      	mov	r0, r7
 801154c:	4798      	blx	r3
 801154e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011552:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8011556:	4602      	mov	r2, r0
 8011558:	6030      	str	r0, [r6, #0]
 801155a:	d213      	bcs.n	8011584 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 801155c:	4643      	mov	r3, r8
 801155e:	4639      	mov	r1, r7
 8011560:	4620      	mov	r0, r4
 8011562:	f7ff fe33 	bl	80111cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011566:	6030      	str	r0, [r6, #0]
 8011568:	6833      	ldr	r3, [r6, #0]
 801156a:	b143      	cbz	r3, 801157e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 801156c:	7b5a      	ldrb	r2, [r3, #13]
 801156e:	7a9b      	ldrb	r3, [r3, #10]
 8011570:	0052      	lsls	r2, r2, #1
 8011572:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8011576:	4313      	orrs	r3, r2
 8011578:	bf0c      	ite	eq
 801157a:	2301      	moveq	r3, #1
 801157c:	2300      	movne	r3, #0
 801157e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8011582:	e7dc      	b.n	801153e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 8011584:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8011588:	b29b      	uxth	r3, r3
 801158a:	2b7f      	cmp	r3, #127	; 0x7f
 801158c:	d804      	bhi.n	8011598 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 801158e:	4639      	mov	r1, r7
 8011590:	4620      	mov	r0, r4
 8011592:	f7ff fd01 	bl	8010f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011596:	e7e6      	b.n	8011566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 8011598:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801159c:	2b00      	cmp	r3, #0
 801159e:	d0e3      	beq.n	8011568 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80115a0:	f640 1302 	movw	r3, #2306	; 0x902
 80115a4:	429d      	cmp	r5, r3
 80115a6:	d1df      	bne.n	8011568 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 80115a8:	4601      	mov	r1, r0
 80115aa:	4620      	mov	r0, r4
 80115ac:	f7ff fcc6 	bl	8010f3c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80115b0:	e7d9      	b.n	8011566 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 80115b2:	bf00      	nop
 80115b4:	08021ab8 	.word	0x08021ab8
 80115b8:	08023777 	.word	0x08023777
 80115bc:	08021b8a 	.word	0x08021b8a

080115c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80115c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80115c4:	461e      	mov	r6, r3
 80115c6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80115c8:	4604      	mov	r4, r0
 80115ca:	4617      	mov	r7, r2
 80115cc:	b92b      	cbnz	r3, 80115da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 80115ce:	4b26      	ldr	r3, [pc, #152]	; (8011668 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 80115d0:	4a26      	ldr	r2, [pc, #152]	; (801166c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 80115d2:	4827      	ldr	r0, [pc, #156]	; (8011670 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 80115d4:	21c0      	movs	r1, #192	; 0xc0
 80115d6:	f00d ff0d 	bl	801f3f4 <__assert_func>
 80115da:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80115dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80115e0:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 80115e4:	f7f2 fd52 	bl	800408c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80115e8:	4605      	mov	r5, r0
 80115ea:	b918      	cbnz	r0, 80115f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 80115ec:	6030      	str	r0, [r6, #0]
 80115ee:	4628      	mov	r0, r5
 80115f0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80115f4:	683b      	ldr	r3, [r7, #0]
 80115f6:	4601      	mov	r1, r0
 80115f8:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80115fc:	4638      	mov	r0, r7
 80115fe:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011602:	47c8      	blx	r9
 8011604:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8011608:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801160c:	4602      	mov	r2, r0
 801160e:	6030      	str	r0, [r6, #0]
 8011610:	d213      	bcs.n	801163a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 8011612:	4643      	mov	r3, r8
 8011614:	4639      	mov	r1, r7
 8011616:	4620      	mov	r0, r4
 8011618:	f7ff fdd8 	bl	80111cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801161c:	6030      	str	r0, [r6, #0]
 801161e:	6833      	ldr	r3, [r6, #0]
 8011620:	b143      	cbz	r3, 8011634 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 8011622:	7b5a      	ldrb	r2, [r3, #13]
 8011624:	7a9b      	ldrb	r3, [r3, #10]
 8011626:	0052      	lsls	r2, r2, #1
 8011628:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801162c:	4313      	orrs	r3, r2
 801162e:	bf0c      	ite	eq
 8011630:	2301      	moveq	r3, #1
 8011632:	2300      	movne	r3, #0
 8011634:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8011638:	e7d9      	b.n	80115ee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801163a:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801163e:	b29b      	uxth	r3, r3
 8011640:	2b7f      	cmp	r3, #127	; 0x7f
 8011642:	d804      	bhi.n	801164e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 8011644:	4639      	mov	r1, r7
 8011646:	4620      	mov	r0, r4
 8011648:	f7ff fca6 	bl	8010f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801164c:	e7e6      	b.n	801161c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801164e:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8011652:	2b00      	cmp	r3, #0
 8011654:	d0e3      	beq.n	801161e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 8011656:	f640 1302 	movw	r3, #2306	; 0x902
 801165a:	429d      	cmp	r5, r3
 801165c:	d1df      	bne.n	801161e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801165e:	4601      	mov	r1, r0
 8011660:	4620      	mov	r0, r4
 8011662:	f7ff fc6b 	bl	8010f3c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011666:	e7d9      	b.n	801161c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 8011668:	08021ab8 	.word	0x08021ab8
 801166c:	08023777 	.word	0x08023777
 8011670:	08021b8a 	.word	0x08021b8a

08011674 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011674:	b510      	push	{r4, lr}
 8011676:	4604      	mov	r4, r0
 8011678:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801167a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801167c:	b9d9      	cbnz	r1, 80116b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 801167e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011680:	2b0a      	cmp	r3, #10
 8011682:	d036      	beq.n	80116f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 8011684:	4620      	mov	r0, r4
 8011686:	f7ff fc22 	bl	8010ece <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801168a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801168c:	2b09      	cmp	r3, #9
 801168e:	d906      	bls.n	801169e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 8011690:	4b18      	ldr	r3, [pc, #96]	; (80116f4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 8011692:	4a19      	ldr	r2, [pc, #100]	; (80116f8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 8011694:	4819      	ldr	r0, [pc, #100]	; (80116fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 8011696:	f44f 7182 	mov.w	r1, #260	; 0x104
 801169a:	f00d feab 	bl	801f3f4 <__assert_func>
 801169e:	1c5a      	adds	r2, r3, #1
 80116a0:	8622      	strh	r2, [r4, #48]	; 0x30
 80116a2:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80116a4:	4413      	add	r3, r2
 80116a6:	b29b      	uxth	r3, r3
 80116a8:	2b09      	cmp	r3, #9
 80116aa:	bf88      	it	hi
 80116ac:	3b0a      	subhi	r3, #10
 80116ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80116b2:	8358      	strh	r0, [r3, #26]
 80116b4:	e7e3      	b.n	801167e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 80116b6:	2b0a      	cmp	r3, #10
 80116b8:	d01b      	beq.n	80116f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 80116ba:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80116bc:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80116c0:	3901      	subs	r1, #1
 80116c2:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 80116c4:	8721      	strh	r1, [r4, #56]	; 0x38
 80116c6:	1c51      	adds	r1, r2, #1
 80116c8:	b289      	uxth	r1, r1
 80116ca:	2901      	cmp	r1, #1
 80116cc:	bf8a      	itet	hi
 80116ce:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80116d2:	86e1      	strhls	r1, [r4, #54]	; 0x36
 80116d4:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 80116d6:	2b09      	cmp	r3, #9
 80116d8:	d8da      	bhi.n	8011690 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 80116da:	1c5a      	adds	r2, r3, #1
 80116dc:	8622      	strh	r2, [r4, #48]	; 0x30
 80116de:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 80116e0:	4413      	add	r3, r2
 80116e2:	b29b      	uxth	r3, r3
 80116e4:	2b09      	cmp	r3, #9
 80116e6:	bf88      	it	hi
 80116e8:	3b0a      	subhi	r3, #10
 80116ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80116ee:	8358      	strh	r0, [r3, #26]
 80116f0:	e7c2      	b.n	8011678 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80116f2:	bd10      	pop	{r4, pc}
 80116f4:	08023548 	.word	0x08023548
 80116f8:	080238cd 	.word	0x080238cd
 80116fc:	08021b8a 	.word	0x08021b8a

08011700 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011700:	b538      	push	{r3, r4, r5, lr}
 8011702:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8011704:	4604      	mov	r4, r0
 8011706:	b92a      	cbnz	r2, 8011714 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 8011708:	4b13      	ldr	r3, [pc, #76]	; (8011758 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801170a:	4a14      	ldr	r2, [pc, #80]	; (801175c <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 801170c:	4814      	ldr	r0, [pc, #80]	; (8011760 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 801170e:	21d5      	movs	r1, #213	; 0xd5
 8011710:	f00d fe70 	bl	801f3f4 <__assert_func>
 8011714:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011716:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801171a:	3a01      	subs	r2, #1
 801171c:	8b4d      	ldrh	r5, [r1, #26]
 801171e:	8602      	strh	r2, [r0, #48]	; 0x30
 8011720:	1c5a      	adds	r2, r3, #1
 8011722:	b292      	uxth	r2, r2
 8011724:	2a09      	cmp	r2, #9
 8011726:	bf86      	itte	hi
 8011728:	3b09      	subhi	r3, #9
 801172a:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 801172c:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 801172e:	f7ff ffa1 	bl	8011674 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011732:	8b23      	ldrh	r3, [r4, #24]
 8011734:	2b01      	cmp	r3, #1
 8011736:	bf9c      	itt	ls
 8011738:	3301      	addls	r3, #1
 801173a:	8323      	strhls	r3, [r4, #24]
 801173c:	8ae3      	ldrh	r3, [r4, #22]
 801173e:	b90b      	cbnz	r3, 8011744 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 8011740:	2302      	movs	r3, #2
 8011742:	82e3      	strh	r3, [r4, #22]
 8011744:	8ae3      	ldrh	r3, [r4, #22]
 8011746:	3b01      	subs	r3, #1
 8011748:	b29b      	uxth	r3, r3
 801174a:	82e3      	strh	r3, [r4, #22]
 801174c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011750:	4628      	mov	r0, r5
 8011752:	8265      	strh	r5, [r4, #18]
 8011754:	bd38      	pop	{r3, r4, r5, pc}
 8011756:	bf00      	nop
 8011758:	08021ab8 	.word	0x08021ab8
 801175c:	08023822 	.word	0x08023822
 8011760:	08021b8a 	.word	0x08021b8a

08011764 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011764:	b538      	push	{r3, r4, r5, lr}
 8011766:	428a      	cmp	r2, r1
 8011768:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 801176a:	d90c      	bls.n	8011786 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 801176c:	b92c      	cbnz	r4, 801177a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 801176e:	4b1c      	ldr	r3, [pc, #112]	; (80117e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 8011770:	4a1c      	ldr	r2, [pc, #112]	; (80117e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 8011772:	21e1      	movs	r1, #225	; 0xe1
 8011774:	481c      	ldr	r0, [pc, #112]	; (80117e8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 8011776:	f00d fe3d 	bl	801f3f4 <__assert_func>
 801177a:	3c01      	subs	r4, #1
 801177c:	8604      	strh	r4, [r0, #48]	; 0x30
 801177e:	4b1b      	ldr	r3, [pc, #108]	; (80117ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 8011780:	4a1b      	ldr	r2, [pc, #108]	; (80117f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 8011782:	21c5      	movs	r1, #197	; 0xc5
 8011784:	e7f6      	b.n	8011774 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8011786:	428c      	cmp	r4, r1
 8011788:	d203      	bcs.n	8011792 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801178a:	4b1a      	ldr	r3, [pc, #104]	; (80117f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 801178c:	4a1a      	ldr	r2, [pc, #104]	; (80117f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 801178e:	21cb      	movs	r1, #203	; 0xcb
 8011790:	e7f0      	b.n	8011774 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 8011792:	1a64      	subs	r4, r4, r1
 8011794:	8604      	strh	r4, [r0, #48]	; 0x30
 8011796:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 8011798:	4421      	add	r1, r4
 801179a:	b289      	uxth	r1, r1
 801179c:	2909      	cmp	r1, #9
 801179e:	bf88      	it	hi
 80117a0:	390a      	subhi	r1, #10
 80117a2:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80117a4:	250a      	movs	r5, #10
 80117a6:	b1ba      	cbz	r2, 80117d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 80117a8:	3a01      	subs	r2, #1
 80117aa:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 80117ac:	b292      	uxth	r2, r2
 80117ae:	2909      	cmp	r1, #9
 80117b0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80117b4:	d903      	bls.n	80117be <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 80117b6:	4b11      	ldr	r3, [pc, #68]	; (80117fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 80117b8:	4a11      	ldr	r2, [pc, #68]	; (8011800 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 80117ba:	21e6      	movs	r1, #230	; 0xe6
 80117bc:	e7da      	b.n	8011774 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 80117be:	3101      	adds	r1, #1
 80117c0:	8601      	strh	r1, [r0, #48]	; 0x30
 80117c2:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80117c4:	b901      	cbnz	r1, 80117c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 80117c6:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80117c8:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 80117ca:	3901      	subs	r1, #1
 80117cc:	b289      	uxth	r1, r1
 80117ce:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80117d0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80117d4:	834c      	strh	r4, [r1, #26]
 80117d6:	e7e6      	b.n	80117a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 80117d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80117dc:	f7ff bf4a 	b.w	8011674 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80117e0:	08021ab8 	.word	0x08021ab8
 80117e4:	080235fb 	.word	0x080235fb
 80117e8:	08021b8a 	.word	0x08021b8a
 80117ec:	08021bb6 	.word	0x08021bb6
 80117f0:	080236a5 	.word	0x080236a5
 80117f4:	08023554 	.word	0x08023554
 80117f8:	0802397c 	.word	0x0802397c
 80117fc:	08023560 	.word	0x08023560
 8011800:	08023573 	.word	0x08023573

08011804 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011804:	3a01      	subs	r2, #1
 8011806:	b570      	push	{r4, r5, r6, lr}
 8011808:	b292      	uxth	r2, r2
 801180a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 801180e:	42b2      	cmp	r2, r6
 8011810:	d019      	beq.n	8011846 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 8011812:	8b04      	ldrh	r4, [r0, #24]
 8011814:	f831 5b02 	ldrh.w	r5, [r1], #2
 8011818:	4294      	cmp	r4, r2
 801181a:	d805      	bhi.n	8011828 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 801181c:	4b19      	ldr	r3, [pc, #100]	; (8011884 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801181e:	4a1a      	ldr	r2, [pc, #104]	; (8011888 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 8011820:	481a      	ldr	r0, [pc, #104]	; (801188c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 8011822:	21c5      	movs	r1, #197	; 0xc5
 8011824:	f00d fde6 	bl	801f3f4 <__assert_func>
 8011828:	8ac4      	ldrh	r4, [r0, #22]
 801182a:	4414      	add	r4, r2
 801182c:	b2a4      	uxth	r4, r4
 801182e:	2c01      	cmp	r4, #1
 8011830:	bf88      	it	hi
 8011832:	3c02      	subhi	r4, #2
 8011834:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011838:	3a01      	subs	r2, #1
 801183a:	8a64      	ldrh	r4, [r4, #18]
 801183c:	42ac      	cmp	r4, r5
 801183e:	b292      	uxth	r2, r2
 8011840:	d0e5      	beq.n	801180e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 8011842:	2000      	movs	r0, #0
 8011844:	bd70      	pop	{r4, r5, r6, pc}
 8011846:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801184a:	2400      	movs	r4, #0
 801184c:	4413      	add	r3, r2
 801184e:	b2a2      	uxth	r2, r4
 8011850:	429a      	cmp	r2, r3
 8011852:	da14      	bge.n	801187e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 8011854:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8011856:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801185a:	4296      	cmp	r6, r2
 801185c:	d802      	bhi.n	8011864 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 801185e:	4b09      	ldr	r3, [pc, #36]	; (8011884 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 8011860:	4a0b      	ldr	r2, [pc, #44]	; (8011890 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 8011862:	e7dd      	b.n	8011820 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 8011864:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 8011866:	4432      	add	r2, r6
 8011868:	b292      	uxth	r2, r2
 801186a:	2a09      	cmp	r2, #9
 801186c:	bf88      	it	hi
 801186e:	3a0a      	subhi	r2, #10
 8011870:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011874:	3401      	adds	r4, #1
 8011876:	8b52      	ldrh	r2, [r2, #26]
 8011878:	42aa      	cmp	r2, r5
 801187a:	d0e8      	beq.n	801184e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 801187c:	e7e1      	b.n	8011842 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 801187e:	2001      	movs	r0, #1
 8011880:	e7e0      	b.n	8011844 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 8011882:	bf00      	nop
 8011884:	08021bb6 	.word	0x08021bb6
 8011888:	08023a00 	.word	0x08023a00
 801188c:	08021b8a 	.word	0x08021b8a
 8011890:	080236a5 	.word	0x080236a5

08011894 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8011894:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011898:	4605      	mov	r5, r0
 801189a:	4616      	mov	r6, r2
 801189c:	1c8c      	adds	r4, r1, #2
 801189e:	8809      	ldrh	r1, [r1, #0]
 80118a0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80118a4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80118a8:	42b3      	cmp	r3, r6
 80118aa:	d124      	bne.n	80118f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80118ac:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80118b0:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80118b4:	f001 070f 	and.w	r7, r1, #15
 80118b8:	f8cd 8000 	str.w	r8, [sp]
 80118bc:	464b      	mov	r3, r9
 80118be:	4652      	mov	r2, sl
 80118c0:	4621      	mov	r1, r4
 80118c2:	4628      	mov	r0, r5
 80118c4:	f7ff ff9e 	bl	8011804 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80118c8:	4683      	mov	fp, r0
 80118ca:	b168      	cbz	r0, 80118e8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80118cc:	eb0a 0109 	add.w	r1, sl, r9
 80118d0:	4441      	add	r1, r8
 80118d2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80118d6:	463a      	mov	r2, r7
 80118d8:	4649      	mov	r1, r9
 80118da:	4628      	mov	r0, r5
 80118dc:	f7ff ff42 	bl	8011764 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80118e0:	4658      	mov	r0, fp
 80118e2:	b003      	add	sp, #12
 80118e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80118e8:	eb07 010a 	add.w	r1, r7, sl
 80118ec:	4449      	add	r1, r9
 80118ee:	4441      	add	r1, r8
 80118f0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80118f4:	e7d2      	b.n	801189c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80118f6:	f04f 0b00 	mov.w	fp, #0
 80118fa:	e7f1      	b.n	80118e0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080118fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80118fc:	b570      	push	{r4, r5, r6, lr}
 80118fe:	8810      	ldrh	r0, [r2, #0]
 8011900:	4298      	cmp	r0, r3
 8011902:	d817      	bhi.n	8011934 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011904:	1e48      	subs	r0, r1, #1
 8011906:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801190a:	4298      	cmp	r0, r3
 801190c:	d312      	bcc.n	8011934 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801190e:	2400      	movs	r4, #0
 8011910:	428c      	cmp	r4, r1
 8011912:	d20f      	bcs.n	8011934 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8011914:	1860      	adds	r0, r4, r1
 8011916:	1040      	asrs	r0, r0, #1
 8011918:	0085      	lsls	r5, r0, #2
 801191a:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801191e:	42b3      	cmp	r3, r6
 8011920:	d902      	bls.n	8011928 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8011922:	3001      	adds	r0, #1
 8011924:	b284      	uxth	r4, r0
 8011926:	e7f3      	b.n	8011910 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8011928:	d201      	bcs.n	801192e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801192a:	b281      	uxth	r1, r0
 801192c:	e7f0      	b.n	8011910 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801192e:	442a      	add	r2, r5
 8011930:	8850      	ldrh	r0, [r2, #2]
 8011932:	bd70      	pop	{r4, r5, r6, pc}
 8011934:	2000      	movs	r0, #0
 8011936:	e7fc      	b.n	8011932 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08011938 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8011938:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801193c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 801193e:	886f      	ldrh	r7, [r5, #2]
 8011940:	4604      	mov	r4, r0
 8011942:	087f      	lsrs	r7, r7, #1
 8011944:	260b      	movs	r6, #11
 8011946:	3e01      	subs	r6, #1
 8011948:	d01b      	beq.n	8011982 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801194a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801194c:	b92b      	cbnz	r3, 801195a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801194e:	4b0e      	ldr	r3, [pc, #56]	; (8011988 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 8011950:	4a0e      	ldr	r2, [pc, #56]	; (801198c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 8011952:	480f      	ldr	r0, [pc, #60]	; (8011990 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 8011954:	21c0      	movs	r1, #192	; 0xc0
 8011956:	f00d fd4d 	bl	801f3f4 <__assert_func>
 801195a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801195c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011960:	462a      	mov	r2, r5
 8011962:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 8011966:	4639      	mov	r1, r7
 8011968:	4643      	mov	r3, r8
 801196a:	4620      	mov	r0, r4
 801196c:	f7ff ffc6 	bl	80118fc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8011970:	b138      	cbz	r0, 8011982 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 8011972:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8011976:	4642      	mov	r2, r8
 8011978:	4620      	mov	r0, r4
 801197a:	f7ff ff8b 	bl	8011894 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801197e:	2800      	cmp	r0, #0
 8011980:	d1e1      	bne.n	8011946 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8011982:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011986:	bf00      	nop
 8011988:	08021ab8 	.word	0x08021ab8
 801198c:	08023777 	.word	0x08023777
 8011990:	08021b8a 	.word	0x08021b8a

08011994 <_ZN8touchgfx8ceil28_4El>:
 8011994:	f110 030f 	adds.w	r3, r0, #15
 8011998:	d401      	bmi.n	801199e <_ZN8touchgfx8ceil28_4El+0xa>
 801199a:	1118      	asrs	r0, r3, #4
 801199c:	4770      	bx	lr
 801199e:	f1c0 0001 	rsb	r0, r0, #1
 80119a2:	f010 000f 	ands.w	r0, r0, #15
 80119a6:	bf18      	it	ne
 80119a8:	2001      	movne	r0, #1
 80119aa:	2210      	movs	r2, #16
 80119ac:	fb93 f3f2 	sdiv	r3, r3, r2
 80119b0:	1a18      	subs	r0, r3, r0
 80119b2:	4770      	bx	lr

080119b4 <_ZN8touchgfx11floorDivModEllRlS0_>:
 80119b4:	2900      	cmp	r1, #0
 80119b6:	b538      	push	{r3, r4, r5, lr}
 80119b8:	dc05      	bgt.n	80119c6 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 80119ba:	4b0f      	ldr	r3, [pc, #60]	; (80119f8 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 80119bc:	4a0f      	ldr	r2, [pc, #60]	; (80119fc <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 80119be:	4810      	ldr	r0, [pc, #64]	; (8011a00 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 80119c0:	21fa      	movs	r1, #250	; 0xfa
 80119c2:	f00d fd17 	bl	801f3f4 <__assert_func>
 80119c6:	2800      	cmp	r0, #0
 80119c8:	db06      	blt.n	80119d8 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 80119ca:	fb90 f4f1 	sdiv	r4, r0, r1
 80119ce:	6014      	str	r4, [r2, #0]
 80119d0:	fb01 0114 	mls	r1, r1, r4, r0
 80119d4:	6019      	str	r1, [r3, #0]
 80119d6:	bd38      	pop	{r3, r4, r5, pc}
 80119d8:	4240      	negs	r0, r0
 80119da:	fb90 f4f1 	sdiv	r4, r0, r1
 80119de:	4265      	negs	r5, r4
 80119e0:	fb01 0014 	mls	r0, r1, r4, r0
 80119e4:	6015      	str	r5, [r2, #0]
 80119e6:	6018      	str	r0, [r3, #0]
 80119e8:	2800      	cmp	r0, #0
 80119ea:	d0f4      	beq.n	80119d6 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 80119ec:	6810      	ldr	r0, [r2, #0]
 80119ee:	3801      	subs	r0, #1
 80119f0:	6010      	str	r0, [r2, #0]
 80119f2:	6818      	ldr	r0, [r3, #0]
 80119f4:	1a09      	subs	r1, r1, r0
 80119f6:	e7ed      	b.n	80119d4 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 80119f8:	08023ad1 	.word	0x08023ad1
 80119fc:	08023b10 	.word	0x08023b10
 8011a00:	08023ae1 	.word	0x08023ae1

08011a04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8011a04:	b570      	push	{r4, r5, r6, lr}
 8011a06:	694a      	ldr	r2, [r1, #20]
 8011a08:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011a0a:	684b      	ldr	r3, [r1, #4]
 8011a0c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8011a0e:	1b54      	subs	r4, r2, r5
 8011a10:	f000 8106 	beq.w	8011c20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8011a14:	1b9b      	subs	r3, r3, r6
 8011a16:	d003      	beq.n	8011a20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011a18:	4363      	muls	r3, r4
 8011a1a:	2210      	movs	r2, #16
 8011a1c:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a20:	680c      	ldr	r4, [r1, #0]
 8011a22:	698a      	ldr	r2, [r1, #24]
 8011a24:	1b65      	subs	r5, r4, r5
 8011a26:	f000 80fd 	beq.w	8011c24 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8011a2a:	1b92      	subs	r2, r2, r6
 8011a2c:	d003      	beq.n	8011a36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011a2e:	436a      	muls	r2, r5
 8011a30:	2410      	movs	r4, #16
 8011a32:	fb92 f2f4 	sdiv	r2, r2, r4
 8011a36:	1a9b      	subs	r3, r3, r2
 8011a38:	ee07 3a90 	vmov	s15, r3
 8011a3c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8011c60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8011a40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011a44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011a48:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011a4c:	460a      	mov	r2, r1
 8011a4e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8011a52:	4603      	mov	r3, r0
 8011a54:	f100 040c 	add.w	r4, r0, #12
 8011a58:	eeb1 6a43 	vneg.f32	s12, s6
 8011a5c:	edd2 7a02 	vldr	s15, [r2, #8]
 8011a60:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8011a64:	3214      	adds	r2, #20
 8011a66:	ece3 6a01 	vstmia	r3!, {s13}
 8011a6a:	ed52 7a02 	vldr	s15, [r2, #-8]
 8011a6e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011a72:	429c      	cmp	r4, r3
 8011a74:	edc3 7a02 	vstr	s15, [r3, #8]
 8011a78:	ed52 7a01 	vldr	s15, [r2, #-4]
 8011a7c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011a80:	edc3 7a05 	vstr	s15, [r3, #20]
 8011a84:	d1ea      	bne.n	8011a5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8011a86:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011a88:	698b      	ldr	r3, [r1, #24]
 8011a8a:	edd0 4a02 	vldr	s9, [r0, #8]
 8011a8e:	edd0 3a00 	vldr	s7, [r0]
 8011a92:	edd0 6a01 	vldr	s13, [r0, #4]
 8011a96:	ed90 5a05 	vldr	s10, [r0, #20]
 8011a9a:	ed90 2a03 	vldr	s4, [r0, #12]
 8011a9e:	edd0 5a04 	vldr	s11, [r0, #16]
 8011aa2:	ed90 1a07 	vldr	s2, [r0, #28]
 8011aa6:	edd0 2a06 	vldr	s5, [r0, #24]
 8011aaa:	1a9b      	subs	r3, r3, r2
 8011aac:	ee07 3a90 	vmov	s15, r3
 8011ab0:	684b      	ldr	r3, [r1, #4]
 8011ab2:	1a9b      	subs	r3, r3, r2
 8011ab4:	ee07 3a10 	vmov	s14, r3
 8011ab8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011abc:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8011ac0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8011ac4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8011ac8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011acc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8011ad0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011ad4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8011ad8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011adc:	ee32 5a45 	vsub.f32	s10, s4, s10
 8011ae0:	ee67 7a83 	vmul.f32	s15, s15, s6
 8011ae4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8011ae8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011aea:	694a      	ldr	r2, [r1, #20]
 8011aec:	1b13      	subs	r3, r2, r4
 8011aee:	ee07 3a10 	vmov	s14, r3
 8011af2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011af6:	680b      	ldr	r3, [r1, #0]
 8011af8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011afc:	1b1b      	subs	r3, r3, r4
 8011afe:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8011b02:	ee07 3a10 	vmov	s14, r3
 8011b06:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b0a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b0e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8011b12:	ee64 4a86 	vmul.f32	s9, s9, s12
 8011b16:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8011b1a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011b1c:	698b      	ldr	r3, [r1, #24]
 8011b1e:	1a9b      	subs	r3, r3, r2
 8011b20:	ee06 3a90 	vmov	s13, r3
 8011b24:	684b      	ldr	r3, [r1, #4]
 8011b26:	1a9b      	subs	r3, r3, r2
 8011b28:	ee07 3a10 	vmov	s14, r3
 8011b2c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011b30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b34:	ee66 6a84 	vmul.f32	s13, s13, s8
 8011b38:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b3c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8011b40:	eee5 6a87 	vfma.f32	s13, s11, s14
 8011b44:	ee66 6a83 	vmul.f32	s13, s13, s6
 8011b48:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8011b4c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011b4e:	694a      	ldr	r2, [r1, #20]
 8011b50:	1b13      	subs	r3, r2, r4
 8011b52:	ee07 3a10 	vmov	s14, r3
 8011b56:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b5a:	680b      	ldr	r3, [r1, #0]
 8011b5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b60:	1b1b      	subs	r3, r3, r4
 8011b62:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8011b66:	ee07 3a10 	vmov	s14, r3
 8011b6a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b6e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011b72:	eea5 5a87 	vfma.f32	s10, s11, s14
 8011b76:	edd0 5a08 	vldr	s11, [r0, #32]
 8011b7a:	ee25 5a06 	vmul.f32	s10, s10, s12
 8011b7e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8011b82:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8011b86:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8011b88:	698b      	ldr	r3, [r1, #24]
 8011b8a:	1a9b      	subs	r3, r3, r2
 8011b8c:	ee07 3a10 	vmov	s14, r3
 8011b90:	684b      	ldr	r3, [r1, #4]
 8011b92:	1a9b      	subs	r3, r3, r2
 8011b94:	ee01 3a90 	vmov	s3, r3
 8011b98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011b9c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8011ba0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8011ba4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8011ba8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8011bac:	ee61 1a84 	vmul.f32	s3, s3, s8
 8011bb0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8011bb4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8011bb8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8011bbc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8011bbe:	694a      	ldr	r2, [r1, #20]
 8011bc0:	1b13      	subs	r3, r2, r4
 8011bc2:	ee03 3a10 	vmov	s6, r3
 8011bc6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011bca:	680b      	ldr	r3, [r1, #0]
 8011bcc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8011bd0:	1b1b      	subs	r3, r3, r4
 8011bd2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8011bd6:	ee03 3a10 	vmov	s6, r3
 8011bda:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8011bde:	ee23 4a04 	vmul.f32	s8, s6, s8
 8011be2:	eee1 5a04 	vfma.f32	s11, s2, s8
 8011be6:	ee25 6a86 	vmul.f32	s12, s11, s12
 8011bea:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8011bee:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8011bf2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8011bf6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8011bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011bfe:	dd13      	ble.n	8011c28 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8011c00:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011c04:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8011c08:	63c3      	str	r3, [r0, #60]	; 0x3c
 8011c0a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8011c0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8011c12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c16:	dd15      	ble.n	8011c44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8011c18:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8011c1c:	6403      	str	r3, [r0, #64]	; 0x40
 8011c1e:	bd70      	pop	{r4, r5, r6, pc}
 8011c20:	4623      	mov	r3, r4
 8011c22:	e6fd      	b.n	8011a20 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8011c24:	462a      	mov	r2, r5
 8011c26:	e706      	b.n	8011a36 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8011c28:	d502      	bpl.n	8011c30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8011c2a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8011c2e:	e7e9      	b.n	8011c04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8011c30:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8011c34:	eea3 2a85 	vfma.f32	s4, s7, s10
 8011c38:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8011c3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c40:	dade      	bge.n	8011c00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8011c42:	e7f2      	b.n	8011c2a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8011c44:	d502      	bpl.n	8011c4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8011c46:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8011c4a:	e7e7      	b.n	8011c1c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8011c4c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8011c50:	eee3 4a86 	vfma.f32	s9, s7, s12
 8011c54:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8011c58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011c5c:	dadc      	bge.n	8011c18 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8011c5e:	e7f2      	b.n	8011c46 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8011c60:	3d800000 	.word	0x3d800000

08011c64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8011c64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c68:	f04f 0814 	mov.w	r8, #20
 8011c6c:	fb08 f903 	mul.w	r9, r8, r3
 8011c70:	eb02 0a09 	add.w	sl, r2, r9
 8011c74:	4604      	mov	r4, r0
 8011c76:	f8da 0004 	ldr.w	r0, [sl, #4]
 8011c7a:	4617      	mov	r7, r2
 8011c7c:	460d      	mov	r5, r1
 8011c7e:	461e      	mov	r6, r3
 8011c80:	f7ff fe88 	bl	8011994 <_ZN8touchgfx8ceil28_4El>
 8011c84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011c86:	6160      	str	r0, [r4, #20]
 8011c88:	fb08 f803 	mul.w	r8, r8, r3
 8011c8c:	eb07 0b08 	add.w	fp, r7, r8
 8011c90:	9001      	str	r0, [sp, #4]
 8011c92:	f8db 0004 	ldr.w	r0, [fp, #4]
 8011c96:	f7ff fe7d 	bl	8011994 <_ZN8touchgfx8ceil28_4El>
 8011c9a:	9a01      	ldr	r2, [sp, #4]
 8011c9c:	1a80      	subs	r0, r0, r2
 8011c9e:	61a0      	str	r0, [r4, #24]
 8011ca0:	2800      	cmp	r0, #0
 8011ca2:	f000 8088 	beq.w	8011db6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 8011ca6:	f857 3009 	ldr.w	r3, [r7, r9]
 8011caa:	f857 c008 	ldr.w	ip, [r7, r8]
 8011cae:	f8da 1004 	ldr.w	r1, [sl, #4]
 8011cb2:	f8db 0004 	ldr.w	r0, [fp, #4]
 8011cb6:	ebac 0c03 	sub.w	ip, ip, r3
 8011cba:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 8011cbe:	fb0b f202 	mul.w	r2, fp, r2
 8011cc2:	fb0c 2211 	mls	r2, ip, r1, r2
 8011cc6:	1a40      	subs	r0, r0, r1
 8011cc8:	ea4f 1800 	mov.w	r8, r0, lsl #4
 8011ccc:	fb00 2003 	mla	r0, r0, r3, r2
 8011cd0:	3801      	subs	r0, #1
 8011cd2:	f104 0310 	add.w	r3, r4, #16
 8011cd6:	4622      	mov	r2, r4
 8011cd8:	4641      	mov	r1, r8
 8011cda:	4440      	add	r0, r8
 8011cdc:	f7ff fe6a 	bl	80119b4 <_ZN8touchgfx11floorDivModEllRlS0_>
 8011ce0:	f104 0308 	add.w	r3, r4, #8
 8011ce4:	1d22      	adds	r2, r4, #4
 8011ce6:	4641      	mov	r1, r8
 8011ce8:	4658      	mov	r0, fp
 8011cea:	f7ff fe63 	bl	80119b4 <_ZN8touchgfx11floorDivModEllRlS0_>
 8011cee:	f8c4 800c 	str.w	r8, [r4, #12]
 8011cf2:	f8da 3004 	ldr.w	r3, [sl, #4]
 8011cf6:	6962      	ldr	r2, [r4, #20]
 8011cf8:	eddf 6a31 	vldr	s13, [pc, #196]	; 8011dc0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8011cfc:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8011d00:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8011d04:	ee07 3a10 	vmov	s14, r3
 8011d08:	6822      	ldr	r2, [r4, #0]
 8011d0a:	f857 3009 	ldr.w	r3, [r7, r9]
 8011d0e:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 8011d12:	ee07 3a90 	vmov	s15, r3
 8011d16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011d1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011d1e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 8011d22:	ee27 7a26 	vmul.f32	s14, s14, s13
 8011d26:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8011d2a:	edd3 6a00 	vldr	s13, [r3]
 8011d2e:	eee6 6a07 	vfma.f32	s13, s12, s14
 8011d32:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8011d36:	eee6 6a27 	vfma.f32	s13, s12, s15
 8011d3a:	edc4 6a07 	vstr	s13, [r4, #28]
 8011d3e:	edd4 6a01 	vldr	s13, [r4, #4]
 8011d42:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 8011d46:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 8011d4a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8011d4e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011d52:	ed84 6a08 	vstr	s12, [r4, #32]
 8011d56:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8011d58:	6262      	str	r2, [r4, #36]	; 0x24
 8011d5a:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 8011d5e:	ed93 6a03 	vldr	s12, [r3, #12]
 8011d62:	eea5 6a87 	vfma.f32	s12, s11, s14
 8011d66:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8011d6a:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8011d6e:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 8011d72:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 8011d76:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 8011d7a:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8011d7e:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 8011d82:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8011d84:	6322      	str	r2, [r4, #48]	; 0x30
 8011d86:	ed93 6a06 	vldr	s12, [r3, #24]
 8011d8a:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 8011d8e:	eea5 6a87 	vfma.f32	s12, s11, s14
 8011d92:	eeb0 7a46 	vmov.f32	s14, s12
 8011d96:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 8011d9a:	eea6 7a27 	vfma.f32	s14, s12, s15
 8011d9e:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 8011da2:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 8011da6:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 8011daa:	eee6 7a87 	vfma.f32	s15, s13, s14
 8011dae:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 8011db2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8011db4:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011db6:	4620      	mov	r0, r4
 8011db8:	b003      	add	sp, #12
 8011dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dbe:	bf00      	nop
 8011dc0:	3d800000 	.word	0x3d800000

08011dc4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8011dc4:	4b01      	ldr	r3, [pc, #4]	; (8011dcc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8011dc6:	6018      	str	r0, [r3, #0]
 8011dc8:	4770      	bx	lr
 8011dca:	bf00      	nop
 8011dcc:	2000d48c 	.word	0x2000d48c

08011dd0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8011dd0:	4b06      	ldr	r3, [pc, #24]	; (8011dec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8011dd2:	881a      	ldrh	r2, [r3, #0]
 8011dd4:	4282      	cmp	r2, r0
 8011dd6:	d807      	bhi.n	8011de8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8011dd8:	4b05      	ldr	r3, [pc, #20]	; (8011df0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8011dda:	881b      	ldrh	r3, [r3, #0]
 8011ddc:	4413      	add	r3, r2
 8011dde:	4298      	cmp	r0, r3
 8011de0:	bfac      	ite	ge
 8011de2:	2000      	movge	r0, #0
 8011de4:	2001      	movlt	r0, #1
 8011de6:	4770      	bx	lr
 8011de8:	2000      	movs	r0, #0
 8011dea:	4770      	bx	lr
 8011dec:	2000d4ac 	.word	0x2000d4ac
 8011df0:	2000d4b0 	.word	0x2000d4b0

08011df4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8011df4:	b508      	push	{r3, lr}
 8011df6:	4601      	mov	r1, r0
 8011df8:	f7ff ffea 	bl	8011dd0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8011dfc:	b118      	cbz	r0, 8011e06 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8011dfe:	4b02      	ldr	r3, [pc, #8]	; (8011e08 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8011e00:	681b      	ldr	r3, [r3, #0]
 8011e02:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8011e06:	bd08      	pop	{r3, pc}
 8011e08:	2000d490 	.word	0x2000d490

08011e0c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8011e0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e10:	4d28      	ldr	r5, [pc, #160]	; (8011eb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8011e12:	682b      	ldr	r3, [r5, #0]
 8011e14:	2b00      	cmp	r3, #0
 8011e16:	d04a      	beq.n	8011eae <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8011e18:	4a27      	ldr	r2, [pc, #156]	; (8011eb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8011e1a:	4e28      	ldr	r6, [pc, #160]	; (8011ebc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8011e1c:	8810      	ldrh	r0, [r2, #0]
 8011e1e:	f8b6 8000 	ldrh.w	r8, [r6]
 8011e22:	4c27      	ldr	r4, [pc, #156]	; (8011ec0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8011e24:	4f27      	ldr	r7, [pc, #156]	; (8011ec4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8011e26:	4440      	add	r0, r8
 8011e28:	1c41      	adds	r1, r0, #1
 8011e2a:	f021 0101 	bic.w	r1, r1, #1
 8011e2e:	0409      	lsls	r1, r1, #16
 8011e30:	0c09      	lsrs	r1, r1, #16
 8011e32:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 8011e36:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8011e3a:	eb03 020e 	add.w	r2, r3, lr
 8011e3e:	eb0e 010c 	add.w	r1, lr, ip
 8011e42:	6022      	str	r2, [r4, #0]
 8011e44:	185a      	adds	r2, r3, r1
 8011e46:	603a      	str	r2, [r7, #0]
 8011e48:	220e      	movs	r2, #14
 8011e4a:	fb02 f208 	mul.w	r2, r2, r8
 8011e4e:	3203      	adds	r2, #3
 8011e50:	f022 0203 	bic.w	r2, r2, #3
 8011e54:	4411      	add	r1, r2
 8011e56:	440b      	add	r3, r1
 8011e58:	491b      	ldr	r1, [pc, #108]	; (8011ec8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 8011e5a:	600b      	str	r3, [r1, #0]
 8011e5c:	491b      	ldr	r1, [pc, #108]	; (8011ecc <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 8011e5e:	2300      	movs	r3, #0
 8011e60:	800b      	strh	r3, [r1, #0]
 8011e62:	491b      	ldr	r1, [pc, #108]	; (8011ed0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 8011e64:	6809      	ldr	r1, [r1, #0]
 8011e66:	eba1 010e 	sub.w	r1, r1, lr
 8011e6a:	eba1 010c 	sub.w	r1, r1, ip
 8011e6e:	1a8a      	subs	r2, r1, r2
 8011e70:	4918      	ldr	r1, [pc, #96]	; (8011ed4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 8011e72:	600a      	str	r2, [r1, #0]
 8011e74:	4a18      	ldr	r2, [pc, #96]	; (8011ed8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 8011e76:	469c      	mov	ip, r3
 8011e78:	8013      	strh	r3, [r2, #0]
 8011e7a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011e7e:	4283      	cmp	r3, r0
 8011e80:	d10d      	bne.n	8011e9e <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 8011e82:	8835      	ldrh	r5, [r6, #0]
 8011e84:	6838      	ldr	r0, [r7, #0]
 8011e86:	2300      	movs	r3, #0
 8011e88:	240e      	movs	r4, #14
 8011e8a:	429d      	cmp	r5, r3
 8011e8c:	d90f      	bls.n	8011eae <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 8011e8e:	fb04 0203 	mla	r2, r4, r3, r0
 8011e92:	3301      	adds	r3, #1
 8011e94:	7b11      	ldrb	r1, [r2, #12]
 8011e96:	f36f 1145 	bfc	r1, #5, #1
 8011e9a:	7311      	strb	r1, [r2, #12]
 8011e9c:	e7f5      	b.n	8011e8a <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 8011e9e:	682a      	ldr	r2, [r5, #0]
 8011ea0:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8011ea4:	6822      	ldr	r2, [r4, #0]
 8011ea6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 8011eaa:	3301      	adds	r3, #1
 8011eac:	e7e7      	b.n	8011e7e <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 8011eae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011eb2:	bf00      	nop
 8011eb4:	2000d490 	.word	0x2000d490
 8011eb8:	2000d4ac 	.word	0x2000d4ac
 8011ebc:	2000d4b0 	.word	0x2000d4b0
 8011ec0:	2000d4a4 	.word	0x2000d4a4
 8011ec4:	2000d494 	.word	0x2000d494
 8011ec8:	2000d49c 	.word	0x2000d49c
 8011ecc:	2000d4ae 	.word	0x2000d4ae
 8011ed0:	2000d498 	.word	0x2000d498
 8011ed4:	2000d4a8 	.word	0x2000d4a8
 8011ed8:	2000d4a0 	.word	0x2000d4a0

08011edc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8011edc:	b510      	push	{r4, lr}
 8011ede:	4b10      	ldr	r3, [pc, #64]	; (8011f20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 8011ee0:	681b      	ldr	r3, [r3, #0]
 8011ee2:	b9db      	cbnz	r3, 8011f1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8011ee4:	b1d1      	cbz	r1, 8011f1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 8011ee6:	4b0f      	ldr	r3, [pc, #60]	; (8011f24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 8011ee8:	801a      	strh	r2, [r3, #0]
 8011eea:	4b0f      	ldr	r3, [pc, #60]	; (8011f28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 8011eec:	881b      	ldrh	r3, [r3, #0]
 8011eee:	b292      	uxth	r2, r2
 8011ef0:	240e      	movs	r4, #14
 8011ef2:	4413      	add	r3, r2
 8011ef4:	4362      	muls	r2, r4
 8011ef6:	2406      	movs	r4, #6
 8011ef8:	fb04 2203 	mla	r2, r4, r3, r2
 8011efc:	428a      	cmp	r2, r1
 8011efe:	d305      	bcc.n	8011f0c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 8011f00:	4b0a      	ldr	r3, [pc, #40]	; (8011f2c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 8011f02:	4a0b      	ldr	r2, [pc, #44]	; (8011f30 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 8011f04:	480b      	ldr	r0, [pc, #44]	; (8011f34 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 8011f06:	2137      	movs	r1, #55	; 0x37
 8011f08:	f00d fa74 	bl	801f3f4 <__assert_func>
 8011f0c:	4b0a      	ldr	r3, [pc, #40]	; (8011f38 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 8011f0e:	6019      	str	r1, [r3, #0]
 8011f10:	4b0a      	ldr	r3, [pc, #40]	; (8011f3c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 8011f12:	6018      	str	r0, [r3, #0]
 8011f14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f18:	f7ff bf78 	b.w	8011e0c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8011f1c:	bd10      	pop	{r4, pc}
 8011f1e:	bf00      	nop
 8011f20:	2000d49c 	.word	0x2000d49c
 8011f24:	2000d4b0 	.word	0x2000d4b0
 8011f28:	2000d4ac 	.word	0x2000d4ac
 8011f2c:	08023bae 	.word	0x08023bae
 8011f30:	08023c07 	.word	0x08023c07
 8011f34:	08023b89 	.word	0x08023b89
 8011f38:	2000d498 	.word	0x2000d498
 8011f3c:	2000d490 	.word	0x2000d490

08011f40 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8011f40:	b470      	push	{r4, r5, r6}
 8011f42:	4c07      	ldr	r4, [pc, #28]	; (8011f60 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8011f44:	6826      	ldr	r6, [r4, #0]
 8011f46:	4605      	mov	r5, r0
 8011f48:	4610      	mov	r0, r2
 8011f4a:	9a03      	ldr	r2, [sp, #12]
 8011f4c:	b936      	cbnz	r6, 8011f5c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8011f4e:	6025      	str	r5, [r4, #0]
 8011f50:	4c04      	ldr	r4, [pc, #16]	; (8011f64 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8011f52:	8021      	strh	r1, [r4, #0]
 8011f54:	bc70      	pop	{r4, r5, r6}
 8011f56:	4619      	mov	r1, r3
 8011f58:	f7ff bfc0 	b.w	8011edc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8011f5c:	bc70      	pop	{r4, r5, r6}
 8011f5e:	4770      	bx	lr
 8011f60:	2000d4b4 	.word	0x2000d4b4
 8011f64:	2000d4ac 	.word	0x2000d4ac

08011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8011f68:	b508      	push	{r3, lr}
 8011f6a:	4b14      	ldr	r3, [pc, #80]	; (8011fbc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8011f6c:	6819      	ldr	r1, [r3, #0]
 8011f6e:	b931      	cbnz	r1, 8011f7e <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 8011f70:	4b13      	ldr	r3, [pc, #76]	; (8011fc0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8011f72:	4a14      	ldr	r2, [pc, #80]	; (8011fc4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8011f74:	4814      	ldr	r0, [pc, #80]	; (8011fc8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8011f76:	f240 3187 	movw	r1, #903	; 0x387
 8011f7a:	f00d fa3b 	bl	801f3f4 <__assert_func>
 8011f7e:	4a13      	ldr	r2, [pc, #76]	; (8011fcc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8011f80:	8803      	ldrh	r3, [r0, #0]
 8011f82:	8812      	ldrh	r2, [r2, #0]
 8011f84:	4293      	cmp	r3, r2
 8011f86:	d204      	bcs.n	8011f92 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 8011f88:	2214      	movs	r2, #20
 8011f8a:	fb02 1303 	mla	r3, r2, r3, r1
 8011f8e:	8918      	ldrh	r0, [r3, #8]
 8011f90:	bd08      	pop	{r3, pc}
 8011f92:	490f      	ldr	r1, [pc, #60]	; (8011fd0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 8011f94:	8809      	ldrh	r1, [r1, #0]
 8011f96:	4411      	add	r1, r2
 8011f98:	428b      	cmp	r3, r1
 8011f9a:	da06      	bge.n	8011faa <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 8011f9c:	1a9b      	subs	r3, r3, r2
 8011f9e:	4a0d      	ldr	r2, [pc, #52]	; (8011fd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 8011fa0:	6812      	ldr	r2, [r2, #0]
 8011fa2:	210e      	movs	r1, #14
 8011fa4:	fb01 2303 	mla	r3, r1, r3, r2
 8011fa8:	e7f1      	b.n	8011f8e <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 8011faa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011fae:	4293      	cmp	r3, r2
 8011fb0:	bf0a      	itet	eq
 8011fb2:	4b09      	ldreq	r3, [pc, #36]	; (8011fd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 8011fb4:	2000      	movne	r0, #0
 8011fb6:	8818      	ldrheq	r0, [r3, #0]
 8011fb8:	e7ea      	b.n	8011f90 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 8011fba:	bf00      	nop
 8011fbc:	2000d4b4 	.word	0x2000d4b4
 8011fc0:	08022a6c 	.word	0x08022a6c
 8011fc4:	08023cb4 	.word	0x08023cb4
 8011fc8:	08023b89 	.word	0x08023b89
 8011fcc:	2000d4ac 	.word	0x2000d4ac
 8011fd0:	2000d4b0 	.word	0x2000d4b0
 8011fd4:	2000d494 	.word	0x2000d494
 8011fd8:	2000d400 	.word	0x2000d400

08011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8011fdc:	b508      	push	{r3, lr}
 8011fde:	4b14      	ldr	r3, [pc, #80]	; (8012030 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8011fe0:	6819      	ldr	r1, [r3, #0]
 8011fe2:	b931      	cbnz	r1, 8011ff2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 8011fe4:	4b13      	ldr	r3, [pc, #76]	; (8012034 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8011fe6:	4a14      	ldr	r2, [pc, #80]	; (8012038 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8011fe8:	4814      	ldr	r0, [pc, #80]	; (801203c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8011fea:	f240 319b 	movw	r1, #923	; 0x39b
 8011fee:	f00d fa01 	bl	801f3f4 <__assert_func>
 8011ff2:	4a13      	ldr	r2, [pc, #76]	; (8012040 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8011ff4:	8803      	ldrh	r3, [r0, #0]
 8011ff6:	8812      	ldrh	r2, [r2, #0]
 8011ff8:	4293      	cmp	r3, r2
 8011ffa:	d204      	bcs.n	8012006 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 8011ffc:	2214      	movs	r2, #20
 8011ffe:	fb02 1303 	mla	r3, r2, r3, r1
 8012002:	8958      	ldrh	r0, [r3, #10]
 8012004:	bd08      	pop	{r3, pc}
 8012006:	490f      	ldr	r1, [pc, #60]	; (8012044 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 8012008:	8809      	ldrh	r1, [r1, #0]
 801200a:	4411      	add	r1, r2
 801200c:	428b      	cmp	r3, r1
 801200e:	da06      	bge.n	801201e <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 8012010:	1a9b      	subs	r3, r3, r2
 8012012:	4a0d      	ldr	r2, [pc, #52]	; (8012048 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 8012014:	6812      	ldr	r2, [r2, #0]
 8012016:	210e      	movs	r1, #14
 8012018:	fb01 2303 	mla	r3, r1, r3, r2
 801201c:	e7f1      	b.n	8012002 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 801201e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8012022:	4293      	cmp	r3, r2
 8012024:	bf0a      	itet	eq
 8012026:	4b09      	ldreq	r3, [pc, #36]	; (801204c <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 8012028:	2000      	movne	r0, #0
 801202a:	8818      	ldrheq	r0, [r3, #0]
 801202c:	e7ea      	b.n	8012004 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801202e:	bf00      	nop
 8012030:	2000d4b4 	.word	0x2000d4b4
 8012034:	08022a6c 	.word	0x08022a6c
 8012038:	08023ce0 	.word	0x08023ce0
 801203c:	08023b89 	.word	0x08023b89
 8012040:	2000d4ac 	.word	0x2000d4ac
 8012044:	2000d4b0 	.word	0x2000d4b0
 8012048:	2000d494 	.word	0x2000d494
 801204c:	2000d402 	.word	0x2000d402

08012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012050:	b510      	push	{r4, lr}
 8012052:	4b23      	ldr	r3, [pc, #140]	; (80120e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012054:	681c      	ldr	r4, [r3, #0]
 8012056:	b934      	cbnz	r4, 8012066 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 8012058:	4b22      	ldr	r3, [pc, #136]	; (80120e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801205a:	4a23      	ldr	r2, [pc, #140]	; (80120e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801205c:	4823      	ldr	r0, [pc, #140]	; (80120ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801205e:	f240 31af 	movw	r1, #943	; 0x3af
 8012062:	f00d f9c7 	bl	801f3f4 <__assert_func>
 8012066:	4a22      	ldr	r2, [pc, #136]	; (80120f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8012068:	880b      	ldrh	r3, [r1, #0]
 801206a:	8812      	ldrh	r2, [r2, #0]
 801206c:	4293      	cmp	r3, r2
 801206e:	d211      	bcs.n	8012094 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 8012070:	2214      	movs	r2, #20
 8012072:	fb02 4303 	mla	r3, r2, r3, r4
 8012076:	8a1a      	ldrh	r2, [r3, #16]
 8012078:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801207c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012080:	8a5b      	ldrh	r3, [r3, #18]
 8012082:	8004      	strh	r4, [r0, #0]
 8012084:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012088:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801208c:	8041      	strh	r1, [r0, #2]
 801208e:	8082      	strh	r2, [r0, #4]
 8012090:	80c3      	strh	r3, [r0, #6]
 8012092:	e00e      	b.n	80120b2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 8012094:	4917      	ldr	r1, [pc, #92]	; (80120f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 8012096:	8809      	ldrh	r1, [r1, #0]
 8012098:	4411      	add	r1, r2
 801209a:	428b      	cmp	r3, r1
 801209c:	da0a      	bge.n	80120b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801209e:	1a9b      	subs	r3, r3, r2
 80120a0:	4a15      	ldr	r2, [pc, #84]	; (80120f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 80120a2:	6812      	ldr	r2, [r2, #0]
 80120a4:	210e      	movs	r1, #14
 80120a6:	fb01 2303 	mla	r3, r1, r3, r2
 80120aa:	681a      	ldr	r2, [r3, #0]
 80120ac:	6002      	str	r2, [r0, #0]
 80120ae:	685a      	ldr	r2, [r3, #4]
 80120b0:	6042      	str	r2, [r0, #4]
 80120b2:	bd10      	pop	{r4, pc}
 80120b4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80120b8:	4293      	cmp	r3, r2
 80120ba:	d10b      	bne.n	80120d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 80120bc:	4b0f      	ldr	r3, [pc, #60]	; (80120fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 80120be:	f9b3 1000 	ldrsh.w	r1, [r3]
 80120c2:	4b0f      	ldr	r3, [pc, #60]	; (8012100 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 80120c4:	8081      	strh	r1, [r0, #4]
 80120c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80120ca:	80c2      	strh	r2, [r0, #6]
 80120cc:	2300      	movs	r3, #0
 80120ce:	8003      	strh	r3, [r0, #0]
 80120d0:	8043      	strh	r3, [r0, #2]
 80120d2:	e7ee      	b.n	80120b2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 80120d4:	2300      	movs	r3, #0
 80120d6:	8003      	strh	r3, [r0, #0]
 80120d8:	8043      	strh	r3, [r0, #2]
 80120da:	8083      	strh	r3, [r0, #4]
 80120dc:	e7d8      	b.n	8012090 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 80120de:	bf00      	nop
 80120e0:	2000d4b4 	.word	0x2000d4b4
 80120e4:	08022a6c 	.word	0x08022a6c
 80120e8:	08023c4d 	.word	0x08023c4d
 80120ec:	08023b89 	.word	0x08023b89
 80120f0:	2000d4ac 	.word	0x2000d4ac
 80120f4:	2000d4b0 	.word	0x2000d4b0
 80120f8:	2000d494 	.word	0x2000d494
 80120fc:	2000d400 	.word	0x2000d400
 8012100:	2000d402 	.word	0x2000d402

08012104 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8012104:	4b18      	ldr	r3, [pc, #96]	; (8012168 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8012106:	681b      	ldr	r3, [r3, #0]
 8012108:	b34b      	cbz	r3, 801215e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801210a:	4a18      	ldr	r2, [pc, #96]	; (801216c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801210c:	8800      	ldrh	r0, [r0, #0]
 801210e:	8812      	ldrh	r2, [r2, #0]
 8012110:	4290      	cmp	r0, r2
 8012112:	d211      	bcs.n	8012138 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 8012114:	2214      	movs	r2, #20
 8012116:	fb02 3300 	mla	r3, r2, r0, r3
 801211a:	8a1a      	ldrh	r2, [r3, #16]
 801211c:	8919      	ldrh	r1, [r3, #8]
 801211e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8012122:	428a      	cmp	r2, r1
 8012124:	db1d      	blt.n	8012162 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8012126:	8a58      	ldrh	r0, [r3, #18]
 8012128:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801212c:	895b      	ldrh	r3, [r3, #10]
 801212e:	4298      	cmp	r0, r3
 8012130:	bfac      	ite	ge
 8012132:	2000      	movge	r0, #0
 8012134:	2001      	movlt	r0, #1
 8012136:	4770      	bx	lr
 8012138:	4b0d      	ldr	r3, [pc, #52]	; (8012170 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801213a:	881b      	ldrh	r3, [r3, #0]
 801213c:	4413      	add	r3, r2
 801213e:	4298      	cmp	r0, r3
 8012140:	da0d      	bge.n	801215e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 8012142:	4b0c      	ldr	r3, [pc, #48]	; (8012174 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 8012144:	681b      	ldr	r3, [r3, #0]
 8012146:	1a80      	subs	r0, r0, r2
 8012148:	220e      	movs	r2, #14
 801214a:	fb02 3300 	mla	r3, r2, r0, r3
 801214e:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012152:	891a      	ldrh	r2, [r3, #8]
 8012154:	4291      	cmp	r1, r2
 8012156:	db04      	blt.n	8012162 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 8012158:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801215c:	e7e6      	b.n	801212c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 801215e:	2000      	movs	r0, #0
 8012160:	4770      	bx	lr
 8012162:	2001      	movs	r0, #1
 8012164:	4770      	bx	lr
 8012166:	bf00      	nop
 8012168:	2000d4b4 	.word	0x2000d4b4
 801216c:	2000d4ac 	.word	0x2000d4ac
 8012170:	2000d4b0 	.word	0x2000d4b0
 8012174:	2000d494 	.word	0x2000d494

08012178 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8012178:	b508      	push	{r3, lr}
 801217a:	4b12      	ldr	r3, [pc, #72]	; (80121c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801217c:	6819      	ldr	r1, [r3, #0]
 801217e:	b931      	cbnz	r1, 801218e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8012180:	4b11      	ldr	r3, [pc, #68]	; (80121c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012182:	4a12      	ldr	r2, [pc, #72]	; (80121cc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012184:	4812      	ldr	r0, [pc, #72]	; (80121d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012186:	f240 31d3 	movw	r1, #979	; 0x3d3
 801218a:	f00d f933 	bl	801f3f4 <__assert_func>
 801218e:	8803      	ldrh	r3, [r0, #0]
 8012190:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012194:	4293      	cmp	r3, r2
 8012196:	d012      	beq.n	80121be <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8012198:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801219c:	4293      	cmp	r3, r2
 801219e:	d103      	bne.n	80121a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 80121a0:	4b0c      	ldr	r3, [pc, #48]	; (80121d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80121a2:	681b      	ldr	r3, [r3, #0]
 80121a4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80121a6:	bd08      	pop	{r3, pc}
 80121a8:	4a0b      	ldr	r2, [pc, #44]	; (80121d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 80121aa:	6812      	ldr	r2, [r2, #0]
 80121ac:	b11a      	cbz	r2, 80121b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 80121ae:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80121b2:	2800      	cmp	r0, #0
 80121b4:	d1f7      	bne.n	80121a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80121b6:	2214      	movs	r2, #20
 80121b8:	4353      	muls	r3, r2
 80121ba:	58c8      	ldr	r0, [r1, r3]
 80121bc:	e7f3      	b.n	80121a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80121be:	2000      	movs	r0, #0
 80121c0:	e7f1      	b.n	80121a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 80121c2:	bf00      	nop
 80121c4:	2000d4b4 	.word	0x2000d4b4
 80121c8:	08022a6c 	.word	0x08022a6c
 80121cc:	08023c83 	.word	0x08023c83
 80121d0:	08023b89 	.word	0x08023b89
 80121d4:	2000d40c 	.word	0x2000d40c
 80121d8:	2000d490 	.word	0x2000d490

080121dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80121dc:	8802      	ldrh	r2, [r0, #0]
 80121de:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 80121e2:	429a      	cmp	r2, r3
 80121e4:	d845      	bhi.n	8012272 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 80121e6:	4b24      	ldr	r3, [pc, #144]	; (8012278 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80121e8:	8818      	ldrh	r0, [r3, #0]
 80121ea:	4282      	cmp	r2, r0
 80121ec:	d221      	bcs.n	8012232 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 80121ee:	4b23      	ldr	r3, [pc, #140]	; (801227c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80121f0:	6819      	ldr	r1, [r3, #0]
 80121f2:	2314      	movs	r3, #20
 80121f4:	fb03 1302 	mla	r3, r3, r2, r1
 80121f8:	6858      	ldr	r0, [r3, #4]
 80121fa:	2800      	cmp	r0, #0
 80121fc:	d03a      	beq.n	8012274 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 80121fe:	4920      	ldr	r1, [pc, #128]	; (8012280 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012200:	6809      	ldr	r1, [r1, #0]
 8012202:	2900      	cmp	r1, #0
 8012204:	d036      	beq.n	8012274 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 8012206:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801220a:	2900      	cmp	r1, #0
 801220c:	d032      	beq.n	8012274 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801220e:	891a      	ldrh	r2, [r3, #8]
 8012210:	8958      	ldrh	r0, [r3, #10]
 8012212:	4350      	muls	r0, r2
 8012214:	7c5a      	ldrb	r2, [r3, #17]
 8012216:	7cdb      	ldrb	r3, [r3, #19]
 8012218:	0952      	lsrs	r2, r2, #5
 801221a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801221e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8012222:	2b0b      	cmp	r3, #11
 8012224:	bf18      	it	ne
 8012226:	0040      	lslne	r0, r0, #1
 8012228:	3003      	adds	r0, #3
 801222a:	f020 0003 	bic.w	r0, r0, #3
 801222e:	4408      	add	r0, r1
 8012230:	4770      	bx	lr
 8012232:	4b14      	ldr	r3, [pc, #80]	; (8012284 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 8012234:	881b      	ldrh	r3, [r3, #0]
 8012236:	4403      	add	r3, r0
 8012238:	429a      	cmp	r2, r3
 801223a:	da1a      	bge.n	8012272 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801223c:	4b12      	ldr	r3, [pc, #72]	; (8012288 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 801223e:	681b      	ldr	r3, [r3, #0]
 8012240:	1a10      	subs	r0, r2, r0
 8012242:	210e      	movs	r1, #14
 8012244:	fb01 3000 	mla	r0, r1, r0, r3
 8012248:	7b03      	ldrb	r3, [r0, #12]
 801224a:	f003 031f 	and.w	r3, r3, #31
 801224e:	2b0b      	cmp	r3, #11
 8012250:	d10b      	bne.n	801226a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012252:	8903      	ldrh	r3, [r0, #8]
 8012254:	8940      	ldrh	r0, [r0, #10]
 8012256:	4358      	muls	r0, r3
 8012258:	4b09      	ldr	r3, [pc, #36]	; (8012280 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801225a:	6819      	ldr	r1, [r3, #0]
 801225c:	3003      	adds	r0, #3
 801225e:	f020 0303 	bic.w	r3, r0, #3
 8012262:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8012266:	4418      	add	r0, r3
 8012268:	4770      	bx	lr
 801226a:	2b0d      	cmp	r3, #13
 801226c:	d101      	bne.n	8012272 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801226e:	300d      	adds	r0, #13
 8012270:	4770      	bx	lr
 8012272:	2000      	movs	r0, #0
 8012274:	4770      	bx	lr
 8012276:	bf00      	nop
 8012278:	2000d4ac 	.word	0x2000d4ac
 801227c:	2000d4b4 	.word	0x2000d4b4
 8012280:	2000d490 	.word	0x2000d490
 8012284:	2000d4b0 	.word	0x2000d4b0
 8012288:	2000d494 	.word	0x2000d494

0801228c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801228c:	4b19      	ldr	r3, [pc, #100]	; (80122f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801228e:	6819      	ldr	r1, [r3, #0]
 8012290:	8803      	ldrh	r3, [r0, #0]
 8012292:	b1e9      	cbz	r1, 80122d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8012294:	4a18      	ldr	r2, [pc, #96]	; (80122f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8012296:	8812      	ldrh	r2, [r2, #0]
 8012298:	429a      	cmp	r2, r3
 801229a:	d90a      	bls.n	80122b2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801229c:	2214      	movs	r2, #20
 801229e:	fb02 1303 	mla	r3, r2, r3, r1
 80122a2:	7c58      	ldrb	r0, [r3, #17]
 80122a4:	0942      	lsrs	r2, r0, #5
 80122a6:	7cd8      	ldrb	r0, [r3, #19]
 80122a8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80122ac:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80122b0:	4770      	bx	lr
 80122b2:	4912      	ldr	r1, [pc, #72]	; (80122fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 80122b4:	8809      	ldrh	r1, [r1, #0]
 80122b6:	4411      	add	r1, r2
 80122b8:	428b      	cmp	r3, r1
 80122ba:	da09      	bge.n	80122d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80122bc:	1a9b      	subs	r3, r3, r2
 80122be:	4a10      	ldr	r2, [pc, #64]	; (8012300 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 80122c0:	6812      	ldr	r2, [r2, #0]
 80122c2:	210e      	movs	r1, #14
 80122c4:	fb01 2303 	mla	r3, r1, r3, r2
 80122c8:	7b18      	ldrb	r0, [r3, #12]
 80122ca:	f000 001f 	and.w	r0, r0, #31
 80122ce:	4770      	bx	lr
 80122d0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80122d4:	4293      	cmp	r3, r2
 80122d6:	d10a      	bne.n	80122ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 80122d8:	4b0a      	ldr	r3, [pc, #40]	; (8012304 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 80122da:	681b      	ldr	r3, [r3, #0]
 80122dc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80122e0:	b10a      	cbz	r2, 80122e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80122e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80122e4:	b900      	cbnz	r0, 80122e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 80122e6:	6898      	ldr	r0, [r3, #8]
 80122e8:	6803      	ldr	r3, [r0, #0]
 80122ea:	6a1b      	ldr	r3, [r3, #32]
 80122ec:	4718      	bx	r3
 80122ee:	2000      	movs	r0, #0
 80122f0:	4770      	bx	lr
 80122f2:	bf00      	nop
 80122f4:	2000d4b4 	.word	0x2000d4b4
 80122f8:	2000d4ac 	.word	0x2000d4ac
 80122fc:	2000d4b0 	.word	0x2000d4b0
 8012300:	2000d494 	.word	0x2000d494
 8012304:	2000d40c 	.word	0x2000d40c

08012308 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8012308:	2010      	movs	r0, #16
 801230a:	4770      	bx	lr

0801230c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801230c:	2000      	movs	r0, #0
 801230e:	4770      	bx	lr

08012310 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 8012310:	00d2      	lsls	r2, r2, #3
 8012312:	0209      	lsls	r1, r1, #8
 8012314:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012318:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 801231c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8012320:	4310      	orrs	r0, r2
 8012322:	4770      	bx	lr

08012324 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 8012324:	0a09      	lsrs	r1, r1, #8
 8012326:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 801232a:	4770      	bx	lr

0801232c <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 801232c:	08c9      	lsrs	r1, r1, #3
 801232e:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 8012332:	4770      	bx	lr

08012334 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 8012334:	00c9      	lsls	r1, r1, #3
 8012336:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 801233a:	4770      	bx	lr

0801233c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801233c:	2bff      	cmp	r3, #255	; 0xff
 801233e:	d050      	beq.n	80123e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012340:	2a0b      	cmp	r2, #11
 8012342:	d04a      	beq.n	80123da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8012344:	d80e      	bhi.n	8012364 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012346:	2a03      	cmp	r2, #3
 8012348:	d03f      	beq.n	80123ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801234a:	d804      	bhi.n	8012356 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801234c:	2a01      	cmp	r2, #1
 801234e:	d03e      	beq.n	80123ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8012350:	d93f      	bls.n	80123d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8012352:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8012354:	4770      	bx	lr
 8012356:	2a09      	cmp	r2, #9
 8012358:	d03f      	beq.n	80123da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801235a:	d83c      	bhi.n	80123d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801235c:	2a08      	cmp	r2, #8
 801235e:	d03a      	beq.n	80123d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8012360:	2000      	movs	r0, #0
 8012362:	4770      	bx	lr
 8012364:	2a2f      	cmp	r2, #47	; 0x2f
 8012366:	d024      	beq.n	80123b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8012368:	d80d      	bhi.n	8012386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801236a:	2a2d      	cmp	r2, #45	; 0x2d
 801236c:	d014      	beq.n	8012398 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801236e:	d826      	bhi.n	80123be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012370:	2a2c      	cmp	r2, #44	; 0x2c
 8012372:	d1f5      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012374:	684b      	ldr	r3, [r1, #4]
 8012376:	781b      	ldrb	r3, [r3, #0]
 8012378:	2b01      	cmp	r3, #1
 801237a:	d018      	beq.n	80123ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801237c:	d323      	bcc.n	80123c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801237e:	2b02      	cmp	r3, #2
 8012380:	d1ee      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012382:	6880      	ldr	r0, [r0, #8]
 8012384:	4770      	bx	lr
 8012386:	2a31      	cmp	r2, #49	; 0x31
 8012388:	d004      	beq.n	8012394 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801238a:	d328      	bcc.n	80123de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801238c:	2a32      	cmp	r2, #50	; 0x32
 801238e:	d026      	beq.n	80123de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8012390:	2a33      	cmp	r2, #51	; 0x33
 8012392:	d1e5      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012394:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8012396:	4770      	bx	lr
 8012398:	684b      	ldr	r3, [r1, #4]
 801239a:	781b      	ldrb	r3, [r3, #0]
 801239c:	2b01      	cmp	r3, #1
 801239e:	d004      	beq.n	80123aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80123a0:	d30b      	bcc.n	80123ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80123a2:	2b02      	cmp	r3, #2
 80123a4:	d1dc      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80123a6:	6900      	ldr	r0, [r0, #16]
 80123a8:	4770      	bx	lr
 80123aa:	6a00      	ldr	r0, [r0, #32]
 80123ac:	4770      	bx	lr
 80123ae:	6980      	ldr	r0, [r0, #24]
 80123b0:	4770      	bx	lr
 80123b2:	684b      	ldr	r3, [r1, #4]
 80123b4:	781b      	ldrb	r3, [r3, #0]
 80123b6:	2b00      	cmp	r3, #0
 80123b8:	d1d2      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80123ba:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80123bc:	4770      	bx	lr
 80123be:	684b      	ldr	r3, [r1, #4]
 80123c0:	781b      	ldrb	r3, [r3, #0]
 80123c2:	2b00      	cmp	r3, #0
 80123c4:	d1cc      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80123c6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80123c8:	4770      	bx	lr
 80123ca:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80123cc:	4770      	bx	lr
 80123ce:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80123d0:	4770      	bx	lr
 80123d2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80123d4:	4770      	bx	lr
 80123d6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80123d8:	4770      	bx	lr
 80123da:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80123dc:	4770      	bx	lr
 80123de:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80123e0:	4770      	bx	lr
 80123e2:	2a0b      	cmp	r2, #11
 80123e4:	d049      	beq.n	801247a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80123e6:	d80e      	bhi.n	8012406 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80123e8:	2a03      	cmp	r2, #3
 80123ea:	d040      	beq.n	801246e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80123ec:	d804      	bhi.n	80123f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80123ee:	2a01      	cmp	r2, #1
 80123f0:	d03f      	beq.n	8012472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80123f2:	d940      	bls.n	8012476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80123f4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80123f6:	4770      	bx	lr
 80123f8:	2a09      	cmp	r2, #9
 80123fa:	d03e      	beq.n	801247a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80123fc:	d801      	bhi.n	8012402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80123fe:	2a08      	cmp	r2, #8
 8012400:	d1ae      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012402:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8012404:	4770      	bx	lr
 8012406:	2a2f      	cmp	r2, #47	; 0x2f
 8012408:	d024      	beq.n	8012454 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801240a:	d80d      	bhi.n	8012428 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801240c:	2a2d      	cmp	r2, #45	; 0x2d
 801240e:	d014      	beq.n	801243a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8012410:	d826      	bhi.n	8012460 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8012412:	2a2c      	cmp	r2, #44	; 0x2c
 8012414:	d1a4      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012416:	684b      	ldr	r3, [r1, #4]
 8012418:	781b      	ldrb	r3, [r3, #0]
 801241a:	2b01      	cmp	r3, #1
 801241c:	d018      	beq.n	8012450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801241e:	d324      	bcc.n	801246a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8012420:	2b02      	cmp	r3, #2
 8012422:	d19d      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012424:	68c0      	ldr	r0, [r0, #12]
 8012426:	4770      	bx	lr
 8012428:	2a31      	cmp	r2, #49	; 0x31
 801242a:	d004      	beq.n	8012436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801242c:	d327      	bcc.n	801247e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801242e:	2a32      	cmp	r2, #50	; 0x32
 8012430:	d025      	beq.n	801247e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012432:	2a33      	cmp	r2, #51	; 0x33
 8012434:	d194      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012436:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8012438:	4770      	bx	lr
 801243a:	684b      	ldr	r3, [r1, #4]
 801243c:	781b      	ldrb	r3, [r3, #0]
 801243e:	2b01      	cmp	r3, #1
 8012440:	d004      	beq.n	801244c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012442:	d30b      	bcc.n	801245c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8012444:	2b02      	cmp	r3, #2
 8012446:	d18b      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012448:	6940      	ldr	r0, [r0, #20]
 801244a:	4770      	bx	lr
 801244c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801244e:	4770      	bx	lr
 8012450:	69c0      	ldr	r0, [r0, #28]
 8012452:	4770      	bx	lr
 8012454:	684b      	ldr	r3, [r1, #4]
 8012456:	781b      	ldrb	r3, [r3, #0]
 8012458:	2b00      	cmp	r3, #0
 801245a:	d181      	bne.n	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801245c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801245e:	4770      	bx	lr
 8012460:	684b      	ldr	r3, [r1, #4]
 8012462:	781b      	ldrb	r3, [r3, #0]
 8012464:	2b00      	cmp	r3, #0
 8012466:	f47f af7b 	bne.w	8012360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801246a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801246c:	4770      	bx	lr
 801246e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8012470:	4770      	bx	lr
 8012472:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8012474:	4770      	bx	lr
 8012476:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8012478:	4770      	bx	lr
 801247a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801247c:	4770      	bx	lr
 801247e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8012480:	4770      	bx	lr

08012482 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012482:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012486:	b087      	sub	sp, #28
 8012488:	9815      	ldr	r0, [sp, #84]	; 0x54
 801248a:	9205      	str	r2, [sp, #20]
 801248c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012490:	9202      	str	r2, [sp, #8]
 8012492:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012496:	9101      	str	r1, [sp, #4]
 8012498:	6841      	ldr	r1, [r0, #4]
 801249a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801249e:	fb01 2404 	mla	r4, r1, r4, r2
 80124a2:	6802      	ldr	r2, [r0, #0]
 80124a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80124a8:	f8de 2000 	ldr.w	r2, [lr]
 80124ac:	9203      	str	r2, [sp, #12]
 80124ae:	f8de 2004 	ldr.w	r2, [lr, #4]
 80124b2:	3204      	adds	r2, #4
 80124b4:	9204      	str	r2, [sp, #16]
 80124b6:	9a02      	ldr	r2, [sp, #8]
 80124b8:	43d6      	mvns	r6, r2
 80124ba:	b2f6      	uxtb	r6, r6
 80124bc:	9a01      	ldr	r2, [sp, #4]
 80124be:	2a00      	cmp	r2, #0
 80124c0:	dc03      	bgt.n	80124ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80124c2:	9a05      	ldr	r2, [sp, #20]
 80124c4:	2a00      	cmp	r2, #0
 80124c6:	f340 8129 	ble.w	801271c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80124ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80124cc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80124d0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80124d4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80124d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80124da:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80124de:	2b00      	cmp	r3, #0
 80124e0:	dd0e      	ble.n	8012500 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80124e2:	1408      	asrs	r0, r1, #16
 80124e4:	d405      	bmi.n	80124f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80124e6:	4560      	cmp	r0, ip
 80124e8:	da03      	bge.n	80124f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80124ea:	1410      	asrs	r0, r2, #16
 80124ec:	d401      	bmi.n	80124f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80124ee:	42b8      	cmp	r0, r7
 80124f0:	db07      	blt.n	8012502 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80124f2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80124f4:	4401      	add	r1, r0
 80124f6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80124f8:	3b01      	subs	r3, #1
 80124fa:	4402      	add	r2, r0
 80124fc:	3402      	adds	r4, #2
 80124fe:	e7ee      	b.n	80124de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012500:	d071      	beq.n	80125e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012502:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012504:	1e58      	subs	r0, r3, #1
 8012506:	fb05 1500 	mla	r5, r5, r0, r1
 801250a:	142d      	asrs	r5, r5, #16
 801250c:	d45f      	bmi.n	80125ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801250e:	4565      	cmp	r5, ip
 8012510:	da5d      	bge.n	80125ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012512:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012514:	fb05 2000 	mla	r0, r5, r0, r2
 8012518:	1400      	asrs	r0, r0, #16
 801251a:	d458      	bmi.n	80125ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801251c:	42b8      	cmp	r0, r7
 801251e:	da56      	bge.n	80125ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012520:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012524:	4699      	mov	r9, r3
 8012526:	46a2      	mov	sl, r4
 8012528:	f1b9 0f00 	cmp.w	r9, #0
 801252c:	dd57      	ble.n	80125de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801252e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012532:	9803      	ldr	r0, [sp, #12]
 8012534:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8012538:	140d      	asrs	r5, r1, #16
 801253a:	fb07 000c 	mla	r0, r7, ip, r0
 801253e:	f109 39ff 	add.w	r9, r9, #4294967295
 8012542:	5d40      	ldrb	r0, [r0, r5]
 8012544:	9d04      	ldr	r5, [sp, #16]
 8012546:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801254a:	f8ba 5000 	ldrh.w	r5, [sl]
 801254e:	122f      	asrs	r7, r5, #8
 8012550:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012554:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012558:	fb17 f706 	smulbb	r7, r7, r6
 801255c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012560:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012564:	00ed      	lsls	r5, r5, #3
 8012566:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801256a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801256e:	10c7      	asrs	r7, r0, #3
 8012570:	b2ed      	uxtb	r5, r5
 8012572:	00c0      	lsls	r0, r0, #3
 8012574:	fb18 f806 	smulbb	r8, r8, r6
 8012578:	fb15 f506 	smulbb	r5, r5, r6
 801257c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012580:	b2c0      	uxtb	r0, r0
 8012582:	fa1f fc8c 	uxth.w	ip, ip
 8012586:	fb07 870b 	mla	r7, r7, fp, r8
 801258a:	fb00 500b 	mla	r0, r0, fp, r5
 801258e:	b280      	uxth	r0, r0
 8012590:	b2bf      	uxth	r7, r7
 8012592:	f10c 0501 	add.w	r5, ip, #1
 8012596:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801259a:	f107 0801 	add.w	r8, r7, #1
 801259e:	1c45      	adds	r5, r0, #1
 80125a0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80125a4:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80125a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80125aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80125ae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80125b2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80125b6:	ea4c 0c05 	orr.w	ip, ip, r5
 80125ba:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80125be:	4401      	add	r1, r0
 80125c0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80125c2:	ea4c 0c08 	orr.w	ip, ip, r8
 80125c6:	f82a cb02 	strh.w	ip, [sl], #2
 80125ca:	4402      	add	r2, r0
 80125cc:	e7ac      	b.n	8012528 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80125ce:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80125d2:	f04f 0800 	mov.w	r8, #0
 80125d6:	eb03 0008 	add.w	r0, r3, r8
 80125da:	2800      	cmp	r0, #0
 80125dc:	dc41      	bgt.n	8012662 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80125de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80125e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80125e6:	9b01      	ldr	r3, [sp, #4]
 80125e8:	2b00      	cmp	r3, #0
 80125ea:	f340 8097 	ble.w	801271c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80125ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80125f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80125f6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80125fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80125fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012600:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012604:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012608:	eef0 6a62 	vmov.f32	s13, s5
 801260c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012614:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012618:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801261c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012620:	eef0 6a43 	vmov.f32	s13, s6
 8012624:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012628:	ee12 2a90 	vmov	r2, s5
 801262c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012630:	fb92 f3f3 	sdiv	r3, r2, r3
 8012634:	ee13 2a10 	vmov	r2, s6
 8012638:	9313      	str	r3, [sp, #76]	; 0x4c
 801263a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801263c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012640:	9314      	str	r3, [sp, #80]	; 0x50
 8012642:	9b01      	ldr	r3, [sp, #4]
 8012644:	9a05      	ldr	r2, [sp, #20]
 8012646:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801264a:	3b01      	subs	r3, #1
 801264c:	9301      	str	r3, [sp, #4]
 801264e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8012652:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012654:	eeb0 3a67 	vmov.f32	s6, s15
 8012658:	bf08      	it	eq
 801265a:	4613      	moveq	r3, r2
 801265c:	eef0 2a47 	vmov.f32	s5, s14
 8012660:	e72c      	b.n	80124bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012662:	140f      	asrs	r7, r1, #16
 8012664:	d453      	bmi.n	801270e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012666:	f8de 5008 	ldr.w	r5, [lr, #8]
 801266a:	42bd      	cmp	r5, r7
 801266c:	dd4f      	ble.n	801270e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801266e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012672:	d44c      	bmi.n	801270e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012674:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012678:	4560      	cmp	r0, ip
 801267a:	dd48      	ble.n	801270e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801267c:	9803      	ldr	r0, [sp, #12]
 801267e:	b22d      	sxth	r5, r5
 8012680:	fb0c 0505 	mla	r5, ip, r5, r0
 8012684:	5de8      	ldrb	r0, [r5, r7]
 8012686:	9d04      	ldr	r5, [sp, #16]
 8012688:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801268c:	f06f 0501 	mvn.w	r5, #1
 8012690:	fb05 fb08 	mul.w	fp, r5, r8
 8012694:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012698:	f834 500b 	ldrh.w	r5, [r4, fp]
 801269c:	122f      	asrs	r7, r5, #8
 801269e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80126a2:	fb17 f706 	smulbb	r7, r7, r6
 80126a6:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80126aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80126ae:	00ed      	lsls	r5, r5, #3
 80126b0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80126b4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80126b8:	10c7      	asrs	r7, r0, #3
 80126ba:	b2ed      	uxtb	r5, r5
 80126bc:	00c0      	lsls	r0, r0, #3
 80126be:	fb19 f906 	smulbb	r9, r9, r6
 80126c2:	fb15 f506 	smulbb	r5, r5, r6
 80126c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80126ca:	b2c0      	uxtb	r0, r0
 80126cc:	fa1f fc8c 	uxth.w	ip, ip
 80126d0:	fb07 970a 	mla	r7, r7, sl, r9
 80126d4:	fb00 500a 	mla	r0, r0, sl, r5
 80126d8:	b2bf      	uxth	r7, r7
 80126da:	b280      	uxth	r0, r0
 80126dc:	f10c 0501 	add.w	r5, ip, #1
 80126e0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80126e4:	f107 0901 	add.w	r9, r7, #1
 80126e8:	1c45      	adds	r5, r0, #1
 80126ea:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80126ee:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80126f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80126f6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80126fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80126fe:	ea4c 0c05 	orr.w	ip, ip, r5
 8012702:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012706:	ea4c 0c09 	orr.w	ip, ip, r9
 801270a:	f824 c00b 	strh.w	ip, [r4, fp]
 801270e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012710:	4401      	add	r1, r0
 8012712:	9814      	ldr	r0, [sp, #80]	; 0x50
 8012714:	f108 38ff 	add.w	r8, r8, #4294967295
 8012718:	4402      	add	r2, r0
 801271a:	e75c      	b.n	80125d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801271c:	b007      	add	sp, #28
 801271e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012722 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012722:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012726:	b085      	sub	sp, #20
 8012728:	4693      	mov	fp, r2
 801272a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801272c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801272e:	6870      	ldr	r0, [r6, #4]
 8012730:	9100      	str	r1, [sp, #0]
 8012732:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012736:	fb00 2404 	mla	r4, r0, r4, r2
 801273a:	6832      	ldr	r2, [r6, #0]
 801273c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012740:	682a      	ldr	r2, [r5, #0]
 8012742:	9201      	str	r2, [sp, #4]
 8012744:	686a      	ldr	r2, [r5, #4]
 8012746:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801274a:	3204      	adds	r2, #4
 801274c:	9202      	str	r2, [sp, #8]
 801274e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012752:	9a00      	ldr	r2, [sp, #0]
 8012754:	2a00      	cmp	r2, #0
 8012756:	dc03      	bgt.n	8012760 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012758:	f1bb 0f00 	cmp.w	fp, #0
 801275c:	f340 80a0 	ble.w	80128a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012760:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012762:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012766:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801276a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801276e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012770:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012774:	2b00      	cmp	r3, #0
 8012776:	dd0c      	ble.n	8012792 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012778:	1406      	asrs	r6, r0, #16
 801277a:	d405      	bmi.n	8012788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801277c:	454e      	cmp	r6, r9
 801277e:	da03      	bge.n	8012788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012780:	1416      	asrs	r6, r2, #16
 8012782:	d401      	bmi.n	8012788 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012784:	4546      	cmp	r6, r8
 8012786:	db05      	blt.n	8012794 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012788:	4470      	add	r0, lr
 801278a:	4462      	add	r2, ip
 801278c:	3b01      	subs	r3, #1
 801278e:	3402      	adds	r4, #2
 8012790:	e7f0      	b.n	8012774 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012792:	d00f      	beq.n	80127b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012794:	1e5e      	subs	r6, r3, #1
 8012796:	fb0e 0706 	mla	r7, lr, r6, r0
 801279a:	143f      	asrs	r7, r7, #16
 801279c:	d541      	bpl.n	8012822 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801279e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80127a2:	4698      	mov	r8, r3
 80127a4:	9603      	str	r6, [sp, #12]
 80127a6:	f1b8 0f00 	cmp.w	r8, #0
 80127aa:	dc59      	bgt.n	8012860 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80127ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80127b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80127b4:	9b00      	ldr	r3, [sp, #0]
 80127b6:	2b00      	cmp	r3, #0
 80127b8:	dd72      	ble.n	80128a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80127ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80127be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80127c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80127c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80127c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80127cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80127d0:	eeb0 6a62 	vmov.f32	s12, s5
 80127d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80127d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80127dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80127e0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80127e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80127e8:	eeb0 6a43 	vmov.f32	s12, s6
 80127ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80127f0:	ee12 2a90 	vmov	r2, s5
 80127f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80127f8:	fb92 fef3 	sdiv	lr, r2, r3
 80127fc:	ee13 2a10 	vmov	r2, s6
 8012800:	fb92 fcf3 	sdiv	ip, r2, r3
 8012804:	9b00      	ldr	r3, [sp, #0]
 8012806:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801280a:	3b01      	subs	r3, #1
 801280c:	9300      	str	r3, [sp, #0]
 801280e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012812:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012814:	eeb0 3a67 	vmov.f32	s6, s15
 8012818:	bf08      	it	eq
 801281a:	465b      	moveq	r3, fp
 801281c:	eef0 2a47 	vmov.f32	s5, s14
 8012820:	e797      	b.n	8012752 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012822:	454f      	cmp	r7, r9
 8012824:	dabb      	bge.n	801279e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012826:	fb0c 2606 	mla	r6, ip, r6, r2
 801282a:	1436      	asrs	r6, r6, #16
 801282c:	d4b7      	bmi.n	801279e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801282e:	4546      	cmp	r6, r8
 8012830:	dab5      	bge.n	801279e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012832:	461e      	mov	r6, r3
 8012834:	46a0      	mov	r8, r4
 8012836:	2e00      	cmp	r6, #0
 8012838:	ddb8      	ble.n	80127ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801283a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801283e:	9901      	ldr	r1, [sp, #4]
 8012840:	1417      	asrs	r7, r2, #16
 8012842:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012846:	fb0a 1707 	mla	r7, sl, r7, r1
 801284a:	9902      	ldr	r1, [sp, #8]
 801284c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8012850:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012854:	f828 7b02 	strh.w	r7, [r8], #2
 8012858:	4470      	add	r0, lr
 801285a:	4462      	add	r2, ip
 801285c:	3e01      	subs	r6, #1
 801285e:	e7ea      	b.n	8012836 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8012860:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012864:	d417      	bmi.n	8012896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012866:	68ae      	ldr	r6, [r5, #8]
 8012868:	454e      	cmp	r6, r9
 801286a:	dd14      	ble.n	8012896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801286c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012870:	d411      	bmi.n	8012896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012872:	68ef      	ldr	r7, [r5, #12]
 8012874:	4557      	cmp	r7, sl
 8012876:	dd0e      	ble.n	8012896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012878:	9f01      	ldr	r7, [sp, #4]
 801287a:	b236      	sxth	r6, r6
 801287c:	fb0a 7606 	mla	r6, sl, r6, r7
 8012880:	9f02      	ldr	r7, [sp, #8]
 8012882:	f816 6009 	ldrb.w	r6, [r6, r9]
 8012886:	f06f 0101 	mvn.w	r1, #1
 801288a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801288e:	fb01 f608 	mul.w	r6, r1, r8
 8012892:	9903      	ldr	r1, [sp, #12]
 8012894:	538f      	strh	r7, [r1, r6]
 8012896:	4470      	add	r0, lr
 8012898:	4462      	add	r2, ip
 801289a:	f108 38ff 	add.w	r8, r8, #4294967295
 801289e:	e782      	b.n	80127a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80128a0:	b005      	add	sp, #20
 80128a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080128a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80128a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128aa:	b087      	sub	sp, #28
 80128ac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80128ae:	9205      	str	r2, [sp, #20]
 80128b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80128b4:	9203      	str	r2, [sp, #12]
 80128b6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80128ba:	9102      	str	r1, [sp, #8]
 80128bc:	6861      	ldr	r1, [r4, #4]
 80128be:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80128c2:	fb01 2000 	mla	r0, r1, r0, r2
 80128c6:	6822      	ldr	r2, [r4, #0]
 80128c8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80128cc:	9200      	str	r2, [sp, #0]
 80128ce:	f8dc 2000 	ldr.w	r2, [ip]
 80128d2:	9204      	str	r2, [sp, #16]
 80128d4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80128d8:	3204      	adds	r2, #4
 80128da:	9201      	str	r2, [sp, #4]
 80128dc:	9a03      	ldr	r2, [sp, #12]
 80128de:	43d5      	mvns	r5, r2
 80128e0:	b2ed      	uxtb	r5, r5
 80128e2:	9a02      	ldr	r2, [sp, #8]
 80128e4:	2a00      	cmp	r2, #0
 80128e6:	dc03      	bgt.n	80128f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80128e8:	9a05      	ldr	r2, [sp, #20]
 80128ea:	2a00      	cmp	r2, #0
 80128ec:	f340 812c 	ble.w	8012b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80128f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80128f2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80128f6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80128fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80128fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012900:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012904:	2b00      	cmp	r3, #0
 8012906:	dd10      	ble.n	801292a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012908:	140c      	asrs	r4, r1, #16
 801290a:	d405      	bmi.n	8012918 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801290c:	4574      	cmp	r4, lr
 801290e:	da03      	bge.n	8012918 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012910:	1414      	asrs	r4, r2, #16
 8012912:	d401      	bmi.n	8012918 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012914:	42bc      	cmp	r4, r7
 8012916:	db09      	blt.n	801292c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8012918:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801291a:	9800      	ldr	r0, [sp, #0]
 801291c:	4421      	add	r1, r4
 801291e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012920:	3002      	adds	r0, #2
 8012922:	4422      	add	r2, r4
 8012924:	3b01      	subs	r3, #1
 8012926:	9000      	str	r0, [sp, #0]
 8012928:	e7ec      	b.n	8012904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801292a:	d071      	beq.n	8012a10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801292c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801292e:	1e5c      	subs	r4, r3, #1
 8012930:	fb06 1604 	mla	r6, r6, r4, r1
 8012934:	1436      	asrs	r6, r6, #16
 8012936:	d45d      	bmi.n	80129f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012938:	4576      	cmp	r6, lr
 801293a:	da5b      	bge.n	80129f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801293c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801293e:	fb06 2404 	mla	r4, r6, r4, r2
 8012942:	1424      	asrs	r4, r4, #16
 8012944:	d456      	bmi.n	80129f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8012946:	42bc      	cmp	r4, r7
 8012948:	da54      	bge.n	80129f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801294a:	f8dd 9000 	ldr.w	r9, [sp]
 801294e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8012952:	4698      	mov	r8, r3
 8012954:	f1b8 0f00 	cmp.w	r8, #0
 8012958:	dd54      	ble.n	8012a04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801295a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801295e:	9804      	ldr	r0, [sp, #16]
 8012960:	1414      	asrs	r4, r2, #16
 8012962:	fb07 0404 	mla	r4, r7, r4, r0
 8012966:	140e      	asrs	r6, r1, #16
 8012968:	9801      	ldr	r0, [sp, #4]
 801296a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801296e:	f8b9 4000 	ldrh.w	r4, [r9]
 8012972:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012976:	eb00 0b0e 	add.w	fp, r0, lr
 801297a:	1227      	asrs	r7, r4, #8
 801297c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012980:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012984:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8012988:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801298a:	fb16 f60a 	smulbb	r6, r6, sl
 801298e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012992:	fb07 6705 	mla	r7, r7, r5, r6
 8012996:	10e6      	asrs	r6, r4, #3
 8012998:	00e4      	lsls	r4, r4, #3
 801299a:	b2e4      	uxtb	r4, r4
 801299c:	fb1b fb0a 	smulbb	fp, fp, sl
 80129a0:	fb14 f405 	smulbb	r4, r4, r5
 80129a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80129a8:	b2bf      	uxth	r7, r7
 80129aa:	fb06 b605 	mla	r6, r6, r5, fp
 80129ae:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80129b2:	b2b6      	uxth	r6, r6
 80129b4:	fa1f fe8e 	uxth.w	lr, lr
 80129b8:	1c7c      	adds	r4, r7, #1
 80129ba:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80129be:	f106 0b01 	add.w	fp, r6, #1
 80129c2:	f10e 0401 	add.w	r4, lr, #1
 80129c6:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80129ca:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80129ce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80129d2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80129d6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80129da:	4327      	orrs	r7, r4
 80129dc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80129e0:	4401      	add	r1, r0
 80129e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80129e4:	ea47 070b 	orr.w	r7, r7, fp
 80129e8:	f829 7b02 	strh.w	r7, [r9], #2
 80129ec:	4402      	add	r2, r0
 80129ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80129f2:	e7af      	b.n	8012954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80129f4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80129f8:	f04f 0e00 	mov.w	lr, #0
 80129fc:	eb03 040e 	add.w	r4, r3, lr
 8012a00:	2c00      	cmp	r4, #0
 8012a02:	dc43      	bgt.n	8012a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8012a04:	9a00      	ldr	r2, [sp, #0]
 8012a06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012a0a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012a0e:	9300      	str	r3, [sp, #0]
 8012a10:	9b02      	ldr	r3, [sp, #8]
 8012a12:	2b00      	cmp	r3, #0
 8012a14:	f340 8098 	ble.w	8012b48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012a18:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012a1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012a20:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012a24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012a26:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012a2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012a2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012a32:	eef0 6a62 	vmov.f32	s13, s5
 8012a36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012a3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012a3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012a42:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8012a46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012a4a:	eef0 6a43 	vmov.f32	s13, s6
 8012a4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012a52:	ee12 2a90 	vmov	r2, s5
 8012a56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012a5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012a5e:	ee13 2a10 	vmov	r2, s6
 8012a62:	9313      	str	r3, [sp, #76]	; 0x4c
 8012a64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012a66:	fb92 f3f3 	sdiv	r3, r2, r3
 8012a6a:	9314      	str	r3, [sp, #80]	; 0x50
 8012a6c:	9b02      	ldr	r3, [sp, #8]
 8012a6e:	9a05      	ldr	r2, [sp, #20]
 8012a70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012a74:	3b01      	subs	r3, #1
 8012a76:	9302      	str	r3, [sp, #8]
 8012a78:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8012a7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012a7e:	eeb0 3a67 	vmov.f32	s6, s15
 8012a82:	bf08      	it	eq
 8012a84:	4613      	moveq	r3, r2
 8012a86:	eef0 2a47 	vmov.f32	s5, s14
 8012a8a:	e72a      	b.n	80128e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012a8c:	140f      	asrs	r7, r1, #16
 8012a8e:	d454      	bmi.n	8012b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012a90:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8012a94:	42be      	cmp	r6, r7
 8012a96:	dd50      	ble.n	8012b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012a98:	ea5f 4822 	movs.w	r8, r2, asr #16
 8012a9c:	d44d      	bmi.n	8012b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012a9e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8012aa2:	4544      	cmp	r4, r8
 8012aa4:	dd49      	ble.n	8012b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8012aa6:	9c04      	ldr	r4, [sp, #16]
 8012aa8:	b236      	sxth	r6, r6
 8012aaa:	fb08 4606 	mla	r6, r8, r6, r4
 8012aae:	f06f 0001 	mvn.w	r0, #1
 8012ab2:	f816 8007 	ldrb.w	r8, [r6, r7]
 8012ab6:	9c01      	ldr	r4, [sp, #4]
 8012ab8:	fb00 fa0e 	mul.w	sl, r0, lr
 8012abc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8012ac0:	9800      	ldr	r0, [sp, #0]
 8012ac2:	eb04 0b08 	add.w	fp, r4, r8
 8012ac6:	f830 400a 	ldrh.w	r4, [r0, sl]
 8012aca:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8012ace:	9801      	ldr	r0, [sp, #4]
 8012ad0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8012ad4:	f810 8008 	ldrb.w	r8, [r0, r8]
 8012ad8:	9800      	ldr	r0, [sp, #0]
 8012ada:	1227      	asrs	r7, r4, #8
 8012adc:	fb16 f609 	smulbb	r6, r6, r9
 8012ae0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012ae4:	fb07 6705 	mla	r7, r7, r5, r6
 8012ae8:	10e6      	asrs	r6, r4, #3
 8012aea:	00e4      	lsls	r4, r4, #3
 8012aec:	b2e4      	uxtb	r4, r4
 8012aee:	fb1b fb09 	smulbb	fp, fp, r9
 8012af2:	fb14 f405 	smulbb	r4, r4, r5
 8012af6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012afa:	b2bf      	uxth	r7, r7
 8012afc:	fb06 b605 	mla	r6, r6, r5, fp
 8012b00:	fb08 4809 	mla	r8, r8, r9, r4
 8012b04:	b2b6      	uxth	r6, r6
 8012b06:	fa1f f888 	uxth.w	r8, r8
 8012b0a:	1c7c      	adds	r4, r7, #1
 8012b0c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8012b10:	f106 0b01 	add.w	fp, r6, #1
 8012b14:	f108 0401 	add.w	r4, r8, #1
 8012b18:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8012b1c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8012b20:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012b24:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012b28:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8012b2c:	4327      	orrs	r7, r4
 8012b2e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8012b32:	ea47 070b 	orr.w	r7, r7, fp
 8012b36:	f820 700a 	strh.w	r7, [r0, sl]
 8012b3a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012b3c:	4401      	add	r1, r0
 8012b3e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8012b40:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012b44:	4402      	add	r2, r0
 8012b46:	e759      	b.n	80129fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8012b48:	b007      	add	sp, #28
 8012b4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b54:	b085      	sub	sp, #20
 8012b56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b5a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012b5c:	9203      	str	r2, [sp, #12]
 8012b5e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012b62:	6870      	ldr	r0, [r6, #4]
 8012b64:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012b66:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8012b6a:	686f      	ldr	r7, [r5, #4]
 8012b6c:	9101      	str	r1, [sp, #4]
 8012b6e:	fb00 2404 	mla	r4, r0, r4, r2
 8012b72:	6832      	ldr	r2, [r6, #0]
 8012b74:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012b78:	682a      	ldr	r2, [r5, #0]
 8012b7a:	9202      	str	r2, [sp, #8]
 8012b7c:	3704      	adds	r7, #4
 8012b7e:	9a01      	ldr	r2, [sp, #4]
 8012b80:	2a00      	cmp	r2, #0
 8012b82:	dc03      	bgt.n	8012b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012b84:	9a03      	ldr	r2, [sp, #12]
 8012b86:	2a00      	cmp	r2, #0
 8012b88:	f340 80cc 	ble.w	8012d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012b8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012b8e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012b92:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012b96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012b9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012b9c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012ba0:	2b00      	cmp	r3, #0
 8012ba2:	dd0d      	ble.n	8012bc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012ba4:	1406      	asrs	r6, r0, #16
 8012ba6:	d405      	bmi.n	8012bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012ba8:	454e      	cmp	r6, r9
 8012baa:	da03      	bge.n	8012bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012bac:	1416      	asrs	r6, r2, #16
 8012bae:	d401      	bmi.n	8012bb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8012bb0:	4546      	cmp	r6, r8
 8012bb2:	db06      	blt.n	8012bc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012bb4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8012bb6:	4460      	add	r0, ip
 8012bb8:	4432      	add	r2, r6
 8012bba:	3b01      	subs	r3, #1
 8012bbc:	3402      	adds	r4, #2
 8012bbe:	e7ef      	b.n	8012ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8012bc0:	d00f      	beq.n	8012be2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012bc2:	1e5e      	subs	r6, r3, #1
 8012bc4:	fb0c 0e06 	mla	lr, ip, r6, r0
 8012bc8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8012bcc:	d543      	bpl.n	8012c56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8012bce:	4698      	mov	r8, r3
 8012bd0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8012bd4:	f1b8 0f00 	cmp.w	r8, #0
 8012bd8:	dc71      	bgt.n	8012cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8012bda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012bde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012be2:	9b01      	ldr	r3, [sp, #4]
 8012be4:	2b00      	cmp	r3, #0
 8012be6:	f340 809d 	ble.w	8012d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8012bea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012bee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012bf2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012bf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012bf8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012bfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012c00:	eeb0 6a62 	vmov.f32	s12, s5
 8012c04:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012c08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012c10:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012c14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012c18:	eeb0 6a43 	vmov.f32	s12, s6
 8012c1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012c20:	ee12 2a90 	vmov	r2, s5
 8012c24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012c28:	fb92 fcf3 	sdiv	ip, r2, r3
 8012c2c:	ee13 2a10 	vmov	r2, s6
 8012c30:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c34:	9312      	str	r3, [sp, #72]	; 0x48
 8012c36:	9b01      	ldr	r3, [sp, #4]
 8012c38:	9a03      	ldr	r2, [sp, #12]
 8012c3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012c3e:	3b01      	subs	r3, #1
 8012c40:	9301      	str	r3, [sp, #4]
 8012c42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012c46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c48:	eeb0 3a67 	vmov.f32	s6, s15
 8012c4c:	bf08      	it	eq
 8012c4e:	4613      	moveq	r3, r2
 8012c50:	eef0 2a47 	vmov.f32	s5, s14
 8012c54:	e793      	b.n	8012b7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8012c56:	45ce      	cmp	lr, r9
 8012c58:	dab9      	bge.n	8012bce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012c5a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012c5c:	fb01 2606 	mla	r6, r1, r6, r2
 8012c60:	1436      	asrs	r6, r6, #16
 8012c62:	d4b4      	bmi.n	8012bce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012c64:	4546      	cmp	r6, r8
 8012c66:	dab2      	bge.n	8012bce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012c68:	4698      	mov	r8, r3
 8012c6a:	46a2      	mov	sl, r4
 8012c6c:	f1b8 0f00 	cmp.w	r8, #0
 8012c70:	ddb3      	ble.n	8012bda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012c72:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012c76:	9902      	ldr	r1, [sp, #8]
 8012c78:	1416      	asrs	r6, r2, #16
 8012c7a:	fb09 1606 	mla	r6, r9, r6, r1
 8012c7e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8012c82:	492a      	ldr	r1, [pc, #168]	; (8012d2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8012c84:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8012c88:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012c8c:	eb07 0b0e 	add.w	fp, r7, lr
 8012c90:	4460      	add	r0, ip
 8012c92:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8012c96:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8012c9a:	00f6      	lsls	r6, r6, #3
 8012c9c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8012ca0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012ca4:	ea49 0606 	orr.w	r6, r9, r6
 8012ca8:	f817 900e 	ldrb.w	r9, [r7, lr]
 8012cac:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012cae:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8012cb2:	f82a 6b02 	strh.w	r6, [sl], #2
 8012cb6:	440a      	add	r2, r1
 8012cb8:	f108 38ff 	add.w	r8, r8, #4294967295
 8012cbc:	e7d6      	b.n	8012c6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012cbe:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012cc2:	d429      	bmi.n	8012d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012cc4:	68ae      	ldr	r6, [r5, #8]
 8012cc6:	454e      	cmp	r6, r9
 8012cc8:	dd26      	ble.n	8012d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012cca:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8012cce:	d423      	bmi.n	8012d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012cd0:	68e9      	ldr	r1, [r5, #12]
 8012cd2:	4559      	cmp	r1, fp
 8012cd4:	dd20      	ble.n	8012d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8012cd6:	9902      	ldr	r1, [sp, #8]
 8012cd8:	fa0f fe86 	sxth.w	lr, r6
 8012cdc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8012ce0:	f06f 0101 	mvn.w	r1, #1
 8012ce4:	f81e e009 	ldrb.w	lr, [lr, r9]
 8012ce8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8012cec:	eb07 060e 	add.w	r6, r7, lr
 8012cf0:	fb01 f908 	mul.w	r9, r1, r8
 8012cf4:	f896 b002 	ldrb.w	fp, [r6, #2]
 8012cf8:	7876      	ldrb	r6, [r6, #1]
 8012cfa:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8012cfe:	00f6      	lsls	r6, r6, #3
 8012d00:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8012d04:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012d08:	ea4b 0606 	orr.w	r6, fp, r6
 8012d0c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8012d10:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8012d14:	f82a 6009 	strh.w	r6, [sl, r9]
 8012d18:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012d1a:	4460      	add	r0, ip
 8012d1c:	440a      	add	r2, r1
 8012d1e:	f108 38ff 	add.w	r8, r8, #4294967295
 8012d22:	e757      	b.n	8012bd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012d24:	b005      	add	sp, #20
 8012d26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d2a:	bf00      	nop
 8012d2c:	fffff800 	.word	0xfffff800

08012d30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d34:	b087      	sub	sp, #28
 8012d36:	468b      	mov	fp, r1
 8012d38:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012d3a:	9204      	str	r2, [sp, #16]
 8012d3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012d40:	9205      	str	r2, [sp, #20]
 8012d42:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012d46:	6841      	ldr	r1, [r0, #4]
 8012d48:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8012d4c:	fb01 2404 	mla	r4, r1, r4, r2
 8012d50:	6802      	ldr	r2, [r0, #0]
 8012d52:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012d56:	f8dc 2000 	ldr.w	r2, [ip]
 8012d5a:	9201      	str	r2, [sp, #4]
 8012d5c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012d60:	3204      	adds	r2, #4
 8012d62:	9202      	str	r2, [sp, #8]
 8012d64:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012d68:	f1bb 0f00 	cmp.w	fp, #0
 8012d6c:	dc03      	bgt.n	8012d76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8012d6e:	9a04      	ldr	r2, [sp, #16]
 8012d70:	2a00      	cmp	r2, #0
 8012d72:	f340 8138 	ble.w	8012fe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8012d76:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012d78:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8012d7c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8012d80:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012d84:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012d86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012d8a:	2b00      	cmp	r3, #0
 8012d8c:	dd0e      	ble.n	8012dac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012d8e:	1402      	asrs	r2, r0, #16
 8012d90:	d405      	bmi.n	8012d9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012d92:	42ba      	cmp	r2, r7
 8012d94:	da03      	bge.n	8012d9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012d96:	140a      	asrs	r2, r1, #16
 8012d98:	d401      	bmi.n	8012d9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012d9a:	42b2      	cmp	r2, r6
 8012d9c:	db07      	blt.n	8012dae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012d9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012da0:	4410      	add	r0, r2
 8012da2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012da4:	3b01      	subs	r3, #1
 8012da6:	4411      	add	r1, r2
 8012da8:	3402      	adds	r4, #2
 8012daa:	e7ee      	b.n	8012d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8012dac:	d019      	beq.n	8012de2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8012dae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012db0:	1e5a      	subs	r2, r3, #1
 8012db2:	fb05 0502 	mla	r5, r5, r2, r0
 8012db6:	142d      	asrs	r5, r5, #16
 8012db8:	d409      	bmi.n	8012dce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012dba:	42bd      	cmp	r5, r7
 8012dbc:	da07      	bge.n	8012dce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012dbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012dc0:	fb05 1202 	mla	r2, r5, r2, r1
 8012dc4:	1412      	asrs	r2, r2, #16
 8012dc6:	d402      	bmi.n	8012dce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012dc8:	42b2      	cmp	r2, r6
 8012dca:	f2c0 80ac 	blt.w	8012f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8012dce:	f04f 0e00 	mov.w	lr, #0
 8012dd2:	eb03 020e 	add.w	r2, r3, lr
 8012dd6:	2a00      	cmp	r2, #0
 8012dd8:	dc3e      	bgt.n	8012e58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8012dda:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012dde:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012de2:	f1bb 0f00 	cmp.w	fp, #0
 8012de6:	f340 80fe 	ble.w	8012fe6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8012dea:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012dee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012df2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012df6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012df8:	f1bb 0b01 	subs.w	fp, fp, #1
 8012dfc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012e00:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012e04:	eeb0 6a62 	vmov.f32	s12, s5
 8012e08:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012e0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e10:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012e14:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012e18:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012e1c:	eeb0 6a43 	vmov.f32	s12, s6
 8012e20:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012e24:	ee12 2a90 	vmov	r2, s5
 8012e28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012e2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e30:	ee13 2a10 	vmov	r2, s6
 8012e34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012e38:	9313      	str	r3, [sp, #76]	; 0x4c
 8012e3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012e3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e40:	9a04      	ldr	r2, [sp, #16]
 8012e42:	9314      	str	r3, [sp, #80]	; 0x50
 8012e44:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012e48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012e4a:	eeb0 3a67 	vmov.f32	s6, s15
 8012e4e:	bf08      	it	eq
 8012e50:	4613      	moveq	r3, r2
 8012e52:	eef0 2a47 	vmov.f32	s5, s14
 8012e56:	e787      	b.n	8012d68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012e58:	1406      	asrs	r6, r0, #16
 8012e5a:	d45d      	bmi.n	8012f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012e5c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8012e60:	42b5      	cmp	r5, r6
 8012e62:	dd59      	ble.n	8012f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012e64:	140f      	asrs	r7, r1, #16
 8012e66:	d457      	bmi.n	8012f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012e68:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8012e6c:	42ba      	cmp	r2, r7
 8012e6e:	dd53      	ble.n	8012f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012e70:	9a01      	ldr	r2, [sp, #4]
 8012e72:	b22d      	sxth	r5, r5
 8012e74:	fb07 2505 	mla	r5, r7, r5, r2
 8012e78:	5daa      	ldrb	r2, [r5, r6]
 8012e7a:	9d02      	ldr	r5, [sp, #8]
 8012e7c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012e80:	0e2e      	lsrs	r6, r5, #24
 8012e82:	d049      	beq.n	8012f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8012e84:	f06f 0201 	mvn.w	r2, #1
 8012e88:	fb02 f20e 	mul.w	r2, r2, lr
 8012e8c:	9203      	str	r2, [sp, #12]
 8012e8e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8012e92:	9a05      	ldr	r2, [sp, #20]
 8012e94:	4356      	muls	r6, r2
 8012e96:	1c72      	adds	r2, r6, #1
 8012e98:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012e9c:	1212      	asrs	r2, r2, #8
 8012e9e:	fa1f f982 	uxth.w	r9, r2
 8012ea2:	ea4f 2728 	mov.w	r7, r8, asr #8
 8012ea6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012eaa:	43d2      	mvns	r2, r2
 8012eac:	b2d2      	uxtb	r2, r2
 8012eae:	fb16 f609 	smulbb	r6, r6, r9
 8012eb2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012eb6:	fb07 6702 	mla	r7, r7, r2, r6
 8012eba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012ebe:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8012ec2:	b2ed      	uxtb	r5, r5
 8012ec4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012ec8:	fa5f f888 	uxtb.w	r8, r8
 8012ecc:	fb15 f509 	smulbb	r5, r5, r9
 8012ed0:	fb08 5502 	mla	r5, r8, r2, r5
 8012ed4:	b2bf      	uxth	r7, r7
 8012ed6:	fb1a fa09 	smulbb	sl, sl, r9
 8012eda:	b2ad      	uxth	r5, r5
 8012edc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012ee0:	fb06 a602 	mla	r6, r6, r2, sl
 8012ee4:	1c7a      	adds	r2, r7, #1
 8012ee6:	f105 0a01 	add.w	sl, r5, #1
 8012eea:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012eee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012ef2:	b2b6      	uxth	r6, r6
 8012ef4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012ef8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012efc:	ea47 070a 	orr.w	r7, r7, sl
 8012f00:	f106 0a01 	add.w	sl, r6, #1
 8012f04:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012f08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012f0c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012f10:	9a03      	ldr	r2, [sp, #12]
 8012f12:	ea47 070a 	orr.w	r7, r7, sl
 8012f16:	52a7      	strh	r7, [r4, r2]
 8012f18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012f1a:	4410      	add	r0, r2
 8012f1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012f1e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012f22:	4411      	add	r1, r2
 8012f24:	e755      	b.n	8012dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8012f26:	f04f 0800 	mov.w	r8, #0
 8012f2a:	eba3 0208 	sub.w	r2, r3, r8
 8012f2e:	2a00      	cmp	r2, #0
 8012f30:	f77f af53 	ble.w	8012dda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8012f34:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8012f38:	9f01      	ldr	r7, [sp, #4]
 8012f3a:	140a      	asrs	r2, r1, #16
 8012f3c:	1405      	asrs	r5, r0, #16
 8012f3e:	fb06 7202 	mla	r2, r6, r2, r7
 8012f42:	5d52      	ldrb	r2, [r2, r5]
 8012f44:	9d02      	ldr	r5, [sp, #8]
 8012f46:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8012f4a:	0e2e      	lsrs	r6, r5, #24
 8012f4c:	d044      	beq.n	8012fd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8012f4e:	9a05      	ldr	r2, [sp, #20]
 8012f50:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8012f54:	4356      	muls	r6, r2
 8012f56:	1c72      	adds	r2, r6, #1
 8012f58:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8012f5c:	1212      	asrs	r2, r2, #8
 8012f5e:	fa1f f982 	uxth.w	r9, r2
 8012f62:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012f66:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012f6a:	43d2      	mvns	r2, r2
 8012f6c:	b2d2      	uxtb	r2, r2
 8012f6e:	fb16 f609 	smulbb	r6, r6, r9
 8012f72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012f76:	fb07 6702 	mla	r7, r7, r2, r6
 8012f7a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012f7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012f82:	b2ed      	uxtb	r5, r5
 8012f84:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012f88:	fa5f fe8e 	uxtb.w	lr, lr
 8012f8c:	fb15 f509 	smulbb	r5, r5, r9
 8012f90:	fb0e 5502 	mla	r5, lr, r2, r5
 8012f94:	b2bf      	uxth	r7, r7
 8012f96:	fb1a fa09 	smulbb	sl, sl, r9
 8012f9a:	b2ad      	uxth	r5, r5
 8012f9c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012fa0:	fb06 a602 	mla	r6, r6, r2, sl
 8012fa4:	1c7a      	adds	r2, r7, #1
 8012fa6:	f105 0a01 	add.w	sl, r5, #1
 8012faa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8012fae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012fb2:	b2b6      	uxth	r6, r6
 8012fb4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012fb8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012fbc:	ea47 070a 	orr.w	r7, r7, sl
 8012fc0:	f106 0a01 	add.w	sl, r6, #1
 8012fc4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012fc8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012fcc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012fd0:	ea47 070a 	orr.w	r7, r7, sl
 8012fd4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012fd8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012fda:	4410      	add	r0, r2
 8012fdc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012fde:	f108 0801 	add.w	r8, r8, #1
 8012fe2:	4411      	add	r1, r2
 8012fe4:	e7a1      	b.n	8012f2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8012fe6:	b007      	add	sp, #28
 8012fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012fec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ff0:	b085      	sub	sp, #20
 8012ff2:	468b      	mov	fp, r1
 8012ff4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012ff6:	9203      	str	r2, [sp, #12]
 8012ff8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012ffc:	6841      	ldr	r1, [r0, #4]
 8012ffe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8013002:	fb01 2404 	mla	r4, r1, r4, r2
 8013006:	6802      	ldr	r2, [r0, #0]
 8013008:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801300c:	f8de 2000 	ldr.w	r2, [lr]
 8013010:	9200      	str	r2, [sp, #0]
 8013012:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013016:	3204      	adds	r2, #4
 8013018:	9201      	str	r2, [sp, #4]
 801301a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801301e:	f1bb 0f00 	cmp.w	fp, #0
 8013022:	dc03      	bgt.n	801302c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013024:	9a03      	ldr	r2, [sp, #12]
 8013026:	2a00      	cmp	r2, #0
 8013028:	f340 8153 	ble.w	80132d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801302c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801302e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013032:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013036:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801303a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801303c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013040:	2b00      	cmp	r3, #0
 8013042:	dd0e      	ble.n	8013062 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013044:	1408      	asrs	r0, r1, #16
 8013046:	d405      	bmi.n	8013054 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013048:	42b8      	cmp	r0, r7
 801304a:	da03      	bge.n	8013054 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801304c:	1410      	asrs	r0, r2, #16
 801304e:	d401      	bmi.n	8013054 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013050:	42b0      	cmp	r0, r6
 8013052:	db07      	blt.n	8013064 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013054:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013056:	4401      	add	r1, r0
 8013058:	9812      	ldr	r0, [sp, #72]	; 0x48
 801305a:	3b01      	subs	r3, #1
 801305c:	4402      	add	r2, r0
 801305e:	3402      	adds	r4, #2
 8013060:	e7ee      	b.n	8013040 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013062:	d017      	beq.n	8013094 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013064:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013066:	1e58      	subs	r0, r3, #1
 8013068:	fb05 1500 	mla	r5, r5, r0, r1
 801306c:	142d      	asrs	r5, r5, #16
 801306e:	d409      	bmi.n	8013084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013070:	42bd      	cmp	r5, r7
 8013072:	da07      	bge.n	8013084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013074:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013076:	fb05 2000 	mla	r0, r5, r0, r2
 801307a:	1400      	asrs	r0, r0, #16
 801307c:	d402      	bmi.n	8013084 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801307e:	42b0      	cmp	r0, r6
 8013080:	f2c0 80bc 	blt.w	80131fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013084:	2600      	movs	r6, #0
 8013086:	1998      	adds	r0, r3, r6
 8013088:	2800      	cmp	r0, #0
 801308a:	dc3e      	bgt.n	801310a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801308c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013090:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013094:	f1bb 0f00 	cmp.w	fp, #0
 8013098:	f340 811b 	ble.w	80132d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801309c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80130a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80130a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80130a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80130aa:	f1bb 0b01 	subs.w	fp, fp, #1
 80130ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80130b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80130b6:	eeb0 6a62 	vmov.f32	s12, s5
 80130ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80130be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80130c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80130c6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80130ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80130ce:	eeb0 6a43 	vmov.f32	s12, s6
 80130d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80130d6:	ee12 2a90 	vmov	r2, s5
 80130da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80130de:	fb92 f3f3 	sdiv	r3, r2, r3
 80130e2:	ee13 2a10 	vmov	r2, s6
 80130e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80130ea:	9311      	str	r3, [sp, #68]	; 0x44
 80130ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80130ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80130f2:	9a03      	ldr	r2, [sp, #12]
 80130f4:	9312      	str	r3, [sp, #72]	; 0x48
 80130f6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80130fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80130fc:	eeb0 3a67 	vmov.f32	s6, s15
 8013100:	bf08      	it	eq
 8013102:	4613      	moveq	r3, r2
 8013104:	eef0 2a47 	vmov.f32	s5, s14
 8013108:	e789      	b.n	801301e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801310a:	140f      	asrs	r7, r1, #16
 801310c:	d45e      	bmi.n	80131cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801310e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013112:	42bd      	cmp	r5, r7
 8013114:	dd5a      	ble.n	80131cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013116:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801311a:	d457      	bmi.n	80131cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801311c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013120:	4560      	cmp	r0, ip
 8013122:	dd53      	ble.n	80131cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013124:	9800      	ldr	r0, [sp, #0]
 8013126:	b22d      	sxth	r5, r5
 8013128:	fb0c 0505 	mla	r5, ip, r5, r0
 801312c:	5de8      	ldrb	r0, [r5, r7]
 801312e:	9d01      	ldr	r5, [sp, #4]
 8013130:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013134:	0e07      	lsrs	r7, r0, #24
 8013136:	2fff      	cmp	r7, #255	; 0xff
 8013138:	d04e      	beq.n	80131d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801313a:	b2fd      	uxtb	r5, r7
 801313c:	2f00      	cmp	r7, #0
 801313e:	d045      	beq.n	80131cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8013140:	f06f 0701 	mvn.w	r7, #1
 8013144:	4377      	muls	r7, r6
 8013146:	fa1f f985 	uxth.w	r9, r5
 801314a:	f834 8007 	ldrh.w	r8, [r4, r7]
 801314e:	9702      	str	r7, [sp, #8]
 8013150:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013154:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8013158:	43ed      	mvns	r5, r5
 801315a:	b2ed      	uxtb	r5, r5
 801315c:	fb17 f709 	smulbb	r7, r7, r9
 8013160:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013164:	fb0c 7c05 	mla	ip, ip, r5, r7
 8013168:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801316c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8013170:	b2c0      	uxtb	r0, r0
 8013172:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013176:	fa5f f888 	uxtb.w	r8, r8
 801317a:	fb10 f009 	smulbb	r0, r0, r9
 801317e:	fb08 0005 	mla	r0, r8, r5, r0
 8013182:	b280      	uxth	r0, r0
 8013184:	fa1f fc8c 	uxth.w	ip, ip
 8013188:	fb1a fa09 	smulbb	sl, sl, r9
 801318c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013190:	fb07 a705 	mla	r7, r7, r5, sl
 8013194:	f100 0a01 	add.w	sl, r0, #1
 8013198:	f10c 0501 	add.w	r5, ip, #1
 801319c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80131a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80131a4:	b2bf      	uxth	r7, r7
 80131a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80131aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80131ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 80131b2:	f107 0a01 	add.w	sl, r7, #1
 80131b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80131ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80131be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80131c2:	9802      	ldr	r0, [sp, #8]
 80131c4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80131c8:	f824 c000 	strh.w	ip, [r4, r0]
 80131cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80131ce:	4401      	add	r1, r0
 80131d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80131d2:	3e01      	subs	r6, #1
 80131d4:	4402      	add	r2, r0
 80131d6:	e756      	b.n	8013086 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80131d8:	f06f 0501 	mvn.w	r5, #1
 80131dc:	fb05 f706 	mul.w	r7, r5, r6
 80131e0:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80131e4:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80131e8:	0945      	lsrs	r5, r0, #5
 80131ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80131ee:	ea4c 0505 	orr.w	r5, ip, r5
 80131f2:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80131f6:	4305      	orrs	r5, r0
 80131f8:	53e5      	strh	r5, [r4, r7]
 80131fa:	e7e7      	b.n	80131cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80131fc:	f04f 0800 	mov.w	r8, #0
 8013200:	eba3 0008 	sub.w	r0, r3, r8
 8013204:	2800      	cmp	r0, #0
 8013206:	f77f af41 	ble.w	801308c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801320a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801320e:	9f00      	ldr	r7, [sp, #0]
 8013210:	1410      	asrs	r0, r2, #16
 8013212:	140d      	asrs	r5, r1, #16
 8013214:	fb06 7000 	mla	r0, r6, r0, r7
 8013218:	5d40      	ldrb	r0, [r0, r5]
 801321a:	9d01      	ldr	r5, [sp, #4]
 801321c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013220:	0e06      	lsrs	r6, r0, #24
 8013222:	2eff      	cmp	r6, #255	; 0xff
 8013224:	d048      	beq.n	80132b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8013226:	b2f5      	uxtb	r5, r6
 8013228:	2e00      	cmp	r6, #0
 801322a:	d03e      	beq.n	80132aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801322c:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013230:	fa1f f985 	uxth.w	r9, r5
 8013234:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013238:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801323c:	43ed      	mvns	r5, r5
 801323e:	b2ed      	uxtb	r5, r5
 8013240:	fb16 f609 	smulbb	r6, r6, r9
 8013244:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013248:	fb07 6705 	mla	r7, r7, r5, r6
 801324c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8013250:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013254:	b2c0      	uxtb	r0, r0
 8013256:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801325a:	fa5f fc8c 	uxtb.w	ip, ip
 801325e:	fb10 f009 	smulbb	r0, r0, r9
 8013262:	fb0c 0005 	mla	r0, ip, r5, r0
 8013266:	b2bf      	uxth	r7, r7
 8013268:	fb1a fa09 	smulbb	sl, sl, r9
 801326c:	b280      	uxth	r0, r0
 801326e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013272:	fb06 a605 	mla	r6, r6, r5, sl
 8013276:	1c7d      	adds	r5, r7, #1
 8013278:	f100 0a01 	add.w	sl, r0, #1
 801327c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8013280:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013284:	b2b6      	uxth	r6, r6
 8013286:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801328a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801328e:	ea47 070a 	orr.w	r7, r7, sl
 8013292:	f106 0a01 	add.w	sl, r6, #1
 8013296:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801329a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801329e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80132a2:	ea47 070a 	orr.w	r7, r7, sl
 80132a6:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80132aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80132ac:	4401      	add	r1, r0
 80132ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 80132b0:	f108 0801 	add.w	r8, r8, #1
 80132b4:	4402      	add	r2, r0
 80132b6:	e7a3      	b.n	8013200 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80132b8:	4d07      	ldr	r5, [pc, #28]	; (80132d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80132ba:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 80132be:	0945      	lsrs	r5, r0, #5
 80132c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80132c4:	4335      	orrs	r5, r6
 80132c6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80132ca:	4305      	orrs	r5, r0
 80132cc:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80132d0:	e7eb      	b.n	80132aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80132d2:	b005      	add	sp, #20
 80132d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132d8:	fffff800 	.word	0xfffff800

080132dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80132dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80132e0:	b087      	sub	sp, #28
 80132e2:	468b      	mov	fp, r1
 80132e4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80132e6:	9204      	str	r2, [sp, #16]
 80132e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80132ec:	9205      	str	r2, [sp, #20]
 80132ee:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80132f2:	6861      	ldr	r1, [r4, #4]
 80132f4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80132f8:	fb01 2000 	mla	r0, r1, r0, r2
 80132fc:	6822      	ldr	r2, [r4, #0]
 80132fe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013302:	f8de 2000 	ldr.w	r2, [lr]
 8013306:	9201      	str	r2, [sp, #4]
 8013308:	f8de 2004 	ldr.w	r2, [lr, #4]
 801330c:	9202      	str	r2, [sp, #8]
 801330e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013312:	f1bb 0f00 	cmp.w	fp, #0
 8013316:	dc03      	bgt.n	8013320 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013318:	9a04      	ldr	r2, [sp, #16]
 801331a:	2a00      	cmp	r2, #0
 801331c:	f340 8142 	ble.w	80135a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013320:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013322:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013326:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801332a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801332e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013330:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013334:	2b00      	cmp	r3, #0
 8013336:	dd0e      	ble.n	8013356 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013338:	140c      	asrs	r4, r1, #16
 801333a:	d405      	bmi.n	8013348 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801333c:	42bc      	cmp	r4, r7
 801333e:	da03      	bge.n	8013348 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013340:	1414      	asrs	r4, r2, #16
 8013342:	d401      	bmi.n	8013348 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013344:	42b4      	cmp	r4, r6
 8013346:	db07      	blt.n	8013358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013348:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801334a:	4421      	add	r1, r4
 801334c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801334e:	3b01      	subs	r3, #1
 8013350:	4422      	add	r2, r4
 8013352:	3002      	adds	r0, #2
 8013354:	e7ee      	b.n	8013334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013356:	d019      	beq.n	801338c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013358:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801335a:	1e5c      	subs	r4, r3, #1
 801335c:	fb05 1504 	mla	r5, r5, r4, r1
 8013360:	142d      	asrs	r5, r5, #16
 8013362:	d409      	bmi.n	8013378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013364:	42bd      	cmp	r5, r7
 8013366:	da07      	bge.n	8013378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013368:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801336a:	fb05 2404 	mla	r4, r5, r4, r2
 801336e:	1424      	asrs	r4, r4, #16
 8013370:	d402      	bmi.n	8013378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013372:	42b4      	cmp	r4, r6
 8013374:	f2c0 80b1 	blt.w	80134da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013378:	f04f 0800 	mov.w	r8, #0
 801337c:	eb03 0408 	add.w	r4, r3, r8
 8013380:	2c00      	cmp	r4, #0
 8013382:	dc3e      	bgt.n	8013402 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013384:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013388:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801338c:	f1bb 0f00 	cmp.w	fp, #0
 8013390:	f340 8108 	ble.w	80135a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013394:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013398:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801339c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80133a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80133a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80133a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80133aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80133ae:	eeb0 6a62 	vmov.f32	s12, s5
 80133b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80133b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80133ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80133be:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80133c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80133c6:	eeb0 6a43 	vmov.f32	s12, s6
 80133ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80133ce:	ee12 2a90 	vmov	r2, s5
 80133d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80133d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80133da:	ee13 2a10 	vmov	r2, s6
 80133de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80133e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80133e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80133e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80133ea:	9a04      	ldr	r2, [sp, #16]
 80133ec:	9314      	str	r3, [sp, #80]	; 0x50
 80133ee:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80133f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80133f4:	eeb0 3a67 	vmov.f32	s6, s15
 80133f8:	bf08      	it	eq
 80133fa:	4613      	moveq	r3, r2
 80133fc:	eef0 2a47 	vmov.f32	s5, s14
 8013400:	e787      	b.n	8013312 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013402:	140e      	asrs	r6, r1, #16
 8013404:	d462      	bmi.n	80134cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013406:	f8de 5008 	ldr.w	r5, [lr, #8]
 801340a:	42b5      	cmp	r5, r6
 801340c:	dd5e      	ble.n	80134cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801340e:	1417      	asrs	r7, r2, #16
 8013410:	d45c      	bmi.n	80134cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013412:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013416:	42bc      	cmp	r4, r7
 8013418:	dd58      	ble.n	80134cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801341a:	b22d      	sxth	r5, r5
 801341c:	fb07 6505 	mla	r5, r7, r5, r6
 8013420:	9c02      	ldr	r4, [sp, #8]
 8013422:	5d66      	ldrb	r6, [r4, r5]
 8013424:	2e00      	cmp	r6, #0
 8013426:	d051      	beq.n	80134cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013428:	9c01      	ldr	r4, [sp, #4]
 801342a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801342e:	f06f 0401 	mvn.w	r4, #1
 8013432:	fb04 f408 	mul.w	r4, r4, r8
 8013436:	9403      	str	r4, [sp, #12]
 8013438:	5b05      	ldrh	r5, [r0, r4]
 801343a:	9c05      	ldr	r4, [sp, #20]
 801343c:	4366      	muls	r6, r4
 801343e:	1c74      	adds	r4, r6, #1
 8013440:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013444:	1224      	asrs	r4, r4, #8
 8013446:	b2a7      	uxth	r7, r4
 8013448:	122e      	asrs	r6, r5, #8
 801344a:	43e4      	mvns	r4, r4
 801344c:	b2e4      	uxtb	r4, r4
 801344e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013452:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013456:	fb16 f604 	smulbb	r6, r6, r4
 801345a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801345e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013462:	00ed      	lsls	r5, r5, #3
 8013464:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013468:	b2ed      	uxtb	r5, r5
 801346a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801346e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013472:	fb15 f504 	smulbb	r5, r5, r4
 8013476:	fa5f f989 	uxtb.w	r9, r9
 801347a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801347e:	fb09 5507 	mla	r5, r9, r7, r5
 8013482:	fb1a fa04 	smulbb	sl, sl, r4
 8013486:	fa1f fc8c 	uxth.w	ip, ip
 801348a:	b2ad      	uxth	r5, r5
 801348c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013490:	fb06 a607 	mla	r6, r6, r7, sl
 8013494:	f10c 0401 	add.w	r4, ip, #1
 8013498:	f105 0a01 	add.w	sl, r5, #1
 801349c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80134a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80134a4:	b2b6      	uxth	r6, r6
 80134a6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80134aa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80134ae:	ea4c 0c0a 	orr.w	ip, ip, sl
 80134b2:	f106 0a01 	add.w	sl, r6, #1
 80134b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80134ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80134be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80134c2:	9c03      	ldr	r4, [sp, #12]
 80134c4:	ea4c 0c0a 	orr.w	ip, ip, sl
 80134c8:	f820 c004 	strh.w	ip, [r0, r4]
 80134cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80134ce:	4421      	add	r1, r4
 80134d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80134d2:	f108 38ff 	add.w	r8, r8, #4294967295
 80134d6:	4422      	add	r2, r4
 80134d8:	e750      	b.n	801337c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80134da:	f04f 0900 	mov.w	r9, #0
 80134de:	eba3 0409 	sub.w	r4, r3, r9
 80134e2:	2c00      	cmp	r4, #0
 80134e4:	f77f af4e 	ble.w	8013384 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80134e8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80134ec:	140d      	asrs	r5, r1, #16
 80134ee:	1414      	asrs	r4, r2, #16
 80134f0:	fb06 5404 	mla	r4, r6, r4, r5
 80134f4:	9d02      	ldr	r5, [sp, #8]
 80134f6:	5d2e      	ldrb	r6, [r5, r4]
 80134f8:	2e00      	cmp	r6, #0
 80134fa:	d04c      	beq.n	8013596 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80134fc:	9d01      	ldr	r5, [sp, #4]
 80134fe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8013502:	9c05      	ldr	r4, [sp, #20]
 8013504:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013508:	4366      	muls	r6, r4
 801350a:	1c74      	adds	r4, r6, #1
 801350c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013510:	1224      	asrs	r4, r4, #8
 8013512:	b2a7      	uxth	r7, r4
 8013514:	122e      	asrs	r6, r5, #8
 8013516:	43e4      	mvns	r4, r4
 8013518:	b2e4      	uxtb	r4, r4
 801351a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801351e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013522:	fb16 f604 	smulbb	r6, r6, r4
 8013526:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801352a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801352e:	00ed      	lsls	r5, r5, #3
 8013530:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013534:	b2ed      	uxtb	r5, r5
 8013536:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801353a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801353e:	fb15 f504 	smulbb	r5, r5, r4
 8013542:	fa5f f888 	uxtb.w	r8, r8
 8013546:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801354a:	fb08 5507 	mla	r5, r8, r7, r5
 801354e:	fb1a fa04 	smulbb	sl, sl, r4
 8013552:	fa1f fc8c 	uxth.w	ip, ip
 8013556:	b2ad      	uxth	r5, r5
 8013558:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801355c:	fb06 a607 	mla	r6, r6, r7, sl
 8013560:	f10c 0401 	add.w	r4, ip, #1
 8013564:	f105 0a01 	add.w	sl, r5, #1
 8013568:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801356c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013570:	b2b6      	uxth	r6, r6
 8013572:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013576:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801357a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801357e:	f106 0a01 	add.w	sl, r6, #1
 8013582:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013586:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801358a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801358e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013592:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013596:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013598:	4421      	add	r1, r4
 801359a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801359c:	f109 0901 	add.w	r9, r9, #1
 80135a0:	4422      	add	r2, r4
 80135a2:	e79c      	b.n	80134de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80135a4:	b007      	add	sp, #28
 80135a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080135aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80135aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135ae:	b085      	sub	sp, #20
 80135b0:	468b      	mov	fp, r1
 80135b2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80135b4:	9203      	str	r2, [sp, #12]
 80135b6:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80135ba:	6861      	ldr	r1, [r4, #4]
 80135bc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80135c0:	fb01 2000 	mla	r0, r1, r0, r2
 80135c4:	6822      	ldr	r2, [r4, #0]
 80135c6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80135ca:	f8d8 2000 	ldr.w	r2, [r8]
 80135ce:	9200      	str	r2, [sp, #0]
 80135d0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80135d4:	9201      	str	r2, [sp, #4]
 80135d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80135da:	f1bb 0f00 	cmp.w	fp, #0
 80135de:	dc03      	bgt.n	80135e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80135e0:	9a03      	ldr	r2, [sp, #12]
 80135e2:	2a00      	cmp	r2, #0
 80135e4:	f340 8146 	ble.w	8013874 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80135e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80135ea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80135ee:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80135f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80135f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80135f8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80135fc:	2b00      	cmp	r3, #0
 80135fe:	dd0e      	ble.n	801361e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013600:	140c      	asrs	r4, r1, #16
 8013602:	d405      	bmi.n	8013610 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013604:	42bc      	cmp	r4, r7
 8013606:	da03      	bge.n	8013610 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013608:	1414      	asrs	r4, r2, #16
 801360a:	d401      	bmi.n	8013610 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801360c:	42b4      	cmp	r4, r6
 801360e:	db07      	blt.n	8013620 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013610:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8013612:	4421      	add	r1, r4
 8013614:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013616:	3b01      	subs	r3, #1
 8013618:	4422      	add	r2, r4
 801361a:	3002      	adds	r0, #2
 801361c:	e7ee      	b.n	80135fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801361e:	d017      	beq.n	8013650 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013620:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013622:	1e5c      	subs	r4, r3, #1
 8013624:	fb05 1504 	mla	r5, r5, r4, r1
 8013628:	142d      	asrs	r5, r5, #16
 801362a:	d409      	bmi.n	8013640 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801362c:	42bd      	cmp	r5, r7
 801362e:	da07      	bge.n	8013640 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013630:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013632:	fb05 2404 	mla	r4, r5, r4, r2
 8013636:	1424      	asrs	r4, r4, #16
 8013638:	d402      	bmi.n	8013640 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801363a:	42b4      	cmp	r4, r6
 801363c:	f2c0 80b3 	blt.w	80137a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013640:	2600      	movs	r6, #0
 8013642:	199c      	adds	r4, r3, r6
 8013644:	2c00      	cmp	r4, #0
 8013646:	dc3e      	bgt.n	80136c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013648:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801364c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013650:	f1bb 0f00 	cmp.w	fp, #0
 8013654:	f340 810e 	ble.w	8013874 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8013658:	ee30 0a04 	vadd.f32	s0, s0, s8
 801365c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013660:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013664:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013666:	f1bb 0b01 	subs.w	fp, fp, #1
 801366a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801366e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013672:	eeb0 6a62 	vmov.f32	s12, s5
 8013676:	ee61 7a27 	vmul.f32	s15, s2, s15
 801367a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801367e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013682:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013686:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801368a:	eeb0 6a43 	vmov.f32	s12, s6
 801368e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013692:	ee12 2a90 	vmov	r2, s5
 8013696:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801369a:	fb92 f3f3 	sdiv	r3, r2, r3
 801369e:	ee13 2a10 	vmov	r2, s6
 80136a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80136a6:	9311      	str	r3, [sp, #68]	; 0x44
 80136a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80136aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80136ae:	9a03      	ldr	r2, [sp, #12]
 80136b0:	9312      	str	r3, [sp, #72]	; 0x48
 80136b2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80136b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80136b8:	eeb0 3a67 	vmov.f32	s6, s15
 80136bc:	bf08      	it	eq
 80136be:	4613      	moveq	r3, r2
 80136c0:	eef0 2a47 	vmov.f32	s5, s14
 80136c4:	e789      	b.n	80135da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80136c6:	140f      	asrs	r7, r1, #16
 80136c8:	d45f      	bmi.n	801378a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80136ca:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80136ce:	42bd      	cmp	r5, r7
 80136d0:	dd5b      	ble.n	801378a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80136d2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80136d6:	d458      	bmi.n	801378a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80136d8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80136dc:	4564      	cmp	r4, ip
 80136de:	dd54      	ble.n	801378a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80136e0:	b22d      	sxth	r5, r5
 80136e2:	fb0c 7505 	mla	r5, ip, r5, r7
 80136e6:	9c01      	ldr	r4, [sp, #4]
 80136e8:	5d64      	ldrb	r4, [r4, r5]
 80136ea:	2cff      	cmp	r4, #255	; 0xff
 80136ec:	d053      	beq.n	8013796 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80136ee:	2c00      	cmp	r4, #0
 80136f0:	d04b      	beq.n	801378a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80136f2:	9f00      	ldr	r7, [sp, #0]
 80136f4:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80136f8:	f06f 0501 	mvn.w	r5, #1
 80136fc:	4375      	muls	r5, r6
 80136fe:	9502      	str	r5, [sp, #8]
 8013700:	5b45      	ldrh	r5, [r0, r5]
 8013702:	fa1f fc84 	uxth.w	ip, r4
 8013706:	122f      	asrs	r7, r5, #8
 8013708:	43e4      	mvns	r4, r4
 801370a:	b2e4      	uxtb	r4, r4
 801370c:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8013710:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013714:	fb17 f704 	smulbb	r7, r7, r4
 8013718:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801371c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8013720:	00ed      	lsls	r5, r5, #3
 8013722:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8013726:	b2ed      	uxtb	r5, r5
 8013728:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801372c:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013730:	fb15 f504 	smulbb	r5, r5, r4
 8013734:	fa5f f989 	uxtb.w	r9, r9
 8013738:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801373c:	fb09 550c 	mla	r5, r9, ip, r5
 8013740:	fb1a fa04 	smulbb	sl, sl, r4
 8013744:	fa1f fe8e 	uxth.w	lr, lr
 8013748:	b2ad      	uxth	r5, r5
 801374a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801374e:	fb07 a70c 	mla	r7, r7, ip, sl
 8013752:	f10e 0401 	add.w	r4, lr, #1
 8013756:	f105 0a01 	add.w	sl, r5, #1
 801375a:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801375e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013762:	b2bf      	uxth	r7, r7
 8013764:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013768:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801376c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8013770:	f107 0a01 	add.w	sl, r7, #1
 8013774:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013778:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801377c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013780:	9c02      	ldr	r4, [sp, #8]
 8013782:	ea4e 0e0a 	orr.w	lr, lr, sl
 8013786:	f820 e004 	strh.w	lr, [r0, r4]
 801378a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801378c:	4421      	add	r1, r4
 801378e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013790:	3e01      	subs	r6, #1
 8013792:	4422      	add	r2, r4
 8013794:	e755      	b.n	8013642 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013796:	9c00      	ldr	r4, [sp, #0]
 8013798:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801379c:	f06f 0401 	mvn.w	r4, #1
 80137a0:	4374      	muls	r4, r6
 80137a2:	5305      	strh	r5, [r0, r4]
 80137a4:	e7f1      	b.n	801378a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80137a6:	f04f 0900 	mov.w	r9, #0
 80137aa:	eba3 0409 	sub.w	r4, r3, r9
 80137ae:	2c00      	cmp	r4, #0
 80137b0:	f77f af4a 	ble.w	8013648 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80137b4:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80137b8:	1414      	asrs	r4, r2, #16
 80137ba:	140d      	asrs	r5, r1, #16
 80137bc:	fb06 5504 	mla	r5, r6, r4, r5
 80137c0:	9c01      	ldr	r4, [sp, #4]
 80137c2:	5d64      	ldrb	r4, [r4, r5]
 80137c4:	2cff      	cmp	r4, #255	; 0xff
 80137c6:	d04f      	beq.n	8013868 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 80137c8:	2c00      	cmp	r4, #0
 80137ca:	d046      	beq.n	801385a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80137cc:	9e00      	ldr	r6, [sp, #0]
 80137ce:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80137d2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80137d6:	b2a7      	uxth	r7, r4
 80137d8:	122e      	asrs	r6, r5, #8
 80137da:	43e4      	mvns	r4, r4
 80137dc:	b2e4      	uxtb	r4, r4
 80137de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80137e2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80137e6:	fb16 f604 	smulbb	r6, r6, r4
 80137ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80137ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80137f2:	00ed      	lsls	r5, r5, #3
 80137f4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80137f8:	b2ed      	uxtb	r5, r5
 80137fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80137fe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013802:	fb15 f504 	smulbb	r5, r5, r4
 8013806:	fa5f fe8e 	uxtb.w	lr, lr
 801380a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801380e:	fb0e 5507 	mla	r5, lr, r7, r5
 8013812:	fb1a fa04 	smulbb	sl, sl, r4
 8013816:	fa1f fc8c 	uxth.w	ip, ip
 801381a:	b2ad      	uxth	r5, r5
 801381c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013820:	fb06 a607 	mla	r6, r6, r7, sl
 8013824:	f10c 0401 	add.w	r4, ip, #1
 8013828:	f105 0a01 	add.w	sl, r5, #1
 801382c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013830:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013834:	b2b6      	uxth	r6, r6
 8013836:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801383a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801383e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013842:	f106 0a01 	add.w	sl, r6, #1
 8013846:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801384a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801384e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013852:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013856:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801385a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801385c:	4421      	add	r1, r4
 801385e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013860:	f109 0901 	add.w	r9, r9, #1
 8013864:	4422      	add	r2, r4
 8013866:	e7a0      	b.n	80137aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8013868:	9c00      	ldr	r4, [sp, #0]
 801386a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801386e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8013872:	e7f2      	b.n	801385a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8013874:	b005      	add	sp, #20
 8013876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801387a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801387a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801387e:	b085      	sub	sp, #20
 8013880:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013882:	9203      	str	r2, [sp, #12]
 8013884:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8013888:	9201      	str	r2, [sp, #4]
 801388a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801388e:	9100      	str	r1, [sp, #0]
 8013890:	6841      	ldr	r1, [r0, #4]
 8013892:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8013896:	fb01 2404 	mla	r4, r1, r4, r2
 801389a:	6802      	ldr	r2, [r0, #0]
 801389c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80138a0:	f8de 2000 	ldr.w	r2, [lr]
 80138a4:	9202      	str	r2, [sp, #8]
 80138a6:	9a01      	ldr	r2, [sp, #4]
 80138a8:	43d6      	mvns	r6, r2
 80138aa:	b2f6      	uxtb	r6, r6
 80138ac:	9a00      	ldr	r2, [sp, #0]
 80138ae:	2a00      	cmp	r2, #0
 80138b0:	dc03      	bgt.n	80138ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80138b2:	9a03      	ldr	r2, [sp, #12]
 80138b4:	2a00      	cmp	r2, #0
 80138b6:	f340 8124 	ble.w	8013b02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80138ba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80138bc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80138c0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80138c4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80138c8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80138ca:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80138ce:	2b00      	cmp	r3, #0
 80138d0:	dd0e      	ble.n	80138f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80138d2:	1408      	asrs	r0, r1, #16
 80138d4:	d405      	bmi.n	80138e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80138d6:	4560      	cmp	r0, ip
 80138d8:	da03      	bge.n	80138e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80138da:	1410      	asrs	r0, r2, #16
 80138dc:	d401      	bmi.n	80138e2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80138de:	42b8      	cmp	r0, r7
 80138e0:	db07      	blt.n	80138f2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80138e2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80138e4:	4401      	add	r1, r0
 80138e6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80138e8:	3b01      	subs	r3, #1
 80138ea:	4402      	add	r2, r0
 80138ec:	3402      	adds	r4, #2
 80138ee:	e7ee      	b.n	80138ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80138f0:	d06e      	beq.n	80139d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80138f2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80138f4:	1e58      	subs	r0, r3, #1
 80138f6:	fb05 1500 	mla	r5, r5, r0, r1
 80138fa:	142d      	asrs	r5, r5, #16
 80138fc:	d45c      	bmi.n	80139b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80138fe:	4565      	cmp	r5, ip
 8013900:	da5a      	bge.n	80139b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013902:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013904:	fb05 2000 	mla	r0, r5, r0, r2
 8013908:	1400      	asrs	r0, r0, #16
 801390a:	d455      	bmi.n	80139b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801390c:	42b8      	cmp	r0, r7
 801390e:	da53      	bge.n	80139b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013910:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8013914:	4699      	mov	r9, r3
 8013916:	46a2      	mov	sl, r4
 8013918:	f1b9 0f00 	cmp.w	r9, #0
 801391c:	dd54      	ble.n	80139c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801391e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013922:	140d      	asrs	r5, r1, #16
 8013924:	1410      	asrs	r0, r2, #16
 8013926:	fb07 5000 	mla	r0, r7, r0, r5
 801392a:	9d02      	ldr	r5, [sp, #8]
 801392c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8013930:	f8ba 5000 	ldrh.w	r5, [sl]
 8013934:	122f      	asrs	r7, r5, #8
 8013936:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801393a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801393e:	fb17 f706 	smulbb	r7, r7, r6
 8013942:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8013946:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801394a:	00ed      	lsls	r5, r5, #3
 801394c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8013950:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8013954:	10c7      	asrs	r7, r0, #3
 8013956:	b2ed      	uxtb	r5, r5
 8013958:	00c0      	lsls	r0, r0, #3
 801395a:	fb18 f806 	smulbb	r8, r8, r6
 801395e:	fb15 f506 	smulbb	r5, r5, r6
 8013962:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013966:	b2c0      	uxtb	r0, r0
 8013968:	fa1f fc8c 	uxth.w	ip, ip
 801396c:	fb07 870b 	mla	r7, r7, fp, r8
 8013970:	fb00 500b 	mla	r0, r0, fp, r5
 8013974:	b280      	uxth	r0, r0
 8013976:	b2bf      	uxth	r7, r7
 8013978:	f10c 0501 	add.w	r5, ip, #1
 801397c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013980:	f107 0801 	add.w	r8, r7, #1
 8013984:	1c45      	adds	r5, r0, #1
 8013986:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801398a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801398e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013990:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013994:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013998:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801399c:	ea4c 0c05 	orr.w	ip, ip, r5
 80139a0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80139a4:	4401      	add	r1, r0
 80139a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80139a8:	ea4c 0c08 	orr.w	ip, ip, r8
 80139ac:	f82a cb02 	strh.w	ip, [sl], #2
 80139b0:	4402      	add	r2, r0
 80139b2:	f109 39ff 	add.w	r9, r9, #4294967295
 80139b6:	e7af      	b.n	8013918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80139b8:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80139bc:	f04f 0800 	mov.w	r8, #0
 80139c0:	eb03 0008 	add.w	r0, r3, r8
 80139c4:	2800      	cmp	r0, #0
 80139c6:	dc41      	bgt.n	8013a4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80139c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80139cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80139d0:	9b00      	ldr	r3, [sp, #0]
 80139d2:	2b00      	cmp	r3, #0
 80139d4:	f340 8095 	ble.w	8013b02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80139d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80139dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80139e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80139e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80139e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80139ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80139ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80139f2:	eef0 6a62 	vmov.f32	s13, s5
 80139f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80139fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80139fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013a02:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8013a06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013a0a:	eef0 6a43 	vmov.f32	s13, s6
 8013a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013a12:	ee12 2a90 	vmov	r2, s5
 8013a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013a1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a1e:	ee13 2a10 	vmov	r2, s6
 8013a22:	9311      	str	r3, [sp, #68]	; 0x44
 8013a24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8013a2a:	9312      	str	r3, [sp, #72]	; 0x48
 8013a2c:	9b00      	ldr	r3, [sp, #0]
 8013a2e:	9a03      	ldr	r2, [sp, #12]
 8013a30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013a34:	3b01      	subs	r3, #1
 8013a36:	9300      	str	r3, [sp, #0]
 8013a38:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8013a3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a3e:	eeb0 3a67 	vmov.f32	s6, s15
 8013a42:	bf08      	it	eq
 8013a44:	4613      	moveq	r3, r2
 8013a46:	eef0 2a47 	vmov.f32	s5, s14
 8013a4a:	e72f      	b.n	80138ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8013a4c:	140f      	asrs	r7, r1, #16
 8013a4e:	d451      	bmi.n	8013af4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013a50:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013a54:	42bd      	cmp	r5, r7
 8013a56:	dd4d      	ble.n	8013af4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013a58:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013a5c:	d44a      	bmi.n	8013af4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013a5e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013a62:	4560      	cmp	r0, ip
 8013a64:	dd46      	ble.n	8013af4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8013a66:	b22d      	sxth	r5, r5
 8013a68:	fb0c 7505 	mla	r5, ip, r5, r7
 8013a6c:	9802      	ldr	r0, [sp, #8]
 8013a6e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8013a72:	f06f 0501 	mvn.w	r5, #1
 8013a76:	fb05 fb08 	mul.w	fp, r5, r8
 8013a7a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8013a7e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8013a82:	122f      	asrs	r7, r5, #8
 8013a84:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a88:	fb17 f706 	smulbb	r7, r7, r6
 8013a8c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013a90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013a94:	00ed      	lsls	r5, r5, #3
 8013a96:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8013a9a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013a9e:	10c7      	asrs	r7, r0, #3
 8013aa0:	b2ed      	uxtb	r5, r5
 8013aa2:	00c0      	lsls	r0, r0, #3
 8013aa4:	fb19 f906 	smulbb	r9, r9, r6
 8013aa8:	fb15 f506 	smulbb	r5, r5, r6
 8013aac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013ab0:	b2c0      	uxtb	r0, r0
 8013ab2:	fa1f fc8c 	uxth.w	ip, ip
 8013ab6:	fb07 970a 	mla	r7, r7, sl, r9
 8013aba:	fb00 500a 	mla	r0, r0, sl, r5
 8013abe:	b2bf      	uxth	r7, r7
 8013ac0:	b280      	uxth	r0, r0
 8013ac2:	f10c 0501 	add.w	r5, ip, #1
 8013ac6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8013aca:	f107 0901 	add.w	r9, r7, #1
 8013ace:	1c45      	adds	r5, r0, #1
 8013ad0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8013ad4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8013ad8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013adc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8013ae0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8013ae4:	ea4c 0c05 	orr.w	ip, ip, r5
 8013ae8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013aec:	ea4c 0c09 	orr.w	ip, ip, r9
 8013af0:	f824 c00b 	strh.w	ip, [r4, fp]
 8013af4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8013af6:	4401      	add	r1, r0
 8013af8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013afa:	f108 38ff 	add.w	r8, r8, #4294967295
 8013afe:	4402      	add	r2, r0
 8013b00:	e75e      	b.n	80139c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8013b02:	b005      	add	sp, #20
 8013b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b08 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b0c:	b085      	sub	sp, #20
 8013b0e:	4693      	mov	fp, r2
 8013b10:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8013b12:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013b14:	6870      	ldr	r0, [r6, #4]
 8013b16:	9101      	str	r1, [sp, #4]
 8013b18:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013b1c:	fb00 2404 	mla	r4, r0, r4, r2
 8013b20:	6832      	ldr	r2, [r6, #0]
 8013b22:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8013b26:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013b2a:	682a      	ldr	r2, [r5, #0]
 8013b2c:	9202      	str	r2, [sp, #8]
 8013b2e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013b32:	9a01      	ldr	r2, [sp, #4]
 8013b34:	2a00      	cmp	r2, #0
 8013b36:	dc03      	bgt.n	8013b40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013b38:	f1bb 0f00 	cmp.w	fp, #0
 8013b3c:	f340 809a 	ble.w	8013c74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013b40:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013b42:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013b46:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8013b4a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013b4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013b50:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013b54:	2b00      	cmp	r3, #0
 8013b56:	dd0c      	ble.n	8013b72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8013b58:	1406      	asrs	r6, r0, #16
 8013b5a:	d405      	bmi.n	8013b68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013b5c:	454e      	cmp	r6, r9
 8013b5e:	da03      	bge.n	8013b68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013b60:	1416      	asrs	r6, r2, #16
 8013b62:	d401      	bmi.n	8013b68 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013b64:	4546      	cmp	r6, r8
 8013b66:	db05      	blt.n	8013b74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013b68:	4470      	add	r0, lr
 8013b6a:	4462      	add	r2, ip
 8013b6c:	3b01      	subs	r3, #1
 8013b6e:	3402      	adds	r4, #2
 8013b70:	e7f0      	b.n	8013b54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013b72:	d00f      	beq.n	8013b94 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8013b74:	1e5e      	subs	r6, r3, #1
 8013b76:	fb0e 0706 	mla	r7, lr, r6, r0
 8013b7a:	143f      	asrs	r7, r7, #16
 8013b7c:	d541      	bpl.n	8013c02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8013b7e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8013b82:	4698      	mov	r8, r3
 8013b84:	9603      	str	r6, [sp, #12]
 8013b86:	f1b8 0f00 	cmp.w	r8, #0
 8013b8a:	dc56      	bgt.n	8013c3a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8013b8c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013b90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b94:	9b01      	ldr	r3, [sp, #4]
 8013b96:	2b00      	cmp	r3, #0
 8013b98:	dd6c      	ble.n	8013c74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8013b9a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013b9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013ba2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013ba6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013ba8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013bac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013bb0:	eeb0 6a62 	vmov.f32	s12, s5
 8013bb4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013bb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013bbc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013bc0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013bc4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013bc8:	eeb0 6a43 	vmov.f32	s12, s6
 8013bcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013bd0:	ee12 2a90 	vmov	r2, s5
 8013bd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013bd8:	fb92 fef3 	sdiv	lr, r2, r3
 8013bdc:	ee13 2a10 	vmov	r2, s6
 8013be0:	fb92 fcf3 	sdiv	ip, r2, r3
 8013be4:	9b01      	ldr	r3, [sp, #4]
 8013be6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013bea:	3b01      	subs	r3, #1
 8013bec:	9301      	str	r3, [sp, #4]
 8013bee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013bf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013bf4:	eeb0 3a67 	vmov.f32	s6, s15
 8013bf8:	bf08      	it	eq
 8013bfa:	465b      	moveq	r3, fp
 8013bfc:	eef0 2a47 	vmov.f32	s5, s14
 8013c00:	e797      	b.n	8013b32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8013c02:	454f      	cmp	r7, r9
 8013c04:	dabb      	bge.n	8013b7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013c06:	fb0c 2606 	mla	r6, ip, r6, r2
 8013c0a:	1436      	asrs	r6, r6, #16
 8013c0c:	d4b7      	bmi.n	8013b7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013c0e:	4546      	cmp	r6, r8
 8013c10:	dab5      	bge.n	8013b7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013c12:	461e      	mov	r6, r3
 8013c14:	46a0      	mov	r8, r4
 8013c16:	2e00      	cmp	r6, #0
 8013c18:	ddb8      	ble.n	8013b8c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013c1a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8013c1e:	9902      	ldr	r1, [sp, #8]
 8013c20:	1417      	asrs	r7, r2, #16
 8013c22:	ea4f 4920 	mov.w	r9, r0, asr #16
 8013c26:	fb0a 9707 	mla	r7, sl, r7, r9
 8013c2a:	4470      	add	r0, lr
 8013c2c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8013c30:	f828 7b02 	strh.w	r7, [r8], #2
 8013c34:	4462      	add	r2, ip
 8013c36:	3e01      	subs	r6, #1
 8013c38:	e7ed      	b.n	8013c16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8013c3a:	ea5f 4920 	movs.w	r9, r0, asr #16
 8013c3e:	d414      	bmi.n	8013c6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013c40:	68ae      	ldr	r6, [r5, #8]
 8013c42:	454e      	cmp	r6, r9
 8013c44:	dd11      	ble.n	8013c6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013c46:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8013c4a:	d40e      	bmi.n	8013c6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013c4c:	68ef      	ldr	r7, [r5, #12]
 8013c4e:	4557      	cmp	r7, sl
 8013c50:	dd0b      	ble.n	8013c6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8013c52:	b236      	sxth	r6, r6
 8013c54:	fb0a 9606 	mla	r6, sl, r6, r9
 8013c58:	9f02      	ldr	r7, [sp, #8]
 8013c5a:	f06f 0101 	mvn.w	r1, #1
 8013c5e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8013c62:	fb01 f608 	mul.w	r6, r1, r8
 8013c66:	9903      	ldr	r1, [sp, #12]
 8013c68:	538f      	strh	r7, [r1, r6]
 8013c6a:	4470      	add	r0, lr
 8013c6c:	4462      	add	r2, ip
 8013c6e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013c72:	e788      	b.n	8013b86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013c74:	b005      	add	sp, #20
 8013c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013c7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c7e:	b085      	sub	sp, #20
 8013c80:	468b      	mov	fp, r1
 8013c82:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013c84:	9202      	str	r2, [sp, #8]
 8013c86:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8013c8a:	9203      	str	r2, [sp, #12]
 8013c8c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8013c90:	6841      	ldr	r1, [r0, #4]
 8013c92:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8013c96:	fb01 2404 	mla	r4, r1, r4, r2
 8013c9a:	6802      	ldr	r2, [r0, #0]
 8013c9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013ca0:	f8d8 2000 	ldr.w	r2, [r8]
 8013ca4:	9200      	str	r2, [sp, #0]
 8013ca6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013caa:	f1bb 0f00 	cmp.w	fp, #0
 8013cae:	dc03      	bgt.n	8013cb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013cb0:	9a02      	ldr	r2, [sp, #8]
 8013cb2:	2a00      	cmp	r2, #0
 8013cb4:	f340 8134 	ble.w	8013f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8013cb8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013cba:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013cbe:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013cc2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013cc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013cc8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013ccc:	2b00      	cmp	r3, #0
 8013cce:	dd0e      	ble.n	8013cee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013cd0:	1402      	asrs	r2, r0, #16
 8013cd2:	d405      	bmi.n	8013ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013cd4:	42ba      	cmp	r2, r7
 8013cd6:	da03      	bge.n	8013ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013cd8:	140a      	asrs	r2, r1, #16
 8013cda:	d401      	bmi.n	8013ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013cdc:	42b2      	cmp	r2, r6
 8013cde:	db07      	blt.n	8013cf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013ce0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013ce2:	4410      	add	r0, r2
 8013ce4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013ce6:	3b01      	subs	r3, #1
 8013ce8:	4411      	add	r1, r2
 8013cea:	3402      	adds	r4, #2
 8013cec:	e7ee      	b.n	8013ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013cee:	d019      	beq.n	8013d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013cf0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013cf2:	1e5a      	subs	r2, r3, #1
 8013cf4:	fb05 0502 	mla	r5, r5, r2, r0
 8013cf8:	142d      	asrs	r5, r5, #16
 8013cfa:	d409      	bmi.n	8013d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013cfc:	42bd      	cmp	r5, r7
 8013cfe:	da07      	bge.n	8013d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013d00:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013d02:	fb05 1202 	mla	r2, r5, r2, r1
 8013d06:	1412      	asrs	r2, r2, #16
 8013d08:	d402      	bmi.n	8013d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013d0a:	42b2      	cmp	r2, r6
 8013d0c:	f2c0 80aa 	blt.w	8013e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8013d10:	f04f 0c00 	mov.w	ip, #0
 8013d14:	eb03 020c 	add.w	r2, r3, ip
 8013d18:	2a00      	cmp	r2, #0
 8013d1a:	dc3e      	bgt.n	8013d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8013d1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d20:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013d24:	f1bb 0f00 	cmp.w	fp, #0
 8013d28:	f340 80fa 	ble.w	8013f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8013d2c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d34:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013d3a:	f1bb 0b01 	subs.w	fp, fp, #1
 8013d3e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d46:	eeb0 6a62 	vmov.f32	s12, s5
 8013d4a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d52:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d56:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013d5a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d5e:	eeb0 6a43 	vmov.f32	s12, s6
 8013d62:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d66:	ee12 2a90 	vmov	r2, s5
 8013d6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d72:	ee13 2a10 	vmov	r2, s6
 8013d76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d7a:	9311      	str	r3, [sp, #68]	; 0x44
 8013d7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013d7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013d82:	9a02      	ldr	r2, [sp, #8]
 8013d84:	9312      	str	r3, [sp, #72]	; 0x48
 8013d86:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8013d8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013d8c:	eeb0 3a67 	vmov.f32	s6, s15
 8013d90:	bf08      	it	eq
 8013d92:	4613      	moveq	r3, r2
 8013d94:	eef0 2a47 	vmov.f32	s5, s14
 8013d98:	e787      	b.n	8013caa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013d9a:	1406      	asrs	r6, r0, #16
 8013d9c:	d45b      	bmi.n	8013e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8013d9e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013da2:	42b5      	cmp	r5, r6
 8013da4:	dd57      	ble.n	8013e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8013da6:	140f      	asrs	r7, r1, #16
 8013da8:	d455      	bmi.n	8013e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8013daa:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8013dae:	42ba      	cmp	r2, r7
 8013db0:	dd51      	ble.n	8013e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8013db2:	b22d      	sxth	r5, r5
 8013db4:	fb07 6505 	mla	r5, r7, r5, r6
 8013db8:	9a00      	ldr	r2, [sp, #0]
 8013dba:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 8013dbe:	0e2e      	lsrs	r6, r5, #24
 8013dc0:	d049      	beq.n	8013e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8013dc2:	f06f 0201 	mvn.w	r2, #1
 8013dc6:	fb02 f20c 	mul.w	r2, r2, ip
 8013dca:	9201      	str	r2, [sp, #4]
 8013dcc:	f834 e002 	ldrh.w	lr, [r4, r2]
 8013dd0:	9a03      	ldr	r2, [sp, #12]
 8013dd2:	4356      	muls	r6, r2
 8013dd4:	1c72      	adds	r2, r6, #1
 8013dd6:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013dda:	1212      	asrs	r2, r2, #8
 8013ddc:	fa1f f982 	uxth.w	r9, r2
 8013de0:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013de4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013de8:	43d2      	mvns	r2, r2
 8013dea:	b2d2      	uxtb	r2, r2
 8013dec:	fb16 f609 	smulbb	r6, r6, r9
 8013df0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013df4:	fb07 6702 	mla	r7, r7, r2, r6
 8013df8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013dfc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013e00:	b2ed      	uxtb	r5, r5
 8013e02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013e06:	fa5f fe8e 	uxtb.w	lr, lr
 8013e0a:	fb15 f509 	smulbb	r5, r5, r9
 8013e0e:	fb0e 5502 	mla	r5, lr, r2, r5
 8013e12:	b2bf      	uxth	r7, r7
 8013e14:	fb1a fa09 	smulbb	sl, sl, r9
 8013e18:	b2ad      	uxth	r5, r5
 8013e1a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013e1e:	fb06 a602 	mla	r6, r6, r2, sl
 8013e22:	1c7a      	adds	r2, r7, #1
 8013e24:	f105 0a01 	add.w	sl, r5, #1
 8013e28:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013e2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e30:	b2b6      	uxth	r6, r6
 8013e32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e36:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013e3a:	ea47 070a 	orr.w	r7, r7, sl
 8013e3e:	f106 0a01 	add.w	sl, r6, #1
 8013e42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013e46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013e4e:	9a01      	ldr	r2, [sp, #4]
 8013e50:	ea47 070a 	orr.w	r7, r7, sl
 8013e54:	52a7      	strh	r7, [r4, r2]
 8013e56:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013e58:	4410      	add	r0, r2
 8013e5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013e5c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013e60:	4411      	add	r1, r2
 8013e62:	e757      	b.n	8013d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013e64:	f04f 0e00 	mov.w	lr, #0
 8013e68:	eba3 020e 	sub.w	r2, r3, lr
 8013e6c:	2a00      	cmp	r2, #0
 8013e6e:	f77f af55 	ble.w	8013d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013e72:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8013e76:	1405      	asrs	r5, r0, #16
 8013e78:	140a      	asrs	r2, r1, #16
 8013e7a:	fb06 5202 	mla	r2, r6, r2, r5
 8013e7e:	9d00      	ldr	r5, [sp, #0]
 8013e80:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013e84:	0e2e      	lsrs	r6, r5, #24
 8013e86:	d044      	beq.n	8013f12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8013e88:	9a03      	ldr	r2, [sp, #12]
 8013e8a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013e8e:	4356      	muls	r6, r2
 8013e90:	1c72      	adds	r2, r6, #1
 8013e92:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013e96:	1212      	asrs	r2, r2, #8
 8013e98:	fa1f f982 	uxth.w	r9, r2
 8013e9c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013ea0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8013ea4:	43d2      	mvns	r2, r2
 8013ea6:	b2d2      	uxtb	r2, r2
 8013ea8:	fb16 f609 	smulbb	r6, r6, r9
 8013eac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013eb0:	fb07 6702 	mla	r7, r7, r2, r6
 8013eb4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013eb8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013ebc:	b2ed      	uxtb	r5, r5
 8013ebe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013ec2:	fa5f fc8c 	uxtb.w	ip, ip
 8013ec6:	fb15 f509 	smulbb	r5, r5, r9
 8013eca:	fb0c 5502 	mla	r5, ip, r2, r5
 8013ece:	b2bf      	uxth	r7, r7
 8013ed0:	fb1a fa09 	smulbb	sl, sl, r9
 8013ed4:	b2ad      	uxth	r5, r5
 8013ed6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013eda:	fb06 a602 	mla	r6, r6, r2, sl
 8013ede:	1c7a      	adds	r2, r7, #1
 8013ee0:	f105 0a01 	add.w	sl, r5, #1
 8013ee4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013ee8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013eec:	b2b6      	uxth	r6, r6
 8013eee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013ef2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013ef6:	ea47 070a 	orr.w	r7, r7, sl
 8013efa:	f106 0a01 	add.w	sl, r6, #1
 8013efe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013f0a:	ea47 070a 	orr.w	r7, r7, sl
 8013f0e:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8013f12:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013f14:	4410      	add	r0, r2
 8013f16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013f18:	f10e 0e01 	add.w	lr, lr, #1
 8013f1c:	4411      	add	r1, r2
 8013f1e:	e7a3      	b.n	8013e68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8013f20:	b005      	add	sp, #20
 8013f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f2c:	b085      	sub	sp, #20
 8013f2e:	468b      	mov	fp, r1
 8013f30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013f32:	9203      	str	r2, [sp, #12]
 8013f34:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8013f38:	6861      	ldr	r1, [r4, #4]
 8013f3a:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8013f3e:	fb01 2000 	mla	r0, r1, r0, r2
 8013f42:	6822      	ldr	r2, [r4, #0]
 8013f44:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013f48:	f8d9 2000 	ldr.w	r2, [r9]
 8013f4c:	9200      	str	r2, [sp, #0]
 8013f4e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013f52:	f1bb 0f00 	cmp.w	fp, #0
 8013f56:	dc03      	bgt.n	8013f60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013f58:	9a03      	ldr	r2, [sp, #12]
 8013f5a:	2a00      	cmp	r2, #0
 8013f5c:	f340 8154 	ble.w	8014208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8013f60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013f62:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013f66:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013f6a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013f6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8013f74:	2b00      	cmp	r3, #0
 8013f76:	dd0e      	ble.n	8013f96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013f78:	140c      	asrs	r4, r1, #16
 8013f7a:	d405      	bmi.n	8013f88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013f7c:	42bc      	cmp	r4, r7
 8013f7e:	da03      	bge.n	8013f88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013f80:	1414      	asrs	r4, r2, #16
 8013f82:	d401      	bmi.n	8013f88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013f84:	42b4      	cmp	r4, r6
 8013f86:	db07      	blt.n	8013f98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013f88:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8013f8a:	4421      	add	r1, r4
 8013f8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013f8e:	3b01      	subs	r3, #1
 8013f90:	4422      	add	r2, r4
 8013f92:	3002      	adds	r0, #2
 8013f94:	e7ee      	b.n	8013f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8013f96:	d017      	beq.n	8013fc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013f98:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8013f9a:	1e5c      	subs	r4, r3, #1
 8013f9c:	fb05 1504 	mla	r5, r5, r4, r1
 8013fa0:	142d      	asrs	r5, r5, #16
 8013fa2:	d409      	bmi.n	8013fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013fa4:	42bd      	cmp	r5, r7
 8013fa6:	da07      	bge.n	8013fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013fa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8013faa:	fb05 2404 	mla	r4, r5, r4, r2
 8013fae:	1424      	asrs	r4, r4, #16
 8013fb0:	d402      	bmi.n	8013fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8013fb2:	42b4      	cmp	r4, r6
 8013fb4:	f2c0 80c0 	blt.w	8014138 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013fb8:	2700      	movs	r7, #0
 8013fba:	19dc      	adds	r4, r3, r7
 8013fbc:	2c00      	cmp	r4, #0
 8013fbe:	dc3e      	bgt.n	801403e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8013fc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013fc4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013fc8:	f1bb 0f00 	cmp.w	fp, #0
 8013fcc:	f340 811c 	ble.w	8014208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8013fd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013fd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013fd8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013fdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fde:	f1bb 0b01 	subs.w	fp, fp, #1
 8013fe2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013fe6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013fea:	eeb0 6a62 	vmov.f32	s12, s5
 8013fee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013ff2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ff6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ffa:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8013ffe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014002:	eeb0 6a43 	vmov.f32	s12, s6
 8014006:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801400a:	ee12 2a90 	vmov	r2, s5
 801400e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014012:	fb92 f3f3 	sdiv	r3, r2, r3
 8014016:	ee13 2a10 	vmov	r2, s6
 801401a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801401e:	9311      	str	r3, [sp, #68]	; 0x44
 8014020:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014022:	fb92 f3f3 	sdiv	r3, r2, r3
 8014026:	9a03      	ldr	r2, [sp, #12]
 8014028:	9312      	str	r3, [sp, #72]	; 0x48
 801402a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801402e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014030:	eeb0 3a67 	vmov.f32	s6, s15
 8014034:	bf08      	it	eq
 8014036:	4613      	moveq	r3, r2
 8014038:	eef0 2a47 	vmov.f32	s5, s14
 801403c:	e789      	b.n	8013f52 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801403e:	140e      	asrs	r6, r1, #16
 8014040:	d461      	bmi.n	8014106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8014042:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8014046:	42b5      	cmp	r5, r6
 8014048:	dd5d      	ble.n	8014106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801404a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801404e:	d45a      	bmi.n	8014106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8014050:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8014054:	4564      	cmp	r4, ip
 8014056:	dd56      	ble.n	8014106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8014058:	b22d      	sxth	r5, r5
 801405a:	fb0c 6505 	mla	r5, ip, r5, r6
 801405e:	9c00      	ldr	r4, [sp, #0]
 8014060:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 8014064:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8014068:	d04d      	beq.n	8014106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801406a:	0a26      	lsrs	r6, r4, #8
 801406c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014070:	fa5f f58e 	uxtb.w	r5, lr
 8014074:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8014078:	9601      	str	r6, [sp, #4]
 801407a:	d04a      	beq.n	8014112 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801407c:	f06f 0601 	mvn.w	r6, #1
 8014080:	437e      	muls	r6, r7
 8014082:	fa1f fa85 	uxth.w	sl, r5
 8014086:	f830 8006 	ldrh.w	r8, [r0, r6]
 801408a:	9602      	str	r6, [sp, #8]
 801408c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014090:	43ed      	mvns	r5, r5
 8014092:	fa5f fc8c 	uxtb.w	ip, ip
 8014096:	b2ed      	uxtb	r5, r5
 8014098:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801409c:	fb1c fc0a 	smulbb	ip, ip, sl
 80140a0:	fb0e cc05 	mla	ip, lr, r5, ip
 80140a4:	b2e4      	uxtb	r4, r4
 80140a6:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80140aa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80140ae:	f89d 6004 	ldrb.w	r6, [sp, #4]
 80140b2:	fa5f f888 	uxtb.w	r8, r8
 80140b6:	fb14 f40a 	smulbb	r4, r4, sl
 80140ba:	fb08 4405 	mla	r4, r8, r5, r4
 80140be:	b2a4      	uxth	r4, r4
 80140c0:	fa1f fc8c 	uxth.w	ip, ip
 80140c4:	fb16 f60a 	smulbb	r6, r6, sl
 80140c8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80140cc:	fb0e 6e05 	mla	lr, lr, r5, r6
 80140d0:	1c66      	adds	r6, r4, #1
 80140d2:	f10c 0501 	add.w	r5, ip, #1
 80140d6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80140da:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80140de:	fa1f fe8e 	uxth.w	lr, lr
 80140e2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80140e6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80140ea:	ea4c 0c06 	orr.w	ip, ip, r6
 80140ee:	f10e 0601 	add.w	r6, lr, #1
 80140f2:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 80140f6:	0976      	lsrs	r6, r6, #5
 80140f8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80140fc:	9c02      	ldr	r4, [sp, #8]
 80140fe:	ea4c 0c06 	orr.w	ip, ip, r6
 8014102:	f820 c004 	strh.w	ip, [r0, r4]
 8014106:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014108:	4421      	add	r1, r4
 801410a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801410c:	3f01      	subs	r7, #1
 801410e:	4422      	add	r2, r4
 8014110:	e753      	b.n	8013fba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014112:	4e3f      	ldr	r6, [pc, #252]	; (8014210 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8014114:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8014118:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 801411c:	ea4c 0c04 	orr.w	ip, ip, r4
 8014120:	9c01      	ldr	r4, [sp, #4]
 8014122:	f06f 0501 	mvn.w	r5, #1
 8014126:	00e6      	lsls	r6, r4, #3
 8014128:	437d      	muls	r5, r7
 801412a:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 801412e:	ea4c 0c04 	orr.w	ip, ip, r4
 8014132:	f820 c005 	strh.w	ip, [r0, r5]
 8014136:	e7e6      	b.n	8014106 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8014138:	f04f 0800 	mov.w	r8, #0
 801413c:	eba3 0408 	sub.w	r4, r3, r8
 8014140:	2c00      	cmp	r4, #0
 8014142:	f77f af3d 	ble.w	8013fc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014146:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801414a:	140d      	asrs	r5, r1, #16
 801414c:	1414      	asrs	r4, r2, #16
 801414e:	fb06 5404 	mla	r4, r6, r4, r5
 8014152:	9d00      	ldr	r5, [sp, #0]
 8014154:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8014158:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 801415c:	d042      	beq.n	80141e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801415e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014162:	fa5f f58c 	uxtb.w	r5, ip
 8014166:	ea4f 4714 	mov.w	r7, r4, lsr #16
 801416a:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801416e:	d040      	beq.n	80141f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8014170:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8014174:	fa1f fa85 	uxth.w	sl, r5
 8014178:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801417c:	43ed      	mvns	r5, r5
 801417e:	b2ff      	uxtb	r7, r7
 8014180:	b2ed      	uxtb	r5, r5
 8014182:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014186:	fb17 f70a 	smulbb	r7, r7, sl
 801418a:	fb0c 7705 	mla	r7, ip, r5, r7
 801418e:	b2e4      	uxtb	r4, r4
 8014190:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8014194:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014198:	fa5f fe8e 	uxtb.w	lr, lr
 801419c:	fb14 f40a 	smulbb	r4, r4, sl
 80141a0:	fb0e 4405 	mla	r4, lr, r5, r4
 80141a4:	b2f6      	uxtb	r6, r6
 80141a6:	b2bf      	uxth	r7, r7
 80141a8:	fb16 f60a 	smulbb	r6, r6, sl
 80141ac:	b2a4      	uxth	r4, r4
 80141ae:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80141b2:	fb0c 6c05 	mla	ip, ip, r5, r6
 80141b6:	1c7d      	adds	r5, r7, #1
 80141b8:	1c66      	adds	r6, r4, #1
 80141ba:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80141be:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80141c2:	fa1f fc8c 	uxth.w	ip, ip
 80141c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80141ca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80141ce:	4337      	orrs	r7, r6
 80141d0:	f10c 0601 	add.w	r6, ip, #1
 80141d4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80141d8:	0976      	lsrs	r6, r6, #5
 80141da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80141de:	4337      	orrs	r7, r6
 80141e0:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 80141e4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80141e6:	4421      	add	r1, r4
 80141e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80141ea:	f108 0801 	add.w	r8, r8, #1
 80141ee:	4422      	add	r2, r4
 80141f0:	e7a4      	b.n	801413c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80141f2:	4d07      	ldr	r5, [pc, #28]	; (8014210 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 80141f4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80141f8:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 80141fc:	00f6      	lsls	r6, r6, #3
 80141fe:	4327      	orrs	r7, r4
 8014200:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8014204:	4327      	orrs	r7, r4
 8014206:	e7eb      	b.n	80141e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8014208:	b005      	add	sp, #20
 801420a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801420e:	bf00      	nop
 8014210:	fffff800 	.word	0xfffff800

08014214 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014218:	b087      	sub	sp, #28
 801421a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801421e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014220:	9204      	str	r2, [sp, #16]
 8014222:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014226:	9205      	str	r2, [sp, #20]
 8014228:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801422c:	9101      	str	r1, [sp, #4]
 801422e:	6841      	ldr	r1, [r0, #4]
 8014230:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8014234:	fb01 2404 	mla	r4, r1, r4, r2
 8014238:	6802      	ldr	r2, [r0, #0]
 801423a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801423e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8014242:	3201      	adds	r2, #1
 8014244:	f022 0201 	bic.w	r2, r2, #1
 8014248:	9202      	str	r2, [sp, #8]
 801424a:	f8d8 2000 	ldr.w	r2, [r8]
 801424e:	9203      	str	r2, [sp, #12]
 8014250:	9a01      	ldr	r2, [sp, #4]
 8014252:	2a00      	cmp	r2, #0
 8014254:	dc03      	bgt.n	801425e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014256:	9a04      	ldr	r2, [sp, #16]
 8014258:	2a00      	cmp	r2, #0
 801425a:	f340 814d 	ble.w	80144f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801425e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014260:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8014264:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014268:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801426c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801426e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014272:	2b00      	cmp	r3, #0
 8014274:	dd0e      	ble.n	8014294 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014276:	1402      	asrs	r2, r0, #16
 8014278:	d405      	bmi.n	8014286 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801427a:	42ba      	cmp	r2, r7
 801427c:	da03      	bge.n	8014286 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801427e:	140a      	asrs	r2, r1, #16
 8014280:	d401      	bmi.n	8014286 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014282:	42b2      	cmp	r2, r6
 8014284:	db07      	blt.n	8014296 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8014286:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014288:	4410      	add	r0, r2
 801428a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801428c:	3b01      	subs	r3, #1
 801428e:	4411      	add	r1, r2
 8014290:	3402      	adds	r4, #2
 8014292:	e7ee      	b.n	8014272 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014294:	d019      	beq.n	80142ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8014296:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014298:	1e5a      	subs	r2, r3, #1
 801429a:	fb05 0502 	mla	r5, r5, r2, r0
 801429e:	142d      	asrs	r5, r5, #16
 80142a0:	d409      	bmi.n	80142b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80142a2:	42bd      	cmp	r5, r7
 80142a4:	da07      	bge.n	80142b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80142a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80142a8:	fb05 1202 	mla	r2, r5, r2, r1
 80142ac:	1412      	asrs	r2, r2, #16
 80142ae:	d402      	bmi.n	80142b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80142b0:	42b2      	cmp	r2, r6
 80142b2:	f2c0 80b7 	blt.w	8014424 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80142b6:	f04f 0c00 	mov.w	ip, #0
 80142ba:	eb03 020c 	add.w	r2, r3, ip
 80142be:	2a00      	cmp	r2, #0
 80142c0:	dc3f      	bgt.n	8014342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 80142c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80142ca:	9b01      	ldr	r3, [sp, #4]
 80142cc:	2b00      	cmp	r3, #0
 80142ce:	f340 8113 	ble.w	80144f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80142d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80142de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80142e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80142e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80142e8:	eeb0 6a62 	vmov.f32	s12, s5
 80142ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80142f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80142f8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80142fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014300:	eeb0 6a43 	vmov.f32	s12, s6
 8014304:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014308:	ee12 2a90 	vmov	r2, s5
 801430c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014310:	fb92 f3f3 	sdiv	r3, r2, r3
 8014314:	ee13 2a10 	vmov	r2, s6
 8014318:	9313      	str	r3, [sp, #76]	; 0x4c
 801431a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801431c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014320:	9314      	str	r3, [sp, #80]	; 0x50
 8014322:	9b01      	ldr	r3, [sp, #4]
 8014324:	9a04      	ldr	r2, [sp, #16]
 8014326:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801432a:	3b01      	subs	r3, #1
 801432c:	9301      	str	r3, [sp, #4]
 801432e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014332:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014334:	eeb0 3a67 	vmov.f32	s6, s15
 8014338:	bf08      	it	eq
 801433a:	4613      	moveq	r3, r2
 801433c:	eef0 2a47 	vmov.f32	s5, s14
 8014340:	e786      	b.n	8014250 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014342:	1405      	asrs	r5, r0, #16
 8014344:	d467      	bmi.n	8014416 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014346:	f8d8 2008 	ldr.w	r2, [r8, #8]
 801434a:	42aa      	cmp	r2, r5
 801434c:	dd63      	ble.n	8014416 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801434e:	140e      	asrs	r6, r1, #16
 8014350:	d461      	bmi.n	8014416 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8014352:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8014356:	42b2      	cmp	r2, r6
 8014358:	dd5d      	ble.n	8014416 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801435a:	9a02      	ldr	r2, [sp, #8]
 801435c:	fb06 5502 	mla	r5, r6, r2, r5
 8014360:	086a      	lsrs	r2, r5, #1
 8014362:	9e03      	ldr	r6, [sp, #12]
 8014364:	5cb2      	ldrb	r2, [r6, r2]
 8014366:	07ee      	lsls	r6, r5, #31
 8014368:	bf54      	ite	pl
 801436a:	f002 020f 	andpl.w	r2, r2, #15
 801436e:	1112      	asrmi	r2, r2, #4
 8014370:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014374:	b2d2      	uxtb	r2, r2
 8014376:	2a00      	cmp	r2, #0
 8014378:	d04d      	beq.n	8014416 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801437a:	f06f 0601 	mvn.w	r6, #1
 801437e:	fb06 fb0c 	mul.w	fp, r6, ip
 8014382:	9e05      	ldr	r6, [sp, #20]
 8014384:	4d5e      	ldr	r5, [pc, #376]	; (8014500 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014386:	f834 e00b 	ldrh.w	lr, [r4, fp]
 801438a:	682d      	ldr	r5, [r5, #0]
 801438c:	4372      	muls	r2, r6
 801438e:	1c56      	adds	r6, r2, #1
 8014390:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014394:	1212      	asrs	r2, r2, #8
 8014396:	0a2f      	lsrs	r7, r5, #8
 8014398:	fa1f fa82 	uxth.w	sl, r2
 801439c:	ea4f 262e 	mov.w	r6, lr, asr #8
 80143a0:	43d2      	mvns	r2, r2
 80143a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80143a6:	b2d2      	uxtb	r2, r2
 80143a8:	fb17 f70a 	smulbb	r7, r7, sl
 80143ac:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 80143b0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80143b4:	fb06 7602 	mla	r6, r6, r2, r7
 80143b8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80143bc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80143c0:	fb19 f90a 	smulbb	r9, r9, sl
 80143c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80143c8:	00ed      	lsls	r5, r5, #3
 80143ca:	fb07 9702 	mla	r7, r7, r2, r9
 80143ce:	b2ed      	uxtb	r5, r5
 80143d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80143d4:	b2bf      	uxth	r7, r7
 80143d6:	fa5f fe8e 	uxtb.w	lr, lr
 80143da:	fb15 f50a 	smulbb	r5, r5, sl
 80143de:	b2b6      	uxth	r6, r6
 80143e0:	fb0e 5502 	mla	r5, lr, r2, r5
 80143e4:	f107 0901 	add.w	r9, r7, #1
 80143e8:	b2ad      	uxth	r5, r5
 80143ea:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80143ee:	f106 0901 	add.w	r9, r6, #1
 80143f2:	097f      	lsrs	r7, r7, #5
 80143f4:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80143f8:	f105 0e01 	add.w	lr, r5, #1
 80143fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014400:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014404:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8014408:	4337      	orrs	r7, r6
 801440a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801440e:	ea47 070e 	orr.w	r7, r7, lr
 8014412:	f824 700b 	strh.w	r7, [r4, fp]
 8014416:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014418:	4410      	add	r0, r2
 801441a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801441c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014420:	4411      	add	r1, r2
 8014422:	e74a      	b.n	80142ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014424:	f04f 0e00 	mov.w	lr, #0
 8014428:	eba3 020e 	sub.w	r2, r3, lr
 801442c:	2a00      	cmp	r2, #0
 801442e:	f77f af48 	ble.w	80142c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014432:	9e02      	ldr	r6, [sp, #8]
 8014434:	1402      	asrs	r2, r0, #16
 8014436:	140d      	asrs	r5, r1, #16
 8014438:	fb06 2505 	mla	r5, r6, r5, r2
 801443c:	086a      	lsrs	r2, r5, #1
 801443e:	9e03      	ldr	r6, [sp, #12]
 8014440:	5cb2      	ldrb	r2, [r6, r2]
 8014442:	07ed      	lsls	r5, r5, #31
 8014444:	bf54      	ite	pl
 8014446:	f002 020f 	andpl.w	r2, r2, #15
 801444a:	1112      	asrmi	r2, r2, #4
 801444c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014450:	b2d2      	uxtb	r2, r2
 8014452:	2a00      	cmp	r2, #0
 8014454:	d049      	beq.n	80144ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014456:	9e05      	ldr	r6, [sp, #20]
 8014458:	4d29      	ldr	r5, [pc, #164]	; (8014500 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801445a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801445e:	682d      	ldr	r5, [r5, #0]
 8014460:	4372      	muls	r2, r6
 8014462:	1c56      	adds	r6, r2, #1
 8014464:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8014468:	1212      	asrs	r2, r2, #8
 801446a:	0a2f      	lsrs	r7, r5, #8
 801446c:	fa1f fa82 	uxth.w	sl, r2
 8014470:	ea4f 262c 	mov.w	r6, ip, asr #8
 8014474:	43d2      	mvns	r2, r2
 8014476:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801447a:	b2d2      	uxtb	r2, r2
 801447c:	fb17 f70a 	smulbb	r7, r7, sl
 8014480:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8014484:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014488:	fb06 7602 	mla	r6, r6, r2, r7
 801448c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014490:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8014494:	fb19 f90a 	smulbb	r9, r9, sl
 8014498:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801449c:	00ed      	lsls	r5, r5, #3
 801449e:	fb07 9702 	mla	r7, r7, r2, r9
 80144a2:	b2ed      	uxtb	r5, r5
 80144a4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80144a8:	b2bf      	uxth	r7, r7
 80144aa:	fa5f fc8c 	uxtb.w	ip, ip
 80144ae:	fb15 f50a 	smulbb	r5, r5, sl
 80144b2:	b2b6      	uxth	r6, r6
 80144b4:	fb0c 5502 	mla	r5, ip, r2, r5
 80144b8:	f107 0901 	add.w	r9, r7, #1
 80144bc:	b2ad      	uxth	r5, r5
 80144be:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80144c2:	f106 0b01 	add.w	fp, r6, #1
 80144c6:	097f      	lsrs	r7, r7, #5
 80144c8:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80144cc:	f105 0c01 	add.w	ip, r5, #1
 80144d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80144d4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80144d8:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80144dc:	4337      	orrs	r7, r6
 80144de:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80144e2:	ea47 070c 	orr.w	r7, r7, ip
 80144e6:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80144ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80144ec:	4410      	add	r0, r2
 80144ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80144f0:	f10e 0e01 	add.w	lr, lr, #1
 80144f4:	4411      	add	r1, r2
 80144f6:	e797      	b.n	8014428 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80144f8:	b007      	add	sp, #28
 80144fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144fe:	bf00      	nop
 8014500:	2000d434 	.word	0x2000d434

08014504 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014508:	b087      	sub	sp, #28
 801450a:	468b      	mov	fp, r1
 801450c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801450e:	9205      	str	r2, [sp, #20]
 8014510:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014514:	6841      	ldr	r1, [r0, #4]
 8014516:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801451a:	fb01 2404 	mla	r4, r1, r4, r2
 801451e:	6802      	ldr	r2, [r0, #0]
 8014520:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014524:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8014528:	3201      	adds	r2, #1
 801452a:	f022 0201 	bic.w	r2, r2, #1
 801452e:	9201      	str	r2, [sp, #4]
 8014530:	f8d8 2000 	ldr.w	r2, [r8]
 8014534:	9202      	str	r2, [sp, #8]
 8014536:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801453a:	f1bb 0f00 	cmp.w	fp, #0
 801453e:	dc03      	bgt.n	8014548 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014540:	9a05      	ldr	r2, [sp, #20]
 8014542:	2a00      	cmp	r2, #0
 8014544:	f340 8156 	ble.w	80147f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014548:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801454a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801454e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8014552:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014556:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014558:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801455c:	2b00      	cmp	r3, #0
 801455e:	dd0e      	ble.n	801457e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014560:	1402      	asrs	r2, r0, #16
 8014562:	d405      	bmi.n	8014570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014564:	42ba      	cmp	r2, r7
 8014566:	da03      	bge.n	8014570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014568:	140a      	asrs	r2, r1, #16
 801456a:	d401      	bmi.n	8014570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801456c:	42b2      	cmp	r2, r6
 801456e:	db07      	blt.n	8014580 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014570:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014572:	4410      	add	r0, r2
 8014574:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014576:	3b01      	subs	r3, #1
 8014578:	4411      	add	r1, r2
 801457a:	3402      	adds	r4, #2
 801457c:	e7ee      	b.n	801455c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801457e:	d017      	beq.n	80145b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8014580:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014582:	1e5a      	subs	r2, r3, #1
 8014584:	fb05 0502 	mla	r5, r5, r2, r0
 8014588:	142d      	asrs	r5, r5, #16
 801458a:	d409      	bmi.n	80145a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801458c:	42bd      	cmp	r5, r7
 801458e:	da07      	bge.n	80145a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8014590:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014592:	fb05 1202 	mla	r2, r5, r2, r1
 8014596:	1412      	asrs	r2, r2, #16
 8014598:	d402      	bmi.n	80145a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801459a:	42b2      	cmp	r2, r6
 801459c:	f2c0 80be 	blt.w	801471c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80145a0:	2600      	movs	r6, #0
 80145a2:	199a      	adds	r2, r3, r6
 80145a4:	2a00      	cmp	r2, #0
 80145a6:	dc3e      	bgt.n	8014626 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 80145a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80145ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80145b0:	f1bb 0f00 	cmp.w	fp, #0
 80145b4:	f340 811e 	ble.w	80147f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80145b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80145bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80145c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80145c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80145c6:	f1bb 0b01 	subs.w	fp, fp, #1
 80145ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80145ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80145d2:	eeb0 6a62 	vmov.f32	s12, s5
 80145d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80145da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80145de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80145e2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80145e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80145ea:	eeb0 6a43 	vmov.f32	s12, s6
 80145ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80145f2:	ee12 2a90 	vmov	r2, s5
 80145f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80145fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80145fe:	ee13 2a10 	vmov	r2, s6
 8014602:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014606:	9313      	str	r3, [sp, #76]	; 0x4c
 8014608:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801460a:	fb92 f3f3 	sdiv	r3, r2, r3
 801460e:	9a05      	ldr	r2, [sp, #20]
 8014610:	9314      	str	r3, [sp, #80]	; 0x50
 8014612:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8014616:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014618:	eeb0 3a67 	vmov.f32	s6, s15
 801461c:	bf08      	it	eq
 801461e:	4613      	moveq	r3, r2
 8014620:	eef0 2a47 	vmov.f32	s5, s14
 8014624:	e789      	b.n	801453a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8014626:	1405      	asrs	r5, r0, #16
 8014628:	d465      	bmi.n	80146f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801462a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 801462e:	42aa      	cmp	r2, r5
 8014630:	dd61      	ble.n	80146f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8014632:	140f      	asrs	r7, r1, #16
 8014634:	d45f      	bmi.n	80146f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 8014636:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801463a:	42ba      	cmp	r2, r7
 801463c:	dd5b      	ble.n	80146f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801463e:	9a01      	ldr	r2, [sp, #4]
 8014640:	fb07 5502 	mla	r5, r7, r2, r5
 8014644:	086a      	lsrs	r2, r5, #1
 8014646:	9f02      	ldr	r7, [sp, #8]
 8014648:	5cba      	ldrb	r2, [r7, r2]
 801464a:	07ef      	lsls	r7, r5, #31
 801464c:	bf54      	ite	pl
 801464e:	f002 020f 	andpl.w	r2, r2, #15
 8014652:	1112      	asrmi	r2, r2, #4
 8014654:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014658:	b2d2      	uxtb	r2, r2
 801465a:	2a00      	cmp	r2, #0
 801465c:	d04b      	beq.n	80146f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801465e:	4d67      	ldr	r5, [pc, #412]	; (80147fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8014660:	682f      	ldr	r7, [r5, #0]
 8014662:	08fd      	lsrs	r5, r7, #3
 8014664:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8014668:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801466c:	00ff      	lsls	r7, r7, #3
 801466e:	2aff      	cmp	r2, #255	; 0xff
 8014670:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014674:	9503      	str	r5, [sp, #12]
 8014676:	b2ff      	uxtb	r7, r7
 8014678:	d043      	beq.n	8014702 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801467a:	f06f 0501 	mvn.w	r5, #1
 801467e:	4375      	muls	r5, r6
 8014680:	fa1f fa82 	uxth.w	sl, r2
 8014684:	f834 e005 	ldrh.w	lr, [r4, r5]
 8014688:	9504      	str	r5, [sp, #16]
 801468a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801468e:	43d2      	mvns	r2, r2
 8014690:	b2d2      	uxtb	r2, r2
 8014692:	fb19 f90a 	smulbb	r9, r9, sl
 8014696:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801469a:	9d03      	ldr	r5, [sp, #12]
 801469c:	fb0c 9c02 	mla	ip, ip, r2, r9
 80146a0:	ea4f 09ee 	mov.w	r9, lr, asr #3
 80146a4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80146a8:	fb15 f50a 	smulbb	r5, r5, sl
 80146ac:	fb09 5502 	mla	r5, r9, r2, r5
 80146b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80146b4:	b2ad      	uxth	r5, r5
 80146b6:	fa5f fe8e 	uxtb.w	lr, lr
 80146ba:	fb17 f70a 	smulbb	r7, r7, sl
 80146be:	fa1f fc8c 	uxth.w	ip, ip
 80146c2:	fb0e 7702 	mla	r7, lr, r2, r7
 80146c6:	f105 0901 	add.w	r9, r5, #1
 80146ca:	b2bf      	uxth	r7, r7
 80146cc:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80146d0:	f10c 0901 	add.w	r9, ip, #1
 80146d4:	1c7a      	adds	r2, r7, #1
 80146d6:	096d      	lsrs	r5, r5, #5
 80146d8:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80146dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80146e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80146e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80146e8:	ea45 050c 	orr.w	r5, r5, ip
 80146ec:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80146f0:	9a04      	ldr	r2, [sp, #16]
 80146f2:	433d      	orrs	r5, r7
 80146f4:	52a5      	strh	r5, [r4, r2]
 80146f6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80146f8:	4410      	add	r0, r2
 80146fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80146fc:	3e01      	subs	r6, #1
 80146fe:	4411      	add	r1, r2
 8014700:	e74f      	b.n	80145a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014702:	f06f 0201 	mvn.w	r2, #1
 8014706:	fb02 fe06 	mul.w	lr, r2, r6
 801470a:	9a03      	ldr	r2, [sp, #12]
 801470c:	00d5      	lsls	r5, r2, #3
 801470e:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8014712:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8014716:	f824 500e 	strh.w	r5, [r4, lr]
 801471a:	e7ec      	b.n	80146f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 801471c:	f04f 0e00 	mov.w	lr, #0
 8014720:	eba3 020e 	sub.w	r2, r3, lr
 8014724:	2a00      	cmp	r2, #0
 8014726:	f77f af3f 	ble.w	80145a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801472a:	9e01      	ldr	r6, [sp, #4]
 801472c:	1402      	asrs	r2, r0, #16
 801472e:	140d      	asrs	r5, r1, #16
 8014730:	fb06 2505 	mla	r5, r6, r5, r2
 8014734:	086a      	lsrs	r2, r5, #1
 8014736:	9e02      	ldr	r6, [sp, #8]
 8014738:	5cb2      	ldrb	r2, [r6, r2]
 801473a:	07ed      	lsls	r5, r5, #31
 801473c:	bf54      	ite	pl
 801473e:	f002 020f 	andpl.w	r2, r2, #15
 8014742:	1112      	asrmi	r2, r2, #4
 8014744:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014748:	b2d2      	uxtb	r2, r2
 801474a:	2a00      	cmp	r2, #0
 801474c:	d045      	beq.n	80147da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801474e:	4d2b      	ldr	r5, [pc, #172]	; (80147fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 8014750:	682e      	ldr	r6, [r5, #0]
 8014752:	2aff      	cmp	r2, #255	; 0xff
 8014754:	ea4f 2916 	mov.w	r9, r6, lsr #8
 8014758:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 801475c:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8014760:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014764:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014768:	b2f6      	uxtb	r6, r6
 801476a:	d03d      	beq.n	80147e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801476c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014770:	fa1f fa82 	uxth.w	sl, r2
 8014774:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014778:	43d2      	mvns	r2, r2
 801477a:	b2d2      	uxtb	r2, r2
 801477c:	fb19 f90a 	smulbb	r9, r9, sl
 8014780:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014784:	fb07 9702 	mla	r7, r7, r2, r9
 8014788:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801478c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014790:	fb15 f50a 	smulbb	r5, r5, sl
 8014794:	fb09 5502 	mla	r5, r9, r2, r5
 8014798:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801479c:	b2ad      	uxth	r5, r5
 801479e:	fa5f fc8c 	uxtb.w	ip, ip
 80147a2:	fb16 f60a 	smulbb	r6, r6, sl
 80147a6:	b2bf      	uxth	r7, r7
 80147a8:	fb0c 6602 	mla	r6, ip, r2, r6
 80147ac:	f105 0901 	add.w	r9, r5, #1
 80147b0:	b2b6      	uxth	r6, r6
 80147b2:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 80147b6:	f107 0901 	add.w	r9, r7, #1
 80147ba:	096d      	lsrs	r5, r5, #5
 80147bc:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80147c0:	1c72      	adds	r2, r6, #1
 80147c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80147c6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80147ca:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80147ce:	433d      	orrs	r5, r7
 80147d0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80147d4:	4335      	orrs	r5, r6
 80147d6:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80147da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80147dc:	4410      	add	r0, r2
 80147de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80147e0:	f10e 0e01 	add.w	lr, lr, #1
 80147e4:	4411      	add	r1, r2
 80147e6:	e79b      	b.n	8014720 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 80147e8:	00ed      	lsls	r5, r5, #3
 80147ea:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 80147ee:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 80147f2:	e7f0      	b.n	80147d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80147f4:	b007      	add	sp, #28
 80147f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147fa:	bf00      	nop
 80147fc:	2000d434 	.word	0x2000d434

08014800 <_ZN8touchgfx8LCD16bppD1Ev>:
 8014800:	4770      	bx	lr

08014802 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014802:	4770      	bx	lr

08014804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014804:	4770      	bx	lr

08014806 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8014806:	4770      	bx	lr

08014808 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8014808:	4770      	bx	lr

0801480a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801480a:	4770      	bx	lr

0801480c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801480c:	4770      	bx	lr

0801480e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801480e:	4770      	bx	lr

08014810 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014810:	4770      	bx	lr

08014812 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014812:	4770      	bx	lr

08014814 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014814:	4770      	bx	lr

08014816 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014816:	4770      	bx	lr

08014818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014818:	4770      	bx	lr

0801481a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801481a:	4770      	bx	lr

0801481c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801481c:	4770      	bx	lr

0801481e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801481e:	4770      	bx	lr

08014820 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014820:	4770      	bx	lr

08014822 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014822:	4770      	bx	lr

08014824 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014824:	4770      	bx	lr

08014826 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014826:	4770      	bx	lr

08014828 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014828:	4770      	bx	lr

0801482a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801482a:	4770      	bx	lr

0801482c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801482c:	4770      	bx	lr

0801482e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801482e:	4770      	bx	lr

08014830 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014830:	4770      	bx	lr

08014832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014832:	4770      	bx	lr

08014834 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014834:	4770      	bx	lr

08014836 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014836:	4770      	bx	lr

08014838 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014838:	4770      	bx	lr
	...

0801483c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801483c:	b508      	push	{r3, lr}
 801483e:	4b06      	ldr	r3, [pc, #24]	; (8014858 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8014840:	8818      	ldrh	r0, [r3, #0]
 8014842:	b928      	cbnz	r0, 8014850 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8014844:	4b05      	ldr	r3, [pc, #20]	; (801485c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8014846:	4a06      	ldr	r2, [pc, #24]	; (8014860 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8014848:	4806      	ldr	r0, [pc, #24]	; (8014864 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 801484a:	2154      	movs	r1, #84	; 0x54
 801484c:	f00a fdd2 	bl	801f3f4 <__assert_func>
 8014850:	0040      	lsls	r0, r0, #1
 8014852:	b280      	uxth	r0, r0
 8014854:	bd08      	pop	{r3, pc}
 8014856:	bf00      	nop
 8014858:	2000d406 	.word	0x2000d406
 801485c:	080240da 	.word	0x080240da
 8014860:	0802465f 	.word	0x0802465f
 8014864:	0802411c 	.word	0x0802411c

08014868 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8014868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801486c:	b08b      	sub	sp, #44	; 0x2c
 801486e:	460f      	mov	r7, r1
 8014870:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8014874:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8014878:	4616      	mov	r6, r2
 801487a:	f1bb 0f00 	cmp.w	fp, #0
 801487e:	d046      	beq.n	801490e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8014880:	6810      	ldr	r0, [r2, #0]
 8014882:	6851      	ldr	r1, [r2, #4]
 8014884:	ad06      	add	r5, sp, #24
 8014886:	c503      	stmia	r5!, {r0, r1}
 8014888:	6818      	ldr	r0, [r3, #0]
 801488a:	6859      	ldr	r1, [r3, #4]
 801488c:	ad08      	add	r5, sp, #32
 801488e:	c503      	stmia	r5!, {r0, r1}
 8014890:	a806      	add	r0, sp, #24
 8014892:	f7fa fbbf 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014896:	4631      	mov	r1, r6
 8014898:	a808      	add	r0, sp, #32
 801489a:	f7fa fba3 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801489e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80148a2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80148a6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80148aa:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80148ae:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80148b2:	fb16 2103 	smlabb	r1, r6, r3, r2
 80148b6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80148ba:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80148be:	4f5d      	ldr	r7, [pc, #372]	; (8014a34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 80148c0:	440a      	add	r2, r1
 80148c2:	f8ad 2020 	strh.w	r2, [sp, #32]
 80148c6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80148ca:	6838      	ldr	r0, [r7, #0]
 80148cc:	4413      	add	r3, r2
 80148ce:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80148d2:	6803      	ldr	r3, [r0, #0]
 80148d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80148d6:	4798      	blx	r3
 80148d8:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80148dc:	46b9      	mov	r9, r7
 80148de:	d019      	beq.n	8014914 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80148e0:	f010 0f04 	tst.w	r0, #4
 80148e4:	d01a      	beq.n	801491c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80148e6:	f8d9 0000 	ldr.w	r0, [r9]
 80148ea:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80148ee:	6801      	ldr	r1, [r0, #0]
 80148f0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80148f4:	e9cd b403 	strd	fp, r4, [sp, #12]
 80148f8:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80148fc:	9402      	str	r4, [sp, #8]
 80148fe:	b2ad      	uxth	r5, r5
 8014900:	fa1f f488 	uxth.w	r4, r8
 8014904:	9501      	str	r5, [sp, #4]
 8014906:	9400      	str	r4, [sp, #0]
 8014908:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 801490a:	4631      	mov	r1, r6
 801490c:	47a0      	blx	r4
 801490e:	b00b      	add	sp, #44	; 0x2c
 8014910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014914:	b914      	cbnz	r4, 801491c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8014916:	f010 0f01 	tst.w	r0, #1
 801491a:	e7e3      	b.n	80148e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 801491c:	f8d9 0000 	ldr.w	r0, [r9]
 8014920:	6803      	ldr	r3, [r0, #0]
 8014922:	6a1b      	ldr	r3, [r3, #32]
 8014924:	4798      	blx	r3
 8014926:	4b44      	ldr	r3, [pc, #272]	; (8014a38 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8014928:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801492c:	881a      	ldrh	r2, [r3, #0]
 801492e:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8014932:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014936:	fb02 1404 	mla	r4, r2, r4, r1
 801493a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801493e:	469a      	mov	sl, r3
 8014940:	fb05 f502 	mul.w	r5, r5, r2
 8014944:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8014948:	d058      	beq.n	80149fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 801494a:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801494e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014952:	fa1f f28b 	uxth.w	r2, fp
 8014956:	fa1f f989 	uxth.w	r9, r9
 801495a:	469e      	mov	lr, r3
 801495c:	42ac      	cmp	r4, r5
 801495e:	d263      	bcs.n	8014a28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8014960:	eb04 0a07 	add.w	sl, r4, r7
 8014964:	4554      	cmp	r4, sl
 8014966:	d23c      	bcs.n	80149e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8014968:	8821      	ldrh	r1, [r4, #0]
 801496a:	f836 3b02 	ldrh.w	r3, [r6], #2
 801496e:	1208      	asrs	r0, r1, #8
 8014970:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8014974:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014978:	fb10 f009 	smulbb	r0, r0, r9
 801497c:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8014980:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014984:	00c9      	lsls	r1, r1, #3
 8014986:	fb0c 0c02 	mla	ip, ip, r2, r0
 801498a:	b2c9      	uxtb	r1, r1
 801498c:	10d8      	asrs	r0, r3, #3
 801498e:	00db      	lsls	r3, r3, #3
 8014990:	fb11 f109 	smulbb	r1, r1, r9
 8014994:	b2db      	uxtb	r3, r3
 8014996:	fa1f fc8c 	uxth.w	ip, ip
 801499a:	fb03 1302 	mla	r3, r3, r2, r1
 801499e:	b29b      	uxth	r3, r3
 80149a0:	f10c 0101 	add.w	r1, ip, #1
 80149a4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80149a8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80149ac:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80149b0:	fb1b fb09 	smulbb	fp, fp, r9
 80149b4:	1c59      	adds	r1, r3, #1
 80149b6:	fb00 b002 	mla	r0, r0, r2, fp
 80149ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80149be:	b280      	uxth	r0, r0
 80149c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80149c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80149c8:	ea4c 0c03 	orr.w	ip, ip, r3
 80149cc:	1c43      	adds	r3, r0, #1
 80149ce:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80149d2:	0940      	lsrs	r0, r0, #5
 80149d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80149d8:	ea4c 0c00 	orr.w	ip, ip, r0
 80149dc:	f824 cb02 	strh.w	ip, [r4], #2
 80149e0:	e7c0      	b.n	8014964 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 80149e2:	f8be 3000 	ldrh.w	r3, [lr]
 80149e6:	eba3 0308 	sub.w	r3, r3, r8
 80149ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80149ee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80149f2:	eba3 0308 	sub.w	r3, r3, r8
 80149f6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80149fa:	e7af      	b.n	801495c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 80149fc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8014a00:	f8d9 0000 	ldr.w	r0, [r9]
 8014a04:	42ac      	cmp	r4, r5
 8014a06:	6803      	ldr	r3, [r0, #0]
 8014a08:	d20e      	bcs.n	8014a28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8014a0a:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 8014a0e:	4632      	mov	r2, r6
 8014a10:	463b      	mov	r3, r7
 8014a12:	4621      	mov	r1, r4
 8014a14:	47c0      	blx	r8
 8014a16:	f8ba 3000 	ldrh.w	r3, [sl]
 8014a1a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a1e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014a22:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8014a26:	e7eb      	b.n	8014a00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8014a28:	4b02      	ldr	r3, [pc, #8]	; (8014a34 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8014a2a:	6818      	ldr	r0, [r3, #0]
 8014a2c:	6803      	ldr	r3, [r0, #0]
 8014a2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014a30:	4798      	blx	r3
 8014a32:	e76c      	b.n	801490e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8014a34:	2000d40c 	.word	0x2000d40c
 8014a38:	2000d406 	.word	0x2000d406

08014a3c <_ZN8touchgfx8LCD16bppD0Ev>:
 8014a3c:	b510      	push	{r4, lr}
 8014a3e:	2178      	movs	r1, #120	; 0x78
 8014a40:	4604      	mov	r4, r0
 8014a42:	f00a fca8 	bl	801f396 <_ZdlPvj>
 8014a46:	4620      	mov	r0, r4
 8014a48:	bd10      	pop	{r4, pc}

08014a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014a4a:	b510      	push	{r4, lr}
 8014a4c:	2104      	movs	r1, #4
 8014a4e:	4604      	mov	r4, r0
 8014a50:	f00a fca1 	bl	801f396 <_ZdlPvj>
 8014a54:	4620      	mov	r0, r4
 8014a56:	bd10      	pop	{r4, pc}

08014a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014a58:	b510      	push	{r4, lr}
 8014a5a:	2104      	movs	r1, #4
 8014a5c:	4604      	mov	r4, r0
 8014a5e:	f00a fc9a 	bl	801f396 <_ZdlPvj>
 8014a62:	4620      	mov	r0, r4
 8014a64:	bd10      	pop	{r4, pc}

08014a66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014a66:	b510      	push	{r4, lr}
 8014a68:	2104      	movs	r1, #4
 8014a6a:	4604      	mov	r4, r0
 8014a6c:	f00a fc93 	bl	801f396 <_ZdlPvj>
 8014a70:	4620      	mov	r0, r4
 8014a72:	bd10      	pop	{r4, pc}

08014a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8014a74:	b510      	push	{r4, lr}
 8014a76:	2104      	movs	r1, #4
 8014a78:	4604      	mov	r4, r0
 8014a7a:	f00a fc8c 	bl	801f396 <_ZdlPvj>
 8014a7e:	4620      	mov	r0, r4
 8014a80:	bd10      	pop	{r4, pc}

08014a82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014a82:	b510      	push	{r4, lr}
 8014a84:	2104      	movs	r1, #4
 8014a86:	4604      	mov	r4, r0
 8014a88:	f00a fc85 	bl	801f396 <_ZdlPvj>
 8014a8c:	4620      	mov	r0, r4
 8014a8e:	bd10      	pop	{r4, pc}

08014a90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8014a90:	b510      	push	{r4, lr}
 8014a92:	2104      	movs	r1, #4
 8014a94:	4604      	mov	r4, r0
 8014a96:	f00a fc7e 	bl	801f396 <_ZdlPvj>
 8014a9a:	4620      	mov	r0, r4
 8014a9c:	bd10      	pop	{r4, pc}

08014a9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014a9e:	b510      	push	{r4, lr}
 8014aa0:	2104      	movs	r1, #4
 8014aa2:	4604      	mov	r4, r0
 8014aa4:	f00a fc77 	bl	801f396 <_ZdlPvj>
 8014aa8:	4620      	mov	r0, r4
 8014aaa:	bd10      	pop	{r4, pc}

08014aac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8014aac:	b510      	push	{r4, lr}
 8014aae:	2104      	movs	r1, #4
 8014ab0:	4604      	mov	r4, r0
 8014ab2:	f00a fc70 	bl	801f396 <_ZdlPvj>
 8014ab6:	4620      	mov	r0, r4
 8014ab8:	bd10      	pop	{r4, pc}

08014aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014aba:	b510      	push	{r4, lr}
 8014abc:	2104      	movs	r1, #4
 8014abe:	4604      	mov	r4, r0
 8014ac0:	f00a fc69 	bl	801f396 <_ZdlPvj>
 8014ac4:	4620      	mov	r0, r4
 8014ac6:	bd10      	pop	{r4, pc}

08014ac8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014ac8:	b510      	push	{r4, lr}
 8014aca:	2104      	movs	r1, #4
 8014acc:	4604      	mov	r4, r0
 8014ace:	f00a fc62 	bl	801f396 <_ZdlPvj>
 8014ad2:	4620      	mov	r0, r4
 8014ad4:	bd10      	pop	{r4, pc}

08014ad6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014ad6:	b510      	push	{r4, lr}
 8014ad8:	2104      	movs	r1, #4
 8014ada:	4604      	mov	r4, r0
 8014adc:	f00a fc5b 	bl	801f396 <_ZdlPvj>
 8014ae0:	4620      	mov	r0, r4
 8014ae2:	bd10      	pop	{r4, pc}

08014ae4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014ae4:	b510      	push	{r4, lr}
 8014ae6:	2104      	movs	r1, #4
 8014ae8:	4604      	mov	r4, r0
 8014aea:	f00a fc54 	bl	801f396 <_ZdlPvj>
 8014aee:	4620      	mov	r0, r4
 8014af0:	bd10      	pop	{r4, pc}

08014af2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8014af2:	b510      	push	{r4, lr}
 8014af4:	2104      	movs	r1, #4
 8014af6:	4604      	mov	r4, r0
 8014af8:	f00a fc4d 	bl	801f396 <_ZdlPvj>
 8014afc:	4620      	mov	r0, r4
 8014afe:	bd10      	pop	{r4, pc}

08014b00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8014b00:	b510      	push	{r4, lr}
 8014b02:	2104      	movs	r1, #4
 8014b04:	4604      	mov	r4, r0
 8014b06:	f00a fc46 	bl	801f396 <_ZdlPvj>
 8014b0a:	4620      	mov	r0, r4
 8014b0c:	bd10      	pop	{r4, pc}

08014b0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014b0e:	b510      	push	{r4, lr}
 8014b10:	2104      	movs	r1, #4
 8014b12:	4604      	mov	r4, r0
 8014b14:	f00a fc3f 	bl	801f396 <_ZdlPvj>
 8014b18:	4620      	mov	r0, r4
 8014b1a:	bd10      	pop	{r4, pc}

08014b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014b1c:	b510      	push	{r4, lr}
 8014b1e:	2104      	movs	r1, #4
 8014b20:	4604      	mov	r4, r0
 8014b22:	f00a fc38 	bl	801f396 <_ZdlPvj>
 8014b26:	4620      	mov	r0, r4
 8014b28:	bd10      	pop	{r4, pc}

08014b2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8014b2a:	b510      	push	{r4, lr}
 8014b2c:	2104      	movs	r1, #4
 8014b2e:	4604      	mov	r4, r0
 8014b30:	f00a fc31 	bl	801f396 <_ZdlPvj>
 8014b34:	4620      	mov	r0, r4
 8014b36:	bd10      	pop	{r4, pc}

08014b38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8014b38:	b510      	push	{r4, lr}
 8014b3a:	2104      	movs	r1, #4
 8014b3c:	4604      	mov	r4, r0
 8014b3e:	f00a fc2a 	bl	801f396 <_ZdlPvj>
 8014b42:	4620      	mov	r0, r4
 8014b44:	bd10      	pop	{r4, pc}

08014b46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014b46:	b510      	push	{r4, lr}
 8014b48:	2104      	movs	r1, #4
 8014b4a:	4604      	mov	r4, r0
 8014b4c:	f00a fc23 	bl	801f396 <_ZdlPvj>
 8014b50:	4620      	mov	r0, r4
 8014b52:	bd10      	pop	{r4, pc}

08014b54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014b54:	b510      	push	{r4, lr}
 8014b56:	2104      	movs	r1, #4
 8014b58:	4604      	mov	r4, r0
 8014b5a:	f00a fc1c 	bl	801f396 <_ZdlPvj>
 8014b5e:	4620      	mov	r0, r4
 8014b60:	bd10      	pop	{r4, pc}

08014b62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8014b62:	b510      	push	{r4, lr}
 8014b64:	2104      	movs	r1, #4
 8014b66:	4604      	mov	r4, r0
 8014b68:	f00a fc15 	bl	801f396 <_ZdlPvj>
 8014b6c:	4620      	mov	r0, r4
 8014b6e:	bd10      	pop	{r4, pc}

08014b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8014b70:	b510      	push	{r4, lr}
 8014b72:	2104      	movs	r1, #4
 8014b74:	4604      	mov	r4, r0
 8014b76:	f00a fc0e 	bl	801f396 <_ZdlPvj>
 8014b7a:	4620      	mov	r0, r4
 8014b7c:	bd10      	pop	{r4, pc}

08014b7e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8014b7e:	b510      	push	{r4, lr}
 8014b80:	2104      	movs	r1, #4
 8014b82:	4604      	mov	r4, r0
 8014b84:	f00a fc07 	bl	801f396 <_ZdlPvj>
 8014b88:	4620      	mov	r0, r4
 8014b8a:	bd10      	pop	{r4, pc}

08014b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8014b8c:	b510      	push	{r4, lr}
 8014b8e:	2104      	movs	r1, #4
 8014b90:	4604      	mov	r4, r0
 8014b92:	f00a fc00 	bl	801f396 <_ZdlPvj>
 8014b96:	4620      	mov	r0, r4
 8014b98:	bd10      	pop	{r4, pc}

08014b9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8014b9a:	b510      	push	{r4, lr}
 8014b9c:	2104      	movs	r1, #4
 8014b9e:	4604      	mov	r4, r0
 8014ba0:	f00a fbf9 	bl	801f396 <_ZdlPvj>
 8014ba4:	4620      	mov	r0, r4
 8014ba6:	bd10      	pop	{r4, pc}

08014ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8014ba8:	b510      	push	{r4, lr}
 8014baa:	2104      	movs	r1, #4
 8014bac:	4604      	mov	r4, r0
 8014bae:	f00a fbf2 	bl	801f396 <_ZdlPvj>
 8014bb2:	4620      	mov	r0, r4
 8014bb4:	bd10      	pop	{r4, pc}

08014bb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8014bb6:	b510      	push	{r4, lr}
 8014bb8:	2104      	movs	r1, #4
 8014bba:	4604      	mov	r4, r0
 8014bbc:	f00a fbeb 	bl	801f396 <_ZdlPvj>
 8014bc0:	4620      	mov	r0, r4
 8014bc2:	bd10      	pop	{r4, pc}

08014bc4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8014bc4:	b510      	push	{r4, lr}
 8014bc6:	2104      	movs	r1, #4
 8014bc8:	4604      	mov	r4, r0
 8014bca:	f00a fbe4 	bl	801f396 <_ZdlPvj>
 8014bce:	4620      	mov	r0, r4
 8014bd0:	bd10      	pop	{r4, pc}
	...

08014bd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8014bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bd8:	460d      	mov	r5, r1
 8014bda:	b087      	sub	sp, #28
 8014bdc:	4614      	mov	r4, r2
 8014bde:	4698      	mov	r8, r3
 8014be0:	b333      	cbz	r3, 8014c30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014be2:	4608      	mov	r0, r1
 8014be4:	f7f5 ff23 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014be8:	bb10      	cbnz	r0, 8014c30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014bea:	6828      	ldr	r0, [r5, #0]
 8014bec:	6869      	ldr	r1, [r5, #4]
 8014bee:	4e73      	ldr	r6, [pc, #460]	; (8014dbc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 8014bf0:	ab04      	add	r3, sp, #16
 8014bf2:	c303      	stmia	r3!, {r0, r1}
 8014bf4:	a804      	add	r0, sp, #16
 8014bf6:	f7fa fa0d 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014bfa:	6830      	ldr	r0, [r6, #0]
 8014bfc:	6803      	ldr	r3, [r0, #0]
 8014bfe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014c00:	4798      	blx	r3
 8014c02:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014c06:	d016      	beq.n	8014c36 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8014c08:	f010 0f08 	tst.w	r0, #8
 8014c0c:	d016      	beq.n	8014c3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 8014c0e:	6830      	ldr	r0, [r6, #0]
 8014c10:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 8014c14:	6801      	ldr	r1, [r0, #0]
 8014c16:	9501      	str	r5, [sp, #4]
 8014c18:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8014c1c:	f8cd 8008 	str.w	r8, [sp, #8]
 8014c20:	9500      	str	r5, [sp, #0]
 8014c22:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8014c24:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014c28:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014c2c:	4621      	mov	r1, r4
 8014c2e:	47a8      	blx	r5
 8014c30:	b007      	add	sp, #28
 8014c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c36:	f010 0f02 	tst.w	r0, #2
 8014c3a:	e7e7      	b.n	8014c0c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 8014c3c:	6830      	ldr	r0, [r6, #0]
 8014c3e:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8014c42:	6803      	ldr	r3, [r0, #0]
 8014c44:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8014c48:	6a1b      	ldr	r3, [r3, #32]
 8014c4a:	4798      	blx	r3
 8014c4c:	495c      	ldr	r1, [pc, #368]	; (8014dc0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 8014c4e:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8014c52:	880b      	ldrh	r3, [r1, #0]
 8014c54:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8014c58:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014c5c:	fb03 c202 	mla	r2, r3, r2, ip
 8014c60:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014c64:	468e      	mov	lr, r1
 8014c66:	fb07 f203 	mul.w	r2, r7, r3
 8014c6a:	d053      	beq.n	8014d14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8014c6c:	fa1f f388 	uxth.w	r3, r8
 8014c70:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 8014c74:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8014c78:	ea4f 2814 	mov.w	r8, r4, lsr #8
 8014c7c:	00e4      	lsls	r4, r4, #3
 8014c7e:	b2e4      	uxtb	r4, r4
 8014c80:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8014c84:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014c88:	fb08 f803 	mul.w	r8, r8, r3
 8014c8c:	fb09 f903 	mul.w	r9, r9, r3
 8014c90:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 8014c94:	4363      	muls	r3, r4
 8014c96:	006d      	lsls	r5, r5, #1
 8014c98:	b2bc      	uxth	r4, r7
 8014c9a:	4288      	cmp	r0, r1
 8014c9c:	f080 8088 	bcs.w	8014db0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8014ca0:	eb00 0a05 	add.w	sl, r0, r5
 8014ca4:	4550      	cmp	r0, sl
 8014ca6:	d22f      	bcs.n	8014d08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 8014ca8:	8802      	ldrh	r2, [r0, #0]
 8014caa:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014cae:	10d7      	asrs	r7, r2, #3
 8014cb0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014cb4:	00d2      	lsls	r2, r2, #3
 8014cb6:	fb1c fc04 	smulbb	ip, ip, r4
 8014cba:	b2d2      	uxtb	r2, r2
 8014cbc:	44c4      	add	ip, r8
 8014cbe:	fb12 f204 	smulbb	r2, r2, r4
 8014cc2:	fa1f fc8c 	uxth.w	ip, ip
 8014cc6:	441a      	add	r2, r3
 8014cc8:	b292      	uxth	r2, r2
 8014cca:	f10c 0b01 	add.w	fp, ip, #1
 8014cce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014cd2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8014cd6:	fb17 f704 	smulbb	r7, r7, r4
 8014cda:	f102 0b01 	add.w	fp, r2, #1
 8014cde:	444f      	add	r7, r9
 8014ce0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8014ce4:	b2bf      	uxth	r7, r7
 8014ce6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014cea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014cee:	ea4c 0202 	orr.w	r2, ip, r2
 8014cf2:	f107 0c01 	add.w	ip, r7, #1
 8014cf6:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8014cfa:	097f      	lsrs	r7, r7, #5
 8014cfc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8014d00:	433a      	orrs	r2, r7
 8014d02:	f820 2b02 	strh.w	r2, [r0], #2
 8014d06:	e7cd      	b.n	8014ca4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 8014d08:	f8be 2000 	ldrh.w	r2, [lr]
 8014d0c:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8014d10:	4410      	add	r0, r2
 8014d12:	e7c2      	b.n	8014c9a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 8014d14:	07db      	lsls	r3, r3, #31
 8014d16:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014d1a:	d50e      	bpl.n	8014d3a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 8014d1c:	006d      	lsls	r5, r5, #1
 8014d1e:	4290      	cmp	r0, r2
 8014d20:	d246      	bcs.n	8014db0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8014d22:	1943      	adds	r3, r0, r5
 8014d24:	4298      	cmp	r0, r3
 8014d26:	d202      	bcs.n	8014d2e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 8014d28:	f820 4b02 	strh.w	r4, [r0], #2
 8014d2c:	e7fa      	b.n	8014d24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 8014d2e:	f8be 3000 	ldrh.w	r3, [lr]
 8014d32:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 8014d36:	4418      	add	r0, r3
 8014d38:	e7f1      	b.n	8014d1e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 8014d3a:	0787      	lsls	r7, r0, #30
 8014d3c:	462b      	mov	r3, r5
 8014d3e:	d00a      	beq.n	8014d56 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8014d40:	4603      	mov	r3, r0
 8014d42:	4293      	cmp	r3, r2
 8014d44:	d205      	bcs.n	8014d52 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 8014d46:	801c      	strh	r4, [r3, #0]
 8014d48:	f8be 1000 	ldrh.w	r1, [lr]
 8014d4c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014d50:	e7f7      	b.n	8014d42 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 8014d52:	3002      	adds	r0, #2
 8014d54:	1e6b      	subs	r3, r5, #1
 8014d56:	07dd      	lsls	r5, r3, #31
 8014d58:	d50d      	bpl.n	8014d76 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 8014d5a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8014d5e:	3901      	subs	r1, #1
 8014d60:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014d64:	4291      	cmp	r1, r2
 8014d66:	d205      	bcs.n	8014d74 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8014d68:	800c      	strh	r4, [r1, #0]
 8014d6a:	f8be 5000 	ldrh.w	r5, [lr]
 8014d6e:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 8014d72:	e7f7      	b.n	8014d64 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 8014d74:	3b01      	subs	r3, #1
 8014d76:	b1db      	cbz	r3, 8014db0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8014d78:	b2a1      	uxth	r1, r4
 8014d7a:	105b      	asrs	r3, r3, #1
 8014d7c:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8014d80:	009b      	lsls	r3, r3, #2
 8014d82:	4290      	cmp	r0, r2
 8014d84:	d214      	bcs.n	8014db0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8014d86:	0781      	lsls	r1, r0, #30
 8014d88:	d006      	beq.n	8014d98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 8014d8a:	4b0e      	ldr	r3, [pc, #56]	; (8014dc4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 8014d8c:	4a0e      	ldr	r2, [pc, #56]	; (8014dc8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 8014d8e:	480f      	ldr	r0, [pc, #60]	; (8014dcc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 8014d90:	f44f 7162 	mov.w	r1, #904	; 0x388
 8014d94:	f00a fb2e 	bl	801f3f4 <__assert_func>
 8014d98:	18c5      	adds	r5, r0, r3
 8014d9a:	4601      	mov	r1, r0
 8014d9c:	42a9      	cmp	r1, r5
 8014d9e:	d202      	bcs.n	8014da6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 8014da0:	f841 4b04 	str.w	r4, [r1], #4
 8014da4:	e7fa      	b.n	8014d9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 8014da6:	f8be 1000 	ldrh.w	r1, [lr]
 8014daa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014dae:	e7e8      	b.n	8014d82 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 8014db0:	6830      	ldr	r0, [r6, #0]
 8014db2:	6803      	ldr	r3, [r0, #0]
 8014db4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014db6:	4798      	blx	r3
 8014db8:	e73a      	b.n	8014c30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8014dba:	bf00      	nop
 8014dbc:	2000d40c 	.word	0x2000d40c
 8014dc0:	2000d406 	.word	0x2000d406
 8014dc4:	08024079 	.word	0x08024079
 8014dc8:	0802482c 	.word	0x0802482c
 8014dcc:	080240a8 	.word	0x080240a8

08014dd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8014dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dd4:	4f97      	ldr	r7, [pc, #604]	; (8015034 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 8014dd6:	4616      	mov	r6, r2
 8014dd8:	683a      	ldr	r2, [r7, #0]
 8014dda:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8014dde:	2a02      	cmp	r2, #2
 8014de0:	b08f      	sub	sp, #60	; 0x3c
 8014de2:	4604      	mov	r4, r0
 8014de4:	4689      	mov	r9, r1
 8014de6:	d106      	bne.n	8014df6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8014de8:	4b93      	ldr	r3, [pc, #588]	; (8015038 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8014dea:	4a94      	ldr	r2, [pc, #592]	; (801503c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8014dec:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 8014df0:	4893      	ldr	r0, [pc, #588]	; (8015040 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 8014df2:	f00a faff 	bl	801f3f4 <__assert_func>
 8014df6:	ad0e      	add	r5, sp, #56	; 0x38
 8014df8:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8014dfc:	4628      	mov	r0, r5
 8014dfe:	f7fd fa45 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014e02:	6823      	ldr	r3, [r4, #0]
 8014e04:	4680      	mov	r8, r0
 8014e06:	6a1b      	ldr	r3, [r3, #32]
 8014e08:	4620      	mov	r0, r4
 8014e0a:	4798      	blx	r3
 8014e0c:	4580      	cmp	r8, r0
 8014e0e:	d004      	beq.n	8014e1a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8014e10:	4b8c      	ldr	r3, [pc, #560]	; (8015044 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8014e12:	4a8a      	ldr	r2, [pc, #552]	; (801503c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8014e14:	f240 21ca 	movw	r1, #714	; 0x2ca
 8014e18:	e7ea      	b.n	8014df0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8014e1a:	4628      	mov	r0, r5
 8014e1c:	f7fd f9ac 	bl	8012178 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014e20:	4680      	mov	r8, r0
 8014e22:	b920      	cbnz	r0, 8014e2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8014e24:	4b88      	ldr	r3, [pc, #544]	; (8015048 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8014e26:	4a85      	ldr	r2, [pc, #532]	; (801503c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8014e28:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 8014e2c:	e7e0      	b.n	8014df0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8014e2e:	6830      	ldr	r0, [r6, #0]
 8014e30:	6871      	ldr	r1, [r6, #4]
 8014e32:	f9b6 a000 	ldrsh.w	sl, [r6]
 8014e36:	ab06      	add	r3, sp, #24
 8014e38:	c303      	stmia	r3!, {r0, r1}
 8014e3a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8014e3e:	f8d9 0000 	ldr.w	r0, [r9]
 8014e42:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014e46:	ab08      	add	r3, sp, #32
 8014e48:	c303      	stmia	r3!, {r0, r1}
 8014e4a:	4628      	mov	r0, r5
 8014e4c:	f7fd f88c 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014e50:	4606      	mov	r6, r0
 8014e52:	4628      	mov	r0, r5
 8014e54:	f7fd f8c2 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014e58:	f10d 0b20 	add.w	fp, sp, #32
 8014e5c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8014e60:	a806      	add	r0, sp, #24
 8014e62:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8014e66:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8014e6a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8014e6e:	f7fa f8d1 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014e72:	4658      	mov	r0, fp
 8014e74:	f7fa f8ce 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014e78:	a80a      	add	r0, sp, #40	; 0x28
 8014e7a:	f7fa f8cb 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014e7e:	4d73      	ldr	r5, [pc, #460]	; (801504c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8014e80:	4b73      	ldr	r3, [pc, #460]	; (8015050 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8014e82:	f9b5 2000 	ldrsh.w	r2, [r5]
 8014e86:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014e8a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014e8e:	2100      	movs	r1, #0
 8014e90:	910c      	str	r1, [sp, #48]	; 0x30
 8014e92:	4658      	mov	r0, fp
 8014e94:	a90c      	add	r1, sp, #48	; 0x30
 8014e96:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014e9a:	f7f5 fd85 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 8014e9e:	4658      	mov	r0, fp
 8014ea0:	f7f5 fdc5 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ea4:	2800      	cmp	r0, #0
 8014ea6:	f040 8099 	bne.w	8014fdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8014eaa:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8014eae:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8014eb2:	4288      	cmp	r0, r1
 8014eb4:	db37      	blt.n	8014f26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8014eb6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8014eba:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8014ebe:	429a      	cmp	r2, r3
 8014ec0:	db31      	blt.n	8014f26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8014ec2:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8014ec6:	4430      	add	r0, r6
 8014ec8:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8014ecc:	4431      	add	r1, r6
 8014ece:	b200      	sxth	r0, r0
 8014ed0:	b209      	sxth	r1, r1
 8014ed2:	4288      	cmp	r0, r1
 8014ed4:	dc27      	bgt.n	8014f26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8014ed6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8014eda:	440a      	add	r2, r1
 8014edc:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8014ee0:	440b      	add	r3, r1
 8014ee2:	b212      	sxth	r2, r2
 8014ee4:	b21b      	sxth	r3, r3
 8014ee6:	429a      	cmp	r2, r3
 8014ee8:	dc1d      	bgt.n	8014f26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8014eea:	6823      	ldr	r3, [r4, #0]
 8014eec:	4620      	mov	r0, r4
 8014eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014ef0:	4798      	blx	r3
 8014ef2:	4682      	mov	sl, r0
 8014ef4:	6838      	ldr	r0, [r7, #0]
 8014ef6:	6803      	ldr	r3, [r0, #0]
 8014ef8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014efa:	4798      	blx	r3
 8014efc:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8014f00:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014f04:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8014f08:	1a5b      	subs	r3, r3, r1
 8014f0a:	b29b      	uxth	r3, r3
 8014f0c:	b21c      	sxth	r4, r3
 8014f0e:	2c00      	cmp	r4, #0
 8014f10:	dc0e      	bgt.n	8014f30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 8014f12:	bf1f      	itttt	ne
 8014f14:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8014f18:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8014f1c:	185b      	addne	r3, r3, r1
 8014f1e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8014f22:	4644      	mov	r4, r8
 8014f24:	e009      	b.n	8014f3a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8014f26:	4b4b      	ldr	r3, [pc, #300]	; (8015054 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8014f28:	4a44      	ldr	r2, [pc, #272]	; (801503c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8014f2a:	f240 21da 	movw	r1, #730	; 0x2da
 8014f2e:	e75f      	b.n	8014df0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8014f30:	1ad3      	subs	r3, r2, r3
 8014f32:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8014f36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8014f3a:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8014f3e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8014f42:	1b9b      	subs	r3, r3, r6
 8014f44:	b29b      	uxth	r3, r3
 8014f46:	b219      	sxth	r1, r3
 8014f48:	2900      	cmp	r1, #0
 8014f4a:	dd4b      	ble.n	8014fe4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 8014f4c:	4351      	muls	r1, r2
 8014f4e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8014f52:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014f56:	1acb      	subs	r3, r1, r3
 8014f58:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014f5c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8014f60:	2e00      	cmp	r6, #0
 8014f62:	dd3b      	ble.n	8014fdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8014f64:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8014f68:	2b00      	cmp	r3, #0
 8014f6a:	dd37      	ble.n	8014fdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8014f6c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8014f70:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8014f74:	fb0a f90c 	mul.w	r9, sl, ip
 8014f78:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8014f7c:	4481      	add	r9, r0
 8014f7e:	8828      	ldrh	r0, [r5, #0]
 8014f80:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8014f84:	42ae      	cmp	r6, r5
 8014f86:	bfa8      	it	ge
 8014f88:	462e      	movge	r6, r5
 8014f8a:	1a41      	subs	r1, r0, r1
 8014f8c:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8014f90:	428e      	cmp	r6, r1
 8014f92:	bfa8      	it	ge
 8014f94:	460e      	movge	r6, r1
 8014f96:	429d      	cmp	r5, r3
 8014f98:	bfa8      	it	ge
 8014f9a:	461d      	movge	r5, r3
 8014f9c:	4b2c      	ldr	r3, [pc, #176]	; (8015050 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8014f9e:	881b      	ldrh	r3, [r3, #0]
 8014fa0:	eba3 030c 	sub.w	r3, r3, ip
 8014fa4:	429d      	cmp	r5, r3
 8014fa6:	bfa8      	it	ge
 8014fa8:	461d      	movge	r5, r3
 8014faa:	42b0      	cmp	r0, r6
 8014fac:	d12c      	bne.n	8015008 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8014fae:	4290      	cmp	r0, r2
 8014fb0:	d12a      	bne.n	8015008 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8014fb2:	6838      	ldr	r0, [r7, #0]
 8014fb4:	9203      	str	r2, [sp, #12]
 8014fb6:	6803      	ldr	r3, [r0, #0]
 8014fb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014fba:	4798      	blx	r3
 8014fbc:	07c3      	lsls	r3, r0, #31
 8014fbe:	d51a      	bpl.n	8014ff6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8014fc0:	9a03      	ldr	r2, [sp, #12]
 8014fc2:	6838      	ldr	r0, [r7, #0]
 8014fc4:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8014fc8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8014fcc:	6803      	ldr	r3, [r0, #0]
 8014fce:	9200      	str	r2, [sp, #0]
 8014fd0:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8014fd2:	e89b 0006 	ldmia.w	fp, {r1, r2}
 8014fd6:	4623      	mov	r3, r4
 8014fd8:	47a8      	blx	r5
 8014fda:	4680      	mov	r8, r0
 8014fdc:	4640      	mov	r0, r8
 8014fde:	b00f      	add	sp, #60	; 0x3c
 8014fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fe4:	bf1f      	itttt	ne
 8014fe6:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8014fea:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8014fee:	185b      	addne	r3, r3, r1
 8014ff0:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8014ff4:	e7b2      	b.n	8014f5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 8014ff6:	6838      	ldr	r0, [r7, #0]
 8014ff8:	6803      	ldr	r3, [r0, #0]
 8014ffa:	464a      	mov	r2, r9
 8014ffc:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8014ffe:	4621      	mov	r1, r4
 8015000:	fb05 f30a 	mul.w	r3, r5, sl
 8015004:	47b0      	blx	r6
 8015006:	e7e9      	b.n	8014fdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8015008:	4355      	muls	r5, r2
 801500a:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 801500e:	9303      	str	r3, [sp, #12]
 8015010:	0076      	lsls	r6, r6, #1
 8015012:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8015016:	9b03      	ldr	r3, [sp, #12]
 8015018:	429c      	cmp	r4, r3
 801501a:	d2df      	bcs.n	8014fdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801501c:	6838      	ldr	r0, [r7, #0]
 801501e:	6803      	ldr	r3, [r0, #0]
 8015020:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015022:	464a      	mov	r2, r9
 8015024:	461d      	mov	r5, r3
 8015026:	4621      	mov	r1, r4
 8015028:	4633      	mov	r3, r6
 801502a:	47a8      	blx	r5
 801502c:	44d1      	add	r9, sl
 801502e:	445c      	add	r4, fp
 8015030:	e7f1      	b.n	8015016 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8015032:	bf00      	nop
 8015034:	2000d40c 	.word	0x2000d40c
 8015038:	08023e9f 	.word	0x08023e9f
 801503c:	0802470f 	.word	0x0802470f
 8015040:	080240a8 	.word	0x080240a8
 8015044:	08023f51 	.word	0x08023f51
 8015048:	08023fa6 	.word	0x08023fa6
 801504c:	2000d406 	.word	0x2000d406
 8015050:	2000d408 	.word	0x2000d408
 8015054:	08023fe4 	.word	0x08023fe4

08015058 <_ZN8touchgfx8LCD16bppC1Ev>:
 8015058:	2200      	movs	r2, #0
 801505a:	4910      	ldr	r1, [pc, #64]	; (801509c <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 801505c:	6042      	str	r2, [r0, #4]
 801505e:	6001      	str	r1, [r0, #0]
 8015060:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8015064:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8015068:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801506c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8015070:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8015074:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8015078:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801507c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8015080:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8015084:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8015088:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801508c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8015090:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8015094:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8015098:	4770      	bx	lr
 801509a:	bf00      	nop
 801509c:	08024388 	.word	0x08024388

080150a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80150a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150a4:	460d      	mov	r5, r1
 80150a6:	b08b      	sub	sp, #44	; 0x2c
 80150a8:	4604      	mov	r4, r0
 80150aa:	6808      	ldr	r0, [r1, #0]
 80150ac:	6849      	ldr	r1, [r1, #4]
 80150ae:	4699      	mov	r9, r3
 80150b0:	ab06      	add	r3, sp, #24
 80150b2:	c303      	stmia	r3!, {r0, r1}
 80150b4:	6810      	ldr	r0, [r2, #0]
 80150b6:	6851      	ldr	r1, [r2, #4]
 80150b8:	ab08      	add	r3, sp, #32
 80150ba:	c303      	stmia	r3!, {r0, r1}
 80150bc:	a806      	add	r0, sp, #24
 80150be:	f7f9 ffa9 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80150c2:	4629      	mov	r1, r5
 80150c4:	a808      	add	r0, sp, #32
 80150c6:	f7f9 ff8d 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80150ca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80150ce:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80150d2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80150d6:	4d5f      	ldr	r5, [pc, #380]	; (8015254 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 80150d8:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80150dc:	6828      	ldr	r0, [r5, #0]
 80150de:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 80150e2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80150e6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80150ea:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80150ee:	440a      	add	r2, r1
 80150f0:	f8ad 2020 	strh.w	r2, [sp, #32]
 80150f4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80150f8:	4413      	add	r3, r2
 80150fa:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80150fe:	6803      	ldr	r3, [r0, #0]
 8015100:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015102:	4798      	blx	r3
 8015104:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015108:	d118      	bne.n	801513c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 801510a:	f010 0f20 	tst.w	r0, #32
 801510e:	6828      	ldr	r0, [r5, #0]
 8015110:	d017      	beq.n	8015142 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8015112:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8015116:	6801      	ldr	r1, [r0, #0]
 8015118:	9502      	str	r5, [sp, #8]
 801511a:	b2b6      	uxth	r6, r6
 801511c:	fa1f f588 	uxth.w	r5, r8
 8015120:	f8cd 900c 	str.w	r9, [sp, #12]
 8015124:	9601      	str	r6, [sp, #4]
 8015126:	9500      	str	r5, [sp, #0]
 8015128:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801512a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801512e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8015132:	4621      	mov	r1, r4
 8015134:	47a8      	blx	r5
 8015136:	b00b      	add	sp, #44	; 0x2c
 8015138:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801513c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8015140:	e7e5      	b.n	801510e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8015142:	6803      	ldr	r3, [r0, #0]
 8015144:	6a1b      	ldr	r3, [r3, #32]
 8015146:	4798      	blx	r3
 8015148:	4a43      	ldr	r2, [pc, #268]	; (8015258 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 801514a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801514e:	f8b2 e000 	ldrh.w	lr, [r2]
 8015152:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8015156:	fb0e 1303 	mla	r3, lr, r3, r1
 801515a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801515e:	fb0e fe06 	mul.w	lr, lr, r6
 8015162:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8015166:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 801516a:	9305      	str	r3, [sp, #20]
 801516c:	4692      	mov	sl, r2
 801516e:	4570      	cmp	r0, lr
 8015170:	d26a      	bcs.n	8015248 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 8015172:	9b05      	ldr	r3, [sp, #20]
 8015174:	4621      	mov	r1, r4
 8015176:	eb00 0b03 	add.w	fp, r0, r3
 801517a:	4558      	cmp	r0, fp
 801517c:	d257      	bcs.n	801522e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 801517e:	f851 4b04 	ldr.w	r4, [r1], #4
 8015182:	0e22      	lsrs	r2, r4, #24
 8015184:	d012      	beq.n	80151ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8015186:	2aff      	cmp	r2, #255	; 0xff
 8015188:	ea4f 2714 	mov.w	r7, r4, lsr #8
 801518c:	d110      	bne.n	80151b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 801518e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015192:	d10d      	bne.n	80151b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8015194:	0963      	lsrs	r3, r4, #5
 8015196:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801519a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801519e:	f027 0707 	bic.w	r7, r7, #7
 80151a2:	431f      	orrs	r7, r3
 80151a4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80151a8:	433c      	orrs	r4, r7
 80151aa:	8004      	strh	r4, [r0, #0]
 80151ac:	3002      	adds	r0, #2
 80151ae:	e7e4      	b.n	801517a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 80151b0:	fb09 f302 	mul.w	r3, r9, r2
 80151b4:	1c5a      	adds	r2, r3, #1
 80151b6:	f8b0 c000 	ldrh.w	ip, [r0]
 80151ba:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80151be:	1212      	asrs	r2, r2, #8
 80151c0:	b293      	uxth	r3, r2
 80151c2:	ea4f 262c 	mov.w	r6, ip, asr #8
 80151c6:	f3c4 4507 	ubfx	r5, r4, #16, #8
 80151ca:	43d2      	mvns	r2, r2
 80151cc:	b2d2      	uxtb	r2, r2
 80151ce:	fb15 f503 	smulbb	r5, r5, r3
 80151d2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80151d6:	fb06 5602 	mla	r6, r6, r2, r5
 80151da:	b2ff      	uxtb	r7, r7
 80151dc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80151e0:	b2e4      	uxtb	r4, r4
 80151e2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80151e6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80151ea:	fb17 f703 	smulbb	r7, r7, r3
 80151ee:	fa5f fc8c 	uxtb.w	ip, ip
 80151f2:	fb14 f403 	smulbb	r4, r4, r3
 80151f6:	fb05 7702 	mla	r7, r5, r2, r7
 80151fa:	fb0c 4202 	mla	r2, ip, r2, r4
 80151fe:	b2b6      	uxth	r6, r6
 8015200:	b2bf      	uxth	r7, r7
 8015202:	b292      	uxth	r2, r2
 8015204:	1c73      	adds	r3, r6, #1
 8015206:	f102 0c01 	add.w	ip, r2, #1
 801520a:	1c7d      	adds	r5, r7, #1
 801520c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015210:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015214:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8015218:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801521c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015220:	097f      	lsrs	r7, r7, #5
 8015222:	4316      	orrs	r6, r2
 8015224:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015228:	433e      	orrs	r6, r7
 801522a:	8006      	strh	r6, [r0, #0]
 801522c:	e7be      	b.n	80151ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 801522e:	f8ba 3000 	ldrh.w	r3, [sl]
 8015232:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8015236:	eba3 0308 	sub.w	r3, r3, r8
 801523a:	eba4 0408 	sub.w	r4, r4, r8
 801523e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015242:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8015246:	e792      	b.n	801516e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8015248:	4b02      	ldr	r3, [pc, #8]	; (8015254 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 801524a:	6818      	ldr	r0, [r3, #0]
 801524c:	6803      	ldr	r3, [r0, #0]
 801524e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015250:	4798      	blx	r3
 8015252:	e770      	b.n	8015136 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8015254:	2000d40c 	.word	0x2000d40c
 8015258:	2000d406 	.word	0x2000d406

0801525c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801525c:	b570      	push	{r4, r5, r6, lr}
 801525e:	9d04      	ldr	r5, [sp, #16]
 8015260:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8015264:	460c      	mov	r4, r1
 8015266:	4619      	mov	r1, r3
 8015268:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801526c:	2a0d      	cmp	r2, #13
 801526e:	d820      	bhi.n	80152b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8015270:	e8df f002 	tbb	[pc, r2]
 8015274:	18121807 	.word	0x18121807
 8015278:	18181818 	.word	0x18181818
 801527c:	18181818 	.word	0x18181818
 8015280:	1818      	.short	0x1818
 8015282:	6802      	ldr	r2, [r0, #0]
 8015284:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8015288:	68d6      	ldr	r6, [r2, #12]
 801528a:	462b      	mov	r3, r5
 801528c:	460a      	mov	r2, r1
 801528e:	46b4      	mov	ip, r6
 8015290:	4621      	mov	r1, r4
 8015292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015296:	4760      	bx	ip
 8015298:	462a      	mov	r2, r5
 801529a:	4620      	mov	r0, r4
 801529c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80152a0:	f7ff befe 	b.w	80150a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80152a4:	4b03      	ldr	r3, [pc, #12]	; (80152b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 80152a6:	4a04      	ldr	r2, [pc, #16]	; (80152b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 80152a8:	4804      	ldr	r0, [pc, #16]	; (80152bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 80152aa:	f240 21c1 	movw	r1, #705	; 0x2c1
 80152ae:	f00a f8a1 	bl	801f3f4 <__assert_func>
 80152b2:	bd70      	pop	{r4, r5, r6, pc}
 80152b4:	08024044 	.word	0x08024044
 80152b8:	08024795 	.word	0x08024795
 80152bc:	080240a8 	.word	0x080240a8

080152c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80152c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152c4:	b093      	sub	sp, #76	; 0x4c
 80152c6:	880f      	ldrh	r7, [r1, #0]
 80152c8:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80152cc:	4604      	mov	r4, r0
 80152ce:	4688      	mov	r8, r1
 80152d0:	4616      	mov	r6, r2
 80152d2:	b12f      	cbz	r7, 80152e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 80152d4:	4b6f      	ldr	r3, [pc, #444]	; (8015494 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80152d6:	4a70      	ldr	r2, [pc, #448]	; (8015498 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80152d8:	4870      	ldr	r0, [pc, #448]	; (801549c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80152da:	21e2      	movs	r1, #226	; 0xe2
 80152dc:	f00a f88a 	bl	801f3f4 <__assert_func>
 80152e0:	6810      	ldr	r0, [r2, #0]
 80152e2:	6851      	ldr	r1, [r2, #4]
 80152e4:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 80154a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 80152e8:	ad0e      	add	r5, sp, #56	; 0x38
 80152ea:	c503      	stmia	r5!, {r0, r1}
 80152ec:	6818      	ldr	r0, [r3, #0]
 80152ee:	6859      	ldr	r1, [r3, #4]
 80152f0:	ad10      	add	r5, sp, #64	; 0x40
 80152f2:	c503      	stmia	r5!, {r0, r1}
 80152f4:	a80e      	add	r0, sp, #56	; 0x38
 80152f6:	f7f9 fe8d 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80152fa:	4631      	mov	r1, r6
 80152fc:	a810      	add	r0, sp, #64	; 0x40
 80152fe:	f7f9 fe71 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015302:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8015306:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801530a:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801530e:	f8db 0000 	ldr.w	r0, [fp]
 8015312:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 8015316:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801531a:	4e61      	ldr	r6, [pc, #388]	; (80154a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 801531c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015320:	440c      	add	r4, r1
 8015322:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8015326:	440a      	add	r2, r1
 8015328:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801532c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015330:	4413      	add	r3, r2
 8015332:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8015336:	6803      	ldr	r3, [r0, #0]
 8015338:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801533c:	4798      	blx	r3
 801533e:	2801      	cmp	r0, #1
 8015340:	d11d      	bne.n	801537e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8015342:	220b      	movs	r2, #11
 8015344:	9708      	str	r7, [sp, #32]
 8015346:	9207      	str	r2, [sp, #28]
 8015348:	8832      	ldrh	r2, [r6, #0]
 801534a:	f8cd a010 	str.w	sl, [sp, #16]
 801534e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8015352:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8015356:	9203      	str	r2, [sp, #12]
 8015358:	fa1f f289 	uxth.w	r2, r9
 801535c:	9201      	str	r2, [sp, #4]
 801535e:	b2ad      	uxth	r5, r5
 8015360:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8015364:	9200      	str	r2, [sp, #0]
 8015366:	9502      	str	r5, [sp, #8]
 8015368:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801536c:	f8db 0000 	ldr.w	r0, [fp]
 8015370:	4642      	mov	r2, r8
 8015372:	4621      	mov	r1, r4
 8015374:	f7f5 ff6c 	bl	800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8015378:	b013      	add	sp, #76	; 0x4c
 801537a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801537e:	f8db 0000 	ldr.w	r0, [fp]
 8015382:	6803      	ldr	r3, [r0, #0]
 8015384:	6a1b      	ldr	r3, [r3, #32]
 8015386:	4798      	blx	r3
 8015388:	8832      	ldrh	r2, [r6, #0]
 801538a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801538e:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8015392:	960d      	str	r6, [sp, #52]	; 0x34
 8015394:	fb02 1303 	mla	r3, r2, r3, r1
 8015398:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801539c:	4355      	muls	r5, r2
 801539e:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 80153a2:	930c      	str	r3, [sp, #48]	; 0x30
 80153a4:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80153a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80153aa:	f04f 0e04 	mov.w	lr, #4
 80153ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80153b0:	4298      	cmp	r0, r3
 80153b2:	d269      	bcs.n	8015488 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80153b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80153b6:	4621      	mov	r1, r4
 80153b8:	eb00 0b03 	add.w	fp, r0, r3
 80153bc:	4558      	cmp	r0, fp
 80153be:	460b      	mov	r3, r1
 80153c0:	d256      	bcs.n	8015470 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 80153c2:	781b      	ldrb	r3, [r3, #0]
 80153c4:	fb1e e303 	smlabb	r3, lr, r3, lr
 80153c8:	3101      	adds	r1, #1
 80153ca:	f858 2003 	ldr.w	r2, [r8, r3]
 80153ce:	0e14      	lsrs	r4, r2, #24
 80153d0:	d012      	beq.n	80153f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 80153d2:	2cff      	cmp	r4, #255	; 0xff
 80153d4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80153d8:	d110      	bne.n	80153fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 80153da:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80153de:	d10d      	bne.n	80153fc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 80153e0:	0953      	lsrs	r3, r2, #5
 80153e2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80153e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80153ea:	f026 0607 	bic.w	r6, r6, #7
 80153ee:	431e      	orrs	r6, r3
 80153f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80153f4:	4332      	orrs	r2, r6
 80153f6:	8002      	strh	r2, [r0, #0]
 80153f8:	3002      	adds	r0, #2
 80153fa:	e7df      	b.n	80153bc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 80153fc:	fb0a f404 	mul.w	r4, sl, r4
 8015400:	1c63      	adds	r3, r4, #1
 8015402:	8807      	ldrh	r7, [r0, #0]
 8015404:	eb03 2324 	add.w	r3, r3, r4, asr #8
 8015408:	121b      	asrs	r3, r3, #8
 801540a:	fa1f fc83 	uxth.w	ip, r3
 801540e:	123d      	asrs	r5, r7, #8
 8015410:	f3c2 4407 	ubfx	r4, r2, #16, #8
 8015414:	43db      	mvns	r3, r3
 8015416:	b2db      	uxtb	r3, r3
 8015418:	fb14 f40c 	smulbb	r4, r4, ip
 801541c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015420:	fb05 4503 	mla	r5, r5, r3, r4
 8015424:	b2d2      	uxtb	r2, r2
 8015426:	10fc      	asrs	r4, r7, #3
 8015428:	00ff      	lsls	r7, r7, #3
 801542a:	b2ff      	uxtb	r7, r7
 801542c:	fb12 f20c 	smulbb	r2, r2, ip
 8015430:	fb07 2203 	mla	r2, r7, r3, r2
 8015434:	b2f6      	uxtb	r6, r6
 8015436:	b2ad      	uxth	r5, r5
 8015438:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801543c:	b292      	uxth	r2, r2
 801543e:	fb16 f60c 	smulbb	r6, r6, ip
 8015442:	fb04 6603 	mla	r6, r4, r3, r6
 8015446:	1c6b      	adds	r3, r5, #1
 8015448:	1c54      	adds	r4, r2, #1
 801544a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801544e:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8015452:	b2b6      	uxth	r6, r6
 8015454:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015458:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801545c:	4325      	orrs	r5, r4
 801545e:	1c74      	adds	r4, r6, #1
 8015460:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8015464:	0976      	lsrs	r6, r6, #5
 8015466:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801546a:	4335      	orrs	r5, r6
 801546c:	8005      	strh	r5, [r0, #0]
 801546e:	e7c3      	b.n	80153f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8015470:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015472:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 8015476:	881b      	ldrh	r3, [r3, #0]
 8015478:	eba4 0409 	sub.w	r4, r4, r9
 801547c:	eba3 0309 	sub.w	r3, r3, r9
 8015480:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015484:	440c      	add	r4, r1
 8015486:	e792      	b.n	80153ae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8015488:	4b06      	ldr	r3, [pc, #24]	; (80154a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801548a:	6818      	ldr	r0, [r3, #0]
 801548c:	6803      	ldr	r3, [r0, #0]
 801548e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015490:	4798      	blx	r3
 8015492:	e771      	b.n	8015378 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8015494:	08023e4f 	.word	0x08023e4f
 8015498:	08024566 	.word	0x08024566
 801549c:	080240a8 	.word	0x080240a8
 80154a0:	2000d406 	.word	0x2000d406
 80154a4:	2000d40c 	.word	0x2000d40c

080154a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80154a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154ac:	4614      	mov	r4, r2
 80154ae:	880a      	ldrh	r2, [r1, #0]
 80154b0:	b091      	sub	sp, #68	; 0x44
 80154b2:	2a02      	cmp	r2, #2
 80154b4:	4607      	mov	r7, r0
 80154b6:	4689      	mov	r9, r1
 80154b8:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 80154bc:	d006      	beq.n	80154cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 80154be:	4b77      	ldr	r3, [pc, #476]	; (801569c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 80154c0:	4a77      	ldr	r2, [pc, #476]	; (80156a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 80154c2:	4878      	ldr	r0, [pc, #480]	; (80156a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 80154c4:	f240 113b 	movw	r1, #315	; 0x13b
 80154c8:	f009 ff94 	bl	801f3f4 <__assert_func>
 80154cc:	2e00      	cmp	r6, #0
 80154ce:	d04b      	beq.n	8015568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 80154d0:	6820      	ldr	r0, [r4, #0]
 80154d2:	6861      	ldr	r1, [r4, #4]
 80154d4:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 80156ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 80154d8:	ad0c      	add	r5, sp, #48	; 0x30
 80154da:	c503      	stmia	r5!, {r0, r1}
 80154dc:	6818      	ldr	r0, [r3, #0]
 80154de:	6859      	ldr	r1, [r3, #4]
 80154e0:	ad0e      	add	r5, sp, #56	; 0x38
 80154e2:	c503      	stmia	r5!, {r0, r1}
 80154e4:	a80c      	add	r0, sp, #48	; 0x30
 80154e6:	f7f9 fd95 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80154ea:	4621      	mov	r1, r4
 80154ec:	a80e      	add	r0, sp, #56	; 0x38
 80154ee:	f7f9 fd79 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80154f2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80154f6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80154fa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80154fe:	f8da 0000 	ldr.w	r0, [sl]
 8015502:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015506:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801550a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801550e:	187c      	adds	r4, r7, r1
 8015510:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8015514:	4f64      	ldr	r7, [pc, #400]	; (80156a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8015516:	440a      	add	r2, r1
 8015518:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801551c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015520:	4413      	add	r3, r2
 8015522:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8015526:	6803      	ldr	r3, [r0, #0]
 8015528:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801552c:	4798      	blx	r3
 801552e:	2801      	cmp	r0, #1
 8015530:	d11d      	bne.n	801556e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8015532:	2200      	movs	r2, #0
 8015534:	210b      	movs	r1, #11
 8015536:	e9cd 1207 	strd	r1, r2, [sp, #28]
 801553a:	8839      	ldrh	r1, [r7, #0]
 801553c:	9604      	str	r6, [sp, #16]
 801553e:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8015542:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8015546:	9203      	str	r2, [sp, #12]
 8015548:	fa1f f288 	uxth.w	r2, r8
 801554c:	9201      	str	r2, [sp, #4]
 801554e:	b2ad      	uxth	r5, r5
 8015550:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015554:	9200      	str	r2, [sp, #0]
 8015556:	9502      	str	r5, [sp, #8]
 8015558:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801555c:	f8da 0000 	ldr.w	r0, [sl]
 8015560:	464a      	mov	r2, r9
 8015562:	4621      	mov	r1, r4
 8015564:	f7f5 fe74 	bl	800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8015568:	b011      	add	sp, #68	; 0x44
 801556a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801556e:	f8da 0000 	ldr.w	r0, [sl]
 8015572:	6803      	ldr	r3, [r0, #0]
 8015574:	6a1b      	ldr	r3, [r3, #32]
 8015576:	4798      	blx	r3
 8015578:	8839      	ldrh	r1, [r7, #0]
 801557a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801557e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8015582:	2eff      	cmp	r6, #255	; 0xff
 8015584:	fb01 2303 	mla	r3, r1, r3, r2
 8015588:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801558c:	f109 0204 	add.w	r2, r9, #4
 8015590:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8015594:	fb05 f501 	mul.w	r5, r5, r1
 8015598:	d05f      	beq.n	801565a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 801559a:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 801559e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80155a2:	b2b6      	uxth	r6, r6
 80155a4:	fa1f f989 	uxth.w	r9, r9
 80155a8:	970b      	str	r7, [sp, #44]	; 0x2c
 80155aa:	42a8      	cmp	r0, r5
 80155ac:	d26f      	bcs.n	801568e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 80155ae:	eb00 010b 	add.w	r1, r0, fp
 80155b2:	4288      	cmp	r0, r1
 80155b4:	4623      	mov	r3, r4
 80155b6:	d244      	bcs.n	8015642 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 80155b8:	781b      	ldrb	r3, [r3, #0]
 80155ba:	8807      	ldrh	r7, [r0, #0]
 80155bc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80155c0:	ea4f 2c27 	mov.w	ip, r7, asr #8
 80155c4:	ea4f 2e23 	mov.w	lr, r3, asr #8
 80155c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80155cc:	fb1c fc09 	smulbb	ip, ip, r9
 80155d0:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 80155d4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80155d8:	00ff      	lsls	r7, r7, #3
 80155da:	fb0e ce06 	mla	lr, lr, r6, ip
 80155de:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80155e2:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 80155e6:	b2ff      	uxtb	r7, r7
 80155e8:	00db      	lsls	r3, r3, #3
 80155ea:	fa1f fe8e 	uxth.w	lr, lr
 80155ee:	fb1a fa09 	smulbb	sl, sl, r9
 80155f2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80155f6:	b2db      	uxtb	r3, r3
 80155f8:	fb17 f709 	smulbb	r7, r7, r9
 80155fc:	fb0c ac06 	mla	ip, ip, r6, sl
 8015600:	fb03 7306 	mla	r3, r3, r6, r7
 8015604:	f10e 0a01 	add.w	sl, lr, #1
 8015608:	b29b      	uxth	r3, r3
 801560a:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 801560e:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 8015612:	f103 0e01 	add.w	lr, r3, #1
 8015616:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 801561a:	fa1f fc8c 	uxth.w	ip, ip
 801561e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015622:	ea4a 0e03 	orr.w	lr, sl, r3
 8015626:	f10c 0a01 	add.w	sl, ip, #1
 801562a:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 801562e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8015632:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8015636:	ea4e 0e0c 	orr.w	lr, lr, ip
 801563a:	3401      	adds	r4, #1
 801563c:	f820 eb02 	strh.w	lr, [r0], #2
 8015640:	e7b7      	b.n	80155b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 8015642:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015644:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8015648:	881b      	ldrh	r3, [r3, #0]
 801564a:	eba1 0108 	sub.w	r1, r1, r8
 801564e:	eba3 0308 	sub.w	r3, r3, r8
 8015652:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015656:	440c      	add	r4, r1
 8015658:	e7a7      	b.n	80155aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 801565a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801565e:	42a8      	cmp	r0, r5
 8015660:	d215      	bcs.n	801568e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8015662:	eb00 010b 	add.w	r1, r0, fp
 8015666:	4288      	cmp	r0, r1
 8015668:	d206      	bcs.n	8015678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 801566a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801566e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8015672:	f820 3b02 	strh.w	r3, [r0], #2
 8015676:	e7f6      	b.n	8015666 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8015678:	883b      	ldrh	r3, [r7, #0]
 801567a:	eba3 0308 	sub.w	r3, r3, r8
 801567e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015682:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8015686:	eba3 0308 	sub.w	r3, r3, r8
 801568a:	441c      	add	r4, r3
 801568c:	e7e7      	b.n	801565e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 801568e:	4b07      	ldr	r3, [pc, #28]	; (80156ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8015690:	6818      	ldr	r0, [r3, #0]
 8015692:	6803      	ldr	r3, [r0, #0]
 8015694:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015696:	4798      	blx	r3
 8015698:	e766      	b.n	8015568 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801569a:	bf00      	nop
 801569c:	08023d0d 	.word	0x08023d0d
 80156a0:	080243d0 	.word	0x080243d0
 80156a4:	080240a8 	.word	0x080240a8
 80156a8:	2000d406 	.word	0x2000d406
 80156ac:	2000d40c 	.word	0x2000d40c

080156b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80156b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80156b4:	4614      	mov	r4, r2
 80156b6:	880a      	ldrh	r2, [r1, #0]
 80156b8:	b091      	sub	sp, #68	; 0x44
 80156ba:	2a01      	cmp	r2, #1
 80156bc:	4606      	mov	r6, r0
 80156be:	4688      	mov	r8, r1
 80156c0:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 80156c4:	d006      	beq.n	80156d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 80156c6:	4b7c      	ldr	r3, [pc, #496]	; (80158b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 80156c8:	4a7c      	ldr	r2, [pc, #496]	; (80158bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 80156ca:	487d      	ldr	r0, [pc, #500]	; (80158c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 80156cc:	f240 1197 	movw	r1, #407	; 0x197
 80156d0:	f009 fe90 	bl	801f3f4 <__assert_func>
 80156d4:	2f00      	cmp	r7, #0
 80156d6:	d04b      	beq.n	8015770 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80156d8:	6820      	ldr	r0, [r4, #0]
 80156da:	6861      	ldr	r1, [r4, #4]
 80156dc:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80158cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80156e0:	ad0c      	add	r5, sp, #48	; 0x30
 80156e2:	c503      	stmia	r5!, {r0, r1}
 80156e4:	6818      	ldr	r0, [r3, #0]
 80156e6:	6859      	ldr	r1, [r3, #4]
 80156e8:	ad0e      	add	r5, sp, #56	; 0x38
 80156ea:	c503      	stmia	r5!, {r0, r1}
 80156ec:	a80c      	add	r0, sp, #48	; 0x30
 80156ee:	f7f9 fc91 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80156f2:	4621      	mov	r1, r4
 80156f4:	a80e      	add	r0, sp, #56	; 0x38
 80156f6:	f7f9 fc75 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80156fa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80156fe:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8015702:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015706:	f8da 0000 	ldr.w	r0, [sl]
 801570a:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 801570e:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 8015712:	fb11 2103 	smlabb	r1, r1, r3, r2
 8015716:	1874      	adds	r4, r6, r1
 8015718:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801571c:	4e69      	ldr	r6, [pc, #420]	; (80158c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 801571e:	440a      	add	r2, r1
 8015720:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8015724:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8015728:	4413      	add	r3, r2
 801572a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801572e:	6803      	ldr	r3, [r0, #0]
 8015730:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015734:	4798      	blx	r3
 8015736:	2801      	cmp	r0, #1
 8015738:	d11d      	bne.n	8015776 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 801573a:	220b      	movs	r2, #11
 801573c:	2100      	movs	r1, #0
 801573e:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8015742:	8832      	ldrh	r2, [r6, #0]
 8015744:	9704      	str	r7, [sp, #16]
 8015746:	e9cd 0205 	strd	r0, r2, [sp, #20]
 801574a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801574e:	9203      	str	r2, [sp, #12]
 8015750:	fa1f f289 	uxth.w	r2, r9
 8015754:	9202      	str	r2, [sp, #8]
 8015756:	b2ad      	uxth	r5, r5
 8015758:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801575c:	9200      	str	r2, [sp, #0]
 801575e:	9501      	str	r5, [sp, #4]
 8015760:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8015764:	f8da 0000 	ldr.w	r0, [sl]
 8015768:	4642      	mov	r2, r8
 801576a:	4621      	mov	r1, r4
 801576c:	f7f5 fd70 	bl	800b250 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8015770:	b011      	add	sp, #68	; 0x44
 8015772:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015776:	f8da 0000 	ldr.w	r0, [sl]
 801577a:	6803      	ldr	r3, [r0, #0]
 801577c:	6a1b      	ldr	r3, [r3, #32]
 801577e:	4798      	blx	r3
 8015780:	8832      	ldrh	r2, [r6, #0]
 8015782:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8015786:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801578a:	2fff      	cmp	r7, #255	; 0xff
 801578c:	fb02 1303 	mla	r3, r2, r3, r1
 8015790:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015794:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 8015798:	fb09 f902 	mul.w	r9, r9, r2
 801579c:	d056      	beq.n	801584c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 801579e:	ea6f 0c07 	mvn.w	ip, r7
 80157a2:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 80157a6:	b2bb      	uxth	r3, r7
 80157a8:	fa5f fc8c 	uxtb.w	ip, ip
 80157ac:	960b      	str	r6, [sp, #44]	; 0x2c
 80157ae:	4548      	cmp	r0, r9
 80157b0:	d27b      	bcs.n	80158aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 80157b2:	eb00 0a0e 	add.w	sl, r0, lr
 80157b6:	4550      	cmp	r0, sl
 80157b8:	4622      	mov	r2, r4
 80157ba:	d23d      	bcs.n	8015838 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 80157bc:	7811      	ldrb	r1, [r2, #0]
 80157be:	2604      	movs	r6, #4
 80157c0:	2203      	movs	r2, #3
 80157c2:	fb12 6101 	smlabb	r1, r2, r1, r6
 80157c6:	eb08 0b01 	add.w	fp, r8, r1
 80157ca:	8802      	ldrh	r2, [r0, #0]
 80157cc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80157d0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80157d4:	f818 1001 	ldrb.w	r1, [r8, r1]
 80157d8:	1217      	asrs	r7, r2, #8
 80157da:	fb16 f603 	smulbb	r6, r6, r3
 80157de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80157e2:	fb07 670c 	mla	r7, r7, ip, r6
 80157e6:	10d6      	asrs	r6, r2, #3
 80157e8:	00d2      	lsls	r2, r2, #3
 80157ea:	b2d2      	uxtb	r2, r2
 80157ec:	fb1b fb03 	smulbb	fp, fp, r3
 80157f0:	fb12 f20c 	smulbb	r2, r2, ip
 80157f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80157f8:	b2bf      	uxth	r7, r7
 80157fa:	fb06 b60c 	mla	r6, r6, ip, fp
 80157fe:	fb01 2103 	mla	r1, r1, r3, r2
 8015802:	b2b6      	uxth	r6, r6
 8015804:	b289      	uxth	r1, r1
 8015806:	1c7a      	adds	r2, r7, #1
 8015808:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801580c:	f106 0b01 	add.w	fp, r6, #1
 8015810:	1c4a      	adds	r2, r1, #1
 8015812:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8015816:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801581a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801581e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015822:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015826:	4317      	orrs	r7, r2
 8015828:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801582c:	ea47 070b 	orr.w	r7, r7, fp
 8015830:	3401      	adds	r4, #1
 8015832:	f820 7b02 	strh.w	r7, [r0], #2
 8015836:	e7be      	b.n	80157b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8015838:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801583a:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 801583e:	8812      	ldrh	r2, [r2, #0]
 8015840:	1b49      	subs	r1, r1, r5
 8015842:	1b52      	subs	r2, r2, r5
 8015844:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015848:	440c      	add	r4, r1
 801584a:	e7b0      	b.n	80157ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 801584c:	491e      	ldr	r1, [pc, #120]	; (80158c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801584e:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8015852:	2203      	movs	r2, #3
 8015854:	2704      	movs	r7, #4
 8015856:	4548      	cmp	r0, r9
 8015858:	d227      	bcs.n	80158aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 801585a:	eb00 0c0e 	add.w	ip, r0, lr
 801585e:	4560      	cmp	r0, ip
 8015860:	4623      	mov	r3, r4
 8015862:	d219      	bcs.n	8015898 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8015864:	f893 a000 	ldrb.w	sl, [r3]
 8015868:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 801586c:	eb08 0b0a 	add.w	fp, r8, sl
 8015870:	f818 a00a 	ldrb.w	sl, [r8, sl]
 8015874:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8015878:	f89b b001 	ldrb.w	fp, [fp, #1]
 801587c:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8015880:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8015884:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015888:	ea43 030b 	orr.w	r3, r3, fp
 801588c:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 8015890:	3401      	adds	r4, #1
 8015892:	f820 3b02 	strh.w	r3, [r0], #2
 8015896:	e7e2      	b.n	801585e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 8015898:	8833      	ldrh	r3, [r6, #0]
 801589a:	1b5b      	subs	r3, r3, r5
 801589c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80158a0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80158a4:	1b5b      	subs	r3, r3, r5
 80158a6:	441c      	add	r4, r3
 80158a8:	e7d5      	b.n	8015856 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 80158aa:	4b08      	ldr	r3, [pc, #32]	; (80158cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80158ac:	6818      	ldr	r0, [r3, #0]
 80158ae:	6803      	ldr	r3, [r0, #0]
 80158b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80158b2:	4798      	blx	r3
 80158b4:	e75c      	b.n	8015770 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80158b6:	bf00      	nop
 80158b8:	08023d5b 	.word	0x08023d5b
 80158bc:	08024459 	.word	0x08024459
 80158c0:	080240a8 	.word	0x080240a8
 80158c4:	2000d406 	.word	0x2000d406
 80158c8:	fffff800 	.word	0xfffff800
 80158cc:	2000d40c 	.word	0x2000d40c

080158d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80158d0:	b430      	push	{r4, r5}
 80158d2:	780d      	ldrb	r5, [r1, #0]
 80158d4:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80158d8:	2d01      	cmp	r5, #1
 80158da:	d00a      	beq.n	80158f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80158dc:	d305      	bcc.n	80158ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80158de:	2d02      	cmp	r5, #2
 80158e0:	d10b      	bne.n	80158fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80158e2:	9402      	str	r4, [sp, #8]
 80158e4:	bc30      	pop	{r4, r5}
 80158e6:	f7ff bddf 	b.w	80154a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80158ea:	9402      	str	r4, [sp, #8]
 80158ec:	bc30      	pop	{r4, r5}
 80158ee:	f7ff bce7 	b.w	80152c0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80158f2:	9402      	str	r4, [sp, #8]
 80158f4:	bc30      	pop	{r4, r5}
 80158f6:	f7ff bedb 	b.w	80156b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80158fa:	bc30      	pop	{r4, r5}
 80158fc:	4770      	bx	lr
	...

08015900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8015900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015904:	4604      	mov	r4, r0
 8015906:	b087      	sub	sp, #28
 8015908:	6810      	ldr	r0, [r2, #0]
 801590a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801590e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8015b48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8015912:	460e      	mov	r6, r1
 8015914:	6851      	ldr	r1, [r2, #4]
 8015916:	ad02      	add	r5, sp, #8
 8015918:	c503      	stmia	r5!, {r0, r1}
 801591a:	6818      	ldr	r0, [r3, #0]
 801591c:	6859      	ldr	r1, [r3, #4]
 801591e:	ad04      	add	r5, sp, #16
 8015920:	4617      	mov	r7, r2
 8015922:	c503      	stmia	r5!, {r0, r1}
 8015924:	a802      	add	r0, sp, #8
 8015926:	f7f9 fb75 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801592a:	4639      	mov	r1, r7
 801592c:	a804      	add	r0, sp, #16
 801592e:	f7f9 fb59 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015932:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015936:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801593a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801593e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8015942:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8015946:	fb11 2103 	smlabb	r1, r1, r3, r2
 801594a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801594e:	440e      	add	r6, r1
 8015950:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015954:	440a      	add	r2, r1
 8015956:	f8ad 2010 	strh.w	r2, [sp, #16]
 801595a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801595e:	4413      	add	r3, r2
 8015960:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015964:	4b77      	ldr	r3, [pc, #476]	; (8015b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015966:	6818      	ldr	r0, [r3, #0]
 8015968:	6803      	ldr	r3, [r0, #0]
 801596a:	6a1b      	ldr	r3, [r3, #32]
 801596c:	4798      	blx	r3
 801596e:	f8b9 b000 	ldrh.w	fp, [r9]
 8015972:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015976:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801597a:	fb0b 2303 	mla	r3, fp, r3, r2
 801597e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015982:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015986:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801598a:	fb05 f50b 	mul.w	r5, r5, fp
 801598e:	9300      	str	r3, [sp, #0]
 8015990:	d068      	beq.n	8015a64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 8015992:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8015996:	4558      	cmp	r0, fp
 8015998:	f080 80cc 	bcs.w	8015b34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801599c:	9b00      	ldr	r3, [sp, #0]
 801599e:	18c3      	adds	r3, r0, r3
 80159a0:	9301      	str	r3, [sp, #4]
 80159a2:	4631      	mov	r1, r6
 80159a4:	9b01      	ldr	r3, [sp, #4]
 80159a6:	4298      	cmp	r0, r3
 80159a8:	d24e      	bcs.n	8015a48 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 80159aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 80159ae:	2a00      	cmp	r2, #0
 80159b0:	d047      	beq.n	8015a42 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80159b2:	fb0a f202 	mul.w	r2, sl, r2
 80159b6:	1c53      	adds	r3, r2, #1
 80159b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80159bc:	121b      	asrs	r3, r3, #8
 80159be:	d040      	beq.n	8015a42 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80159c0:	8802      	ldrh	r2, [r0, #0]
 80159c2:	f8b4 c000 	ldrh.w	ip, [r4]
 80159c6:	b29e      	uxth	r6, r3
 80159c8:	1215      	asrs	r5, r2, #8
 80159ca:	43db      	mvns	r3, r3
 80159cc:	b2db      	uxtb	r3, r3
 80159ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 80159d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80159d6:	fb15 f503 	smulbb	r5, r5, r3
 80159da:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80159de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80159e2:	00d2      	lsls	r2, r2, #3
 80159e4:	fb07 5706 	mla	r7, r7, r6, r5
 80159e8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80159ec:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80159f0:	b2d2      	uxtb	r2, r2
 80159f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80159f6:	fb1e fe03 	smulbb	lr, lr, r3
 80159fa:	fb12 f203 	smulbb	r2, r2, r3
 80159fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015a02:	fa5f fc8c 	uxtb.w	ip, ip
 8015a06:	fb05 e506 	mla	r5, r5, r6, lr
 8015a0a:	fb0c 2c06 	mla	ip, ip, r6, r2
 8015a0e:	b2bf      	uxth	r7, r7
 8015a10:	b2ad      	uxth	r5, r5
 8015a12:	fa1f fc8c 	uxth.w	ip, ip
 8015a16:	1c7b      	adds	r3, r7, #1
 8015a18:	f10c 0601 	add.w	r6, ip, #1
 8015a1c:	f105 0e01 	add.w	lr, r5, #1
 8015a20:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015a24:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8015a28:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8015a2c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015a30:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015a34:	096d      	lsrs	r5, r5, #5
 8015a36:	ea47 070c 	orr.w	r7, r7, ip
 8015a3a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015a3e:	432f      	orrs	r7, r5
 8015a40:	8007      	strh	r7, [r0, #0]
 8015a42:	3002      	adds	r0, #2
 8015a44:	3402      	adds	r4, #2
 8015a46:	e7ad      	b.n	80159a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8015a48:	f8b9 3000 	ldrh.w	r3, [r9]
 8015a4c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8015a50:	eba3 0308 	sub.w	r3, r3, r8
 8015a54:	eba6 0608 	sub.w	r6, r6, r8
 8015a58:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8015a5c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015a60:	440e      	add	r6, r1
 8015a62:	e798      	b.n	8015996 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8015a64:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8015a68:	42a8      	cmp	r0, r5
 8015a6a:	d263      	bcs.n	8015b34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8015a6c:	9b00      	ldr	r3, [sp, #0]
 8015a6e:	4631      	mov	r1, r6
 8015a70:	eb00 0b03 	add.w	fp, r0, r3
 8015a74:	4558      	cmp	r0, fp
 8015a76:	d24f      	bcs.n	8015b18 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8015a78:	f811 3b01 	ldrb.w	r3, [r1], #1
 8015a7c:	b12b      	cbz	r3, 8015a8a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8015a7e:	2bff      	cmp	r3, #255	; 0xff
 8015a80:	f8b4 e000 	ldrh.w	lr, [r4]
 8015a84:	d104      	bne.n	8015a90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 8015a86:	f8a0 e000 	strh.w	lr, [r0]
 8015a8a:	3002      	adds	r0, #2
 8015a8c:	3402      	adds	r4, #2
 8015a8e:	e7f1      	b.n	8015a74 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 8015a90:	8802      	ldrh	r2, [r0, #0]
 8015a92:	b29f      	uxth	r7, r3
 8015a94:	1216      	asrs	r6, r2, #8
 8015a96:	43db      	mvns	r3, r3
 8015a98:	b2db      	uxtb	r3, r3
 8015a9a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015a9e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015aa2:	fb16 f603 	smulbb	r6, r6, r3
 8015aa6:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8015aaa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015aae:	00d2      	lsls	r2, r2, #3
 8015ab0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015ab4:	b2d2      	uxtb	r2, r2
 8015ab6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015aba:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015abe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015ac2:	fb1a fa03 	smulbb	sl, sl, r3
 8015ac6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015aca:	fb12 f303 	smulbb	r3, r2, r3
 8015ace:	fa5f fe8e 	uxtb.w	lr, lr
 8015ad2:	fb06 a607 	mla	r6, r6, r7, sl
 8015ad6:	fb0e 3e07 	mla	lr, lr, r7, r3
 8015ada:	fa1f fc8c 	uxth.w	ip, ip
 8015ade:	b2b6      	uxth	r6, r6
 8015ae0:	fa1f fe8e 	uxth.w	lr, lr
 8015ae4:	f10c 0201 	add.w	r2, ip, #1
 8015ae8:	f10e 0301 	add.w	r3, lr, #1
 8015aec:	f106 0a01 	add.w	sl, r6, #1
 8015af0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015af4:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8015af8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8015afc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b00:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015b04:	0976      	lsrs	r6, r6, #5
 8015b06:	ea4c 0c0e 	orr.w	ip, ip, lr
 8015b0a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015b0e:	ea4c 0c06 	orr.w	ip, ip, r6
 8015b12:	f8a0 c000 	strh.w	ip, [r0]
 8015b16:	e7b8      	b.n	8015a8a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8015b18:	f8b9 3000 	ldrh.w	r3, [r9]
 8015b1c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8015b20:	eba3 0308 	sub.w	r3, r3, r8
 8015b24:	eba6 0608 	sub.w	r6, r6, r8
 8015b28:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8015b2c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015b30:	440e      	add	r6, r1
 8015b32:	e799      	b.n	8015a68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 8015b34:	4b03      	ldr	r3, [pc, #12]	; (8015b44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8015b36:	6818      	ldr	r0, [r3, #0]
 8015b38:	6803      	ldr	r3, [r0, #0]
 8015b3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015b3c:	4798      	blx	r3
 8015b3e:	b007      	add	sp, #28
 8015b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b44:	2000d40c 	.word	0x2000d40c
 8015b48:	2000d406 	.word	0x2000d406

08015b4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8015b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b50:	b089      	sub	sp, #36	; 0x24
 8015b52:	4682      	mov	sl, r0
 8015b54:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8015b58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015b5a:	460d      	mov	r5, r1
 8015b5c:	4691      	mov	r9, r2
 8015b5e:	4698      	mov	r8, r3
 8015b60:	b3ae      	cbz	r6, 8015bce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8015b62:	4608      	mov	r0, r1
 8015b64:	f7fc fa00 	bl	8011f68 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015b68:	4607      	mov	r7, r0
 8015b6a:	4628      	mov	r0, r5
 8015b6c:	f7fc fa36 	bl	8011fdc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015b70:	f8ad 000e 	strh.w	r0, [sp, #14]
 8015b74:	4628      	mov	r0, r5
 8015b76:	f8ad 9008 	strh.w	r9, [sp, #8]
 8015b7a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8015b7e:	f8ad 700c 	strh.w	r7, [sp, #12]
 8015b82:	f7fc fb83 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015b86:	b178      	cbz	r0, 8015ba8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8015b88:	4628      	mov	r0, r5
 8015b8a:	f7fc fb7f 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015b8e:	2802      	cmp	r0, #2
 8015b90:	d00a      	beq.n	8015ba8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8015b92:	4628      	mov	r0, r5
 8015b94:	f7fc fb7a 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015b98:	280b      	cmp	r0, #11
 8015b9a:	d005      	beq.n	8015ba8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8015b9c:	4b69      	ldr	r3, [pc, #420]	; (8015d44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8015b9e:	4a6a      	ldr	r2, [pc, #424]	; (8015d48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8015ba0:	486a      	ldr	r0, [pc, #424]	; (8015d4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8015ba2:	214b      	movs	r1, #75	; 0x4b
 8015ba4:	f009 fc26 	bl	801f3f4 <__assert_func>
 8015ba8:	4628      	mov	r0, r5
 8015baa:	f7fc fae5 	bl	8012178 <_ZNK8touchgfx6Bitmap7getDataEv>
 8015bae:	4607      	mov	r7, r0
 8015bb0:	4628      	mov	r0, r5
 8015bb2:	f7fc fb13 	bl	80121dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8015bb6:	4681      	mov	r9, r0
 8015bb8:	4628      	mov	r0, r5
 8015bba:	f7fc fb67 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015bbe:	2802      	cmp	r0, #2
 8015bc0:	d108      	bne.n	8015bd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8015bc2:	4633      	mov	r3, r6
 8015bc4:	4622      	mov	r2, r4
 8015bc6:	a902      	add	r1, sp, #8
 8015bc8:	4638      	mov	r0, r7
 8015bca:	f7ff fa69 	bl	80150a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8015bce:	b009      	add	sp, #36	; 0x24
 8015bd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bd4:	4628      	mov	r0, r5
 8015bd6:	f7fc fb59 	bl	801228c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8015bda:	280b      	cmp	r0, #11
 8015bdc:	d107      	bne.n	8015bee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8015bde:	9600      	str	r6, [sp, #0]
 8015be0:	4623      	mov	r3, r4
 8015be2:	aa02      	add	r2, sp, #8
 8015be4:	4649      	mov	r1, r9
 8015be6:	4638      	mov	r0, r7
 8015be8:	f7ff fe72 	bl	80158d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8015bec:	e7ef      	b.n	8015bce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8015bee:	4628      	mov	r0, r5
 8015bf0:	f7fc fa88 	bl	8012104 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015bf4:	b950      	cbnz	r0, 8015c0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8015bf6:	e9cd 6000 	strd	r6, r0, [sp]
 8015bfa:	f8da 3000 	ldr.w	r3, [sl]
 8015bfe:	aa02      	add	r2, sp, #8
 8015c00:	68dd      	ldr	r5, [r3, #12]
 8015c02:	4639      	mov	r1, r7
 8015c04:	4623      	mov	r3, r4
 8015c06:	4650      	mov	r0, sl
 8015c08:	47a8      	blx	r5
 8015c0a:	e7e0      	b.n	8015bce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8015c0c:	f10d 0818 	add.w	r8, sp, #24
 8015c10:	4629      	mov	r1, r5
 8015c12:	4640      	mov	r0, r8
 8015c14:	f7fc fa1c 	bl	8012050 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015c18:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015c1c:	ad04      	add	r5, sp, #16
 8015c1e:	e885 0003 	stmia.w	r5, {r0, r1}
 8015c22:	4628      	mov	r0, r5
 8015c24:	4621      	mov	r1, r4
 8015c26:	f7f4 febf 	bl	800a9a8 <_ZN8touchgfx4RectaNERKS0_>
 8015c2a:	4628      	mov	r0, r5
 8015c2c:	f7f4 feff 	bl	800aa2e <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c30:	b138      	cbz	r0, 8015c42 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8015c32:	9600      	str	r6, [sp, #0]
 8015c34:	4623      	mov	r3, r4
 8015c36:	aa02      	add	r2, sp, #8
 8015c38:	4649      	mov	r1, r9
 8015c3a:	4638      	mov	r0, r7
 8015c3c:	f7ff fe60 	bl	8015900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015c40:	e7c5      	b.n	8015bce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8015c42:	e9cd 6000 	strd	r6, r0, [sp]
 8015c46:	f8da 3000 	ldr.w	r3, [sl]
 8015c4a:	aa02      	add	r2, sp, #8
 8015c4c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8015c50:	4639      	mov	r1, r7
 8015c52:	462b      	mov	r3, r5
 8015c54:	4650      	mov	r0, sl
 8015c56:	47d8      	blx	fp
 8015c58:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015c5c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015c60:	4293      	cmp	r3, r2
 8015c62:	dd13      	ble.n	8015c8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8015c64:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015c68:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015c6c:	f8ad 0018 	strh.w	r0, [sp, #24]
 8015c70:	1a9b      	subs	r3, r3, r2
 8015c72:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015c76:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015c7a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015c7e:	9600      	str	r6, [sp, #0]
 8015c80:	4643      	mov	r3, r8
 8015c82:	aa02      	add	r2, sp, #8
 8015c84:	4649      	mov	r1, r9
 8015c86:	4638      	mov	r0, r7
 8015c88:	f7ff fe3a 	bl	8015900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015c8c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8015c90:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015c94:	4293      	cmp	r3, r2
 8015c96:	dd13      	ble.n	8015cc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8015c98:	1a9b      	subs	r3, r3, r2
 8015c9a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8015c9e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8015ca2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015ca6:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015caa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015cae:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015cb2:	9600      	str	r6, [sp, #0]
 8015cb4:	4643      	mov	r3, r8
 8015cb6:	aa02      	add	r2, sp, #8
 8015cb8:	4649      	mov	r1, r9
 8015cba:	4638      	mov	r0, r7
 8015cbc:	f7ff fe20 	bl	8015900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015cc0:	88a2      	ldrh	r2, [r4, #4]
 8015cc2:	8823      	ldrh	r3, [r4, #0]
 8015cc4:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8015cc8:	4413      	add	r3, r2
 8015cca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015cce:	440a      	add	r2, r1
 8015cd0:	b29b      	uxth	r3, r3
 8015cd2:	b292      	uxth	r2, r2
 8015cd4:	b211      	sxth	r1, r2
 8015cd6:	b218      	sxth	r0, r3
 8015cd8:	4288      	cmp	r0, r1
 8015cda:	dd13      	ble.n	8015d04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8015cdc:	1a9b      	subs	r3, r3, r2
 8015cde:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8015ce2:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8015ce6:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015cea:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015cee:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015cf2:	9600      	str	r6, [sp, #0]
 8015cf4:	4643      	mov	r3, r8
 8015cf6:	aa02      	add	r2, sp, #8
 8015cf8:	4649      	mov	r1, r9
 8015cfa:	4638      	mov	r0, r7
 8015cfc:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015d00:	f7ff fdfe 	bl	8015900 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015d04:	88e2      	ldrh	r2, [r4, #6]
 8015d06:	8863      	ldrh	r3, [r4, #2]
 8015d08:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015d0c:	4413      	add	r3, r2
 8015d0e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8015d12:	440a      	add	r2, r1
 8015d14:	b29b      	uxth	r3, r3
 8015d16:	b292      	uxth	r2, r2
 8015d18:	b211      	sxth	r1, r2
 8015d1a:	b218      	sxth	r0, r3
 8015d1c:	4288      	cmp	r0, r1
 8015d1e:	f77f af56 	ble.w	8015bce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8015d22:	f9b4 5000 	ldrsh.w	r5, [r4]
 8015d26:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015d2a:	f8ad 5018 	strh.w	r5, [sp, #24]
 8015d2e:	1a9b      	subs	r3, r3, r2
 8015d30:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015d34:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015d38:	f8ad 001c 	strh.w	r0, [sp, #28]
 8015d3c:	9600      	str	r6, [sp, #0]
 8015d3e:	4643      	mov	r3, r8
 8015d40:	e779      	b.n	8015c36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8015d42:	bf00      	nop
 8015d44:	08023da9 	.word	0x08023da9
 8015d48:	080244e2 	.word	0x080244e2
 8015d4c:	080240a8 	.word	0x080240a8

08015d50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8015d50:	b508      	push	{r3, lr}
 8015d52:	b180      	cbz	r0, 8015d76 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8015d54:	2902      	cmp	r1, #2
 8015d56:	d014      	beq.n	8015d82 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8015d58:	2903      	cmp	r1, #3
 8015d5a:	d01d      	beq.n	8015d98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8015d5c:	2901      	cmp	r1, #1
 8015d5e:	d101      	bne.n	8015d64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8015d60:	2001      	movs	r0, #1
 8015d62:	bd08      	pop	{r3, pc}
 8015d64:	4b0e      	ldr	r3, [pc, #56]	; (8015da0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8015d66:	8818      	ldrh	r0, [r3, #0]
 8015d68:	b990      	cbnz	r0, 8015d90 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8015d6a:	4b0e      	ldr	r3, [pc, #56]	; (8015da4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8015d6c:	4a0e      	ldr	r2, [pc, #56]	; (8015da8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8015d6e:	480f      	ldr	r0, [pc, #60]	; (8015dac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8015d70:	2154      	movs	r1, #84	; 0x54
 8015d72:	f009 fb3f 	bl	801f3f4 <__assert_func>
 8015d76:	2902      	cmp	r1, #2
 8015d78:	d00e      	beq.n	8015d98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8015d7a:	2903      	cmp	r1, #3
 8015d7c:	d0f2      	beq.n	8015d64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8015d7e:	2901      	cmp	r1, #1
 8015d80:	d1ee      	bne.n	8015d60 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8015d82:	4b07      	ldr	r3, [pc, #28]	; (8015da0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8015d84:	8818      	ldrh	r0, [r3, #0]
 8015d86:	2800      	cmp	r0, #0
 8015d88:	d0ef      	beq.n	8015d6a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8015d8a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015d8e:	e7e8      	b.n	8015d62 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8015d90:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015d94:	4240      	negs	r0, r0
 8015d96:	e7e4      	b.n	8015d62 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8015d98:	f04f 30ff 	mov.w	r0, #4294967295
 8015d9c:	e7e1      	b.n	8015d62 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8015d9e:	bf00      	nop
 8015da0:	2000d406 	.word	0x2000d406
 8015da4:	080240da 	.word	0x080240da
 8015da8:	0802465f 	.word	0x0802465f
 8015dac:	0802411c 	.word	0x0802411c

08015db0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8015db0:	b508      	push	{r3, lr}
 8015db2:	b180      	cbz	r0, 8015dd6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8015db4:	2902      	cmp	r1, #2
 8015db6:	d014      	beq.n	8015de2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8015db8:	2903      	cmp	r1, #3
 8015dba:	d018      	beq.n	8015dee <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8015dbc:	2901      	cmp	r1, #1
 8015dbe:	d001      	beq.n	8015dc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8015dc0:	2001      	movs	r0, #1
 8015dc2:	e013      	b.n	8015dec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8015dc4:	4b0e      	ldr	r3, [pc, #56]	; (8015e00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015dc6:	8818      	ldrh	r0, [r3, #0]
 8015dc8:	b970      	cbnz	r0, 8015de8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8015dca:	4b0e      	ldr	r3, [pc, #56]	; (8015e04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8015dcc:	4a0e      	ldr	r2, [pc, #56]	; (8015e08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8015dce:	480f      	ldr	r0, [pc, #60]	; (8015e0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8015dd0:	2154      	movs	r1, #84	; 0x54
 8015dd2:	f009 fb0f 	bl	801f3f4 <__assert_func>
 8015dd6:	2902      	cmp	r1, #2
 8015dd8:	d009      	beq.n	8015dee <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8015dda:	2903      	cmp	r1, #3
 8015ddc:	d0f0      	beq.n	8015dc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8015dde:	2901      	cmp	r1, #1
 8015de0:	d1f0      	bne.n	8015dc4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8015de2:	f04f 30ff 	mov.w	r0, #4294967295
 8015de6:	e001      	b.n	8015dec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8015de8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015dec:	bd08      	pop	{r3, pc}
 8015dee:	4b04      	ldr	r3, [pc, #16]	; (8015e00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015df0:	8818      	ldrh	r0, [r3, #0]
 8015df2:	2800      	cmp	r0, #0
 8015df4:	d0e9      	beq.n	8015dca <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8015df6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015dfa:	4240      	negs	r0, r0
 8015dfc:	e7f6      	b.n	8015dec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8015dfe:	bf00      	nop
 8015e00:	2000d406 	.word	0x2000d406
 8015e04:	080240da 	.word	0x080240da
 8015e08:	0802465f 	.word	0x0802465f
 8015e0c:	0802411c 	.word	0x0802411c

08015e10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8015e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e14:	b099      	sub	sp, #100	; 0x64
 8015e16:	910b      	str	r1, [sp, #44]	; 0x2c
 8015e18:	a914      	add	r1, sp, #80	; 0x50
 8015e1a:	e881 000c 	stmia.w	r1, {r2, r3}
 8015e1e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8015e22:	9308      	str	r3, [sp, #32]
 8015e24:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 8015e28:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 8015e2c:	f893 b00d 	ldrb.w	fp, [r3, #13]
 8015e30:	910c      	str	r1, [sp, #48]	; 0x30
 8015e32:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 8015e36:	910d      	str	r1, [sp, #52]	; 0x34
 8015e38:	7998      	ldrb	r0, [r3, #6]
 8015e3a:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 8015e3e:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8015e42:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8015e46:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8015e4a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8015e4e:	ea4f 114b 	mov.w	r1, fp, lsl #5
 8015e52:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015e56:	4301      	orrs	r1, r0
 8015e58:	9109      	str	r1, [sp, #36]	; 0x24
 8015e5a:	f000 81e2 	beq.w	8016222 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8015e5e:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 8015e62:	79d9      	ldrb	r1, [r3, #7]
 8015e64:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8015e68:	ea51 0b0b 	orrs.w	fp, r1, fp
 8015e6c:	f000 81d9 	beq.w	8016222 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8015e70:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8015e74:	b29b      	uxth	r3, r3
 8015e76:	2e00      	cmp	r6, #0
 8015e78:	f000 80fc 	beq.w	8016074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x264>
 8015e7c:	1af6      	subs	r6, r6, r3
 8015e7e:	b2b6      	uxth	r6, r6
 8015e80:	0433      	lsls	r3, r6, #16
 8015e82:	d502      	bpl.n	8015e8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8015e84:	1bad      	subs	r5, r5, r6
 8015e86:	b22d      	sxth	r5, r5
 8015e88:	2600      	movs	r6, #0
 8015e8a:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015e8e:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8015e92:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8015e96:	428d      	cmp	r5, r1
 8015e98:	b28b      	uxth	r3, r1
 8015e9a:	bfbf      	itttt	lt
 8015e9c:	18f6      	addlt	r6, r6, r3
 8015e9e:	1b75      	sublt	r5, r6, r5
 8015ea0:	b2ae      	uxthlt	r6, r5
 8015ea2:	460d      	movlt	r5, r1
 8015ea4:	8891      	ldrh	r1, [r2, #4]
 8015ea6:	440b      	add	r3, r1
 8015ea8:	b21b      	sxth	r3, r3
 8015eaa:	9311      	str	r3, [sp, #68]	; 0x44
 8015eac:	8853      	ldrh	r3, [r2, #2]
 8015eae:	88d2      	ldrh	r2, [r2, #6]
 8015eb0:	4413      	add	r3, r2
 8015eb2:	b21b      	sxth	r3, r3
 8015eb4:	9310      	str	r3, [sp, #64]	; 0x40
 8015eb6:	4bb2      	ldr	r3, [pc, #712]	; (8016180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>)
 8015eb8:	9a08      	ldr	r2, [sp, #32]
 8015eba:	f893 9000 	ldrb.w	r9, [r3]
 8015ebe:	f109 3cff 	add.w	ip, r9, #4294967295
 8015ec2:	f1dc 0300 	rsbs	r3, ip, #0
 8015ec6:	eb43 030c 	adc.w	r3, r3, ip
 8015eca:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ecc:	4629      	mov	r1, r5
 8015ece:	4653      	mov	r3, sl
 8015ed0:	a814      	add	r0, sp, #80	; 0x50
 8015ed2:	f7f8 fedb 	bl	800ec8c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8015ed6:	4629      	mov	r1, r5
 8015ed8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8015edc:	4653      	mov	r3, sl
 8015ede:	9a08      	ldr	r2, [sp, #32]
 8015ee0:	a814      	add	r0, sp, #80	; 0x50
 8015ee2:	f7f8 feeb 	bl	800ecbc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8015ee6:	a918      	add	r1, sp, #96	; 0x60
 8015ee8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8015eec:	a817      	add	r0, sp, #92	; 0x5c
 8015eee:	f7f9 f847 	bl	800ef80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8015ef2:	f1ba 0f00 	cmp.w	sl, #0
 8015ef6:	f040 80c0 	bne.w	801607a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8015efa:	f1b9 0f01 	cmp.w	r9, #1
 8015efe:	f040 80c4 	bne.w	801608a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27a>
 8015f02:	2301      	movs	r3, #1
 8015f04:	fa03 f308 	lsl.w	r3, r3, r8
 8015f08:	3b01      	subs	r3, #1
 8015f0a:	b2db      	uxtb	r3, r3
 8015f0c:	f1b8 0f01 	cmp.w	r8, #1
 8015f10:	930a      	str	r3, [sp, #40]	; 0x28
 8015f12:	f000 80e5 	beq.w	80160e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 8015f16:	f1b8 0f02 	cmp.w	r8, #2
 8015f1a:	f000 80e4 	beq.w	80160e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d6>
 8015f1e:	f1b8 0f04 	cmp.w	r8, #4
 8015f22:	bf15      	itete	ne
 8015f24:	46c1      	movne	r9, r8
 8015f26:	f04f 0904 	moveq.w	r9, #4
 8015f2a:	2301      	movne	r3, #1
 8015f2c:	2311      	moveq	r3, #17
 8015f2e:	9307      	str	r3, [sp, #28]
 8015f30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015f32:	b153      	cbz	r3, 8015f4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13a>
 8015f34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015f36:	2408      	movs	r4, #8
 8015f38:	fb94 f3f9 	sdiv	r3, r4, r9
 8015f3c:	1e5c      	subs	r4, r3, #1
 8015f3e:	4414      	add	r4, r2
 8015f40:	fb94 f4f3 	sdiv	r4, r4, r3
 8015f44:	fb14 f403 	smulbb	r4, r4, r3
 8015f48:	b2a4      	uxth	r4, r4
 8015f4a:	b906      	cbnz	r6, 8015f4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8015f4c:	b16f      	cbz	r7, 8015f6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8015f4e:	fb07 6304 	mla	r3, r7, r4, r6
 8015f52:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015f54:	fb08 f303 	mul.w	r3, r8, r3
 8015f58:	4639      	mov	r1, r7
 8015f5a:	f003 0707 	and.w	r7, r3, #7
 8015f5e:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 8015f62:	9328      	str	r3, [sp, #160]	; 0xa0
 8015f64:	ebab 0301 	sub.w	r3, fp, r1
 8015f68:	930e      	str	r3, [sp, #56]	; 0x38
 8015f6a:	4651      	mov	r1, sl
 8015f6c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015f6e:	f7ff feef 	bl	8015d50 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8015f72:	4651      	mov	r1, sl
 8015f74:	4683      	mov	fp, r0
 8015f76:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015f78:	f7ff ff1a 	bl	8015db0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8015f7c:	9a08      	ldr	r2, [sp, #32]
 8015f7e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015f80:	1a9b      	subs	r3, r3, r2
 8015f82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015f84:	429a      	cmp	r2, r3
 8015f86:	bfa8      	it	ge
 8015f88:	461a      	movge	r2, r3
 8015f8a:	2a00      	cmp	r2, #0
 8015f8c:	4682      	mov	sl, r0
 8015f8e:	9208      	str	r2, [sp, #32]
 8015f90:	f340 8147 	ble.w	8016222 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8015f94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015f96:	1bad      	subs	r5, r5, r6
 8015f98:	1b5d      	subs	r5, r3, r5
 8015f9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f9c:	429d      	cmp	r5, r3
 8015f9e:	bfd4      	ite	le
 8015fa0:	ebc6 0605 	rsble	r6, r6, r5
 8015fa4:	ebc6 0603 	rsbgt	r6, r6, r3
 8015fa8:	2e00      	cmp	r6, #0
 8015faa:	f340 813a 	ble.w	8016222 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8015fae:	1ba4      	subs	r4, r4, r6
 8015fb0:	fb09 f304 	mul.w	r3, r9, r4
 8015fb4:	930e      	str	r3, [sp, #56]	; 0x38
 8015fb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015fb8:	2b00      	cmp	r3, #0
 8015fba:	f040 809d 	bne.w	80160f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8015fbe:	4b71      	ldr	r3, [pc, #452]	; (8016184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 8015fc0:	6818      	ldr	r0, [r3, #0]
 8015fc2:	6803      	ldr	r3, [r0, #0]
 8015fc4:	6a1b      	ldr	r3, [r3, #32]
 8015fc6:	4798      	blx	r3
 8015fc8:	496f      	ldr	r1, [pc, #444]	; (8016188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8015fca:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015fce:	880c      	ldrh	r4, [r1, #0]
 8015fd0:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 8015fd4:	fb04 1303 	mla	r3, r4, r3, r1
 8015fd8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015fdc:	9309      	str	r3, [sp, #36]	; 0x24
 8015fde:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015fe0:	7819      	ldrb	r1, [r3, #0]
 8015fe2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fe4:	0a1b      	lsrs	r3, r3, #8
 8015fe6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015fea:	930f      	str	r3, [sp, #60]	; 0x3c
 8015fec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fee:	08db      	lsrs	r3, r3, #3
 8015ff0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015ff4:	9310      	str	r3, [sp, #64]	; 0x40
 8015ff6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015ff8:	00db      	lsls	r3, r3, #3
 8015ffa:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015ffe:	9311      	str	r3, [sp, #68]	; 0x44
 8016000:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8016004:	fb0b ab16 	mls	fp, fp, r6, sl
 8016008:	fb03 fa06 	mul.w	sl, r3, r6
 801600c:	930c      	str	r3, [sp, #48]	; 0x30
 801600e:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 8016012:	9312      	str	r3, [sp, #72]	; 0x48
 8016014:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016016:	4139      	asrs	r1, r7
 8016018:	b29b      	uxth	r3, r3
 801601a:	b2c9      	uxtb	r1, r1
 801601c:	9313      	str	r3, [sp, #76]	; 0x4c
 801601e:	9b08      	ldr	r3, [sp, #32]
 8016020:	3b01      	subs	r3, #1
 8016022:	9308      	str	r3, [sp, #32]
 8016024:	3301      	adds	r3, #1
 8016026:	f000 80c3 	beq.w	80161b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801602a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801602e:	46b2      	mov	sl, r6
 8016030:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8016034:	f0c0 80aa 	bcc.w	801618c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8016038:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801603a:	400b      	ands	r3, r1
 801603c:	d00a      	beq.n	8016054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x244>
 801603e:	9807      	ldr	r0, [sp, #28]
 8016040:	fb13 f300 	smulbb	r3, r3, r0
 8016044:	2bfe      	cmp	r3, #254	; 0xfe
 8016046:	dd59      	ble.n	80160fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 8016048:	980d      	ldr	r0, [sp, #52]	; 0x34
 801604a:	28ff      	cmp	r0, #255	; 0xff
 801604c:	d156      	bne.n	80160fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 801604e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016050:	f8ae 4000 	strh.w	r4, [lr]
 8016054:	4447      	add	r7, r8
 8016056:	b2bf      	uxth	r7, r7
 8016058:	2f07      	cmp	r7, #7
 801605a:	bf81      	itttt	hi
 801605c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801605e:	7859      	ldrbhi	r1, [r3, #1]
 8016060:	3301      	addhi	r3, #1
 8016062:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8016064:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016066:	bf9a      	itte	ls
 8016068:	fa41 f109 	asrls.w	r1, r1, r9
 801606c:	b2c9      	uxtbls	r1, r1
 801606e:	2700      	movhi	r7, #0
 8016070:	449e      	add	lr, r3
 8016072:	e7dd      	b.n	8016030 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x220>
 8016074:	441d      	add	r5, r3
 8016076:	b22d      	sxth	r5, r5
 8016078:	e707      	b.n	8015e8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801607a:	f1ba 0f01 	cmp.w	sl, #1
 801607e:	f47f af40 	bne.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8016082:	f1b9 0f01 	cmp.w	r9, #1
 8016086:	f47f af3c 	bne.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801608a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8016184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 801608e:	f8d9 0000 	ldr.w	r0, [r9]
 8016092:	6803      	ldr	r3, [r0, #0]
 8016094:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016096:	4798      	blx	r3
 8016098:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 801609c:	464a      	mov	r2, r9
 801609e:	d006      	beq.n	80160ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 80160a0:	f1b8 0f04 	cmp.w	r8, #4
 80160a4:	d11a      	bne.n	80160dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 80160a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80160a8:	3300      	adds	r3, #0
 80160aa:	bf18      	it	ne
 80160ac:	2301      	movne	r3, #1
 80160ae:	05c0      	lsls	r0, r0, #23
 80160b0:	f140 8087 	bpl.w	80161c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 80160b4:	f1b8 0f08 	cmp.w	r8, #8
 80160b8:	f040 8083 	bne.w	80161c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 80160bc:	2b00      	cmp	r3, #0
 80160be:	bf14      	ite	ne
 80160c0:	2180      	movne	r1, #128	; 0x80
 80160c2:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80160c6:	2e00      	cmp	r6, #0
 80160c8:	f040 80ae 	bne.w	8016228 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x418>
 80160cc:	2f00      	cmp	r7, #0
 80160ce:	f000 8082 	beq.w	80161d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 80160d2:	23ff      	movs	r3, #255	; 0xff
 80160d4:	930a      	str	r3, [sp, #40]	; 0x28
 80160d6:	46c1      	mov	r9, r8
 80160d8:	2301      	movs	r3, #1
 80160da:	e728      	b.n	8015f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 80160dc:	2300      	movs	r3, #0
 80160de:	e7e6      	b.n	80160ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 80160e0:	46c1      	mov	r9, r8
 80160e2:	23ff      	movs	r3, #255	; 0xff
 80160e4:	e723      	b.n	8015f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 80160e6:	46c1      	mov	r9, r8
 80160e8:	2355      	movs	r3, #85	; 0x55
 80160ea:	e720      	b.n	8015f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 80160ec:	23ff      	movs	r3, #255	; 0xff
 80160ee:	930a      	str	r3, [sp, #40]	; 0x28
 80160f0:	2301      	movs	r3, #1
 80160f2:	46c1      	mov	r9, r8
 80160f4:	9307      	str	r3, [sp, #28]
 80160f6:	e71d      	b.n	8015f34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x124>
 80160f8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80160fa:	e765      	b.n	8015fc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1b8>
 80160fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80160fe:	f8be 5000 	ldrh.w	r5, [lr]
 8016102:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016104:	fb10 f303 	smulbb	r3, r0, r3
 8016108:	b29b      	uxth	r3, r3
 801610a:	1c58      	adds	r0, r3, #1
 801610c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8016110:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016114:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016116:	fa1f fc83 	uxth.w	ip, r3
 801611a:	122c      	asrs	r4, r5, #8
 801611c:	43db      	mvns	r3, r3
 801611e:	b2db      	uxtb	r3, r3
 8016120:	fb1c fb02 	smulbb	fp, ip, r2
 8016124:	fb10 f00c 	smulbb	r0, r0, ip
 8016128:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801612c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801612e:	fb04 0403 	mla	r4, r4, r3, r0
 8016132:	10e8      	asrs	r0, r5, #3
 8016134:	00ed      	lsls	r5, r5, #3
 8016136:	b2ed      	uxtb	r5, r5
 8016138:	fb1c fc02 	smulbb	ip, ip, r2
 801613c:	fb05 cc03 	mla	ip, r5, r3, ip
 8016140:	b2a4      	uxth	r4, r4
 8016142:	fa1f fc8c 	uxth.w	ip, ip
 8016146:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801614a:	fb00 b003 	mla	r0, r0, r3, fp
 801614e:	1c63      	adds	r3, r4, #1
 8016150:	f10c 0b01 	add.w	fp, ip, #1
 8016154:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8016158:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 801615c:	b280      	uxth	r0, r0
 801615e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8016162:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8016166:	ea44 040b 	orr.w	r4, r4, fp
 801616a:	f100 0b01 	add.w	fp, r0, #1
 801616e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8016172:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016176:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801617a:	ea44 040b 	orr.w	r4, r4, fp
 801617e:	e767      	b.n	8016050 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x240>
 8016180:	2000d404 	.word	0x2000d404
 8016184:	2000d40c 	.word	0x2000d40c
 8016188:	2000d406 	.word	0x2000d406
 801618c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801618e:	b153      	cbz	r3, 80161a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8016190:	441f      	add	r7, r3
 8016192:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016194:	b2bf      	uxth	r7, r7
 8016196:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 801619a:	f007 0707 	and.w	r7, r7, #7
 801619e:	7819      	ldrb	r1, [r3, #0]
 80161a0:	9328      	str	r3, [sp, #160]	; 0xa0
 80161a2:	4139      	asrs	r1, r7
 80161a4:	b2c9      	uxtb	r1, r1
 80161a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80161a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80161aa:	441a      	add	r2, r3
 80161ac:	9209      	str	r2, [sp, #36]	; 0x24
 80161ae:	e736      	b.n	801601e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20e>
 80161b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80161b2:	2b00      	cmp	r3, #0
 80161b4:	d135      	bne.n	8016222 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80161b6:	4b21      	ldr	r3, [pc, #132]	; (801623c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x42c>)
 80161b8:	6818      	ldr	r0, [r3, #0]
 80161ba:	6803      	ldr	r3, [r0, #0]
 80161bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80161be:	4798      	blx	r3
 80161c0:	e02f      	b.n	8016222 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80161c2:	2b00      	cmp	r3, #0
 80161c4:	f43f ae9d 	beq.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80161c8:	2e00      	cmp	r6, #0
 80161ca:	f47f ae9a 	bne.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80161ce:	2f00      	cmp	r7, #0
 80161d0:	f47f ae97 	bne.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80161d4:	2180      	movs	r1, #128	; 0x80
 80161d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80161d8:	9811      	ldr	r0, [sp, #68]	; 0x44
 80161da:	18eb      	adds	r3, r5, r3
 80161dc:	4283      	cmp	r3, r0
 80161de:	f73f ae90 	bgt.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80161e2:	9b08      	ldr	r3, [sp, #32]
 80161e4:	9810      	ldr	r0, [sp, #64]	; 0x40
 80161e6:	445b      	add	r3, fp
 80161e8:	4283      	cmp	r3, r0
 80161ea:	f73f ae8a 	bgt.w	8015f02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80161ee:	6810      	ldr	r0, [r2, #0]
 80161f0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80161f4:	6805      	ldr	r5, [r0, #0]
 80161f6:	9105      	str	r1, [sp, #20]
 80161f8:	f1b8 0f08 	cmp.w	r8, #8
 80161fc:	bf18      	it	ne
 80161fe:	3401      	addne	r4, #1
 8016200:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016202:	9104      	str	r1, [sp, #16]
 8016204:	bf18      	it	ne
 8016206:	f024 0401 	bicne.w	r4, r4, #1
 801620a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801620c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8016210:	bf18      	it	ne
 8016212:	b2a4      	uxthne	r4, r4
 8016214:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8016218:	e9cd 4b00 	strd	r4, fp, [sp]
 801621c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801621e:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8016220:	47a0      	blx	r4
 8016222:	b019      	add	sp, #100	; 0x64
 8016224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016228:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801622a:	2b00      	cmp	r3, #0
 801622c:	f47f af5e 	bne.w	80160ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8016230:	23ff      	movs	r3, #255	; 0xff
 8016232:	930a      	str	r3, [sp, #40]	; 0x28
 8016234:	2301      	movs	r3, #1
 8016236:	46c1      	mov	r9, r8
 8016238:	9307      	str	r3, [sp, #28]
 801623a:	e688      	b.n	8015f4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 801623c:	2000d40c 	.word	0x2000d40c

08016240 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8016240:	b538      	push	{r3, r4, r5, lr}
 8016242:	4c15      	ldr	r4, [pc, #84]	; (8016298 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8016244:	7823      	ldrb	r3, [r4, #0]
 8016246:	f3bf 8f5b 	dmb	ish
 801624a:	07da      	lsls	r2, r3, #31
 801624c:	4605      	mov	r5, r0
 801624e:	d40b      	bmi.n	8016268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016250:	4620      	mov	r0, r4
 8016252:	f009 f8a2 	bl	801f39a <__cxa_guard_acquire>
 8016256:	b138      	cbz	r0, 8016268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8016258:	4620      	mov	r0, r4
 801625a:	f009 f8aa 	bl	801f3b2 <__cxa_guard_release>
 801625e:	4a0f      	ldr	r2, [pc, #60]	; (801629c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016260:	490f      	ldr	r1, [pc, #60]	; (80162a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8016262:	4810      	ldr	r0, [pc, #64]	; (80162a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8016264:	f009 f892 	bl	801f38c <__aeabi_atexit>
 8016268:	4c0f      	ldr	r4, [pc, #60]	; (80162a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801626a:	7823      	ldrb	r3, [r4, #0]
 801626c:	f3bf 8f5b 	dmb	ish
 8016270:	07db      	lsls	r3, r3, #31
 8016272:	d40b      	bmi.n	801628c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8016274:	4620      	mov	r0, r4
 8016276:	f009 f890 	bl	801f39a <__cxa_guard_acquire>
 801627a:	b138      	cbz	r0, 801628c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801627c:	4620      	mov	r0, r4
 801627e:	f009 f898 	bl	801f3b2 <__cxa_guard_release>
 8016282:	4a06      	ldr	r2, [pc, #24]	; (801629c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8016284:	4909      	ldr	r1, [pc, #36]	; (80162ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8016286:	480a      	ldr	r0, [pc, #40]	; (80162b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016288:	f009 f880 	bl	801f38c <__aeabi_atexit>
 801628c:	4b05      	ldr	r3, [pc, #20]	; (80162a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801628e:	612b      	str	r3, [r5, #16]
 8016290:	4b07      	ldr	r3, [pc, #28]	; (80162b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8016292:	616b      	str	r3, [r5, #20]
 8016294:	bd38      	pop	{r3, r4, r5, pc}
 8016296:	bf00      	nop
 8016298:	2000d4f8 	.word	0x2000d4f8
 801629c:	20000000 	.word	0x20000000
 80162a0:	08014835 	.word	0x08014835
 80162a4:	200000a4 	.word	0x200000a4
 80162a8:	2000d4fc 	.word	0x2000d4fc
 80162ac:	08014833 	.word	0x08014833
 80162b0:	200000a8 	.word	0x200000a8

080162b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80162b4:	b538      	push	{r3, r4, r5, lr}
 80162b6:	4c15      	ldr	r4, [pc, #84]	; (801630c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80162b8:	7823      	ldrb	r3, [r4, #0]
 80162ba:	f3bf 8f5b 	dmb	ish
 80162be:	07da      	lsls	r2, r3, #31
 80162c0:	4605      	mov	r5, r0
 80162c2:	d40b      	bmi.n	80162dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80162c4:	4620      	mov	r0, r4
 80162c6:	f009 f868 	bl	801f39a <__cxa_guard_acquire>
 80162ca:	b138      	cbz	r0, 80162dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80162cc:	4620      	mov	r0, r4
 80162ce:	f009 f870 	bl	801f3b2 <__cxa_guard_release>
 80162d2:	4a0f      	ldr	r2, [pc, #60]	; (8016310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80162d4:	490f      	ldr	r1, [pc, #60]	; (8016314 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80162d6:	4810      	ldr	r0, [pc, #64]	; (8016318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80162d8:	f009 f858 	bl	801f38c <__aeabi_atexit>
 80162dc:	4c0f      	ldr	r4, [pc, #60]	; (801631c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80162de:	7823      	ldrb	r3, [r4, #0]
 80162e0:	f3bf 8f5b 	dmb	ish
 80162e4:	07db      	lsls	r3, r3, #31
 80162e6:	d40b      	bmi.n	8016300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80162e8:	4620      	mov	r0, r4
 80162ea:	f009 f856 	bl	801f39a <__cxa_guard_acquire>
 80162ee:	b138      	cbz	r0, 8016300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80162f0:	4620      	mov	r0, r4
 80162f2:	f009 f85e 	bl	801f3b2 <__cxa_guard_release>
 80162f6:	4a06      	ldr	r2, [pc, #24]	; (8016310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80162f8:	4909      	ldr	r1, [pc, #36]	; (8016320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80162fa:	480a      	ldr	r0, [pc, #40]	; (8016324 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80162fc:	f009 f846 	bl	801f38c <__aeabi_atexit>
 8016300:	4b05      	ldr	r3, [pc, #20]	; (8016318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8016302:	60ab      	str	r3, [r5, #8]
 8016304:	4b07      	ldr	r3, [pc, #28]	; (8016324 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8016306:	60eb      	str	r3, [r5, #12]
 8016308:	bd38      	pop	{r3, r4, r5, pc}
 801630a:	bf00      	nop
 801630c:	2000d4d0 	.word	0x2000d4d0
 8016310:	20000000 	.word	0x20000000
 8016314:	08014839 	.word	0x08014839
 8016318:	2000007c 	.word	0x2000007c
 801631c:	2000d4d4 	.word	0x2000d4d4
 8016320:	08014837 	.word	0x08014837
 8016324:	20000080 	.word	0x20000080

08016328 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8016328:	b510      	push	{r4, lr}
 801632a:	4604      	mov	r4, r0
 801632c:	f7ff ff88 	bl	8016240 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8016330:	4620      	mov	r0, r4
 8016332:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016336:	f7ff bfbd 	b.w	80162b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801633c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801633c:	b538      	push	{r3, r4, r5, lr}
 801633e:	4c15      	ldr	r4, [pc, #84]	; (8016394 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8016340:	7823      	ldrb	r3, [r4, #0]
 8016342:	f3bf 8f5b 	dmb	ish
 8016346:	07da      	lsls	r2, r3, #31
 8016348:	4605      	mov	r5, r0
 801634a:	d40b      	bmi.n	8016364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801634c:	4620      	mov	r0, r4
 801634e:	f009 f824 	bl	801f39a <__cxa_guard_acquire>
 8016352:	b138      	cbz	r0, 8016364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8016354:	4620      	mov	r0, r4
 8016356:	f009 f82c 	bl	801f3b2 <__cxa_guard_release>
 801635a:	4a0f      	ldr	r2, [pc, #60]	; (8016398 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801635c:	490f      	ldr	r1, [pc, #60]	; (801639c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801635e:	4810      	ldr	r0, [pc, #64]	; (80163a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8016360:	f009 f814 	bl	801f38c <__aeabi_atexit>
 8016364:	4c0f      	ldr	r4, [pc, #60]	; (80163a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8016366:	7823      	ldrb	r3, [r4, #0]
 8016368:	f3bf 8f5b 	dmb	ish
 801636c:	07db      	lsls	r3, r3, #31
 801636e:	d40b      	bmi.n	8016388 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016370:	4620      	mov	r0, r4
 8016372:	f009 f812 	bl	801f39a <__cxa_guard_acquire>
 8016376:	b138      	cbz	r0, 8016388 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8016378:	4620      	mov	r0, r4
 801637a:	f009 f81a 	bl	801f3b2 <__cxa_guard_release>
 801637e:	4a06      	ldr	r2, [pc, #24]	; (8016398 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8016380:	4909      	ldr	r1, [pc, #36]	; (80163a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8016382:	480a      	ldr	r0, [pc, #40]	; (80163ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8016384:	f009 f802 	bl	801f38c <__aeabi_atexit>
 8016388:	4b05      	ldr	r3, [pc, #20]	; (80163a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801638a:	622b      	str	r3, [r5, #32]
 801638c:	4b07      	ldr	r3, [pc, #28]	; (80163ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801638e:	626b      	str	r3, [r5, #36]	; 0x24
 8016390:	bd38      	pop	{r3, r4, r5, pc}
 8016392:	bf00      	nop
 8016394:	2000d500 	.word	0x2000d500
 8016398:	20000000 	.word	0x20000000
 801639c:	0801482d 	.word	0x0801482d
 80163a0:	200000ac 	.word	0x200000ac
 80163a4:	2000d504 	.word	0x2000d504
 80163a8:	0801482b 	.word	0x0801482b
 80163ac:	200000b0 	.word	0x200000b0

080163b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80163b0:	b538      	push	{r3, r4, r5, lr}
 80163b2:	4c15      	ldr	r4, [pc, #84]	; (8016408 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80163b4:	7823      	ldrb	r3, [r4, #0]
 80163b6:	f3bf 8f5b 	dmb	ish
 80163ba:	07da      	lsls	r2, r3, #31
 80163bc:	4605      	mov	r5, r0
 80163be:	d40b      	bmi.n	80163d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80163c0:	4620      	mov	r0, r4
 80163c2:	f008 ffea 	bl	801f39a <__cxa_guard_acquire>
 80163c6:	b138      	cbz	r0, 80163d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80163c8:	4620      	mov	r0, r4
 80163ca:	f008 fff2 	bl	801f3b2 <__cxa_guard_release>
 80163ce:	4a0f      	ldr	r2, [pc, #60]	; (801640c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80163d0:	490f      	ldr	r1, [pc, #60]	; (8016410 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80163d2:	4810      	ldr	r0, [pc, #64]	; (8016414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80163d4:	f008 ffda 	bl	801f38c <__aeabi_atexit>
 80163d8:	4c0f      	ldr	r4, [pc, #60]	; (8016418 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80163da:	7823      	ldrb	r3, [r4, #0]
 80163dc:	f3bf 8f5b 	dmb	ish
 80163e0:	07db      	lsls	r3, r3, #31
 80163e2:	d40b      	bmi.n	80163fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80163e4:	4620      	mov	r0, r4
 80163e6:	f008 ffd8 	bl	801f39a <__cxa_guard_acquire>
 80163ea:	b138      	cbz	r0, 80163fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80163ec:	4620      	mov	r0, r4
 80163ee:	f008 ffe0 	bl	801f3b2 <__cxa_guard_release>
 80163f2:	4a06      	ldr	r2, [pc, #24]	; (801640c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80163f4:	4909      	ldr	r1, [pc, #36]	; (801641c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80163f6:	480a      	ldr	r0, [pc, #40]	; (8016420 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80163f8:	f008 ffc8 	bl	801f38c <__aeabi_atexit>
 80163fc:	4b05      	ldr	r3, [pc, #20]	; (8016414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80163fe:	61ab      	str	r3, [r5, #24]
 8016400:	4b07      	ldr	r3, [pc, #28]	; (8016420 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8016402:	61eb      	str	r3, [r5, #28]
 8016404:	bd38      	pop	{r3, r4, r5, pc}
 8016406:	bf00      	nop
 8016408:	2000d4d8 	.word	0x2000d4d8
 801640c:	20000000 	.word	0x20000000
 8016410:	08014831 	.word	0x08014831
 8016414:	20000084 	.word	0x20000084
 8016418:	2000d4dc 	.word	0x2000d4dc
 801641c:	0801482f 	.word	0x0801482f
 8016420:	20000088 	.word	0x20000088

08016424 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8016424:	b510      	push	{r4, lr}
 8016426:	4604      	mov	r4, r0
 8016428:	f7ff ff88 	bl	801633c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801642c:	4620      	mov	r0, r4
 801642e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016432:	f7ff bfbd 	b.w	80163b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08016438 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8016438:	b538      	push	{r3, r4, r5, lr}
 801643a:	4c15      	ldr	r4, [pc, #84]	; (8016490 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801643c:	7823      	ldrb	r3, [r4, #0]
 801643e:	f3bf 8f5b 	dmb	ish
 8016442:	07da      	lsls	r2, r3, #31
 8016444:	4605      	mov	r5, r0
 8016446:	d40b      	bmi.n	8016460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016448:	4620      	mov	r0, r4
 801644a:	f008 ffa6 	bl	801f39a <__cxa_guard_acquire>
 801644e:	b138      	cbz	r0, 8016460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8016450:	4620      	mov	r0, r4
 8016452:	f008 ffae 	bl	801f3b2 <__cxa_guard_release>
 8016456:	4a0f      	ldr	r2, [pc, #60]	; (8016494 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8016458:	490f      	ldr	r1, [pc, #60]	; (8016498 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801645a:	4810      	ldr	r0, [pc, #64]	; (801649c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801645c:	f008 ff96 	bl	801f38c <__aeabi_atexit>
 8016460:	4c0f      	ldr	r4, [pc, #60]	; (80164a0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8016462:	7823      	ldrb	r3, [r4, #0]
 8016464:	f3bf 8f5b 	dmb	ish
 8016468:	07db      	lsls	r3, r3, #31
 801646a:	d40b      	bmi.n	8016484 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801646c:	4620      	mov	r0, r4
 801646e:	f008 ff94 	bl	801f39a <__cxa_guard_acquire>
 8016472:	b138      	cbz	r0, 8016484 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8016474:	4620      	mov	r0, r4
 8016476:	f008 ff9c 	bl	801f3b2 <__cxa_guard_release>
 801647a:	4a06      	ldr	r2, [pc, #24]	; (8016494 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801647c:	4909      	ldr	r1, [pc, #36]	; (80164a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801647e:	480a      	ldr	r0, [pc, #40]	; (80164a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8016480:	f008 ff84 	bl	801f38c <__aeabi_atexit>
 8016484:	4b05      	ldr	r3, [pc, #20]	; (801649c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8016486:	632b      	str	r3, [r5, #48]	; 0x30
 8016488:	4b07      	ldr	r3, [pc, #28]	; (80164a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801648a:	636b      	str	r3, [r5, #52]	; 0x34
 801648c:	bd38      	pop	{r3, r4, r5, pc}
 801648e:	bf00      	nop
 8016490:	2000d510 	.word	0x2000d510
 8016494:	20000000 	.word	0x20000000
 8016498:	08014825 	.word	0x08014825
 801649c:	200000bc 	.word	0x200000bc
 80164a0:	2000d514 	.word	0x2000d514
 80164a4:	08014823 	.word	0x08014823
 80164a8:	200000c0 	.word	0x200000c0

080164ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80164ac:	b538      	push	{r3, r4, r5, lr}
 80164ae:	4c15      	ldr	r4, [pc, #84]	; (8016504 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80164b0:	7823      	ldrb	r3, [r4, #0]
 80164b2:	f3bf 8f5b 	dmb	ish
 80164b6:	07da      	lsls	r2, r3, #31
 80164b8:	4605      	mov	r5, r0
 80164ba:	d40b      	bmi.n	80164d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80164bc:	4620      	mov	r0, r4
 80164be:	f008 ff6c 	bl	801f39a <__cxa_guard_acquire>
 80164c2:	b138      	cbz	r0, 80164d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80164c4:	4620      	mov	r0, r4
 80164c6:	f008 ff74 	bl	801f3b2 <__cxa_guard_release>
 80164ca:	4a0f      	ldr	r2, [pc, #60]	; (8016508 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80164cc:	490f      	ldr	r1, [pc, #60]	; (801650c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80164ce:	4810      	ldr	r0, [pc, #64]	; (8016510 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80164d0:	f008 ff5c 	bl	801f38c <__aeabi_atexit>
 80164d4:	4c0f      	ldr	r4, [pc, #60]	; (8016514 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80164d6:	7823      	ldrb	r3, [r4, #0]
 80164d8:	f3bf 8f5b 	dmb	ish
 80164dc:	07db      	lsls	r3, r3, #31
 80164de:	d40b      	bmi.n	80164f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80164e0:	4620      	mov	r0, r4
 80164e2:	f008 ff5a 	bl	801f39a <__cxa_guard_acquire>
 80164e6:	b138      	cbz	r0, 80164f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80164e8:	4620      	mov	r0, r4
 80164ea:	f008 ff62 	bl	801f3b2 <__cxa_guard_release>
 80164ee:	4a06      	ldr	r2, [pc, #24]	; (8016508 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80164f0:	4909      	ldr	r1, [pc, #36]	; (8016518 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80164f2:	480a      	ldr	r0, [pc, #40]	; (801651c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80164f4:	f008 ff4a 	bl	801f38c <__aeabi_atexit>
 80164f8:	4b05      	ldr	r3, [pc, #20]	; (8016510 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80164fa:	62ab      	str	r3, [r5, #40]	; 0x28
 80164fc:	4b07      	ldr	r3, [pc, #28]	; (801651c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80164fe:	62eb      	str	r3, [r5, #44]	; 0x2c
 8016500:	bd38      	pop	{r3, r4, r5, pc}
 8016502:	bf00      	nop
 8016504:	2000d4e0 	.word	0x2000d4e0
 8016508:	20000000 	.word	0x20000000
 801650c:	08014829 	.word	0x08014829
 8016510:	2000008c 	.word	0x2000008c
 8016514:	2000d4e4 	.word	0x2000d4e4
 8016518:	08014827 	.word	0x08014827
 801651c:	20000090 	.word	0x20000090

08016520 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8016520:	b510      	push	{r4, lr}
 8016522:	4604      	mov	r4, r0
 8016524:	f7ff ff88 	bl	8016438 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8016528:	4620      	mov	r0, r4
 801652a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801652e:	f7ff bfbd 	b.w	80164ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08016534 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8016534:	b538      	push	{r3, r4, r5, lr}
 8016536:	4c15      	ldr	r4, [pc, #84]	; (801658c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8016538:	7823      	ldrb	r3, [r4, #0]
 801653a:	f3bf 8f5b 	dmb	ish
 801653e:	07da      	lsls	r2, r3, #31
 8016540:	4605      	mov	r5, r0
 8016542:	d40b      	bmi.n	801655c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8016544:	4620      	mov	r0, r4
 8016546:	f008 ff28 	bl	801f39a <__cxa_guard_acquire>
 801654a:	b138      	cbz	r0, 801655c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801654c:	4620      	mov	r0, r4
 801654e:	f008 ff30 	bl	801f3b2 <__cxa_guard_release>
 8016552:	4a0f      	ldr	r2, [pc, #60]	; (8016590 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016554:	490f      	ldr	r1, [pc, #60]	; (8016594 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8016556:	4810      	ldr	r0, [pc, #64]	; (8016598 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016558:	f008 ff18 	bl	801f38c <__aeabi_atexit>
 801655c:	4c0f      	ldr	r4, [pc, #60]	; (801659c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801655e:	7823      	ldrb	r3, [r4, #0]
 8016560:	f3bf 8f5b 	dmb	ish
 8016564:	07db      	lsls	r3, r3, #31
 8016566:	d40b      	bmi.n	8016580 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016568:	4620      	mov	r0, r4
 801656a:	f008 ff16 	bl	801f39a <__cxa_guard_acquire>
 801656e:	b138      	cbz	r0, 8016580 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8016570:	4620      	mov	r0, r4
 8016572:	f008 ff1e 	bl	801f3b2 <__cxa_guard_release>
 8016576:	4a06      	ldr	r2, [pc, #24]	; (8016590 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8016578:	4909      	ldr	r1, [pc, #36]	; (80165a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801657a:	480a      	ldr	r0, [pc, #40]	; (80165a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801657c:	f008 ff06 	bl	801f38c <__aeabi_atexit>
 8016580:	4b05      	ldr	r3, [pc, #20]	; (8016598 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8016582:	652b      	str	r3, [r5, #80]	; 0x50
 8016584:	4b07      	ldr	r3, [pc, #28]	; (80165a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8016586:	656b      	str	r3, [r5, #84]	; 0x54
 8016588:	bd38      	pop	{r3, r4, r5, pc}
 801658a:	bf00      	nop
 801658c:	2000d518 	.word	0x2000d518
 8016590:	20000000 	.word	0x20000000
 8016594:	08014815 	.word	0x08014815
 8016598:	200000c4 	.word	0x200000c4
 801659c:	2000d51c 	.word	0x2000d51c
 80165a0:	08014813 	.word	0x08014813
 80165a4:	200000c8 	.word	0x200000c8

080165a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80165a8:	b538      	push	{r3, r4, r5, lr}
 80165aa:	4c15      	ldr	r4, [pc, #84]	; (8016600 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80165ac:	7823      	ldrb	r3, [r4, #0]
 80165ae:	f3bf 8f5b 	dmb	ish
 80165b2:	07da      	lsls	r2, r3, #31
 80165b4:	4605      	mov	r5, r0
 80165b6:	d40b      	bmi.n	80165d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80165b8:	4620      	mov	r0, r4
 80165ba:	f008 feee 	bl	801f39a <__cxa_guard_acquire>
 80165be:	b138      	cbz	r0, 80165d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80165c0:	4620      	mov	r0, r4
 80165c2:	f008 fef6 	bl	801f3b2 <__cxa_guard_release>
 80165c6:	4a0f      	ldr	r2, [pc, #60]	; (8016604 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80165c8:	490f      	ldr	r1, [pc, #60]	; (8016608 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80165ca:	4810      	ldr	r0, [pc, #64]	; (801660c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80165cc:	f008 fede 	bl	801f38c <__aeabi_atexit>
 80165d0:	4c0f      	ldr	r4, [pc, #60]	; (8016610 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80165d2:	7823      	ldrb	r3, [r4, #0]
 80165d4:	f3bf 8f5b 	dmb	ish
 80165d8:	07db      	lsls	r3, r3, #31
 80165da:	d40b      	bmi.n	80165f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80165dc:	4620      	mov	r0, r4
 80165de:	f008 fedc 	bl	801f39a <__cxa_guard_acquire>
 80165e2:	b138      	cbz	r0, 80165f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80165e4:	4620      	mov	r0, r4
 80165e6:	f008 fee4 	bl	801f3b2 <__cxa_guard_release>
 80165ea:	4a06      	ldr	r2, [pc, #24]	; (8016604 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80165ec:	4909      	ldr	r1, [pc, #36]	; (8016614 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80165ee:	480a      	ldr	r0, [pc, #40]	; (8016618 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80165f0:	f008 fecc 	bl	801f38c <__aeabi_atexit>
 80165f4:	4b05      	ldr	r3, [pc, #20]	; (801660c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80165f6:	64ab      	str	r3, [r5, #72]	; 0x48
 80165f8:	4b07      	ldr	r3, [pc, #28]	; (8016618 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80165fa:	64eb      	str	r3, [r5, #76]	; 0x4c
 80165fc:	bd38      	pop	{r3, r4, r5, pc}
 80165fe:	bf00      	nop
 8016600:	2000d520 	.word	0x2000d520
 8016604:	20000000 	.word	0x20000000
 8016608:	08014819 	.word	0x08014819
 801660c:	200000cc 	.word	0x200000cc
 8016610:	2000d524 	.word	0x2000d524
 8016614:	08014817 	.word	0x08014817
 8016618:	200000d0 	.word	0x200000d0

0801661c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801661c:	b538      	push	{r3, r4, r5, lr}
 801661e:	4c15      	ldr	r4, [pc, #84]	; (8016674 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8016620:	7823      	ldrb	r3, [r4, #0]
 8016622:	f3bf 8f5b 	dmb	ish
 8016626:	07da      	lsls	r2, r3, #31
 8016628:	4605      	mov	r5, r0
 801662a:	d40b      	bmi.n	8016644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801662c:	4620      	mov	r0, r4
 801662e:	f008 feb4 	bl	801f39a <__cxa_guard_acquire>
 8016632:	b138      	cbz	r0, 8016644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8016634:	4620      	mov	r0, r4
 8016636:	f008 febc 	bl	801f3b2 <__cxa_guard_release>
 801663a:	4a0f      	ldr	r2, [pc, #60]	; (8016678 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801663c:	490f      	ldr	r1, [pc, #60]	; (801667c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801663e:	4810      	ldr	r0, [pc, #64]	; (8016680 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8016640:	f008 fea4 	bl	801f38c <__aeabi_atexit>
 8016644:	4c0f      	ldr	r4, [pc, #60]	; (8016684 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8016646:	7823      	ldrb	r3, [r4, #0]
 8016648:	f3bf 8f5b 	dmb	ish
 801664c:	07db      	lsls	r3, r3, #31
 801664e:	d40b      	bmi.n	8016668 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016650:	4620      	mov	r0, r4
 8016652:	f008 fea2 	bl	801f39a <__cxa_guard_acquire>
 8016656:	b138      	cbz	r0, 8016668 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8016658:	4620      	mov	r0, r4
 801665a:	f008 feaa 	bl	801f3b2 <__cxa_guard_release>
 801665e:	4a06      	ldr	r2, [pc, #24]	; (8016678 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8016660:	4909      	ldr	r1, [pc, #36]	; (8016688 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8016662:	480a      	ldr	r0, [pc, #40]	; (801668c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8016664:	f008 fe92 	bl	801f38c <__aeabi_atexit>
 8016668:	4b05      	ldr	r3, [pc, #20]	; (8016680 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801666a:	642b      	str	r3, [r5, #64]	; 0x40
 801666c:	4b07      	ldr	r3, [pc, #28]	; (801668c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801666e:	646b      	str	r3, [r5, #68]	; 0x44
 8016670:	bd38      	pop	{r3, r4, r5, pc}
 8016672:	bf00      	nop
 8016674:	2000d4e8 	.word	0x2000d4e8
 8016678:	20000000 	.word	0x20000000
 801667c:	0801481d 	.word	0x0801481d
 8016680:	20000094 	.word	0x20000094
 8016684:	2000d4ec 	.word	0x2000d4ec
 8016688:	0801481b 	.word	0x0801481b
 801668c:	20000098 	.word	0x20000098

08016690 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8016690:	b538      	push	{r3, r4, r5, lr}
 8016692:	4c15      	ldr	r4, [pc, #84]	; (80166e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8016694:	7823      	ldrb	r3, [r4, #0]
 8016696:	f3bf 8f5b 	dmb	ish
 801669a:	07da      	lsls	r2, r3, #31
 801669c:	4605      	mov	r5, r0
 801669e:	d40b      	bmi.n	80166b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80166a0:	4620      	mov	r0, r4
 80166a2:	f008 fe7a 	bl	801f39a <__cxa_guard_acquire>
 80166a6:	b138      	cbz	r0, 80166b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80166a8:	4620      	mov	r0, r4
 80166aa:	f008 fe82 	bl	801f3b2 <__cxa_guard_release>
 80166ae:	4a0f      	ldr	r2, [pc, #60]	; (80166ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80166b0:	490f      	ldr	r1, [pc, #60]	; (80166f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80166b2:	4810      	ldr	r0, [pc, #64]	; (80166f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80166b4:	f008 fe6a 	bl	801f38c <__aeabi_atexit>
 80166b8:	4c0f      	ldr	r4, [pc, #60]	; (80166f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80166ba:	7823      	ldrb	r3, [r4, #0]
 80166bc:	f3bf 8f5b 	dmb	ish
 80166c0:	07db      	lsls	r3, r3, #31
 80166c2:	d40b      	bmi.n	80166dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80166c4:	4620      	mov	r0, r4
 80166c6:	f008 fe68 	bl	801f39a <__cxa_guard_acquire>
 80166ca:	b138      	cbz	r0, 80166dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80166cc:	4620      	mov	r0, r4
 80166ce:	f008 fe70 	bl	801f3b2 <__cxa_guard_release>
 80166d2:	4a06      	ldr	r2, [pc, #24]	; (80166ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80166d4:	4909      	ldr	r1, [pc, #36]	; (80166fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80166d6:	480a      	ldr	r0, [pc, #40]	; (8016700 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80166d8:	f008 fe58 	bl	801f38c <__aeabi_atexit>
 80166dc:	4b05      	ldr	r3, [pc, #20]	; (80166f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80166de:	63ab      	str	r3, [r5, #56]	; 0x38
 80166e0:	4b07      	ldr	r3, [pc, #28]	; (8016700 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80166e2:	63eb      	str	r3, [r5, #60]	; 0x3c
 80166e4:	bd38      	pop	{r3, r4, r5, pc}
 80166e6:	bf00      	nop
 80166e8:	2000d508 	.word	0x2000d508
 80166ec:	20000000 	.word	0x20000000
 80166f0:	08014821 	.word	0x08014821
 80166f4:	200000b4 	.word	0x200000b4
 80166f8:	2000d50c 	.word	0x2000d50c
 80166fc:	0801481f 	.word	0x0801481f
 8016700:	200000b8 	.word	0x200000b8

08016704 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8016704:	b510      	push	{r4, lr}
 8016706:	4604      	mov	r4, r0
 8016708:	f7ff ff14 	bl	8016534 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801670c:	4620      	mov	r0, r4
 801670e:	f7ff ff85 	bl	801661c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8016712:	4620      	mov	r0, r4
 8016714:	f7ff ff48 	bl	80165a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8016718:	4620      	mov	r0, r4
 801671a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801671e:	f7ff bfb7 	b.w	8016690 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08016724 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8016724:	b538      	push	{r3, r4, r5, lr}
 8016726:	4c15      	ldr	r4, [pc, #84]	; (801677c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8016728:	7823      	ldrb	r3, [r4, #0]
 801672a:	f3bf 8f5b 	dmb	ish
 801672e:	07da      	lsls	r2, r3, #31
 8016730:	4605      	mov	r5, r0
 8016732:	d40b      	bmi.n	801674c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8016734:	4620      	mov	r0, r4
 8016736:	f008 fe30 	bl	801f39a <__cxa_guard_acquire>
 801673a:	b138      	cbz	r0, 801674c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801673c:	4620      	mov	r0, r4
 801673e:	f008 fe38 	bl	801f3b2 <__cxa_guard_release>
 8016742:	4a0f      	ldr	r2, [pc, #60]	; (8016780 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016744:	490f      	ldr	r1, [pc, #60]	; (8016784 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8016746:	4810      	ldr	r0, [pc, #64]	; (8016788 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016748:	f008 fe20 	bl	801f38c <__aeabi_atexit>
 801674c:	4c0f      	ldr	r4, [pc, #60]	; (801678c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801674e:	7823      	ldrb	r3, [r4, #0]
 8016750:	f3bf 8f5b 	dmb	ish
 8016754:	07db      	lsls	r3, r3, #31
 8016756:	d40b      	bmi.n	8016770 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016758:	4620      	mov	r0, r4
 801675a:	f008 fe1e 	bl	801f39a <__cxa_guard_acquire>
 801675e:	b138      	cbz	r0, 8016770 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8016760:	4620      	mov	r0, r4
 8016762:	f008 fe26 	bl	801f3b2 <__cxa_guard_release>
 8016766:	4a06      	ldr	r2, [pc, #24]	; (8016780 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8016768:	4909      	ldr	r1, [pc, #36]	; (8016790 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801676a:	480a      	ldr	r0, [pc, #40]	; (8016794 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801676c:	f008 fe0e 	bl	801f38c <__aeabi_atexit>
 8016770:	4b05      	ldr	r3, [pc, #20]	; (8016788 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8016772:	662b      	str	r3, [r5, #96]	; 0x60
 8016774:	4b07      	ldr	r3, [pc, #28]	; (8016794 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8016776:	666b      	str	r3, [r5, #100]	; 0x64
 8016778:	bd38      	pop	{r3, r4, r5, pc}
 801677a:	bf00      	nop
 801677c:	2000d4f0 	.word	0x2000d4f0
 8016780:	20000000 	.word	0x20000000
 8016784:	0801480d 	.word	0x0801480d
 8016788:	2000009c 	.word	0x2000009c
 801678c:	2000d4f4 	.word	0x2000d4f4
 8016790:	0801480b 	.word	0x0801480b
 8016794:	200000a0 	.word	0x200000a0

08016798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8016798:	b538      	push	{r3, r4, r5, lr}
 801679a:	4c15      	ldr	r4, [pc, #84]	; (80167f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801679c:	7823      	ldrb	r3, [r4, #0]
 801679e:	f3bf 8f5b 	dmb	ish
 80167a2:	07da      	lsls	r2, r3, #31
 80167a4:	4605      	mov	r5, r0
 80167a6:	d40b      	bmi.n	80167c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80167a8:	4620      	mov	r0, r4
 80167aa:	f008 fdf6 	bl	801f39a <__cxa_guard_acquire>
 80167ae:	b138      	cbz	r0, 80167c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80167b0:	4620      	mov	r0, r4
 80167b2:	f008 fdfe 	bl	801f3b2 <__cxa_guard_release>
 80167b6:	4a0f      	ldr	r2, [pc, #60]	; (80167f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80167b8:	490f      	ldr	r1, [pc, #60]	; (80167f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80167ba:	4810      	ldr	r0, [pc, #64]	; (80167fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80167bc:	f008 fde6 	bl	801f38c <__aeabi_atexit>
 80167c0:	4c0f      	ldr	r4, [pc, #60]	; (8016800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80167c2:	7823      	ldrb	r3, [r4, #0]
 80167c4:	f3bf 8f5b 	dmb	ish
 80167c8:	07db      	lsls	r3, r3, #31
 80167ca:	d40b      	bmi.n	80167e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80167cc:	4620      	mov	r0, r4
 80167ce:	f008 fde4 	bl	801f39a <__cxa_guard_acquire>
 80167d2:	b138      	cbz	r0, 80167e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80167d4:	4620      	mov	r0, r4
 80167d6:	f008 fdec 	bl	801f3b2 <__cxa_guard_release>
 80167da:	4a06      	ldr	r2, [pc, #24]	; (80167f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80167dc:	4909      	ldr	r1, [pc, #36]	; (8016804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80167de:	480a      	ldr	r0, [pc, #40]	; (8016808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80167e0:	f008 fdd4 	bl	801f38c <__aeabi_atexit>
 80167e4:	4b05      	ldr	r3, [pc, #20]	; (80167fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80167e6:	65ab      	str	r3, [r5, #88]	; 0x58
 80167e8:	4b07      	ldr	r3, [pc, #28]	; (8016808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80167ea:	65eb      	str	r3, [r5, #92]	; 0x5c
 80167ec:	bd38      	pop	{r3, r4, r5, pc}
 80167ee:	bf00      	nop
 80167f0:	2000d4c8 	.word	0x2000d4c8
 80167f4:	20000000 	.word	0x20000000
 80167f8:	08014811 	.word	0x08014811
 80167fc:	20000074 	.word	0x20000074
 8016800:	2000d4cc 	.word	0x2000d4cc
 8016804:	0801480f 	.word	0x0801480f
 8016808:	20000078 	.word	0x20000078

0801680c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801680c:	b510      	push	{r4, lr}
 801680e:	4604      	mov	r4, r0
 8016810:	f7ff ff88 	bl	8016724 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8016814:	4620      	mov	r0, r4
 8016816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801681a:	f7ff bfbd 	b.w	8016798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08016820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8016820:	b538      	push	{r3, r4, r5, lr}
 8016822:	4c15      	ldr	r4, [pc, #84]	; (8016878 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8016824:	7823      	ldrb	r3, [r4, #0]
 8016826:	f3bf 8f5b 	dmb	ish
 801682a:	07da      	lsls	r2, r3, #31
 801682c:	4605      	mov	r5, r0
 801682e:	d40b      	bmi.n	8016848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016830:	4620      	mov	r0, r4
 8016832:	f008 fdb2 	bl	801f39a <__cxa_guard_acquire>
 8016836:	b138      	cbz	r0, 8016848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8016838:	4620      	mov	r0, r4
 801683a:	f008 fdba 	bl	801f3b2 <__cxa_guard_release>
 801683e:	4a0f      	ldr	r2, [pc, #60]	; (801687c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016840:	490f      	ldr	r1, [pc, #60]	; (8016880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8016842:	4810      	ldr	r0, [pc, #64]	; (8016884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8016844:	f008 fda2 	bl	801f38c <__aeabi_atexit>
 8016848:	4c0f      	ldr	r4, [pc, #60]	; (8016888 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801684a:	7823      	ldrb	r3, [r4, #0]
 801684c:	f3bf 8f5b 	dmb	ish
 8016850:	07db      	lsls	r3, r3, #31
 8016852:	d40b      	bmi.n	801686c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8016854:	4620      	mov	r0, r4
 8016856:	f008 fda0 	bl	801f39a <__cxa_guard_acquire>
 801685a:	b138      	cbz	r0, 801686c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801685c:	4620      	mov	r0, r4
 801685e:	f008 fda8 	bl	801f3b2 <__cxa_guard_release>
 8016862:	4a06      	ldr	r2, [pc, #24]	; (801687c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8016864:	4909      	ldr	r1, [pc, #36]	; (801688c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8016866:	480a      	ldr	r0, [pc, #40]	; (8016890 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8016868:	f008 fd90 	bl	801f38c <__aeabi_atexit>
 801686c:	4b05      	ldr	r3, [pc, #20]	; (8016884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801686e:	672b      	str	r3, [r5, #112]	; 0x70
 8016870:	4b07      	ldr	r3, [pc, #28]	; (8016890 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8016872:	676b      	str	r3, [r5, #116]	; 0x74
 8016874:	bd38      	pop	{r3, r4, r5, pc}
 8016876:	bf00      	nop
 8016878:	2000d4c0 	.word	0x2000d4c0
 801687c:	20000000 	.word	0x20000000
 8016880:	08014805 	.word	0x08014805
 8016884:	2000006c 	.word	0x2000006c
 8016888:	2000d4c4 	.word	0x2000d4c4
 801688c:	08014803 	.word	0x08014803
 8016890:	20000070 	.word	0x20000070

08016894 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8016894:	b538      	push	{r3, r4, r5, lr}
 8016896:	4c15      	ldr	r4, [pc, #84]	; (80168ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8016898:	7823      	ldrb	r3, [r4, #0]
 801689a:	f3bf 8f5b 	dmb	ish
 801689e:	07da      	lsls	r2, r3, #31
 80168a0:	4605      	mov	r5, r0
 80168a2:	d40b      	bmi.n	80168bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80168a4:	4620      	mov	r0, r4
 80168a6:	f008 fd78 	bl	801f39a <__cxa_guard_acquire>
 80168aa:	b138      	cbz	r0, 80168bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80168ac:	4620      	mov	r0, r4
 80168ae:	f008 fd80 	bl	801f3b2 <__cxa_guard_release>
 80168b2:	4a0f      	ldr	r2, [pc, #60]	; (80168f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80168b4:	490f      	ldr	r1, [pc, #60]	; (80168f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80168b6:	4810      	ldr	r0, [pc, #64]	; (80168f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80168b8:	f008 fd68 	bl	801f38c <__aeabi_atexit>
 80168bc:	4c0f      	ldr	r4, [pc, #60]	; (80168fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80168be:	7823      	ldrb	r3, [r4, #0]
 80168c0:	f3bf 8f5b 	dmb	ish
 80168c4:	07db      	lsls	r3, r3, #31
 80168c6:	d40b      	bmi.n	80168e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80168c8:	4620      	mov	r0, r4
 80168ca:	f008 fd66 	bl	801f39a <__cxa_guard_acquire>
 80168ce:	b138      	cbz	r0, 80168e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80168d0:	4620      	mov	r0, r4
 80168d2:	f008 fd6e 	bl	801f3b2 <__cxa_guard_release>
 80168d6:	4a06      	ldr	r2, [pc, #24]	; (80168f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80168d8:	4909      	ldr	r1, [pc, #36]	; (8016900 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80168da:	480a      	ldr	r0, [pc, #40]	; (8016904 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80168dc:	f008 fd56 	bl	801f38c <__aeabi_atexit>
 80168e0:	4b05      	ldr	r3, [pc, #20]	; (80168f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80168e2:	66ab      	str	r3, [r5, #104]	; 0x68
 80168e4:	4b07      	ldr	r3, [pc, #28]	; (8016904 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80168e6:	66eb      	str	r3, [r5, #108]	; 0x6c
 80168e8:	bd38      	pop	{r3, r4, r5, pc}
 80168ea:	bf00      	nop
 80168ec:	2000d4b8 	.word	0x2000d4b8
 80168f0:	20000000 	.word	0x20000000
 80168f4:	08014809 	.word	0x08014809
 80168f8:	20000064 	.word	0x20000064
 80168fc:	2000d4bc 	.word	0x2000d4bc
 8016900:	08014807 	.word	0x08014807
 8016904:	20000068 	.word	0x20000068

08016908 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8016908:	b510      	push	{r4, lr}
 801690a:	4604      	mov	r4, r0
 801690c:	f7ff ff88 	bl	8016820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8016910:	4620      	mov	r0, r4
 8016912:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016916:	f7ff bfbd 	b.w	8016894 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801691a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801691a:	b510      	push	{r4, lr}
 801691c:	4604      	mov	r4, r0
 801691e:	f7ff fff3 	bl	8016908 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8016922:	4620      	mov	r0, r4
 8016924:	f7ff ff72 	bl	801680c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8016928:	4620      	mov	r0, r4
 801692a:	f7ff fdf9 	bl	8016520 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801692e:	4620      	mov	r0, r4
 8016930:	f7ff fcfa 	bl	8016328 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8016934:	4620      	mov	r0, r4
 8016936:	f7ff fd75 	bl	8016424 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801693a:	4620      	mov	r0, r4
 801693c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016940:	f7ff bee0 	b.w	8016704 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08016944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8016944:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016948:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801694c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8016950:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8016954:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8016958:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801695c:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8016960:	8808      	ldrh	r0, [r1, #0]
 8016962:	fb0e 4708 	mla	r7, lr, r8, r4
 8016966:	f1be 0f00 	cmp.w	lr, #0
 801696a:	eb02 0a07 	add.w	sl, r2, r7
 801696e:	db37      	blt.n	80169e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8016970:	45f3      	cmp	fp, lr
 8016972:	dd35      	ble.n	80169e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8016974:	2c00      	cmp	r4, #0
 8016976:	db31      	blt.n	80169dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8016978:	45a0      	cmp	r8, r4
 801697a:	dd2f      	ble.n	80169dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801697c:	5dd2      	ldrb	r2, [r2, r7]
 801697e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8016982:	1c62      	adds	r2, r4, #1
 8016984:	d42f      	bmi.n	80169e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8016986:	4590      	cmp	r8, r2
 8016988:	dd2d      	ble.n	80169e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801698a:	b366      	cbz	r6, 80169e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801698c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8016990:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016994:	f11e 0e01 	adds.w	lr, lr, #1
 8016998:	d429      	bmi.n	80169ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801699a:	45f3      	cmp	fp, lr
 801699c:	dd27      	ble.n	80169ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801699e:	f1bc 0f00 	cmp.w	ip, #0
 80169a2:	f000 80a0 	beq.w	8016ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80169a6:	2c00      	cmp	r4, #0
 80169a8:	db1f      	blt.n	80169ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80169aa:	45a0      	cmp	r8, r4
 80169ac:	dd1d      	ble.n	80169ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80169ae:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80169b2:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80169b6:	3401      	adds	r4, #1
 80169b8:	d41c      	bmi.n	80169f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80169ba:	45a0      	cmp	r8, r4
 80169bc:	dd1a      	ble.n	80169f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80169be:	b1de      	cbz	r6, 80169f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80169c0:	44d0      	add	r8, sl
 80169c2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80169c6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80169ca:	2e0f      	cmp	r6, #15
 80169cc:	d915      	bls.n	80169fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80169ce:	4b49      	ldr	r3, [pc, #292]	; (8016af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80169d0:	4a49      	ldr	r2, [pc, #292]	; (8016af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80169d2:	484a      	ldr	r0, [pc, #296]	; (8016afc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80169d4:	f240 11ef 	movw	r1, #495	; 0x1ef
 80169d8:	f008 fd0c 	bl	801f3f4 <__assert_func>
 80169dc:	4681      	mov	r9, r0
 80169de:	e7d0      	b.n	8016982 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80169e0:	4607      	mov	r7, r0
 80169e2:	4681      	mov	r9, r0
 80169e4:	e7d6      	b.n	8016994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80169e6:	4607      	mov	r7, r0
 80169e8:	e7d4      	b.n	8016994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80169ea:	4686      	mov	lr, r0
 80169ec:	e7e3      	b.n	80169b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80169ee:	4603      	mov	r3, r0
 80169f0:	4686      	mov	lr, r0
 80169f2:	e7ea      	b.n	80169ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80169f4:	4603      	mov	r3, r0
 80169f6:	e7e8      	b.n	80169ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80169f8:	4603      	mov	r3, r0
 80169fa:	f1bc 0f0f 	cmp.w	ip, #15
 80169fe:	d8e6      	bhi.n	80169ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8016a00:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8016a04:	fb16 f80c 	smulbb	r8, r6, ip
 8016a08:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016a0c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016a10:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016a14:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016a18:	ea44 0909 	orr.w	r9, r4, r9
 8016a1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016a20:	f1cc 0410 	rsb	r4, ip, #16
 8016a24:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016a28:	1ba4      	subs	r4, r4, r6
 8016a2a:	041a      	lsls	r2, r3, #16
 8016a2c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8016a30:	ea4a 0707 	orr.w	r7, sl, r7
 8016a34:	4377      	muls	r7, r6
 8016a36:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016a3a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8016a3e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016a42:	fb04 7409 	mla	r4, r4, r9, r7
 8016a46:	4313      	orrs	r3, r2
 8016a48:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8016a4c:	fb08 4303 	mla	r3, r8, r3, r4
 8016a50:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016a54:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8016a58:	4322      	orrs	r2, r4
 8016a5a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016a5e:	fb0c 3202 	mla	r2, ip, r2, r3
 8016a62:	0d53      	lsrs	r3, r2, #21
 8016a64:	0952      	lsrs	r2, r2, #5
 8016a66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016a6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016a6e:	431a      	orrs	r2, r3
 8016a70:	b293      	uxth	r3, r2
 8016a72:	b2af      	uxth	r7, r5
 8016a74:	1202      	asrs	r2, r0, #8
 8016a76:	43ed      	mvns	r5, r5
 8016a78:	b2ed      	uxtb	r5, r5
 8016a7a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016a7e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016a82:	fb12 f205 	smulbb	r2, r2, r5
 8016a86:	10c6      	asrs	r6, r0, #3
 8016a88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a8c:	fb0c 2c07 	mla	ip, ip, r7, r2
 8016a90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016a94:	10da      	asrs	r2, r3, #3
 8016a96:	fb16 f605 	smulbb	r6, r6, r5
 8016a9a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016a9e:	fb02 6207 	mla	r2, r2, r7, r6
 8016aa2:	b296      	uxth	r6, r2
 8016aa4:	00c2      	lsls	r2, r0, #3
 8016aa6:	00dc      	lsls	r4, r3, #3
 8016aa8:	b2d2      	uxtb	r2, r2
 8016aaa:	b2e4      	uxtb	r4, r4
 8016aac:	fb12 f205 	smulbb	r2, r2, r5
 8016ab0:	fb04 2207 	mla	r2, r4, r7, r2
 8016ab4:	fa1f fc8c 	uxth.w	ip, ip
 8016ab8:	b292      	uxth	r2, r2
 8016aba:	f10c 0301 	add.w	r3, ip, #1
 8016abe:	1c50      	adds	r0, r2, #1
 8016ac0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8016ac4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016ac8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016acc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016ad0:	4313      	orrs	r3, r2
 8016ad2:	1c72      	adds	r2, r6, #1
 8016ad4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8016ad8:	0952      	lsrs	r2, r2, #5
 8016ada:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ade:	4313      	orrs	r3, r2
 8016ae0:	800b      	strh	r3, [r1, #0]
 8016ae2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ae6:	2e0f      	cmp	r6, #15
 8016ae8:	f63f af71 	bhi.w	80169ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8016aec:	4603      	mov	r3, r0
 8016aee:	4686      	mov	lr, r0
 8016af0:	e786      	b.n	8016a00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8016af2:	bf00      	nop
 8016af4:	08024033 	.word	0x08024033
 8016af8:	0802469a 	.word	0x0802469a
 8016afc:	0802411c 	.word	0x0802411c

08016b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b04:	ed2d 8b08 	vpush	{d8-d11}
 8016b08:	b099      	sub	sp, #100	; 0x64
 8016b0a:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8016b0e:	9215      	str	r2, [sp, #84]	; 0x54
 8016b10:	9309      	str	r3, [sp, #36]	; 0x24
 8016b12:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016b14:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8016b18:	930d      	str	r3, [sp, #52]	; 0x34
 8016b1a:	910c      	str	r1, [sp, #48]	; 0x30
 8016b1c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016b20:	9016      	str	r0, [sp, #88]	; 0x58
 8016b22:	6850      	ldr	r0, [r2, #4]
 8016b24:	6812      	ldr	r2, [r2, #0]
 8016b26:	fb00 1303 	mla	r3, r0, r3, r1
 8016b2a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8016b2e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016b30:	681b      	ldr	r3, [r3, #0]
 8016b32:	930b      	str	r3, [sp, #44]	; 0x2c
 8016b34:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016b36:	685e      	ldr	r6, [r3, #4]
 8016b38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b3a:	43db      	mvns	r3, r3
 8016b3c:	b2db      	uxtb	r3, r3
 8016b3e:	eeb0 aa40 	vmov.f32	s20, s0
 8016b42:	eef0 9a60 	vmov.f32	s19, s1
 8016b46:	eeb0 9a41 	vmov.f32	s18, s2
 8016b4a:	eeb0 8a62 	vmov.f32	s16, s5
 8016b4e:	eef0 8a43 	vmov.f32	s17, s6
 8016b52:	eef0 ba44 	vmov.f32	s23, s8
 8016b56:	eeb0 ba64 	vmov.f32	s22, s9
 8016b5a:	eef0 aa45 	vmov.f32	s21, s10
 8016b5e:	3604      	adds	r6, #4
 8016b60:	930a      	str	r3, [sp, #40]	; 0x28
 8016b62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016b64:	2b00      	cmp	r3, #0
 8016b66:	dc03      	bgt.n	8016b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016b68:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016b6a:	2b00      	cmp	r3, #0
 8016b6c:	f340 8226 	ble.w	8016fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8016b70:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016b72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016b76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016b7a:	1e48      	subs	r0, r1, #1
 8016b7c:	1e57      	subs	r7, r2, #1
 8016b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b80:	2b00      	cmp	r3, #0
 8016b82:	f340 80e4 	ble.w	8016d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8016b86:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8016b8a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016b8e:	d406      	bmi.n	8016b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016b90:	4584      	cmp	ip, r0
 8016b92:	da04      	bge.n	8016b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016b94:	2b00      	cmp	r3, #0
 8016b96:	db02      	blt.n	8016b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016b98:	42bb      	cmp	r3, r7
 8016b9a:	f2c0 80d9 	blt.w	8016d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016b9e:	f11c 0c01 	adds.w	ip, ip, #1
 8016ba2:	f100 80ca 	bmi.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016ba6:	4561      	cmp	r1, ip
 8016ba8:	f2c0 80c7 	blt.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bac:	3301      	adds	r3, #1
 8016bae:	f100 80c4 	bmi.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bb2:	429a      	cmp	r2, r3
 8016bb4:	f2c0 80c1 	blt.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8016bb8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8016bbc:	4647      	mov	r7, r8
 8016bbe:	f1bb 0f00 	cmp.w	fp, #0
 8016bc2:	f340 80e4 	ble.w	8016d8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8016bc6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8016bc8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016bca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016bce:	689b      	ldr	r3, [r3, #8]
 8016bd0:	ea5f 422a 	movs.w	r2, sl, asr #16
 8016bd4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016bd8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8016bdc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016be0:	f100 8122 	bmi.w	8016e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8016be4:	f103 39ff 	add.w	r9, r3, #4294967295
 8016be8:	454a      	cmp	r2, r9
 8016bea:	f280 811d 	bge.w	8016e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8016bee:	f1bc 0f00 	cmp.w	ip, #0
 8016bf2:	f2c0 8119 	blt.w	8016e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8016bf6:	f10e 39ff 	add.w	r9, lr, #4294967295
 8016bfa:	45cc      	cmp	ip, r9
 8016bfc:	f280 8114 	bge.w	8016e28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8016c00:	b21b      	sxth	r3, r3
 8016c02:	fb0c 2203 	mla	r2, ip, r3, r2
 8016c06:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016c08:	eb04 0902 	add.w	r9, r4, r2
 8016c0c:	5ca2      	ldrb	r2, [r4, r2]
 8016c0e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8016c12:	2800      	cmp	r0, #0
 8016c14:	f000 80ff 	beq.w	8016e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8016c18:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016c1c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8016c20:	9211      	str	r2, [sp, #68]	; 0x44
 8016c22:	b151      	cbz	r1, 8016c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016c24:	eb09 0203 	add.w	r2, r9, r3
 8016c28:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016c2c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016c30:	930f      	str	r3, [sp, #60]	; 0x3c
 8016c32:	7853      	ldrb	r3, [r2, #1]
 8016c34:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016c38:	9312      	str	r3, [sp, #72]	; 0x48
 8016c3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016c3c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016c3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016c42:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016c46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016c4a:	ea4c 0c03 	orr.w	ip, ip, r3
 8016c4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016c50:	041b      	lsls	r3, r3, #16
 8016c52:	fb10 f201 	smulbb	r2, r0, r1
 8016c56:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8016c5a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016c5e:	10d2      	asrs	r2, r2, #3
 8016c60:	4323      	orrs	r3, r4
 8016c62:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8016c66:	4353      	muls	r3, r2
 8016c68:	fb09 330c 	mla	r3, r9, ip, r3
 8016c6c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016c70:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016c74:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016c78:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016c7c:	f1c1 0c10 	rsb	ip, r1, #16
 8016c80:	ebac 0c00 	sub.w	ip, ip, r0
 8016c84:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016c88:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016c8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016c8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016c90:	0418      	lsls	r0, r3, #16
 8016c92:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016c96:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016c9a:	4318      	orrs	r0, r3
 8016c9c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016ca0:	fb02 c200 	mla	r2, r2, r0, ip
 8016ca4:	0d53      	lsrs	r3, r2, #21
 8016ca6:	0952      	lsrs	r2, r2, #5
 8016ca8:	f8b7 c000 	ldrh.w	ip, [r7]
 8016cac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016cb0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016cb4:	431a      	orrs	r2, r3
 8016cb6:	b292      	uxth	r2, r2
 8016cb8:	ea4f 212c 	mov.w	r1, ip, asr #8
 8016cbc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8016cc0:	1210      	asrs	r0, r2, #8
 8016cc2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016cc6:	fb11 f104 	smulbb	r1, r1, r4
 8016cca:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8016cce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016cd2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016cd6:	fb00 1003 	mla	r0, r0, r3, r1
 8016cda:	fa5f fc8c 	uxtb.w	ip, ip
 8016cde:	10d1      	asrs	r1, r2, #3
 8016ce0:	00d2      	lsls	r2, r2, #3
 8016ce2:	fb1c fc04 	smulbb	ip, ip, r4
 8016ce6:	b2d2      	uxtb	r2, r2
 8016ce8:	fb02 c203 	mla	r2, r2, r3, ip
 8016cec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016cf0:	b280      	uxth	r0, r0
 8016cf2:	b292      	uxth	r2, r2
 8016cf4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016cf8:	fb1e fe04 	smulbb	lr, lr, r4
 8016cfc:	fb01 e103 	mla	r1, r1, r3, lr
 8016d00:	f102 0c01 	add.w	ip, r2, #1
 8016d04:	1c43      	adds	r3, r0, #1
 8016d06:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016d0a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016d0e:	b289      	uxth	r1, r1
 8016d10:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016d14:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016d18:	4313      	orrs	r3, r2
 8016d1a:	1c4a      	adds	r2, r1, #1
 8016d1c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016d20:	0949      	lsrs	r1, r1, #5
 8016d22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d26:	430b      	orrs	r3, r1
 8016d28:	803b      	strh	r3, [r7, #0]
 8016d2a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d2c:	449a      	add	sl, r3
 8016d2e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016d30:	3702      	adds	r7, #2
 8016d32:	441d      	add	r5, r3
 8016d34:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016d38:	e741      	b.n	8016bbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8016d3a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016d3c:	449a      	add	sl, r3
 8016d3e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016d40:	441d      	add	r5, r3
 8016d42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d44:	3b01      	subs	r3, #1
 8016d46:	9309      	str	r3, [sp, #36]	; 0x24
 8016d48:	f108 0802 	add.w	r8, r8, #2
 8016d4c:	e717      	b.n	8016b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016d4e:	d023      	beq.n	8016d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8016d50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d52:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8016d54:	3b01      	subs	r3, #1
 8016d56:	fb00 a003 	mla	r0, r0, r3, sl
 8016d5a:	1400      	asrs	r0, r0, #16
 8016d5c:	f53f af2c 	bmi.w	8016bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016d60:	3901      	subs	r1, #1
 8016d62:	4288      	cmp	r0, r1
 8016d64:	f6bf af28 	bge.w	8016bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016d68:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8016d6a:	fb01 5303 	mla	r3, r1, r3, r5
 8016d6e:	141b      	asrs	r3, r3, #16
 8016d70:	f53f af22 	bmi.w	8016bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016d74:	3a01      	subs	r2, #1
 8016d76:	4293      	cmp	r3, r2
 8016d78:	f6bf af1e 	bge.w	8016bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8016d7c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016d80:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8016d84:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8016d88:	f1be 0f00 	cmp.w	lr, #0
 8016d8c:	dc6c      	bgt.n	8016e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8016d8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d90:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016d94:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016d98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016d9a:	2b00      	cmp	r3, #0
 8016d9c:	f340 810e 	ble.w	8016fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8016da0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016da4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016da8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016dac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016dae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016db2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016db6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016dba:	eef0 6a48 	vmov.f32	s13, s16
 8016dbe:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016dc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016dc6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016dca:	ee16 aa90 	vmov	sl, s13
 8016dce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016dd2:	eef0 6a68 	vmov.f32	s13, s17
 8016dd6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016dda:	ee18 2a10 	vmov	r2, s16
 8016dde:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016de2:	fb92 f3f3 	sdiv	r3, r2, r3
 8016de6:	ee18 2a90 	vmov	r2, s17
 8016dea:	932d      	str	r3, [sp, #180]	; 0xb4
 8016dec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016dee:	fb92 f3f3 	sdiv	r3, r2, r3
 8016df2:	932e      	str	r3, [sp, #184]	; 0xb8
 8016df4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016df6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8016df8:	3b01      	subs	r3, #1
 8016dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016dfe:	930c      	str	r3, [sp, #48]	; 0x30
 8016e00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016e02:	bf08      	it	eq
 8016e04:	4613      	moveq	r3, r2
 8016e06:	ee16 5a90 	vmov	r5, s13
 8016e0a:	9309      	str	r3, [sp, #36]	; 0x24
 8016e0c:	eef0 8a67 	vmov.f32	s17, s15
 8016e10:	eeb0 8a47 	vmov.f32	s16, s14
 8016e14:	e6a5      	b.n	8016b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8016e16:	2900      	cmp	r1, #0
 8016e18:	f43f af0f 	beq.w	8016c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016e1c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016e20:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016e24:	930f      	str	r3, [sp, #60]	; 0x3c
 8016e26:	e708      	b.n	8016c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8016e28:	f112 0901 	adds.w	r9, r2, #1
 8016e2c:	f53f af7d 	bmi.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016e30:	454b      	cmp	r3, r9
 8016e32:	f6ff af7a 	blt.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016e36:	f11c 0901 	adds.w	r9, ip, #1
 8016e3a:	f53f af76 	bmi.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016e3e:	45ce      	cmp	lr, r9
 8016e40:	f6ff af73 	blt.w	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016e44:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016e46:	9202      	str	r2, [sp, #8]
 8016e48:	b21b      	sxth	r3, r3
 8016e4a:	fa0f f28e 	sxth.w	r2, lr
 8016e4e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8016e52:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016e56:	9201      	str	r2, [sp, #4]
 8016e58:	9300      	str	r3, [sp, #0]
 8016e5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016e5c:	9816      	ldr	r0, [sp, #88]	; 0x58
 8016e5e:	4633      	mov	r3, r6
 8016e60:	4639      	mov	r1, r7
 8016e62:	f7ff fd6f 	bl	8016944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016e66:	e760      	b.n	8016d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016e68:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016e6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016e6c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016e70:	ea4f 422a 	mov.w	r2, sl, asr #16
 8016e74:	1429      	asrs	r1, r5, #16
 8016e76:	fb03 2101 	mla	r1, r3, r1, r2
 8016e7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016e7c:	440a      	add	r2, r1
 8016e7e:	5c61      	ldrb	r1, [r4, r1]
 8016e80:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8016e84:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016e88:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8016e8c:	f1bc 0f00 	cmp.w	ip, #0
 8016e90:	f000 808c 	beq.w	8016fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8016e94:	7857      	ldrb	r7, [r2, #1]
 8016e96:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8016e9a:	9413      	str	r4, [sp, #76]	; 0x4c
 8016e9c:	b140      	cbz	r0, 8016eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8016e9e:	18d7      	adds	r7, r2, r3
 8016ea0:	5cd3      	ldrb	r3, [r2, r3]
 8016ea2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016ea6:	9310      	str	r3, [sp, #64]	; 0x40
 8016ea8:	787b      	ldrb	r3, [r7, #1]
 8016eaa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016eae:	9314      	str	r3, [sp, #80]	; 0x50
 8016eb0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016eb2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016eb4:	fb1c f200 	smulbb	r2, ip, r0
 8016eb8:	041f      	lsls	r7, r3, #16
 8016eba:	10d2      	asrs	r2, r2, #3
 8016ebc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016ec0:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016ec4:	431f      	orrs	r7, r3
 8016ec6:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8016eca:	9317      	str	r3, [sp, #92]	; 0x5c
 8016ecc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016ece:	041b      	lsls	r3, r3, #16
 8016ed0:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8016ed4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016ed8:	ea43 030b 	orr.w	r3, r3, fp
 8016edc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016ede:	4353      	muls	r3, r2
 8016ee0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016ee4:	fb04 3707 	mla	r7, r4, r7, r3
 8016ee8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016eec:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016ef0:	ea43 0b01 	orr.w	fp, r3, r1
 8016ef4:	f1c0 0110 	rsb	r1, r0, #16
 8016ef8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016efa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016efc:	eba1 0c0c 	sub.w	ip, r1, ip
 8016f00:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016f04:	fb0c 770b 	mla	r7, ip, fp, r7
 8016f08:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016f0c:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8016f10:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016f14:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016f18:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016f1c:	fb02 770c 	mla	r7, r2, ip, r7
 8016f20:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016f22:	0d79      	lsrs	r1, r7, #21
 8016f24:	097f      	lsrs	r7, r7, #5
 8016f26:	8812      	ldrh	r2, [r2, #0]
 8016f28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016f2c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016f30:	430f      	orrs	r7, r1
 8016f32:	b2bb      	uxth	r3, r7
 8016f34:	1211      	asrs	r1, r2, #8
 8016f36:	1218      	asrs	r0, r3, #8
 8016f38:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016f3c:	fb11 f104 	smulbb	r1, r1, r4
 8016f40:	10d7      	asrs	r7, r2, #3
 8016f42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016f46:	00d2      	lsls	r2, r2, #3
 8016f48:	fb00 1009 	mla	r0, r0, r9, r1
 8016f4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016f50:	10d9      	asrs	r1, r3, #3
 8016f52:	b2d2      	uxtb	r2, r2
 8016f54:	00db      	lsls	r3, r3, #3
 8016f56:	fb17 f704 	smulbb	r7, r7, r4
 8016f5a:	fb12 f204 	smulbb	r2, r2, r4
 8016f5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016f62:	b2db      	uxtb	r3, r3
 8016f64:	b280      	uxth	r0, r0
 8016f66:	fb01 7109 	mla	r1, r1, r9, r7
 8016f6a:	fb03 2309 	mla	r3, r3, r9, r2
 8016f6e:	b29b      	uxth	r3, r3
 8016f70:	b289      	uxth	r1, r1
 8016f72:	1c42      	adds	r2, r0, #1
 8016f74:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016f78:	1c4f      	adds	r7, r1, #1
 8016f7a:	1c5a      	adds	r2, r3, #1
 8016f7c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016f80:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016f84:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016f88:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016f8c:	0949      	lsrs	r1, r1, #5
 8016f8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016f90:	4310      	orrs	r0, r2
 8016f92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016f96:	4308      	orrs	r0, r1
 8016f98:	f823 0b02 	strh.w	r0, [r3], #2
 8016f9c:	930e      	str	r3, [sp, #56]	; 0x38
 8016f9e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016fa0:	449a      	add	sl, r3
 8016fa2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016fa4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016fa8:	441d      	add	r5, r3
 8016faa:	e6ed      	b.n	8016d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016fac:	2800      	cmp	r0, #0
 8016fae:	f43f af7f 	beq.w	8016eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8016fb2:	5cd3      	ldrb	r3, [r2, r3]
 8016fb4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016fb8:	9310      	str	r3, [sp, #64]	; 0x40
 8016fba:	e779      	b.n	8016eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8016fbc:	b019      	add	sp, #100	; 0x64
 8016fbe:	ecbd 8b08 	vpop	{d8-d11}
 8016fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8016fc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016fcc:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8016fd0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8016fd4:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8016fd8:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8016fdc:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8016fe0:	8808      	ldrh	r0, [r1, #0]
 8016fe2:	fb06 570e 	mla	r7, r6, lr, r5
 8016fe6:	2e00      	cmp	r6, #0
 8016fe8:	eb02 0807 	add.w	r8, r2, r7
 8016fec:	db38      	blt.n	8017060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8016fee:	45b1      	cmp	r9, r6
 8016ff0:	dd36      	ble.n	8017060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8016ff2:	2d00      	cmp	r5, #0
 8016ff4:	db32      	blt.n	801705c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8016ff6:	45ae      	cmp	lr, r5
 8016ff8:	dd30      	ble.n	801705c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8016ffa:	5dd2      	ldrb	r2, [r2, r7]
 8016ffc:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8017000:	1c6a      	adds	r2, r5, #1
 8017002:	d430      	bmi.n	8017066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8017004:	4596      	cmp	lr, r2
 8017006:	dd2e      	ble.n	8017066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8017008:	b36c      	cbz	r4, 8017066 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801700a:	f898 2001 	ldrb.w	r2, [r8, #1]
 801700e:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8017012:	3601      	adds	r6, #1
 8017014:	d42b      	bmi.n	801706e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8017016:	45b1      	cmp	r9, r6
 8017018:	dd29      	ble.n	801706e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 801701a:	f1bc 0f00 	cmp.w	ip, #0
 801701e:	d028      	beq.n	8017072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8017020:	2d00      	cmp	r5, #0
 8017022:	db22      	blt.n	801706a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8017024:	45ae      	cmp	lr, r5
 8017026:	dd20      	ble.n	801706a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8017028:	f818 600e 	ldrb.w	r6, [r8, lr]
 801702c:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8017030:	3501      	adds	r5, #1
 8017032:	d407      	bmi.n	8017044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8017034:	45ae      	cmp	lr, r5
 8017036:	dd05      	ble.n	8017044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8017038:	b134      	cbz	r4, 8017048 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801703a:	44c6      	add	lr, r8
 801703c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8017040:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8017044:	2c0f      	cmp	r4, #15
 8017046:	d802      	bhi.n	801704e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8017048:	f1bc 0f0f 	cmp.w	ip, #15
 801704c:	d914      	bls.n	8017078 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801704e:	4b26      	ldr	r3, [pc, #152]	; (80170e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8017050:	4a26      	ldr	r2, [pc, #152]	; (80170ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 8017052:	4827      	ldr	r0, [pc, #156]	; (80170f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8017054:	f240 11ef 	movw	r1, #495	; 0x1ef
 8017058:	f008 f9cc 	bl	801f3f4 <__assert_func>
 801705c:	4607      	mov	r7, r0
 801705e:	e7cf      	b.n	8017000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8017060:	4602      	mov	r2, r0
 8017062:	4607      	mov	r7, r0
 8017064:	e7d5      	b.n	8017012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8017066:	4602      	mov	r2, r0
 8017068:	e7d3      	b.n	8017012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 801706a:	4606      	mov	r6, r0
 801706c:	e7e0      	b.n	8017030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801706e:	4606      	mov	r6, r0
 8017070:	e7e8      	b.n	8017044 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8017072:	2c0f      	cmp	r4, #15
 8017074:	d8eb      	bhi.n	801704e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8017076:	4606      	mov	r6, r0
 8017078:	043d      	lsls	r5, r7, #16
 801707a:	fb14 f30c 	smulbb	r3, r4, ip
 801707e:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017082:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8017086:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801708a:	10db      	asrs	r3, r3, #3
 801708c:	432f      	orrs	r7, r5
 801708e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017092:	f1cc 0510 	rsb	r5, ip, #16
 8017096:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801709a:	1b2d      	subs	r5, r5, r4
 801709c:	ea4e 0202 	orr.w	r2, lr, r2
 80170a0:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80170a4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80170a8:	4354      	muls	r4, r2
 80170aa:	fb05 4507 	mla	r5, r5, r7, r4
 80170ae:	0404      	lsls	r4, r0, #16
 80170b0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80170b4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80170b8:	4320      	orrs	r0, r4
 80170ba:	fb03 5400 	mla	r4, r3, r0, r5
 80170be:	0430      	lsls	r0, r6, #16
 80170c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80170c4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80170c8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80170cc:	4330      	orrs	r0, r6
 80170ce:	fb03 4000 	mla	r0, r3, r0, r4
 80170d2:	0d43      	lsrs	r3, r0, #21
 80170d4:	0940      	lsrs	r0, r0, #5
 80170d6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80170da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80170de:	4318      	orrs	r0, r3
 80170e0:	8008      	strh	r0, [r1, #0]
 80170e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170e6:	bf00      	nop
 80170e8:	08024033 	.word	0x08024033
 80170ec:	0802469a 	.word	0x0802469a
 80170f0:	0802411c 	.word	0x0802411c

080170f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80170f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170f8:	ed2d 8b0a 	vpush	{d8-d12}
 80170fc:	b093      	sub	sp, #76	; 0x4c
 80170fe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8017102:	920f      	str	r2, [sp, #60]	; 0x3c
 8017104:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017106:	9108      	str	r1, [sp, #32]
 8017108:	9306      	str	r3, [sp, #24]
 801710a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801710e:	9010      	str	r0, [sp, #64]	; 0x40
 8017110:	6850      	ldr	r0, [r2, #4]
 8017112:	6812      	ldr	r2, [r2, #0]
 8017114:	fb00 1303 	mla	r3, r0, r3, r1
 8017118:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801711c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801711e:	681b      	ldr	r3, [r3, #0]
 8017120:	9307      	str	r3, [sp, #28]
 8017122:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017124:	685f      	ldr	r7, [r3, #4]
 8017126:	eeb0 aa40 	vmov.f32	s20, s0
 801712a:	eef0 9a60 	vmov.f32	s19, s1
 801712e:	eeb0 9a41 	vmov.f32	s18, s2
 8017132:	eeb0 8a62 	vmov.f32	s16, s5
 8017136:	eef0 8a43 	vmov.f32	s17, s6
 801713a:	eeb0 ca44 	vmov.f32	s24, s8
 801713e:	eef0 ba64 	vmov.f32	s23, s9
 8017142:	eeb0 ba45 	vmov.f32	s22, s10
 8017146:	3704      	adds	r7, #4
 8017148:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 801714c:	9b08      	ldr	r3, [sp, #32]
 801714e:	2b00      	cmp	r3, #0
 8017150:	dc03      	bgt.n	801715a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017152:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017154:	2b00      	cmp	r3, #0
 8017156:	f340 81b2 	ble.w	80174be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801715a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801715c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017160:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017164:	1e48      	subs	r0, r1, #1
 8017166:	f102 3cff 	add.w	ip, r2, #4294967295
 801716a:	9b06      	ldr	r3, [sp, #24]
 801716c:	2b00      	cmp	r3, #0
 801716e:	f340 80a9 	ble.w	80172c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8017172:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017176:	ea4f 4326 	mov.w	r3, r6, asr #16
 801717a:	d406      	bmi.n	801718a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801717c:	4586      	cmp	lr, r0
 801717e:	da04      	bge.n	801718a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017180:	2b00      	cmp	r3, #0
 8017182:	db02      	blt.n	801718a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017184:	4563      	cmp	r3, ip
 8017186:	f2c0 809e 	blt.w	80172c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801718a:	f11e 0e01 	adds.w	lr, lr, #1
 801718e:	f100 808f 	bmi.w	80172b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017192:	4571      	cmp	r1, lr
 8017194:	f2c0 808c 	blt.w	80172b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8017198:	3301      	adds	r3, #1
 801719a:	f100 8089 	bmi.w	80172b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801719e:	429a      	cmp	r2, r3
 80171a0:	f2c0 8086 	blt.w	80172b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80171a4:	f8dd b018 	ldr.w	fp, [sp, #24]
 80171a8:	46c8      	mov	r8, r9
 80171aa:	f1bb 0f00 	cmp.w	fp, #0
 80171ae:	f340 80a6 	ble.w	80172fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80171b2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80171b4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80171b6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80171ba:	689b      	ldr	r3, [r3, #8]
 80171bc:	1422      	asrs	r2, r4, #16
 80171be:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80171c2:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80171c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80171ca:	f100 80e3 	bmi.w	8017394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80171ce:	f103 3aff 	add.w	sl, r3, #4294967295
 80171d2:	4552      	cmp	r2, sl
 80171d4:	f280 80de 	bge.w	8017394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80171d8:	f1bc 0f00 	cmp.w	ip, #0
 80171dc:	f2c0 80da 	blt.w	8017394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80171e0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80171e4:	45d4      	cmp	ip, sl
 80171e6:	f280 80d5 	bge.w	8017394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80171ea:	b21b      	sxth	r3, r3
 80171ec:	fb0c 2203 	mla	r2, ip, r3, r2
 80171f0:	9d07      	ldr	r5, [sp, #28]
 80171f2:	eb05 0a02 	add.w	sl, r5, r2
 80171f6:	5caa      	ldrb	r2, [r5, r2]
 80171f8:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80171fc:	2800      	cmp	r0, #0
 80171fe:	f000 80c0 	beq.w	8017382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8017202:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8017206:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801720a:	920b      	str	r2, [sp, #44]	; 0x2c
 801720c:	b151      	cbz	r1, 8017224 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801720e:	eb0a 0203 	add.w	r2, sl, r3
 8017212:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8017216:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801721a:	9309      	str	r3, [sp, #36]	; 0x24
 801721c:	7853      	ldrb	r3, [r2, #1]
 801721e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017222:	930c      	str	r3, [sp, #48]	; 0x30
 8017224:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017226:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017228:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801722c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017230:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017234:	ea4c 0c03 	orr.w	ip, ip, r3
 8017238:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801723a:	041b      	lsls	r3, r3, #16
 801723c:	fb10 f201 	smulbb	r2, r0, r1
 8017240:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017244:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017248:	10d2      	asrs	r2, r2, #3
 801724a:	432b      	orrs	r3, r5
 801724c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8017250:	4353      	muls	r3, r2
 8017252:	fb0a 330c 	mla	r3, sl, ip, r3
 8017256:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801725a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801725e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017262:	ea4c 0e0e 	orr.w	lr, ip, lr
 8017266:	f1c1 0c10 	rsb	ip, r1, #16
 801726a:	ebac 0c00 	sub.w	ip, ip, r0
 801726e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017272:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8017276:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017278:	0418      	lsls	r0, r3, #16
 801727a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801727e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017282:	4318      	orrs	r0, r3
 8017284:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8017288:	fb02 c200 	mla	r2, r2, r0, ip
 801728c:	0d53      	lsrs	r3, r2, #21
 801728e:	0952      	lsrs	r2, r2, #5
 8017290:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017294:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017298:	431a      	orrs	r2, r3
 801729a:	f8a8 2000 	strh.w	r2, [r8]
 801729e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80172a0:	441c      	add	r4, r3
 80172a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80172a4:	f108 0802 	add.w	r8, r8, #2
 80172a8:	441e      	add	r6, r3
 80172aa:	f10b 3bff 	add.w	fp, fp, #4294967295
 80172ae:	e77c      	b.n	80171aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80172b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80172b2:	441c      	add	r4, r3
 80172b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80172b6:	441e      	add	r6, r3
 80172b8:	9b06      	ldr	r3, [sp, #24]
 80172ba:	3b01      	subs	r3, #1
 80172bc:	9306      	str	r3, [sp, #24]
 80172be:	f109 0902 	add.w	r9, r9, #2
 80172c2:	e752      	b.n	801716a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80172c4:	d020      	beq.n	8017308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80172c6:	9b06      	ldr	r3, [sp, #24]
 80172c8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80172ca:	3b01      	subs	r3, #1
 80172cc:	fb00 4003 	mla	r0, r0, r3, r4
 80172d0:	1400      	asrs	r0, r0, #16
 80172d2:	f53f af67 	bmi.w	80171a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80172d6:	3901      	subs	r1, #1
 80172d8:	4288      	cmp	r0, r1
 80172da:	f6bf af63 	bge.w	80171a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80172de:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80172e0:	fb01 6303 	mla	r3, r1, r3, r6
 80172e4:	141b      	asrs	r3, r3, #16
 80172e6:	f53f af5d 	bmi.w	80171a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80172ea:	3a01      	subs	r2, #1
 80172ec:	4293      	cmp	r3, r2
 80172ee:	f6bf af59 	bge.w	80171a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80172f2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80172f6:	46ca      	mov	sl, r9
 80172f8:	f1b8 0f00 	cmp.w	r8, #0
 80172fc:	dc67      	bgt.n	80173ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 80172fe:	9b06      	ldr	r3, [sp, #24]
 8017300:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017304:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017308:	9b08      	ldr	r3, [sp, #32]
 801730a:	2b00      	cmp	r3, #0
 801730c:	f340 80d7 	ble.w	80174be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8017310:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8017314:	ee79 9aab 	vadd.f32	s19, s19, s23
 8017318:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801731c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801731e:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8017322:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017326:	eef0 6a48 	vmov.f32	s13, s16
 801732a:	ee69 7a27 	vmul.f32	s15, s18, s15
 801732e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017332:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017336:	ee16 4a90 	vmov	r4, s13
 801733a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801733e:	eef0 6a68 	vmov.f32	s13, s17
 8017342:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017346:	ee18 2a10 	vmov	r2, s16
 801734a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801734e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017352:	ee18 2a90 	vmov	r2, s17
 8017356:	9329      	str	r3, [sp, #164]	; 0xa4
 8017358:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801735a:	fb92 f3f3 	sdiv	r3, r2, r3
 801735e:	932a      	str	r3, [sp, #168]	; 0xa8
 8017360:	9b08      	ldr	r3, [sp, #32]
 8017362:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017364:	3b01      	subs	r3, #1
 8017366:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801736a:	9308      	str	r3, [sp, #32]
 801736c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801736e:	bf08      	it	eq
 8017370:	4613      	moveq	r3, r2
 8017372:	ee16 6a90 	vmov	r6, s13
 8017376:	9306      	str	r3, [sp, #24]
 8017378:	eef0 8a67 	vmov.f32	s17, s15
 801737c:	eeb0 8a47 	vmov.f32	s16, s14
 8017380:	e6e4      	b.n	801714c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017382:	2900      	cmp	r1, #0
 8017384:	f43f af4e 	beq.w	8017224 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8017388:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801738c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017390:	9309      	str	r3, [sp, #36]	; 0x24
 8017392:	e747      	b.n	8017224 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8017394:	f112 0a01 	adds.w	sl, r2, #1
 8017398:	d481      	bmi.n	801729e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801739a:	4553      	cmp	r3, sl
 801739c:	f6ff af7f 	blt.w	801729e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80173a0:	f11c 0a01 	adds.w	sl, ip, #1
 80173a4:	f53f af7b 	bmi.w	801729e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80173a8:	45d6      	cmp	lr, sl
 80173aa:	f6ff af78 	blt.w	801729e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80173ae:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80173b2:	b21b      	sxth	r3, r3
 80173b4:	fa0f f28e 	sxth.w	r2, lr
 80173b8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80173bc:	9201      	str	r2, [sp, #4]
 80173be:	9300      	str	r3, [sp, #0]
 80173c0:	9a07      	ldr	r2, [sp, #28]
 80173c2:	9810      	ldr	r0, [sp, #64]	; 0x40
 80173c4:	463b      	mov	r3, r7
 80173c6:	4641      	mov	r1, r8
 80173c8:	f7ff fdfe 	bl	8016fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80173cc:	e767      	b.n	801729e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 80173ce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80173d0:	9d07      	ldr	r5, [sp, #28]
 80173d2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80173d6:	1422      	asrs	r2, r4, #16
 80173d8:	1431      	asrs	r1, r6, #16
 80173da:	fb03 2101 	mla	r1, r3, r1, r2
 80173de:	9a07      	ldr	r2, [sp, #28]
 80173e0:	440a      	add	r2, r1
 80173e2:	5c69      	ldrb	r1, [r5, r1]
 80173e4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80173e8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80173ec:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80173f0:	f1be 0f00 	cmp.w	lr, #0
 80173f4:	d05c      	beq.n	80174b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 80173f6:	f892 c001 	ldrb.w	ip, [r2, #1]
 80173fa:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80173fe:	950d      	str	r5, [sp, #52]	; 0x34
 8017400:	b150      	cbz	r0, 8017418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8017402:	eb02 0c03 	add.w	ip, r2, r3
 8017406:	5cd3      	ldrb	r3, [r2, r3]
 8017408:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801740c:	930a      	str	r3, [sp, #40]	; 0x28
 801740e:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8017412:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8017416:	930e      	str	r3, [sp, #56]	; 0x38
 8017418:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801741a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801741c:	fb1e f200 	smulbb	r2, lr, r0
 8017420:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017424:	10d2      	asrs	r2, r2, #3
 8017426:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801742a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801742e:	ea4c 0c03 	orr.w	ip, ip, r3
 8017432:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8017436:	9311      	str	r3, [sp, #68]	; 0x44
 8017438:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801743a:	041b      	lsls	r3, r3, #16
 801743c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8017440:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017444:	ea43 030b 	orr.w	r3, r3, fp
 8017448:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801744a:	4353      	muls	r3, r2
 801744c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017450:	fb05 3c0c 	mla	ip, r5, ip, r3
 8017454:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017458:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801745c:	ea43 0b01 	orr.w	fp, r3, r1
 8017460:	f1c0 0110 	rsb	r1, r0, #16
 8017464:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017466:	eba1 0e0e 	sub.w	lr, r1, lr
 801746a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801746e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8017472:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017476:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801747a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801747e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8017482:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017486:	fb02 cc0e 	mla	ip, r2, lr, ip
 801748a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801748e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017492:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017496:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801749a:	ea43 0c0c 	orr.w	ip, r3, ip
 801749e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80174a0:	f82a cb02 	strh.w	ip, [sl], #2
 80174a4:	441c      	add	r4, r3
 80174a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80174a8:	f108 38ff 	add.w	r8, r8, #4294967295
 80174ac:	441e      	add	r6, r3
 80174ae:	e723      	b.n	80172f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80174b0:	2800      	cmp	r0, #0
 80174b2:	d0b1      	beq.n	8017418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80174b4:	5cd3      	ldrb	r3, [r2, r3]
 80174b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80174ba:	930a      	str	r3, [sp, #40]	; 0x28
 80174bc:	e7ac      	b.n	8017418 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80174be:	b013      	add	sp, #76	; 0x4c
 80174c0:	ecbd 8b0a 	vpop	{d8-d12}
 80174c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80174c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174cc:	468b      	mov	fp, r1
 80174ce:	8809      	ldrh	r1, [r1, #0]
 80174d0:	b089      	sub	sp, #36	; 0x24
 80174d2:	10cd      	asrs	r5, r1, #3
 80174d4:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80174d8:	ea4f 2921 	mov.w	r9, r1, asr #8
 80174dc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80174e0:	00c9      	lsls	r1, r1, #3
 80174e2:	9500      	str	r5, [sp, #0]
 80174e4:	b2c9      	uxtb	r1, r1
 80174e6:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80174ea:	9101      	str	r1, [sp, #4]
 80174ec:	9900      	ldr	r1, [sp, #0]
 80174ee:	9202      	str	r2, [sp, #8]
 80174f0:	fb04 650e 	mla	r5, r4, lr, r6
 80174f4:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80174f8:	eb02 0805 	add.w	r8, r2, r5
 80174fc:	0209      	lsls	r1, r1, #8
 80174fe:	9a01      	ldr	r2, [sp, #4]
 8017500:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8017504:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8017508:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801750c:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8017510:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8017514:	4311      	orrs	r1, r2
 8017516:	2c00      	cmp	r4, #0
 8017518:	9107      	str	r1, [sp, #28]
 801751a:	db43      	blt.n	80175a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 801751c:	45a2      	cmp	sl, r4
 801751e:	dd41      	ble.n	80175a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8017520:	2e00      	cmp	r6, #0
 8017522:	db3d      	blt.n	80175a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8017524:	45b6      	cmp	lr, r6
 8017526:	dd3b      	ble.n	80175a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8017528:	9a02      	ldr	r2, [sp, #8]
 801752a:	5d55      	ldrb	r5, [r2, r5]
 801752c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017530:	441d      	add	r5, r3
 8017532:	1c72      	adds	r2, r6, #1
 8017534:	d439      	bmi.n	80175aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8017536:	4596      	cmp	lr, r2
 8017538:	dd37      	ble.n	80175aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801753a:	2f00      	cmp	r7, #0
 801753c:	d035      	beq.n	80175aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801753e:	f898 1001 	ldrb.w	r1, [r8, #1]
 8017542:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017546:	4419      	add	r1, r3
 8017548:	3401      	adds	r4, #1
 801754a:	d432      	bmi.n	80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 801754c:	45a2      	cmp	sl, r4
 801754e:	dd30      	ble.n	80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8017550:	b378      	cbz	r0, 80175b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8017552:	2e00      	cmp	r6, #0
 8017554:	db2b      	blt.n	80175ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8017556:	45b6      	cmp	lr, r6
 8017558:	dd29      	ble.n	80175ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801755a:	f818 400e 	ldrb.w	r4, [r8, lr]
 801755e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017562:	441c      	add	r4, r3
 8017564:	3601      	adds	r6, #1
 8017566:	d427      	bmi.n	80175b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8017568:	45b6      	cmp	lr, r6
 801756a:	dd25      	ble.n	80175b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801756c:	b327      	cbz	r7, 80175b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801756e:	44c6      	add	lr, r8
 8017570:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017574:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017578:	4413      	add	r3, r2
 801757a:	782a      	ldrb	r2, [r5, #0]
 801757c:	9202      	str	r2, [sp, #8]
 801757e:	780a      	ldrb	r2, [r1, #0]
 8017580:	9203      	str	r2, [sp, #12]
 8017582:	7822      	ldrb	r2, [r4, #0]
 8017584:	9204      	str	r2, [sp, #16]
 8017586:	2f0f      	cmp	r7, #15
 8017588:	781a      	ldrb	r2, [r3, #0]
 801758a:	9205      	str	r2, [sp, #20]
 801758c:	d801      	bhi.n	8017592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 801758e:	280f      	cmp	r0, #15
 8017590:	d914      	bls.n	80175bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8017592:	4b3f      	ldr	r3, [pc, #252]	; (8017690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8017594:	4a3f      	ldr	r2, [pc, #252]	; (8017694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8017596:	4840      	ldr	r0, [pc, #256]	; (8017698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8017598:	f240 210d 	movw	r1, #525	; 0x20d
 801759c:	f007 ff2a 	bl	801f3f4 <__assert_func>
 80175a0:	ad07      	add	r5, sp, #28
 80175a2:	e7c6      	b.n	8017532 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 80175a4:	a907      	add	r1, sp, #28
 80175a6:	460d      	mov	r5, r1
 80175a8:	e7ce      	b.n	8017548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80175aa:	a907      	add	r1, sp, #28
 80175ac:	e7cc      	b.n	8017548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 80175ae:	ac07      	add	r4, sp, #28
 80175b0:	e7d8      	b.n	8017564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 80175b2:	ab07      	add	r3, sp, #28
 80175b4:	461c      	mov	r4, r3
 80175b6:	e7e0      	b.n	801757a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80175b8:	ab07      	add	r3, sp, #28
 80175ba:	e7de      	b.n	801757a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80175bc:	b2ba      	uxth	r2, r7
 80175be:	b280      	uxth	r0, r0
 80175c0:	fb02 fa00 	mul.w	sl, r2, r0
 80175c4:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80175c8:	0112      	lsls	r2, r2, #4
 80175ca:	b280      	uxth	r0, r0
 80175cc:	f891 8002 	ldrb.w	r8, [r1, #2]
 80175d0:	7849      	ldrb	r1, [r1, #1]
 80175d2:	78ae      	ldrb	r6, [r5, #2]
 80175d4:	786d      	ldrb	r5, [r5, #1]
 80175d6:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80175da:	eba2 020a 	sub.w	r2, r2, sl
 80175de:	b292      	uxth	r2, r2
 80175e0:	ebae 0e00 	sub.w	lr, lr, r0
 80175e4:	fa1f fe8e 	uxth.w	lr, lr
 80175e8:	4351      	muls	r1, r2
 80175ea:	fb02 f808 	mul.w	r8, r2, r8
 80175ee:	fb0e 8806 	mla	r8, lr, r6, r8
 80175f2:	fb0e 1505 	mla	r5, lr, r5, r1
 80175f6:	78a6      	ldrb	r6, [r4, #2]
 80175f8:	7861      	ldrb	r1, [r4, #1]
 80175fa:	fa1f f78c 	uxth.w	r7, ip
 80175fe:	fb00 8806 	mla	r8, r0, r6, r8
 8017602:	fb00 5501 	mla	r5, r0, r1, r5
 8017606:	789e      	ldrb	r6, [r3, #2]
 8017608:	7859      	ldrb	r1, [r3, #1]
 801760a:	9b00      	ldr	r3, [sp, #0]
 801760c:	ea6f 0c0c 	mvn.w	ip, ip
 8017610:	fa5f fc8c 	uxtb.w	ip, ip
 8017614:	fb0a 5101 	mla	r1, sl, r1, r5
 8017618:	fb13 f50c 	smulbb	r5, r3, ip
 801761c:	9b03      	ldr	r3, [sp, #12]
 801761e:	435a      	muls	r2, r3
 8017620:	9b02      	ldr	r3, [sp, #8]
 8017622:	fb0e 2203 	mla	r2, lr, r3, r2
 8017626:	9b04      	ldr	r3, [sp, #16]
 8017628:	fb00 2003 	mla	r0, r0, r3, r2
 801762c:	9b05      	ldr	r3, [sp, #20]
 801762e:	fb0a 8606 	mla	r6, sl, r6, r8
 8017632:	fb0a 0a03 	mla	sl, sl, r3, r0
 8017636:	9b01      	ldr	r3, [sp, #4]
 8017638:	fb19 f90c 	smulbb	r9, r9, ip
 801763c:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8017640:	fb13 fc0c 	smulbb	ip, r3, ip
 8017644:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017648:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801764c:	fb06 9607 	mla	r6, r6, r7, r9
 8017650:	fb01 5107 	mla	r1, r1, r7, r5
 8017654:	fb0a c707 	mla	r7, sl, r7, ip
 8017658:	b2b6      	uxth	r6, r6
 801765a:	b289      	uxth	r1, r1
 801765c:	b2bf      	uxth	r7, r7
 801765e:	f106 0901 	add.w	r9, r6, #1
 8017662:	f107 0c01 	add.w	ip, r7, #1
 8017666:	1c4d      	adds	r5, r1, #1
 8017668:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801766c:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8017670:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8017674:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017678:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801767c:	0949      	lsrs	r1, r1, #5
 801767e:	433e      	orrs	r6, r7
 8017680:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017684:	430e      	orrs	r6, r1
 8017686:	f8ab 6000 	strh.w	r6, [fp]
 801768a:	b009      	add	sp, #36	; 0x24
 801768c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017690:	08024033 	.word	0x08024033
 8017694:	080245f1 	.word	0x080245f1
 8017698:	0802411c 	.word	0x0802411c

0801769c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801769c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176a0:	ed2d 8b08 	vpush	{d8-d11}
 80176a4:	b095      	sub	sp, #84	; 0x54
 80176a6:	eeb0 aa40 	vmov.f32	s20, s0
 80176aa:	9212      	str	r2, [sp, #72]	; 0x48
 80176ac:	9309      	str	r3, [sp, #36]	; 0x24
 80176ae:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80176b0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80176b4:	930f      	str	r3, [sp, #60]	; 0x3c
 80176b6:	910e      	str	r1, [sp, #56]	; 0x38
 80176b8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80176bc:	9013      	str	r0, [sp, #76]	; 0x4c
 80176be:	6850      	ldr	r0, [r2, #4]
 80176c0:	6812      	ldr	r2, [r2, #0]
 80176c2:	fb00 1303 	mla	r3, r0, r3, r1
 80176c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80176ca:	930a      	str	r3, [sp, #40]	; 0x28
 80176cc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80176ce:	681b      	ldr	r3, [r3, #0]
 80176d0:	930d      	str	r3, [sp, #52]	; 0x34
 80176d2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80176d4:	685c      	ldr	r4, [r3, #4]
 80176d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80176d8:	43db      	mvns	r3, r3
 80176da:	b2db      	uxtb	r3, r3
 80176dc:	eef0 9a60 	vmov.f32	s19, s1
 80176e0:	eeb0 9a41 	vmov.f32	s18, s2
 80176e4:	eeb0 8a62 	vmov.f32	s16, s5
 80176e8:	eef0 8a43 	vmov.f32	s17, s6
 80176ec:	eef0 ba44 	vmov.f32	s23, s8
 80176f0:	eeb0 ba64 	vmov.f32	s22, s9
 80176f4:	eef0 aa45 	vmov.f32	s21, s10
 80176f8:	3404      	adds	r4, #4
 80176fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80176fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80176fe:	2b00      	cmp	r3, #0
 8017700:	dc03      	bgt.n	801770a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8017702:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017704:	2b00      	cmp	r3, #0
 8017706:	f340 8258 	ble.w	8017bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 801770a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801770c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017710:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017714:	1e48      	subs	r0, r1, #1
 8017716:	1e55      	subs	r5, r2, #1
 8017718:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801771a:	2b00      	cmp	r3, #0
 801771c:	f340 80fc 	ble.w	8017918 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8017720:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8017722:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017724:	1436      	asrs	r6, r6, #16
 8017726:	ea4f 4323 	mov.w	r3, r3, asr #16
 801772a:	d406      	bmi.n	801773a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801772c:	4286      	cmp	r6, r0
 801772e:	da04      	bge.n	801773a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017730:	2b00      	cmp	r3, #0
 8017732:	db02      	blt.n	801773a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8017734:	42ab      	cmp	r3, r5
 8017736:	f2c0 80f0 	blt.w	801791a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801773a:	3601      	adds	r6, #1
 801773c:	f100 80dd 	bmi.w	80178fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8017740:	42b1      	cmp	r1, r6
 8017742:	f2c0 80da 	blt.w	80178fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8017746:	3301      	adds	r3, #1
 8017748:	f100 80d7 	bmi.w	80178fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 801774c:	429a      	cmp	r2, r3
 801774e:	f2c0 80d4 	blt.w	80178fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8017752:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017754:	9311      	str	r3, [sp, #68]	; 0x44
 8017756:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017758:	930c      	str	r3, [sp, #48]	; 0x30
 801775a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801775c:	2b00      	cmp	r3, #0
 801775e:	f340 80fd 	ble.w	801795c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8017762:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8017764:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017766:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017768:	68c6      	ldr	r6, [r0, #12]
 801776a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801776c:	141d      	asrs	r5, r3, #16
 801776e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017772:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017774:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017776:	1400      	asrs	r0, r0, #16
 8017778:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801777c:	6892      	ldr	r2, [r2, #8]
 801777e:	f100 8141 	bmi.w	8017a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017782:	1e57      	subs	r7, r2, #1
 8017784:	42b8      	cmp	r0, r7
 8017786:	f280 813d 	bge.w	8017a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801778a:	2d00      	cmp	r5, #0
 801778c:	f2c0 813a 	blt.w	8017a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017790:	1e77      	subs	r7, r6, #1
 8017792:	42bd      	cmp	r5, r7
 8017794:	f280 8136 	bge.w	8017a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8017798:	b212      	sxth	r2, r2
 801779a:	fb05 0002 	mla	r0, r5, r2, r0
 801779e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80177a0:	f815 a000 	ldrb.w	sl, [r5, r0]
 80177a4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80177a8:	182e      	adds	r6, r5, r0
 80177aa:	eb04 050a 	add.w	r5, r4, sl
 80177ae:	2b00      	cmp	r3, #0
 80177b0:	f000 811a 	beq.w	80179e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 80177b4:	f896 c001 	ldrb.w	ip, [r6, #1]
 80177b8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80177bc:	44a4      	add	ip, r4
 80177be:	2900      	cmp	r1, #0
 80177c0:	f000 811a 	beq.w	80179f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80177c4:	18b0      	adds	r0, r6, r2
 80177c6:	5cb2      	ldrb	r2, [r6, r2]
 80177c8:	7840      	ldrb	r0, [r0, #1]
 80177ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80177ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80177d2:	4422      	add	r2, r4
 80177d4:	4420      	add	r0, r4
 80177d6:	b29b      	uxth	r3, r3
 80177d8:	b289      	uxth	r1, r1
 80177da:	fb03 f901 	mul.w	r9, r3, r1
 80177de:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80177e2:	011b      	lsls	r3, r3, #4
 80177e4:	b289      	uxth	r1, r1
 80177e6:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80177ea:	f895 b002 	ldrb.w	fp, [r5, #2]
 80177ee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80177f0:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80177f4:	f8b6 e000 	ldrh.w	lr, [r6]
 80177f8:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80177fc:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8017800:	eba3 0309 	sub.w	r3, r3, r9
 8017804:	b29b      	uxth	r3, r3
 8017806:	eba8 0801 	sub.w	r8, r8, r1
 801780a:	fa1f f888 	uxth.w	r8, r8
 801780e:	435f      	muls	r7, r3
 8017810:	fb08 770b 	mla	r7, r8, fp, r7
 8017814:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017818:	9310      	str	r3, [sp, #64]	; 0x40
 801781a:	fb01 770b 	mla	r7, r1, fp, r7
 801781e:	f890 b002 	ldrb.w	fp, [r0, #2]
 8017822:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017824:	fb09 770b 	mla	r7, r9, fp, r7
 8017828:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801782c:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8017830:	fb1b fb03 	smulbb	fp, fp, r3
 8017834:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017838:	fb07 b706 	mla	r7, r7, r6, fp
 801783c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801783e:	f895 b001 	ldrb.w	fp, [r5, #1]
 8017842:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8017846:	f89c c000 	ldrb.w	ip, [ip]
 801784a:	435d      	muls	r5, r3
 801784c:	fb08 550b 	mla	r5, r8, fp, r5
 8017850:	f892 b001 	ldrb.w	fp, [r2, #1]
 8017854:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017856:	fb01 550b 	mla	r5, r1, fp, r5
 801785a:	f890 b001 	ldrb.w	fp, [r0, #1]
 801785e:	fb09 550b 	mla	r5, r9, fp, r5
 8017862:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8017866:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801786a:	fb1b fb03 	smulbb	fp, fp, r3
 801786e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017870:	fb03 f30c 	mul.w	r3, r3, ip
 8017874:	f892 c000 	ldrb.w	ip, [r2]
 8017878:	fb08 330a 	mla	r3, r8, sl, r3
 801787c:	fb01 330c 	mla	r3, r1, ip, r3
 8017880:	f890 c000 	ldrb.w	ip, [r0]
 8017884:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017888:	fb09 3c0c 	mla	ip, r9, ip, r3
 801788c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801788e:	fa5f fe8e 	uxtb.w	lr, lr
 8017892:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8017896:	fb1e fe03 	smulbb	lr, lr, r3
 801789a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801789e:	fb05 b506 	mla	r5, r5, r6, fp
 80178a2:	fb0c ee06 	mla	lr, ip, r6, lr
 80178a6:	b2bf      	uxth	r7, r7
 80178a8:	b2ad      	uxth	r5, r5
 80178aa:	fa1f fe8e 	uxth.w	lr, lr
 80178ae:	1c7a      	adds	r2, r7, #1
 80178b0:	f10e 0c01 	add.w	ip, lr, #1
 80178b4:	f105 0b01 	add.w	fp, r5, #1
 80178b8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80178bc:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 80178c0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80178c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80178c8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80178cc:	096d      	lsrs	r5, r5, #5
 80178ce:	ea47 070e 	orr.w	r7, r7, lr
 80178d2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80178d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178d8:	433d      	orrs	r5, r7
 80178da:	801d      	strh	r5, [r3, #0]
 80178dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80178de:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80178e0:	3302      	adds	r3, #2
 80178e2:	930c      	str	r3, [sp, #48]	; 0x30
 80178e4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80178e6:	4413      	add	r3, r2
 80178e8:	9327      	str	r3, [sp, #156]	; 0x9c
 80178ea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80178ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80178ee:	4413      	add	r3, r2
 80178f0:	9328      	str	r3, [sp, #160]	; 0xa0
 80178f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80178f4:	3b01      	subs	r3, #1
 80178f6:	9311      	str	r3, [sp, #68]	; 0x44
 80178f8:	e72f      	b.n	801775a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80178fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80178fc:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80178fe:	4433      	add	r3, r6
 8017900:	9327      	str	r3, [sp, #156]	; 0x9c
 8017902:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8017904:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017906:	4433      	add	r3, r6
 8017908:	9328      	str	r3, [sp, #160]	; 0xa0
 801790a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801790c:	3b01      	subs	r3, #1
 801790e:	9309      	str	r3, [sp, #36]	; 0x24
 8017910:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017912:	3302      	adds	r3, #2
 8017914:	930a      	str	r3, [sp, #40]	; 0x28
 8017916:	e6ff      	b.n	8017718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017918:	d027      	beq.n	801796a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 801791a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801791c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801791e:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8017920:	3b01      	subs	r3, #1
 8017922:	fb00 5003 	mla	r0, r0, r3, r5
 8017926:	1400      	asrs	r0, r0, #16
 8017928:	f53f af13 	bmi.w	8017752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801792c:	3901      	subs	r1, #1
 801792e:	4288      	cmp	r0, r1
 8017930:	f6bf af0f 	bge.w	8017752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8017934:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8017936:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017938:	fb01 0303 	mla	r3, r1, r3, r0
 801793c:	141b      	asrs	r3, r3, #16
 801793e:	f53f af08 	bmi.w	8017752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8017942:	3a01      	subs	r2, #1
 8017944:	4293      	cmp	r3, r2
 8017946:	f6bf af04 	bge.w	8017752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801794a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801794c:	9311      	str	r3, [sp, #68]	; 0x44
 801794e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8017952:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017954:	930c      	str	r3, [sp, #48]	; 0x30
 8017956:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017958:	2b00      	cmp	r3, #0
 801795a:	dc70      	bgt.n	8017a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 801795c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801795e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017960:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017964:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017968:	930a      	str	r3, [sp, #40]	; 0x28
 801796a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801796c:	2b00      	cmp	r3, #0
 801796e:	f340 8124 	ble.w	8017bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8017972:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017976:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801797a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801797e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017980:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017984:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017988:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801798c:	eef0 6a48 	vmov.f32	s13, s16
 8017990:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017994:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017998:	ee37 8a48 	vsub.f32	s16, s14, s16
 801799c:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80179a0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80179a4:	eef0 6a68 	vmov.f32	s13, s17
 80179a8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80179ac:	ee18 2a10 	vmov	r2, s16
 80179b0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80179b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80179b8:	ee18 2a90 	vmov	r2, s17
 80179bc:	9329      	str	r3, [sp, #164]	; 0xa4
 80179be:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80179c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80179c4:	932a      	str	r3, [sp, #168]	; 0xa8
 80179c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80179c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80179ca:	3b01      	subs	r3, #1
 80179cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80179d0:	930e      	str	r3, [sp, #56]	; 0x38
 80179d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80179d4:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80179d8:	bf08      	it	eq
 80179da:	4613      	moveq	r3, r2
 80179dc:	9309      	str	r3, [sp, #36]	; 0x24
 80179de:	eef0 8a67 	vmov.f32	s17, s15
 80179e2:	eeb0 8a47 	vmov.f32	s16, s14
 80179e6:	e689      	b.n	80176fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80179e8:	b149      	cbz	r1, 80179fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80179ea:	5cb2      	ldrb	r2, [r6, r2]
 80179ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80179f0:	4422      	add	r2, r4
 80179f2:	4628      	mov	r0, r5
 80179f4:	46ac      	mov	ip, r5
 80179f6:	e6ee      	b.n	80177d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80179f8:	4628      	mov	r0, r5
 80179fa:	462a      	mov	r2, r5
 80179fc:	e6eb      	b.n	80177d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80179fe:	4628      	mov	r0, r5
 8017a00:	462a      	mov	r2, r5
 8017a02:	e7f7      	b.n	80179f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017a04:	1c47      	adds	r7, r0, #1
 8017a06:	f53f af69 	bmi.w	80178dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8017a0a:	42ba      	cmp	r2, r7
 8017a0c:	f6ff af66 	blt.w	80178dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8017a10:	1c6f      	adds	r7, r5, #1
 8017a12:	f53f af63 	bmi.w	80178dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8017a16:	42be      	cmp	r6, r7
 8017a18:	f6ff af60 	blt.w	80178dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8017a1c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017a1e:	9002      	str	r0, [sp, #8]
 8017a20:	b236      	sxth	r6, r6
 8017a22:	b212      	sxth	r2, r2
 8017a24:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8017a28:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8017a2c:	9200      	str	r2, [sp, #0]
 8017a2e:	9601      	str	r6, [sp, #4]
 8017a30:	4623      	mov	r3, r4
 8017a32:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8017a36:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017a38:	f7ff fd46 	bl	80174c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8017a3c:	e74e      	b.n	80178dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8017a3e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017a40:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017a42:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8017a44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017a46:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8017a4a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017a4c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8017a50:	142d      	asrs	r5, r5, #16
 8017a52:	1400      	asrs	r0, r0, #16
 8017a54:	fb02 5000 	mla	r0, r2, r0, r5
 8017a58:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017a5a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8017a5e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8017a62:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8017a66:	182e      	adds	r6, r5, r0
 8017a68:	eb04 0509 	add.w	r5, r4, r9
 8017a6c:	2b00      	cmp	r3, #0
 8017a6e:	f000 8096 	beq.w	8017b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 8017a72:	7877      	ldrb	r7, [r6, #1]
 8017a74:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017a78:	4427      	add	r7, r4
 8017a7a:	2900      	cmp	r1, #0
 8017a7c:	f000 8097 	beq.w	8017bae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8017a80:	18b0      	adds	r0, r6, r2
 8017a82:	5cb2      	ldrb	r2, [r6, r2]
 8017a84:	7840      	ldrb	r0, [r0, #1]
 8017a86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017a8a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017a8e:	4422      	add	r2, r4
 8017a90:	4420      	add	r0, r4
 8017a92:	b29b      	uxth	r3, r3
 8017a94:	b289      	uxth	r1, r1
 8017a96:	fb03 f801 	mul.w	r8, r3, r1
 8017a9a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017a9c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8017aa0:	f8b6 c000 	ldrh.w	ip, [r6]
 8017aa4:	78be      	ldrb	r6, [r7, #2]
 8017aa6:	f814 9009 	ldrb.w	r9, [r4, r9]
 8017aaa:	011b      	lsls	r3, r3, #4
 8017aac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8017ab0:	b289      	uxth	r1, r1
 8017ab2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017ab6:	eba3 0308 	sub.w	r3, r3, r8
 8017aba:	b29b      	uxth	r3, r3
 8017abc:	ebae 0e01 	sub.w	lr, lr, r1
 8017ac0:	fa1f fe8e 	uxth.w	lr, lr
 8017ac4:	435e      	muls	r6, r3
 8017ac6:	fb0e 660b 	mla	r6, lr, fp, r6
 8017aca:	f892 b002 	ldrb.w	fp, [r2, #2]
 8017ace:	9310      	str	r3, [sp, #64]	; 0x40
 8017ad0:	fb01 660b 	mla	r6, r1, fp, r6
 8017ad4:	f890 b002 	ldrb.w	fp, [r0, #2]
 8017ad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017ada:	fb08 660b 	mla	r6, r8, fp, r6
 8017ade:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8017ae2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8017ae6:	fb1b fb03 	smulbb	fp, fp, r3
 8017aea:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017aee:	fb06 b60a 	mla	r6, r6, sl, fp
 8017af2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017af4:	f895 b001 	ldrb.w	fp, [r5, #1]
 8017af8:	787d      	ldrb	r5, [r7, #1]
 8017afa:	783f      	ldrb	r7, [r7, #0]
 8017afc:	435d      	muls	r5, r3
 8017afe:	fb0e 550b 	mla	r5, lr, fp, r5
 8017b02:	f892 b001 	ldrb.w	fp, [r2, #1]
 8017b06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b08:	fb01 550b 	mla	r5, r1, fp, r5
 8017b0c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8017b10:	fb08 550b 	mla	r5, r8, fp, r5
 8017b14:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8017b18:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017b1c:	fb1b fb03 	smulbb	fp, fp, r3
 8017b20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017b22:	437b      	muls	r3, r7
 8017b24:	7817      	ldrb	r7, [r2, #0]
 8017b26:	fb0e 3309 	mla	r3, lr, r9, r3
 8017b2a:	fb01 3307 	mla	r3, r1, r7, r3
 8017b2e:	7807      	ldrb	r7, [r0, #0]
 8017b30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017b34:	fb08 3707 	mla	r7, r8, r7, r3
 8017b38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017b3a:	fa5f fc8c 	uxtb.w	ip, ip
 8017b3e:	fb1c fc03 	smulbb	ip, ip, r3
 8017b42:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8017b46:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8017b4a:	fb05 b50a 	mla	r5, r5, sl, fp
 8017b4e:	fb07 c70a 	mla	r7, r7, sl, ip
 8017b52:	b2b6      	uxth	r6, r6
 8017b54:	b2ad      	uxth	r5, r5
 8017b56:	b2bf      	uxth	r7, r7
 8017b58:	1c73      	adds	r3, r6, #1
 8017b5a:	1c7a      	adds	r2, r7, #1
 8017b5c:	f105 0b01 	add.w	fp, r5, #1
 8017b60:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017b64:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8017b68:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8017b6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b70:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017b74:	096d      	lsrs	r5, r5, #5
 8017b76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017b78:	4316      	orrs	r6, r2
 8017b7a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017b7e:	432e      	orrs	r6, r5
 8017b80:	f823 6b02 	strh.w	r6, [r3], #2
 8017b84:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017b86:	930c      	str	r3, [sp, #48]	; 0x30
 8017b88:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017b8a:	4413      	add	r3, r2
 8017b8c:	9327      	str	r3, [sp, #156]	; 0x9c
 8017b8e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017b90:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b92:	4413      	add	r3, r2
 8017b94:	9328      	str	r3, [sp, #160]	; 0xa0
 8017b96:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017b98:	3b01      	subs	r3, #1
 8017b9a:	9311      	str	r3, [sp, #68]	; 0x44
 8017b9c:	e6db      	b.n	8017956 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8017b9e:	b149      	cbz	r1, 8017bb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8017ba0:	5cb2      	ldrb	r2, [r6, r2]
 8017ba2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017ba6:	4422      	add	r2, r4
 8017ba8:	4628      	mov	r0, r5
 8017baa:	462f      	mov	r7, r5
 8017bac:	e771      	b.n	8017a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8017bae:	4628      	mov	r0, r5
 8017bb0:	462a      	mov	r2, r5
 8017bb2:	e76e      	b.n	8017a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8017bb4:	4628      	mov	r0, r5
 8017bb6:	462a      	mov	r2, r5
 8017bb8:	e7f7      	b.n	8017baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 8017bba:	b015      	add	sp, #84	; 0x54
 8017bbc:	ecbd 8b08 	vpop	{d8-d11}
 8017bc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8017bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bc8:	880e      	ldrh	r6, [r1, #0]
 8017bca:	b085      	sub	sp, #20
 8017bcc:	0230      	lsls	r0, r6, #8
 8017bce:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8017bd2:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8017bd6:	0170      	lsls	r0, r6, #5
 8017bd8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8017bdc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8017be0:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8017be4:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8017be8:	00f6      	lsls	r6, r6, #3
 8017bea:	ea4b 0000 	orr.w	r0, fp, r0
 8017bee:	b2f6      	uxtb	r6, r6
 8017bf0:	4691      	mov	r9, r2
 8017bf2:	fb05 7a0c 	mla	sl, r5, ip, r7
 8017bf6:	4306      	orrs	r6, r0
 8017bf8:	2d00      	cmp	r5, #0
 8017bfa:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8017bfe:	9603      	str	r6, [sp, #12]
 8017c00:	eb09 0e0a 	add.w	lr, r9, sl
 8017c04:	db42      	blt.n	8017c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8017c06:	45a8      	cmp	r8, r5
 8017c08:	dd40      	ble.n	8017c8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8017c0a:	2f00      	cmp	r7, #0
 8017c0c:	db3c      	blt.n	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8017c0e:	45bc      	cmp	ip, r7
 8017c10:	dd3a      	ble.n	8017c88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8017c12:	f819 600a 	ldrb.w	r6, [r9, sl]
 8017c16:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017c1a:	441e      	add	r6, r3
 8017c1c:	1c78      	adds	r0, r7, #1
 8017c1e:	d438      	bmi.n	8017c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8017c20:	4584      	cmp	ip, r0
 8017c22:	dd36      	ble.n	8017c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8017c24:	b3aa      	cbz	r2, 8017c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8017c26:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8017c2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017c2e:	4418      	add	r0, r3
 8017c30:	3501      	adds	r5, #1
 8017c32:	d432      	bmi.n	8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8017c34:	45a8      	cmp	r8, r5
 8017c36:	dd30      	ble.n	8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8017c38:	b37c      	cbz	r4, 8017c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8017c3a:	2f00      	cmp	r7, #0
 8017c3c:	db2b      	blt.n	8017c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8017c3e:	45bc      	cmp	ip, r7
 8017c40:	dd29      	ble.n	8017c96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8017c42:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8017c46:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8017c4a:	441d      	add	r5, r3
 8017c4c:	3701      	adds	r7, #1
 8017c4e:	d427      	bmi.n	8017ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8017c50:	45bc      	cmp	ip, r7
 8017c52:	dd25      	ble.n	8017ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8017c54:	b322      	cbz	r2, 8017ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8017c56:	44f4      	add	ip, lr
 8017c58:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8017c5c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8017c60:	443b      	add	r3, r7
 8017c62:	781f      	ldrb	r7, [r3, #0]
 8017c64:	f896 a000 	ldrb.w	sl, [r6]
 8017c68:	f890 b000 	ldrb.w	fp, [r0]
 8017c6c:	f895 9000 	ldrb.w	r9, [r5]
 8017c70:	9700      	str	r7, [sp, #0]
 8017c72:	2a0f      	cmp	r2, #15
 8017c74:	d801      	bhi.n	8017c7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8017c76:	2c0f      	cmp	r4, #15
 8017c78:	d914      	bls.n	8017ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8017c7a:	4b2c      	ldr	r3, [pc, #176]	; (8017d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8017c7c:	4a2c      	ldr	r2, [pc, #176]	; (8017d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8017c7e:	482d      	ldr	r0, [pc, #180]	; (8017d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8017c80:	f240 210d 	movw	r1, #525	; 0x20d
 8017c84:	f007 fbb6 	bl	801f3f4 <__assert_func>
 8017c88:	ae03      	add	r6, sp, #12
 8017c8a:	e7c7      	b.n	8017c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8017c8c:	a803      	add	r0, sp, #12
 8017c8e:	4606      	mov	r6, r0
 8017c90:	e7ce      	b.n	8017c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8017c92:	a803      	add	r0, sp, #12
 8017c94:	e7cc      	b.n	8017c30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8017c96:	ad03      	add	r5, sp, #12
 8017c98:	e7d8      	b.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8017c9a:	ab03      	add	r3, sp, #12
 8017c9c:	461d      	mov	r5, r3
 8017c9e:	e7e0      	b.n	8017c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8017ca0:	ab03      	add	r3, sp, #12
 8017ca2:	e7de      	b.n	8017c62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8017ca4:	b292      	uxth	r2, r2
 8017ca6:	b2a4      	uxth	r4, r4
 8017ca8:	fb02 f804 	mul.w	r8, r2, r4
 8017cac:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8017cb0:	0112      	lsls	r2, r2, #4
 8017cb2:	b2a4      	uxth	r4, r4
 8017cb4:	f890 e002 	ldrb.w	lr, [r0, #2]
 8017cb8:	78b7      	ldrb	r7, [r6, #2]
 8017cba:	7840      	ldrb	r0, [r0, #1]
 8017cbc:	7876      	ldrb	r6, [r6, #1]
 8017cbe:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8017cc2:	eba2 0208 	sub.w	r2, r2, r8
 8017cc6:	b292      	uxth	r2, r2
 8017cc8:	ebac 0c04 	sub.w	ip, ip, r4
 8017ccc:	fa1f fc8c 	uxth.w	ip, ip
 8017cd0:	fb02 fe0e 	mul.w	lr, r2, lr
 8017cd4:	fb0c ee07 	mla	lr, ip, r7, lr
 8017cd8:	78af      	ldrb	r7, [r5, #2]
 8017cda:	fb04 ee07 	mla	lr, r4, r7, lr
 8017cde:	789f      	ldrb	r7, [r3, #2]
 8017ce0:	785b      	ldrb	r3, [r3, #1]
 8017ce2:	fb08 e707 	mla	r7, r8, r7, lr
 8017ce6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017cea:	fb02 fe0b 	mul.w	lr, r2, fp
 8017cee:	4342      	muls	r2, r0
 8017cf0:	7868      	ldrb	r0, [r5, #1]
 8017cf2:	9701      	str	r7, [sp, #4]
 8017cf4:	fb0c ee0a 	mla	lr, ip, sl, lr
 8017cf8:	9f00      	ldr	r7, [sp, #0]
 8017cfa:	fb0c 2206 	mla	r2, ip, r6, r2
 8017cfe:	fb04 ee09 	mla	lr, r4, r9, lr
 8017d02:	fb04 2400 	mla	r4, r4, r0, r2
 8017d06:	fb08 ee07 	mla	lr, r8, r7, lr
 8017d0a:	9f01      	ldr	r7, [sp, #4]
 8017d0c:	fb08 4803 	mla	r8, r8, r3, r4
 8017d10:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8017d14:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017d18:	ea47 070e 	orr.w	r7, r7, lr
 8017d1c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017d20:	ea47 0708 	orr.w	r7, r7, r8
 8017d24:	800f      	strh	r7, [r1, #0]
 8017d26:	b005      	add	sp, #20
 8017d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d2c:	08024033 	.word	0x08024033
 8017d30:	080245f1 	.word	0x080245f1
 8017d34:	0802411c 	.word	0x0802411c

08017d38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017d38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d3c:	ed2d 8b08 	vpush	{d8-d11}
 8017d40:	b08f      	sub	sp, #60	; 0x3c
 8017d42:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8017d46:	920c      	str	r2, [sp, #48]	; 0x30
 8017d48:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8017d4a:	910a      	str	r1, [sp, #40]	; 0x28
 8017d4c:	9306      	str	r3, [sp, #24]
 8017d4e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8017d52:	900d      	str	r0, [sp, #52]	; 0x34
 8017d54:	6850      	ldr	r0, [r2, #4]
 8017d56:	6812      	ldr	r2, [r2, #0]
 8017d58:	fb00 1303 	mla	r3, r0, r3, r1
 8017d5c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017d60:	9307      	str	r3, [sp, #28]
 8017d62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017d64:	681b      	ldr	r3, [r3, #0]
 8017d66:	9308      	str	r3, [sp, #32]
 8017d68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017d6a:	685c      	ldr	r4, [r3, #4]
 8017d6c:	eeb0 aa40 	vmov.f32	s20, s0
 8017d70:	eef0 9a60 	vmov.f32	s19, s1
 8017d74:	eeb0 9a41 	vmov.f32	s18, s2
 8017d78:	eeb0 8a62 	vmov.f32	s16, s5
 8017d7c:	eef0 8a43 	vmov.f32	s17, s6
 8017d80:	eef0 ba44 	vmov.f32	s23, s8
 8017d84:	eeb0 ba64 	vmov.f32	s22, s9
 8017d88:	eef0 aa45 	vmov.f32	s21, s10
 8017d8c:	3404      	adds	r4, #4
 8017d8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017d90:	2b00      	cmp	r3, #0
 8017d92:	dc03      	bgt.n	8017d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017d94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017d96:	2b00      	cmp	r3, #0
 8017d98:	f340 81d6 	ble.w	8018148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8017d9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017d9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017da2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017da6:	1e48      	subs	r0, r1, #1
 8017da8:	1e56      	subs	r6, r2, #1
 8017daa:	9b06      	ldr	r3, [sp, #24]
 8017dac:	2b00      	cmp	r3, #0
 8017dae:	f340 80b7 	ble.w	8017f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8017db2:	ea5f 472b 	movs.w	r7, fp, asr #16
 8017db6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8017dba:	d406      	bmi.n	8017dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017dbc:	4287      	cmp	r7, r0
 8017dbe:	da04      	bge.n	8017dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017dc0:	2b00      	cmp	r3, #0
 8017dc2:	db02      	blt.n	8017dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017dc4:	42b3      	cmp	r3, r6
 8017dc6:	f2c0 80ac 	blt.w	8017f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8017dca:	3701      	adds	r7, #1
 8017dcc:	f100 809d 	bmi.w	8017f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017dd0:	42b9      	cmp	r1, r7
 8017dd2:	f2c0 809a 	blt.w	8017f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017dd6:	3301      	adds	r3, #1
 8017dd8:	f100 8097 	bmi.w	8017f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017ddc:	429a      	cmp	r2, r3
 8017dde:	f2c0 8094 	blt.w	8017f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8017de2:	9b06      	ldr	r3, [sp, #24]
 8017de4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017de6:	9b07      	ldr	r3, [sp, #28]
 8017de8:	9309      	str	r3, [sp, #36]	; 0x24
 8017dea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017dec:	2b00      	cmp	r3, #0
 8017dee:	f340 80b5 	ble.w	8017f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017df2:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8017df4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017df6:	68c7      	ldr	r7, [r0, #12]
 8017df8:	6892      	ldr	r2, [r2, #8]
 8017dfa:	ea5f 402b 	movs.w	r0, fp, asr #16
 8017dfe:	ea4f 4625 	mov.w	r6, r5, asr #16
 8017e02:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017e06:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017e0a:	f100 80fb 	bmi.w	8018004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017e0e:	f102 3cff 	add.w	ip, r2, #4294967295
 8017e12:	4560      	cmp	r0, ip
 8017e14:	f280 80f6 	bge.w	8018004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017e18:	2e00      	cmp	r6, #0
 8017e1a:	f2c0 80f3 	blt.w	8018004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017e1e:	f107 3cff 	add.w	ip, r7, #4294967295
 8017e22:	4566      	cmp	r6, ip
 8017e24:	f280 80ee 	bge.w	8018004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 8017e28:	b212      	sxth	r2, r2
 8017e2a:	fb06 0002 	mla	r0, r6, r2, r0
 8017e2e:	9e08      	ldr	r6, [sp, #32]
 8017e30:	1837      	adds	r7, r6, r0
 8017e32:	5c30      	ldrb	r0, [r6, r0]
 8017e34:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8017e38:	eb04 0c08 	add.w	ip, r4, r8
 8017e3c:	2b00      	cmp	r3, #0
 8017e3e:	f000 80d3 	beq.w	8017fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8017e42:	787e      	ldrb	r6, [r7, #1]
 8017e44:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8017e48:	4426      	add	r6, r4
 8017e4a:	2900      	cmp	r1, #0
 8017e4c:	f000 80d4 	beq.w	8017ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8017e50:	18b8      	adds	r0, r7, r2
 8017e52:	5cba      	ldrb	r2, [r7, r2]
 8017e54:	7840      	ldrb	r0, [r0, #1]
 8017e56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017e5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017e5e:	4422      	add	r2, r4
 8017e60:	4420      	add	r0, r4
 8017e62:	b29b      	uxth	r3, r3
 8017e64:	b289      	uxth	r1, r1
 8017e66:	fb03 f901 	mul.w	r9, r3, r1
 8017e6a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017e6e:	011b      	lsls	r3, r3, #4
 8017e70:	b289      	uxth	r1, r1
 8017e72:	78b7      	ldrb	r7, [r6, #2]
 8017e74:	f89c a002 	ldrb.w	sl, [ip, #2]
 8017e78:	f89c c001 	ldrb.w	ip, [ip, #1]
 8017e7c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8017e80:	eba3 0309 	sub.w	r3, r3, r9
 8017e84:	b29b      	uxth	r3, r3
 8017e86:	ebae 0e01 	sub.w	lr, lr, r1
 8017e8a:	fa1f fe8e 	uxth.w	lr, lr
 8017e8e:	435f      	muls	r7, r3
 8017e90:	fb0e 770a 	mla	r7, lr, sl, r7
 8017e94:	f892 a002 	ldrb.w	sl, [r2, #2]
 8017e98:	fb01 770a 	mla	r7, r1, sl, r7
 8017e9c:	f890 a002 	ldrb.w	sl, [r0, #2]
 8017ea0:	fb09 7a0a 	mla	sl, r9, sl, r7
 8017ea4:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017ea8:	f896 8000 	ldrb.w	r8, [r6]
 8017eac:	7876      	ldrb	r6, [r6, #1]
 8017eae:	fb03 f808 	mul.w	r8, r3, r8
 8017eb2:	fb0e 8807 	mla	r8, lr, r7, r8
 8017eb6:	7817      	ldrb	r7, [r2, #0]
 8017eb8:	fb01 8807 	mla	r8, r1, r7, r8
 8017ebc:	7807      	ldrb	r7, [r0, #0]
 8017ebe:	fb09 8707 	mla	r7, r9, r7, r8
 8017ec2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8017ec6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017eca:	ea4a 0707 	orr.w	r7, sl, r7
 8017ece:	4373      	muls	r3, r6
 8017ed0:	f892 a001 	ldrb.w	sl, [r2, #1]
 8017ed4:	fb0e 330c 	mla	r3, lr, ip, r3
 8017ed8:	fb01 310a 	mla	r1, r1, sl, r3
 8017edc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017ee0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ee2:	fb09 1a0a 	mla	sl, r9, sl, r1
 8017ee6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017eea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017eee:	ea47 070a 	orr.w	r7, r7, sl
 8017ef2:	801f      	strh	r7, [r3, #0]
 8017ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017ef6:	3302      	adds	r3, #2
 8017ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8017efa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017efc:	449b      	add	fp, r3
 8017efe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017f00:	441d      	add	r5, r3
 8017f02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f04:	3b01      	subs	r3, #1
 8017f06:	930b      	str	r3, [sp, #44]	; 0x2c
 8017f08:	e76f      	b.n	8017dea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017f0a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017f0c:	449b      	add	fp, r3
 8017f0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017f10:	441d      	add	r5, r3
 8017f12:	9b06      	ldr	r3, [sp, #24]
 8017f14:	3b01      	subs	r3, #1
 8017f16:	9306      	str	r3, [sp, #24]
 8017f18:	9b07      	ldr	r3, [sp, #28]
 8017f1a:	3302      	adds	r3, #2
 8017f1c:	9307      	str	r3, [sp, #28]
 8017f1e:	e744      	b.n	8017daa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017f20:	d023      	beq.n	8017f6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 8017f22:	9b06      	ldr	r3, [sp, #24]
 8017f24:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8017f26:	3b01      	subs	r3, #1
 8017f28:	fb00 b003 	mla	r0, r0, r3, fp
 8017f2c:	1400      	asrs	r0, r0, #16
 8017f2e:	f53f af58 	bmi.w	8017de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017f32:	3901      	subs	r1, #1
 8017f34:	4288      	cmp	r0, r1
 8017f36:	f6bf af54 	bge.w	8017de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017f3a:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017f3c:	fb01 5303 	mla	r3, r1, r3, r5
 8017f40:	141b      	asrs	r3, r3, #16
 8017f42:	f53f af4e 	bmi.w	8017de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017f46:	3a01      	subs	r2, #1
 8017f48:	4293      	cmp	r3, r2
 8017f4a:	f6bf af4a 	bge.w	8017de2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017f4e:	9b06      	ldr	r3, [sp, #24]
 8017f50:	9309      	str	r3, [sp, #36]	; 0x24
 8017f52:	9b07      	ldr	r3, [sp, #28]
 8017f54:	930b      	str	r3, [sp, #44]	; 0x2c
 8017f56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017f58:	2b00      	cmp	r3, #0
 8017f5a:	dc70      	bgt.n	801803e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8017f5c:	9b06      	ldr	r3, [sp, #24]
 8017f5e:	9a07      	ldr	r2, [sp, #28]
 8017f60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017f64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017f68:	9307      	str	r3, [sp, #28]
 8017f6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017f6c:	2b00      	cmp	r3, #0
 8017f6e:	f340 80eb 	ble.w	8018148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8017f72:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017f76:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017f7a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017f7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017f80:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017f84:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017f88:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017f8c:	eef0 6a48 	vmov.f32	s13, s16
 8017f90:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017f94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f98:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017f9c:	ee16 ba90 	vmov	fp, s13
 8017fa0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017fa4:	eef0 6a68 	vmov.f32	s13, s17
 8017fa8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017fac:	ee18 2a10 	vmov	r2, s16
 8017fb0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017fb4:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fb8:	ee18 2a90 	vmov	r2, s17
 8017fbc:	9323      	str	r3, [sp, #140]	; 0x8c
 8017fbe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017fc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8017fc4:	9324      	str	r3, [sp, #144]	; 0x90
 8017fc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017fc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017fca:	3b01      	subs	r3, #1
 8017fcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017fd0:	930a      	str	r3, [sp, #40]	; 0x28
 8017fd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017fd4:	bf08      	it	eq
 8017fd6:	4613      	moveq	r3, r2
 8017fd8:	ee16 5a90 	vmov	r5, s13
 8017fdc:	9306      	str	r3, [sp, #24]
 8017fde:	eef0 8a67 	vmov.f32	s17, s15
 8017fe2:	eeb0 8a47 	vmov.f32	s16, s14
 8017fe6:	e6d2      	b.n	8017d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8017fe8:	b149      	cbz	r1, 8017ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8017fea:	5cba      	ldrb	r2, [r7, r2]
 8017fec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017ff0:	4422      	add	r2, r4
 8017ff2:	4660      	mov	r0, ip
 8017ff4:	4666      	mov	r6, ip
 8017ff6:	e734      	b.n	8017e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8017ff8:	4660      	mov	r0, ip
 8017ffa:	4662      	mov	r2, ip
 8017ffc:	e731      	b.n	8017e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8017ffe:	4660      	mov	r0, ip
 8018000:	4662      	mov	r2, ip
 8018002:	e7f7      	b.n	8017ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 8018004:	f110 0c01 	adds.w	ip, r0, #1
 8018008:	f53f af74 	bmi.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801800c:	4562      	cmp	r2, ip
 801800e:	f6ff af71 	blt.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018012:	f116 0c01 	adds.w	ip, r6, #1
 8018016:	f53f af6d 	bmi.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801801a:	4567      	cmp	r7, ip
 801801c:	f6ff af6a 	blt.w	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018020:	b23f      	sxth	r7, r7
 8018022:	b212      	sxth	r2, r2
 8018024:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8018028:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801802c:	9200      	str	r2, [sp, #0]
 801802e:	9701      	str	r7, [sp, #4]
 8018030:	4623      	mov	r3, r4
 8018032:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018036:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018038:	f7ff fdc4 	bl	8017bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801803c:	e75a      	b.n	8017ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801803e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8018040:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8018044:	ea4f 462b 	mov.w	r6, fp, asr #16
 8018048:	1428      	asrs	r0, r5, #16
 801804a:	fb02 6000 	mla	r0, r2, r0, r6
 801804e:	9e08      	ldr	r6, [sp, #32]
 8018050:	f816 8000 	ldrb.w	r8, [r6, r0]
 8018054:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8018058:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801805c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018060:	1837      	adds	r7, r6, r0
 8018062:	eb04 0c08 	add.w	ip, r4, r8
 8018066:	2b00      	cmp	r3, #0
 8018068:	d060      	beq.n	801812c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801806a:	787e      	ldrb	r6, [r7, #1]
 801806c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8018070:	4426      	add	r6, r4
 8018072:	2900      	cmp	r1, #0
 8018074:	d062      	beq.n	801813c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8018076:	18b8      	adds	r0, r7, r2
 8018078:	5cba      	ldrb	r2, [r7, r2]
 801807a:	7840      	ldrb	r0, [r0, #1]
 801807c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018080:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8018084:	4422      	add	r2, r4
 8018086:	4420      	add	r0, r4
 8018088:	b29b      	uxth	r3, r3
 801808a:	b289      	uxth	r1, r1
 801808c:	fb03 f901 	mul.w	r9, r3, r1
 8018090:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8018094:	011b      	lsls	r3, r3, #4
 8018096:	b289      	uxth	r1, r1
 8018098:	78b7      	ldrb	r7, [r6, #2]
 801809a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801809e:	f89c c001 	ldrb.w	ip, [ip, #1]
 80180a2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80180a6:	eba3 0309 	sub.w	r3, r3, r9
 80180aa:	b29b      	uxth	r3, r3
 80180ac:	ebae 0e01 	sub.w	lr, lr, r1
 80180b0:	fa1f fe8e 	uxth.w	lr, lr
 80180b4:	435f      	muls	r7, r3
 80180b6:	fb0e 770a 	mla	r7, lr, sl, r7
 80180ba:	f892 a002 	ldrb.w	sl, [r2, #2]
 80180be:	fb01 770a 	mla	r7, r1, sl, r7
 80180c2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80180c6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80180ca:	f814 7008 	ldrb.w	r7, [r4, r8]
 80180ce:	f896 8000 	ldrb.w	r8, [r6]
 80180d2:	7876      	ldrb	r6, [r6, #1]
 80180d4:	fb03 f808 	mul.w	r8, r3, r8
 80180d8:	fb0e 8807 	mla	r8, lr, r7, r8
 80180dc:	7817      	ldrb	r7, [r2, #0]
 80180de:	fb01 8807 	mla	r8, r1, r7, r8
 80180e2:	7807      	ldrb	r7, [r0, #0]
 80180e4:	fb09 8707 	mla	r7, r9, r7, r8
 80180e8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80180ec:	4373      	muls	r3, r6
 80180ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80180f2:	7856      	ldrb	r6, [r2, #1]
 80180f4:	ea4a 0707 	orr.w	r7, sl, r7
 80180f8:	fb0e 330c 	mla	r3, lr, ip, r3
 80180fc:	f890 a001 	ldrb.w	sl, [r0, #1]
 8018100:	fb01 3306 	mla	r3, r1, r6, r3
 8018104:	fb09 3a0a 	mla	sl, r9, sl, r3
 8018108:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801810c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801810e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8018112:	ea47 070a 	orr.w	r7, r7, sl
 8018116:	f823 7b02 	strh.w	r7, [r3], #2
 801811a:	930b      	str	r3, [sp, #44]	; 0x2c
 801811c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801811e:	449b      	add	fp, r3
 8018120:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018122:	441d      	add	r5, r3
 8018124:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018126:	3b01      	subs	r3, #1
 8018128:	9309      	str	r3, [sp, #36]	; 0x24
 801812a:	e714      	b.n	8017f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 801812c:	b149      	cbz	r1, 8018142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 801812e:	5cba      	ldrb	r2, [r7, r2]
 8018130:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8018134:	4422      	add	r2, r4
 8018136:	4660      	mov	r0, ip
 8018138:	4666      	mov	r6, ip
 801813a:	e7a5      	b.n	8018088 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801813c:	4660      	mov	r0, ip
 801813e:	4662      	mov	r2, ip
 8018140:	e7a2      	b.n	8018088 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8018142:	4660      	mov	r0, ip
 8018144:	4662      	mov	r2, ip
 8018146:	e7f7      	b.n	8018138 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8018148:	b00f      	add	sp, #60	; 0x3c
 801814a:	ecbd 8b08 	vpop	{d8-d11}
 801814e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018154 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8018154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018158:	880e      	ldrh	r6, [r1, #0]
 801815a:	b085      	sub	sp, #20
 801815c:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8018160:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8018164:	4691      	mov	r9, r2
 8018166:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801816a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801816e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8018172:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8018176:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 801817a:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 801817e:	9200      	str	r2, [sp, #0]
 8018180:	00f6      	lsls	r6, r6, #3
 8018182:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8018186:	9201      	str	r2, [sp, #4]
 8018188:	2c00      	cmp	r4, #0
 801818a:	b2f2      	uxtb	r2, r6
 801818c:	fb04 560c 	mla	r6, r4, ip, r5
 8018190:	9202      	str	r2, [sp, #8]
 8018192:	eb09 0e06 	add.w	lr, r9, r6
 8018196:	db3e      	blt.n	8018216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8018198:	45a0      	cmp	r8, r4
 801819a:	dd3c      	ble.n	8018216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 801819c:	2d00      	cmp	r5, #0
 801819e:	db38      	blt.n	8018212 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80181a0:	45ac      	cmp	ip, r5
 80181a2:	dd36      	ble.n	8018212 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80181a4:	f819 2006 	ldrb.w	r2, [r9, r6]
 80181a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80181ac:	1c6e      	adds	r6, r5, #1
 80181ae:	d435      	bmi.n	801821c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80181b0:	45b4      	cmp	ip, r6
 80181b2:	dd33      	ble.n	801821c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80181b4:	b3a0      	cbz	r0, 8018220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80181b6:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80181ba:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80181be:	3401      	adds	r4, #1
 80181c0:	d432      	bmi.n	8018228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80181c2:	45a0      	cmp	r8, r4
 80181c4:	dd30      	ble.n	8018228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80181c6:	b397      	cbz	r7, 801822e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80181c8:	2d00      	cmp	r5, #0
 80181ca:	db2b      	blt.n	8018224 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80181cc:	45ac      	cmp	ip, r5
 80181ce:	dd29      	ble.n	8018224 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80181d0:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80181d4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80181d8:	3501      	adds	r5, #1
 80181da:	d42b      	bmi.n	8018234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 80181dc:	45ac      	cmp	ip, r5
 80181de:	dd29      	ble.n	8018234 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 80181e0:	b350      	cbz	r0, 8018238 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 80181e2:	44f4      	add	ip, lr
 80181e4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80181e8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80181ec:	280f      	cmp	r0, #15
 80181ee:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80181f2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80181f6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80181fa:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80181fe:	d801      	bhi.n	8018204 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8018200:	2f0f      	cmp	r7, #15
 8018202:	d91b      	bls.n	801823c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8018204:	4b84      	ldr	r3, [pc, #528]	; (8018418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8018206:	4a85      	ldr	r2, [pc, #532]	; (801841c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8018208:	4885      	ldr	r0, [pc, #532]	; (8018420 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 801820a:	f240 210d 	movw	r1, #525	; 0x20d
 801820e:	f007 f8f1 	bl	801f3f4 <__assert_func>
 8018212:	2200      	movs	r2, #0
 8018214:	e7ca      	b.n	80181ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8018216:	2600      	movs	r6, #0
 8018218:	4632      	mov	r2, r6
 801821a:	e7d0      	b.n	80181be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 801821c:	2600      	movs	r6, #0
 801821e:	e7ce      	b.n	80181be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8018220:	4606      	mov	r6, r0
 8018222:	e7cc      	b.n	80181be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8018224:	2400      	movs	r4, #0
 8018226:	e7d7      	b.n	80181d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8018228:	2300      	movs	r3, #0
 801822a:	461c      	mov	r4, r3
 801822c:	e7de      	b.n	80181ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 801822e:	463b      	mov	r3, r7
 8018230:	463c      	mov	r4, r7
 8018232:	e7db      	b.n	80181ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8018234:	2300      	movs	r3, #0
 8018236:	e7d9      	b.n	80181ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8018238:	4603      	mov	r3, r0
 801823a:	e7d7      	b.n	80181ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 801823c:	b280      	uxth	r0, r0
 801823e:	b2bf      	uxth	r7, r7
 8018240:	fb00 fe07 	mul.w	lr, r0, r7
 8018244:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018248:	0100      	lsls	r0, r0, #4
 801824a:	eba0 0c0e 	sub.w	ip, r0, lr
 801824e:	b2bf      	uxth	r7, r7
 8018250:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018254:	fa1f fc8c 	uxth.w	ip, ip
 8018258:	1bed      	subs	r5, r5, r7
 801825a:	b2ad      	uxth	r5, r5
 801825c:	fb0c f00a 	mul.w	r0, ip, sl
 8018260:	fb05 000b 	mla	r0, r5, fp, r0
 8018264:	fb07 0009 	mla	r0, r7, r9, r0
 8018268:	fb0e 0008 	mla	r0, lr, r8, r0
 801826c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018270:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018274:	9003      	str	r0, [sp, #12]
 8018276:	d018      	beq.n	80182aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8018278:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801827c:	fb0b f000 	mul.w	r0, fp, r0
 8018280:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018284:	fb0b fb02 	mul.w	fp, fp, r2
 8018288:	0a02      	lsrs	r2, r0, #8
 801828a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801828e:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8018292:	4402      	add	r2, r0
 8018294:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8018298:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801829c:	0a12      	lsrs	r2, r2, #8
 801829e:	0a00      	lsrs	r0, r0, #8
 80182a0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80182a4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80182a8:	4302      	orrs	r2, r0
 80182aa:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80182ae:	d019      	beq.n	80182e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 80182b0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80182b4:	fb0a fb0b 	mul.w	fp, sl, fp
 80182b8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80182bc:	fb0a fa06 	mul.w	sl, sl, r6
 80182c0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80182c4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80182c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80182cc:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80182d0:	445e      	add	r6, fp
 80182d2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80182d6:	0a36      	lsrs	r6, r6, #8
 80182d8:	0a00      	lsrs	r0, r0, #8
 80182da:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80182de:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80182e2:	4306      	orrs	r6, r0
 80182e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80182e8:	d019      	beq.n	801831e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 80182ea:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80182ee:	fb09 fa0a 	mul.w	sl, r9, sl
 80182f2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80182f6:	fb09 f904 	mul.w	r9, r9, r4
 80182fa:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80182fe:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018302:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018306:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801830a:	4454      	add	r4, sl
 801830c:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8018310:	0a24      	lsrs	r4, r4, #8
 8018312:	0a00      	lsrs	r0, r0, #8
 8018314:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018318:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801831c:	4304      	orrs	r4, r0
 801831e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018322:	d019      	beq.n	8018358 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8018324:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8018328:	fb08 f909 	mul.w	r9, r8, r9
 801832c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018330:	fb08 f803 	mul.w	r8, r8, r3
 8018334:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8018338:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801833c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018340:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8018344:	444b      	add	r3, r9
 8018346:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801834a:	0a1b      	lsrs	r3, r3, #8
 801834c:	0a00      	lsrs	r0, r0, #8
 801834e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018352:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018356:	4303      	orrs	r3, r0
 8018358:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801835c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018360:	fb0c f808 	mul.w	r8, ip, r8
 8018364:	fb05 8800 	mla	r8, r5, r0, r8
 8018368:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801836c:	fb07 8800 	mla	r8, r7, r0, r8
 8018370:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8018374:	fb0e 8000 	mla	r0, lr, r0, r8
 8018378:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801837c:	fb0c f606 	mul.w	r6, ip, r6
 8018380:	0a00      	lsrs	r0, r0, #8
 8018382:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018386:	fb05 6202 	mla	r2, r5, r2, r6
 801838a:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801838e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8018392:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8018396:	fb07 2700 	mla	r7, r7, r0, r2
 801839a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801839e:	9b03      	ldr	r3, [sp, #12]
 80183a0:	9c00      	ldr	r4, [sp, #0]
 80183a2:	b2ad      	uxth	r5, r5
 80183a4:	436b      	muls	r3, r5
 80183a6:	fb0e 7000 	mla	r0, lr, r0, r7
 80183aa:	1c5a      	adds	r2, r3, #1
 80183ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80183b0:	0a00      	lsrs	r0, r0, #8
 80183b2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80183b6:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80183ba:	ea48 0000 	orr.w	r0, r8, r0
 80183be:	b2d2      	uxtb	r2, r2
 80183c0:	fb14 f602 	smulbb	r6, r4, r2
 80183c4:	0c03      	lsrs	r3, r0, #16
 80183c6:	fb03 6305 	mla	r3, r3, r5, r6
 80183ca:	b29e      	uxth	r6, r3
 80183cc:	9b01      	ldr	r3, [sp, #4]
 80183ce:	f3c0 2407 	ubfx	r4, r0, #8, #8
 80183d2:	fb13 f302 	smulbb	r3, r3, r2
 80183d6:	fb04 3405 	mla	r4, r4, r5, r3
 80183da:	9b02      	ldr	r3, [sp, #8]
 80183dc:	b2c0      	uxtb	r0, r0
 80183de:	fb13 f202 	smulbb	r2, r3, r2
 80183e2:	fb00 2005 	mla	r0, r0, r5, r2
 80183e6:	b280      	uxth	r0, r0
 80183e8:	b2a4      	uxth	r4, r4
 80183ea:	1c42      	adds	r2, r0, #1
 80183ec:	1c73      	adds	r3, r6, #1
 80183ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80183f2:	1c62      	adds	r2, r4, #1
 80183f4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80183f8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80183fc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8018400:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018404:	0952      	lsrs	r2, r2, #5
 8018406:	4303      	orrs	r3, r0
 8018408:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801840c:	4313      	orrs	r3, r2
 801840e:	800b      	strh	r3, [r1, #0]
 8018410:	b005      	add	sp, #20
 8018412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018416:	bf00      	nop
 8018418:	08024033 	.word	0x08024033
 801841c:	080245f1 	.word	0x080245f1
 8018420:	0802411c 	.word	0x0802411c

08018424 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018428:	ed2d 8b08 	vpush	{d8-d11}
 801842c:	b09f      	sub	sp, #124	; 0x7c
 801842e:	eeb0 aa40 	vmov.f32	s20, s0
 8018432:	921b      	str	r2, [sp, #108]	; 0x6c
 8018434:	9309      	str	r3, [sp, #36]	; 0x24
 8018436:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8018438:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 801843c:	931c      	str	r3, [sp, #112]	; 0x70
 801843e:	9119      	str	r1, [sp, #100]	; 0x64
 8018440:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8018444:	901d      	str	r0, [sp, #116]	; 0x74
 8018446:	6850      	ldr	r0, [r2, #4]
 8018448:	6812      	ldr	r2, [r2, #0]
 801844a:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 801844c:	fb00 1303 	mla	r3, r0, r3, r1
 8018450:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018454:	930c      	str	r3, [sp, #48]	; 0x30
 8018456:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8018458:	681b      	ldr	r3, [r3, #0]
 801845a:	9312      	str	r3, [sp, #72]	; 0x48
 801845c:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801845e:	685e      	ldr	r6, [r3, #4]
 8018460:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8018464:	930d      	str	r3, [sp, #52]	; 0x34
 8018466:	eef0 9a60 	vmov.f32	s19, s1
 801846a:	eeb0 9a41 	vmov.f32	s18, s2
 801846e:	eeb0 8a62 	vmov.f32	s16, s5
 8018472:	eef0 8a43 	vmov.f32	s17, s6
 8018476:	eef0 ba44 	vmov.f32	s23, s8
 801847a:	eeb0 ba64 	vmov.f32	s22, s9
 801847e:	eef0 aa45 	vmov.f32	s21, s10
 8018482:	3604      	adds	r6, #4
 8018484:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018486:	2b00      	cmp	r3, #0
 8018488:	dc03      	bgt.n	8018492 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801848a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801848c:	2b00      	cmp	r3, #0
 801848e:	f340 838e 	ble.w	8018bae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8018492:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8018494:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018498:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801849c:	1e48      	subs	r0, r1, #1
 801849e:	1e57      	subs	r7, r2, #1
 80184a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184a2:	2b00      	cmp	r3, #0
 80184a4:	f340 819b 	ble.w	80187de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 80184a8:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80184aa:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80184ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 80184b2:	d406      	bmi.n	80184c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80184b4:	4584      	cmp	ip, r0
 80184b6:	da04      	bge.n	80184c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80184b8:	2b00      	cmp	r3, #0
 80184ba:	db02      	blt.n	80184c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80184bc:	42bb      	cmp	r3, r7
 80184be:	f2c0 818f 	blt.w	80187e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 80184c2:	f11c 0c01 	adds.w	ip, ip, #1
 80184c6:	f100 817d 	bmi.w	80187c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80184ca:	4561      	cmp	r1, ip
 80184cc:	f2c0 817a 	blt.w	80187c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80184d0:	3301      	adds	r3, #1
 80184d2:	f100 8177 	bmi.w	80187c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80184d6:	429a      	cmp	r2, r3
 80184d8:	f2c0 8174 	blt.w	80187c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 80184dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80184de:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80184e0:	931a      	str	r3, [sp, #104]	; 0x68
 80184e2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80184e4:	2b00      	cmp	r3, #0
 80184e6:	f340 8199 	ble.w	801881c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80184ea:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80184ec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80184f0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80184f2:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80184f6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80184f8:	141b      	asrs	r3, r3, #16
 80184fa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80184fe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8018502:	f100 81dc 	bmi.w	80188be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8018506:	f100 38ff 	add.w	r8, r0, #4294967295
 801850a:	4543      	cmp	r3, r8
 801850c:	f280 81d7 	bge.w	80188be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8018510:	f1bc 0f00 	cmp.w	ip, #0
 8018514:	f2c0 81d3 	blt.w	80188be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8018518:	f10e 38ff 	add.w	r8, lr, #4294967295
 801851c:	45c4      	cmp	ip, r8
 801851e:	f280 81ce 	bge.w	80188be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8018522:	b200      	sxth	r0, r0
 8018524:	fb0c 3300 	mla	r3, ip, r0, r3
 8018528:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801852a:	eb04 0803 	add.w	r8, r4, r3
 801852e:	5ce3      	ldrb	r3, [r4, r3]
 8018530:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018534:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018538:	2a00      	cmp	r2, #0
 801853a:	f000 81b5 	beq.w	80188a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801853e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018542:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018546:	940e      	str	r4, [sp, #56]	; 0x38
 8018548:	0e24      	lsrs	r4, r4, #24
 801854a:	9415      	str	r4, [sp, #84]	; 0x54
 801854c:	b179      	cbz	r1, 801856e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801854e:	eb08 0c00 	add.w	ip, r8, r0
 8018552:	f818 0000 	ldrb.w	r0, [r8, r0]
 8018556:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801855a:	900a      	str	r0, [sp, #40]	; 0x28
 801855c:	0e00      	lsrs	r0, r0, #24
 801855e:	9013      	str	r0, [sp, #76]	; 0x4c
 8018560:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8018564:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8018568:	900f      	str	r0, [sp, #60]	; 0x3c
 801856a:	0e00      	lsrs	r0, r0, #24
 801856c:	9016      	str	r0, [sp, #88]	; 0x58
 801856e:	b292      	uxth	r2, r2
 8018570:	b289      	uxth	r1, r1
 8018572:	fb02 f901 	mul.w	r9, r2, r1
 8018576:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801857a:	0112      	lsls	r2, r2, #4
 801857c:	eba2 0809 	sub.w	r8, r2, r9
 8018580:	b289      	uxth	r1, r1
 8018582:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018586:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018588:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801858a:	fa1f f888 	uxth.w	r8, r8
 801858e:	1a52      	subs	r2, r2, r1
 8018590:	b292      	uxth	r2, r2
 8018592:	fb08 f000 	mul.w	r0, r8, r0
 8018596:	fb02 000e 	mla	r0, r2, lr, r0
 801859a:	fb01 0004 	mla	r0, r1, r4, r0
 801859e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80185a0:	fb09 0004 	mla	r0, r9, r4, r0
 80185a4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80185a8:	2800      	cmp	r0, #0
 80185aa:	f000 8100 	beq.w	80187ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80185ae:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80185b2:	d01b      	beq.n	80185ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80185b4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80185b8:	fb0e fa0a 	mul.w	sl, lr, sl
 80185bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80185c0:	fb0e fe03 	mul.w	lr, lr, r3
 80185c4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80185c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80185cc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80185d0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80185d4:	4453      	add	r3, sl
 80185d6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80185da:	0a1b      	lsrs	r3, r3, #8
 80185dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80185e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80185e4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80185e8:	ea43 030c 	orr.w	r3, r3, ip
 80185ec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80185ee:	2cff      	cmp	r4, #255	; 0xff
 80185f0:	d021      	beq.n	8018636 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80185f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80185f4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80185f8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80185fa:	fb04 fb0b 	mul.w	fp, r4, fp
 80185fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018600:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018604:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018606:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801860a:	fb04 fa0a 	mul.w	sl, r4, sl
 801860e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018612:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018616:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801861a:	44de      	add	lr, fp
 801861c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018620:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018624:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018628:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801862c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018630:	ea4e 040a 	orr.w	r4, lr, sl
 8018634:	940e      	str	r4, [sp, #56]	; 0x38
 8018636:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018638:	2cff      	cmp	r4, #255	; 0xff
 801863a:	d021      	beq.n	8018680 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801863c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801863e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018642:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018644:	fb04 fb0b 	mul.w	fp, r4, fp
 8018648:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801864a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801864e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018650:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018654:	fb04 fa0a 	mul.w	sl, r4, sl
 8018658:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801865c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018660:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018664:	44de      	add	lr, fp
 8018666:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801866a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801866e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018672:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018676:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801867a:	ea4e 040a 	orr.w	r4, lr, sl
 801867e:	940a      	str	r4, [sp, #40]	; 0x28
 8018680:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8018682:	2cff      	cmp	r4, #255	; 0xff
 8018684:	d021      	beq.n	80186ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8018686:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018688:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801868c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801868e:	fb04 fb0b 	mul.w	fp, r4, fp
 8018692:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018694:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018698:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801869a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801869e:	fb04 fa0a 	mul.w	sl, r4, sl
 80186a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80186a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80186aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80186ae:	44de      	add	lr, fp
 80186b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80186b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80186b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80186bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80186c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80186c4:	ea4e 040a 	orr.w	r4, lr, sl
 80186c8:	940f      	str	r4, [sp, #60]	; 0x3c
 80186ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80186cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80186d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80186d2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80186d6:	fb08 fc0c 	mul.w	ip, r8, ip
 80186da:	fb02 cc0e 	mla	ip, r2, lr, ip
 80186de:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80186e2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80186e4:	fb01 cc0e 	mla	ip, r1, lr, ip
 80186e8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80186ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80186ee:	fb09 cc0e 	mla	ip, r9, lr, ip
 80186f2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80186f6:	fb08 f80e 	mul.w	r8, r8, lr
 80186fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80186fe:	fb02 8303 	mla	r3, r2, r3, r8
 8018702:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018704:	f8b7 e000 	ldrh.w	lr, [r7]
 8018708:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801870a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801870e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018710:	fb01 330a 	mla	r3, r1, sl, r3
 8018714:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018718:	fb09 3901 	mla	r9, r9, r1, r3
 801871c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801871e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018720:	4343      	muls	r3, r0
 8018722:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018726:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801872a:	1c58      	adds	r0, r3, #1
 801872c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018730:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8018734:	ea4c 0c09 	orr.w	ip, ip, r9
 8018738:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801873c:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8018740:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018744:	ea4f 232e 	mov.w	r3, lr, asr #8
 8018748:	b2c0      	uxtb	r0, r0
 801874a:	fb11 f102 	smulbb	r1, r1, r2
 801874e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018752:	fb03 1300 	mla	r3, r3, r0, r1
 8018756:	b299      	uxth	r1, r3
 8018758:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801875c:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8018760:	fb13 f304 	smulbb	r3, r3, r4
 8018764:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018768:	fb02 3200 	mla	r2, r2, r0, r3
 801876c:	fa5f fc8c 	uxtb.w	ip, ip
 8018770:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8018774:	b2db      	uxtb	r3, r3
 8018776:	fb1c fc04 	smulbb	ip, ip, r4
 801877a:	fb03 cc00 	mla	ip, r3, r0, ip
 801877e:	b292      	uxth	r2, r2
 8018780:	fa1f fc8c 	uxth.w	ip, ip
 8018784:	1c4b      	adds	r3, r1, #1
 8018786:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801878a:	f10c 0001 	add.w	r0, ip, #1
 801878e:	1c51      	adds	r1, r2, #1
 8018790:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8018794:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018798:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801879c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80187a0:	0952      	lsrs	r2, r2, #5
 80187a2:	ea43 030c 	orr.w	r3, r3, ip
 80187a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187aa:	4313      	orrs	r3, r2
 80187ac:	803b      	strh	r3, [r7, #0]
 80187ae:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80187b0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80187b2:	441a      	add	r2, r3
 80187b4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80187b6:	9231      	str	r2, [sp, #196]	; 0xc4
 80187b8:	441d      	add	r5, r3
 80187ba:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80187bc:	3b01      	subs	r3, #1
 80187be:	3702      	adds	r7, #2
 80187c0:	931a      	str	r3, [sp, #104]	; 0x68
 80187c2:	e68e      	b.n	80184e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80187c4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80187c6:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80187c8:	441c      	add	r4, r3
 80187ca:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80187cc:	9431      	str	r4, [sp, #196]	; 0xc4
 80187ce:	441d      	add	r5, r3
 80187d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187d2:	3b01      	subs	r3, #1
 80187d4:	9309      	str	r3, [sp, #36]	; 0x24
 80187d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80187d8:	3302      	adds	r3, #2
 80187da:	930c      	str	r3, [sp, #48]	; 0x30
 80187dc:	e660      	b.n	80184a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80187de:	d024      	beq.n	801882a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 80187e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187e2:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80187e4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80187e6:	3b01      	subs	r3, #1
 80187e8:	fb00 4003 	mla	r0, r0, r3, r4
 80187ec:	1400      	asrs	r0, r0, #16
 80187ee:	f53f ae75 	bmi.w	80184dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80187f2:	3901      	subs	r1, #1
 80187f4:	4288      	cmp	r0, r1
 80187f6:	f6bf ae71 	bge.w	80184dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80187fa:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80187fc:	fb01 5303 	mla	r3, r1, r3, r5
 8018800:	141b      	asrs	r3, r3, #16
 8018802:	f53f ae6b 	bmi.w	80184dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018806:	3a01      	subs	r2, #1
 8018808:	4293      	cmp	r3, r2
 801880a:	f6bf ae67 	bge.w	80184dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801880e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018812:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8018816:	f1bb 0f00 	cmp.w	fp, #0
 801881a:	dc70      	bgt.n	80188fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 801881c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801881e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018822:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018824:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018828:	930c      	str	r3, [sp, #48]	; 0x30
 801882a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801882c:	2b00      	cmp	r3, #0
 801882e:	f340 81be 	ble.w	8018bae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8018832:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018836:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801883a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801883e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018840:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018844:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018848:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801884c:	eef0 6a48 	vmov.f32	s13, s16
 8018850:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018854:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018858:	ee37 8a48 	vsub.f32	s16, s14, s16
 801885c:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8018860:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018864:	eef0 6a68 	vmov.f32	s13, s17
 8018868:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801886c:	ee18 2a10 	vmov	r2, s16
 8018870:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018874:	fb92 f3f3 	sdiv	r3, r2, r3
 8018878:	ee18 2a90 	vmov	r2, s17
 801887c:	9333      	str	r3, [sp, #204]	; 0xcc
 801887e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018880:	fb92 f3f3 	sdiv	r3, r2, r3
 8018884:	9334      	str	r3, [sp, #208]	; 0xd0
 8018886:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018888:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801888a:	3b01      	subs	r3, #1
 801888c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018890:	9319      	str	r3, [sp, #100]	; 0x64
 8018892:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018894:	bf08      	it	eq
 8018896:	4613      	moveq	r3, r2
 8018898:	ee16 5a90 	vmov	r5, s13
 801889c:	9309      	str	r3, [sp, #36]	; 0x24
 801889e:	eef0 8a67 	vmov.f32	s17, s15
 80188a2:	eeb0 8a47 	vmov.f32	s16, s14
 80188a6:	e5ed      	b.n	8018484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80188a8:	2900      	cmp	r1, #0
 80188aa:	f43f ae60 	beq.w	801856e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80188ae:	f818 0000 	ldrb.w	r0, [r8, r0]
 80188b2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80188b6:	900a      	str	r0, [sp, #40]	; 0x28
 80188b8:	0e00      	lsrs	r0, r0, #24
 80188ba:	9013      	str	r0, [sp, #76]	; 0x4c
 80188bc:	e657      	b.n	801856e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80188be:	f113 0801 	adds.w	r8, r3, #1
 80188c2:	f53f af74 	bmi.w	80187ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80188c6:	4540      	cmp	r0, r8
 80188c8:	f6ff af71 	blt.w	80187ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80188cc:	f11c 0801 	adds.w	r8, ip, #1
 80188d0:	f53f af6d 	bmi.w	80187ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80188d4:	45c6      	cmp	lr, r8
 80188d6:	f6ff af6a 	blt.w	80187ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80188da:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80188dc:	9302      	str	r3, [sp, #8]
 80188de:	b200      	sxth	r0, r0
 80188e0:	fa0f f38e 	sxth.w	r3, lr
 80188e4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80188e8:	e9cd c203 	strd	ip, r2, [sp, #12]
 80188ec:	9301      	str	r3, [sp, #4]
 80188ee:	9000      	str	r0, [sp, #0]
 80188f0:	4633      	mov	r3, r6
 80188f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80188f4:	981d      	ldr	r0, [sp, #116]	; 0x74
 80188f6:	4639      	mov	r1, r7
 80188f8:	f7ff fc2c 	bl	8018154 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80188fc:	e757      	b.n	80187ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80188fe:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8018900:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8018902:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018906:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8018908:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801890c:	1427      	asrs	r7, r4, #16
 801890e:	142b      	asrs	r3, r5, #16
 8018910:	fb01 7303 	mla	r3, r1, r3, r7
 8018914:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018916:	18e7      	adds	r7, r4, r3
 8018918:	5ce3      	ldrb	r3, [r4, r3]
 801891a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801891e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018922:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018926:	2a00      	cmp	r2, #0
 8018928:	f000 8137 	beq.w	8018b9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 801892c:	f897 e001 	ldrb.w	lr, [r7, #1]
 8018930:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8018934:	9410      	str	r4, [sp, #64]	; 0x40
 8018936:	0e24      	lsrs	r4, r4, #24
 8018938:	9417      	str	r4, [sp, #92]	; 0x5c
 801893a:	b170      	cbz	r0, 801895a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 801893c:	eb07 0e01 	add.w	lr, r7, r1
 8018940:	5c79      	ldrb	r1, [r7, r1]
 8018942:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018946:	910b      	str	r1, [sp, #44]	; 0x2c
 8018948:	0e09      	lsrs	r1, r1, #24
 801894a:	9114      	str	r1, [sp, #80]	; 0x50
 801894c:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8018950:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018954:	9111      	str	r1, [sp, #68]	; 0x44
 8018956:	0e09      	lsrs	r1, r1, #24
 8018958:	9118      	str	r1, [sp, #96]	; 0x60
 801895a:	b292      	uxth	r2, r2
 801895c:	b280      	uxth	r0, r0
 801895e:	fb02 f800 	mul.w	r8, r2, r0
 8018962:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8018966:	0112      	lsls	r2, r2, #4
 8018968:	eba2 0e08 	sub.w	lr, r2, r8
 801896c:	b280      	uxth	r0, r0
 801896e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018972:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8018974:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018976:	fa1f fe8e 	uxth.w	lr, lr
 801897a:	1a12      	subs	r2, r2, r0
 801897c:	b292      	uxth	r2, r2
 801897e:	fb0e f101 	mul.w	r1, lr, r1
 8018982:	fb02 110c 	mla	r1, r2, ip, r1
 8018986:	fb00 1104 	mla	r1, r0, r4, r1
 801898a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801898c:	fb08 1104 	mla	r1, r8, r4, r1
 8018990:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018994:	2900      	cmp	r1, #0
 8018996:	f000 80f5 	beq.w	8018b84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801899a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801899e:	d019      	beq.n	80189d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b0>
 80189a0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80189a4:	fb0c fa0a 	mul.w	sl, ip, sl
 80189a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80189ac:	fb0c fc03 	mul.w	ip, ip, r3
 80189b0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80189b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80189b8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80189bc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80189c0:	4453      	add	r3, sl
 80189c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80189c6:	0a1b      	lsrs	r3, r3, #8
 80189c8:	0a3f      	lsrs	r7, r7, #8
 80189ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80189ce:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80189d2:	433b      	orrs	r3, r7
 80189d4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80189d6:	2cff      	cmp	r4, #255	; 0xff
 80189d8:	d020      	beq.n	8018a1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f8>
 80189da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80189dc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80189e0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80189e2:	4367      	muls	r7, r4
 80189e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80189e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80189ea:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80189ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80189f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80189f4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80189f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80189fc:	44bc      	add	ip, r7
 80189fe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018a02:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018a06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018a0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018a12:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018a16:	ea4c 040a 	orr.w	r4, ip, sl
 8018a1a:	9410      	str	r4, [sp, #64]	; 0x40
 8018a1c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018a1e:	2cff      	cmp	r4, #255	; 0xff
 8018a20:	d020      	beq.n	8018a64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 8018a22:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018a24:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018a28:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018a2a:	4367      	muls	r7, r4
 8018a2c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018a2e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018a32:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018a34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018a38:	fb04 fa0a 	mul.w	sl, r4, sl
 8018a3c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018a40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018a44:	44bc      	add	ip, r7
 8018a46:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018a4a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018a4e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018a56:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018a5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018a5e:	ea4c 040a 	orr.w	r4, ip, sl
 8018a62:	940b      	str	r4, [sp, #44]	; 0x2c
 8018a64:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018a66:	2cff      	cmp	r4, #255	; 0xff
 8018a68:	d020      	beq.n	8018aac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8018a6a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018a6c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018a70:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018a72:	4367      	muls	r7, r4
 8018a74:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018a76:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018a7a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8018a7c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018a80:	fb04 fa0a 	mul.w	sl, r4, sl
 8018a84:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018a88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018a8c:	44bc      	add	ip, r7
 8018a8e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018a92:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018a96:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018a9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018a9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018aa2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018aa6:	ea4c 040a 	orr.w	r4, ip, sl
 8018aaa:	9411      	str	r4, [sp, #68]	; 0x44
 8018aac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018aae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018ab2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018ab4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018ab8:	fb0e f707 	mul.w	r7, lr, r7
 8018abc:	fb02 770c 	mla	r7, r2, ip, r7
 8018ac0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018ac4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8018ac6:	fb00 770c 	mla	r7, r0, ip, r7
 8018aca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018ace:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018ad0:	fb08 770c 	mla	r7, r8, ip, r7
 8018ad4:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018ad8:	fb0e fe0c 	mul.w	lr, lr, ip
 8018adc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ae0:	fb02 e303 	mla	r3, r2, r3, lr
 8018ae4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018ae6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018ae8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8018aec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018aee:	fb00 330a 	mla	r3, r0, sl, r3
 8018af2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8018af6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018afa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018afc:	f8b9 0000 	ldrh.w	r0, [r9]
 8018b00:	434b      	muls	r3, r1
 8018b02:	0a3f      	lsrs	r7, r7, #8
 8018b04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018b08:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018b0c:	1c59      	adds	r1, r3, #1
 8018b0e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018b12:	ea47 070c 	orr.w	r7, r7, ip
 8018b16:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8018b1a:	1202      	asrs	r2, r0, #8
 8018b1c:	0c3b      	lsrs	r3, r7, #16
 8018b1e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8018b22:	b2c9      	uxtb	r1, r1
 8018b24:	fb13 f304 	smulbb	r3, r3, r4
 8018b28:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018b2c:	fb02 3201 	mla	r2, r2, r1, r3
 8018b30:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8018b34:	10c3      	asrs	r3, r0, #3
 8018b36:	b2ff      	uxtb	r7, r7
 8018b38:	00c0      	lsls	r0, r0, #3
 8018b3a:	b292      	uxth	r2, r2
 8018b3c:	fb1c fc04 	smulbb	ip, ip, r4
 8018b40:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018b44:	b2c0      	uxtb	r0, r0
 8018b46:	fb17 f704 	smulbb	r7, r7, r4
 8018b4a:	fb03 c301 	mla	r3, r3, r1, ip
 8018b4e:	fb00 7001 	mla	r0, r0, r1, r7
 8018b52:	f102 0c01 	add.w	ip, r2, #1
 8018b56:	b280      	uxth	r0, r0
 8018b58:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018b5c:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8018b60:	1c42      	adds	r2, r0, #1
 8018b62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018b66:	b29b      	uxth	r3, r3
 8018b68:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8018b6c:	ea4c 0200 	orr.w	r2, ip, r0
 8018b70:	f103 0c01 	add.w	ip, r3, #1
 8018b74:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8018b78:	095b      	lsrs	r3, r3, #5
 8018b7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b7e:	431a      	orrs	r2, r3
 8018b80:	f8a9 2000 	strh.w	r2, [r9]
 8018b84:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8018b86:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8018b88:	441a      	add	r2, r3
 8018b8a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018b8c:	9231      	str	r2, [sp, #196]	; 0xc4
 8018b8e:	f109 0902 	add.w	r9, r9, #2
 8018b92:	441d      	add	r5, r3
 8018b94:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018b98:	e63d      	b.n	8018816 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8018b9a:	2800      	cmp	r0, #0
 8018b9c:	f43f aedd 	beq.w	801895a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8018ba0:	5c79      	ldrb	r1, [r7, r1]
 8018ba2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018ba6:	910b      	str	r1, [sp, #44]	; 0x2c
 8018ba8:	0e09      	lsrs	r1, r1, #24
 8018baa:	9114      	str	r1, [sp, #80]	; 0x50
 8018bac:	e6d5      	b.n	801895a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8018bae:	b01f      	add	sp, #124	; 0x7c
 8018bb0:	ecbd 8b08 	vpop	{d8-d11}
 8018bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8018bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bbc:	880e      	ldrh	r6, [r1, #0]
 8018bbe:	b085      	sub	sp, #20
 8018bc0:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8018bc4:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8018bc8:	4691      	mov	r9, r2
 8018bca:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8018bce:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8018bd2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8018bd6:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8018bda:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8018bde:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8018be2:	9200      	str	r2, [sp, #0]
 8018be4:	00f6      	lsls	r6, r6, #3
 8018be6:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8018bea:	9201      	str	r2, [sp, #4]
 8018bec:	2c00      	cmp	r4, #0
 8018bee:	b2f2      	uxtb	r2, r6
 8018bf0:	fb04 560c 	mla	r6, r4, ip, r5
 8018bf4:	9202      	str	r2, [sp, #8]
 8018bf6:	eb09 0e06 	add.w	lr, r9, r6
 8018bfa:	db3e      	blt.n	8018c7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8018bfc:	45a0      	cmp	r8, r4
 8018bfe:	dd3c      	ble.n	8018c7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8018c00:	2d00      	cmp	r5, #0
 8018c02:	db38      	blt.n	8018c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8018c04:	45ac      	cmp	ip, r5
 8018c06:	dd36      	ble.n	8018c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8018c08:	f819 2006 	ldrb.w	r2, [r9, r6]
 8018c0c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8018c10:	1c6e      	adds	r6, r5, #1
 8018c12:	d435      	bmi.n	8018c80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8018c14:	45b4      	cmp	ip, r6
 8018c16:	dd33      	ble.n	8018c80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8018c18:	b3a0      	cbz	r0, 8018c84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8018c1a:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8018c1e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8018c22:	3401      	adds	r4, #1
 8018c24:	d432      	bmi.n	8018c8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8018c26:	45a0      	cmp	r8, r4
 8018c28:	dd30      	ble.n	8018c8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8018c2a:	b397      	cbz	r7, 8018c92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8018c2c:	2d00      	cmp	r5, #0
 8018c2e:	db2b      	blt.n	8018c88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8018c30:	45ac      	cmp	ip, r5
 8018c32:	dd29      	ble.n	8018c88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8018c34:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8018c38:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8018c3c:	3501      	adds	r5, #1
 8018c3e:	d42b      	bmi.n	8018c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8018c40:	45ac      	cmp	ip, r5
 8018c42:	dd29      	ble.n	8018c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8018c44:	b350      	cbz	r0, 8018c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 8018c46:	44f4      	add	ip, lr
 8018c48:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8018c4c:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8018c50:	280f      	cmp	r0, #15
 8018c52:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018c56:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018c5a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018c5e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8018c62:	d801      	bhi.n	8018c68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 8018c64:	2f0f      	cmp	r7, #15
 8018c66:	d91b      	bls.n	8018ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 8018c68:	4b7d      	ldr	r3, [pc, #500]	; (8018e60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8018c6a:	4a7e      	ldr	r2, [pc, #504]	; (8018e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8018c6c:	487e      	ldr	r0, [pc, #504]	; (8018e68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8018c6e:	f240 210d 	movw	r1, #525	; 0x20d
 8018c72:	f006 fbbf 	bl	801f3f4 <__assert_func>
 8018c76:	2200      	movs	r2, #0
 8018c78:	e7ca      	b.n	8018c10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8018c7a:	2600      	movs	r6, #0
 8018c7c:	4632      	mov	r2, r6
 8018c7e:	e7d0      	b.n	8018c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8018c80:	2600      	movs	r6, #0
 8018c82:	e7ce      	b.n	8018c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8018c84:	4606      	mov	r6, r0
 8018c86:	e7cc      	b.n	8018c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8018c88:	2400      	movs	r4, #0
 8018c8a:	e7d7      	b.n	8018c3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 8018c8c:	2300      	movs	r3, #0
 8018c8e:	461c      	mov	r4, r3
 8018c90:	e7de      	b.n	8018c50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8018c92:	463b      	mov	r3, r7
 8018c94:	463c      	mov	r4, r7
 8018c96:	e7db      	b.n	8018c50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8018c98:	2300      	movs	r3, #0
 8018c9a:	e7d9      	b.n	8018c50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8018c9c:	4603      	mov	r3, r0
 8018c9e:	e7d7      	b.n	8018c50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8018ca0:	b280      	uxth	r0, r0
 8018ca2:	b2bf      	uxth	r7, r7
 8018ca4:	fb00 fe07 	mul.w	lr, r0, r7
 8018ca8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018cac:	0100      	lsls	r0, r0, #4
 8018cae:	eba0 0c0e 	sub.w	ip, r0, lr
 8018cb2:	b2bf      	uxth	r7, r7
 8018cb4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018cb8:	fa1f fc8c 	uxth.w	ip, ip
 8018cbc:	1bed      	subs	r5, r5, r7
 8018cbe:	b2ad      	uxth	r5, r5
 8018cc0:	fb0c f00a 	mul.w	r0, ip, sl
 8018cc4:	fb05 000b 	mla	r0, r5, fp, r0
 8018cc8:	fb07 0009 	mla	r0, r7, r9, r0
 8018ccc:	fb0e 0008 	mla	r0, lr, r8, r0
 8018cd0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018cd4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018cd8:	9003      	str	r0, [sp, #12]
 8018cda:	d018      	beq.n	8018d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x156>
 8018cdc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018ce0:	fb0b f000 	mul.w	r0, fp, r0
 8018ce4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018ce8:	fb0b fb02 	mul.w	fp, fp, r2
 8018cec:	0a02      	lsrs	r2, r0, #8
 8018cee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018cf2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8018cf6:	4402      	add	r2, r0
 8018cf8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8018cfc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8018d00:	0a12      	lsrs	r2, r2, #8
 8018d02:	0a00      	lsrs	r0, r0, #8
 8018d04:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018d08:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018d0c:	4302      	orrs	r2, r0
 8018d0e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018d12:	d019      	beq.n	8018d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x190>
 8018d14:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018d18:	fb0a fb0b 	mul.w	fp, sl, fp
 8018d1c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018d20:	fb0a fa06 	mul.w	sl, sl, r6
 8018d24:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018d28:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018d2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018d30:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8018d34:	445e      	add	r6, fp
 8018d36:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8018d3a:	0a36      	lsrs	r6, r6, #8
 8018d3c:	0a00      	lsrs	r0, r0, #8
 8018d3e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018d42:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018d46:	4306      	orrs	r6, r0
 8018d48:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018d4c:	d019      	beq.n	8018d82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ca>
 8018d4e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018d52:	fb09 fa0a 	mul.w	sl, r9, sl
 8018d56:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018d5a:	fb09 f904 	mul.w	r9, r9, r4
 8018d5e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018d62:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018d66:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018d6a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8018d6e:	4454      	add	r4, sl
 8018d70:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8018d74:	0a24      	lsrs	r4, r4, #8
 8018d76:	0a00      	lsrs	r0, r0, #8
 8018d78:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018d7c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018d80:	4304      	orrs	r4, r0
 8018d82:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018d86:	d019      	beq.n	8018dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x204>
 8018d88:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8018d8c:	fb08 f909 	mul.w	r9, r8, r9
 8018d90:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018d94:	fb08 f803 	mul.w	r8, r8, r3
 8018d98:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8018d9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018da0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018da4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8018da8:	444b      	add	r3, r9
 8018daa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018dae:	0a1b      	lsrs	r3, r3, #8
 8018db0:	0a00      	lsrs	r0, r0, #8
 8018db2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018db6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018dba:	4303      	orrs	r3, r0
 8018dbc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018dc0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018dc4:	fb0c f808 	mul.w	r8, ip, r8
 8018dc8:	fb05 8800 	mla	r8, r5, r0, r8
 8018dcc:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8018dd0:	fb07 8800 	mla	r8, r7, r0, r8
 8018dd4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8018dd8:	fb0e 8000 	mla	r0, lr, r0, r8
 8018ddc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018de0:	0a00      	lsrs	r0, r0, #8
 8018de2:	fb0c f606 	mul.w	r6, ip, r6
 8018de6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018dea:	fb05 6202 	mla	r2, r5, r2, r6
 8018dee:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8018df2:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8018df6:	fb07 2700 	mla	r7, r7, r0, r2
 8018dfa:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8018dfe:	9b03      	ldr	r3, [sp, #12]
 8018e00:	9c02      	ldr	r4, [sp, #8]
 8018e02:	9d01      	ldr	r5, [sp, #4]
 8018e04:	fb0e 7000 	mla	r0, lr, r0, r7
 8018e08:	43da      	mvns	r2, r3
 8018e0a:	9b00      	ldr	r3, [sp, #0]
 8018e0c:	b2d2      	uxtb	r2, r2
 8018e0e:	0a00      	lsrs	r0, r0, #8
 8018e10:	4353      	muls	r3, r2
 8018e12:	4354      	muls	r4, r2
 8018e14:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018e18:	ea48 0000 	orr.w	r0, r8, r0
 8018e1c:	4355      	muls	r5, r2
 8018e1e:	4622      	mov	r2, r4
 8018e20:	1c5c      	adds	r4, r3, #1
 8018e22:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8018e26:	0c03      	lsrs	r3, r0, #16
 8018e28:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8018e2c:	4b0f      	ldr	r3, [pc, #60]	; (8018e6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 8018e2e:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 8018e32:	1c54      	adds	r4, r2, #1
 8018e34:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8018e38:	b2c2      	uxtb	r2, r0
 8018e3a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018e3e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8018e42:	1c6a      	adds	r2, r5, #1
 8018e44:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018e48:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018e4c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018e50:	00c0      	lsls	r0, r0, #3
 8018e52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018e56:	4318      	orrs	r0, r3
 8018e58:	8008      	strh	r0, [r1, #0]
 8018e5a:	b005      	add	sp, #20
 8018e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018e60:	08024033 	.word	0x08024033
 8018e64:	080245f1 	.word	0x080245f1
 8018e68:	0802411c 	.word	0x0802411c
 8018e6c:	fffff800 	.word	0xfffff800

08018e70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e74:	ed2d 8b08 	vpush	{d8-d11}
 8018e78:	b09b      	sub	sp, #108	; 0x6c
 8018e7a:	eeb0 aa40 	vmov.f32	s20, s0
 8018e7e:	9218      	str	r2, [sp, #96]	; 0x60
 8018e80:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8018e82:	9116      	str	r1, [sp, #88]	; 0x58
 8018e84:	9307      	str	r3, [sp, #28]
 8018e86:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8018e8a:	9019      	str	r0, [sp, #100]	; 0x64
 8018e8c:	6850      	ldr	r0, [r2, #4]
 8018e8e:	6812      	ldr	r2, [r2, #0]
 8018e90:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 8018e92:	fb00 1303 	mla	r3, r0, r3, r1
 8018e96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018e9a:	930a      	str	r3, [sp, #40]	; 0x28
 8018e9c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018e9e:	681b      	ldr	r3, [r3, #0]
 8018ea0:	930f      	str	r3, [sp, #60]	; 0x3c
 8018ea2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018ea4:	685e      	ldr	r6, [r3, #4]
 8018ea6:	eef0 9a60 	vmov.f32	s19, s1
 8018eaa:	eeb0 9a41 	vmov.f32	s18, s2
 8018eae:	eeb0 8a62 	vmov.f32	s16, s5
 8018eb2:	eef0 8a43 	vmov.f32	s17, s6
 8018eb6:	eef0 ba44 	vmov.f32	s23, s8
 8018eba:	eeb0 ba64 	vmov.f32	s22, s9
 8018ebe:	eef0 aa45 	vmov.f32	s21, s10
 8018ec2:	3604      	adds	r6, #4
 8018ec4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018ec6:	2b00      	cmp	r3, #0
 8018ec8:	dc03      	bgt.n	8018ed2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8018eca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018ecc:	2b00      	cmp	r3, #0
 8018ece:	f340 8371 	ble.w	80195b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8018ed2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018ed4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ed8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018edc:	1e48      	subs	r0, r1, #1
 8018ede:	1e57      	subs	r7, r2, #1
 8018ee0:	9b07      	ldr	r3, [sp, #28]
 8018ee2:	2b00      	cmp	r3, #0
 8018ee4:	f340 8189 	ble.w	80191fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018ee8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8018eea:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8018eee:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018ef2:	d406      	bmi.n	8018f02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018ef4:	4584      	cmp	ip, r0
 8018ef6:	da04      	bge.n	8018f02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018ef8:	2b00      	cmp	r3, #0
 8018efa:	db02      	blt.n	8018f02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018efc:	42bb      	cmp	r3, r7
 8018efe:	f2c0 817d 	blt.w	80191fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8018f02:	f11c 0c01 	adds.w	ip, ip, #1
 8018f06:	f100 816b 	bmi.w	80191e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018f0a:	4561      	cmp	r1, ip
 8018f0c:	f2c0 8168 	blt.w	80191e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018f10:	3301      	adds	r3, #1
 8018f12:	f100 8165 	bmi.w	80191e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018f16:	429a      	cmp	r2, r3
 8018f18:	f2c0 8162 	blt.w	80191e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018f1c:	9b07      	ldr	r3, [sp, #28]
 8018f1e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018f20:	9317      	str	r3, [sp, #92]	; 0x5c
 8018f22:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018f24:	2b00      	cmp	r3, #0
 8018f26:	f340 8187 	ble.w	8019238 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8018f2a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018f2c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018f30:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018f32:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8018f36:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018f38:	141b      	asrs	r3, r3, #16
 8018f3a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8018f3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8018f42:	f100 81ca 	bmi.w	80192da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8018f46:	f101 38ff 	add.w	r8, r1, #4294967295
 8018f4a:	4543      	cmp	r3, r8
 8018f4c:	f280 81c5 	bge.w	80192da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8018f50:	f1bc 0f00 	cmp.w	ip, #0
 8018f54:	f2c0 81c1 	blt.w	80192da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8018f58:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018f5c:	45c4      	cmp	ip, r8
 8018f5e:	f280 81bc 	bge.w	80192da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8018f62:	b209      	sxth	r1, r1
 8018f64:	fb0c 3301 	mla	r3, ip, r1, r3
 8018f68:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018f6a:	eb04 0803 	add.w	r8, r4, r3
 8018f6e:	5ce3      	ldrb	r3, [r4, r3]
 8018f70:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8018f74:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8018f78:	2a00      	cmp	r2, #0
 8018f7a:	f000 81a3 	beq.w	80192c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8018f7e:	f898 c001 	ldrb.w	ip, [r8, #1]
 8018f82:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8018f86:	940b      	str	r4, [sp, #44]	; 0x2c
 8018f88:	0e24      	lsrs	r4, r4, #24
 8018f8a:	9412      	str	r4, [sp, #72]	; 0x48
 8018f8c:	b178      	cbz	r0, 8018fae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018f8e:	eb08 0c01 	add.w	ip, r8, r1
 8018f92:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018f96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018f9a:	9108      	str	r1, [sp, #32]
 8018f9c:	0e09      	lsrs	r1, r1, #24
 8018f9e:	9110      	str	r1, [sp, #64]	; 0x40
 8018fa0:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8018fa4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018fa8:	910c      	str	r1, [sp, #48]	; 0x30
 8018faa:	0e09      	lsrs	r1, r1, #24
 8018fac:	9113      	str	r1, [sp, #76]	; 0x4c
 8018fae:	b292      	uxth	r2, r2
 8018fb0:	b280      	uxth	r0, r0
 8018fb2:	fb02 f900 	mul.w	r9, r2, r0
 8018fb6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018fba:	0112      	lsls	r2, r2, #4
 8018fbc:	eba2 0809 	sub.w	r8, r2, r9
 8018fc0:	b280      	uxth	r0, r0
 8018fc2:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018fc6:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018fc8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018fca:	fa1f f888 	uxth.w	r8, r8
 8018fce:	1a12      	subs	r2, r2, r0
 8018fd0:	b292      	uxth	r2, r2
 8018fd2:	fb08 f101 	mul.w	r1, r8, r1
 8018fd6:	fb02 110e 	mla	r1, r2, lr, r1
 8018fda:	fb00 1104 	mla	r1, r0, r4, r1
 8018fde:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018fe0:	fb09 1104 	mla	r1, r9, r4, r1
 8018fe4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018fe8:	2900      	cmp	r1, #0
 8018fea:	f000 80ee 	beq.w	80191ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8018fee:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8018ff2:	d01b      	beq.n	801902c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8018ff4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018ff8:	fb0e fa0a 	mul.w	sl, lr, sl
 8018ffc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019000:	fb0e fe03 	mul.w	lr, lr, r3
 8019004:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019008:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801900c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019010:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8019014:	4453      	add	r3, sl
 8019016:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801901a:	0a1b      	lsrs	r3, r3, #8
 801901c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019020:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019024:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019028:	ea43 030c 	orr.w	r3, r3, ip
 801902c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801902e:	2cff      	cmp	r4, #255	; 0xff
 8019030:	d021      	beq.n	8019076 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8019032:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019034:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019038:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801903a:	fb04 fb0b 	mul.w	fp, r4, fp
 801903e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019040:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019044:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019046:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801904a:	fb04 fa0a 	mul.w	sl, r4, sl
 801904e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019052:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019056:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801905a:	44de      	add	lr, fp
 801905c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019060:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019064:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019068:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801906c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019070:	ea4e 040a 	orr.w	r4, lr, sl
 8019074:	940b      	str	r4, [sp, #44]	; 0x2c
 8019076:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019078:	2cff      	cmp	r4, #255	; 0xff
 801907a:	d021      	beq.n	80190c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801907c:	9c08      	ldr	r4, [sp, #32]
 801907e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8019082:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019084:	fb04 fb0b 	mul.w	fp, r4, fp
 8019088:	9c08      	ldr	r4, [sp, #32]
 801908a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801908e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019090:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019094:	fb04 fa0a 	mul.w	sl, r4, sl
 8019098:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801909c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80190a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80190a4:	44de      	add	lr, fp
 80190a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80190aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80190b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80190ba:	ea4e 040a 	orr.w	r4, lr, sl
 80190be:	9408      	str	r4, [sp, #32]
 80190c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80190c2:	2cff      	cmp	r4, #255	; 0xff
 80190c4:	d021      	beq.n	801910a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80190c6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80190c8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80190cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80190ce:	fb04 fb0b 	mul.w	fp, r4, fp
 80190d2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80190d4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80190d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80190da:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80190de:	fb04 fa0a 	mul.w	sl, r4, sl
 80190e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80190e6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80190ea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80190ee:	44de      	add	lr, fp
 80190f0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80190f4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80190f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80190fc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019100:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019104:	ea4e 040a 	orr.w	r4, lr, sl
 8019108:	940c      	str	r4, [sp, #48]	; 0x30
 801910a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801910c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019110:	9c08      	ldr	r4, [sp, #32]
 8019112:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019116:	fb08 fc0c 	mul.w	ip, r8, ip
 801911a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801911e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019122:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019124:	fb00 cc0e 	mla	ip, r0, lr, ip
 8019128:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801912c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801912e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8019132:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019136:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801913a:	fb08 f80e 	mul.w	r8, r8, lr
 801913e:	fb02 8303 	mla	r3, r2, r3, r8
 8019142:	9a08      	ldr	r2, [sp, #32]
 8019144:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019148:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801914a:	fb00 330a 	mla	r3, r0, sl, r3
 801914e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8019152:	fb09 3900 	mla	r9, r9, r0, r3
 8019156:	883b      	ldrh	r3, [r7, #0]
 8019158:	43c9      	mvns	r1, r1
 801915a:	1218      	asrs	r0, r3, #8
 801915c:	b2c9      	uxtb	r1, r1
 801915e:	10da      	asrs	r2, r3, #3
 8019160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019164:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019168:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801916c:	00db      	lsls	r3, r3, #3
 801916e:	4348      	muls	r0, r1
 8019170:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019174:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019178:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801917c:	b2db      	uxtb	r3, r3
 801917e:	434b      	muls	r3, r1
 8019180:	ea4c 0c09 	orr.w	ip, ip, r9
 8019184:	434a      	muls	r2, r1
 8019186:	1c41      	adds	r1, r0, #1
 8019188:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801918c:	ea4f 401c 	mov.w	r0, ip, lsr #16
 8019190:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8019194:	4960      	ldr	r1, [pc, #384]	; (8019318 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 8019196:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801919a:	1c59      	adds	r1, r3, #1
 801919c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80191a0:	fa5f f38c 	uxtb.w	r3, ip
 80191a4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80191a8:	1c51      	adds	r1, r2, #1
 80191aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80191ae:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80191b2:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80191b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80191ba:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 80191be:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80191c2:	ea43 0c0c 	orr.w	ip, r3, ip
 80191c6:	f8a7 c000 	strh.w	ip, [r7]
 80191ca:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80191cc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80191ce:	441a      	add	r2, r3
 80191d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80191d2:	922d      	str	r2, [sp, #180]	; 0xb4
 80191d4:	441d      	add	r5, r3
 80191d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80191d8:	3b01      	subs	r3, #1
 80191da:	3702      	adds	r7, #2
 80191dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80191de:	e6a0      	b.n	8018f22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80191e0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80191e2:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80191e4:	441c      	add	r4, r3
 80191e6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80191e8:	942d      	str	r4, [sp, #180]	; 0xb4
 80191ea:	441d      	add	r5, r3
 80191ec:	9b07      	ldr	r3, [sp, #28]
 80191ee:	3b01      	subs	r3, #1
 80191f0:	9307      	str	r3, [sp, #28]
 80191f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80191f4:	3302      	adds	r3, #2
 80191f6:	930a      	str	r3, [sp, #40]	; 0x28
 80191f8:	e672      	b.n	8018ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80191fa:	d024      	beq.n	8019246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80191fc:	9b07      	ldr	r3, [sp, #28]
 80191fe:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8019200:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8019202:	3b01      	subs	r3, #1
 8019204:	fb00 4003 	mla	r0, r0, r3, r4
 8019208:	1400      	asrs	r0, r0, #16
 801920a:	f53f ae87 	bmi.w	8018f1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801920e:	3901      	subs	r1, #1
 8019210:	4288      	cmp	r0, r1
 8019212:	f6bf ae83 	bge.w	8018f1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019216:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8019218:	fb01 5303 	mla	r3, r1, r3, r5
 801921c:	141b      	asrs	r3, r3, #16
 801921e:	f53f ae7d 	bmi.w	8018f1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8019222:	3a01      	subs	r2, #1
 8019224:	4293      	cmp	r3, r2
 8019226:	f6bf ae79 	bge.w	8018f1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801922a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801922e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019232:	f1bb 0f00 	cmp.w	fp, #0
 8019236:	dc71      	bgt.n	801931c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8019238:	9b07      	ldr	r3, [sp, #28]
 801923a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801923e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019240:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019244:	930a      	str	r3, [sp, #40]	; 0x28
 8019246:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019248:	2b00      	cmp	r3, #0
 801924a:	f340 81b3 	ble.w	80195b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801924e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019252:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019256:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801925a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801925c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019260:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019264:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019268:	eef0 6a48 	vmov.f32	s13, s16
 801926c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019270:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019274:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019278:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 801927c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019280:	eef0 6a68 	vmov.f32	s13, s17
 8019284:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019288:	ee18 2a10 	vmov	r2, s16
 801928c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019290:	fb92 f3f3 	sdiv	r3, r2, r3
 8019294:	ee18 2a90 	vmov	r2, s17
 8019298:	932f      	str	r3, [sp, #188]	; 0xbc
 801929a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801929c:	fb92 f3f3 	sdiv	r3, r2, r3
 80192a0:	9330      	str	r3, [sp, #192]	; 0xc0
 80192a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80192a4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80192a6:	3b01      	subs	r3, #1
 80192a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80192ac:	9316      	str	r3, [sp, #88]	; 0x58
 80192ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80192b0:	bf08      	it	eq
 80192b2:	4613      	moveq	r3, r2
 80192b4:	ee16 5a90 	vmov	r5, s13
 80192b8:	9307      	str	r3, [sp, #28]
 80192ba:	eef0 8a67 	vmov.f32	s17, s15
 80192be:	eeb0 8a47 	vmov.f32	s16, s14
 80192c2:	e5ff      	b.n	8018ec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80192c4:	2800      	cmp	r0, #0
 80192c6:	f43f ae72 	beq.w	8018fae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80192ca:	f818 1001 	ldrb.w	r1, [r8, r1]
 80192ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80192d2:	9108      	str	r1, [sp, #32]
 80192d4:	0e09      	lsrs	r1, r1, #24
 80192d6:	9110      	str	r1, [sp, #64]	; 0x40
 80192d8:	e669      	b.n	8018fae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80192da:	f113 0801 	adds.w	r8, r3, #1
 80192de:	f53f af74 	bmi.w	80191ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80192e2:	4541      	cmp	r1, r8
 80192e4:	f6ff af71 	blt.w	80191ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80192e8:	f11c 0801 	adds.w	r8, ip, #1
 80192ec:	f53f af6d 	bmi.w	80191ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80192f0:	45c6      	cmp	lr, r8
 80192f2:	f6ff af6a 	blt.w	80191ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80192f6:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80192fa:	b209      	sxth	r1, r1
 80192fc:	fa0f f38e 	sxth.w	r3, lr
 8019300:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8019304:	9301      	str	r3, [sp, #4]
 8019306:	9100      	str	r1, [sp, #0]
 8019308:	4633      	mov	r3, r6
 801930a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801930c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801930e:	4639      	mov	r1, r7
 8019310:	f7ff fc52 	bl	8018bb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8019314:	e759      	b.n	80191ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019316:	bf00      	nop
 8019318:	fffff800 	.word	0xfffff800
 801931c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801931e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8019320:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019324:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019326:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801932a:	1427      	asrs	r7, r4, #16
 801932c:	142b      	asrs	r3, r5, #16
 801932e:	fb01 7303 	mla	r3, r1, r3, r7
 8019332:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019334:	18e7      	adds	r7, r4, r3
 8019336:	5ce3      	ldrb	r3, [r4, r3]
 8019338:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801933c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019340:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019344:	2a00      	cmp	r2, #0
 8019346:	f000 812b 	beq.w	80195a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801934a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801934e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8019352:	940d      	str	r4, [sp, #52]	; 0x34
 8019354:	0e24      	lsrs	r4, r4, #24
 8019356:	9414      	str	r4, [sp, #80]	; 0x50
 8019358:	b170      	cbz	r0, 8019378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801935a:	eb07 0e01 	add.w	lr, r7, r1
 801935e:	5c79      	ldrb	r1, [r7, r1]
 8019360:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019364:	9109      	str	r1, [sp, #36]	; 0x24
 8019366:	0e09      	lsrs	r1, r1, #24
 8019368:	9111      	str	r1, [sp, #68]	; 0x44
 801936a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801936e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8019372:	910e      	str	r1, [sp, #56]	; 0x38
 8019374:	0e09      	lsrs	r1, r1, #24
 8019376:	9115      	str	r1, [sp, #84]	; 0x54
 8019378:	b292      	uxth	r2, r2
 801937a:	b280      	uxth	r0, r0
 801937c:	fb02 f800 	mul.w	r8, r2, r0
 8019380:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019384:	0112      	lsls	r2, r2, #4
 8019386:	eba2 0e08 	sub.w	lr, r2, r8
 801938a:	b280      	uxth	r0, r0
 801938c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019390:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019392:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019394:	fa1f fe8e 	uxth.w	lr, lr
 8019398:	1a09      	subs	r1, r1, r0
 801939a:	b289      	uxth	r1, r1
 801939c:	fb0e f202 	mul.w	r2, lr, r2
 80193a0:	fb01 220c 	mla	r2, r1, ip, r2
 80193a4:	fb00 2204 	mla	r2, r0, r4, r2
 80193a8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80193aa:	fb08 2204 	mla	r2, r8, r4, r2
 80193ae:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80193b2:	2a00      	cmp	r2, #0
 80193b4:	f000 80e9 	beq.w	801958a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71a>
 80193b8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80193bc:	d019      	beq.n	80193f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 80193be:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80193c2:	fb0c fa0a 	mul.w	sl, ip, sl
 80193c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80193ca:	fb0c fc03 	mul.w	ip, ip, r3
 80193ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80193d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80193d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80193da:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80193de:	4453      	add	r3, sl
 80193e0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80193e4:	0a1b      	lsrs	r3, r3, #8
 80193e6:	0a3f      	lsrs	r7, r7, #8
 80193e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80193ec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80193f0:	433b      	orrs	r3, r7
 80193f2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80193f4:	2cff      	cmp	r4, #255	; 0xff
 80193f6:	d020      	beq.n	801943a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 80193f8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80193fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80193fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019400:	4367      	muls	r7, r4
 8019402:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019404:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019408:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801940a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801940e:	fb04 fa0a 	mul.w	sl, r4, sl
 8019412:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019416:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801941a:	44bc      	add	ip, r7
 801941c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019420:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019428:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801942c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019430:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019434:	ea4c 040a 	orr.w	r4, ip, sl
 8019438:	940d      	str	r4, [sp, #52]	; 0x34
 801943a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801943c:	2cff      	cmp	r4, #255	; 0xff
 801943e:	d020      	beq.n	8019482 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 8019440:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019442:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019446:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019448:	4367      	muls	r7, r4
 801944a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801944c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019450:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019452:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019456:	fb04 fa0a 	mul.w	sl, r4, sl
 801945a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801945e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019462:	44bc      	add	ip, r7
 8019464:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019468:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801946c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019470:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019474:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019478:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801947c:	ea4c 040a 	orr.w	r4, ip, sl
 8019480:	9409      	str	r4, [sp, #36]	; 0x24
 8019482:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019484:	2cff      	cmp	r4, #255	; 0xff
 8019486:	d020      	beq.n	80194ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8019488:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801948a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801948e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019490:	4367      	muls	r7, r4
 8019492:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019494:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8019498:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801949a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801949e:	fb04 fa0a 	mul.w	sl, r4, sl
 80194a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80194a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80194aa:	44bc      	add	ip, r7
 80194ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80194b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80194b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80194b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80194bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80194c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80194c4:	ea4c 040a 	orr.w	r4, ip, sl
 80194c8:	940e      	str	r4, [sp, #56]	; 0x38
 80194ca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80194cc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80194d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80194d2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80194d6:	fb0e f707 	mul.w	r7, lr, r7
 80194da:	fb01 770c 	mla	r7, r1, ip, r7
 80194de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80194e2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80194e4:	fb00 770c 	mla	r7, r0, ip, r7
 80194e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80194ec:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80194ee:	fb08 770c 	mla	r7, r8, ip, r7
 80194f2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80194f6:	fb0e fe0c 	mul.w	lr, lr, ip
 80194fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80194fe:	fb01 e303 	mla	r3, r1, r3, lr
 8019502:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019504:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8019508:	990e      	ldr	r1, [sp, #56]	; 0x38
 801950a:	fb00 330a 	mla	r3, r0, sl, r3
 801950e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8019512:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019516:	f8b9 3000 	ldrh.w	r3, [r9]
 801951a:	43d2      	mvns	r2, r2
 801951c:	1218      	asrs	r0, r3, #8
 801951e:	b2d2      	uxtb	r2, r2
 8019520:	0a3f      	lsrs	r7, r7, #8
 8019522:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019526:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801952a:	4350      	muls	r0, r2
 801952c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019530:	10d9      	asrs	r1, r3, #3
 8019532:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019536:	00db      	lsls	r3, r3, #3
 8019538:	ea47 070c 	orr.w	r7, r7, ip
 801953c:	b2db      	uxtb	r3, r3
 801953e:	f100 0c01 	add.w	ip, r0, #1
 8019542:	4353      	muls	r3, r2
 8019544:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8019548:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801954c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8019550:	4351      	muls	r1, r2
 8019552:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8019556:	4a1a      	ldr	r2, [pc, #104]	; (80195c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8019558:	f103 0c01 	add.w	ip, r3, #1
 801955c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019560:	fa5f fc87 	uxtb.w	ip, r7
 8019564:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019568:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801956c:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8019570:	1c4b      	adds	r3, r1, #1
 8019572:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019576:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801957a:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801957e:	00ff      	lsls	r7, r7, #3
 8019580:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019584:	4338      	orrs	r0, r7
 8019586:	f8a9 0000 	strh.w	r0, [r9]
 801958a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801958c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801958e:	441a      	add	r2, r3
 8019590:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019592:	922d      	str	r2, [sp, #180]	; 0xb4
 8019594:	f109 0902 	add.w	r9, r9, #2
 8019598:	441d      	add	r5, r3
 801959a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801959e:	e648      	b.n	8019232 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80195a0:	2800      	cmp	r0, #0
 80195a2:	f43f aee9 	beq.w	8019378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80195a6:	5c79      	ldrb	r1, [r7, r1]
 80195a8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80195ac:	9109      	str	r1, [sp, #36]	; 0x24
 80195ae:	0e09      	lsrs	r1, r1, #24
 80195b0:	9111      	str	r1, [sp, #68]	; 0x44
 80195b2:	e6e1      	b.n	8019378 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80195b4:	b01b      	add	sp, #108	; 0x6c
 80195b6:	ecbd 8b08 	vpop	{d8-d11}
 80195ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195be:	bf00      	nop
 80195c0:	fffff800 	.word	0xfffff800

080195c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80195c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80195c8:	b085      	sub	sp, #20
 80195ca:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80195ce:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80195d2:	9103      	str	r1, [sp, #12]
 80195d4:	fb05 7106 	mla	r1, r5, r6, r7
 80195d8:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 80195dc:	2d00      	cmp	r5, #0
 80195de:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80195e2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80195e6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80195ea:	9401      	str	r4, [sp, #4]
 80195ec:	eb03 0901 	add.w	r9, r3, r1
 80195f0:	f2c0 80c0 	blt.w	8019774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80195f4:	45a8      	cmp	r8, r5
 80195f6:	f340 80bd 	ble.w	8019774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80195fa:	2f00      	cmp	r7, #0
 80195fc:	f2c0 80b6 	blt.w	801976c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8019600:	42be      	cmp	r6, r7
 8019602:	f340 80b3 	ble.w	801976c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8019606:	f813 c001 	ldrb.w	ip, [r3, r1]
 801960a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 801960e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019612:	d019      	beq.n	8019648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8019614:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8019618:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801961c:	435a      	muls	r2, r3
 801961e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8019622:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8019626:	fb0c f403 	mul.w	r4, ip, r3
 801962a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801962e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019632:	441a      	add	r2, r3
 8019634:	f104 0320 	add.w	r3, r4, #32
 8019638:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801963c:	0a1b      	lsrs	r3, r3, #8
 801963e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8019642:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019646:	4319      	orrs	r1, r3
 8019648:	b289      	uxth	r1, r1
 801964a:	1c7b      	adds	r3, r7, #1
 801964c:	f100 8097 	bmi.w	801977e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8019650:	429e      	cmp	r6, r3
 8019652:	f340 8094 	ble.w	801977e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8019656:	2800      	cmp	r0, #0
 8019658:	f000 8094 	beq.w	8019784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 801965c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8019660:	9b01      	ldr	r3, [sp, #4]
 8019662:	2cff      	cmp	r4, #255	; 0xff
 8019664:	885b      	ldrh	r3, [r3, #2]
 8019666:	d01b      	beq.n	80196a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8019668:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801966c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8019670:	fb0a f202 	mul.w	r2, sl, r2
 8019674:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019678:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801967c:	fb04 fa03 	mul.w	sl, r4, r3
 8019680:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8019684:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8019688:	441a      	add	r2, r3
 801968a:	f10a 0320 	add.w	r3, sl, #32
 801968e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8019692:	0a1b      	lsrs	r3, r3, #8
 8019694:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8019698:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801969c:	ea4b 0303 	orr.w	r3, fp, r3
 80196a0:	b29b      	uxth	r3, r3
 80196a2:	3501      	adds	r5, #1
 80196a4:	d474      	bmi.n	8019790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80196a6:	45a8      	cmp	r8, r5
 80196a8:	dd72      	ble.n	8019790 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 80196aa:	f1be 0f00 	cmp.w	lr, #0
 80196ae:	f000 8120 	beq.w	80198f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 80196b2:	2f00      	cmp	r7, #0
 80196b4:	db69      	blt.n	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80196b6:	42be      	cmp	r6, r7
 80196b8:	dd67      	ble.n	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 80196ba:	f819 5006 	ldrb.w	r5, [r9, r6]
 80196be:	9a01      	ldr	r2, [sp, #4]
 80196c0:	2dff      	cmp	r5, #255	; 0xff
 80196c2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80196c6:	d01c      	beq.n	8019702 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 80196c8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80196cc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80196d0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80196d4:	fb05 fa0b 	mul.w	sl, r5, fp
 80196d8:	fb08 f802 	mul.w	r8, r8, r2
 80196dc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80196e0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80196e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80196e8:	4490      	add	r8, r2
 80196ea:	f10a 0220 	add.w	r2, sl, #32
 80196ee:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80196f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80196f6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80196fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196fe:	ea4b 0b0a 	orr.w	fp, fp, sl
 8019702:	fa1f fb8b 	uxth.w	fp, fp
 8019706:	3701      	adds	r7, #1
 8019708:	d447      	bmi.n	801979a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801970a:	42be      	cmp	r6, r7
 801970c:	dd45      	ble.n	801979a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 801970e:	2800      	cmp	r0, #0
 8019710:	d046      	beq.n	80197a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8019712:	3601      	adds	r6, #1
 8019714:	9a01      	ldr	r2, [sp, #4]
 8019716:	f819 7006 	ldrb.w	r7, [r9, r6]
 801971a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801971e:	2fff      	cmp	r7, #255	; 0xff
 8019720:	d01a      	beq.n	8019758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8019722:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8019726:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801972a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801972e:	fb07 f902 	mul.w	r9, r7, r2
 8019732:	fb08 f806 	mul.w	r8, r8, r6
 8019736:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801973a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801973e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019742:	44b0      	add	r8, r6
 8019744:	f109 0620 	add.w	r6, r9, #32
 8019748:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801974c:	0a36      	lsrs	r6, r6, #8
 801974e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8019752:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019756:	4332      	orrs	r2, r6
 8019758:	b292      	uxth	r2, r2
 801975a:	280f      	cmp	r0, #15
 801975c:	d922      	bls.n	80197a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801975e:	4b69      	ldr	r3, [pc, #420]	; (8019904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8019760:	4a69      	ldr	r2, [pc, #420]	; (8019908 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8019762:	486a      	ldr	r0, [pc, #424]	; (801990c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8019764:	f240 210d 	movw	r1, #525	; 0x20d
 8019768:	f005 fe44 	bl	801f3f4 <__assert_func>
 801976c:	f04f 0c00 	mov.w	ip, #0
 8019770:	4661      	mov	r1, ip
 8019772:	e76a      	b.n	801964a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8019774:	2400      	movs	r4, #0
 8019776:	46a4      	mov	ip, r4
 8019778:	4623      	mov	r3, r4
 801977a:	4621      	mov	r1, r4
 801977c:	e791      	b.n	80196a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801977e:	2400      	movs	r4, #0
 8019780:	4623      	mov	r3, r4
 8019782:	e78e      	b.n	80196a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8019784:	4604      	mov	r4, r0
 8019786:	4603      	mov	r3, r0
 8019788:	e78b      	b.n	80196a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801978a:	2500      	movs	r5, #0
 801978c:	46ab      	mov	fp, r5
 801978e:	e7ba      	b.n	8019706 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8019790:	2700      	movs	r7, #0
 8019792:	463d      	mov	r5, r7
 8019794:	463a      	mov	r2, r7
 8019796:	46bb      	mov	fp, r7
 8019798:	e7df      	b.n	801975a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801979a:	2700      	movs	r7, #0
 801979c:	463a      	mov	r2, r7
 801979e:	e7dc      	b.n	801975a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 80197a0:	4607      	mov	r7, r0
 80197a2:	4602      	mov	r2, r0
 80197a4:	f1be 0f0f 	cmp.w	lr, #15
 80197a8:	d8d9      	bhi.n	801975e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80197aa:	b286      	uxth	r6, r0
 80197ac:	fa1f f98e 	uxth.w	r9, lr
 80197b0:	fb06 f809 	mul.w	r8, r6, r9
 80197b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80197b8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80197bc:	0136      	lsls	r6, r6, #4
 80197be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80197c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80197c6:	9601      	str	r6, [sp, #4]
 80197c8:	ea4a 0101 	orr.w	r1, sl, r1
 80197cc:	fa1f f689 	uxth.w	r6, r9
 80197d0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80197d4:	fb10 f90e 	smulbb	r9, r0, lr
 80197d8:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80197dc:	9602      	str	r6, [sp, #8]
 80197de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80197e2:	460e      	mov	r6, r1
 80197e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197e8:	f1ce 0110 	rsb	r1, lr, #16
 80197ec:	1a09      	subs	r1, r1, r0
 80197ee:	ea4a 0303 	orr.w	r3, sl, r3
 80197f2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80197f6:	4343      	muls	r3, r0
 80197f8:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80197fc:	9801      	ldr	r0, [sp, #4]
 80197fe:	fb01 3106 	mla	r1, r1, r6, r3
 8019802:	9e02      	ldr	r6, [sp, #8]
 8019804:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8019808:	1b80      	subs	r0, r0, r6
 801980a:	9e01      	ldr	r6, [sp, #4]
 801980c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019810:	eba6 0608 	sub.w	r6, r6, r8
 8019814:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019818:	b2b6      	uxth	r6, r6
 801981a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801981e:	ea4a 0202 	orr.w	r2, sl, r2
 8019822:	b280      	uxth	r0, r0
 8019824:	4374      	muls	r4, r6
 8019826:	fb09 1302 	mla	r3, r9, r2, r1
 801982a:	fb0c 4400 	mla	r4, ip, r0, r4
 801982e:	9a03      	ldr	r2, [sp, #12]
 8019830:	9802      	ldr	r0, [sp, #8]
 8019832:	8811      	ldrh	r1, [r2, #0]
 8019834:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8019838:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801983c:	fb00 4505 	mla	r5, r0, r5, r4
 8019840:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019844:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019848:	fb08 5707 	mla	r7, r8, r7, r5
 801984c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8019850:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8019854:	b292      	uxth	r2, r2
 8019856:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801985a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801985e:	4357      	muls	r7, r2
 8019860:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8019864:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019868:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801986c:	f107 0801 	add.w	r8, r7, #1
 8019870:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019874:	ea43 0e0e 	orr.w	lr, r3, lr
 8019878:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801987c:	fa1f f38e 	uxth.w	r3, lr
 8019880:	1208      	asrs	r0, r1, #8
 8019882:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8019886:	b2ff      	uxtb	r7, r7
 8019888:	121c      	asrs	r4, r3, #8
 801988a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801988e:	fb10 f007 	smulbb	r0, r0, r7
 8019892:	10cd      	asrs	r5, r1, #3
 8019894:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019898:	00c9      	lsls	r1, r1, #3
 801989a:	fb04 0402 	mla	r4, r4, r2, r0
 801989e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80198a2:	10d8      	asrs	r0, r3, #3
 80198a4:	b2c9      	uxtb	r1, r1
 80198a6:	00db      	lsls	r3, r3, #3
 80198a8:	fb11 f107 	smulbb	r1, r1, r7
 80198ac:	fb15 f507 	smulbb	r5, r5, r7
 80198b0:	b2db      	uxtb	r3, r3
 80198b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80198b6:	fb00 5002 	mla	r0, r0, r2, r5
 80198ba:	fb03 1202 	mla	r2, r3, r2, r1
 80198be:	b2a4      	uxth	r4, r4
 80198c0:	b292      	uxth	r2, r2
 80198c2:	1c63      	adds	r3, r4, #1
 80198c4:	1c51      	adds	r1, r2, #1
 80198c6:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80198ca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80198ce:	b280      	uxth	r0, r0
 80198d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80198d4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80198d8:	4313      	orrs	r3, r2
 80198da:	1c42      	adds	r2, r0, #1
 80198dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80198e0:	0940      	lsrs	r0, r0, #5
 80198e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80198e6:	9a03      	ldr	r2, [sp, #12]
 80198e8:	4303      	orrs	r3, r0
 80198ea:	8013      	strh	r3, [r2, #0]
 80198ec:	b005      	add	sp, #20
 80198ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80198f2:	280f      	cmp	r0, #15
 80198f4:	f63f af33 	bhi.w	801975e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80198f8:	4677      	mov	r7, lr
 80198fa:	4675      	mov	r5, lr
 80198fc:	4672      	mov	r2, lr
 80198fe:	46f3      	mov	fp, lr
 8019900:	e753      	b.n	80197aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8019902:	bf00      	nop
 8019904:	08024033 	.word	0x08024033
 8019908:	080245f1 	.word	0x080245f1
 801990c:	0802411c 	.word	0x0802411c

08019910 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019914:	ed2d 8b08 	vpush	{d8-d11}
 8019918:	b097      	sub	sp, #92	; 0x5c
 801991a:	eeb0 aa40 	vmov.f32	s20, s0
 801991e:	9214      	str	r2, [sp, #80]	; 0x50
 8019920:	9308      	str	r3, [sp, #32]
 8019922:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019924:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8019928:	9312      	str	r3, [sp, #72]	; 0x48
 801992a:	9111      	str	r1, [sp, #68]	; 0x44
 801992c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8019930:	9015      	str	r0, [sp, #84]	; 0x54
 8019932:	6850      	ldr	r0, [r2, #4]
 8019934:	6812      	ldr	r2, [r2, #0]
 8019936:	fb00 1303 	mla	r3, r0, r3, r1
 801993a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801993e:	9309      	str	r3, [sp, #36]	; 0x24
 8019940:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019942:	681b      	ldr	r3, [r3, #0]
 8019944:	930b      	str	r3, [sp, #44]	; 0x2c
 8019946:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019948:	685b      	ldr	r3, [r3, #4]
 801994a:	930c      	str	r3, [sp, #48]	; 0x30
 801994c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8019950:	930a      	str	r3, [sp, #40]	; 0x28
 8019952:	eef0 9a60 	vmov.f32	s19, s1
 8019956:	eeb0 9a41 	vmov.f32	s18, s2
 801995a:	eeb0 8a62 	vmov.f32	s16, s5
 801995e:	eef0 8a43 	vmov.f32	s17, s6
 8019962:	eef0 ba44 	vmov.f32	s23, s8
 8019966:	eeb0 ba64 	vmov.f32	s22, s9
 801996a:	eef0 aa45 	vmov.f32	s21, s10
 801996e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019970:	2b00      	cmp	r3, #0
 8019972:	dc03      	bgt.n	801997c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019974:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019976:	2b00      	cmp	r3, #0
 8019978:	f340 83cb 	ble.w	801a112 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801997c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801997e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019982:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019986:	1e48      	subs	r0, r1, #1
 8019988:	1e55      	subs	r5, r2, #1
 801998a:	9b08      	ldr	r3, [sp, #32]
 801998c:	2b00      	cmp	r3, #0
 801998e:	f340 81a3 	ble.w	8019cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8019992:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8019994:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019996:	1436      	asrs	r6, r6, #16
 8019998:	ea4f 4323 	mov.w	r3, r3, asr #16
 801999c:	d406      	bmi.n	80199ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801999e:	4286      	cmp	r6, r0
 80199a0:	da04      	bge.n	80199ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80199a2:	2b00      	cmp	r3, #0
 80199a4:	db02      	blt.n	80199ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80199a6:	42ab      	cmp	r3, r5
 80199a8:	f2c0 8197 	blt.w	8019cda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80199ac:	3601      	adds	r6, #1
 80199ae:	f100 8184 	bmi.w	8019cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80199b2:	42b1      	cmp	r1, r6
 80199b4:	f2c0 8181 	blt.w	8019cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80199b8:	3301      	adds	r3, #1
 80199ba:	f100 817e 	bmi.w	8019cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80199be:	429a      	cmp	r2, r3
 80199c0:	f2c0 817b 	blt.w	8019cba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 80199c4:	9b08      	ldr	r3, [sp, #32]
 80199c6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80199c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80199ca:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80199ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80199d0:	2b00      	cmp	r3, #0
 80199d2:	f340 81a4 	ble.w	8019d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80199d6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80199d8:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80199da:	1418      	asrs	r0, r3, #16
 80199dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80199de:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80199e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80199e4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80199e8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80199ea:	142d      	asrs	r5, r5, #16
 80199ec:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80199f0:	f100 81f8 	bmi.w	8019de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80199f4:	f102 3eff 	add.w	lr, r2, #4294967295
 80199f8:	4575      	cmp	r5, lr
 80199fa:	f280 81f3 	bge.w	8019de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80199fe:	2800      	cmp	r0, #0
 8019a00:	f2c0 81f0 	blt.w	8019de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8019a04:	f103 3eff 	add.w	lr, r3, #4294967295
 8019a08:	4570      	cmp	r0, lr
 8019a0a:	f280 81eb 	bge.w	8019de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8019a0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019a10:	b212      	sxth	r2, r2
 8019a12:	fb00 5002 	mla	r0, r0, r2, r5
 8019a16:	fa1f fe81 	uxth.w	lr, r1
 8019a1a:	eb03 0a00 	add.w	sl, r3, r0
 8019a1e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8019a22:	f813 9000 	ldrb.w	r9, [r3, r0]
 8019a26:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019a2a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8019a2e:	b29b      	uxth	r3, r3
 8019a30:	f1bc 0f00 	cmp.w	ip, #0
 8019a34:	f000 81b9 	beq.w	8019daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8019a38:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019a3c:	940d      	str	r4, [sp, #52]	; 0x34
 8019a3e:	eb0a 0b02 	add.w	fp, sl, r2
 8019a42:	fa1f fa8c 	uxth.w	sl, ip
 8019a46:	fb0a fe0e 	mul.w	lr, sl, lr
 8019a4a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019a4e:	fa1f fa8a 	uxth.w	sl, sl
 8019a52:	eba5 050e 	sub.w	r5, r5, lr
 8019a56:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019a5a:	940e      	str	r4, [sp, #56]	; 0x38
 8019a5c:	eba3 030a 	sub.w	r3, r3, sl
 8019a60:	b2ad      	uxth	r5, r5
 8019a62:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019a64:	b29b      	uxth	r3, r3
 8019a66:	fb08 f505 	mul.w	r5, r8, r5
 8019a6a:	fb09 5303 	mla	r3, r9, r3, r5
 8019a6e:	fb0a 3304 	mla	r3, sl, r4, r3
 8019a72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019a74:	fb0e 3304 	mla	r3, lr, r4, r3
 8019a78:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019a7c:	2b00      	cmp	r3, #0
 8019a7e:	f000 810f 	beq.w	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019a82:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019a84:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019a88:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019a8c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019a90:	f000 8190 	beq.w	8019db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8019a94:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019a98:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019a9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019aa0:	fb09 f000 	mul.w	r0, r9, r0
 8019aa4:	fb0a fe0e 	mul.w	lr, sl, lr
 8019aa8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019aac:	f100 0b20 	add.w	fp, r0, #32
 8019ab0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019ab4:	44ce      	add	lr, r9
 8019ab6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8019aba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019abe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019ac2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019ac6:	ea4e 0909 	orr.w	r9, lr, r9
 8019aca:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019ace:	8868      	ldrh	r0, [r5, #2]
 8019ad0:	d019      	beq.n	8019b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019ad2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8019ad6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019ada:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019ade:	fb08 f800 	mul.w	r8, r8, r0
 8019ae2:	fb0a fe0e 	mul.w	lr, sl, lr
 8019ae6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8019aea:	f108 0b20 	add.w	fp, r8, #32
 8019aee:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019af2:	4486      	add	lr, r0
 8019af4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8019af8:	0a00      	lsrs	r0, r0, #8
 8019afa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019afe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019b02:	ea4e 0000 	orr.w	r0, lr, r0
 8019b06:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8019b0a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8019b0e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019b12:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019b16:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019b1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019b1e:	ea4e 0909 	orr.w	r9, lr, r9
 8019b22:	ea4a 0000 	orr.w	r0, sl, r0
 8019b26:	f1bc 0f00 	cmp.w	ip, #0
 8019b2a:	f000 8145 	beq.w	8019db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8019b2e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8019b32:	3a01      	subs	r2, #1
 8019b34:	0052      	lsls	r2, r2, #1
 8019b36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019b38:	3202      	adds	r2, #2
 8019b3a:	2cff      	cmp	r4, #255	; 0xff
 8019b3c:	eb05 0e02 	add.w	lr, r5, r2
 8019b40:	5aaa      	ldrh	r2, [r5, r2]
 8019b42:	d018      	beq.n	8019b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019b44:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019b48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b4c:	fb04 fa02 	mul.w	sl, r4, r2
 8019b50:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019b54:	fb08 f805 	mul.w	r8, r8, r5
 8019b58:	f10a 0520 	add.w	r5, sl, #32
 8019b5c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019b60:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019b64:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019b68:	4442      	add	r2, r8
 8019b6a:	0a2d      	lsrs	r5, r5, #8
 8019b6c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019b70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019b74:	432a      	orrs	r2, r5
 8019b76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019b78:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019b7c:	2cff      	cmp	r4, #255	; 0xff
 8019b7e:	d01a      	beq.n	8019bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8019b80:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8019b84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019b88:	fb04 fa05 	mul.w	sl, r4, r5
 8019b8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019b90:	fb08 f80e 	mul.w	r8, r8, lr
 8019b94:	f10a 0e20 	add.w	lr, sl, #32
 8019b98:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019b9c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8019ba0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019ba4:	4445      	add	r5, r8
 8019ba6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019baa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8019bae:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019bb2:	ea45 050e 	orr.w	r5, r5, lr
 8019bb6:	fb1c fe01 	smulbb	lr, ip, r1
 8019bba:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8019bbe:	f1cc 0810 	rsb	r8, ip, #16
 8019bc2:	eba8 0801 	sub.w	r8, r8, r1
 8019bc6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8019bca:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8019bce:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8019bd2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8019bd6:	4341      	muls	r1, r0
 8019bd8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019bdc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019be0:	ea4a 0202 	orr.w	r2, sl, r2
 8019be4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8019be8:	fb09 1108 	mla	r1, r9, r8, r1
 8019bec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019bf0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019bf4:	fb0c 1102 	mla	r1, ip, r2, r1
 8019bf8:	ea4b 0505 	orr.w	r5, fp, r5
 8019bfc:	fb0e 1e05 	mla	lr, lr, r5, r1
 8019c00:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019c04:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019c08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019c0c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019c10:	ea42 0e0e 	orr.w	lr, r2, lr
 8019c14:	fa1f f28e 	uxth.w	r2, lr
 8019c18:	2bff      	cmp	r3, #255	; 0xff
 8019c1a:	d103      	bne.n	8019c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8019c1c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019c1e:	29ff      	cmp	r1, #255	; 0xff
 8019c20:	f000 80de 	beq.w	8019de0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8019c24:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019c26:	8838      	ldrh	r0, [r7, #0]
 8019c28:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019c2a:	434b      	muls	r3, r1
 8019c2c:	f103 0c01 	add.w	ip, r3, #1
 8019c30:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8019c34:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 8019c38:	1205      	asrs	r5, r0, #8
 8019c3a:	fa5f fc8c 	uxtb.w	ip, ip
 8019c3e:	1213      	asrs	r3, r2, #8
 8019c40:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019c44:	fb15 f50c 	smulbb	r5, r5, ip
 8019c48:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019c4c:	fb03 5301 	mla	r3, r3, r1, r5
 8019c50:	b29d      	uxth	r5, r3
 8019c52:	10c3      	asrs	r3, r0, #3
 8019c54:	00c0      	lsls	r0, r0, #3
 8019c56:	10d1      	asrs	r1, r2, #3
 8019c58:	b2c0      	uxtb	r0, r0
 8019c5a:	00d2      	lsls	r2, r2, #3
 8019c5c:	fb10 f00c 	smulbb	r0, r0, ip
 8019c60:	b2d2      	uxtb	r2, r2
 8019c62:	fb02 0204 	mla	r2, r2, r4, r0
 8019c66:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019c6a:	fb13 f30c 	smulbb	r3, r3, ip
 8019c6e:	b292      	uxth	r2, r2
 8019c70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019c74:	fb01 3104 	mla	r1, r1, r4, r3
 8019c78:	1c50      	adds	r0, r2, #1
 8019c7a:	1c6b      	adds	r3, r5, #1
 8019c7c:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019c80:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019c84:	b289      	uxth	r1, r1
 8019c86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019c8a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019c8e:	4313      	orrs	r3, r2
 8019c90:	1c4a      	adds	r2, r1, #1
 8019c92:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019c96:	0949      	lsrs	r1, r1, #5
 8019c98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019c9c:	430b      	orrs	r3, r1
 8019c9e:	803b      	strh	r3, [r7, #0]
 8019ca0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019ca2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019ca4:	4413      	add	r3, r2
 8019ca6:	9329      	str	r3, [sp, #164]	; 0xa4
 8019ca8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019caa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019cac:	441a      	add	r2, r3
 8019cae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019cb0:	922a      	str	r2, [sp, #168]	; 0xa8
 8019cb2:	3b01      	subs	r3, #1
 8019cb4:	3702      	adds	r7, #2
 8019cb6:	9313      	str	r3, [sp, #76]	; 0x4c
 8019cb8:	e689      	b.n	80199ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8019cba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019cbc:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8019cbe:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8019cc0:	4433      	add	r3, r6
 8019cc2:	9329      	str	r3, [sp, #164]	; 0xa4
 8019cc4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019cc6:	441c      	add	r4, r3
 8019cc8:	9b08      	ldr	r3, [sp, #32]
 8019cca:	942a      	str	r4, [sp, #168]	; 0xa8
 8019ccc:	3b01      	subs	r3, #1
 8019cce:	9308      	str	r3, [sp, #32]
 8019cd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019cd2:	3302      	adds	r3, #2
 8019cd4:	9309      	str	r3, [sp, #36]	; 0x24
 8019cd6:	e658      	b.n	801998a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019cd8:	d028      	beq.n	8019d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8019cda:	9b08      	ldr	r3, [sp, #32]
 8019cdc:	982b      	ldr	r0, [sp, #172]	; 0xac
 8019cde:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8019ce0:	3b01      	subs	r3, #1
 8019ce2:	fb00 5003 	mla	r0, r0, r3, r5
 8019ce6:	1400      	asrs	r0, r0, #16
 8019ce8:	f53f ae6c 	bmi.w	80199c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019cec:	3901      	subs	r1, #1
 8019cee:	4288      	cmp	r0, r1
 8019cf0:	f6bf ae68 	bge.w	80199c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019cf4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8019cf6:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8019cf8:	fb01 0303 	mla	r3, r1, r3, r0
 8019cfc:	141b      	asrs	r3, r3, #16
 8019cfe:	f53f ae61 	bmi.w	80199c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019d02:	3a01      	subs	r2, #1
 8019d04:	4293      	cmp	r3, r2
 8019d06:	f6bf ae5d 	bge.w	80199c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8019d0a:	9b08      	ldr	r3, [sp, #32]
 8019d0c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019d10:	9313      	str	r3, [sp, #76]	; 0x4c
 8019d12:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019d16:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019d18:	2b00      	cmp	r3, #0
 8019d1a:	f300 8082 	bgt.w	8019e22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8019d1e:	9b08      	ldr	r3, [sp, #32]
 8019d20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019d2a:	9309      	str	r3, [sp, #36]	; 0x24
 8019d2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019d2e:	2b00      	cmp	r3, #0
 8019d30:	f340 81ef 	ble.w	801a112 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8019d34:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019d38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d3c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019d40:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019d42:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019d46:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019d4a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019d4e:	eef0 6a48 	vmov.f32	s13, s16
 8019d52:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019d56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d5a:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019d5e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019d62:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019d66:	eef0 6a68 	vmov.f32	s13, s17
 8019d6a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019d6e:	ee18 2a10 	vmov	r2, s16
 8019d72:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019d76:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d7a:	ee18 2a90 	vmov	r2, s17
 8019d7e:	932b      	str	r3, [sp, #172]	; 0xac
 8019d80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d86:	932c      	str	r3, [sp, #176]	; 0xb0
 8019d88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019d8a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019d8c:	3b01      	subs	r3, #1
 8019d8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d92:	9311      	str	r3, [sp, #68]	; 0x44
 8019d94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019d96:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8019d9a:	bf08      	it	eq
 8019d9c:	4613      	moveq	r3, r2
 8019d9e:	9308      	str	r3, [sp, #32]
 8019da0:	eef0 8a67 	vmov.f32	s17, s15
 8019da4:	eeb0 8a47 	vmov.f32	s16, s14
 8019da8:	e5e1      	b.n	801996e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019daa:	fb08 f505 	mul.w	r5, r8, r5
 8019dae:	fb09 5303 	mla	r3, r9, r3, r5
 8019db2:	e661      	b.n	8019a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8019db4:	4681      	mov	r9, r0
 8019db6:	e688      	b.n	8019aca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8019db8:	f1c1 0210 	rsb	r2, r1, #16
 8019dbc:	4341      	muls	r1, r0
 8019dbe:	fb09 1902 	mla	r9, r9, r2, r1
 8019dc2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019dc6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019dca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019dce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019dd2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019dd6:	ea42 0909 	orr.w	r9, r2, r9
 8019dda:	fa1f f289 	uxth.w	r2, r9
 8019dde:	e71b      	b.n	8019c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8019de0:	803a      	strh	r2, [r7, #0]
 8019de2:	e75d      	b.n	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019de4:	f115 0e01 	adds.w	lr, r5, #1
 8019de8:	f53f af5a 	bmi.w	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019dec:	4572      	cmp	r2, lr
 8019dee:	f6ff af57 	blt.w	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019df2:	f110 0e01 	adds.w	lr, r0, #1
 8019df6:	f53f af53 	bmi.w	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019dfa:	4573      	cmp	r3, lr
 8019dfc:	f6ff af50 	blt.w	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019e00:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019e02:	9502      	str	r5, [sp, #8]
 8019e04:	b21b      	sxth	r3, r3
 8019e06:	b212      	sxth	r2, r2
 8019e08:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8019e0c:	9301      	str	r3, [sp, #4]
 8019e0e:	9200      	str	r2, [sp, #0]
 8019e10:	e9cd c405 	strd	ip, r4, [sp, #20]
 8019e14:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8019e18:	4639      	mov	r1, r7
 8019e1a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019e1c:	f7ff fbd2 	bl	80195c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8019e20:	e73e      	b.n	8019ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8019e22:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e24:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019e28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e2a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019e2e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019e30:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019e34:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e36:	141f      	asrs	r7, r3, #16
 8019e38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e3a:	141b      	asrs	r3, r3, #16
 8019e3c:	fb01 3707 	mla	r7, r1, r7, r3
 8019e40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019e42:	fa1f fc82 	uxth.w	ip, r2
 8019e46:	eb03 0a07 	add.w	sl, r3, r7
 8019e4a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019e4e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019e52:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019e56:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019e5a:	b29b      	uxth	r3, r3
 8019e5c:	2d00      	cmp	r5, #0
 8019e5e:	f000 813d 	beq.w	801a0dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8019e62:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019e66:	940f      	str	r4, [sp, #60]	; 0x3c
 8019e68:	eb0a 0b01 	add.w	fp, sl, r1
 8019e6c:	fa1f fa85 	uxth.w	sl, r5
 8019e70:	fb0a fc0c 	mul.w	ip, sl, ip
 8019e74:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019e78:	fa1f fa8a 	uxth.w	sl, sl
 8019e7c:	eba0 000c 	sub.w	r0, r0, ip
 8019e80:	eba3 030a 	sub.w	r3, r3, sl
 8019e84:	b280      	uxth	r0, r0
 8019e86:	fb08 f000 	mul.w	r0, r8, r0
 8019e8a:	b29b      	uxth	r3, r3
 8019e8c:	fb09 0303 	mla	r3, r9, r3, r0
 8019e90:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019e92:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019e96:	9410      	str	r4, [sp, #64]	; 0x40
 8019e98:	fb0a 3300 	mla	r3, sl, r0, r3
 8019e9c:	fb0c 3304 	mla	r3, ip, r4, r3
 8019ea0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019ea4:	2b00      	cmp	r3, #0
 8019ea6:	f000 810b 	beq.w	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8019eaa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019eac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019eae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019eb2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019eb6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019eba:	f000 8114 	beq.w	801a0e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8019ebe:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019ec2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019ec6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019eca:	fb09 f707 	mul.w	r7, r9, r7
 8019ece:	fb0a fc0c 	mul.w	ip, sl, ip
 8019ed2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019ed6:	f107 0b20 	add.w	fp, r7, #32
 8019eda:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019ede:	44cc      	add	ip, r9
 8019ee0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019ee4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019ee8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019eec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019ef0:	ea4c 0909 	orr.w	r9, ip, r9
 8019ef4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019ef8:	8847      	ldrh	r7, [r0, #2]
 8019efa:	d019      	beq.n	8019f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8019efc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019f00:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019f04:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019f08:	fb08 f807 	mul.w	r8, r8, r7
 8019f0c:	fb0a fc0c 	mul.w	ip, sl, ip
 8019f10:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019f14:	f108 0b20 	add.w	fp, r8, #32
 8019f18:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019f1c:	44bc      	add	ip, r7
 8019f1e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019f22:	0a3f      	lsrs	r7, r7, #8
 8019f24:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019f28:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019f2c:	ea4c 0707 	orr.w	r7, ip, r7
 8019f30:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019f34:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019f38:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019f3c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019f40:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019f44:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019f48:	ea4c 0909 	orr.w	r9, ip, r9
 8019f4c:	ea4a 0707 	orr.w	r7, sl, r7
 8019f50:	2d00      	cmp	r5, #0
 8019f52:	f000 80ca 	beq.w	801a0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8019f56:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019f5a:	3901      	subs	r1, #1
 8019f5c:	0049      	lsls	r1, r1, #1
 8019f5e:	3102      	adds	r1, #2
 8019f60:	eb00 0c01 	add.w	ip, r0, r1
 8019f64:	5a41      	ldrh	r1, [r0, r1]
 8019f66:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019f68:	28ff      	cmp	r0, #255	; 0xff
 8019f6a:	d019      	beq.n	8019fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8019f6c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019f6e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019f72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019f76:	fb04 fa01 	mul.w	sl, r4, r1
 8019f7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019f7e:	fb08 f800 	mul.w	r8, r8, r0
 8019f82:	f10a 0020 	add.w	r0, sl, #32
 8019f86:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019f8a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019f8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019f92:	4441      	add	r1, r8
 8019f94:	0a00      	lsrs	r0, r0, #8
 8019f96:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019f9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019f9e:	4301      	orrs	r1, r0
 8019fa0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019fa2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019fa6:	2cff      	cmp	r4, #255	; 0xff
 8019fa8:	d01a      	beq.n	8019fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8019faa:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019fae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019fb2:	fb04 fa00 	mul.w	sl, r4, r0
 8019fb6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019fba:	fb08 f80c 	mul.w	r8, r8, ip
 8019fbe:	f10a 0c20 	add.w	ip, sl, #32
 8019fc2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019fc6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019fca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019fce:	4440      	add	r0, r8
 8019fd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fd4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019fd8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019fdc:	ea40 000c 	orr.w	r0, r0, ip
 8019fe0:	fb15 fc02 	smulbb	ip, r5, r2
 8019fe4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019fe8:	f1c5 0810 	rsb	r8, r5, #16
 8019fec:	eba8 0802 	sub.w	r8, r8, r2
 8019ff0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019ff4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019ff8:	437a      	muls	r2, r7
 8019ffa:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019ffe:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801a002:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a006:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a00a:	fb09 2208 	mla	r2, r9, r8, r2
 801a00e:	ea4a 0101 	orr.w	r1, sl, r1
 801a012:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801a016:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a01a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a01e:	fb05 2201 	mla	r2, r5, r1, r2
 801a022:	ea4b 0000 	orr.w	r0, fp, r0
 801a026:	fb0c 2200 	mla	r2, ip, r0, r2
 801a02a:	0d57      	lsrs	r7, r2, #21
 801a02c:	0952      	lsrs	r2, r2, #5
 801a02e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a032:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a036:	433a      	orrs	r2, r7
 801a038:	2bff      	cmp	r3, #255	; 0xff
 801a03a:	b292      	uxth	r2, r2
 801a03c:	d102      	bne.n	801a044 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 801a03e:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a040:	29ff      	cmp	r1, #255	; 0xff
 801a042:	d063      	beq.n	801a10c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 801a044:	980a      	ldr	r0, [sp, #40]	; 0x28
 801a046:	f8be 1000 	ldrh.w	r1, [lr]
 801a04a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a04c:	4343      	muls	r3, r0
 801a04e:	1c58      	adds	r0, r3, #1
 801a050:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801a054:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801a058:	1208      	asrs	r0, r1, #8
 801a05a:	b2db      	uxtb	r3, r3
 801a05c:	1215      	asrs	r5, r2, #8
 801a05e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a062:	fb10 f003 	smulbb	r0, r0, r3
 801a066:	10cf      	asrs	r7, r1, #3
 801a068:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a06c:	00c9      	lsls	r1, r1, #3
 801a06e:	fb05 0504 	mla	r5, r5, r4, r0
 801a072:	b2c9      	uxtb	r1, r1
 801a074:	10d0      	asrs	r0, r2, #3
 801a076:	00d2      	lsls	r2, r2, #3
 801a078:	fb11 f103 	smulbb	r1, r1, r3
 801a07c:	b2d2      	uxtb	r2, r2
 801a07e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a082:	fb02 1204 	mla	r2, r2, r4, r1
 801a086:	fb17 f703 	smulbb	r7, r7, r3
 801a08a:	b2ad      	uxth	r5, r5
 801a08c:	b292      	uxth	r2, r2
 801a08e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a092:	fb00 7004 	mla	r0, r0, r4, r7
 801a096:	1c6b      	adds	r3, r5, #1
 801a098:	1c57      	adds	r7, r2, #1
 801a09a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801a09e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a0a2:	b280      	uxth	r0, r0
 801a0a4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a0a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801a0ac:	433d      	orrs	r5, r7
 801a0ae:	1c47      	adds	r7, r0, #1
 801a0b0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801a0b4:	097f      	lsrs	r7, r7, #5
 801a0b6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a0ba:	433d      	orrs	r5, r7
 801a0bc:	f8ae 5000 	strh.w	r5, [lr]
 801a0c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a0c2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a0c4:	4413      	add	r3, r2
 801a0c6:	9329      	str	r3, [sp, #164]	; 0xa4
 801a0c8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a0ca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a0cc:	441a      	add	r2, r3
 801a0ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a0d0:	922a      	str	r2, [sp, #168]	; 0xa8
 801a0d2:	3b01      	subs	r3, #1
 801a0d4:	f10e 0e02 	add.w	lr, lr, #2
 801a0d8:	9313      	str	r3, [sp, #76]	; 0x4c
 801a0da:	e61c      	b.n	8019d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 801a0dc:	fb08 f000 	mul.w	r0, r8, r0
 801a0e0:	fb09 0303 	mla	r3, r9, r3, r0
 801a0e4:	e6dc      	b.n	8019ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801a0e6:	46b9      	mov	r9, r7
 801a0e8:	e704      	b.n	8019ef4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 801a0ea:	f1c2 0110 	rsb	r1, r2, #16
 801a0ee:	437a      	muls	r2, r7
 801a0f0:	fb09 2901 	mla	r9, r9, r1, r2
 801a0f4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a0f8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801a0fc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801a100:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a104:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a108:	4302      	orrs	r2, r0
 801a10a:	e795      	b.n	801a038 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 801a10c:	f8ae 2000 	strh.w	r2, [lr]
 801a110:	e7d6      	b.n	801a0c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801a112:	b017      	add	sp, #92	; 0x5c
 801a114:	ecbd 8b08 	vpop	{d8-d11}
 801a118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a11c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a120:	b085      	sub	sp, #20
 801a122:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801a126:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801a12a:	9103      	str	r1, [sp, #12]
 801a12c:	fb05 7106 	mla	r1, r5, r6, r7
 801a130:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 801a134:	2d00      	cmp	r5, #0
 801a136:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a13a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801a13e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801a142:	9401      	str	r4, [sp, #4]
 801a144:	eb02 0901 	add.w	r9, r2, r1
 801a148:	f2c0 80c0 	blt.w	801a2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801a14c:	45a8      	cmp	r8, r5
 801a14e:	f340 80bd 	ble.w	801a2cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801a152:	2f00      	cmp	r7, #0
 801a154:	f2c0 80b6 	blt.w	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801a158:	42be      	cmp	r6, r7
 801a15a:	f340 80b3 	ble.w	801a2c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 801a15e:	f812 c001 	ldrb.w	ip, [r2, r1]
 801a162:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 801a166:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a16a:	d019      	beq.n	801a1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 801a16c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 801a170:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801a174:	435a      	muls	r2, r3
 801a176:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 801a17a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 801a17e:	fb0c f403 	mul.w	r4, ip, r3
 801a182:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801a186:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801a18a:	441a      	add	r2, r3
 801a18c:	f104 0320 	add.w	r3, r4, #32
 801a190:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801a194:	0a1b      	lsrs	r3, r3, #8
 801a196:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 801a19a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a19e:	4319      	orrs	r1, r3
 801a1a0:	b289      	uxth	r1, r1
 801a1a2:	1c7b      	adds	r3, r7, #1
 801a1a4:	f100 8097 	bmi.w	801a2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801a1a8:	429e      	cmp	r6, r3
 801a1aa:	f340 8094 	ble.w	801a2d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 801a1ae:	2800      	cmp	r0, #0
 801a1b0:	f000 8094 	beq.w	801a2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 801a1b4:	f899 4001 	ldrb.w	r4, [r9, #1]
 801a1b8:	9b01      	ldr	r3, [sp, #4]
 801a1ba:	2cff      	cmp	r4, #255	; 0xff
 801a1bc:	885b      	ldrh	r3, [r3, #2]
 801a1be:	d01b      	beq.n	801a1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 801a1c0:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801a1c4:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801a1c8:	fb0a f202 	mul.w	r2, sl, r2
 801a1cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a1d0:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801a1d4:	fb04 fa03 	mul.w	sl, r4, r3
 801a1d8:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801a1dc:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801a1e0:	441a      	add	r2, r3
 801a1e2:	f10a 0320 	add.w	r3, sl, #32
 801a1e6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801a1ea:	0a1b      	lsrs	r3, r3, #8
 801a1ec:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 801a1f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a1f4:	ea4b 0303 	orr.w	r3, fp, r3
 801a1f8:	b29b      	uxth	r3, r3
 801a1fa:	3501      	adds	r5, #1
 801a1fc:	d474      	bmi.n	801a2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801a1fe:	45a8      	cmp	r8, r5
 801a200:	dd72      	ble.n	801a2e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801a202:	f1be 0f00 	cmp.w	lr, #0
 801a206:	f000 8111 	beq.w	801a42c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 801a20a:	2f00      	cmp	r7, #0
 801a20c:	db69      	blt.n	801a2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801a20e:	42be      	cmp	r6, r7
 801a210:	dd67      	ble.n	801a2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 801a212:	f819 5006 	ldrb.w	r5, [r9, r6]
 801a216:	9a01      	ldr	r2, [sp, #4]
 801a218:	2dff      	cmp	r5, #255	; 0xff
 801a21a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801a21e:	d01c      	beq.n	801a25a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 801a220:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 801a224:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a228:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a22c:	fb05 fa0b 	mul.w	sl, r5, fp
 801a230:	fb08 f802 	mul.w	r8, r8, r2
 801a234:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801a238:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801a23c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a240:	4490      	add	r8, r2
 801a242:	f10a 0220 	add.w	r2, sl, #32
 801a246:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801a24a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a24e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 801a252:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a256:	ea4b 0b0a 	orr.w	fp, fp, sl
 801a25a:	fa1f fb8b 	uxth.w	fp, fp
 801a25e:	3701      	adds	r7, #1
 801a260:	d447      	bmi.n	801a2f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801a262:	42be      	cmp	r6, r7
 801a264:	dd45      	ble.n	801a2f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 801a266:	2800      	cmp	r0, #0
 801a268:	d046      	beq.n	801a2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 801a26a:	3601      	adds	r6, #1
 801a26c:	9a01      	ldr	r2, [sp, #4]
 801a26e:	f819 7006 	ldrb.w	r7, [r9, r6]
 801a272:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801a276:	2fff      	cmp	r7, #255	; 0xff
 801a278:	d01a      	beq.n	801a2b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 801a27a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 801a27e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801a282:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a286:	fb07 f902 	mul.w	r9, r7, r2
 801a28a:	fb08 f806 	mul.w	r8, r8, r6
 801a28e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801a292:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801a296:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a29a:	44b0      	add	r8, r6
 801a29c:	f109 0620 	add.w	r6, r9, #32
 801a2a0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801a2a4:	0a36      	lsrs	r6, r6, #8
 801a2a6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801a2aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a2ae:	4332      	orrs	r2, r6
 801a2b0:	b292      	uxth	r2, r2
 801a2b2:	280f      	cmp	r0, #15
 801a2b4:	d922      	bls.n	801a2fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801a2b6:	4b61      	ldr	r3, [pc, #388]	; (801a43c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 801a2b8:	4a61      	ldr	r2, [pc, #388]	; (801a440 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 801a2ba:	4862      	ldr	r0, [pc, #392]	; (801a444 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 801a2bc:	f240 210d 	movw	r1, #525	; 0x20d
 801a2c0:	f005 f898 	bl	801f3f4 <__assert_func>
 801a2c4:	f04f 0c00 	mov.w	ip, #0
 801a2c8:	4661      	mov	r1, ip
 801a2ca:	e76a      	b.n	801a1a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801a2cc:	2400      	movs	r4, #0
 801a2ce:	46a4      	mov	ip, r4
 801a2d0:	4623      	mov	r3, r4
 801a2d2:	4621      	mov	r1, r4
 801a2d4:	e791      	b.n	801a1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801a2d6:	2400      	movs	r4, #0
 801a2d8:	4623      	mov	r3, r4
 801a2da:	e78e      	b.n	801a1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801a2dc:	4604      	mov	r4, r0
 801a2de:	4603      	mov	r3, r0
 801a2e0:	e78b      	b.n	801a1fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801a2e2:	2500      	movs	r5, #0
 801a2e4:	46ab      	mov	fp, r5
 801a2e6:	e7ba      	b.n	801a25e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 801a2e8:	2700      	movs	r7, #0
 801a2ea:	463d      	mov	r5, r7
 801a2ec:	463a      	mov	r2, r7
 801a2ee:	46bb      	mov	fp, r7
 801a2f0:	e7df      	b.n	801a2b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801a2f2:	2700      	movs	r7, #0
 801a2f4:	463a      	mov	r2, r7
 801a2f6:	e7dc      	b.n	801a2b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801a2f8:	4607      	mov	r7, r0
 801a2fa:	4602      	mov	r2, r0
 801a2fc:	f1be 0f0f 	cmp.w	lr, #15
 801a300:	d8d9      	bhi.n	801a2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801a302:	b286      	uxth	r6, r0
 801a304:	fa1f f98e 	uxth.w	r9, lr
 801a308:	fb06 f809 	mul.w	r8, r6, r9
 801a30c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a310:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801a314:	0136      	lsls	r6, r6, #4
 801a316:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a31a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a31e:	9601      	str	r6, [sp, #4]
 801a320:	ea4a 0101 	orr.w	r1, sl, r1
 801a324:	fa1f f689 	uxth.w	r6, r9
 801a328:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 801a32c:	fb10 f90e 	smulbb	r9, r0, lr
 801a330:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801a334:	9602      	str	r6, [sp, #8]
 801a336:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a33a:	460e      	mov	r6, r1
 801a33c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a340:	f1ce 0110 	rsb	r1, lr, #16
 801a344:	1a09      	subs	r1, r1, r0
 801a346:	ea4a 0303 	orr.w	r3, sl, r3
 801a34a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 801a34e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a352:	4343      	muls	r3, r0
 801a354:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 801a358:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a35c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a360:	fb01 3106 	mla	r1, r1, r6, r3
 801a364:	ea4a 0202 	orr.w	r2, sl, r2
 801a368:	fb09 1302 	mla	r3, r9, r2, r1
 801a36c:	9901      	ldr	r1, [sp, #4]
 801a36e:	9802      	ldr	r0, [sp, #8]
 801a370:	9a03      	ldr	r2, [sp, #12]
 801a372:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a376:	1a09      	subs	r1, r1, r0
 801a378:	9801      	ldr	r0, [sp, #4]
 801a37a:	8812      	ldrh	r2, [r2, #0]
 801a37c:	eba0 0608 	sub.w	r6, r0, r8
 801a380:	b2b6      	uxth	r6, r6
 801a382:	b289      	uxth	r1, r1
 801a384:	4374      	muls	r4, r6
 801a386:	fb0c 4401 	mla	r4, ip, r1, r4
 801a38a:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 801a38e:	9902      	ldr	r1, [sp, #8]
 801a390:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a394:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a398:	fb01 4505 	mla	r5, r1, r5, r4
 801a39c:	ea4a 0b0b 	orr.w	fp, sl, fp
 801a3a0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801a3a4:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801a3a8:	fb08 5707 	mla	r7, r8, r7, r5
 801a3ac:	ea4f 535e 	mov.w	r3, lr, lsr #21
 801a3b0:	1211      	asrs	r1, r2, #8
 801a3b2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a3b6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801a3ba:	b2ff      	uxtb	r7, r7
 801a3bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3c0:	10d0      	asrs	r0, r2, #3
 801a3c2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a3c6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a3ca:	00d2      	lsls	r2, r2, #3
 801a3cc:	4379      	muls	r1, r7
 801a3ce:	ea43 0e0e 	orr.w	lr, r3, lr
 801a3d2:	b2d2      	uxtb	r2, r2
 801a3d4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a3d8:	fa1f f38e 	uxth.w	r3, lr
 801a3dc:	4378      	muls	r0, r7
 801a3de:	4357      	muls	r7, r2
 801a3e0:	1c4a      	adds	r2, r1, #1
 801a3e2:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801a3e6:	1219      	asrs	r1, r3, #8
 801a3e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a3ec:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801a3f0:	4a15      	ldr	r2, [pc, #84]	; (801a448 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 801a3f2:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801a3f6:	1c42      	adds	r2, r0, #1
 801a3f8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a3fc:	10da      	asrs	r2, r3, #3
 801a3fe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a402:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a406:	00d2      	lsls	r2, r2, #3
 801a408:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a40c:	430a      	orrs	r2, r1
 801a40e:	00db      	lsls	r3, r3, #3
 801a410:	1c79      	adds	r1, r7, #1
 801a412:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801a416:	b2db      	uxtb	r3, r3
 801a418:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801a41c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801a420:	4313      	orrs	r3, r2
 801a422:	9a03      	ldr	r2, [sp, #12]
 801a424:	8013      	strh	r3, [r2, #0]
 801a426:	b005      	add	sp, #20
 801a428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a42c:	280f      	cmp	r0, #15
 801a42e:	f63f af42 	bhi.w	801a2b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801a432:	4677      	mov	r7, lr
 801a434:	4675      	mov	r5, lr
 801a436:	4672      	mov	r2, lr
 801a438:	46f3      	mov	fp, lr
 801a43a:	e762      	b.n	801a302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 801a43c:	08024033 	.word	0x08024033
 801a440:	080245f1 	.word	0x080245f1
 801a444:	0802411c 	.word	0x0802411c
 801a448:	fffff800 	.word	0xfffff800

0801a44c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a450:	ed2d 8b08 	vpush	{d8-d11}
 801a454:	b093      	sub	sp, #76	; 0x4c
 801a456:	eeb0 aa40 	vmov.f32	s20, s0
 801a45a:	9210      	str	r2, [sp, #64]	; 0x40
 801a45c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a45e:	910e      	str	r1, [sp, #56]	; 0x38
 801a460:	9306      	str	r3, [sp, #24]
 801a462:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a466:	9011      	str	r0, [sp, #68]	; 0x44
 801a468:	6850      	ldr	r0, [r2, #4]
 801a46a:	6812      	ldr	r2, [r2, #0]
 801a46c:	fb00 1303 	mla	r3, r0, r3, r1
 801a470:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a474:	9307      	str	r3, [sp, #28]
 801a476:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a478:	681b      	ldr	r3, [r3, #0]
 801a47a:	9308      	str	r3, [sp, #32]
 801a47c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a47e:	685b      	ldr	r3, [r3, #4]
 801a480:	9309      	str	r3, [sp, #36]	; 0x24
 801a482:	eef0 9a60 	vmov.f32	s19, s1
 801a486:	eeb0 9a41 	vmov.f32	s18, s2
 801a48a:	eeb0 8a62 	vmov.f32	s16, s5
 801a48e:	eef0 8a43 	vmov.f32	s17, s6
 801a492:	eef0 ba44 	vmov.f32	s23, s8
 801a496:	eeb0 ba64 	vmov.f32	s22, s9
 801a49a:	eef0 aa45 	vmov.f32	s21, s10
 801a49e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4a0:	2b00      	cmp	r3, #0
 801a4a2:	dc03      	bgt.n	801a4ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a4a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4a6:	2b00      	cmp	r3, #0
 801a4a8:	f340 83b6 	ble.w	801ac18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801a4ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a4ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4b6:	1e48      	subs	r0, r1, #1
 801a4b8:	1e55      	subs	r5, r2, #1
 801a4ba:	9b06      	ldr	r3, [sp, #24]
 801a4bc:	2b00      	cmp	r3, #0
 801a4be:	f340 8199 	ble.w	801a7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801a4c2:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801a4c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a4c6:	1436      	asrs	r6, r6, #16
 801a4c8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a4cc:	d406      	bmi.n	801a4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4ce:	4286      	cmp	r6, r0
 801a4d0:	da04      	bge.n	801a4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4d2:	2b00      	cmp	r3, #0
 801a4d4:	db02      	blt.n	801a4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a4d6:	42ab      	cmp	r3, r5
 801a4d8:	f2c0 818d 	blt.w	801a7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801a4dc:	3601      	adds	r6, #1
 801a4de:	f100 817a 	bmi.w	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a4e2:	42b1      	cmp	r1, r6
 801a4e4:	f2c0 8177 	blt.w	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a4e8:	3301      	adds	r3, #1
 801a4ea:	f100 8174 	bmi.w	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a4ee:	429a      	cmp	r2, r3
 801a4f0:	f2c0 8171 	blt.w	801a7d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a4f4:	9b06      	ldr	r3, [sp, #24]
 801a4f6:	9f07      	ldr	r7, [sp, #28]
 801a4f8:	930f      	str	r3, [sp, #60]	; 0x3c
 801a4fa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801a4fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a500:	2b00      	cmp	r3, #0
 801a502:	f340 819a 	ble.w	801a83a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801a506:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a508:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801a50a:	1418      	asrs	r0, r3, #16
 801a50c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a50e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801a512:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a514:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801a518:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a51a:	142d      	asrs	r5, r5, #16
 801a51c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801a520:	f100 81ee 	bmi.w	801a900 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a524:	f102 3eff 	add.w	lr, r2, #4294967295
 801a528:	4575      	cmp	r5, lr
 801a52a:	f280 81e9 	bge.w	801a900 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a52e:	2800      	cmp	r0, #0
 801a530:	f2c0 81e6 	blt.w	801a900 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a534:	f103 3eff 	add.w	lr, r3, #4294967295
 801a538:	4570      	cmp	r0, lr
 801a53a:	f280 81e1 	bge.w	801a900 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801a53e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a540:	b212      	sxth	r2, r2
 801a542:	fb00 5002 	mla	r0, r0, r2, r5
 801a546:	fa1f fe81 	uxth.w	lr, r1
 801a54a:	eb03 0a00 	add.w	sl, r3, r0
 801a54e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801a552:	f813 9000 	ldrb.w	r9, [r3, r0]
 801a556:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a55a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801a55e:	b29b      	uxth	r3, r3
 801a560:	f1bc 0f00 	cmp.w	ip, #0
 801a564:	f000 81af 	beq.w	801a8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801a568:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801a56c:	940a      	str	r4, [sp, #40]	; 0x28
 801a56e:	eb0a 0b02 	add.w	fp, sl, r2
 801a572:	fa1f fa8c 	uxth.w	sl, ip
 801a576:	fb0a fe0e 	mul.w	lr, sl, lr
 801a57a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801a57e:	fa1f fa8a 	uxth.w	sl, sl
 801a582:	eba5 050e 	sub.w	r5, r5, lr
 801a586:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a58a:	940b      	str	r4, [sp, #44]	; 0x2c
 801a58c:	eba3 030a 	sub.w	r3, r3, sl
 801a590:	b2ad      	uxth	r5, r5
 801a592:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a594:	b29b      	uxth	r3, r3
 801a596:	fb08 f505 	mul.w	r5, r8, r5
 801a59a:	fb09 5303 	mla	r3, r9, r3, r5
 801a59e:	fb0a 3304 	mla	r3, sl, r4, r3
 801a5a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a5a4:	fb0e 3304 	mla	r3, lr, r4, r3
 801a5a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a5ac:	2b00      	cmp	r3, #0
 801a5ae:	f000 8105 	beq.w	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a5b2:	9c08      	ldr	r4, [sp, #32]
 801a5b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a5b8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801a5bc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801a5c0:	f000 8186 	beq.w	801a8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801a5c4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801a5c8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a5cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a5d0:	fb09 f000 	mul.w	r0, r9, r0
 801a5d4:	fb0a fe0e 	mul.w	lr, sl, lr
 801a5d8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801a5dc:	f100 0b20 	add.w	fp, r0, #32
 801a5e0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801a5e4:	44ce      	add	lr, r9
 801a5e6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801a5ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a5ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a5f2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a5f6:	ea4e 0909 	orr.w	r9, lr, r9
 801a5fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801a5fe:	8868      	ldrh	r0, [r5, #2]
 801a600:	d019      	beq.n	801a636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801a602:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801a606:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801a60a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a60e:	fb08 f800 	mul.w	r8, r8, r0
 801a612:	fb0a fe0e 	mul.w	lr, sl, lr
 801a616:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801a61a:	f108 0b20 	add.w	fp, r8, #32
 801a61e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801a622:	4486      	add	lr, r0
 801a624:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801a628:	0a00      	lsrs	r0, r0, #8
 801a62a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801a62e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a632:	ea4e 0000 	orr.w	r0, lr, r0
 801a636:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801a63a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801a63e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a642:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a646:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a64a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a64e:	ea4e 0909 	orr.w	r9, lr, r9
 801a652:	ea4a 0000 	orr.w	r0, sl, r0
 801a656:	f1bc 0f00 	cmp.w	ip, #0
 801a65a:	f000 813b 	beq.w	801a8d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801a65e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801a662:	3a01      	subs	r2, #1
 801a664:	0052      	lsls	r2, r2, #1
 801a666:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a668:	3202      	adds	r2, #2
 801a66a:	2cff      	cmp	r4, #255	; 0xff
 801a66c:	eb05 0e02 	add.w	lr, r5, r2
 801a670:	5aaa      	ldrh	r2, [r5, r2]
 801a672:	d018      	beq.n	801a6a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a674:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801a678:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a67c:	fb04 fa02 	mul.w	sl, r4, r2
 801a680:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a684:	fb08 f805 	mul.w	r8, r8, r5
 801a688:	f10a 0520 	add.w	r5, sl, #32
 801a68c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801a690:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801a694:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a698:	4442      	add	r2, r8
 801a69a:	0a2d      	lsrs	r5, r5, #8
 801a69c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801a6a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a6a4:	432a      	orrs	r2, r5
 801a6a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a6a8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801a6ac:	2cff      	cmp	r4, #255	; 0xff
 801a6ae:	d01a      	beq.n	801a6e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a6b0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801a6b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a6b8:	fb04 fa05 	mul.w	sl, r4, r5
 801a6bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801a6c0:	fb08 f80e 	mul.w	r8, r8, lr
 801a6c4:	f10a 0e20 	add.w	lr, sl, #32
 801a6c8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801a6cc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801a6d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801a6d4:	4445      	add	r5, r8
 801a6d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a6da:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801a6de:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801a6e2:	ea45 050e 	orr.w	r5, r5, lr
 801a6e6:	fb1c fe01 	smulbb	lr, ip, r1
 801a6ea:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801a6ee:	f1cc 0810 	rsb	r8, ip, #16
 801a6f2:	eba8 0801 	sub.w	r8, r8, r1
 801a6f6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801a6fa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801a6fe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801a702:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801a706:	4341      	muls	r1, r0
 801a708:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a70c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a710:	ea4a 0202 	orr.w	r2, sl, r2
 801a714:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801a718:	fb09 1108 	mla	r1, r9, r8, r1
 801a71c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a720:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a724:	fb0c 1102 	mla	r1, ip, r2, r1
 801a728:	ea4b 0505 	orr.w	r5, fp, r5
 801a72c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801a730:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801a734:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801a738:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a73c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a740:	ea42 0e0e 	orr.w	lr, r2, lr
 801a744:	fa1f f28e 	uxth.w	r2, lr
 801a748:	2bff      	cmp	r3, #255	; 0xff
 801a74a:	f000 80d7 	beq.w	801a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801a74e:	f8b7 c000 	ldrh.w	ip, [r7]
 801a752:	43db      	mvns	r3, r3
 801a754:	ea4f 202c 	mov.w	r0, ip, asr #8
 801a758:	fa5f fe83 	uxtb.w	lr, r3
 801a75c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a760:	fb00 f00e 	mul.w	r0, r0, lr
 801a764:	1c41      	adds	r1, r0, #1
 801a766:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801a76a:	1210      	asrs	r0, r2, #8
 801a76c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a770:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a774:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801a778:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a77c:	496f      	ldr	r1, [pc, #444]	; (801a93c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 801a77e:	fb05 f50e 	mul.w	r5, r5, lr
 801a782:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801a786:	1c69      	adds	r1, r5, #1
 801a788:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801a78c:	10d1      	asrs	r1, r2, #3
 801a78e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a792:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801a796:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801a79a:	b2db      	uxtb	r3, r3
 801a79c:	00c9      	lsls	r1, r1, #3
 801a79e:	fb03 f30e 	mul.w	r3, r3, lr
 801a7a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a7a6:	4301      	orrs	r1, r0
 801a7a8:	1c58      	adds	r0, r3, #1
 801a7aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a7ae:	00d3      	lsls	r3, r2, #3
 801a7b0:	b2db      	uxtb	r3, r3
 801a7b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801a7b6:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 801a7ba:	803b      	strh	r3, [r7, #0]
 801a7bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a7be:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801a7c0:	4413      	add	r3, r2
 801a7c2:	9325      	str	r3, [sp, #148]	; 0x94
 801a7c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a7c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7c8:	441a      	add	r2, r3
 801a7ca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a7cc:	9226      	str	r2, [sp, #152]	; 0x98
 801a7ce:	3b01      	subs	r3, #1
 801a7d0:	3702      	adds	r7, #2
 801a7d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a7d4:	e693      	b.n	801a4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a7d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a7d8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 801a7da:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801a7dc:	4433      	add	r3, r6
 801a7de:	9325      	str	r3, [sp, #148]	; 0x94
 801a7e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7e2:	441c      	add	r4, r3
 801a7e4:	9b06      	ldr	r3, [sp, #24]
 801a7e6:	9426      	str	r4, [sp, #152]	; 0x98
 801a7e8:	3b01      	subs	r3, #1
 801a7ea:	9306      	str	r3, [sp, #24]
 801a7ec:	9b07      	ldr	r3, [sp, #28]
 801a7ee:	3302      	adds	r3, #2
 801a7f0:	9307      	str	r3, [sp, #28]
 801a7f2:	e662      	b.n	801a4ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a7f4:	d028      	beq.n	801a848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801a7f6:	9b06      	ldr	r3, [sp, #24]
 801a7f8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a7fa:	9d25      	ldr	r5, [sp, #148]	; 0x94
 801a7fc:	3b01      	subs	r3, #1
 801a7fe:	fb00 5003 	mla	r0, r0, r3, r5
 801a802:	1400      	asrs	r0, r0, #16
 801a804:	f53f ae76 	bmi.w	801a4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a808:	3901      	subs	r1, #1
 801a80a:	4288      	cmp	r0, r1
 801a80c:	f6bf ae72 	bge.w	801a4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a810:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a812:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a814:	fb01 0303 	mla	r3, r1, r3, r0
 801a818:	141b      	asrs	r3, r3, #16
 801a81a:	f53f ae6b 	bmi.w	801a4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a81e:	3a01      	subs	r2, #1
 801a820:	4293      	cmp	r3, r2
 801a822:	f6bf ae67 	bge.w	801a4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a826:	9b06      	ldr	r3, [sp, #24]
 801a828:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801a82c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a82e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801a832:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a834:	2b00      	cmp	r3, #0
 801a836:	f300 8083 	bgt.w	801a940 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a83a:	9b06      	ldr	r3, [sp, #24]
 801a83c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a840:	9b07      	ldr	r3, [sp, #28]
 801a842:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801a846:	9307      	str	r3, [sp, #28]
 801a848:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a84a:	2b00      	cmp	r3, #0
 801a84c:	f340 81e4 	ble.w	801ac18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 801a850:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a854:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a858:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a85c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a85e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a862:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a866:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a86a:	eef0 6a48 	vmov.f32	s13, s16
 801a86e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a872:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a876:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a87a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801a87e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a882:	eef0 6a68 	vmov.f32	s13, s17
 801a886:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a88a:	ee18 2a10 	vmov	r2, s16
 801a88e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a892:	fb92 f3f3 	sdiv	r3, r2, r3
 801a896:	ee18 2a90 	vmov	r2, s17
 801a89a:	9327      	str	r3, [sp, #156]	; 0x9c
 801a89c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a89e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a8a2:	9328      	str	r3, [sp, #160]	; 0xa0
 801a8a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a8a8:	3b01      	subs	r3, #1
 801a8aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a8ae:	930e      	str	r3, [sp, #56]	; 0x38
 801a8b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a8b2:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 801a8b6:	bf08      	it	eq
 801a8b8:	4613      	moveq	r3, r2
 801a8ba:	9306      	str	r3, [sp, #24]
 801a8bc:	eef0 8a67 	vmov.f32	s17, s15
 801a8c0:	eeb0 8a47 	vmov.f32	s16, s14
 801a8c4:	e5eb      	b.n	801a49e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a8c6:	fb08 f505 	mul.w	r5, r8, r5
 801a8ca:	fb09 5303 	mla	r3, r9, r3, r5
 801a8ce:	e66b      	b.n	801a5a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a8d0:	4681      	mov	r9, r0
 801a8d2:	e692      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a8d4:	f1c1 0210 	rsb	r2, r1, #16
 801a8d8:	4341      	muls	r1, r0
 801a8da:	fb09 1902 	mla	r9, r9, r2, r1
 801a8de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a8e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801a8e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a8ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a8ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801a8f2:	ea42 0909 	orr.w	r9, r2, r9
 801a8f6:	fa1f f289 	uxth.w	r2, r9
 801a8fa:	e725      	b.n	801a748 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801a8fc:	803a      	strh	r2, [r7, #0]
 801a8fe:	e75d      	b.n	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a900:	f115 0e01 	adds.w	lr, r5, #1
 801a904:	f53f af5a 	bmi.w	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a908:	4572      	cmp	r2, lr
 801a90a:	f6ff af57 	blt.w	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a90e:	f110 0e01 	adds.w	lr, r0, #1
 801a912:	f53f af53 	bmi.w	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a916:	4573      	cmp	r3, lr
 801a918:	f6ff af50 	blt.w	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a91c:	b21b      	sxth	r3, r3
 801a91e:	b212      	sxth	r2, r2
 801a920:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801a924:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801a928:	9301      	str	r3, [sp, #4]
 801a92a:	9200      	str	r2, [sp, #0]
 801a92c:	4639      	mov	r1, r7
 801a92e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801a932:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a934:	f7ff fbf2 	bl	801a11c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a938:	e740      	b.n	801a7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801a93a:	bf00      	nop
 801a93c:	fffff800 	.word	0xfffff800
 801a940:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a942:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801a946:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a948:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801a94c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a94e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a952:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a954:	141f      	asrs	r7, r3, #16
 801a956:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a958:	141b      	asrs	r3, r3, #16
 801a95a:	fb01 3707 	mla	r7, r1, r7, r3
 801a95e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a960:	fa1f fc82 	uxth.w	ip, r2
 801a964:	eb03 0a07 	add.w	sl, r3, r7
 801a968:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801a96c:	f813 9007 	ldrb.w	r9, [r3, r7]
 801a970:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801a974:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801a978:	b29b      	uxth	r3, r3
 801a97a:	2d00      	cmp	r5, #0
 801a97c:	f000 8131 	beq.w	801abe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x796>
 801a980:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801a984:	940c      	str	r4, [sp, #48]	; 0x30
 801a986:	eb0a 0b01 	add.w	fp, sl, r1
 801a98a:	fa1f fa85 	uxth.w	sl, r5
 801a98e:	fb0a fc0c 	mul.w	ip, sl, ip
 801a992:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801a996:	fa1f fa8a 	uxth.w	sl, sl
 801a99a:	eba0 000c 	sub.w	r0, r0, ip
 801a99e:	eba3 030a 	sub.w	r3, r3, sl
 801a9a2:	b280      	uxth	r0, r0
 801a9a4:	fb08 f000 	mul.w	r0, r8, r0
 801a9a8:	b29b      	uxth	r3, r3
 801a9aa:	fb09 0303 	mla	r3, r9, r3, r0
 801a9ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 801a9b0:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801a9b4:	940d      	str	r4, [sp, #52]	; 0x34
 801a9b6:	fb0a 3300 	mla	r3, sl, r0, r3
 801a9ba:	fb0c 3304 	mla	r3, ip, r4, r3
 801a9be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a9c2:	2b00      	cmp	r3, #0
 801a9c4:	f000 80ff 	beq.w	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 801a9c8:	9808      	ldr	r0, [sp, #32]
 801a9ca:	9c08      	ldr	r4, [sp, #32]
 801a9cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801a9d0:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801a9d4:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801a9d8:	f000 8108 	beq.w	801abec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a0>
 801a9dc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801a9e0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801a9e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801a9e8:	fb09 f707 	mul.w	r7, r9, r7
 801a9ec:	fb0a fc0c 	mul.w	ip, sl, ip
 801a9f0:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801a9f4:	f107 0b20 	add.w	fp, r7, #32
 801a9f8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801a9fc:	44cc      	add	ip, r9
 801a9fe:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801aa02:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aa06:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801aa0a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801aa0e:	ea4c 0909 	orr.w	r9, ip, r9
 801aa12:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801aa16:	8847      	ldrh	r7, [r0, #2]
 801aa18:	d019      	beq.n	801aa4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 801aa1a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801aa1e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801aa22:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801aa26:	fb08 f807 	mul.w	r8, r8, r7
 801aa2a:	fb0a fc0c 	mul.w	ip, sl, ip
 801aa2e:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801aa32:	f108 0b20 	add.w	fp, r8, #32
 801aa36:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801aa3a:	44bc      	add	ip, r7
 801aa3c:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801aa40:	0a3f      	lsrs	r7, r7, #8
 801aa42:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801aa46:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801aa4a:	ea4c 0707 	orr.w	r7, ip, r7
 801aa4e:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801aa52:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801aa56:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801aa5a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801aa5e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801aa62:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801aa66:	ea4c 0909 	orr.w	r9, ip, r9
 801aa6a:	ea4a 0707 	orr.w	r7, sl, r7
 801aa6e:	2d00      	cmp	r5, #0
 801aa70:	f000 80be 	beq.w	801abf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801aa74:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801aa78:	3901      	subs	r1, #1
 801aa7a:	0049      	lsls	r1, r1, #1
 801aa7c:	3102      	adds	r1, #2
 801aa7e:	eb00 0c01 	add.w	ip, r0, r1
 801aa82:	5a41      	ldrh	r1, [r0, r1]
 801aa84:	980c      	ldr	r0, [sp, #48]	; 0x30
 801aa86:	28ff      	cmp	r0, #255	; 0xff
 801aa88:	d019      	beq.n	801aabe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 801aa8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801aa8c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801aa90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801aa94:	fb04 fa01 	mul.w	sl, r4, r1
 801aa98:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801aa9c:	fb08 f800 	mul.w	r8, r8, r0
 801aaa0:	f10a 0020 	add.w	r0, sl, #32
 801aaa4:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801aaa8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801aaac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801aab0:	4441      	add	r1, r8
 801aab2:	0a00      	lsrs	r0, r0, #8
 801aab4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801aab8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aabc:	4301      	orrs	r1, r0
 801aabe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801aac0:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801aac4:	2cff      	cmp	r4, #255	; 0xff
 801aac6:	d01a      	beq.n	801aafe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 801aac8:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801aacc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801aad0:	fb04 fa00 	mul.w	sl, r4, r0
 801aad4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801aad8:	fb08 f80c 	mul.w	r8, r8, ip
 801aadc:	f10a 0c20 	add.w	ip, sl, #32
 801aae0:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801aae4:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801aae8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801aaec:	4440      	add	r0, r8
 801aaee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aaf2:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801aaf6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801aafa:	ea40 000c 	orr.w	r0, r0, ip
 801aafe:	fb15 fc02 	smulbb	ip, r5, r2
 801ab02:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801ab06:	f1c5 0810 	rsb	r8, r5, #16
 801ab0a:	eba8 0802 	sub.w	r8, r8, r2
 801ab0e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801ab12:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801ab16:	437a      	muls	r2, r7
 801ab18:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ab1c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801ab20:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ab24:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ab28:	fb09 2208 	mla	r2, r9, r8, r2
 801ab2c:	ea4a 0101 	orr.w	r1, sl, r1
 801ab30:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801ab34:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ab38:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ab3c:	fb05 2201 	mla	r2, r5, r1, r2
 801ab40:	ea4b 0000 	orr.w	r0, fp, r0
 801ab44:	fb0c 2200 	mla	r2, ip, r0, r2
 801ab48:	0d57      	lsrs	r7, r2, #21
 801ab4a:	0952      	lsrs	r2, r2, #5
 801ab4c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ab50:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ab54:	433a      	orrs	r2, r7
 801ab56:	2bff      	cmp	r3, #255	; 0xff
 801ab58:	b292      	uxth	r2, r2
 801ab5a:	d05a      	beq.n	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c6>
 801ab5c:	f8be 7000 	ldrh.w	r7, [lr]
 801ab60:	4c30      	ldr	r4, [pc, #192]	; (801ac24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 801ab62:	43db      	mvns	r3, r3
 801ab64:	1238      	asrs	r0, r7, #8
 801ab66:	fa5f fc83 	uxtb.w	ip, r3
 801ab6a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ab6e:	10fd      	asrs	r5, r7, #3
 801ab70:	fb00 f00c 	mul.w	r0, r0, ip
 801ab74:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ab78:	fb05 f10c 	mul.w	r1, r5, ip
 801ab7c:	1c45      	adds	r5, r0, #1
 801ab7e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ab82:	1215      	asrs	r5, r2, #8
 801ab84:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ab88:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ab8c:	1c4d      	adds	r5, r1, #1
 801ab8e:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801ab92:	10d1      	asrs	r1, r2, #3
 801ab94:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ab98:	00fb      	lsls	r3, r7, #3
 801ab9a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ab9e:	b2db      	uxtb	r3, r3
 801aba0:	00c9      	lsls	r1, r1, #3
 801aba2:	fb03 f30c 	mul.w	r3, r3, ip
 801aba6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801abaa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801abae:	4308      	orrs	r0, r1
 801abb0:	00d2      	lsls	r2, r2, #3
 801abb2:	1c59      	adds	r1, r3, #1
 801abb4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801abb8:	b2d1      	uxtb	r1, r2
 801abba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801abbe:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 801abc2:	f8ae 0000 	strh.w	r0, [lr]
 801abc6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801abc8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801abca:	4413      	add	r3, r2
 801abcc:	9325      	str	r3, [sp, #148]	; 0x94
 801abce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801abd0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801abd2:	441a      	add	r2, r3
 801abd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801abd6:	9226      	str	r2, [sp, #152]	; 0x98
 801abd8:	3b01      	subs	r3, #1
 801abda:	f10e 0e02 	add.w	lr, lr, #2
 801abde:	930f      	str	r3, [sp, #60]	; 0x3c
 801abe0:	e627      	b.n	801a832 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801abe2:	fb08 f000 	mul.w	r0, r8, r0
 801abe6:	fb09 0303 	mla	r3, r9, r3, r0
 801abea:	e6e8      	b.n	801a9be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 801abec:	46b9      	mov	r9, r7
 801abee:	e710      	b.n	801aa12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801abf0:	f1c2 0110 	rsb	r1, r2, #16
 801abf4:	437a      	muls	r2, r7
 801abf6:	fb09 2901 	mla	r9, r9, r1, r2
 801abfa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801abfe:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ac02:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ac06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ac0a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ac0e:	4302      	orrs	r2, r0
 801ac10:	e7a1      	b.n	801ab56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801ac12:	f8ae 2000 	strh.w	r2, [lr]
 801ac16:	e7d6      	b.n	801abc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 801ac18:	b013      	add	sp, #76	; 0x4c
 801ac1a:	ecbd 8b08 	vpop	{d8-d11}
 801ac1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac22:	bf00      	nop
 801ac24:	fffff800 	.word	0xfffff800

0801ac28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801ac28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ac2c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 801ac30:	fb0c 4e03 	mla	lr, ip, r3, r4
 801ac34:	f1bc 0f00 	cmp.w	ip, #0
 801ac38:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801ac3c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 801ac40:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 801ac44:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 801ac48:	8808      	ldrh	r0, [r1, #0]
 801ac4a:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801ac4e:	db2f      	blt.n	801acb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801ac50:	45e2      	cmp	sl, ip
 801ac52:	dd2d      	ble.n	801acb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801ac54:	2c00      	cmp	r4, #0
 801ac56:	db29      	blt.n	801acac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801ac58:	42a3      	cmp	r3, r4
 801ac5a:	dd27      	ble.n	801acac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 801ac5c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801ac60:	1c62      	adds	r2, r4, #1
 801ac62:	d428      	bmi.n	801acb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801ac64:	4293      	cmp	r3, r2
 801ac66:	dd26      	ble.n	801acb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801ac68:	b32f      	cbz	r7, 801acb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 801ac6a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801ac6e:	f11c 0c01 	adds.w	ip, ip, #1
 801ac72:	d424      	bmi.n	801acbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801ac74:	45e2      	cmp	sl, ip
 801ac76:	dd22      	ble.n	801acbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 801ac78:	2e00      	cmp	r6, #0
 801ac7a:	f000 809c 	beq.w	801adb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 801ac7e:	2c00      	cmp	r4, #0
 801ac80:	db1b      	blt.n	801acba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801ac82:	42a3      	cmp	r3, r4
 801ac84:	dd19      	ble.n	801acba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801ac86:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 801ac8a:	3401      	adds	r4, #1
 801ac8c:	d41a      	bmi.n	801acc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801ac8e:	42a3      	cmp	r3, r4
 801ac90:	dd18      	ble.n	801acc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801ac92:	b1cf      	cbz	r7, 801acc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801ac94:	3301      	adds	r3, #1
 801ac96:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 801ac9a:	2f0f      	cmp	r7, #15
 801ac9c:	d915      	bls.n	801acca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801ac9e:	4b49      	ldr	r3, [pc, #292]	; (801adc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801aca0:	4a49      	ldr	r2, [pc, #292]	; (801adc8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801aca2:	484a      	ldr	r0, [pc, #296]	; (801adcc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801aca4:	f240 11ef 	movw	r1, #495	; 0x1ef
 801aca8:	f004 fba4 	bl	801f3f4 <__assert_func>
 801acac:	4681      	mov	r9, r0
 801acae:	e7d7      	b.n	801ac60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801acb0:	4686      	mov	lr, r0
 801acb2:	4681      	mov	r9, r0
 801acb4:	e7db      	b.n	801ac6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801acb6:	4686      	mov	lr, r0
 801acb8:	e7d9      	b.n	801ac6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801acba:	4684      	mov	ip, r0
 801acbc:	e7e5      	b.n	801ac8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801acbe:	4603      	mov	r3, r0
 801acc0:	4684      	mov	ip, r0
 801acc2:	e7ea      	b.n	801ac9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801acc4:	4603      	mov	r3, r0
 801acc6:	e7e8      	b.n	801ac9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801acc8:	4603      	mov	r3, r0
 801acca:	2e0f      	cmp	r6, #15
 801accc:	d8e7      	bhi.n	801ac9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801acce:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801acd2:	fb17 f806 	smulbb	r8, r7, r6
 801acd6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801acda:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801acde:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ace2:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801ace6:	ea44 0909 	orr.w	r9, r4, r9
 801acea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801acee:	f1c6 0410 	rsb	r4, r6, #16
 801acf2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801acf6:	1be4      	subs	r4, r4, r7
 801acf8:	041a      	lsls	r2, r3, #16
 801acfa:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 801acfe:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ad02:	fb07 fe0e 	mul.w	lr, r7, lr
 801ad06:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ad0a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801ad0e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ad12:	fb04 e409 	mla	r4, r4, r9, lr
 801ad16:	4313      	orrs	r3, r2
 801ad18:	ea4f 420c 	mov.w	r2, ip, lsl #16
 801ad1c:	fb08 4303 	mla	r3, r8, r3, r4
 801ad20:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ad24:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 801ad28:	4322      	orrs	r2, r4
 801ad2a:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 801ad2e:	fb06 3202 	mla	r2, r6, r2, r3
 801ad32:	0d53      	lsrs	r3, r2, #21
 801ad34:	0952      	lsrs	r2, r2, #5
 801ad36:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ad3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ad3e:	431a      	orrs	r2, r3
 801ad40:	b293      	uxth	r3, r2
 801ad42:	b2af      	uxth	r7, r5
 801ad44:	1202      	asrs	r2, r0, #8
 801ad46:	43ed      	mvns	r5, r5
 801ad48:	b2ed      	uxtb	r5, r5
 801ad4a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ad4e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ad52:	fb12 f205 	smulbb	r2, r2, r5
 801ad56:	10c6      	asrs	r6, r0, #3
 801ad58:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad5c:	fb0c 2c07 	mla	ip, ip, r7, r2
 801ad60:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ad64:	10da      	asrs	r2, r3, #3
 801ad66:	fb16 f605 	smulbb	r6, r6, r5
 801ad6a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ad6e:	fb02 6207 	mla	r2, r2, r7, r6
 801ad72:	b296      	uxth	r6, r2
 801ad74:	00c2      	lsls	r2, r0, #3
 801ad76:	00dc      	lsls	r4, r3, #3
 801ad78:	b2d2      	uxtb	r2, r2
 801ad7a:	b2e4      	uxtb	r4, r4
 801ad7c:	fb12 f205 	smulbb	r2, r2, r5
 801ad80:	fb04 2207 	mla	r2, r4, r7, r2
 801ad84:	fa1f fc8c 	uxth.w	ip, ip
 801ad88:	b292      	uxth	r2, r2
 801ad8a:	f10c 0301 	add.w	r3, ip, #1
 801ad8e:	1c50      	adds	r0, r2, #1
 801ad90:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ad94:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ad98:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ad9c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801ada0:	4313      	orrs	r3, r2
 801ada2:	1c72      	adds	r2, r6, #1
 801ada4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801ada8:	0952      	lsrs	r2, r2, #5
 801adaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801adae:	4313      	orrs	r3, r2
 801adb0:	800b      	strh	r3, [r1, #0]
 801adb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801adb6:	2f0f      	cmp	r7, #15
 801adb8:	f63f af71 	bhi.w	801ac9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801adbc:	4603      	mov	r3, r0
 801adbe:	4684      	mov	ip, r0
 801adc0:	e785      	b.n	801acce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801adc2:	bf00      	nop
 801adc4:	08024033 	.word	0x08024033
 801adc8:	0802469a 	.word	0x0802469a
 801adcc:	0802411c 	.word	0x0802411c

0801add0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801add0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801add4:	ed2d 8b08 	vpush	{d8-d11}
 801add8:	b093      	sub	sp, #76	; 0x4c
 801adda:	461d      	mov	r5, r3
 801addc:	9210      	str	r2, [sp, #64]	; 0x40
 801adde:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ade0:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801ade4:	920b      	str	r2, [sp, #44]	; 0x2c
 801ade6:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 801adea:	910a      	str	r1, [sp, #40]	; 0x28
 801adec:	6859      	ldr	r1, [r3, #4]
 801adee:	681b      	ldr	r3, [r3, #0]
 801adf0:	9011      	str	r0, [sp, #68]	; 0x44
 801adf2:	fb01 2707 	mla	r7, r1, r7, r2
 801adf6:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801adfa:	9307      	str	r3, [sp, #28]
 801adfc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801adfe:	681b      	ldr	r3, [r3, #0]
 801ae00:	9309      	str	r3, [sp, #36]	; 0x24
 801ae02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ae04:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ae08:	43db      	mvns	r3, r3
 801ae0a:	b2db      	uxtb	r3, r3
 801ae0c:	eeb0 aa40 	vmov.f32	s20, s0
 801ae10:	eef0 9a60 	vmov.f32	s19, s1
 801ae14:	eeb0 9a41 	vmov.f32	s18, s2
 801ae18:	eeb0 8a62 	vmov.f32	s16, s5
 801ae1c:	eef0 8a43 	vmov.f32	s17, s6
 801ae20:	eef0 ba44 	vmov.f32	s23, s8
 801ae24:	eeb0 ba64 	vmov.f32	s22, s9
 801ae28:	eef0 aa45 	vmov.f32	s21, s10
 801ae2c:	9308      	str	r3, [sp, #32]
 801ae2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae30:	2b00      	cmp	r3, #0
 801ae32:	dc03      	bgt.n	801ae3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ae34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae36:	2b00      	cmp	r3, #0
 801ae38:	f340 8203 	ble.w	801b242 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801ae3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae3e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ae42:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ae46:	1e48      	subs	r0, r1, #1
 801ae48:	f102 3cff 	add.w	ip, r2, #4294967295
 801ae4c:	2d00      	cmp	r5, #0
 801ae4e:	f340 80da 	ble.w	801b006 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ae52:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ae56:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ae5a:	d406      	bmi.n	801ae6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ae5c:	4586      	cmp	lr, r0
 801ae5e:	da04      	bge.n	801ae6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ae60:	2b00      	cmp	r3, #0
 801ae62:	db02      	blt.n	801ae6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ae64:	4563      	cmp	r3, ip
 801ae66:	f2c0 80cf 	blt.w	801b008 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ae6a:	f11e 0e01 	adds.w	lr, lr, #1
 801ae6e:	f100 80c1 	bmi.w	801aff4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801ae72:	4571      	cmp	r1, lr
 801ae74:	f2c0 80be 	blt.w	801aff4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801ae78:	3301      	adds	r3, #1
 801ae7a:	f100 80bb 	bmi.w	801aff4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801ae7e:	429a      	cmp	r2, r3
 801ae80:	f2c0 80b8 	blt.w	801aff4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801ae84:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801ae88:	46a9      	mov	r9, r5
 801ae8a:	f1b9 0f00 	cmp.w	r9, #0
 801ae8e:	f340 80d8 	ble.w	801b042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ae92:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ae94:	1421      	asrs	r1, r4, #16
 801ae96:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ae9a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ae9e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801aea2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801aea6:	f100 8111 	bmi.w	801b0cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801aeaa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801aeae:	4551      	cmp	r1, sl
 801aeb0:	f280 810c 	bge.w	801b0cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801aeb4:	2800      	cmp	r0, #0
 801aeb6:	f2c0 8109 	blt.w	801b0cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801aeba:	f103 3aff 	add.w	sl, r3, #4294967295
 801aebe:	4550      	cmp	r0, sl
 801aec0:	f280 8104 	bge.w	801b0cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801aec4:	fa0f f38e 	sxth.w	r3, lr
 801aec8:	fb00 1103 	mla	r1, r0, r3, r1
 801aecc:	9809      	ldr	r0, [sp, #36]	; 0x24
 801aece:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801aed2:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801aed6:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801aeda:	f1bc 0f00 	cmp.w	ip, #0
 801aede:	d007      	beq.n	801aef0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801aee0:	005b      	lsls	r3, r3, #1
 801aee2:	eb0a 0003 	add.w	r0, sl, r3
 801aee6:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801aeea:	930c      	str	r3, [sp, #48]	; 0x30
 801aeec:	8843      	ldrh	r3, [r0, #2]
 801aeee:	930d      	str	r3, [sp, #52]	; 0x34
 801aef0:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801aef4:	fb12 f30c 	smulbb	r3, r2, ip
 801aef8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801aefc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801af00:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801af04:	10db      	asrs	r3, r3, #3
 801af06:	ea40 000e 	orr.w	r0, r0, lr
 801af0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801af0e:	f1cc 0e10 	rsb	lr, ip, #16
 801af12:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801af16:	ebae 0e02 	sub.w	lr, lr, r2
 801af1a:	ea4a 0101 	orr.w	r1, sl, r1
 801af1e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801af22:	4351      	muls	r1, r2
 801af24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801af26:	9f08      	ldr	r7, [sp, #32]
 801af28:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801af2c:	fb0e 1e00 	mla	lr, lr, r0, r1
 801af30:	0410      	lsls	r0, r2, #16
 801af32:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801af36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801af3a:	4310      	orrs	r0, r2
 801af3c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801af3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801af40:	0412      	lsls	r2, r2, #16
 801af42:	fb03 e000 	mla	r0, r3, r0, lr
 801af46:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801af4a:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801af4e:	ea42 020e 	orr.w	r2, r2, lr
 801af52:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801af56:	fb03 0302 	mla	r3, r3, r2, r0
 801af5a:	0d5a      	lsrs	r2, r3, #21
 801af5c:	095b      	lsrs	r3, r3, #5
 801af5e:	f8b8 c000 	ldrh.w	ip, [r8]
 801af62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af66:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801af6a:	4313      	orrs	r3, r2
 801af6c:	b29b      	uxth	r3, r3
 801af6e:	ea4f 212c 	mov.w	r1, ip, asr #8
 801af72:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801af76:	1218      	asrs	r0, r3, #8
 801af78:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801af7c:	fb11 f107 	smulbb	r1, r1, r7
 801af80:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801af84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af88:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801af8c:	fb00 1002 	mla	r0, r0, r2, r1
 801af90:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801af94:	10d9      	asrs	r1, r3, #3
 801af96:	fa5f fc8c 	uxtb.w	ip, ip
 801af9a:	00db      	lsls	r3, r3, #3
 801af9c:	b2db      	uxtb	r3, r3
 801af9e:	fb1c fc07 	smulbb	ip, ip, r7
 801afa2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801afa6:	fb1e fe07 	smulbb	lr, lr, r7
 801afaa:	fb01 e102 	mla	r1, r1, r2, lr
 801afae:	fb03 c202 	mla	r2, r3, r2, ip
 801afb2:	b280      	uxth	r0, r0
 801afb4:	b292      	uxth	r2, r2
 801afb6:	1c43      	adds	r3, r0, #1
 801afb8:	f102 0c01 	add.w	ip, r2, #1
 801afbc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801afc0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801afc4:	b289      	uxth	r1, r1
 801afc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801afca:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801afce:	4313      	orrs	r3, r2
 801afd0:	1c4a      	adds	r2, r1, #1
 801afd2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801afd6:	0949      	lsrs	r1, r1, #5
 801afd8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801afdc:	430b      	orrs	r3, r1
 801afde:	f8a8 3000 	strh.w	r3, [r8]
 801afe2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801afe4:	441c      	add	r4, r3
 801afe6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801afe8:	f108 0802 	add.w	r8, r8, #2
 801afec:	441e      	add	r6, r3
 801afee:	f109 39ff 	add.w	r9, r9, #4294967295
 801aff2:	e74a      	b.n	801ae8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801aff4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801aff6:	441c      	add	r4, r3
 801aff8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801affa:	441e      	add	r6, r3
 801affc:	9b07      	ldr	r3, [sp, #28]
 801affe:	3302      	adds	r3, #2
 801b000:	3d01      	subs	r5, #1
 801b002:	9307      	str	r3, [sp, #28]
 801b004:	e722      	b.n	801ae4c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b006:	d022      	beq.n	801b04e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 801b008:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b00a:	1e6b      	subs	r3, r5, #1
 801b00c:	fb00 4003 	mla	r0, r0, r3, r4
 801b010:	1400      	asrs	r0, r0, #16
 801b012:	f53f af37 	bmi.w	801ae84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b016:	3901      	subs	r1, #1
 801b018:	4288      	cmp	r0, r1
 801b01a:	f6bf af33 	bge.w	801ae84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b01e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b020:	fb01 6303 	mla	r3, r1, r3, r6
 801b024:	141b      	asrs	r3, r3, #16
 801b026:	f53f af2d 	bmi.w	801ae84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b02a:	3a01      	subs	r2, #1
 801b02c:	4293      	cmp	r3, r2
 801b02e:	f6bf af29 	bge.w	801ae84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 801b032:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801b036:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801b03a:	46a8      	mov	r8, r5
 801b03c:	f1b8 0f00 	cmp.w	r8, #0
 801b040:	dc5e      	bgt.n	801b100 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b042:	9b07      	ldr	r3, [sp, #28]
 801b044:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b048:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b04c:	9307      	str	r3, [sp, #28]
 801b04e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b050:	2b00      	cmp	r3, #0
 801b052:	f340 80f6 	ble.w	801b242 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 801b056:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b05a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b05e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b062:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b064:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b068:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b06c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b070:	eef0 6a48 	vmov.f32	s13, s16
 801b074:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b078:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b07c:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b080:	ee16 4a90 	vmov	r4, s13
 801b084:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b088:	eef0 6a68 	vmov.f32	s13, s17
 801b08c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b090:	ee18 2a10 	vmov	r2, s16
 801b094:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b098:	fb92 f3f3 	sdiv	r3, r2, r3
 801b09c:	ee18 2a90 	vmov	r2, s17
 801b0a0:	9327      	str	r3, [sp, #156]	; 0x9c
 801b0a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b0a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801b0a8:	9328      	str	r3, [sp, #160]	; 0xa0
 801b0aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b0ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b0ae:	3b01      	subs	r3, #1
 801b0b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b0b4:	930a      	str	r3, [sp, #40]	; 0x28
 801b0b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b0b8:	ee16 6a90 	vmov	r6, s13
 801b0bc:	bf14      	ite	ne
 801b0be:	461d      	movne	r5, r3
 801b0c0:	4615      	moveq	r5, r2
 801b0c2:	eef0 8a67 	vmov.f32	s17, s15
 801b0c6:	eeb0 8a47 	vmov.f32	s16, s14
 801b0ca:	e6b0      	b.n	801ae2e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b0cc:	f111 0a01 	adds.w	sl, r1, #1
 801b0d0:	d487      	bmi.n	801afe2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b0d2:	45d6      	cmp	lr, sl
 801b0d4:	db85      	blt.n	801afe2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b0d6:	f110 0a01 	adds.w	sl, r0, #1
 801b0da:	d482      	bmi.n	801afe2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b0dc:	4553      	cmp	r3, sl
 801b0de:	db80      	blt.n	801afe2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b0e0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801b0e2:	9101      	str	r1, [sp, #4]
 801b0e4:	b21b      	sxth	r3, r3
 801b0e6:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801b0ea:	9300      	str	r3, [sp, #0]
 801b0ec:	e9cd c704 	strd	ip, r7, [sp, #16]
 801b0f0:	fa0f f38e 	sxth.w	r3, lr
 801b0f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b0f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0f8:	4641      	mov	r1, r8
 801b0fa:	f7ff fd95 	bl	801ac28 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801b0fe:	e770      	b.n	801afe2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801b100:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b102:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801b104:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b108:	1430      	asrs	r0, r6, #16
 801b10a:	1423      	asrs	r3, r4, #16
 801b10c:	fb01 3000 	mla	r0, r1, r0, r3
 801b110:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b112:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801b116:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801b11a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801b11e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b122:	8858      	ldrh	r0, [r3, #2]
 801b124:	f1be 0f00 	cmp.w	lr, #0
 801b128:	d00b      	beq.n	801b142 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801b12a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801b12e:	3901      	subs	r1, #1
 801b130:	0049      	lsls	r1, r1, #1
 801b132:	3102      	adds	r1, #2
 801b134:	eb03 0b01 	add.w	fp, r3, r1
 801b138:	5a5b      	ldrh	r3, [r3, r1]
 801b13a:	930e      	str	r3, [sp, #56]	; 0x38
 801b13c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b140:	930f      	str	r3, [sp, #60]	; 0x3c
 801b142:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801b146:	fb12 f30e 	smulbb	r3, r2, lr
 801b14a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b14e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801b152:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801b156:	10db      	asrs	r3, r3, #3
 801b158:	ea41 010c 	orr.w	r1, r1, ip
 801b15c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b160:	f1ce 0c10 	rsb	ip, lr, #16
 801b164:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b168:	ebac 0c02 	sub.w	ip, ip, r2
 801b16c:	ea4b 0000 	orr.w	r0, fp, r0
 801b170:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b174:	4350      	muls	r0, r2
 801b176:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b178:	9f08      	ldr	r7, [sp, #32]
 801b17a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b17e:	fb0c 0c01 	mla	ip, ip, r1, r0
 801b182:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801b186:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801b18a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b18c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b18e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b192:	0412      	lsls	r2, r2, #16
 801b194:	ea4b 0101 	orr.w	r1, fp, r1
 801b198:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b19c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b1a0:	fb03 c101 	mla	r1, r3, r1, ip
 801b1a4:	4302      	orrs	r2, r0
 801b1a6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801b1aa:	fb03 1202 	mla	r2, r3, r2, r1
 801b1ae:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801b1b2:	0952      	lsrs	r2, r2, #5
 801b1b4:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801b1b8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b1bc:	f8b9 2000 	ldrh.w	r2, [r9]
 801b1c0:	ea4b 0303 	orr.w	r3, fp, r3
 801b1c4:	b29b      	uxth	r3, r3
 801b1c6:	1211      	asrs	r1, r2, #8
 801b1c8:	1218      	asrs	r0, r3, #8
 801b1ca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b1ce:	fb11 f107 	smulbb	r1, r1, r7
 801b1d2:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b1d6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b1da:	00d2      	lsls	r2, r2, #3
 801b1dc:	fb00 100a 	mla	r0, r0, sl, r1
 801b1e0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b1e4:	10d9      	asrs	r1, r3, #3
 801b1e6:	b2d2      	uxtb	r2, r2
 801b1e8:	00db      	lsls	r3, r3, #3
 801b1ea:	fb1c fc07 	smulbb	ip, ip, r7
 801b1ee:	fb12 f207 	smulbb	r2, r2, r7
 801b1f2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801b1f6:	b2db      	uxtb	r3, r3
 801b1f8:	b280      	uxth	r0, r0
 801b1fa:	fb01 c10a 	mla	r1, r1, sl, ip
 801b1fe:	fb03 230a 	mla	r3, r3, sl, r2
 801b202:	b29b      	uxth	r3, r3
 801b204:	b289      	uxth	r1, r1
 801b206:	1c42      	adds	r2, r0, #1
 801b208:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b20c:	f101 0c01 	add.w	ip, r1, #1
 801b210:	1c5a      	adds	r2, r3, #1
 801b212:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b216:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b21a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b21c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801b220:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b224:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b228:	4310      	orrs	r0, r2
 801b22a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801b22e:	441c      	add	r4, r3
 801b230:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b232:	ea40 000c 	orr.w	r0, r0, ip
 801b236:	f829 0b02 	strh.w	r0, [r9], #2
 801b23a:	441e      	add	r6, r3
 801b23c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b240:	e6fc      	b.n	801b03c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801b242:	b013      	add	sp, #76	; 0x4c
 801b244:	ecbd 8b08 	vpop	{d8-d11}
 801b248:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b24c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801b24c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b250:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 801b254:	fb06 5c03 	mla	ip, r6, r3, r5
 801b258:	2e00      	cmp	r6, #0
 801b25a:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 801b25e:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 801b262:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801b266:	8808      	ldrh	r0, [r1, #0]
 801b268:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801b26c:	db2e      	blt.n	801b2cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801b26e:	45b0      	cmp	r8, r6
 801b270:	dd2c      	ble.n	801b2cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801b272:	2d00      	cmp	r5, #0
 801b274:	db28      	blt.n	801b2c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801b276:	42ab      	cmp	r3, r5
 801b278:	dd26      	ble.n	801b2c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801b27a:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 801b27e:	1c6a      	adds	r2, r5, #1
 801b280:	d427      	bmi.n	801b2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801b282:	4293      	cmp	r3, r2
 801b284:	dd25      	ble.n	801b2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801b286:	b324      	cbz	r4, 801b2d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801b288:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801b28c:	3601      	adds	r6, #1
 801b28e:	d424      	bmi.n	801b2da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801b290:	45b0      	cmp	r8, r6
 801b292:	dd22      	ble.n	801b2da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801b294:	b31f      	cbz	r7, 801b2de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801b296:	2d00      	cmp	r5, #0
 801b298:	db1d      	blt.n	801b2d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801b29a:	42ab      	cmp	r3, r5
 801b29c:	dd1b      	ble.n	801b2d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801b29e:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801b2a2:	3501      	adds	r5, #1
 801b2a4:	d405      	bmi.n	801b2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801b2a6:	42ab      	cmp	r3, r5
 801b2a8:	dd03      	ble.n	801b2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801b2aa:	b124      	cbz	r4, 801b2b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 801b2ac:	3301      	adds	r3, #1
 801b2ae:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801b2b2:	2c0f      	cmp	r4, #15
 801b2b4:	d801      	bhi.n	801b2ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b2b6:	2f0f      	cmp	r7, #15
 801b2b8:	d914      	bls.n	801b2e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801b2ba:	4b27      	ldr	r3, [pc, #156]	; (801b358 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 801b2bc:	4a27      	ldr	r2, [pc, #156]	; (801b35c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 801b2be:	4828      	ldr	r0, [pc, #160]	; (801b360 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 801b2c0:	f240 11ef 	movw	r1, #495	; 0x1ef
 801b2c4:	f004 f896 	bl	801f3f4 <__assert_func>
 801b2c8:	4684      	mov	ip, r0
 801b2ca:	e7d8      	b.n	801b27e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 801b2cc:	4602      	mov	r2, r0
 801b2ce:	4684      	mov	ip, r0
 801b2d0:	e7dc      	b.n	801b28c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801b2d2:	4602      	mov	r2, r0
 801b2d4:	e7da      	b.n	801b28c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801b2d6:	4606      	mov	r6, r0
 801b2d8:	e7e3      	b.n	801b2a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801b2da:	4606      	mov	r6, r0
 801b2dc:	e7e9      	b.n	801b2b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801b2de:	2c0f      	cmp	r4, #15
 801b2e0:	d8eb      	bhi.n	801b2ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801b2e2:	4606      	mov	r6, r0
 801b2e4:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801b2e8:	fb14 f307 	smulbb	r3, r4, r7
 801b2ec:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801b2f0:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801b2f4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b2f8:	10db      	asrs	r3, r3, #3
 801b2fa:	ea45 0c0c 	orr.w	ip, r5, ip
 801b2fe:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801b302:	f1c7 0510 	rsb	r5, r7, #16
 801b306:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b30a:	1b2d      	subs	r5, r5, r4
 801b30c:	ea4e 0202 	orr.w	r2, lr, r2
 801b310:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801b314:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b318:	4354      	muls	r4, r2
 801b31a:	fb05 450c 	mla	r5, r5, ip, r4
 801b31e:	0404      	lsls	r4, r0, #16
 801b320:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801b324:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b328:	4320      	orrs	r0, r4
 801b32a:	fb03 5400 	mla	r4, r3, r0, r5
 801b32e:	0430      	lsls	r0, r6, #16
 801b330:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b334:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801b338:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 801b33c:	4330      	orrs	r0, r6
 801b33e:	fb07 4000 	mla	r0, r7, r0, r4
 801b342:	0d43      	lsrs	r3, r0, #21
 801b344:	0940      	lsrs	r0, r0, #5
 801b346:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b34a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b34e:	4318      	orrs	r0, r3
 801b350:	8008      	strh	r0, [r1, #0]
 801b352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b356:	bf00      	nop
 801b358:	08024033 	.word	0x08024033
 801b35c:	0802469a 	.word	0x0802469a
 801b360:	0802411c 	.word	0x0802411c

0801b364 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b368:	ed2d 8b08 	vpush	{d8-d11}
 801b36c:	b08f      	sub	sp, #60	; 0x3c
 801b36e:	461d      	mov	r5, r3
 801b370:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b372:	920c      	str	r2, [sp, #48]	; 0x30
 801b374:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 801b378:	9107      	str	r1, [sp, #28]
 801b37a:	6859      	ldr	r1, [r3, #4]
 801b37c:	681b      	ldr	r3, [r3, #0]
 801b37e:	900d      	str	r0, [sp, #52]	; 0x34
 801b380:	fb01 2707 	mla	r7, r1, r7, r2
 801b384:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801b388:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b38a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801b38e:	f8d3 8000 	ldr.w	r8, [r3]
 801b392:	eeb0 aa40 	vmov.f32	s20, s0
 801b396:	eef0 9a60 	vmov.f32	s19, s1
 801b39a:	eeb0 9a41 	vmov.f32	s18, s2
 801b39e:	eeb0 8a62 	vmov.f32	s16, s5
 801b3a2:	eef0 8a43 	vmov.f32	s17, s6
 801b3a6:	eef0 ba44 	vmov.f32	s23, s8
 801b3aa:	eeb0 ba64 	vmov.f32	s22, s9
 801b3ae:	eef0 aa45 	vmov.f32	s21, s10
 801b3b2:	9b07      	ldr	r3, [sp, #28]
 801b3b4:	2b00      	cmp	r3, #0
 801b3b6:	dc03      	bgt.n	801b3c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b3b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b3ba:	2b00      	cmp	r3, #0
 801b3bc:	f340 8181 	ble.w	801b6c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801b3c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b3c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b3c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b3ca:	1e48      	subs	r0, r1, #1
 801b3cc:	f102 3cff 	add.w	ip, r2, #4294967295
 801b3d0:	2d00      	cmp	r5, #0
 801b3d2:	f340 809b 	ble.w	801b50c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801b3d6:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b3da:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b3de:	d406      	bmi.n	801b3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b3e0:	4586      	cmp	lr, r0
 801b3e2:	da04      	bge.n	801b3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b3e4:	2b00      	cmp	r3, #0
 801b3e6:	db02      	blt.n	801b3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b3e8:	4563      	cmp	r3, ip
 801b3ea:	f2c0 8090 	blt.w	801b50e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 801b3ee:	f11e 0e01 	adds.w	lr, lr, #1
 801b3f2:	f100 8084 	bmi.w	801b4fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b3f6:	4571      	cmp	r1, lr
 801b3f8:	f2c0 8081 	blt.w	801b4fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b3fc:	3301      	adds	r3, #1
 801b3fe:	d47e      	bmi.n	801b4fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b400:	429a      	cmp	r2, r3
 801b402:	db7c      	blt.n	801b4fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b404:	46aa      	mov	sl, r5
 801b406:	46b9      	mov	r9, r7
 801b408:	f1ba 0f00 	cmp.w	sl, #0
 801b40c:	f340 8099 	ble.w	801b542 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 801b410:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b412:	1421      	asrs	r1, r4, #16
 801b414:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b418:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b41c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b420:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801b424:	f100 80d0 	bmi.w	801b5c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b428:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b42c:	4559      	cmp	r1, fp
 801b42e:	f280 80cb 	bge.w	801b5c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b432:	2800      	cmp	r0, #0
 801b434:	f2c0 80c8 	blt.w	801b5c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b438:	f103 3bff 	add.w	fp, r3, #4294967295
 801b43c:	4558      	cmp	r0, fp
 801b43e:	f280 80c3 	bge.w	801b5c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801b442:	fa0f fe8e 	sxth.w	lr, lr
 801b446:	fb00 110e 	mla	r1, r0, lr, r1
 801b44a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801b44e:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801b452:	8841      	ldrh	r1, [r0, #2]
 801b454:	f1bc 0f00 	cmp.w	ip, #0
 801b458:	d00b      	beq.n	801b472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b45a:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801b45e:	3b01      	subs	r3, #1
 801b460:	005b      	lsls	r3, r3, #1
 801b462:	3302      	adds	r3, #2
 801b464:	eb00 0e03 	add.w	lr, r0, r3
 801b468:	5ac3      	ldrh	r3, [r0, r3]
 801b46a:	9308      	str	r3, [sp, #32]
 801b46c:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801b470:	9309      	str	r3, [sp, #36]	; 0x24
 801b472:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801b476:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b47a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801b47e:	ea40 000b 	orr.w	r0, r0, fp
 801b482:	fb12 f30c 	smulbb	r3, r2, ip
 801b486:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b48a:	10db      	asrs	r3, r3, #3
 801b48c:	f1cc 0e10 	rsb	lr, ip, #16
 801b490:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b494:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b498:	ebae 0e02 	sub.w	lr, lr, r2
 801b49c:	ea4b 0101 	orr.w	r1, fp, r1
 801b4a0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b4a4:	4351      	muls	r1, r2
 801b4a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b4a8:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801b4ac:	fb0e 1e00 	mla	lr, lr, r0, r1
 801b4b0:	0410      	lsls	r0, r2, #16
 801b4b2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b4b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801b4ba:	4310      	orrs	r0, r2
 801b4bc:	9a08      	ldr	r2, [sp, #32]
 801b4be:	9908      	ldr	r1, [sp, #32]
 801b4c0:	0412      	lsls	r2, r2, #16
 801b4c2:	fb03 e000 	mla	r0, r3, r0, lr
 801b4c6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b4ca:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801b4ce:	ea42 020e 	orr.w	r2, r2, lr
 801b4d2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801b4d6:	fb03 0302 	mla	r3, r3, r2, r0
 801b4da:	0d5a      	lsrs	r2, r3, #21
 801b4dc:	095b      	lsrs	r3, r3, #5
 801b4de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b4e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801b4e6:	4313      	orrs	r3, r2
 801b4e8:	f8a9 3000 	strh.w	r3, [r9]
 801b4ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b4ee:	441c      	add	r4, r3
 801b4f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b4f2:	f109 0902 	add.w	r9, r9, #2
 801b4f6:	441e      	add	r6, r3
 801b4f8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b4fc:	e784      	b.n	801b408 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b4fe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b500:	441c      	add	r4, r3
 801b502:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b504:	3d01      	subs	r5, #1
 801b506:	441e      	add	r6, r3
 801b508:	3702      	adds	r7, #2
 801b50a:	e761      	b.n	801b3d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b50c:	d01d      	beq.n	801b54a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b50e:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801b510:	1e6b      	subs	r3, r5, #1
 801b512:	fb00 4003 	mla	r0, r0, r3, r4
 801b516:	1400      	asrs	r0, r0, #16
 801b518:	f53f af74 	bmi.w	801b404 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b51c:	3901      	subs	r1, #1
 801b51e:	4288      	cmp	r0, r1
 801b520:	f6bf af70 	bge.w	801b404 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b524:	9924      	ldr	r1, [sp, #144]	; 0x90
 801b526:	fb01 6303 	mla	r3, r1, r3, r6
 801b52a:	141b      	asrs	r3, r3, #16
 801b52c:	f53f af6a 	bmi.w	801b404 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b530:	3a01      	subs	r2, #1
 801b532:	4293      	cmp	r3, r2
 801b534:	f6bf af66 	bge.w	801b404 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b538:	46a9      	mov	r9, r5
 801b53a:	46ba      	mov	sl, r7
 801b53c:	f1b9 0f00 	cmp.w	r9, #0
 801b540:	dc5a      	bgt.n	801b5f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b542:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b546:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801b54a:	9b07      	ldr	r3, [sp, #28]
 801b54c:	2b00      	cmp	r3, #0
 801b54e:	f340 80b8 	ble.w	801b6c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801b552:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801b556:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b55a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801b55e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b560:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801b564:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801b568:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801b56c:	eef0 6a48 	vmov.f32	s13, s16
 801b570:	ee69 7a27 	vmul.f32	s15, s18, s15
 801b574:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b578:	ee37 8a48 	vsub.f32	s16, s14, s16
 801b57c:	ee16 4a90 	vmov	r4, s13
 801b580:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801b584:	eef0 6a68 	vmov.f32	s13, s17
 801b588:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801b58c:	ee18 2a10 	vmov	r2, s16
 801b590:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801b594:	fb92 f3f3 	sdiv	r3, r2, r3
 801b598:	ee18 2a90 	vmov	r2, s17
 801b59c:	9323      	str	r3, [sp, #140]	; 0x8c
 801b59e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b5a0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5a4:	9324      	str	r3, [sp, #144]	; 0x90
 801b5a6:	9b07      	ldr	r3, [sp, #28]
 801b5a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b5aa:	3b01      	subs	r3, #1
 801b5ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b5b0:	9307      	str	r3, [sp, #28]
 801b5b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b5b4:	ee16 6a90 	vmov	r6, s13
 801b5b8:	bf14      	ite	ne
 801b5ba:	461d      	movne	r5, r3
 801b5bc:	4615      	moveq	r5, r2
 801b5be:	eef0 8a67 	vmov.f32	s17, s15
 801b5c2:	eeb0 8a47 	vmov.f32	s16, s14
 801b5c6:	e6f4      	b.n	801b3b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b5c8:	f111 0b01 	adds.w	fp, r1, #1
 801b5cc:	d48e      	bmi.n	801b4ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b5ce:	45de      	cmp	lr, fp
 801b5d0:	db8c      	blt.n	801b4ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b5d2:	f110 0b01 	adds.w	fp, r0, #1
 801b5d6:	d489      	bmi.n	801b4ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b5d8:	455b      	cmp	r3, fp
 801b5da:	db87      	blt.n	801b4ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b5dc:	b21b      	sxth	r3, r3
 801b5de:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801b5e2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801b5e6:	9300      	str	r3, [sp, #0]
 801b5e8:	4642      	mov	r2, r8
 801b5ea:	fa0f f38e 	sxth.w	r3, lr
 801b5ee:	4649      	mov	r1, r9
 801b5f0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b5f2:	f7ff fe2b 	bl	801b24c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801b5f6:	e779      	b.n	801b4ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b5f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b5fa:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b5fe:	1420      	asrs	r0, r4, #16
 801b600:	1431      	asrs	r1, r6, #16
 801b602:	fb03 0101 	mla	r1, r3, r1, r0
 801b606:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801b60a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801b60e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801b612:	8841      	ldrh	r1, [r0, #2]
 801b614:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b618:	f1be 0f00 	cmp.w	lr, #0
 801b61c:	d00b      	beq.n	801b636 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 801b61e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801b622:	3b01      	subs	r3, #1
 801b624:	005b      	lsls	r3, r3, #1
 801b626:	3302      	adds	r3, #2
 801b628:	eb00 0b03 	add.w	fp, r0, r3
 801b62c:	5ac3      	ldrh	r3, [r0, r3]
 801b62e:	930a      	str	r3, [sp, #40]	; 0x28
 801b630:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801b634:	930b      	str	r3, [sp, #44]	; 0x2c
 801b636:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801b63a:	fb12 f30e 	smulbb	r3, r2, lr
 801b63e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801b642:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b646:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801b64a:	10db      	asrs	r3, r3, #3
 801b64c:	ea40 000c 	orr.w	r0, r0, ip
 801b650:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b654:	f1ce 0c10 	rsb	ip, lr, #16
 801b658:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801b65c:	ebac 0c02 	sub.w	ip, ip, r2
 801b660:	ea4b 0101 	orr.w	r1, fp, r1
 801b664:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801b668:	4351      	muls	r1, r2
 801b66a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b66c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801b670:	fb0c 1c00 	mla	ip, ip, r0, r1
 801b674:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801b678:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801b67c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b67e:	990a      	ldr	r1, [sp, #40]	; 0x28
 801b680:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801b684:	0412      	lsls	r2, r2, #16
 801b686:	ea4b 0000 	orr.w	r0, fp, r0
 801b68a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801b68e:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801b692:	fb03 c000 	mla	r0, r3, r0, ip
 801b696:	ea42 0b0b 	orr.w	fp, r2, fp
 801b69a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801b69e:	fb03 000b 	mla	r0, r3, fp, r0
 801b6a2:	0d43      	lsrs	r3, r0, #21
 801b6a4:	0940      	lsrs	r0, r0, #5
 801b6a6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b6aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801b6ae:	4318      	orrs	r0, r3
 801b6b0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801b6b2:	f82a 0b02 	strh.w	r0, [sl], #2
 801b6b6:	441c      	add	r4, r3
 801b6b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b6ba:	f109 39ff 	add.w	r9, r9, #4294967295
 801b6be:	441e      	add	r6, r3
 801b6c0:	e73c      	b.n	801b53c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801b6c2:	b00f      	add	sp, #60	; 0x3c
 801b6c4:	ecbd 8b08 	vpop	{d8-d11}
 801b6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801b6cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6d0:	880e      	ldrh	r6, [r1, #0]
 801b6d2:	b085      	sub	sp, #20
 801b6d4:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801b6d8:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801b6dc:	4690      	mov	r8, r2
 801b6de:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801b6e2:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801b6e6:	9200      	str	r2, [sp, #0]
 801b6e8:	00f6      	lsls	r6, r6, #3
 801b6ea:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801b6ee:	9201      	str	r2, [sp, #4]
 801b6f0:	2c00      	cmp	r4, #0
 801b6f2:	b2f2      	uxtb	r2, r6
 801b6f4:	fb04 5603 	mla	r6, r4, r3, r5
 801b6f8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801b6fc:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801b700:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801b704:	9202      	str	r2, [sp, #8]
 801b706:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801b70a:	db36      	blt.n	801b77a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801b70c:	45a6      	cmp	lr, r4
 801b70e:	dd34      	ble.n	801b77a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 801b710:	2d00      	cmp	r5, #0
 801b712:	db30      	blt.n	801b776 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801b714:	42ab      	cmp	r3, r5
 801b716:	dd2e      	ble.n	801b776 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 801b718:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801b71c:	1c6e      	adds	r6, r5, #1
 801b71e:	d42f      	bmi.n	801b780 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801b720:	42b3      	cmp	r3, r6
 801b722:	dd2d      	ble.n	801b780 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 801b724:	b370      	cbz	r0, 801b784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 801b726:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801b72a:	3401      	adds	r4, #1
 801b72c:	d42e      	bmi.n	801b78c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801b72e:	45a6      	cmp	lr, r4
 801b730:	dd2c      	ble.n	801b78c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 801b732:	b377      	cbz	r7, 801b792 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 801b734:	2d00      	cmp	r5, #0
 801b736:	db27      	blt.n	801b788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801b738:	42ab      	cmp	r3, r5
 801b73a:	dd25      	ble.n	801b788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 801b73c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b740:	3501      	adds	r5, #1
 801b742:	d429      	bmi.n	801b798 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801b744:	42ab      	cmp	r3, r5
 801b746:	dd27      	ble.n	801b798 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801b748:	b340      	cbz	r0, 801b79c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801b74a:	3301      	adds	r3, #1
 801b74c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801b750:	280f      	cmp	r0, #15
 801b752:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801b756:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801b75a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b75e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801b762:	d801      	bhi.n	801b768 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 801b764:	2f0f      	cmp	r7, #15
 801b766:	d91b      	bls.n	801b7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801b768:	4b84      	ldr	r3, [pc, #528]	; (801b97c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 801b76a:	4a85      	ldr	r2, [pc, #532]	; (801b980 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 801b76c:	4885      	ldr	r0, [pc, #532]	; (801b984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801b76e:	f240 210d 	movw	r1, #525	; 0x20d
 801b772:	f003 fe3f 	bl	801f3f4 <__assert_func>
 801b776:	2200      	movs	r2, #0
 801b778:	e7d0      	b.n	801b71c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 801b77a:	2600      	movs	r6, #0
 801b77c:	4632      	mov	r2, r6
 801b77e:	e7d4      	b.n	801b72a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801b780:	2600      	movs	r6, #0
 801b782:	e7d2      	b.n	801b72a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801b784:	4606      	mov	r6, r0
 801b786:	e7d0      	b.n	801b72a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801b788:	2400      	movs	r4, #0
 801b78a:	e7d9      	b.n	801b740 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801b78c:	2300      	movs	r3, #0
 801b78e:	461c      	mov	r4, r3
 801b790:	e7de      	b.n	801b750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801b792:	463b      	mov	r3, r7
 801b794:	463c      	mov	r4, r7
 801b796:	e7db      	b.n	801b750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801b798:	2300      	movs	r3, #0
 801b79a:	e7d9      	b.n	801b750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801b79c:	4603      	mov	r3, r0
 801b79e:	e7d7      	b.n	801b750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801b7a0:	b280      	uxth	r0, r0
 801b7a2:	b2bf      	uxth	r7, r7
 801b7a4:	fb00 fe07 	mul.w	lr, r0, r7
 801b7a8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801b7ac:	0100      	lsls	r0, r0, #4
 801b7ae:	eba0 0c0e 	sub.w	ip, r0, lr
 801b7b2:	b2bf      	uxth	r7, r7
 801b7b4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801b7b8:	fa1f fc8c 	uxth.w	ip, ip
 801b7bc:	1bed      	subs	r5, r5, r7
 801b7be:	b2ad      	uxth	r5, r5
 801b7c0:	fb0c f00a 	mul.w	r0, ip, sl
 801b7c4:	fb05 000b 	mla	r0, r5, fp, r0
 801b7c8:	fb07 0009 	mla	r0, r7, r9, r0
 801b7cc:	fb0e 0008 	mla	r0, lr, r8, r0
 801b7d0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b7d4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b7d8:	9003      	str	r0, [sp, #12]
 801b7da:	d018      	beq.n	801b80e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 801b7dc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b7e0:	fb0b f000 	mul.w	r0, fp, r0
 801b7e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b7e8:	fb0b fb02 	mul.w	fp, fp, r2
 801b7ec:	0a02      	lsrs	r2, r0, #8
 801b7ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b7f2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801b7f6:	4402      	add	r2, r0
 801b7f8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801b7fc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801b800:	0a12      	lsrs	r2, r2, #8
 801b802:	0a00      	lsrs	r0, r0, #8
 801b804:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b808:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b80c:	4302      	orrs	r2, r0
 801b80e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801b812:	d019      	beq.n	801b848 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 801b814:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801b818:	fb0a fb0b 	mul.w	fp, sl, fp
 801b81c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b820:	fb0a fa06 	mul.w	sl, sl, r6
 801b824:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801b828:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b82c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b830:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801b834:	445e      	add	r6, fp
 801b836:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801b83a:	0a36      	lsrs	r6, r6, #8
 801b83c:	0a00      	lsrs	r0, r0, #8
 801b83e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801b842:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b846:	4306      	orrs	r6, r0
 801b848:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801b84c:	d019      	beq.n	801b882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801b84e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801b852:	fb09 fa0a 	mul.w	sl, r9, sl
 801b856:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b85a:	fb09 f904 	mul.w	r9, r9, r4
 801b85e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801b862:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b866:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b86a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801b86e:	4454      	add	r4, sl
 801b870:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801b874:	0a24      	lsrs	r4, r4, #8
 801b876:	0a00      	lsrs	r0, r0, #8
 801b878:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b87c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b880:	4304      	orrs	r4, r0
 801b882:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801b886:	d019      	beq.n	801b8bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 801b888:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801b88c:	fb08 f909 	mul.w	r9, r8, r9
 801b890:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b894:	fb08 f803 	mul.w	r8, r8, r3
 801b898:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801b89c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8a0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801b8a4:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801b8a8:	444b      	add	r3, r9
 801b8aa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801b8ae:	0a1b      	lsrs	r3, r3, #8
 801b8b0:	0a00      	lsrs	r0, r0, #8
 801b8b2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8b6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b8ba:	4303      	orrs	r3, r0
 801b8bc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801b8c0:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801b8c4:	fb0c f808 	mul.w	r8, ip, r8
 801b8c8:	fb05 8800 	mla	r8, r5, r0, r8
 801b8cc:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801b8d0:	fb07 8800 	mla	r8, r7, r0, r8
 801b8d4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801b8d8:	fb0e 8000 	mla	r0, lr, r0, r8
 801b8dc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b8e0:	fb0c f606 	mul.w	r6, ip, r6
 801b8e4:	0a00      	lsrs	r0, r0, #8
 801b8e6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b8ea:	fb05 6202 	mla	r2, r5, r2, r6
 801b8ee:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801b8f2:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 801b8f6:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801b8fa:	fb07 2700 	mla	r7, r7, r0, r2
 801b8fe:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b902:	9b03      	ldr	r3, [sp, #12]
 801b904:	9c00      	ldr	r4, [sp, #0]
 801b906:	b2ad      	uxth	r5, r5
 801b908:	436b      	muls	r3, r5
 801b90a:	fb0e 7000 	mla	r0, lr, r0, r7
 801b90e:	1c5a      	adds	r2, r3, #1
 801b910:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b914:	0a00      	lsrs	r0, r0, #8
 801b916:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b91a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 801b91e:	ea48 0000 	orr.w	r0, r8, r0
 801b922:	b2d2      	uxtb	r2, r2
 801b924:	fb14 f602 	smulbb	r6, r4, r2
 801b928:	0c03      	lsrs	r3, r0, #16
 801b92a:	fb03 6305 	mla	r3, r3, r5, r6
 801b92e:	b29e      	uxth	r6, r3
 801b930:	9b01      	ldr	r3, [sp, #4]
 801b932:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801b936:	fb13 f302 	smulbb	r3, r3, r2
 801b93a:	fb04 3405 	mla	r4, r4, r5, r3
 801b93e:	9b02      	ldr	r3, [sp, #8]
 801b940:	b2c0      	uxtb	r0, r0
 801b942:	fb13 f202 	smulbb	r2, r3, r2
 801b946:	fb00 2005 	mla	r0, r0, r5, r2
 801b94a:	b280      	uxth	r0, r0
 801b94c:	b2a4      	uxth	r4, r4
 801b94e:	1c42      	adds	r2, r0, #1
 801b950:	1c73      	adds	r3, r6, #1
 801b952:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b956:	1c62      	adds	r2, r4, #1
 801b958:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 801b95c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b960:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b964:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b968:	0952      	lsrs	r2, r2, #5
 801b96a:	4303      	orrs	r3, r0
 801b96c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b970:	4313      	orrs	r3, r2
 801b972:	800b      	strh	r3, [r1, #0]
 801b974:	b005      	add	sp, #20
 801b976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b97a:	bf00      	nop
 801b97c:	08024033 	.word	0x08024033
 801b980:	080245f1 	.word	0x080245f1
 801b984:	0802411c 	.word	0x0802411c

0801b988 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b988:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b98c:	ed2d 8b08 	vpush	{d8-d11}
 801b990:	b09d      	sub	sp, #116	; 0x74
 801b992:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 801b996:	9219      	str	r2, [sp, #100]	; 0x64
 801b998:	9307      	str	r3, [sp, #28]
 801b99a:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 801b99c:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801b9a0:	931a      	str	r3, [sp, #104]	; 0x68
 801b9a2:	9117      	str	r1, [sp, #92]	; 0x5c
 801b9a4:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 801b9a8:	901b      	str	r0, [sp, #108]	; 0x6c
 801b9aa:	6850      	ldr	r0, [r2, #4]
 801b9ac:	6812      	ldr	r2, [r2, #0]
 801b9ae:	fb00 1303 	mla	r3, r0, r3, r1
 801b9b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b9b6:	930a      	str	r3, [sp, #40]	; 0x28
 801b9b8:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b9ba:	681b      	ldr	r3, [r3, #0]
 801b9bc:	9310      	str	r3, [sp, #64]	; 0x40
 801b9be:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b9c2:	930b      	str	r3, [sp, #44]	; 0x2c
 801b9c4:	eeb0 aa40 	vmov.f32	s20, s0
 801b9c8:	eef0 9a60 	vmov.f32	s19, s1
 801b9cc:	eeb0 9a41 	vmov.f32	s18, s2
 801b9d0:	eeb0 8a62 	vmov.f32	s16, s5
 801b9d4:	eef0 8a43 	vmov.f32	s17, s6
 801b9d8:	eef0 ba44 	vmov.f32	s23, s8
 801b9dc:	eeb0 ba64 	vmov.f32	s22, s9
 801b9e0:	eef0 aa45 	vmov.f32	s21, s10
 801b9e4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b9e6:	2b00      	cmp	r3, #0
 801b9e8:	dc03      	bgt.n	801b9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801b9ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b9ec:	2b00      	cmp	r3, #0
 801b9ee:	f340 837b 	ble.w	801c0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801b9f2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801b9f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b9f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b9fc:	1e48      	subs	r0, r1, #1
 801b9fe:	1e57      	subs	r7, r2, #1
 801ba00:	9b07      	ldr	r3, [sp, #28]
 801ba02:	2b00      	cmp	r3, #0
 801ba04:	f340 8194 	ble.w	801bd30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801ba08:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ba0c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ba10:	d406      	bmi.n	801ba20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ba12:	4584      	cmp	ip, r0
 801ba14:	da04      	bge.n	801ba20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ba16:	2b00      	cmp	r3, #0
 801ba18:	db02      	blt.n	801ba20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ba1a:	42bb      	cmp	r3, r7
 801ba1c:	f2c0 8189 	blt.w	801bd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801ba20:	f11c 0c01 	adds.w	ip, ip, #1
 801ba24:	f100 8179 	bmi.w	801bd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801ba28:	4561      	cmp	r1, ip
 801ba2a:	f2c0 8176 	blt.w	801bd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801ba2e:	3301      	adds	r3, #1
 801ba30:	f100 8173 	bmi.w	801bd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801ba34:	429a      	cmp	r2, r3
 801ba36:	f2c0 8170 	blt.w	801bd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 801ba3a:	9b07      	ldr	r3, [sp, #28]
 801ba3c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ba3e:	9318      	str	r3, [sp, #96]	; 0x60
 801ba40:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ba42:	2b00      	cmp	r3, #0
 801ba44:	f340 8192 	ble.w	801bd6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801ba48:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801ba4a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801ba4c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ba50:	689b      	ldr	r3, [r3, #8]
 801ba52:	1422      	asrs	r2, r4, #16
 801ba54:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ba58:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ba5c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ba60:	f100 81d3 	bmi.w	801be0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ba64:	f103 38ff 	add.w	r8, r3, #4294967295
 801ba68:	4542      	cmp	r2, r8
 801ba6a:	f280 81ce 	bge.w	801be0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ba6e:	f1bc 0f00 	cmp.w	ip, #0
 801ba72:	f2c0 81ca 	blt.w	801be0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ba76:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ba7a:	45c4      	cmp	ip, r8
 801ba7c:	f280 81c5 	bge.w	801be0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 801ba80:	b21b      	sxth	r3, r3
 801ba82:	fb0c 2203 	mla	r2, ip, r3, r2
 801ba86:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ba88:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ba8c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ba90:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ba94:	2800      	cmp	r0, #0
 801ba96:	f000 81af 	beq.w	801bdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 801ba9a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ba9e:	950c      	str	r5, [sp, #48]	; 0x30
 801baa0:	0e2d      	lsrs	r5, r5, #24
 801baa2:	9513      	str	r5, [sp, #76]	; 0x4c
 801baa4:	b181      	cbz	r1, 801bac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801baa6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801baaa:	3b01      	subs	r3, #1
 801baac:	009b      	lsls	r3, r3, #2
 801baae:	3304      	adds	r3, #4
 801bab0:	eb08 0c03 	add.w	ip, r8, r3
 801bab4:	f858 3003 	ldr.w	r3, [r8, r3]
 801bab8:	9308      	str	r3, [sp, #32]
 801baba:	0e1b      	lsrs	r3, r3, #24
 801babc:	9311      	str	r3, [sp, #68]	; 0x44
 801babe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801bac2:	930d      	str	r3, [sp, #52]	; 0x34
 801bac4:	0e1b      	lsrs	r3, r3, #24
 801bac6:	9314      	str	r3, [sp, #80]	; 0x50
 801bac8:	b280      	uxth	r0, r0
 801baca:	b289      	uxth	r1, r1
 801bacc:	fb00 f901 	mul.w	r9, r0, r1
 801bad0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801bad4:	0100      	lsls	r0, r0, #4
 801bad6:	eba0 0809 	sub.w	r8, r0, r9
 801bada:	b289      	uxth	r1, r1
 801badc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801bae0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bae2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bae4:	fa1f f888 	uxth.w	r8, r8
 801bae8:	1a5b      	subs	r3, r3, r1
 801baea:	b29b      	uxth	r3, r3
 801baec:	fb08 f000 	mul.w	r0, r8, r0
 801baf0:	fb03 000e 	mla	r0, r3, lr, r0
 801baf4:	fb01 0005 	mla	r0, r1, r5, r0
 801baf8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bafa:	fb09 0005 	mla	r0, r9, r5, r0
 801bafe:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801bb02:	2800      	cmp	r0, #0
 801bb04:	f000 8100 	beq.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801bb08:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bb0c:	d01b      	beq.n	801bb46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 801bb0e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801bb12:	fb0e fa0a 	mul.w	sl, lr, sl
 801bb16:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bb1a:	fb0e fe02 	mul.w	lr, lr, r2
 801bb1e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801bb22:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bb26:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bb2a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bb2e:	4452      	add	r2, sl
 801bb30:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bb34:	0a12      	lsrs	r2, r2, #8
 801bb36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801bb3e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bb42:	ea42 020c 	orr.w	r2, r2, ip
 801bb46:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb48:	2dff      	cmp	r5, #255	; 0xff
 801bb4a:	d021      	beq.n	801bb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801bb4c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bb4e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bb52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb54:	fb05 fb0b 	mul.w	fp, r5, fp
 801bb58:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bb5a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bb5e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801bb60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bb64:	fb05 fa0a 	mul.w	sl, r5, sl
 801bb68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bb6c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bb70:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bb74:	44de      	add	lr, fp
 801bb76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bb7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bb7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bb86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bb8a:	ea4e 050a 	orr.w	r5, lr, sl
 801bb8e:	950c      	str	r5, [sp, #48]	; 0x30
 801bb90:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bb92:	2dff      	cmp	r5, #255	; 0xff
 801bb94:	d021      	beq.n	801bbda <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801bb96:	9d08      	ldr	r5, [sp, #32]
 801bb98:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bb9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bb9e:	fb05 fb0b 	mul.w	fp, r5, fp
 801bba2:	9d08      	ldr	r5, [sp, #32]
 801bba4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bba8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bbaa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bbae:	fb05 fa0a 	mul.w	sl, r5, sl
 801bbb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bbb6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bbba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bbbe:	44de      	add	lr, fp
 801bbc0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bbc4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bbc8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbcc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bbd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bbd4:	ea4e 050a 	orr.w	r5, lr, sl
 801bbd8:	9508      	str	r5, [sp, #32]
 801bbda:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bbdc:	2dff      	cmp	r5, #255	; 0xff
 801bbde:	d021      	beq.n	801bc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801bbe0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bbe2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801bbe6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bbe8:	fb05 fb0b 	mul.w	fp, r5, fp
 801bbec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bbee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bbf2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801bbf4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bbf8:	fb05 fa0a 	mul.w	sl, r5, sl
 801bbfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc00:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bc04:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bc08:	44de      	add	lr, fp
 801bc0a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bc1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc1e:	ea4e 050a 	orr.w	r5, lr, sl
 801bc22:	950d      	str	r5, [sp, #52]	; 0x34
 801bc24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bc26:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801bc2a:	9d08      	ldr	r5, [sp, #32]
 801bc2c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801bc30:	fb08 fc0c 	mul.w	ip, r8, ip
 801bc34:	fb03 cc0e 	mla	ip, r3, lr, ip
 801bc38:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801bc3c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801bc3e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801bc42:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801bc46:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bc48:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bc4c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801bc50:	fb08 f80e 	mul.w	r8, r8, lr
 801bc54:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801bc58:	fb03 8202 	mla	r2, r3, r2, r8
 801bc5c:	9b08      	ldr	r3, [sp, #32]
 801bc5e:	f8b7 e000 	ldrh.w	lr, [r7]
 801bc62:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801bc64:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801bc68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bc6a:	fb01 220a 	mla	r2, r1, sl, r2
 801bc6e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801bc72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801bc74:	fb09 2901 	mla	r9, r9, r1, r2
 801bc78:	4343      	muls	r3, r0
 801bc7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc7e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bc82:	1c58      	adds	r0, r3, #1
 801bc84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc88:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bc8c:	ea4c 0c09 	orr.w	ip, ip, r9
 801bc90:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bc94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bc96:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801bc9a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801bc9e:	ea4f 232e 	mov.w	r3, lr, asr #8
 801bca2:	b2c0      	uxtb	r0, r0
 801bca4:	fb11 f102 	smulbb	r1, r1, r2
 801bca8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bcac:	fb03 1300 	mla	r3, r3, r0, r1
 801bcb0:	b299      	uxth	r1, r3
 801bcb2:	ea4f 02ee 	mov.w	r2, lr, asr #3
 801bcb6:	f3cc 2307 	ubfx	r3, ip, #8, #8
 801bcba:	fb13 f305 	smulbb	r3, r3, r5
 801bcbe:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801bcc2:	fb02 3200 	mla	r2, r2, r0, r3
 801bcc6:	fa5f fc8c 	uxtb.w	ip, ip
 801bcca:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 801bcce:	b2db      	uxtb	r3, r3
 801bcd0:	fb1c fc05 	smulbb	ip, ip, r5
 801bcd4:	fb03 cc00 	mla	ip, r3, r0, ip
 801bcd8:	b292      	uxth	r2, r2
 801bcda:	fa1f fc8c 	uxth.w	ip, ip
 801bcde:	1c4b      	adds	r3, r1, #1
 801bce0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bce4:	f10c 0001 	add.w	r0, ip, #1
 801bce8:	1c51      	adds	r1, r2, #1
 801bcea:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801bcee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bcf2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801bcf6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bcfa:	0952      	lsrs	r2, r2, #5
 801bcfc:	ea43 030c 	orr.w	r3, r3, ip
 801bd00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd04:	4313      	orrs	r3, r2
 801bd06:	803b      	strh	r3, [r7, #0]
 801bd08:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801bd0a:	441c      	add	r4, r3
 801bd0c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bd0e:	441e      	add	r6, r3
 801bd10:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bd12:	3b01      	subs	r3, #1
 801bd14:	3702      	adds	r7, #2
 801bd16:	9318      	str	r3, [sp, #96]	; 0x60
 801bd18:	e692      	b.n	801ba40 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801bd1a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801bd1c:	441c      	add	r4, r3
 801bd1e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801bd20:	441e      	add	r6, r3
 801bd22:	9b07      	ldr	r3, [sp, #28]
 801bd24:	3b01      	subs	r3, #1
 801bd26:	9307      	str	r3, [sp, #28]
 801bd28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd2a:	3302      	adds	r3, #2
 801bd2c:	930a      	str	r3, [sp, #40]	; 0x28
 801bd2e:	e667      	b.n	801ba00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd30:	d023      	beq.n	801bd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801bd32:	9b07      	ldr	r3, [sp, #28]
 801bd34:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801bd36:	3b01      	subs	r3, #1
 801bd38:	fb00 4003 	mla	r0, r0, r3, r4
 801bd3c:	1400      	asrs	r0, r0, #16
 801bd3e:	f53f ae7c 	bmi.w	801ba3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bd42:	3901      	subs	r1, #1
 801bd44:	4288      	cmp	r0, r1
 801bd46:	f6bf ae78 	bge.w	801ba3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bd4a:	9932      	ldr	r1, [sp, #200]	; 0xc8
 801bd4c:	fb01 6303 	mla	r3, r1, r3, r6
 801bd50:	141b      	asrs	r3, r3, #16
 801bd52:	f53f ae72 	bmi.w	801ba3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bd56:	3a01      	subs	r2, #1
 801bd58:	4293      	cmp	r3, r2
 801bd5a:	f6bf ae6e 	bge.w	801ba3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801bd5e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bd62:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bd66:	f1bb 0f00 	cmp.w	fp, #0
 801bd6a:	dc6c      	bgt.n	801be46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 801bd6c:	9b07      	ldr	r3, [sp, #28]
 801bd6e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bd72:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bd74:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801bd78:	930a      	str	r3, [sp, #40]	; 0x28
 801bd7a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bd7c:	2b00      	cmp	r3, #0
 801bd7e:	f340 81b3 	ble.w	801c0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801bd82:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801bd86:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bd8a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801bd8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bd90:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801bd94:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801bd98:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801bd9c:	eef0 6a48 	vmov.f32	s13, s16
 801bda0:	ee69 7a27 	vmul.f32	s15, s18, s15
 801bda4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bda8:	ee37 8a48 	vsub.f32	s16, s14, s16
 801bdac:	ee16 4a90 	vmov	r4, s13
 801bdb0:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801bdb4:	eef0 6a68 	vmov.f32	s13, s17
 801bdb8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801bdbc:	ee18 2a10 	vmov	r2, s16
 801bdc0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801bdc4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdc8:	ee18 2a90 	vmov	r2, s17
 801bdcc:	9331      	str	r3, [sp, #196]	; 0xc4
 801bdce:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bdd0:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdd4:	9332      	str	r3, [sp, #200]	; 0xc8
 801bdd6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bdd8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801bdda:	3b01      	subs	r3, #1
 801bddc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bde0:	9317      	str	r3, [sp, #92]	; 0x5c
 801bde2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801bde4:	bf08      	it	eq
 801bde6:	4613      	moveq	r3, r2
 801bde8:	ee16 6a90 	vmov	r6, s13
 801bdec:	9307      	str	r3, [sp, #28]
 801bdee:	eef0 8a67 	vmov.f32	s17, s15
 801bdf2:	eeb0 8a47 	vmov.f32	s16, s14
 801bdf6:	e5f5      	b.n	801b9e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801bdf8:	2900      	cmp	r1, #0
 801bdfa:	f43f ae65 	beq.w	801bac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801bdfe:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801be02:	9308      	str	r3, [sp, #32]
 801be04:	0e1b      	lsrs	r3, r3, #24
 801be06:	9311      	str	r3, [sp, #68]	; 0x44
 801be08:	e65e      	b.n	801bac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 801be0a:	f112 0801 	adds.w	r8, r2, #1
 801be0e:	f53f af7b 	bmi.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801be12:	4543      	cmp	r3, r8
 801be14:	f6ff af78 	blt.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801be18:	f11c 0801 	adds.w	r8, ip, #1
 801be1c:	f53f af74 	bmi.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801be20:	45c6      	cmp	lr, r8
 801be22:	f6ff af71 	blt.w	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801be26:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801be28:	9201      	str	r2, [sp, #4]
 801be2a:	fa0f f28e 	sxth.w	r2, lr
 801be2e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801be32:	e9cd c002 	strd	ip, r0, [sp, #8]
 801be36:	9200      	str	r2, [sp, #0]
 801be38:	b21b      	sxth	r3, r3
 801be3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be3c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801be3e:	4639      	mov	r1, r7
 801be40:	f7ff fc44 	bl	801b6cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801be44:	e760      	b.n	801bd08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 801be46:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801be48:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801be4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be4e:	1427      	asrs	r7, r4, #16
 801be50:	1433      	asrs	r3, r6, #16
 801be52:	fb01 7303 	mla	r3, r1, r3, r7
 801be56:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801be5a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801be5e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801be62:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801be66:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801be6a:	2a00      	cmp	r2, #0
 801be6c:	f000 8133 	beq.w	801c0d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 801be70:	687d      	ldr	r5, [r7, #4]
 801be72:	950e      	str	r5, [sp, #56]	; 0x38
 801be74:	0e2d      	lsrs	r5, r5, #24
 801be76:	9515      	str	r5, [sp, #84]	; 0x54
 801be78:	b178      	cbz	r0, 801be9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801be7a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801be7e:	3901      	subs	r1, #1
 801be80:	0089      	lsls	r1, r1, #2
 801be82:	3104      	adds	r1, #4
 801be84:	eb07 0e01 	add.w	lr, r7, r1
 801be88:	5879      	ldr	r1, [r7, r1]
 801be8a:	9109      	str	r1, [sp, #36]	; 0x24
 801be8c:	0e09      	lsrs	r1, r1, #24
 801be8e:	9112      	str	r1, [sp, #72]	; 0x48
 801be90:	f8de 1004 	ldr.w	r1, [lr, #4]
 801be94:	910f      	str	r1, [sp, #60]	; 0x3c
 801be96:	0e09      	lsrs	r1, r1, #24
 801be98:	9116      	str	r1, [sp, #88]	; 0x58
 801be9a:	b292      	uxth	r2, r2
 801be9c:	b280      	uxth	r0, r0
 801be9e:	fb02 f800 	mul.w	r8, r2, r0
 801bea2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bea6:	0112      	lsls	r2, r2, #4
 801bea8:	eba2 0e08 	sub.w	lr, r2, r8
 801beac:	b280      	uxth	r0, r0
 801beae:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801beb2:	9915      	ldr	r1, [sp, #84]	; 0x54
 801beb4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801beb6:	fa1f fe8e 	uxth.w	lr, lr
 801beba:	1a12      	subs	r2, r2, r0
 801bebc:	b292      	uxth	r2, r2
 801bebe:	fb0e f101 	mul.w	r1, lr, r1
 801bec2:	fb02 110c 	mla	r1, r2, ip, r1
 801bec6:	fb00 1105 	mla	r1, r0, r5, r1
 801beca:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801becc:	fb08 1105 	mla	r1, r8, r5, r1
 801bed0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bed4:	2900      	cmp	r1, #0
 801bed6:	f000 80f5 	beq.w	801c0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 801beda:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bede:	d019      	beq.n	801bf14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801bee0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bee4:	fb0c fa0a 	mul.w	sl, ip, sl
 801bee8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801beec:	fb0c fc03 	mul.w	ip, ip, r3
 801bef0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bef4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bef8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801befc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bf00:	4453      	add	r3, sl
 801bf02:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bf06:	0a1b      	lsrs	r3, r3, #8
 801bf08:	0a3f      	lsrs	r7, r7, #8
 801bf0a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bf0e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bf12:	433b      	orrs	r3, r7
 801bf14:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bf16:	2dff      	cmp	r5, #255	; 0xff
 801bf18:	d020      	beq.n	801bf5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801bf1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf1c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bf20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bf22:	436f      	muls	r7, r5
 801bf24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bf26:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bf2a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801bf2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf30:	fb05 fa0a 	mul.w	sl, r5, sl
 801bf34:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bf38:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf3c:	44bc      	add	ip, r7
 801bf3e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bf42:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bf46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf4e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf52:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bf56:	ea4c 050a 	orr.w	r5, ip, sl
 801bf5a:	950e      	str	r5, [sp, #56]	; 0x38
 801bf5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bf5e:	2dff      	cmp	r5, #255	; 0xff
 801bf60:	d020      	beq.n	801bfa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801bf62:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bf64:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bf68:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bf6a:	436f      	muls	r7, r5
 801bf6c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bf6e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bf72:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bf74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf78:	fb05 fa0a 	mul.w	sl, r5, sl
 801bf7c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bf80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf84:	44bc      	add	ip, r7
 801bf86:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bf8a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bf8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bf9e:	ea4c 050a 	orr.w	r5, ip, sl
 801bfa2:	9509      	str	r5, [sp, #36]	; 0x24
 801bfa4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bfa6:	2dff      	cmp	r5, #255	; 0xff
 801bfa8:	d020      	beq.n	801bfec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801bfaa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bfac:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bfb0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bfb2:	436f      	muls	r7, r5
 801bfb4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bfb6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801bfba:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bfbc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bfc0:	fb05 fa0a 	mul.w	sl, r5, sl
 801bfc4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bfc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bfcc:	44bc      	add	ip, r7
 801bfce:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bfd2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bfd6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bfda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfde:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bfe2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bfe6:	ea4c 050a 	orr.w	r5, ip, sl
 801bfea:	950f      	str	r5, [sp, #60]	; 0x3c
 801bfec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801bfee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801bff2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801bff4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bff8:	fb0e f707 	mul.w	r7, lr, r7
 801bffc:	fb02 770c 	mla	r7, r2, ip, r7
 801c000:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c004:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c006:	fb00 770c 	mla	r7, r0, ip, r7
 801c00a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c00e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c010:	fb08 770c 	mla	r7, r8, ip, r7
 801c014:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801c018:	fb0e fe0c 	mul.w	lr, lr, ip
 801c01c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c020:	fb02 e303 	mla	r3, r2, r3, lr
 801c024:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c026:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c028:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c02c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c02e:	fb00 330a 	mla	r3, r0, sl, r3
 801c032:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801c036:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c03a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c03c:	f8b9 0000 	ldrh.w	r0, [r9]
 801c040:	4359      	muls	r1, r3
 801c042:	0a3f      	lsrs	r7, r7, #8
 801c044:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c048:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c04c:	1c4b      	adds	r3, r1, #1
 801c04e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c052:	ea47 070c 	orr.w	r7, r7, ip
 801c056:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c05a:	1202      	asrs	r2, r0, #8
 801c05c:	0c3b      	lsrs	r3, r7, #16
 801c05e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801c062:	b2c9      	uxtb	r1, r1
 801c064:	fb13 f305 	smulbb	r3, r3, r5
 801c068:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c06c:	fb02 3201 	mla	r2, r2, r1, r3
 801c070:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801c074:	10c3      	asrs	r3, r0, #3
 801c076:	b2ff      	uxtb	r7, r7
 801c078:	00c0      	lsls	r0, r0, #3
 801c07a:	b2c0      	uxtb	r0, r0
 801c07c:	fb17 f705 	smulbb	r7, r7, r5
 801c080:	fb00 7001 	mla	r0, r0, r1, r7
 801c084:	b292      	uxth	r2, r2
 801c086:	fb1c fc05 	smulbb	ip, ip, r5
 801c08a:	b280      	uxth	r0, r0
 801c08c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c090:	fb03 c301 	mla	r3, r3, r1, ip
 801c094:	1c51      	adds	r1, r2, #1
 801c096:	f100 0c01 	add.w	ip, r0, #1
 801c09a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c09e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801c0a2:	b29b      	uxth	r3, r3
 801c0a4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c0a8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801c0ac:	ea42 020c 	orr.w	r2, r2, ip
 801c0b0:	f103 0c01 	add.w	ip, r3, #1
 801c0b4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801c0b8:	095b      	lsrs	r3, r3, #5
 801c0ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c0be:	431a      	orrs	r2, r3
 801c0c0:	f8a9 2000 	strh.w	r2, [r9]
 801c0c4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801c0c6:	441c      	add	r4, r3
 801c0c8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801c0ca:	f109 0902 	add.w	r9, r9, #2
 801c0ce:	441e      	add	r6, r3
 801c0d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c0d4:	e647      	b.n	801bd66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801c0d6:	2800      	cmp	r0, #0
 801c0d8:	f43f aedf 	beq.w	801be9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801c0dc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801c0e0:	9109      	str	r1, [sp, #36]	; 0x24
 801c0e2:	0e09      	lsrs	r1, r1, #24
 801c0e4:	9112      	str	r1, [sp, #72]	; 0x48
 801c0e6:	e6d8      	b.n	801be9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801c0e8:	b01d      	add	sp, #116	; 0x74
 801c0ea:	ecbd 8b08 	vpop	{d8-d11}
 801c0ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801c0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801c0f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0f8:	880e      	ldrh	r6, [r1, #0]
 801c0fa:	b085      	sub	sp, #20
 801c0fc:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801c100:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801c104:	4690      	mov	r8, r2
 801c106:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801c10a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801c10e:	9200      	str	r2, [sp, #0]
 801c110:	00f6      	lsls	r6, r6, #3
 801c112:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 801c116:	9201      	str	r2, [sp, #4]
 801c118:	2c00      	cmp	r4, #0
 801c11a:	b2f2      	uxtb	r2, r6
 801c11c:	fb04 5603 	mla	r6, r4, r3, r5
 801c120:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801c124:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 801c128:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801c12c:	9202      	str	r2, [sp, #8]
 801c12e:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 801c132:	db36      	blt.n	801c1a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801c134:	45a6      	cmp	lr, r4
 801c136:	dd34      	ble.n	801c1a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 801c138:	2d00      	cmp	r5, #0
 801c13a:	db30      	blt.n	801c19e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801c13c:	42ab      	cmp	r3, r5
 801c13e:	dd2e      	ble.n	801c19e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 801c140:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 801c144:	1c6e      	adds	r6, r5, #1
 801c146:	d42f      	bmi.n	801c1a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801c148:	42b3      	cmp	r3, r6
 801c14a:	dd2d      	ble.n	801c1a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 801c14c:	b370      	cbz	r0, 801c1ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 801c14e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 801c152:	3401      	adds	r4, #1
 801c154:	d42e      	bmi.n	801c1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801c156:	45a6      	cmp	lr, r4
 801c158:	dd2c      	ble.n	801c1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 801c15a:	b377      	cbz	r7, 801c1ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 801c15c:	2d00      	cmp	r5, #0
 801c15e:	db27      	blt.n	801c1b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801c160:	42ab      	cmp	r3, r5
 801c162:	dd25      	ble.n	801c1b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 801c164:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801c168:	3501      	adds	r5, #1
 801c16a:	d429      	bmi.n	801c1c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801c16c:	42ab      	cmp	r3, r5
 801c16e:	dd27      	ble.n	801c1c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801c170:	b340      	cbz	r0, 801c1c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801c172:	3301      	adds	r3, #1
 801c174:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801c178:	280f      	cmp	r0, #15
 801c17a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801c17e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801c182:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c186:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801c18a:	d801      	bhi.n	801c190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 801c18c:	2f0f      	cmp	r7, #15
 801c18e:	d91b      	bls.n	801c1c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 801c190:	4b7d      	ldr	r3, [pc, #500]	; (801c388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 801c192:	4a7e      	ldr	r2, [pc, #504]	; (801c38c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801c194:	487e      	ldr	r0, [pc, #504]	; (801c390 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801c196:	f240 210d 	movw	r1, #525	; 0x20d
 801c19a:	f003 f92b 	bl	801f3f4 <__assert_func>
 801c19e:	2200      	movs	r2, #0
 801c1a0:	e7d0      	b.n	801c144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801c1a2:	2600      	movs	r6, #0
 801c1a4:	4632      	mov	r2, r6
 801c1a6:	e7d4      	b.n	801c152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801c1a8:	2600      	movs	r6, #0
 801c1aa:	e7d2      	b.n	801c152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801c1ac:	4606      	mov	r6, r0
 801c1ae:	e7d0      	b.n	801c152 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801c1b0:	2400      	movs	r4, #0
 801c1b2:	e7d9      	b.n	801c168 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 801c1b4:	2300      	movs	r3, #0
 801c1b6:	461c      	mov	r4, r3
 801c1b8:	e7de      	b.n	801c178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801c1ba:	463b      	mov	r3, r7
 801c1bc:	463c      	mov	r4, r7
 801c1be:	e7db      	b.n	801c178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801c1c0:	2300      	movs	r3, #0
 801c1c2:	e7d9      	b.n	801c178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801c1c4:	4603      	mov	r3, r0
 801c1c6:	e7d7      	b.n	801c178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801c1c8:	b280      	uxth	r0, r0
 801c1ca:	b2bf      	uxth	r7, r7
 801c1cc:	fb00 fe07 	mul.w	lr, r0, r7
 801c1d0:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801c1d4:	0100      	lsls	r0, r0, #4
 801c1d6:	eba0 0c0e 	sub.w	ip, r0, lr
 801c1da:	b2bf      	uxth	r7, r7
 801c1dc:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801c1e0:	fa1f fc8c 	uxth.w	ip, ip
 801c1e4:	1bed      	subs	r5, r5, r7
 801c1e6:	b2ad      	uxth	r5, r5
 801c1e8:	fb0c f00a 	mul.w	r0, ip, sl
 801c1ec:	fb05 000b 	mla	r0, r5, fp, r0
 801c1f0:	fb07 0009 	mla	r0, r7, r9, r0
 801c1f4:	fb0e 0008 	mla	r0, lr, r8, r0
 801c1f8:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c1fc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801c200:	9003      	str	r0, [sp, #12]
 801c202:	d018      	beq.n	801c236 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 801c204:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801c208:	fb0b f000 	mul.w	r0, fp, r0
 801c20c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c210:	fb0b fb02 	mul.w	fp, fp, r2
 801c214:	0a02      	lsrs	r2, r0, #8
 801c216:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c21a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801c21e:	4402      	add	r2, r0
 801c220:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 801c224:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c228:	0a12      	lsrs	r2, r2, #8
 801c22a:	0a00      	lsrs	r0, r0, #8
 801c22c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c230:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c234:	4302      	orrs	r2, r0
 801c236:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c23a:	d019      	beq.n	801c270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 801c23c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801c240:	fb0a fb0b 	mul.w	fp, sl, fp
 801c244:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c248:	fb0a fa06 	mul.w	sl, sl, r6
 801c24c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801c250:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801c254:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c258:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 801c25c:	445e      	add	r6, fp
 801c25e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c262:	0a36      	lsrs	r6, r6, #8
 801c264:	0a00      	lsrs	r0, r0, #8
 801c266:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801c26a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c26e:	4306      	orrs	r6, r0
 801c270:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c274:	d019      	beq.n	801c2aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801c276:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801c27a:	fb09 fa0a 	mul.w	sl, r9, sl
 801c27e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801c282:	fb09 f904 	mul.w	r9, r9, r4
 801c286:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801c28a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801c28e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c292:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801c296:	4454      	add	r4, sl
 801c298:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801c29c:	0a24      	lsrs	r4, r4, #8
 801c29e:	0a00      	lsrs	r0, r0, #8
 801c2a0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801c2a4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c2a8:	4304      	orrs	r4, r0
 801c2aa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c2ae:	d019      	beq.n	801c2e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 801c2b0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801c2b4:	fb08 f909 	mul.w	r9, r8, r9
 801c2b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c2bc:	fb08 f803 	mul.w	r8, r8, r3
 801c2c0:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801c2c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c2c8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801c2cc:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801c2d0:	444b      	add	r3, r9
 801c2d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c2d6:	0a1b      	lsrs	r3, r3, #8
 801c2d8:	0a00      	lsrs	r0, r0, #8
 801c2da:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c2de:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c2e2:	4303      	orrs	r3, r0
 801c2e4:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801c2e8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801c2ec:	fb0c f808 	mul.w	r8, ip, r8
 801c2f0:	fb05 8800 	mla	r8, r5, r0, r8
 801c2f4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801c2f8:	fb07 8800 	mla	r8, r7, r0, r8
 801c2fc:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801c300:	fb0e 8000 	mla	r0, lr, r0, r8
 801c304:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c308:	0a00      	lsrs	r0, r0, #8
 801c30a:	fb0c f606 	mul.w	r6, ip, r6
 801c30e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c312:	fb05 6202 	mla	r2, r5, r2, r6
 801c316:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801c31a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801c31e:	fb07 2700 	mla	r7, r7, r0, r2
 801c322:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801c326:	9b03      	ldr	r3, [sp, #12]
 801c328:	9c02      	ldr	r4, [sp, #8]
 801c32a:	9d01      	ldr	r5, [sp, #4]
 801c32c:	fb0e 7000 	mla	r0, lr, r0, r7
 801c330:	43da      	mvns	r2, r3
 801c332:	9b00      	ldr	r3, [sp, #0]
 801c334:	b2d2      	uxtb	r2, r2
 801c336:	0a00      	lsrs	r0, r0, #8
 801c338:	4353      	muls	r3, r2
 801c33a:	4354      	muls	r4, r2
 801c33c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c340:	ea48 0000 	orr.w	r0, r8, r0
 801c344:	4355      	muls	r5, r2
 801c346:	4622      	mov	r2, r4
 801c348:	1c5c      	adds	r4, r3, #1
 801c34a:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 801c34e:	0c03      	lsrs	r3, r0, #16
 801c350:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c354:	4b0f      	ldr	r3, [pc, #60]	; (801c394 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801c356:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 801c35a:	1c54      	adds	r4, r2, #1
 801c35c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 801c360:	b2c2      	uxtb	r2, r0
 801c362:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c366:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 801c36a:	1c6a      	adds	r2, r5, #1
 801c36c:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801c370:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c374:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c378:	00c0      	lsls	r0, r0, #3
 801c37a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c37e:	4318      	orrs	r0, r3
 801c380:	8008      	strh	r0, [r1, #0]
 801c382:	b005      	add	sp, #20
 801c384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c388:	08024033 	.word	0x08024033
 801c38c:	080245f1 	.word	0x080245f1
 801c390:	0802411c 	.word	0x0802411c
 801c394:	fffff800 	.word	0xfffff800

0801c398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c398:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c39c:	ed2d 8b08 	vpush	{d8-d11}
 801c3a0:	b09b      	sub	sp, #108	; 0x6c
 801c3a2:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801c3a6:	9218      	str	r2, [sp, #96]	; 0x60
 801c3a8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801c3aa:	9116      	str	r1, [sp, #88]	; 0x58
 801c3ac:	9307      	str	r3, [sp, #28]
 801c3ae:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801c3b2:	9019      	str	r0, [sp, #100]	; 0x64
 801c3b4:	6850      	ldr	r0, [r2, #4]
 801c3b6:	6812      	ldr	r2, [r2, #0]
 801c3b8:	fb00 1303 	mla	r3, r0, r3, r1
 801c3bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c3c0:	930a      	str	r3, [sp, #40]	; 0x28
 801c3c2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c3c4:	681b      	ldr	r3, [r3, #0]
 801c3c6:	930f      	str	r3, [sp, #60]	; 0x3c
 801c3c8:	eeb0 aa40 	vmov.f32	s20, s0
 801c3cc:	eef0 9a60 	vmov.f32	s19, s1
 801c3d0:	eeb0 9a41 	vmov.f32	s18, s2
 801c3d4:	eeb0 8a62 	vmov.f32	s16, s5
 801c3d8:	eef0 8a43 	vmov.f32	s17, s6
 801c3dc:	eef0 ba44 	vmov.f32	s23, s8
 801c3e0:	eeb0 ba64 	vmov.f32	s22, s9
 801c3e4:	eef0 aa45 	vmov.f32	s21, s10
 801c3e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c3ea:	2b00      	cmp	r3, #0
 801c3ec:	dc03      	bgt.n	801c3f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c3ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c3f0:	2b00      	cmp	r3, #0
 801c3f2:	f340 838a 	ble.w	801cb0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801c3f6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c3f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c3fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c400:	1e48      	subs	r0, r1, #1
 801c402:	1e57      	subs	r7, r2, #1
 801c404:	9b07      	ldr	r3, [sp, #28]
 801c406:	2b00      	cmp	r3, #0
 801c408:	f340 818b 	ble.w	801c722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c40c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c410:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c414:	d406      	bmi.n	801c424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c416:	4584      	cmp	ip, r0
 801c418:	da04      	bge.n	801c424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c41a:	2b00      	cmp	r3, #0
 801c41c:	db02      	blt.n	801c424 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c41e:	42bb      	cmp	r3, r7
 801c420:	f2c0 8180 	blt.w	801c724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801c424:	f11c 0c01 	adds.w	ip, ip, #1
 801c428:	f100 8170 	bmi.w	801c70c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c42c:	4561      	cmp	r1, ip
 801c42e:	f2c0 816d 	blt.w	801c70c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c432:	3301      	adds	r3, #1
 801c434:	f100 816a 	bmi.w	801c70c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c438:	429a      	cmp	r2, r3
 801c43a:	f2c0 8167 	blt.w	801c70c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c43e:	9b07      	ldr	r3, [sp, #28]
 801c440:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c442:	9317      	str	r3, [sp, #92]	; 0x5c
 801c444:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c446:	2b00      	cmp	r3, #0
 801c448:	f340 8189 	ble.w	801c75e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801c44c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801c44e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c450:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c454:	689b      	ldr	r3, [r3, #8]
 801c456:	1422      	asrs	r2, r4, #16
 801c458:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801c45c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c460:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c464:	f100 81d8 	bmi.w	801c818 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c468:	f103 38ff 	add.w	r8, r3, #4294967295
 801c46c:	4542      	cmp	r2, r8
 801c46e:	f280 81d3 	bge.w	801c818 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c472:	f1bc 0f00 	cmp.w	ip, #0
 801c476:	f2c0 81cf 	blt.w	801c818 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c47a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c47e:	45c4      	cmp	ip, r8
 801c480:	f280 81ca 	bge.w	801c818 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c484:	b21b      	sxth	r3, r3
 801c486:	fb0c 2203 	mla	r2, ip, r3, r2
 801c48a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c48c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801c490:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801c494:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801c498:	2900      	cmp	r1, #0
 801c49a:	f000 81a6 	beq.w	801c7ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801c49e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801c4a2:	950b      	str	r5, [sp, #44]	; 0x2c
 801c4a4:	0e2d      	lsrs	r5, r5, #24
 801c4a6:	9512      	str	r5, [sp, #72]	; 0x48
 801c4a8:	b180      	cbz	r0, 801c4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801c4aa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801c4ae:	3b01      	subs	r3, #1
 801c4b0:	009b      	lsls	r3, r3, #2
 801c4b2:	3304      	adds	r3, #4
 801c4b4:	eb08 0c03 	add.w	ip, r8, r3
 801c4b8:	f858 3003 	ldr.w	r3, [r8, r3]
 801c4bc:	9308      	str	r3, [sp, #32]
 801c4be:	0e1b      	lsrs	r3, r3, #24
 801c4c0:	9310      	str	r3, [sp, #64]	; 0x40
 801c4c2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801c4c6:	930c      	str	r3, [sp, #48]	; 0x30
 801c4c8:	0e1b      	lsrs	r3, r3, #24
 801c4ca:	9313      	str	r3, [sp, #76]	; 0x4c
 801c4cc:	b289      	uxth	r1, r1
 801c4ce:	b280      	uxth	r0, r0
 801c4d0:	fb01 f900 	mul.w	r9, r1, r0
 801c4d4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c4d8:	0109      	lsls	r1, r1, #4
 801c4da:	eba1 0809 	sub.w	r8, r1, r9
 801c4de:	b280      	uxth	r0, r0
 801c4e0:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801c4e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801c4e6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c4e8:	fa1f f888 	uxth.w	r8, r8
 801c4ec:	1a09      	subs	r1, r1, r0
 801c4ee:	b289      	uxth	r1, r1
 801c4f0:	fb08 f303 	mul.w	r3, r8, r3
 801c4f4:	fb01 330e 	mla	r3, r1, lr, r3
 801c4f8:	fb00 3305 	mla	r3, r0, r5, r3
 801c4fc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c4fe:	fb09 3305 	mla	r3, r9, r5, r3
 801c502:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c506:	2b00      	cmp	r3, #0
 801c508:	f000 80f7 	beq.w	801c6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c50c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c510:	d01b      	beq.n	801c54a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 801c512:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801c516:	fb0e fa0a 	mul.w	sl, lr, sl
 801c51a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c51e:	fb0e fe02 	mul.w	lr, lr, r2
 801c522:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801c526:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c52a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c52e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c532:	4452      	add	r2, sl
 801c534:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c538:	0a12      	lsrs	r2, r2, #8
 801c53a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c53e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801c542:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c546:	ea42 020c 	orr.w	r2, r2, ip
 801c54a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c54c:	2dff      	cmp	r5, #255	; 0xff
 801c54e:	d021      	beq.n	801c594 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801c550:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c552:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801c556:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c558:	fb05 fb0b 	mul.w	fp, r5, fp
 801c55c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c55e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c562:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c564:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c568:	fb05 fa0a 	mul.w	sl, r5, sl
 801c56c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c570:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c574:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c578:	44de      	add	lr, fp
 801c57a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c57e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c582:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c586:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c58a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c58e:	ea4e 050a 	orr.w	r5, lr, sl
 801c592:	950b      	str	r5, [sp, #44]	; 0x2c
 801c594:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c596:	2dff      	cmp	r5, #255	; 0xff
 801c598:	d021      	beq.n	801c5de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c59a:	9d08      	ldr	r5, [sp, #32]
 801c59c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801c5a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c5a2:	fb05 fb0b 	mul.w	fp, r5, fp
 801c5a6:	9d08      	ldr	r5, [sp, #32]
 801c5a8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801c5ac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c5ae:	fb05 fa0e 	mul.w	sl, r5, lr
 801c5b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c5b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c5ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c5be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c5c2:	44de      	add	lr, fp
 801c5c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c5c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c5cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c5d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c5d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c5d8:	ea4e 050a 	orr.w	r5, lr, sl
 801c5dc:	9508      	str	r5, [sp, #32]
 801c5de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c5e0:	2dff      	cmp	r5, #255	; 0xff
 801c5e2:	d021      	beq.n	801c628 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801c5e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c5e6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801c5ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c5ec:	fb05 fb0b 	mul.w	fp, r5, fp
 801c5f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c5f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c5f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c5f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c5fc:	fb05 fa0a 	mul.w	sl, r5, sl
 801c600:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c604:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c608:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c60c:	44de      	add	lr, fp
 801c60e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c612:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c616:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c61a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c61e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c622:	ea4e 050a 	orr.w	r5, lr, sl
 801c626:	950c      	str	r5, [sp, #48]	; 0x30
 801c628:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c62a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801c62e:	9d08      	ldr	r5, [sp, #32]
 801c630:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801c634:	fb08 fc0c 	mul.w	ip, r8, ip
 801c638:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c63c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801c640:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801c642:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c646:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801c64a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801c64c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c650:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801c654:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801c658:	fb08 f80e 	mul.w	r8, r8, lr
 801c65c:	fb01 8202 	mla	r2, r1, r2, r8
 801c660:	9908      	ldr	r1, [sp, #32]
 801c662:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c666:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c668:	fb00 220a 	mla	r2, r0, sl, r2
 801c66c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801c670:	fb09 2900 	mla	r9, r9, r0, r2
 801c674:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c678:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c67c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c680:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c684:	ea4c 0c09 	orr.w	ip, ip, r9
 801c688:	2bff      	cmp	r3, #255	; 0xff
 801c68a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801c68e:	f000 80b5 	beq.w	801c7fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801c692:	8839      	ldrh	r1, [r7, #0]
 801c694:	43db      	mvns	r3, r3
 801c696:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801c69a:	fa5f f883 	uxtb.w	r8, r3
 801c69e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c6a2:	fb0e fe08 	mul.w	lr, lr, r8
 801c6a6:	10c8      	asrs	r0, r1, #3
 801c6a8:	00cb      	lsls	r3, r1, #3
 801c6aa:	f10e 0101 	add.w	r1, lr, #1
 801c6ae:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801c6b2:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 801c6b6:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 801c6ba:	b2db      	uxtb	r3, r3
 801c6bc:	4964      	ldr	r1, [pc, #400]	; (801c850 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 801c6be:	fb03 f308 	mul.w	r3, r3, r8
 801c6c2:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 801c6c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c6ca:	1c59      	adds	r1, r3, #1
 801c6cc:	fb00 f008 	mul.w	r0, r0, r8
 801c6d0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801c6d4:	fa5f fc8c 	uxtb.w	ip, ip
 801c6d8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801c6dc:	1c43      	adds	r3, r0, #1
 801c6de:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c6e2:	b2d3      	uxtb	r3, r2
 801c6e4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c6e8:	00db      	lsls	r3, r3, #3
 801c6ea:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 801c6ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c6f2:	ea4c 0c03 	orr.w	ip, ip, r3
 801c6f6:	f8a7 c000 	strh.w	ip, [r7]
 801c6fa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801c6fc:	441c      	add	r4, r3
 801c6fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c700:	441e      	add	r6, r3
 801c702:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c704:	3b01      	subs	r3, #1
 801c706:	3702      	adds	r7, #2
 801c708:	9317      	str	r3, [sp, #92]	; 0x5c
 801c70a:	e69b      	b.n	801c444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 801c70c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801c70e:	441c      	add	r4, r3
 801c710:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801c712:	441e      	add	r6, r3
 801c714:	9b07      	ldr	r3, [sp, #28]
 801c716:	3b01      	subs	r3, #1
 801c718:	9307      	str	r3, [sp, #28]
 801c71a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c71c:	3302      	adds	r3, #2
 801c71e:	930a      	str	r3, [sp, #40]	; 0x28
 801c720:	e670      	b.n	801c404 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c722:	d023      	beq.n	801c76c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801c724:	9b07      	ldr	r3, [sp, #28]
 801c726:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801c728:	3b01      	subs	r3, #1
 801c72a:	fb00 4003 	mla	r0, r0, r3, r4
 801c72e:	1400      	asrs	r0, r0, #16
 801c730:	f53f ae85 	bmi.w	801c43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c734:	3901      	subs	r1, #1
 801c736:	4288      	cmp	r0, r1
 801c738:	f6bf ae81 	bge.w	801c43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c73c:	9930      	ldr	r1, [sp, #192]	; 0xc0
 801c73e:	fb01 6303 	mla	r3, r1, r3, r6
 801c742:	141b      	asrs	r3, r3, #16
 801c744:	f53f ae7b 	bmi.w	801c43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c748:	3a01      	subs	r2, #1
 801c74a:	4293      	cmp	r3, r2
 801c74c:	f6bf ae77 	bge.w	801c43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c750:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c754:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801c758:	f1bb 0f00 	cmp.w	fp, #0
 801c75c:	dc7a      	bgt.n	801c854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 801c75e:	9b07      	ldr	r3, [sp, #28]
 801c760:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801c764:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c766:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801c76a:	930a      	str	r3, [sp, #40]	; 0x28
 801c76c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c76e:	2b00      	cmp	r3, #0
 801c770:	f340 81cb 	ble.w	801cb0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801c774:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801c778:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c77c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801c780:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c782:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801c786:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801c78a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801c78e:	eef0 6a48 	vmov.f32	s13, s16
 801c792:	ee69 7a27 	vmul.f32	s15, s18, s15
 801c796:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c79a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801c79e:	ee16 4a90 	vmov	r4, s13
 801c7a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801c7a6:	eef0 6a68 	vmov.f32	s13, s17
 801c7aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801c7ae:	ee18 2a10 	vmov	r2, s16
 801c7b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801c7b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7ba:	ee18 2a90 	vmov	r2, s17
 801c7be:	932f      	str	r3, [sp, #188]	; 0xbc
 801c7c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c7c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c7c6:	9330      	str	r3, [sp, #192]	; 0xc0
 801c7c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c7ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c7cc:	3b01      	subs	r3, #1
 801c7ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c7d2:	9316      	str	r3, [sp, #88]	; 0x58
 801c7d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c7d6:	bf08      	it	eq
 801c7d8:	4613      	moveq	r3, r2
 801c7da:	ee16 6a90 	vmov	r6, s13
 801c7de:	9307      	str	r3, [sp, #28]
 801c7e0:	eef0 8a67 	vmov.f32	s17, s15
 801c7e4:	eeb0 8a47 	vmov.f32	s16, s14
 801c7e8:	e5fe      	b.n	801c3e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801c7ea:	2800      	cmp	r0, #0
 801c7ec:	f43f ae6e 	beq.w	801c4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801c7f0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801c7f4:	9308      	str	r3, [sp, #32]
 801c7f6:	0e1b      	lsrs	r3, r3, #24
 801c7f8:	9310      	str	r3, [sp, #64]	; 0x40
 801c7fa:	e667      	b.n	801c4cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801c7fc:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801c800:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801c804:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c808:	f022 0207 	bic.w	r2, r2, #7
 801c80c:	431a      	orrs	r2, r3
 801c80e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c812:	ea42 0c0c 	orr.w	ip, r2, ip
 801c816:	e76e      	b.n	801c6f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801c818:	f112 0801 	adds.w	r8, r2, #1
 801c81c:	f53f af6d 	bmi.w	801c6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c820:	4543      	cmp	r3, r8
 801c822:	f6ff af6a 	blt.w	801c6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c826:	f11c 0801 	adds.w	r8, ip, #1
 801c82a:	f53f af66 	bmi.w	801c6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c82e:	45c6      	cmp	lr, r8
 801c830:	f6ff af63 	blt.w	801c6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c834:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801c838:	fa0f f28e 	sxth.w	r2, lr
 801c83c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801c840:	9200      	str	r2, [sp, #0]
 801c842:	b21b      	sxth	r3, r3
 801c844:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c846:	9819      	ldr	r0, [sp, #100]	; 0x64
 801c848:	4639      	mov	r1, r7
 801c84a:	f7ff fc53 	bl	801c0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801c84e:	e754      	b.n	801c6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801c850:	fffff800 	.word	0xfffff800
 801c854:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801c856:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c858:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801c85c:	1421      	asrs	r1, r4, #16
 801c85e:	1433      	asrs	r3, r6, #16
 801c860:	fb07 1303 	mla	r3, r7, r3, r1
 801c864:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c866:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801c86a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801c86e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801c872:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c876:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c87a:	2a00      	cmp	r2, #0
 801c87c:	f000 812e 	beq.w	801cadc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801c880:	684d      	ldr	r5, [r1, #4]
 801c882:	950d      	str	r5, [sp, #52]	; 0x34
 801c884:	0e2d      	lsrs	r5, r5, #24
 801c886:	9514      	str	r5, [sp, #80]	; 0x50
 801c888:	b178      	cbz	r0, 801c8aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801c88a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801c88e:	3f01      	subs	r7, #1
 801c890:	00bf      	lsls	r7, r7, #2
 801c892:	3704      	adds	r7, #4
 801c894:	eb01 0e07 	add.w	lr, r1, r7
 801c898:	59c9      	ldr	r1, [r1, r7]
 801c89a:	9109      	str	r1, [sp, #36]	; 0x24
 801c89c:	0e09      	lsrs	r1, r1, #24
 801c89e:	9111      	str	r1, [sp, #68]	; 0x44
 801c8a0:	f8de 1004 	ldr.w	r1, [lr, #4]
 801c8a4:	910e      	str	r1, [sp, #56]	; 0x38
 801c8a6:	0e09      	lsrs	r1, r1, #24
 801c8a8:	9115      	str	r1, [sp, #84]	; 0x54
 801c8aa:	b292      	uxth	r2, r2
 801c8ac:	b280      	uxth	r0, r0
 801c8ae:	fb02 f900 	mul.w	r9, r2, r0
 801c8b2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c8b6:	0112      	lsls	r2, r2, #4
 801c8b8:	eba2 0e09 	sub.w	lr, r2, r9
 801c8bc:	b280      	uxth	r0, r0
 801c8be:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c8c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c8c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c8c6:	fa1f fe8e 	uxth.w	lr, lr
 801c8ca:	1a09      	subs	r1, r1, r0
 801c8cc:	b289      	uxth	r1, r1
 801c8ce:	fb0e f202 	mul.w	r2, lr, r2
 801c8d2:	fb01 220c 	mla	r2, r1, ip, r2
 801c8d6:	fb00 2205 	mla	r2, r0, r5, r2
 801c8da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c8dc:	fb09 2205 	mla	r2, r9, r5, r2
 801c8e0:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c8e4:	2a00      	cmp	r2, #0
 801c8e6:	f000 80f0 	beq.w	801caca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801c8ea:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c8ee:	d019      	beq.n	801c924 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 801c8f0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c8f4:	fb0c fa0a 	mul.w	sl, ip, sl
 801c8f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c8fc:	fb0c fc03 	mul.w	ip, ip, r3
 801c900:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c904:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c908:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c90c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c910:	4453      	add	r3, sl
 801c912:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c916:	0a1b      	lsrs	r3, r3, #8
 801c918:	0a3f      	lsrs	r7, r7, #8
 801c91a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c91e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c922:	433b      	orrs	r3, r7
 801c924:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c926:	2dff      	cmp	r5, #255	; 0xff
 801c928:	d020      	beq.n	801c96c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 801c92a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c92c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c930:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c932:	436f      	muls	r7, r5
 801c934:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c936:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c93a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c93c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c940:	fb05 fa0a 	mul.w	sl, r5, sl
 801c944:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c948:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c94c:	44bc      	add	ip, r7
 801c94e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c952:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c956:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c95a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c95e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c962:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c966:	ea4c 050a 	orr.w	r5, ip, sl
 801c96a:	950d      	str	r5, [sp, #52]	; 0x34
 801c96c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c96e:	2dff      	cmp	r5, #255	; 0xff
 801c970:	d020      	beq.n	801c9b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 801c972:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c974:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c978:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c97a:	436f      	muls	r7, r5
 801c97c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c97e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801c982:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c984:	fb05 fa0c 	mul.w	sl, r5, ip
 801c988:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c98c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c990:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c994:	44bc      	add	ip, r7
 801c996:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c99a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c99e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c9a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c9aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c9ae:	ea4c 050a 	orr.w	r5, ip, sl
 801c9b2:	9509      	str	r5, [sp, #36]	; 0x24
 801c9b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c9b6:	2dff      	cmp	r5, #255	; 0xff
 801c9b8:	d020      	beq.n	801c9fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 801c9ba:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c9bc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801c9c0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c9c2:	436f      	muls	r7, r5
 801c9c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c9c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801c9ca:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801c9cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c9d0:	fb05 fa0a 	mul.w	sl, r5, sl
 801c9d4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c9d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c9dc:	44bc      	add	ip, r7
 801c9de:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c9e2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c9e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c9ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c9ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c9f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c9f6:	ea4c 050a 	orr.w	r5, ip, sl
 801c9fa:	950e      	str	r5, [sp, #56]	; 0x38
 801c9fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801c9fe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ca02:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ca04:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ca08:	fb0e f707 	mul.w	r7, lr, r7
 801ca0c:	fb01 770c 	mla	r7, r1, ip, r7
 801ca10:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ca14:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ca16:	fb00 770c 	mla	r7, r0, ip, r7
 801ca1a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ca1e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ca20:	fb09 770c 	mla	r7, r9, ip, r7
 801ca24:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ca28:	fb0e fe0c 	mul.w	lr, lr, ip
 801ca2c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ca30:	fb01 e303 	mla	r3, r1, r3, lr
 801ca34:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ca36:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ca3a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ca3c:	fb00 330a 	mla	r3, r0, sl, r3
 801ca40:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ca44:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ca48:	0a3f      	lsrs	r7, r7, #8
 801ca4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ca4e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ca52:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ca56:	ea47 070c 	orr.w	r7, r7, ip
 801ca5a:	2aff      	cmp	r2, #255	; 0xff
 801ca5c:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ca60:	d045      	beq.n	801caee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 801ca62:	f8b8 1000 	ldrh.w	r1, [r8]
 801ca66:	43d2      	mvns	r2, r2
 801ca68:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801ca6c:	fa5f fe82 	uxtb.w	lr, r2
 801ca70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca74:	fb0c fc0e 	mul.w	ip, ip, lr
 801ca78:	10c8      	asrs	r0, r1, #3
 801ca7a:	00ca      	lsls	r2, r1, #3
 801ca7c:	f10c 0101 	add.w	r1, ip, #1
 801ca80:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 801ca84:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 801ca88:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ca8c:	b2d2      	uxtb	r2, r2
 801ca8e:	4921      	ldr	r1, [pc, #132]	; (801cb14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 801ca90:	fb02 f20e 	mul.w	r2, r2, lr
 801ca94:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801ca98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ca9c:	1c51      	adds	r1, r2, #1
 801ca9e:	fb00 f00e 	mul.w	r0, r0, lr
 801caa2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801caa6:	b2ff      	uxtb	r7, r7
 801caa8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801caac:	1c42      	adds	r2, r0, #1
 801caae:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 801cab2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cab6:	b2df      	uxtb	r7, r3
 801cab8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cabc:	00ff      	lsls	r7, r7, #3
 801cabe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cac2:	ea4c 0c07 	orr.w	ip, ip, r7
 801cac6:	f8a8 c000 	strh.w	ip, [r8]
 801caca:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801cacc:	441c      	add	r4, r3
 801cace:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cad0:	f108 0802 	add.w	r8, r8, #2
 801cad4:	441e      	add	r6, r3
 801cad6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cada:	e63d      	b.n	801c758 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801cadc:	2800      	cmp	r0, #0
 801cade:	f43f aee4 	beq.w	801c8aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801cae2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801cae6:	9109      	str	r1, [sp, #36]	; 0x24
 801cae8:	0e09      	lsrs	r1, r1, #24
 801caea:	9111      	str	r1, [sp, #68]	; 0x44
 801caec:	e6dd      	b.n	801c8aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 801caee:	097a      	lsrs	r2, r7, #5
 801caf0:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801caf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801caf8:	f023 0307 	bic.w	r3, r3, #7
 801cafc:	4313      	orrs	r3, r2
 801cafe:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801cb02:	431f      	orrs	r7, r3
 801cb04:	f8a8 7000 	strh.w	r7, [r8]
 801cb08:	e7df      	b.n	801caca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 801cb0a:	b01b      	add	sp, #108	; 0x6c
 801cb0c:	ecbd 8b08 	vpop	{d8-d11}
 801cb10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb14:	fffff800 	.word	0xfffff800

0801cb18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801cb18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cb1c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801cb20:	2c00      	cmp	r4, #0
 801cb22:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801cb26:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801cb2a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801cb2e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801cb32:	fb04 ce03 	mla	lr, r4, r3, ip
 801cb36:	db60      	blt.n	801cbfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801cb38:	45a1      	cmp	r9, r4
 801cb3a:	dd5e      	ble.n	801cbfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801cb3c:	f1bc 0f00 	cmp.w	ip, #0
 801cb40:	db59      	blt.n	801cbf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801cb42:	45e0      	cmp	r8, ip
 801cb44:	dd57      	ble.n	801cbf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801cb46:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801cb4a:	f01e 0f01 	tst.w	lr, #1
 801cb4e:	5c16      	ldrb	r6, [r2, r0]
 801cb50:	bf0c      	ite	eq
 801cb52:	f006 060f 	andeq.w	r6, r6, #15
 801cb56:	1136      	asrne	r6, r6, #4
 801cb58:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801cb5c:	b2f6      	uxtb	r6, r6
 801cb5e:	f11c 0001 	adds.w	r0, ip, #1
 801cb62:	d44d      	bmi.n	801cc00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801cb64:	4580      	cmp	r8, r0
 801cb66:	dd4b      	ble.n	801cc00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801cb68:	2d00      	cmp	r5, #0
 801cb6a:	d04b      	beq.n	801cc04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801cb6c:	f10e 0a01 	add.w	sl, lr, #1
 801cb70:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801cb74:	f01a 0f01 	tst.w	sl, #1
 801cb78:	5c10      	ldrb	r0, [r2, r0]
 801cb7a:	bf0c      	ite	eq
 801cb7c:	f000 000f 	andeq.w	r0, r0, #15
 801cb80:	1100      	asrne	r0, r0, #4
 801cb82:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801cb86:	b2c0      	uxtb	r0, r0
 801cb88:	3401      	adds	r4, #1
 801cb8a:	d43f      	bmi.n	801cc0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801cb8c:	45a1      	cmp	r9, r4
 801cb8e:	dd3d      	ble.n	801cc0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801cb90:	2f00      	cmp	r7, #0
 801cb92:	f000 809e 	beq.w	801ccd2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801cb96:	f1bc 0f00 	cmp.w	ip, #0
 801cb9a:	db35      	blt.n	801cc08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801cb9c:	45e0      	cmp	r8, ip
 801cb9e:	dd33      	ble.n	801cc08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801cba0:	eb03 090e 	add.w	r9, r3, lr
 801cba4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801cba8:	f019 0f01 	tst.w	r9, #1
 801cbac:	5d14      	ldrb	r4, [r2, r4]
 801cbae:	bf0c      	ite	eq
 801cbb0:	f004 040f 	andeq.w	r4, r4, #15
 801cbb4:	1124      	asrne	r4, r4, #4
 801cbb6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801cbba:	b2e4      	uxtb	r4, r4
 801cbbc:	f11c 0c01 	adds.w	ip, ip, #1
 801cbc0:	d427      	bmi.n	801cc12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801cbc2:	45e0      	cmp	r8, ip
 801cbc4:	dd25      	ble.n	801cc12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801cbc6:	b335      	cbz	r5, 801cc16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801cbc8:	3301      	adds	r3, #1
 801cbca:	449e      	add	lr, r3
 801cbcc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801cbd0:	f01e 0f01 	tst.w	lr, #1
 801cbd4:	5cd2      	ldrb	r2, [r2, r3]
 801cbd6:	bf0c      	ite	eq
 801cbd8:	f002 020f 	andeq.w	r2, r2, #15
 801cbdc:	1112      	asrne	r2, r2, #4
 801cbde:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cbe2:	b2d3      	uxtb	r3, r2
 801cbe4:	2d0f      	cmp	r5, #15
 801cbe6:	d917      	bls.n	801cc18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801cbe8:	4b3c      	ldr	r3, [pc, #240]	; (801ccdc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 801cbea:	4a3d      	ldr	r2, [pc, #244]	; (801cce0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801cbec:	483d      	ldr	r0, [pc, #244]	; (801cce4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801cbee:	f240 210d 	movw	r1, #525	; 0x20d
 801cbf2:	f002 fbff 	bl	801f3f4 <__assert_func>
 801cbf6:	2600      	movs	r6, #0
 801cbf8:	e7b1      	b.n	801cb5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801cbfa:	2000      	movs	r0, #0
 801cbfc:	4606      	mov	r6, r0
 801cbfe:	e7c3      	b.n	801cb88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801cc00:	2000      	movs	r0, #0
 801cc02:	e7c1      	b.n	801cb88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801cc04:	4628      	mov	r0, r5
 801cc06:	e7bf      	b.n	801cb88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801cc08:	2400      	movs	r4, #0
 801cc0a:	e7d7      	b.n	801cbbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801cc0c:	2300      	movs	r3, #0
 801cc0e:	461c      	mov	r4, r3
 801cc10:	e7e8      	b.n	801cbe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801cc12:	2300      	movs	r3, #0
 801cc14:	e7e6      	b.n	801cbe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801cc16:	462b      	mov	r3, r5
 801cc18:	2f0f      	cmp	r7, #15
 801cc1a:	d8e5      	bhi.n	801cbe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801cc1c:	b2ad      	uxth	r5, r5
 801cc1e:	b2bf      	uxth	r7, r7
 801cc20:	fb05 fc07 	mul.w	ip, r5, r7
 801cc24:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801cc28:	012d      	lsls	r5, r5, #4
 801cc2a:	b2bf      	uxth	r7, r7
 801cc2c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801cc30:	eba5 050c 	sub.w	r5, r5, ip
 801cc34:	1bd2      	subs	r2, r2, r7
 801cc36:	b2ad      	uxth	r5, r5
 801cc38:	b292      	uxth	r2, r2
 801cc3a:	4368      	muls	r0, r5
 801cc3c:	fb06 0002 	mla	r0, r6, r2, r0
 801cc40:	fb07 0404 	mla	r4, r7, r4, r0
 801cc44:	fb0c 4303 	mla	r3, ip, r3, r4
 801cc48:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc4c:	2b00      	cmp	r3, #0
 801cc4e:	d03e      	beq.n	801ccce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 801cc50:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801cc54:	4a24      	ldr	r2, [pc, #144]	; (801cce8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801cc56:	4343      	muls	r3, r0
 801cc58:	1c58      	adds	r0, r3, #1
 801cc5a:	6816      	ldr	r6, [r2, #0]
 801cc5c:	880a      	ldrh	r2, [r1, #0]
 801cc5e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801cc62:	1200      	asrs	r0, r0, #8
 801cc64:	b284      	uxth	r4, r0
 801cc66:	1215      	asrs	r5, r2, #8
 801cc68:	43c0      	mvns	r0, r0
 801cc6a:	b2c3      	uxtb	r3, r0
 801cc6c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cc70:	0a30      	lsrs	r0, r6, #8
 801cc72:	fb15 f503 	smulbb	r5, r5, r3
 801cc76:	10d7      	asrs	r7, r2, #3
 801cc78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cc7c:	fb00 5004 	mla	r0, r0, r4, r5
 801cc80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cc84:	08f5      	lsrs	r5, r6, #3
 801cc86:	00d2      	lsls	r2, r2, #3
 801cc88:	fb17 f703 	smulbb	r7, r7, r3
 801cc8c:	b2d2      	uxtb	r2, r2
 801cc8e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cc92:	00f6      	lsls	r6, r6, #3
 801cc94:	fb05 7504 	mla	r5, r5, r4, r7
 801cc98:	fb12 f303 	smulbb	r3, r2, r3
 801cc9c:	b2f6      	uxtb	r6, r6
 801cc9e:	fb06 3304 	mla	r3, r6, r4, r3
 801cca2:	b2ad      	uxth	r5, r5
 801cca4:	b29a      	uxth	r2, r3
 801cca6:	b280      	uxth	r0, r0
 801cca8:	1c6b      	adds	r3, r5, #1
 801ccaa:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801ccae:	1c44      	adds	r4, r0, #1
 801ccb0:	095b      	lsrs	r3, r3, #5
 801ccb2:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801ccb6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ccba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ccbe:	4303      	orrs	r3, r0
 801ccc0:	1c50      	adds	r0, r2, #1
 801ccc2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ccc6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ccca:	4313      	orrs	r3, r2
 801cccc:	800b      	strh	r3, [r1, #0]
 801ccce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ccd2:	2d0f      	cmp	r5, #15
 801ccd4:	d888      	bhi.n	801cbe8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801ccd6:	463b      	mov	r3, r7
 801ccd8:	463c      	mov	r4, r7
 801ccda:	e79f      	b.n	801cc1c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801ccdc:	08024033 	.word	0x08024033
 801cce0:	080245f1 	.word	0x080245f1
 801cce4:	0802411c 	.word	0x0802411c
 801cce8:	2000d434 	.word	0x2000d434

0801ccec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ccec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ccf0:	ed2d 8b08 	vpush	{d8-d11}
 801ccf4:	b097      	sub	sp, #92	; 0x5c
 801ccf6:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 801ccfa:	9214      	str	r2, [sp, #80]	; 0x50
 801ccfc:	9309      	str	r3, [sp, #36]	; 0x24
 801ccfe:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801cd00:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801cd04:	910d      	str	r1, [sp, #52]	; 0x34
 801cd06:	930e      	str	r3, [sp, #56]	; 0x38
 801cd08:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801cd0c:	9015      	str	r0, [sp, #84]	; 0x54
 801cd0e:	6850      	ldr	r0, [r2, #4]
 801cd10:	6812      	ldr	r2, [r2, #0]
 801cd12:	fb00 1303 	mla	r3, r0, r3, r1
 801cd16:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801cd1a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cd1c:	689b      	ldr	r3, [r3, #8]
 801cd1e:	3301      	adds	r3, #1
 801cd20:	f023 0301 	bic.w	r3, r3, #1
 801cd24:	930a      	str	r3, [sp, #40]	; 0x28
 801cd26:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cd28:	681f      	ldr	r7, [r3, #0]
 801cd2a:	eeb0 aa40 	vmov.f32	s20, s0
 801cd2e:	eef0 9a60 	vmov.f32	s19, s1
 801cd32:	eeb0 9a41 	vmov.f32	s18, s2
 801cd36:	eeb0 8a62 	vmov.f32	s16, s5
 801cd3a:	eef0 8a43 	vmov.f32	s17, s6
 801cd3e:	eef0 ba44 	vmov.f32	s23, s8
 801cd42:	eeb0 ba64 	vmov.f32	s22, s9
 801cd46:	eef0 aa45 	vmov.f32	s21, s10
 801cd4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cd4c:	2b00      	cmp	r3, #0
 801cd4e:	dc03      	bgt.n	801cd58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cd50:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801cd52:	2b00      	cmp	r3, #0
 801cd54:	f340 826a 	ble.w	801d22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801cd58:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cd5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cd5e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cd62:	1e48      	subs	r0, r1, #1
 801cd64:	f102 3cff 	add.w	ip, r2, #4294967295
 801cd68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd6a:	2b00      	cmp	r3, #0
 801cd6c:	f340 80f3 	ble.w	801cf56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801cd70:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cd74:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cd78:	d406      	bmi.n	801cd88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801cd7a:	4586      	cmp	lr, r0
 801cd7c:	da04      	bge.n	801cd88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801cd7e:	2b00      	cmp	r3, #0
 801cd80:	db02      	blt.n	801cd88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801cd82:	4563      	cmp	r3, ip
 801cd84:	f2c0 80e8 	blt.w	801cf58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801cd88:	f11e 0e01 	adds.w	lr, lr, #1
 801cd8c:	f100 80d9 	bmi.w	801cf42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801cd90:	4571      	cmp	r1, lr
 801cd92:	f2c0 80d6 	blt.w	801cf42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801cd96:	3301      	adds	r3, #1
 801cd98:	f100 80d3 	bmi.w	801cf42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801cd9c:	429a      	cmp	r2, r3
 801cd9e:	f2c0 80d0 	blt.w	801cf42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801cda2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cda6:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801cdaa:	930f      	str	r3, [sp, #60]	; 0x3c
 801cdac:	46d0      	mov	r8, sl
 801cdae:	f1b9 0f00 	cmp.w	r9, #0
 801cdb2:	f340 80f0 	ble.w	801cf96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801cdb6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801cdb8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801cdbc:	1423      	asrs	r3, r4, #16
 801cdbe:	ea4f 4026 	mov.w	r0, r6, asr #16
 801cdc2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801cdc6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801cdca:	f100 8139 	bmi.w	801d040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801cdce:	f10c 3bff 	add.w	fp, ip, #4294967295
 801cdd2:	455b      	cmp	r3, fp
 801cdd4:	f280 8134 	bge.w	801d040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801cdd8:	2800      	cmp	r0, #0
 801cdda:	f2c0 8131 	blt.w	801d040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801cdde:	f10e 3bff 	add.w	fp, lr, #4294967295
 801cde2:	4558      	cmp	r0, fp
 801cde4:	f280 812c 	bge.w	801d040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 801cde8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801cdea:	fb00 3305 	mla	r3, r0, r5, r3
 801cdee:	0858      	lsrs	r0, r3, #1
 801cdf0:	07dd      	lsls	r5, r3, #31
 801cdf2:	f817 c000 	ldrb.w	ip, [r7, r0]
 801cdf6:	bf54      	ite	pl
 801cdf8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801cdfc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ce00:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ce04:	fa5f fc8c 	uxtb.w	ip, ip
 801ce08:	2a00      	cmp	r2, #0
 801ce0a:	f000 8108 	beq.w	801d01e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801ce0e:	1c58      	adds	r0, r3, #1
 801ce10:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ce14:	07c0      	lsls	r0, r0, #31
 801ce16:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ce1a:	bf54      	ite	pl
 801ce1c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ce20:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ce24:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ce28:	fa5f f08e 	uxtb.w	r0, lr
 801ce2c:	9010      	str	r0, [sp, #64]	; 0x40
 801ce2e:	b1d1      	cbz	r1, 801ce66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801ce30:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ce32:	4403      	add	r3, r0
 801ce34:	0858      	lsrs	r0, r3, #1
 801ce36:	07dd      	lsls	r5, r3, #31
 801ce38:	5c38      	ldrb	r0, [r7, r0]
 801ce3a:	bf54      	ite	pl
 801ce3c:	f000 000f 	andpl.w	r0, r0, #15
 801ce40:	1100      	asrmi	r0, r0, #4
 801ce42:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ce46:	3301      	adds	r3, #1
 801ce48:	b2c0      	uxtb	r0, r0
 801ce4a:	900b      	str	r0, [sp, #44]	; 0x2c
 801ce4c:	0858      	lsrs	r0, r3, #1
 801ce4e:	07dd      	lsls	r5, r3, #31
 801ce50:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ce54:	bf54      	ite	pl
 801ce56:	f00e 030f 	andpl.w	r3, lr, #15
 801ce5a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ce5e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ce62:	b2db      	uxtb	r3, r3
 801ce64:	9311      	str	r3, [sp, #68]	; 0x44
 801ce66:	b292      	uxth	r2, r2
 801ce68:	b289      	uxth	r1, r1
 801ce6a:	fb02 f301 	mul.w	r3, r2, r1
 801ce6e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ce72:	0112      	lsls	r2, r2, #4
 801ce74:	b289      	uxth	r1, r1
 801ce76:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ce7a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ce7c:	1ad2      	subs	r2, r2, r3
 801ce7e:	1a40      	subs	r0, r0, r1
 801ce80:	b292      	uxth	r2, r2
 801ce82:	436a      	muls	r2, r5
 801ce84:	b280      	uxth	r0, r0
 801ce86:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ce8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ce8c:	fb01 c102 	mla	r1, r1, r2, ip
 801ce90:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce92:	fb03 1302 	mla	r3, r3, r2, r1
 801ce96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ce9a:	2b00      	cmp	r3, #0
 801ce9c:	d048      	beq.n	801cf30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801ce9e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801cea0:	4a78      	ldr	r2, [pc, #480]	; (801d084 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801cea2:	434b      	muls	r3, r1
 801cea4:	1c59      	adds	r1, r3, #1
 801cea6:	f8d2 e000 	ldr.w	lr, [r2]
 801ceaa:	f8b8 2000 	ldrh.w	r2, [r8]
 801ceae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ceb2:	121b      	asrs	r3, r3, #8
 801ceb4:	b299      	uxth	r1, r3
 801ceb6:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ceba:	43db      	mvns	r3, r3
 801cebc:	b2db      	uxtb	r3, r3
 801cebe:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801cec2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cec6:	fb1c fc03 	smulbb	ip, ip, r3
 801ceca:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801cece:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ced2:	fb00 c001 	mla	r0, r0, r1, ip
 801ced6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ceda:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801cede:	fb1b fb03 	smulbb	fp, fp, r3
 801cee2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801cee6:	00d2      	lsls	r2, r2, #3
 801cee8:	fb0c bc01 	mla	ip, ip, r1, fp
 801ceec:	b2d2      	uxtb	r2, r2
 801ceee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cef2:	fb12 f303 	smulbb	r3, r2, r3
 801cef6:	fa1f fc8c 	uxth.w	ip, ip
 801cefa:	fa5f fe8e 	uxtb.w	lr, lr
 801cefe:	b280      	uxth	r0, r0
 801cf00:	fb0e 3101 	mla	r1, lr, r1, r3
 801cf04:	f10c 0201 	add.w	r2, ip, #1
 801cf08:	b289      	uxth	r1, r1
 801cf0a:	1c43      	adds	r3, r0, #1
 801cf0c:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801cf10:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cf14:	0952      	lsrs	r2, r2, #5
 801cf16:	1c4b      	adds	r3, r1, #1
 801cf18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf1c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801cf20:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801cf24:	4310      	orrs	r0, r2
 801cf26:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801cf2a:	4308      	orrs	r0, r1
 801cf2c:	f8a8 0000 	strh.w	r0, [r8]
 801cf30:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cf32:	441c      	add	r4, r3
 801cf34:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf36:	f108 0802 	add.w	r8, r8, #2
 801cf3a:	441e      	add	r6, r3
 801cf3c:	f109 39ff 	add.w	r9, r9, #4294967295
 801cf40:	e735      	b.n	801cdae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 801cf42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801cf44:	441c      	add	r4, r3
 801cf46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801cf48:	441e      	add	r6, r3
 801cf4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf4c:	3b01      	subs	r3, #1
 801cf4e:	9309      	str	r3, [sp, #36]	; 0x24
 801cf50:	f10a 0a02 	add.w	sl, sl, #2
 801cf54:	e708      	b.n	801cd68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cf56:	d023      	beq.n	801cfa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801cf58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf5a:	982b      	ldr	r0, [sp, #172]	; 0xac
 801cf5c:	3b01      	subs	r3, #1
 801cf5e:	fb00 4003 	mla	r0, r0, r3, r4
 801cf62:	1400      	asrs	r0, r0, #16
 801cf64:	f53f af1d 	bmi.w	801cda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cf68:	3901      	subs	r1, #1
 801cf6a:	4288      	cmp	r0, r1
 801cf6c:	f6bf af19 	bge.w	801cda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cf70:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801cf72:	fb01 6303 	mla	r3, r1, r3, r6
 801cf76:	141b      	asrs	r3, r3, #16
 801cf78:	f53f af13 	bmi.w	801cda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cf7c:	3a01      	subs	r2, #1
 801cf7e:	4293      	cmp	r3, r2
 801cf80:	f6bf af0f 	bge.w	801cda2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801cf84:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801cf88:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801cf8c:	930f      	str	r3, [sp, #60]	; 0x3c
 801cf8e:	46d1      	mov	r9, sl
 801cf90:	f1bb 0f00 	cmp.w	fp, #0
 801cf94:	dc78      	bgt.n	801d088 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801cf96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf98:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cf9c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801cfa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cfa2:	2b00      	cmp	r3, #0
 801cfa4:	f340 8142 	ble.w	801d22c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 801cfa8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801cfac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cfb0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801cfb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cfb6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801cfba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801cfbe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801cfc2:	eef0 6a48 	vmov.f32	s13, s16
 801cfc6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801cfca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cfce:	ee37 8a48 	vsub.f32	s16, s14, s16
 801cfd2:	ee16 4a90 	vmov	r4, s13
 801cfd6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801cfda:	eef0 6a68 	vmov.f32	s13, s17
 801cfde:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801cfe2:	ee18 2a10 	vmov	r2, s16
 801cfe6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801cfea:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfee:	ee18 2a90 	vmov	r2, s17
 801cff2:	932b      	str	r3, [sp, #172]	; 0xac
 801cff4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cff6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cffa:	932c      	str	r3, [sp, #176]	; 0xb0
 801cffc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cffe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d000:	3b01      	subs	r3, #1
 801d002:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d006:	930d      	str	r3, [sp, #52]	; 0x34
 801d008:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d00a:	bf08      	it	eq
 801d00c:	4613      	moveq	r3, r2
 801d00e:	ee16 6a90 	vmov	r6, s13
 801d012:	9309      	str	r3, [sp, #36]	; 0x24
 801d014:	eef0 8a67 	vmov.f32	s17, s15
 801d018:	eeb0 8a47 	vmov.f32	s16, s14
 801d01c:	e695      	b.n	801cd4a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801d01e:	2900      	cmp	r1, #0
 801d020:	f43f af21 	beq.w	801ce66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801d024:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d026:	4418      	add	r0, r3
 801d028:	0843      	lsrs	r3, r0, #1
 801d02a:	07c0      	lsls	r0, r0, #31
 801d02c:	5cfb      	ldrb	r3, [r7, r3]
 801d02e:	bf54      	ite	pl
 801d030:	f003 030f 	andpl.w	r3, r3, #15
 801d034:	111b      	asrmi	r3, r3, #4
 801d036:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d03a:	b2db      	uxtb	r3, r3
 801d03c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d03e:	e712      	b.n	801ce66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 801d040:	f113 0b01 	adds.w	fp, r3, #1
 801d044:	f53f af74 	bmi.w	801cf30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801d048:	45dc      	cmp	ip, fp
 801d04a:	f6ff af71 	blt.w	801cf30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801d04e:	f110 0b01 	adds.w	fp, r0, #1
 801d052:	f53f af6d 	bmi.w	801cf30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801d056:	45de      	cmp	lr, fp
 801d058:	f6ff af6a 	blt.w	801cf30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801d05c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801d05e:	9302      	str	r3, [sp, #8]
 801d060:	fa0f f38e 	sxth.w	r3, lr
 801d064:	9301      	str	r3, [sp, #4]
 801d066:	fa0f f38c 	sxth.w	r3, ip
 801d06a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d06e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d072:	9300      	str	r3, [sp, #0]
 801d074:	463a      	mov	r2, r7
 801d076:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d078:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d07a:	4641      	mov	r1, r8
 801d07c:	f7ff fd4c 	bl	801cb18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801d080:	e756      	b.n	801cf30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801d082:	bf00      	nop
 801d084:	2000d434 	.word	0x2000d434
 801d088:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d08a:	1422      	asrs	r2, r4, #16
 801d08c:	1433      	asrs	r3, r6, #16
 801d08e:	fb05 2303 	mla	r3, r5, r3, r2
 801d092:	085a      	lsrs	r2, r3, #1
 801d094:	07dd      	lsls	r5, r3, #31
 801d096:	5cba      	ldrb	r2, [r7, r2]
 801d098:	bf54      	ite	pl
 801d09a:	f002 020f 	andpl.w	r2, r2, #15
 801d09e:	1112      	asrmi	r2, r2, #4
 801d0a0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d0a4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801d0a8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d0ac:	b2d2      	uxtb	r2, r2
 801d0ae:	2900      	cmp	r1, #0
 801d0b0:	f000 80a8 	beq.w	801d204 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801d0b4:	f103 0e01 	add.w	lr, r3, #1
 801d0b8:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801d0bc:	f01e 0f01 	tst.w	lr, #1
 801d0c0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d0c4:	bf0c      	ite	eq
 801d0c6:	f00c 0c0f 	andeq.w	ip, ip, #15
 801d0ca:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801d0ce:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d0d2:	fa5f f58c 	uxtb.w	r5, ip
 801d0d6:	9512      	str	r5, [sp, #72]	; 0x48
 801d0d8:	b300      	cbz	r0, 801d11c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801d0da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d0dc:	442b      	add	r3, r5
 801d0de:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d0e2:	07dd      	lsls	r5, r3, #31
 801d0e4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d0e8:	bf54      	ite	pl
 801d0ea:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d0ee:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d0f2:	3301      	adds	r3, #1
 801d0f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d0f8:	fa5f f58c 	uxtb.w	r5, ip
 801d0fc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d100:	950c      	str	r5, [sp, #48]	; 0x30
 801d102:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d106:	07dd      	lsls	r5, r3, #31
 801d108:	bf54      	ite	pl
 801d10a:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d10e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d112:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d116:	fa5f f38c 	uxtb.w	r3, ip
 801d11a:	9313      	str	r3, [sp, #76]	; 0x4c
 801d11c:	b289      	uxth	r1, r1
 801d11e:	b280      	uxth	r0, r0
 801d120:	fb01 f300 	mul.w	r3, r1, r0
 801d124:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801d128:	0109      	lsls	r1, r1, #4
 801d12a:	b280      	uxth	r0, r0
 801d12c:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801d130:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d132:	1ac9      	subs	r1, r1, r3
 801d134:	ebac 0c00 	sub.w	ip, ip, r0
 801d138:	b289      	uxth	r1, r1
 801d13a:	4369      	muls	r1, r5
 801d13c:	fa1f fc8c 	uxth.w	ip, ip
 801d140:	fb02 120c 	mla	r2, r2, ip, r1
 801d144:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d146:	fb00 2001 	mla	r0, r0, r1, r2
 801d14a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d14c:	fb03 0302 	mla	r3, r3, r2, r0
 801d150:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d154:	2b00      	cmp	r3, #0
 801d156:	d04c      	beq.n	801d1f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801d158:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d15a:	4a37      	ldr	r2, [pc, #220]	; (801d238 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 801d15c:	434b      	muls	r3, r1
 801d15e:	1c59      	adds	r1, r3, #1
 801d160:	f8d2 e000 	ldr.w	lr, [r2]
 801d164:	f8b9 2000 	ldrh.w	r2, [r9]
 801d168:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d16c:	121b      	asrs	r3, r3, #8
 801d16e:	b299      	uxth	r1, r3
 801d170:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801d174:	43db      	mvns	r3, r3
 801d176:	b2db      	uxtb	r3, r3
 801d178:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801d17c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d180:	fb1c fc03 	smulbb	ip, ip, r3
 801d184:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801d188:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d18c:	fb00 c001 	mla	r0, r0, r1, ip
 801d190:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801d194:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 801d198:	fb18 f803 	smulbb	r8, r8, r3
 801d19c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d1a0:	00d2      	lsls	r2, r2, #3
 801d1a2:	fb0c 8c01 	mla	ip, ip, r1, r8
 801d1a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d1aa:	b2d2      	uxtb	r2, r2
 801d1ac:	fa1f fc8c 	uxth.w	ip, ip
 801d1b0:	fa5f fe8e 	uxtb.w	lr, lr
 801d1b4:	fb12 f203 	smulbb	r2, r2, r3
 801d1b8:	b280      	uxth	r0, r0
 801d1ba:	fb0e 2201 	mla	r2, lr, r1, r2
 801d1be:	f10c 0801 	add.w	r8, ip, #1
 801d1c2:	b292      	uxth	r2, r2
 801d1c4:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801d1c8:	f100 0801 	add.w	r8, r0, #1
 801d1cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d1d0:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801d1d4:	1c51      	adds	r1, r2, #1
 801d1d6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d1da:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d1de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d1e2:	ea4c 0c00 	orr.w	ip, ip, r0
 801d1e6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d1ea:	ea4c 0c02 	orr.w	ip, ip, r2
 801d1ee:	f8a9 c000 	strh.w	ip, [r9]
 801d1f2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801d1f4:	441c      	add	r4, r3
 801d1f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d1f8:	f109 0902 	add.w	r9, r9, #2
 801d1fc:	441e      	add	r6, r3
 801d1fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d202:	e6c5      	b.n	801cf90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801d204:	2800      	cmp	r0, #0
 801d206:	d089      	beq.n	801d11c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801d208:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801d20a:	442b      	add	r3, r5
 801d20c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801d210:	07db      	lsls	r3, r3, #31
 801d212:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801d216:	bf54      	ite	pl
 801d218:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d21c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d220:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d224:	fa5f f38c 	uxtb.w	r3, ip
 801d228:	930c      	str	r3, [sp, #48]	; 0x30
 801d22a:	e777      	b.n	801d11c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 801d22c:	b017      	add	sp, #92	; 0x5c
 801d22e:	ecbd 8b08 	vpop	{d8-d11}
 801d232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d236:	bf00      	nop
 801d238:	2000d434 	.word	0x2000d434

0801d23c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801d23c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d240:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801d244:	2c00      	cmp	r4, #0
 801d246:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801d24a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801d24e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801d252:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801d256:	fb04 ce03 	mla	lr, r4, r3, ip
 801d25a:	db60      	blt.n	801d31e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801d25c:	45a1      	cmp	r9, r4
 801d25e:	dd5e      	ble.n	801d31e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801d260:	f1bc 0f00 	cmp.w	ip, #0
 801d264:	db59      	blt.n	801d31a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801d266:	45e0      	cmp	r8, ip
 801d268:	dd57      	ble.n	801d31a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801d26a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801d26e:	f01e 0f01 	tst.w	lr, #1
 801d272:	5c16      	ldrb	r6, [r2, r0]
 801d274:	bf0c      	ite	eq
 801d276:	f006 060f 	andeq.w	r6, r6, #15
 801d27a:	1136      	asrne	r6, r6, #4
 801d27c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801d280:	b2f6      	uxtb	r6, r6
 801d282:	f11c 0001 	adds.w	r0, ip, #1
 801d286:	d44d      	bmi.n	801d324 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801d288:	4580      	cmp	r8, r0
 801d28a:	dd4b      	ble.n	801d324 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801d28c:	2d00      	cmp	r5, #0
 801d28e:	d04b      	beq.n	801d328 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801d290:	f10e 0a01 	add.w	sl, lr, #1
 801d294:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801d298:	f01a 0f01 	tst.w	sl, #1
 801d29c:	5c10      	ldrb	r0, [r2, r0]
 801d29e:	bf0c      	ite	eq
 801d2a0:	f000 000f 	andeq.w	r0, r0, #15
 801d2a4:	1100      	asrne	r0, r0, #4
 801d2a6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d2aa:	b2c0      	uxtb	r0, r0
 801d2ac:	3401      	adds	r4, #1
 801d2ae:	d43f      	bmi.n	801d330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801d2b0:	45a1      	cmp	r9, r4
 801d2b2:	dd3d      	ble.n	801d330 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801d2b4:	2f00      	cmp	r7, #0
 801d2b6:	f000 8097 	beq.w	801d3e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801d2ba:	f1bc 0f00 	cmp.w	ip, #0
 801d2be:	db35      	blt.n	801d32c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801d2c0:	45e0      	cmp	r8, ip
 801d2c2:	dd33      	ble.n	801d32c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801d2c4:	eb03 090e 	add.w	r9, r3, lr
 801d2c8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801d2cc:	f019 0f01 	tst.w	r9, #1
 801d2d0:	5d14      	ldrb	r4, [r2, r4]
 801d2d2:	bf0c      	ite	eq
 801d2d4:	f004 040f 	andeq.w	r4, r4, #15
 801d2d8:	1124      	asrne	r4, r4, #4
 801d2da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801d2de:	b2e4      	uxtb	r4, r4
 801d2e0:	f11c 0c01 	adds.w	ip, ip, #1
 801d2e4:	d427      	bmi.n	801d336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801d2e6:	45e0      	cmp	r8, ip
 801d2e8:	dd25      	ble.n	801d336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801d2ea:	b335      	cbz	r5, 801d33a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801d2ec:	3301      	adds	r3, #1
 801d2ee:	449e      	add	lr, r3
 801d2f0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801d2f4:	f01e 0f01 	tst.w	lr, #1
 801d2f8:	5cd2      	ldrb	r2, [r2, r3]
 801d2fa:	bf0c      	ite	eq
 801d2fc:	f002 020f 	andeq.w	r2, r2, #15
 801d300:	1112      	asrne	r2, r2, #4
 801d302:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d306:	b2d3      	uxtb	r3, r2
 801d308:	2d0f      	cmp	r5, #15
 801d30a:	d917      	bls.n	801d33c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801d30c:	4b39      	ldr	r3, [pc, #228]	; (801d3f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 801d30e:	4a3a      	ldr	r2, [pc, #232]	; (801d3f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801d310:	483a      	ldr	r0, [pc, #232]	; (801d3fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801d312:	f240 210d 	movw	r1, #525	; 0x20d
 801d316:	f002 f86d 	bl	801f3f4 <__assert_func>
 801d31a:	2600      	movs	r6, #0
 801d31c:	e7b1      	b.n	801d282 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801d31e:	2000      	movs	r0, #0
 801d320:	4606      	mov	r6, r0
 801d322:	e7c3      	b.n	801d2ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801d324:	2000      	movs	r0, #0
 801d326:	e7c1      	b.n	801d2ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801d328:	4628      	mov	r0, r5
 801d32a:	e7bf      	b.n	801d2ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801d32c:	2400      	movs	r4, #0
 801d32e:	e7d7      	b.n	801d2e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801d330:	2300      	movs	r3, #0
 801d332:	461c      	mov	r4, r3
 801d334:	e7e8      	b.n	801d308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801d336:	2300      	movs	r3, #0
 801d338:	e7e6      	b.n	801d308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801d33a:	462b      	mov	r3, r5
 801d33c:	2f0f      	cmp	r7, #15
 801d33e:	d8e5      	bhi.n	801d30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801d340:	b2ad      	uxth	r5, r5
 801d342:	b2bf      	uxth	r7, r7
 801d344:	fb05 fc07 	mul.w	ip, r5, r7
 801d348:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801d34c:	012d      	lsls	r5, r5, #4
 801d34e:	b2bf      	uxth	r7, r7
 801d350:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801d354:	eba5 050c 	sub.w	r5, r5, ip
 801d358:	1bd2      	subs	r2, r2, r7
 801d35a:	b2ad      	uxth	r5, r5
 801d35c:	b292      	uxth	r2, r2
 801d35e:	4368      	muls	r0, r5
 801d360:	fb06 0002 	mla	r0, r6, r2, r0
 801d364:	fb07 0404 	mla	r4, r7, r4, r0
 801d368:	fb0c 4303 	mla	r3, ip, r3, r4
 801d36c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d370:	2b00      	cmp	r3, #0
 801d372:	d037      	beq.n	801d3e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801d374:	4a22      	ldr	r2, [pc, #136]	; (801d400 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801d376:	6816      	ldr	r6, [r2, #0]
 801d378:	880a      	ldrh	r2, [r1, #0]
 801d37a:	b298      	uxth	r0, r3
 801d37c:	1215      	asrs	r5, r2, #8
 801d37e:	43db      	mvns	r3, r3
 801d380:	b2db      	uxtb	r3, r3
 801d382:	0a34      	lsrs	r4, r6, #8
 801d384:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d388:	fb15 f503 	smulbb	r5, r5, r3
 801d38c:	10d7      	asrs	r7, r2, #3
 801d38e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d392:	fb04 5400 	mla	r4, r4, r0, r5
 801d396:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d39a:	08f5      	lsrs	r5, r6, #3
 801d39c:	fb17 f703 	smulbb	r7, r7, r3
 801d3a0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d3a4:	00d2      	lsls	r2, r2, #3
 801d3a6:	fb05 7500 	mla	r5, r5, r0, r7
 801d3aa:	b2d2      	uxtb	r2, r2
 801d3ac:	00f6      	lsls	r6, r6, #3
 801d3ae:	fb12 f303 	smulbb	r3, r2, r3
 801d3b2:	b2ad      	uxth	r5, r5
 801d3b4:	b2f6      	uxtb	r6, r6
 801d3b6:	b2a4      	uxth	r4, r4
 801d3b8:	fb06 3000 	mla	r0, r6, r0, r3
 801d3bc:	1c6b      	adds	r3, r5, #1
 801d3be:	b280      	uxth	r0, r0
 801d3c0:	1c62      	adds	r2, r4, #1
 801d3c2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801d3c6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d3ca:	095b      	lsrs	r3, r3, #5
 801d3cc:	1c42      	adds	r2, r0, #1
 801d3ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d3d2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d3d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d3da:	4323      	orrs	r3, r4
 801d3dc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801d3e0:	4303      	orrs	r3, r0
 801d3e2:	800b      	strh	r3, [r1, #0]
 801d3e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d3e8:	2d0f      	cmp	r5, #15
 801d3ea:	d88f      	bhi.n	801d30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801d3ec:	463b      	mov	r3, r7
 801d3ee:	463c      	mov	r4, r7
 801d3f0:	e7a6      	b.n	801d340 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801d3f2:	bf00      	nop
 801d3f4:	08024033 	.word	0x08024033
 801d3f8:	080245f1 	.word	0x080245f1
 801d3fc:	0802411c 	.word	0x0802411c
 801d400:	2000d434 	.word	0x2000d434

0801d404 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d408:	ed2d 8b08 	vpush	{d8-d11}
 801d40c:	b093      	sub	sp, #76	; 0x4c
 801d40e:	461d      	mov	r5, r3
 801d410:	920c      	str	r2, [sp, #48]	; 0x30
 801d412:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801d414:	9107      	str	r1, [sp, #28]
 801d416:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801d41a:	9011      	str	r0, [sp, #68]	; 0x44
 801d41c:	6850      	ldr	r0, [r2, #4]
 801d41e:	6812      	ldr	r2, [r2, #0]
 801d420:	fb00 1303 	mla	r3, r0, r3, r1
 801d424:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801d428:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d42a:	689b      	ldr	r3, [r3, #8]
 801d42c:	3301      	adds	r3, #1
 801d42e:	f023 0301 	bic.w	r3, r3, #1
 801d432:	9306      	str	r3, [sp, #24]
 801d434:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d436:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801d43a:	681f      	ldr	r7, [r3, #0]
 801d43c:	eeb0 aa40 	vmov.f32	s20, s0
 801d440:	eef0 9a60 	vmov.f32	s19, s1
 801d444:	eeb0 9a41 	vmov.f32	s18, s2
 801d448:	eeb0 8a62 	vmov.f32	s16, s5
 801d44c:	eef0 8a43 	vmov.f32	s17, s6
 801d450:	eef0 ba44 	vmov.f32	s23, s8
 801d454:	eeb0 ba64 	vmov.f32	s22, s9
 801d458:	eef0 aa45 	vmov.f32	s21, s10
 801d45c:	9b07      	ldr	r3, [sp, #28]
 801d45e:	2b00      	cmp	r3, #0
 801d460:	dc03      	bgt.n	801d46a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d462:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d464:	2b00      	cmp	r3, #0
 801d466:	f340 8261 	ble.w	801d92c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801d46a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d46c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d470:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d474:	1e48      	subs	r0, r1, #1
 801d476:	f102 3cff 	add.w	ip, r2, #4294967295
 801d47a:	2d00      	cmp	r5, #0
 801d47c:	f340 80ef 	ble.w	801d65e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d480:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d484:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d488:	d406      	bmi.n	801d498 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d48a:	4586      	cmp	lr, r0
 801d48c:	da04      	bge.n	801d498 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d48e:	2b00      	cmp	r3, #0
 801d490:	db02      	blt.n	801d498 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801d492:	4563      	cmp	r3, ip
 801d494:	f2c0 80e4 	blt.w	801d660 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801d498:	f11e 0e01 	adds.w	lr, lr, #1
 801d49c:	f100 80d7 	bmi.w	801d64e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801d4a0:	4571      	cmp	r1, lr
 801d4a2:	f2c0 80d4 	blt.w	801d64e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801d4a6:	3301      	adds	r3, #1
 801d4a8:	f100 80d1 	bmi.w	801d64e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801d4ac:	429a      	cmp	r2, r3
 801d4ae:	f2c0 80ce 	blt.w	801d64e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801d4b2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801d4b6:	9509      	str	r5, [sp, #36]	; 0x24
 801d4b8:	46c8      	mov	r8, r9
 801d4ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4bc:	2b00      	cmp	r3, #0
 801d4be:	f340 80ec 	ble.w	801d69a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d4c2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801d4c6:	9308      	str	r3, [sp, #32]
 801d4c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801d4ca:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801d4ce:	1423      	asrs	r3, r4, #16
 801d4d0:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d4d4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801d4d8:	f100 813b 	bmi.w	801d752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d4dc:	f10c 3bff 	add.w	fp, ip, #4294967295
 801d4e0:	455b      	cmp	r3, fp
 801d4e2:	f280 8136 	bge.w	801d752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d4e6:	2800      	cmp	r0, #0
 801d4e8:	f2c0 8133 	blt.w	801d752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d4ec:	f10e 3bff 	add.w	fp, lr, #4294967295
 801d4f0:	4558      	cmp	r0, fp
 801d4f2:	f280 812e 	bge.w	801d752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d4f6:	9a06      	ldr	r2, [sp, #24]
 801d4f8:	fb00 3302 	mla	r3, r0, r2, r3
 801d4fc:	0858      	lsrs	r0, r3, #1
 801d4fe:	07da      	lsls	r2, r3, #31
 801d500:	f817 c000 	ldrb.w	ip, [r7, r0]
 801d504:	9a08      	ldr	r2, [sp, #32]
 801d506:	bf54      	ite	pl
 801d508:	f00c 0c0f 	andpl.w	ip, ip, #15
 801d50c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801d510:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801d514:	fa5f fc8c 	uxtb.w	ip, ip
 801d518:	2a00      	cmp	r2, #0
 801d51a:	f000 8101 	beq.w	801d720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801d51e:	1c58      	adds	r0, r3, #1
 801d520:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801d524:	07c0      	lsls	r0, r0, #31
 801d526:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d52a:	bf54      	ite	pl
 801d52c:	f00e 0e0f 	andpl.w	lr, lr, #15
 801d530:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801d534:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801d538:	fa5f fe8e 	uxtb.w	lr, lr
 801d53c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801d540:	b1b9      	cbz	r1, 801d572 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d542:	4453      	add	r3, sl
 801d544:	0858      	lsrs	r0, r3, #1
 801d546:	07da      	lsls	r2, r3, #31
 801d548:	5c38      	ldrb	r0, [r7, r0]
 801d54a:	bf54      	ite	pl
 801d54c:	f000 000f 	andpl.w	r0, r0, #15
 801d550:	1100      	asrmi	r0, r0, #4
 801d552:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801d556:	b2c0      	uxtb	r0, r0
 801d558:	900a      	str	r0, [sp, #40]	; 0x28
 801d55a:	1c58      	adds	r0, r3, #1
 801d55c:	0843      	lsrs	r3, r0, #1
 801d55e:	07c2      	lsls	r2, r0, #31
 801d560:	5cfb      	ldrb	r3, [r7, r3]
 801d562:	bf54      	ite	pl
 801d564:	f003 030f 	andpl.w	r3, r3, #15
 801d568:	111b      	asrmi	r3, r3, #4
 801d56a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d56e:	b2db      	uxtb	r3, r3
 801d570:	930e      	str	r3, [sp, #56]	; 0x38
 801d572:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d576:	b289      	uxth	r1, r1
 801d578:	fb02 f301 	mul.w	r3, r2, r1
 801d57c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801d580:	0112      	lsls	r2, r2, #4
 801d582:	b289      	uxth	r1, r1
 801d584:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801d588:	1a40      	subs	r0, r0, r1
 801d58a:	fa1f fe80 	uxth.w	lr, r0
 801d58e:	1ad2      	subs	r2, r2, r3
 801d590:	980d      	ldr	r0, [sp, #52]	; 0x34
 801d592:	b292      	uxth	r2, r2
 801d594:	4342      	muls	r2, r0
 801d596:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801d59a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d59c:	fb01 c102 	mla	r1, r1, r2, ip
 801d5a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d5a2:	fb03 1302 	mla	r3, r3, r2, r1
 801d5a6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d5aa:	2b00      	cmp	r3, #0
 801d5ac:	d045      	beq.n	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d5ae:	4a79      	ldr	r2, [pc, #484]	; (801d794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 801d5b0:	6811      	ldr	r1, [r2, #0]
 801d5b2:	2bff      	cmp	r3, #255	; 0xff
 801d5b4:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801d5b8:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801d5bc:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801d5c0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d5c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d5c8:	b2c9      	uxtb	r1, r1
 801d5ca:	f000 80ba 	beq.w	801d742 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d5ce:	f8b8 c000 	ldrh.w	ip, [r8]
 801d5d2:	fa1f fb83 	uxth.w	fp, r3
 801d5d6:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d5da:	43db      	mvns	r3, r3
 801d5dc:	b2db      	uxtb	r3, r3
 801d5de:	fb1e fe0b 	smulbb	lr, lr, fp
 801d5e2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d5e6:	fb00 e003 	mla	r0, r0, r3, lr
 801d5ea:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801d5ee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d5f2:	fb12 f20b 	smulbb	r2, r2, fp
 801d5f6:	fb0e 2203 	mla	r2, lr, r3, r2
 801d5fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d5fe:	b292      	uxth	r2, r2
 801d600:	fb11 f10b 	smulbb	r1, r1, fp
 801d604:	fa5f fc8c 	uxtb.w	ip, ip
 801d608:	b280      	uxth	r0, r0
 801d60a:	fb0c 1303 	mla	r3, ip, r3, r1
 801d60e:	f102 0e01 	add.w	lr, r2, #1
 801d612:	b29b      	uxth	r3, r3
 801d614:	1c41      	adds	r1, r0, #1
 801d616:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d61a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d61e:	0952      	lsrs	r2, r2, #5
 801d620:	1c59      	adds	r1, r3, #1
 801d622:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d626:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d62a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d62e:	4310      	orrs	r0, r2
 801d630:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d634:	4318      	orrs	r0, r3
 801d636:	f8a8 0000 	strh.w	r0, [r8]
 801d63a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d63c:	441c      	add	r4, r3
 801d63e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d640:	441e      	add	r6, r3
 801d642:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d644:	3b01      	subs	r3, #1
 801d646:	f108 0802 	add.w	r8, r8, #2
 801d64a:	9309      	str	r3, [sp, #36]	; 0x24
 801d64c:	e735      	b.n	801d4ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801d64e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d650:	441c      	add	r4, r3
 801d652:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d654:	3d01      	subs	r5, #1
 801d656:	441e      	add	r6, r3
 801d658:	f109 0902 	add.w	r9, r9, #2
 801d65c:	e70d      	b.n	801d47a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d65e:	d020      	beq.n	801d6a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 801d660:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801d662:	1e6b      	subs	r3, r5, #1
 801d664:	fb00 4003 	mla	r0, r0, r3, r4
 801d668:	1400      	asrs	r0, r0, #16
 801d66a:	f53f af22 	bmi.w	801d4b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d66e:	3901      	subs	r1, #1
 801d670:	4288      	cmp	r0, r1
 801d672:	f6bf af1e 	bge.w	801d4b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d676:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801d678:	fb01 6303 	mla	r3, r1, r3, r6
 801d67c:	141b      	asrs	r3, r3, #16
 801d67e:	f53f af18 	bmi.w	801d4b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d682:	3a01      	subs	r2, #1
 801d684:	4293      	cmp	r3, r2
 801d686:	f6bf af14 	bge.w	801d4b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801d68a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801d68e:	9308      	str	r3, [sp, #32]
 801d690:	46aa      	mov	sl, r5
 801d692:	46c8      	mov	r8, r9
 801d694:	f1ba 0f00 	cmp.w	sl, #0
 801d698:	dc7e      	bgt.n	801d798 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 801d69a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d69e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801d6a2:	9b07      	ldr	r3, [sp, #28]
 801d6a4:	2b00      	cmp	r3, #0
 801d6a6:	f340 8141 	ble.w	801d92c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 801d6aa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801d6ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d6b2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801d6b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d6b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801d6bc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801d6c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801d6c4:	eef0 6a48 	vmov.f32	s13, s16
 801d6c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 801d6cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 801d6d4:	ee16 4a90 	vmov	r4, s13
 801d6d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801d6dc:	eef0 6a68 	vmov.f32	s13, s17
 801d6e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801d6e4:	ee18 2a10 	vmov	r2, s16
 801d6e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801d6ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6f0:	ee18 2a90 	vmov	r2, s17
 801d6f4:	9327      	str	r3, [sp, #156]	; 0x9c
 801d6f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d6f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d6fc:	9328      	str	r3, [sp, #160]	; 0xa0
 801d6fe:	9b07      	ldr	r3, [sp, #28]
 801d700:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d702:	3b01      	subs	r3, #1
 801d704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d708:	9307      	str	r3, [sp, #28]
 801d70a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d70c:	ee16 6a90 	vmov	r6, s13
 801d710:	bf14      	ite	ne
 801d712:	461d      	movne	r5, r3
 801d714:	4615      	moveq	r5, r2
 801d716:	eef0 8a67 	vmov.f32	s17, s15
 801d71a:	eeb0 8a47 	vmov.f32	s16, s14
 801d71e:	e69d      	b.n	801d45c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d720:	2900      	cmp	r1, #0
 801d722:	f43f af26 	beq.w	801d572 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d726:	eb0a 0003 	add.w	r0, sl, r3
 801d72a:	0843      	lsrs	r3, r0, #1
 801d72c:	07c0      	lsls	r0, r0, #31
 801d72e:	5cfb      	ldrb	r3, [r7, r3]
 801d730:	bf54      	ite	pl
 801d732:	f003 030f 	andpl.w	r3, r3, #15
 801d736:	111b      	asrmi	r3, r3, #4
 801d738:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801d73c:	b2db      	uxtb	r3, r3
 801d73e:	930a      	str	r3, [sp, #40]	; 0x28
 801d740:	e717      	b.n	801d572 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801d742:	00d2      	lsls	r2, r2, #3
 801d744:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801d748:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801d74c:	f8a8 1000 	strh.w	r1, [r8]
 801d750:	e773      	b.n	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d752:	f113 0b01 	adds.w	fp, r3, #1
 801d756:	f53f af70 	bmi.w	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d75a:	45dc      	cmp	ip, fp
 801d75c:	f6ff af6d 	blt.w	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d760:	f110 0b01 	adds.w	fp, r0, #1
 801d764:	f53f af69 	bmi.w	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d768:	45de      	cmp	lr, fp
 801d76a:	f6ff af66 	blt.w	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d76e:	9a08      	ldr	r2, [sp, #32]
 801d770:	9302      	str	r3, [sp, #8]
 801d772:	fa0f f38e 	sxth.w	r3, lr
 801d776:	9301      	str	r3, [sp, #4]
 801d778:	fa0f f38c 	sxth.w	r3, ip
 801d77c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801d780:	9105      	str	r1, [sp, #20]
 801d782:	9300      	str	r3, [sp, #0]
 801d784:	463a      	mov	r2, r7
 801d786:	4653      	mov	r3, sl
 801d788:	4641      	mov	r1, r8
 801d78a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d78c:	f7ff fd56 	bl	801d23c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801d790:	e753      	b.n	801d63a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d792:	bf00      	nop
 801d794:	2000d434 	.word	0x2000d434
 801d798:	9906      	ldr	r1, [sp, #24]
 801d79a:	1422      	asrs	r2, r4, #16
 801d79c:	1433      	asrs	r3, r6, #16
 801d79e:	fb01 2303 	mla	r3, r1, r3, r2
 801d7a2:	085a      	lsrs	r2, r3, #1
 801d7a4:	07d9      	lsls	r1, r3, #31
 801d7a6:	5cba      	ldrb	r2, [r7, r2]
 801d7a8:	bf54      	ite	pl
 801d7aa:	f002 020f 	andpl.w	r2, r2, #15
 801d7ae:	1112      	asrmi	r2, r2, #4
 801d7b0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801d7b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801d7b8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d7bc:	b2d2      	uxtb	r2, r2
 801d7be:	2800      	cmp	r0, #0
 801d7c0:	f000 809b 	beq.w	801d8fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801d7c4:	f103 0e01 	add.w	lr, r3, #1
 801d7c8:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801d7cc:	f01e 0f01 	tst.w	lr, #1
 801d7d0:	5c79      	ldrb	r1, [r7, r1]
 801d7d2:	bf0c      	ite	eq
 801d7d4:	f001 010f 	andeq.w	r1, r1, #15
 801d7d8:	1109      	asrne	r1, r1, #4
 801d7da:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d7de:	b2c9      	uxtb	r1, r1
 801d7e0:	910f      	str	r1, [sp, #60]	; 0x3c
 801d7e2:	f1bc 0f00 	cmp.w	ip, #0
 801d7e6:	d019      	beq.n	801d81c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801d7e8:	9908      	ldr	r1, [sp, #32]
 801d7ea:	440b      	add	r3, r1
 801d7ec:	0859      	lsrs	r1, r3, #1
 801d7ee:	f013 0f01 	tst.w	r3, #1
 801d7f2:	5c79      	ldrb	r1, [r7, r1]
 801d7f4:	bf0c      	ite	eq
 801d7f6:	f001 010f 	andeq.w	r1, r1, #15
 801d7fa:	1109      	asrne	r1, r1, #4
 801d7fc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d800:	b2c9      	uxtb	r1, r1
 801d802:	3301      	adds	r3, #1
 801d804:	910b      	str	r1, [sp, #44]	; 0x2c
 801d806:	0859      	lsrs	r1, r3, #1
 801d808:	07db      	lsls	r3, r3, #31
 801d80a:	5c79      	ldrb	r1, [r7, r1]
 801d80c:	bf54      	ite	pl
 801d80e:	f001 010f 	andpl.w	r1, r1, #15
 801d812:	1109      	asrmi	r1, r1, #4
 801d814:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d818:	b2c9      	uxtb	r1, r1
 801d81a:	9110      	str	r1, [sp, #64]	; 0x40
 801d81c:	b280      	uxth	r0, r0
 801d81e:	fa1f fc8c 	uxth.w	ip, ip
 801d822:	fb00 f30c 	mul.w	r3, r0, ip
 801d826:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801d82a:	0100      	lsls	r0, r0, #4
 801d82c:	fa1f fc8c 	uxth.w	ip, ip
 801d830:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801d834:	eba1 010c 	sub.w	r1, r1, ip
 801d838:	fa1f fe81 	uxth.w	lr, r1
 801d83c:	1ac0      	subs	r0, r0, r3
 801d83e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d840:	b280      	uxth	r0, r0
 801d842:	4348      	muls	r0, r1
 801d844:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d846:	fb02 020e 	mla	r2, r2, lr, r0
 801d84a:	fb0c 2c01 	mla	ip, ip, r1, r2
 801d84e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d850:	fb03 c302 	mla	r3, r3, r2, ip
 801d854:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d858:	2b00      	cmp	r3, #0
 801d85a:	d045      	beq.n	801d8e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d85c:	4a36      	ldr	r2, [pc, #216]	; (801d938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 801d85e:	6811      	ldr	r1, [r2, #0]
 801d860:	2bff      	cmp	r3, #255	; 0xff
 801d862:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 801d866:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 801d86a:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 801d86e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d872:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d876:	b2c9      	uxtb	r1, r1
 801d878:	d050      	beq.n	801d91c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801d87a:	f8b8 c000 	ldrh.w	ip, [r8]
 801d87e:	fa1f fb83 	uxth.w	fp, r3
 801d882:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d886:	43db      	mvns	r3, r3
 801d888:	b2db      	uxtb	r3, r3
 801d88a:	fb1e fe0b 	smulbb	lr, lr, fp
 801d88e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d892:	fb00 e003 	mla	r0, r0, r3, lr
 801d896:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801d89a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d89e:	fb12 f20b 	smulbb	r2, r2, fp
 801d8a2:	fb0e 2203 	mla	r2, lr, r3, r2
 801d8a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d8aa:	b292      	uxth	r2, r2
 801d8ac:	fa5f fc8c 	uxtb.w	ip, ip
 801d8b0:	fb11 f10b 	smulbb	r1, r1, fp
 801d8b4:	b280      	uxth	r0, r0
 801d8b6:	fb0c 1103 	mla	r1, ip, r3, r1
 801d8ba:	f102 0e01 	add.w	lr, r2, #1
 801d8be:	b289      	uxth	r1, r1
 801d8c0:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d8c4:	f100 0e01 	add.w	lr, r0, #1
 801d8c8:	0952      	lsrs	r2, r2, #5
 801d8ca:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801d8ce:	1c4b      	adds	r3, r1, #1
 801d8d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d8d4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d8d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801d8dc:	4302      	orrs	r2, r0
 801d8de:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801d8e2:	430a      	orrs	r2, r1
 801d8e4:	f8a8 2000 	strh.w	r2, [r8]
 801d8e8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801d8ea:	441c      	add	r4, r3
 801d8ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d8ee:	f108 0802 	add.w	r8, r8, #2
 801d8f2:	441e      	add	r6, r3
 801d8f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d8f8:	e6cc      	b.n	801d694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801d8fa:	f1bc 0f00 	cmp.w	ip, #0
 801d8fe:	d08d      	beq.n	801d81c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801d900:	9908      	ldr	r1, [sp, #32]
 801d902:	440b      	add	r3, r1
 801d904:	0859      	lsrs	r1, r3, #1
 801d906:	07db      	lsls	r3, r3, #31
 801d908:	5c79      	ldrb	r1, [r7, r1]
 801d90a:	bf54      	ite	pl
 801d90c:	f001 010f 	andpl.w	r1, r1, #15
 801d910:	1109      	asrmi	r1, r1, #4
 801d912:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801d916:	b2c9      	uxtb	r1, r1
 801d918:	910b      	str	r1, [sp, #44]	; 0x2c
 801d91a:	e77f      	b.n	801d81c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 801d91c:	00d2      	lsls	r2, r2, #3
 801d91e:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801d922:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 801d926:	f8a8 1000 	strh.w	r1, [r8]
 801d92a:	e7dd      	b.n	801d8e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d92c:	b013      	add	sp, #76	; 0x4c
 801d92e:	ecbd 8b08 	vpop	{d8-d11}
 801d932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d936:	bf00      	nop
 801d938:	2000d434 	.word	0x2000d434

0801d93c <CRC_Lock>:
 801d93c:	b530      	push	{r4, r5, lr}
 801d93e:	4a1d      	ldr	r2, [pc, #116]	; (801d9b4 <CRC_Lock+0x78>)
 801d940:	6813      	ldr	r3, [r2, #0]
 801d942:	f023 0301 	bic.w	r3, r3, #1
 801d946:	6013      	str	r3, [r2, #0]
 801d948:	4b1b      	ldr	r3, [pc, #108]	; (801d9b8 <CRC_Lock+0x7c>)
 801d94a:	681a      	ldr	r2, [r3, #0]
 801d94c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801d950:	4022      	ands	r2, r4
 801d952:	f24c 2540 	movw	r5, #49728	; 0xc240
 801d956:	42aa      	cmp	r2, r5
 801d958:	d005      	beq.n	801d966 <CRC_Lock+0x2a>
 801d95a:	681b      	ldr	r3, [r3, #0]
 801d95c:	f24c 2270 	movw	r2, #49776	; 0xc270
 801d960:	4023      	ands	r3, r4
 801d962:	4293      	cmp	r3, r2
 801d964:	d11d      	bne.n	801d9a2 <CRC_Lock+0x66>
 801d966:	4b15      	ldr	r3, [pc, #84]	; (801d9bc <CRC_Lock+0x80>)
 801d968:	681b      	ldr	r3, [r3, #0]
 801d96a:	b9d3      	cbnz	r3, 801d9a2 <CRC_Lock+0x66>
 801d96c:	4a14      	ldr	r2, [pc, #80]	; (801d9c0 <CRC_Lock+0x84>)
 801d96e:	6813      	ldr	r3, [r2, #0]
 801d970:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d974:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801d978:	d006      	beq.n	801d988 <CRC_Lock+0x4c>
 801d97a:	6813      	ldr	r3, [r2, #0]
 801d97c:	f240 4283 	movw	r2, #1155	; 0x483
 801d980:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801d984:	4293      	cmp	r3, r2
 801d986:	d10c      	bne.n	801d9a2 <CRC_Lock+0x66>
 801d988:	4b0e      	ldr	r3, [pc, #56]	; (801d9c4 <CRC_Lock+0x88>)
 801d98a:	2201      	movs	r2, #1
 801d98c:	601a      	str	r2, [r3, #0]
 801d98e:	681a      	ldr	r2, [r3, #0]
 801d990:	2a00      	cmp	r2, #0
 801d992:	d1fc      	bne.n	801d98e <CRC_Lock+0x52>
 801d994:	4b0c      	ldr	r3, [pc, #48]	; (801d9c8 <CRC_Lock+0x8c>)
 801d996:	6018      	str	r0, [r3, #0]
 801d998:	6818      	ldr	r0, [r3, #0]
 801d99a:	1a43      	subs	r3, r0, r1
 801d99c:	4258      	negs	r0, r3
 801d99e:	4158      	adcs	r0, r3
 801d9a0:	bd30      	pop	{r4, r5, pc}
 801d9a2:	4b0a      	ldr	r3, [pc, #40]	; (801d9cc <CRC_Lock+0x90>)
 801d9a4:	2201      	movs	r2, #1
 801d9a6:	601a      	str	r2, [r3, #0]
 801d9a8:	681a      	ldr	r2, [r3, #0]
 801d9aa:	2a00      	cmp	r2, #0
 801d9ac:	d1fc      	bne.n	801d9a8 <CRC_Lock+0x6c>
 801d9ae:	4b08      	ldr	r3, [pc, #32]	; (801d9d0 <CRC_Lock+0x94>)
 801d9b0:	e7f1      	b.n	801d996 <CRC_Lock+0x5a>
 801d9b2:	bf00      	nop
 801d9b4:	e0002000 	.word	0xe0002000
 801d9b8:	e000ed00 	.word	0xe000ed00
 801d9bc:	e0042000 	.word	0xe0042000
 801d9c0:	5c001000 	.word	0x5c001000
 801d9c4:	58024c08 	.word	0x58024c08
 801d9c8:	58024c00 	.word	0x58024c00
 801d9cc:	40023008 	.word	0x40023008
 801d9d0:	40023000 	.word	0x40023000

0801d9d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801d9d4:	6101      	str	r1, [r0, #16]
 801d9d6:	4770      	bx	lr

0801d9d8 <_ZN8touchgfx8Gestures4tickEv>:
 801d9d8:	7b83      	ldrb	r3, [r0, #14]
 801d9da:	b14b      	cbz	r3, 801d9f0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801d9dc:	8903      	ldrh	r3, [r0, #8]
 801d9de:	3301      	adds	r3, #1
 801d9e0:	b29b      	uxth	r3, r3
 801d9e2:	2b07      	cmp	r3, #7
 801d9e4:	8103      	strh	r3, [r0, #8]
 801d9e6:	bf81      	itttt	hi
 801d9e8:	2300      	movhi	r3, #0
 801d9ea:	8143      	strhhi	r3, [r0, #10]
 801d9ec:	8183      	strhhi	r3, [r0, #12]
 801d9ee:	7383      	strbhi	r3, [r0, #14]
 801d9f0:	4770      	bx	lr
	...

0801d9f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801d9f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801d9f8:	4604      	mov	r4, r0
 801d9fa:	8880      	ldrh	r0, [r0, #4]
 801d9fc:	f8ad 0006 	strh.w	r0, [sp, #6]
 801da00:	4698      	mov	r8, r3
 801da02:	eba8 0000 	sub.w	r0, r8, r0
 801da06:	4b1c      	ldr	r3, [pc, #112]	; (801da78 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801da08:	9300      	str	r3, [sp, #0]
 801da0a:	b280      	uxth	r0, r0
 801da0c:	2300      	movs	r3, #0
 801da0e:	f88d 3004 	strb.w	r3, [sp, #4]
 801da12:	b203      	sxth	r3, r0
 801da14:	2b00      	cmp	r3, #0
 801da16:	bfb8      	it	lt
 801da18:	4240      	neglt	r0, r0
 801da1a:	4617      	mov	r7, r2
 801da1c:	8aa2      	ldrh	r2, [r4, #20]
 801da1e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801da22:	f8ad 800a 	strh.w	r8, [sp, #10]
 801da26:	bfb8      	it	lt
 801da28:	b203      	sxthlt	r3, r0
 801da2a:	460e      	mov	r6, r1
 801da2c:	4293      	cmp	r3, r2
 801da2e:	88e1      	ldrh	r1, [r4, #6]
 801da30:	f8ad 1008 	strh.w	r1, [sp, #8]
 801da34:	f8ad 500c 	strh.w	r5, [sp, #12]
 801da38:	dc08      	bgt.n	801da4c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801da3a:	1a69      	subs	r1, r5, r1
 801da3c:	b289      	uxth	r1, r1
 801da3e:	b20b      	sxth	r3, r1
 801da40:	2b00      	cmp	r3, #0
 801da42:	bfbc      	itt	lt
 801da44:	4249      	neglt	r1, r1
 801da46:	b20b      	sxthlt	r3, r1
 801da48:	429a      	cmp	r2, r3
 801da4a:	da13      	bge.n	801da74 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801da4c:	6920      	ldr	r0, [r4, #16]
 801da4e:	6803      	ldr	r3, [r0, #0]
 801da50:	4669      	mov	r1, sp
 801da52:	685b      	ldr	r3, [r3, #4]
 801da54:	4798      	blx	r3
 801da56:	eba8 0606 	sub.w	r6, r8, r6
 801da5a:	2300      	movs	r3, #0
 801da5c:	1bef      	subs	r7, r5, r7
 801da5e:	2001      	movs	r0, #1
 801da60:	8123      	strh	r3, [r4, #8]
 801da62:	8166      	strh	r6, [r4, #10]
 801da64:	81a7      	strh	r7, [r4, #12]
 801da66:	f8a4 8004 	strh.w	r8, [r4, #4]
 801da6a:	80e5      	strh	r5, [r4, #6]
 801da6c:	73a0      	strb	r0, [r4, #14]
 801da6e:	b004      	add	sp, #16
 801da70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801da74:	2000      	movs	r0, #0
 801da76:	e7fa      	b.n	801da6e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801da78:	080234f4 	.word	0x080234f4

0801da7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801da7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801da7e:	461e      	mov	r6, r3
 801da80:	1e4b      	subs	r3, r1, #1
 801da82:	2b01      	cmp	r3, #1
 801da84:	b085      	sub	sp, #20
 801da86:	4604      	mov	r4, r0
 801da88:	460d      	mov	r5, r1
 801da8a:	4617      	mov	r7, r2
 801da8c:	d84b      	bhi.n	801db26 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801da8e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801da92:	1cd3      	adds	r3, r2, #3
 801da94:	b29b      	uxth	r3, r3
 801da96:	2b06      	cmp	r3, #6
 801da98:	d916      	bls.n	801dac8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801da9a:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801db3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801da9e:	f8cd c004 	str.w	ip, [sp, #4]
 801daa2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801daa6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801daaa:	6900      	ldr	r0, [r0, #16]
 801daac:	f8ad 100c 	strh.w	r1, [sp, #12]
 801dab0:	f04f 0c00 	mov.w	ip, #0
 801dab4:	f88d c008 	strb.w	ip, [sp, #8]
 801dab8:	f8ad 200a 	strh.w	r2, [sp, #10]
 801dabc:	f8ad 300e 	strh.w	r3, [sp, #14]
 801dac0:	6803      	ldr	r3, [r0, #0]
 801dac2:	a901      	add	r1, sp, #4
 801dac4:	689b      	ldr	r3, [r3, #8]
 801dac6:	4798      	blx	r3
 801dac8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dacc:	1cd3      	adds	r3, r2, #3
 801dace:	b29b      	uxth	r3, r3
 801dad0:	2b06      	cmp	r3, #6
 801dad2:	d916      	bls.n	801db02 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801dad4:	f8df c064 	ldr.w	ip, [pc, #100]	; 801db3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801dad8:	f8cd c004 	str.w	ip, [sp, #4]
 801dadc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dae0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801dae4:	6920      	ldr	r0, [r4, #16]
 801dae6:	f8ad 100c 	strh.w	r1, [sp, #12]
 801daea:	f04f 0c01 	mov.w	ip, #1
 801daee:	f88d c008 	strb.w	ip, [sp, #8]
 801daf2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801daf6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801dafa:	6803      	ldr	r3, [r0, #0]
 801dafc:	a901      	add	r1, sp, #4
 801dafe:	689b      	ldr	r3, [r3, #8]
 801db00:	4798      	blx	r3
 801db02:	4b0d      	ldr	r3, [pc, #52]	; (801db38 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801db04:	9301      	str	r3, [sp, #4]
 801db06:	6920      	ldr	r0, [r4, #16]
 801db08:	f88d 5008 	strb.w	r5, [sp, #8]
 801db0c:	2300      	movs	r3, #0
 801db0e:	f8ad 700a 	strh.w	r7, [sp, #10]
 801db12:	f8ad 600c 	strh.w	r6, [sp, #12]
 801db16:	f8ad 300e 	strh.w	r3, [sp, #14]
 801db1a:	6803      	ldr	r3, [r0, #0]
 801db1c:	a901      	add	r1, sp, #4
 801db1e:	681b      	ldr	r3, [r3, #0]
 801db20:	4798      	blx	r3
 801db22:	b005      	add	sp, #20
 801db24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801db26:	2900      	cmp	r1, #0
 801db28:	d1eb      	bne.n	801db02 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801db2a:	80a2      	strh	r2, [r4, #4]
 801db2c:	80c6      	strh	r6, [r0, #6]
 801db2e:	60a1      	str	r1, [r4, #8]
 801db30:	81a1      	strh	r1, [r4, #12]
 801db32:	73a1      	strb	r1, [r4, #14]
 801db34:	e7e5      	b.n	801db02 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801db36:	bf00      	nop
 801db38:	080234e0 	.word	0x080234e0
 801db3c:	08023508 	.word	0x08023508

0801db40 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>:
 801db40:	10c9      	asrs	r1, r1, #3
 801db42:	2900      	cmp	r1, #0
 801db44:	bfb8      	it	lt
 801db46:	4249      	neglt	r1, r1
 801db48:	2801      	cmp	r0, #1
 801db4a:	d108      	bne.n	801db5e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 801db4c:	f3c1 0008 	ubfx	r0, r1, #0, #9
 801db50:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 801db54:	4601      	mov	r1, r0
 801db56:	dd02      	ble.n	801db5e <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 801db58:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 801db5c:	4770      	bx	lr
 801db5e:	29ff      	cmp	r1, #255	; 0xff
 801db60:	bfa8      	it	ge
 801db62:	21ff      	movge	r1, #255	; 0xff
 801db64:	4608      	mov	r0, r1
 801db66:	4770      	bx	lr

0801db68 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 801db68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db6c:	688c      	ldr	r4, [r1, #8]
 801db6e:	2c00      	cmp	r4, #0
 801db70:	b087      	sub	sp, #28
 801db72:	4607      	mov	r7, r0
 801db74:	db2b      	blt.n	801dbce <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801db76:	6803      	ldr	r3, [r0, #0]
 801db78:	691a      	ldr	r2, [r3, #16]
 801db7a:	42a2      	cmp	r2, r4
 801db7c:	dd27      	ble.n	801dbce <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 801db7e:	685a      	ldr	r2, [r3, #4]
 801db80:	695e      	ldr	r6, [r3, #20]
 801db82:	68cd      	ldr	r5, [r1, #12]
 801db84:	f8d1 901c 	ldr.w	r9, [r1, #28]
 801db88:	f893 a008 	ldrb.w	sl, [r3, #8]
 801db8c:	f8d1 8020 	ldr.w	r8, [r1, #32]
 801db90:	fb06 2604 	mla	r6, r6, r4, r2
 801db94:	698a      	ldr	r2, [r1, #24]
 801db96:	9205      	str	r2, [sp, #20]
 801db98:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 801db9c:	9b05      	ldr	r3, [sp, #20]
 801db9e:	6839      	ldr	r1, [r7, #0]
 801dba0:	eb03 0c02 	add.w	ip, r3, r2
 801dba4:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 801dba8:	68c9      	ldr	r1, [r1, #12]
 801dbaa:	1898      	adds	r0, r3, r2
 801dbac:	4288      	cmp	r0, r1
 801dbae:	db02      	blt.n	801dbb6 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 801dbb0:	1a8b      	subs	r3, r1, r2
 801dbb2:	2b00      	cmp	r3, #0
 801dbb4:	dd09      	ble.n	801dbca <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 801dbb6:	6878      	ldr	r0, [r7, #4]
 801dbb8:	6801      	ldr	r1, [r0, #0]
 801dbba:	9400      	str	r4, [sp, #0]
 801dbbc:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 801dbc0:	4653      	mov	r3, sl
 801dbc2:	f8d1 b008 	ldr.w	fp, [r1, #8]
 801dbc6:	4631      	mov	r1, r6
 801dbc8:	47d8      	blx	fp
 801dbca:	3d01      	subs	r5, #1
 801dbcc:	d1e4      	bne.n	801db98 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 801dbce:	b007      	add	sp, #28
 801dbd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dbd4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 801dbd4:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 801dbd8:	b90b      	cbnz	r3, 801dbde <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 801dbda:	f001 b9a2 	b.w	801ef22 <_ZN8touchgfx7Outline6lineToEii>
 801dbde:	4770      	bx	lr

0801dbe0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 801dbe0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dbe4:	4b8f      	ldr	r3, [pc, #572]	; (801de24 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x244>)
 801dbe6:	4604      	mov	r4, r0
 801dbe8:	2600      	movs	r6, #0
 801dbea:	f100 0518 	add.w	r5, r0, #24
 801dbee:	e9c0 3100 	strd	r3, r1, [r0]
 801dbf2:	b086      	sub	sp, #24
 801dbf4:	e9c0 6602 	strd	r6, r6, [r0, #8]
 801dbf8:	e9c0 6604 	strd	r6, r6, [r0, #16]
 801dbfc:	f104 0730 	add.w	r7, r4, #48	; 0x30
 801dc00:	4628      	mov	r0, r5
 801dc02:	4690      	mov	r8, r2
 801dc04:	f001 fbae 	bl	801f364 <_ZN8touchgfx15RenderingBufferC1Ev>
 801dc08:	4638      	mov	r0, r7
 801dc0a:	f000 fb63 	bl	801e2d4 <_ZN8touchgfx7OutlineC1Ev>
 801dc0e:	f104 0078 	add.w	r0, r4, #120	; 0x78
 801dc12:	f001 fb53 	bl	801f2bc <_ZN8touchgfx8ScanlineC1Ev>
 801dc16:	2301      	movs	r3, #1
 801dc18:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 801dc1c:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 801dc20:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801dc24:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 801dc28:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 801dc2c:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801dc30:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 801dc34:	f7ef ff24 	bl	800da80 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 801dc38:	b928      	cbnz	r0, 801dc46 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x66>
 801dc3a:	4b7b      	ldr	r3, [pc, #492]	; (801de28 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 801dc3c:	4a7b      	ldr	r2, [pc, #492]	; (801de2c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801dc3e:	2118      	movs	r1, #24
 801dc40:	487b      	ldr	r0, [pc, #492]	; (801de30 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 801dc42:	f001 fbd7 	bl	801f3f4 <__assert_func>
 801dc46:	f9b8 2000 	ldrsh.w	r2, [r8]
 801dc4a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 801dc4e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 801dc52:	9602      	str	r6, [sp, #8]
 801dc54:	4410      	add	r0, r2
 801dc56:	b280      	uxth	r0, r0
 801dc58:	fa0f fa80 	sxth.w	sl, r0
 801dc5c:	f1ba 0f00 	cmp.w	sl, #0
 801dc60:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 801dc64:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 801dc68:	dd70      	ble.n	801dd4c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801dc6a:	4591      	cmp	r9, r2
 801dc6c:	dd6e      	ble.n	801dd4c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801dc6e:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 801dc72:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801dc76:	440b      	add	r3, r1
 801dc78:	b29b      	uxth	r3, r3
 801dc7a:	b21e      	sxth	r6, r3
 801dc7c:	2e00      	cmp	r6, #0
 801dc7e:	dd65      	ble.n	801dd4c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801dc80:	458e      	cmp	lr, r1
 801dc82:	dd63      	ble.n	801dd4c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 801dc84:	45d1      	cmp	r9, sl
 801dc86:	bfb8      	it	lt
 801dc88:	fa1f f089 	uxthlt.w	r0, r9
 801dc8c:	45b6      	cmp	lr, r6
 801dc8e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 801dc92:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801dc96:	bfb8      	it	lt
 801dc98:	fa1f f38e 	uxthlt.w	r3, lr
 801dc9c:	1a80      	subs	r0, r0, r2
 801dc9e:	1a5b      	subs	r3, r3, r1
 801dca0:	f8ad 000c 	strh.w	r0, [sp, #12]
 801dca4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801dca8:	f8ad 2008 	strh.w	r2, [sp, #8]
 801dcac:	f8ad 100a 	strh.w	r1, [sp, #10]
 801dcb0:	f10d 0808 	add.w	r8, sp, #8
 801dcb4:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dcb8:	ae04      	add	r6, sp, #16
 801dcba:	e886 0003 	stmia.w	r6, {r0, r1}
 801dcbe:	f8dc 3000 	ldr.w	r3, [ip]
 801dcc2:	4660      	mov	r0, ip
 801dcc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dcc6:	4631      	mov	r1, r6
 801dcc8:	4798      	blx	r3
 801dcca:	6861      	ldr	r1, [r4, #4]
 801dccc:	4640      	mov	r0, r8
 801dcce:	3104      	adds	r1, #4
 801dcd0:	f7f1 f988 	bl	800efe4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dcd4:	4630      	mov	r0, r6
 801dcd6:	f7f1 f99d 	bl	800f014 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dcda:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 801dcde:	f7ef fe5f 	bl	800d9a0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 801dce2:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 801dce6:	4638      	mov	r0, r7
 801dce8:	f000 facf 	bl	801e28a <_ZN8touchgfx7Outline5resetEv>
 801dcec:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801dcf0:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 801dcf4:	015b      	lsls	r3, r3, #5
 801dcf6:	60e3      	str	r3, [r4, #12]
 801dcf8:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801dcfc:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801dd00:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 801dd04:	015b      	lsls	r3, r3, #5
 801dd06:	6123      	str	r3, [r4, #16]
 801dd08:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801dd0c:	015b      	lsls	r3, r3, #5
 801dd0e:	6163      	str	r3, [r4, #20]
 801dd10:	4b48      	ldr	r3, [pc, #288]	; (801de34 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 801dd12:	0152      	lsls	r2, r2, #5
 801dd14:	6818      	ldr	r0, [r3, #0]
 801dd16:	60a2      	str	r2, [r4, #8]
 801dd18:	6803      	ldr	r3, [r0, #0]
 801dd1a:	6a1b      	ldr	r3, [r3, #32]
 801dd1c:	4798      	blx	r3
 801dd1e:	4606      	mov	r6, r0
 801dd20:	f7e3 f864 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 801dd24:	6803      	ldr	r3, [r0, #0]
 801dd26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801dd28:	4798      	blx	r3
 801dd2a:	4607      	mov	r7, r0
 801dd2c:	f7e3 f85e 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 801dd30:	6803      	ldr	r3, [r0, #0]
 801dd32:	6a1b      	ldr	r3, [r3, #32]
 801dd34:	4798      	blx	r3
 801dd36:	280d      	cmp	r0, #13
 801dd38:	d855      	bhi.n	801dde6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x206>
 801dd3a:	e8df f000 	tbb	[pc, r0]
 801dd3e:	564c      	.short	0x564c
 801dd40:	2b6f0a67 	.word	0x2b6f0a67
 801dd44:	6060603b 	.word	0x6060603b
 801dd48:	6f6f6060 	.word	0x6f6f6060
 801dd4c:	2300      	movs	r3, #0
 801dd4e:	9303      	str	r3, [sp, #12]
 801dd50:	e7ae      	b.n	801dcb0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd0>
 801dd52:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd56:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dd5a:	2108      	movs	r1, #8
 801dd5c:	fb92 f1f1 	sdiv	r1, r2, r1
 801dd60:	fb07 1303 	mla	r3, r7, r3, r1
 801dd64:	441e      	add	r6, r3
 801dd66:	4253      	negs	r3, r2
 801dd68:	f003 0307 	and.w	r3, r3, #7
 801dd6c:	f002 0207 	and.w	r2, r2, #7
 801dd70:	bf58      	it	pl
 801dd72:	425a      	negpl	r2, r3
 801dd74:	b2d2      	uxtb	r2, r2
 801dd76:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dd7a:	6721      	str	r1, [r4, #112]	; 0x70
 801dd7c:	e9cd 1700 	strd	r1, r7, [sp]
 801dd80:	4628      	mov	r0, r5
 801dd82:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801dd86:	4631      	mov	r1, r6
 801dd88:	f001 faf8 	bl	801f37c <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 801dd8c:	4620      	mov	r0, r4
 801dd8e:	b006      	add	sp, #24
 801dd90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dd94:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dd98:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801dd9c:	2104      	movs	r1, #4
 801dd9e:	fb92 f1f1 	sdiv	r1, r2, r1
 801dda2:	fb07 1303 	mla	r3, r7, r3, r1
 801dda6:	441e      	add	r6, r3
 801dda8:	4253      	negs	r3, r2
 801ddaa:	f003 0303 	and.w	r3, r3, #3
 801ddae:	f002 0203 	and.w	r2, r2, #3
 801ddb2:	e7dd      	b.n	801dd70 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x190>
 801ddb4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ddb8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ddbc:	2a00      	cmp	r2, #0
 801ddbe:	f04f 0102 	mov.w	r1, #2
 801ddc2:	fb92 f1f1 	sdiv	r1, r2, r1
 801ddc6:	f002 0201 	and.w	r2, r2, #1
 801ddca:	fb07 1303 	mla	r3, r7, r3, r1
 801ddce:	441e      	add	r6, r3
 801ddd0:	bfb8      	it	lt
 801ddd2:	4252      	neglt	r2, r2
 801ddd4:	e7ce      	b.n	801dd74 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 801ddd6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ddda:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ddde:	437b      	muls	r3, r7
 801dde0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801dde4:	441e      	add	r6, r3
 801dde6:	2200      	movs	r2, #0
 801dde8:	e7c5      	b.n	801dd76 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x196>
 801ddea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ddee:	fb07 f203 	mul.w	r2, r7, r3
 801ddf2:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801ddf6:	2103      	movs	r1, #3
 801ddf8:	fb13 2301 	smlabb	r3, r3, r1, r2
 801ddfc:	e7f2      	b.n	801dde4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801ddfe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801de02:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801de06:	fb07 2303 	mla	r3, r7, r3, r2
 801de0a:	e7eb      	b.n	801dde4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801de0c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801de10:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801de14:	437b      	muls	r3, r7
 801de16:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801de1a:	e7e3      	b.n	801dde4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 801de1c:	4b06      	ldr	r3, [pc, #24]	; (801de38 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 801de1e:	4a03      	ldr	r2, [pc, #12]	; (801de2c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 801de20:	2157      	movs	r1, #87	; 0x57
 801de22:	e70d      	b.n	801dc40 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x60>
 801de24:	08024940 	.word	0x08024940
 801de28:	0802488b 	.word	0x0802488b
 801de2c:	08024948 	.word	0x08024948
 801de30:	080248e7 	.word	0x080248e7
 801de34:	2000d40c 	.word	0x2000d40c
 801de38:	0802491b 	.word	0x0802491b

0801de3c <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 801de3c:	6812      	ldr	r2, [r2, #0]
 801de3e:	2a00      	cmp	r2, #0
 801de40:	db0b      	blt.n	801de5a <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 801de42:	9800      	ldr	r0, [sp, #0]
 801de44:	6800      	ldr	r0, [r0, #0]
 801de46:	4290      	cmp	r0, r2
 801de48:	bfd4      	ite	le
 801de4a:	2002      	movle	r0, #2
 801de4c:	2000      	movgt	r0, #0
 801de4e:	680a      	ldr	r2, [r1, #0]
 801de50:	2a00      	cmp	r2, #0
 801de52:	da04      	bge.n	801de5e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 801de54:	f040 0004 	orr.w	r0, r0, #4
 801de58:	4770      	bx	lr
 801de5a:	2001      	movs	r0, #1
 801de5c:	e7f7      	b.n	801de4e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 801de5e:	681b      	ldr	r3, [r3, #0]
 801de60:	4293      	cmp	r3, r2
 801de62:	bfd8      	it	le
 801de64:	f040 0008 	orrle.w	r0, r0, #8
 801de68:	4770      	bx	lr
	...

0801de6c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 801de6c:	b510      	push	{r4, lr}
 801de6e:	4b07      	ldr	r3, [pc, #28]	; (801de8c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 801de70:	781b      	ldrb	r3, [r3, #0]
 801de72:	2b01      	cmp	r3, #1
 801de74:	d108      	bne.n	801de88 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 801de76:	6843      	ldr	r3, [r0, #4]
 801de78:	6814      	ldr	r4, [r2, #0]
 801de7a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801de7e:	680b      	ldr	r3, [r1, #0]
 801de80:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 801de84:	6013      	str	r3, [r2, #0]
 801de86:	600c      	str	r4, [r1, #0]
 801de88:	bd10      	pop	{r4, pc}
 801de8a:	bf00      	nop
 801de8c:	2000d404 	.word	0x2000d404

0801de90 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 801de90:	b5f0      	push	{r4, r5, r6, r7, lr}
 801de92:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801de96:	b085      	sub	sp, #20
 801de98:	4604      	mov	r4, r0
 801de9a:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801de9e:	b33b      	cbz	r3, 801def0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 801dea0:	aa02      	add	r2, sp, #8
 801dea2:	a903      	add	r1, sp, #12
 801dea4:	f7ff ffe2 	bl	801de6c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801dea8:	68a3      	ldr	r3, [r4, #8]
 801deaa:	9e03      	ldr	r6, [sp, #12]
 801deac:	9f02      	ldr	r7, [sp, #8]
 801deae:	1af6      	subs	r6, r6, r3
 801deb0:	68e3      	ldr	r3, [r4, #12]
 801deb2:	9603      	str	r6, [sp, #12]
 801deb4:	1aff      	subs	r7, r7, r3
 801deb6:	f104 0314 	add.w	r3, r4, #20
 801deba:	9300      	str	r3, [sp, #0]
 801debc:	aa02      	add	r2, sp, #8
 801debe:	f104 0310 	add.w	r3, r4, #16
 801dec2:	a903      	add	r1, sp, #12
 801dec4:	4620      	mov	r0, r4
 801dec6:	9702      	str	r7, [sp, #8]
 801dec8:	f7ff ffb8 	bl	801de3c <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801decc:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 801ded0:	4605      	mov	r5, r0
 801ded2:	b97b      	cbnz	r3, 801def4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 801ded4:	463a      	mov	r2, r7
 801ded6:	4631      	mov	r1, r6
 801ded8:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801dedc:	f7ff fe7a 	bl	801dbd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801dee0:	9b03      	ldr	r3, [sp, #12]
 801dee2:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 801dee6:	9b02      	ldr	r3, [sp, #8]
 801dee8:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 801deec:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 801def0:	b005      	add	sp, #20
 801def2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801def4:	b110      	cbz	r0, 801defc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 801def6:	ea13 0200 	ands.w	r2, r3, r0
 801defa:	d11c      	bne.n	801df36 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 801defc:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 801df00:	f104 0630 	add.w	r6, r4, #48	; 0x30
 801df04:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 801df08:	b188      	cbz	r0, 801df2e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 801df0a:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 801df0e:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801df12:	b913      	cbnz	r3, 801df1a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 801df14:	4630      	mov	r0, r6
 801df16:	f001 f834 	bl	801ef82 <_ZN8touchgfx7Outline6moveToEii>
 801df1a:	2300      	movs	r3, #0
 801df1c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801df20:	2301      	movs	r3, #1
 801df22:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801df26:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801df2a:	4630      	mov	r0, r6
 801df2c:	e7d6      	b.n	801dedc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 801df2e:	4630      	mov	r0, r6
 801df30:	f7ff fe50 	bl	801dbd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801df34:	e7f7      	b.n	801df26 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 801df36:	4615      	mov	r5, r2
 801df38:	e7d2      	b.n	801dee0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0801df3a <_ZN8touchgfx6Canvas5closeEv>:
 801df3a:	b538      	push	{r3, r4, r5, lr}
 801df3c:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801df40:	4604      	mov	r4, r0
 801df42:	b993      	cbnz	r3, 801df6a <_ZN8touchgfx6Canvas5closeEv+0x30>
 801df44:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 801df48:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 801df4c:	4213      	tst	r3, r2
 801df4e:	d10c      	bne.n	801df6a <_ZN8touchgfx6Canvas5closeEv+0x30>
 801df50:	f100 0530 	add.w	r5, r0, #48	; 0x30
 801df54:	b123      	cbz	r3, 801df60 <_ZN8touchgfx6Canvas5closeEv+0x26>
 801df56:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 801df5a:	4628      	mov	r0, r5
 801df5c:	f7ff fe3a 	bl	801dbd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801df60:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 801df64:	4628      	mov	r0, r5
 801df66:	f7ff fe35 	bl	801dbd4 <_ZN8touchgfx10Rasterizer6lineToEii>
 801df6a:	2300      	movs	r3, #0
 801df6c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801df70:	bd38      	pop	{r3, r4, r5, pc}

0801df72 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 801df72:	b5f0      	push	{r4, r5, r6, r7, lr}
 801df74:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801df78:	b085      	sub	sp, #20
 801df7a:	4604      	mov	r4, r0
 801df7c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 801df80:	b353      	cbz	r3, 801dfd8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 801df82:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 801df86:	b90b      	cbnz	r3, 801df8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 801df88:	f7ff ffd7 	bl	801df3a <_ZN8touchgfx6Canvas5closeEv>
 801df8c:	aa02      	add	r2, sp, #8
 801df8e:	a903      	add	r1, sp, #12
 801df90:	4620      	mov	r0, r4
 801df92:	f7ff ff6b 	bl	801de6c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 801df96:	68a3      	ldr	r3, [r4, #8]
 801df98:	9d03      	ldr	r5, [sp, #12]
 801df9a:	9e02      	ldr	r6, [sp, #8]
 801df9c:	1aed      	subs	r5, r5, r3
 801df9e:	68e3      	ldr	r3, [r4, #12]
 801dfa0:	9503      	str	r5, [sp, #12]
 801dfa2:	1af6      	subs	r6, r6, r3
 801dfa4:	f104 0314 	add.w	r3, r4, #20
 801dfa8:	9300      	str	r3, [sp, #0]
 801dfaa:	aa02      	add	r2, sp, #8
 801dfac:	f104 0310 	add.w	r3, r4, #16
 801dfb0:	a903      	add	r1, sp, #12
 801dfb2:	4620      	mov	r0, r4
 801dfb4:	9602      	str	r6, [sp, #8]
 801dfb6:	f7ff ff41 	bl	801de3c <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 801dfba:	4607      	mov	r7, r0
 801dfbc:	b170      	cbz	r0, 801dfdc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 801dfbe:	2301      	movs	r3, #1
 801dfc0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801dfc4:	9a03      	ldr	r2, [sp, #12]
 801dfc6:	9b02      	ldr	r3, [sp, #8]
 801dfc8:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 801dfcc:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 801dfd0:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 801dfd4:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 801dfd8:	b005      	add	sp, #20
 801dfda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dfdc:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 801dfe0:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 801dfe4:	b92b      	cbnz	r3, 801dff2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 801dfe6:	4632      	mov	r2, r6
 801dfe8:	4629      	mov	r1, r5
 801dfea:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801dfee:	f000 ffc8 	bl	801ef82 <_ZN8touchgfx7Outline6moveToEii>
 801dff2:	2300      	movs	r3, #0
 801dff4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 801dff8:	2301      	movs	r3, #1
 801dffa:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 801dffe:	e7e1      	b.n	801dfc4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0801e000 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 801e000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e004:	b087      	sub	sp, #28
 801e006:	4604      	mov	r4, r0
 801e008:	9105      	str	r1, [sp, #20]
 801e00a:	f001 f900 	bl	801f20e <_ZN8touchgfx7Outline8getCellsEv>
 801e00e:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801e012:	4605      	mov	r5, r0
 801e014:	f1b9 0f00 	cmp.w	r9, #0
 801e018:	d103      	bne.n	801e022 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 801e01a:	2001      	movs	r0, #1
 801e01c:	b007      	add	sp, #28
 801e01e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e022:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 801e026:	2e00      	cmp	r6, #0
 801e028:	d139      	bne.n	801e09e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 801e02a:	f104 0848 	add.w	r8, r4, #72	; 0x48
 801e02e:	4640      	mov	r0, r8
 801e030:	f001 f92f 	bl	801f292 <_ZN8touchgfx8Scanline5resetEv>
 801e034:	f109 33ff 	add.w	r3, r9, #4294967295
 801e038:	f105 0708 	add.w	r7, r5, #8
 801e03c:	9303      	str	r3, [sp, #12]
 801e03e:	f9b5 b000 	ldrsh.w	fp, [r5]
 801e042:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 801e046:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801e04a:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 801e04e:	46da      	mov	sl, fp
 801e050:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 801e054:	9b03      	ldr	r3, [sp, #12]
 801e056:	9504      	str	r5, [sp, #16]
 801e058:	3b01      	subs	r3, #1
 801e05a:	9303      	str	r3, [sp, #12]
 801e05c:	3301      	adds	r3, #1
 801e05e:	4416      	add	r6, r2
 801e060:	463d      	mov	r5, r7
 801e062:	d01e      	beq.n	801e0a2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 801e064:	3708      	adds	r7, #8
 801e066:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 801e06a:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 801e06e:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 801e072:	4290      	cmp	r0, r2
 801e074:	d11e      	bne.n	801e0b4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 801e076:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 801e07a:	4411      	add	r1, r2
 801e07c:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 801e080:	e7e8      	b.n	801e054 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 801e082:	1c91      	adds	r1, r2, #2
 801e084:	f04f 0301 	mov.w	r3, #1
 801e088:	65e1      	str	r1, [r4, #92]	; 0x5c
 801e08a:	8053      	strh	r3, [r2, #2]
 801e08c:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801e08e:	1c91      	adds	r1, r2, #2
 801e090:	65a1      	str	r1, [r4, #88]	; 0x58
 801e092:	f8a2 b002 	strh.w	fp, [r2, #2]
 801e096:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801e098:	3201      	adds	r2, #1
 801e09a:	6562      	str	r2, [r4, #84]	; 0x54
 801e09c:	e03a      	b.n	801e114 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 801e09e:	2000      	movs	r0, #0
 801e0a0:	e7bc      	b.n	801e01c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 801e0a2:	b951      	cbnz	r1, 801e0ba <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 801e0a4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801e0a6:	2b00      	cmp	r3, #0
 801e0a8:	d0b7      	beq.n	801e01a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801e0aa:	4641      	mov	r1, r8
 801e0ac:	9805      	ldr	r0, [sp, #20]
 801e0ae:	f7ff fd5b 	bl	801db68 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801e0b2:	e7b2      	b.n	801e01a <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 801e0b4:	2900      	cmp	r1, #0
 801e0b6:	d035      	beq.n	801e124 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 801e0b8:	9504      	str	r5, [sp, #16]
 801e0ba:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 801e0be:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801e0c2:	f7ff fd3d 	bl	801db40 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 801e0c6:	4605      	mov	r5, r0
 801e0c8:	b330      	cbz	r0, 801e118 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801e0ca:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801e0cc:	b182      	cbz	r2, 801e0f0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801e0ce:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801e0d0:	454a      	cmp	r2, r9
 801e0d2:	d00d      	beq.n	801e0f0 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 801e0d4:	4641      	mov	r1, r8
 801e0d6:	9805      	ldr	r0, [sp, #20]
 801e0d8:	f7ff fd46 	bl	801db68 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801e0dc:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801e0e0:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 801e0e2:	65e2      	str	r2, [r4, #92]	; 0x5c
 801e0e4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801e0e8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801e0ea:	65a2      	str	r2, [r4, #88]	; 0x58
 801e0ec:	2300      	movs	r3, #0
 801e0ee:	6563      	str	r3, [r4, #84]	; 0x54
 801e0f0:	f1bb 0f00 	cmp.w	fp, #0
 801e0f4:	db10      	blt.n	801e118 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801e0f6:	f7ef fcd1 	bl	800da9c <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801e0fa:	4583      	cmp	fp, r0
 801e0fc:	d20c      	bcs.n	801e118 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 801e0fe:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801e100:	f802 500b 	strb.w	r5, [r2, fp]
 801e104:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 801e106:	3201      	adds	r2, #1
 801e108:	455a      	cmp	r2, fp
 801e10a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801e10c:	d1b9      	bne.n	801e082 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 801e10e:	8811      	ldrh	r1, [r2, #0]
 801e110:	3101      	adds	r1, #1
 801e112:	8011      	strh	r1, [r2, #0]
 801e114:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 801e118:	9b03      	ldr	r3, [sp, #12]
 801e11a:	3301      	adds	r3, #1
 801e11c:	d0c2      	beq.n	801e0a4 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 801e11e:	9d04      	ldr	r5, [sp, #16]
 801e120:	f10b 0a01 	add.w	sl, fp, #1
 801e124:	f9b5 3000 	ldrsh.w	r3, [r5]
 801e128:	4553      	cmp	r3, sl
 801e12a:	dd88      	ble.n	801e03e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801e12c:	01b1      	lsls	r1, r6, #6
 801e12e:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 801e132:	f7ff fd05 	bl	801db40 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 801e136:	4683      	mov	fp, r0
 801e138:	2800      	cmp	r0, #0
 801e13a:	d080      	beq.n	801e03e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 801e13c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801e13e:	b183      	cbz	r3, 801e162 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801e140:	6d23      	ldr	r3, [r4, #80]	; 0x50
 801e142:	454b      	cmp	r3, r9
 801e144:	d00d      	beq.n	801e162 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 801e146:	4641      	mov	r1, r8
 801e148:	9805      	ldr	r0, [sp, #20]
 801e14a:	f7ff fd0d 	bl	801db68 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 801e14e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801e152:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801e156:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 801e158:	65e3      	str	r3, [r4, #92]	; 0x5c
 801e15a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801e15c:	65a3      	str	r3, [r4, #88]	; 0x58
 801e15e:	2300      	movs	r3, #0
 801e160:	6563      	str	r3, [r4, #84]	; 0x54
 801e162:	f9b5 3000 	ldrsh.w	r3, [r5]
 801e166:	f8cd b000 	str.w	fp, [sp]
 801e16a:	eba3 030a 	sub.w	r3, r3, sl
 801e16e:	464a      	mov	r2, r9
 801e170:	4651      	mov	r1, sl
 801e172:	4640      	mov	r0, r8
 801e174:	f001 f8b4 	bl	801f2e0 <_ZN8touchgfx8Scanline7addSpanEiijj>
 801e178:	e761      	b.n	801e03e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0801e17a <_ZN8touchgfx6Canvas6renderEh>:
 801e17a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801e17c:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 801e180:	4604      	mov	r4, r0
 801e182:	460d      	mov	r5, r1
 801e184:	b913      	cbnz	r3, 801e18c <_ZN8touchgfx6Canvas6renderEh+0x12>
 801e186:	2001      	movs	r0, #1
 801e188:	b003      	add	sp, #12
 801e18a:	bd30      	pop	{r4, r5, pc}
 801e18c:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 801e190:	2b00      	cmp	r3, #0
 801e192:	d12f      	bne.n	801e1f4 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 801e194:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 801e198:	2b00      	cmp	r3, #0
 801e19a:	d0f4      	beq.n	801e186 <_ZN8touchgfx6Canvas6renderEh+0xc>
 801e19c:	6840      	ldr	r0, [r0, #4]
 801e19e:	6803      	ldr	r3, [r0, #0]
 801e1a0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801e1a2:	4798      	blx	r3
 801e1a4:	fb10 f105 	smulbb	r1, r0, r5
 801e1a8:	b288      	uxth	r0, r1
 801e1aa:	1c41      	adds	r1, r0, #1
 801e1ac:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e1b0:	120d      	asrs	r5, r1, #8
 801e1b2:	d0e8      	beq.n	801e186 <_ZN8touchgfx6Canvas6renderEh+0xc>
 801e1b4:	4620      	mov	r0, r4
 801e1b6:	f7ff fec0 	bl	801df3a <_ZN8touchgfx6Canvas5closeEv>
 801e1ba:	6860      	ldr	r0, [r4, #4]
 801e1bc:	6803      	ldr	r3, [r0, #0]
 801e1be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801e1c0:	4798      	blx	r3
 801e1c2:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 801e1c6:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 801e1ca:	80c3      	strh	r3, [r0, #6]
 801e1cc:	8082      	strh	r2, [r0, #4]
 801e1ce:	6860      	ldr	r0, [r4, #4]
 801e1d0:	6803      	ldr	r3, [r0, #0]
 801e1d2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801e1d4:	4798      	blx	r3
 801e1d6:	7205      	strb	r5, [r0, #8]
 801e1d8:	6860      	ldr	r0, [r4, #4]
 801e1da:	6803      	ldr	r3, [r0, #0]
 801e1dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801e1de:	4798      	blx	r3
 801e1e0:	f104 0318 	add.w	r3, r4, #24
 801e1e4:	e9cd 3000 	strd	r3, r0, [sp]
 801e1e8:	4669      	mov	r1, sp
 801e1ea:	f104 0030 	add.w	r0, r4, #48	; 0x30
 801e1ee:	f7ff ff07 	bl	801e000 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 801e1f2:	e7c9      	b.n	801e188 <_ZN8touchgfx6Canvas6renderEh+0xe>
 801e1f4:	2000      	movs	r0, #0
 801e1f6:	e7c7      	b.n	801e188 <_ZN8touchgfx6Canvas6renderEh+0xe>

0801e1f8 <_ZN8touchgfx6CanvasD1Ev>:
 801e1f8:	b538      	push	{r3, r4, r5, lr}
 801e1fa:	4605      	mov	r5, r0
 801e1fc:	4b08      	ldr	r3, [pc, #32]	; (801e220 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 801e1fe:	f845 3b30 	str.w	r3, [r5], #48
 801e202:	4b08      	ldr	r3, [pc, #32]	; (801e224 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 801e204:	4604      	mov	r4, r0
 801e206:	6818      	ldr	r0, [r3, #0]
 801e208:	6803      	ldr	r3, [r0, #0]
 801e20a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e20c:	4798      	blx	r3
 801e20e:	4628      	mov	r0, r5
 801e210:	f000 f833 	bl	801e27a <_ZN8touchgfx7OutlineD1Ev>
 801e214:	f104 0018 	add.w	r0, r4, #24
 801e218:	f001 f89b 	bl	801f352 <_ZN8touchgfx15RenderingBufferD1Ev>
 801e21c:	4620      	mov	r0, r4
 801e21e:	bd38      	pop	{r3, r4, r5, pc}
 801e220:	08024940 	.word	0x08024940
 801e224:	2000d40c 	.word	0x2000d40c

0801e228 <_ZN8touchgfx6CanvasD0Ev>:
 801e228:	b510      	push	{r4, lr}
 801e22a:	4604      	mov	r4, r0
 801e22c:	f7ff ffe4 	bl	801e1f8 <_ZN8touchgfx6CanvasD1Ev>
 801e230:	4620      	mov	r0, r4
 801e232:	21bc      	movs	r1, #188	; 0xbc
 801e234:	f001 f8af 	bl	801f396 <_ZdlPvj>
 801e238:	4620      	mov	r0, r4
 801e23a:	bd10      	pop	{r4, pc}

0801e23c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801e23c:	b570      	push	{r4, r5, r6, lr}
 801e23e:	790b      	ldrb	r3, [r1, #4]
 801e240:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801e244:	2b00      	cmp	r3, #0
 801e246:	bf0c      	ite	eq
 801e248:	2301      	moveq	r3, #1
 801e24a:	2300      	movne	r3, #0
 801e24c:	4604      	mov	r4, r0
 801e24e:	460e      	mov	r6, r1
 801e250:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801e254:	d109      	bne.n	801e26a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801e256:	b14d      	cbz	r5, 801e26c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801e258:	7933      	ldrb	r3, [r6, #4]
 801e25a:	2b01      	cmp	r3, #1
 801e25c:	d10c      	bne.n	801e278 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801e25e:	6823      	ldr	r3, [r4, #0]
 801e260:	4620      	mov	r0, r4
 801e262:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801e264:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801e268:	4718      	bx	r3
 801e26a:	b12d      	cbz	r5, 801e278 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801e26c:	6823      	ldr	r3, [r4, #0]
 801e26e:	4620      	mov	r0, r4
 801e270:	695b      	ldr	r3, [r3, #20]
 801e272:	4798      	blx	r3
 801e274:	2d00      	cmp	r5, #0
 801e276:	d1ef      	bne.n	801e258 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801e278:	bd70      	pop	{r4, r5, r6, pc}

0801e27a <_ZN8touchgfx7OutlineD1Ev>:
 801e27a:	4770      	bx	lr

0801e27c <_ZN8touchgfx7OutlineD0Ev>:
 801e27c:	b510      	push	{r4, lr}
 801e27e:	2148      	movs	r1, #72	; 0x48
 801e280:	4604      	mov	r4, r0
 801e282:	f001 f888 	bl	801f396 <_ZdlPvj>
 801e286:	4620      	mov	r0, r4
 801e288:	bd10      	pop	{r4, pc}

0801e28a <_ZN8touchgfx7Outline5resetEv>:
 801e28a:	b510      	push	{r4, lr}
 801e28c:	4604      	mov	r4, r0
 801e28e:	f7ef fc1d 	bl	800dacc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801e292:	60e0      	str	r0, [r4, #12]
 801e294:	f7ef fc20 	bl	800dad8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801e298:	68e3      	ldr	r3, [r4, #12]
 801e29a:	6123      	str	r3, [r4, #16]
 801e29c:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801e2a0:	82a3      	strh	r3, [r4, #20]
 801e2a2:	82e3      	strh	r3, [r4, #22]
 801e2a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801e2a6:	f023 0301 	bic.w	r3, r3, #1
 801e2aa:	f043 0302 	orr.w	r3, r3, #2
 801e2ae:	63e3      	str	r3, [r4, #60]	; 0x3c
 801e2b0:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801e2b4:	2200      	movs	r2, #0
 801e2b6:	08c0      	lsrs	r0, r0, #3
 801e2b8:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801e2bc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801e2c0:	6060      	str	r0, [r4, #4]
 801e2c2:	60a2      	str	r2, [r4, #8]
 801e2c4:	8322      	strh	r2, [r4, #24]
 801e2c6:	8362      	strh	r2, [r4, #26]
 801e2c8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801e2cc:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801e2d0:	bd10      	pop	{r4, pc}
	...

0801e2d4 <_ZN8touchgfx7OutlineC1Ev>:
 801e2d4:	b510      	push	{r4, lr}
 801e2d6:	4b0f      	ldr	r3, [pc, #60]	; (801e314 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 801e2d8:	6003      	str	r3, [r0, #0]
 801e2da:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801e2de:	2300      	movs	r3, #0
 801e2e0:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801e2e4:	4604      	mov	r4, r0
 801e2e6:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801e2ea:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801e2ee:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801e2f2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801e2f6:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 801e2fa:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 801e2fe:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 801e302:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 801e306:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 801e30a:	f7ff ffbe 	bl	801e28a <_ZN8touchgfx7Outline5resetEv>
 801e30e:	4620      	mov	r0, r4
 801e310:	bd10      	pop	{r4, pc}
 801e312:	bf00      	nop
 801e314:	080249a0 	.word	0x080249a0

0801e318 <_ZN8touchgfx7Outline10renderLineEiiii>:
 801e318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e31c:	b093      	sub	sp, #76	; 0x4c
 801e31e:	4604      	mov	r4, r0
 801e320:	981c      	ldr	r0, [sp, #112]	; 0x70
 801e322:	9305      	str	r3, [sp, #20]
 801e324:	1143      	asrs	r3, r0, #5
 801e326:	930c      	str	r3, [sp, #48]	; 0x30
 801e328:	f000 031f 	and.w	r3, r0, #31
 801e32c:	9303      	str	r3, [sp, #12]
 801e32e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801e330:	1156      	asrs	r6, r2, #5
 801e332:	42b3      	cmp	r3, r6
 801e334:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801e336:	bfc8      	it	gt
 801e338:	6326      	strgt	r6, [r4, #48]	; 0x30
 801e33a:	42b3      	cmp	r3, r6
 801e33c:	bfdc      	itt	le
 801e33e:	1c73      	addle	r3, r6, #1
 801e340:	63a3      	strle	r3, [r4, #56]	; 0x38
 801e342:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801e344:	1145      	asrs	r5, r0, #5
 801e346:	42ab      	cmp	r3, r5
 801e348:	bfc4      	itt	gt
 801e34a:	462b      	movgt	r3, r5
 801e34c:	6323      	strgt	r3, [r4, #48]	; 0x30
 801e34e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801e350:	1145      	asrs	r5, r0, #5
 801e352:	42ab      	cmp	r3, r5
 801e354:	bfde      	ittt	le
 801e356:	462b      	movle	r3, r5
 801e358:	3301      	addle	r3, #1
 801e35a:	63a3      	strle	r3, [r4, #56]	; 0x38
 801e35c:	9b05      	ldr	r3, [sp, #20]
 801e35e:	eba3 0a01 	sub.w	sl, r3, r1
 801e362:	1143      	asrs	r3, r0, #5
 801e364:	429e      	cmp	r6, r3
 801e366:	f002 0e1f 	and.w	lr, r2, #31
 801e36a:	ea4f 1561 	mov.w	r5, r1, asr #5
 801e36e:	f040 811e 	bne.w	801e5ae <_ZN8touchgfx7Outline10renderLineEiiii+0x296>
 801e372:	9b05      	ldr	r3, [sp, #20]
 801e374:	ea4f 1c63 	mov.w	ip, r3, asr #5
 801e378:	9b03      	ldr	r3, [sp, #12]
 801e37a:	459e      	cmp	lr, r3
 801e37c:	d12c      	bne.n	801e3d8 <_ZN8touchgfx7Outline10renderLineEiiii+0xc0>
 801e37e:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801e382:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 801e386:	eb0c 4106 	add.w	r1, ip, r6, lsl #16
 801e38a:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 801e38e:	4291      	cmp	r1, r2
 801e390:	d037      	beq.n	801e402 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801e392:	8b61      	ldrh	r1, [r4, #26]
 801e394:	8b22      	ldrh	r2, [r4, #24]
 801e396:	430a      	orrs	r2, r1
 801e398:	d00b      	beq.n	801e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801e39a:	2b00      	cmp	r3, #0
 801e39c:	db09      	blt.n	801e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801e39e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801e3a0:	429a      	cmp	r2, r3
 801e3a2:	dd06      	ble.n	801e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801e3a4:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801e3a8:	429a      	cmp	r2, r3
 801e3aa:	d308      	bcc.n	801e3be <_ZN8touchgfx7Outline10renderLineEiiii+0xa6>
 801e3ac:	2301      	movs	r3, #1
 801e3ae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e3b2:	f8a4 c014 	strh.w	ip, [r4, #20]
 801e3b6:	82e6      	strh	r6, [r4, #22]
 801e3b8:	2300      	movs	r3, #0
 801e3ba:	8323      	strh	r3, [r4, #24]
 801e3bc:	e0cb      	b.n	801e556 <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 801e3be:	f104 0314 	add.w	r3, r4, #20
 801e3c2:	cb03      	ldmia	r3!, {r0, r1}
 801e3c4:	6922      	ldr	r2, [r4, #16]
 801e3c6:	6010      	str	r0, [r2, #0]
 801e3c8:	6051      	str	r1, [r2, #4]
 801e3ca:	6923      	ldr	r3, [r4, #16]
 801e3cc:	3308      	adds	r3, #8
 801e3ce:	6123      	str	r3, [r4, #16]
 801e3d0:	68a3      	ldr	r3, [r4, #8]
 801e3d2:	3301      	adds	r3, #1
 801e3d4:	60a3      	str	r3, [r4, #8]
 801e3d6:	e7ec      	b.n	801e3b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a>
 801e3d8:	9b05      	ldr	r3, [sp, #20]
 801e3da:	8b20      	ldrh	r0, [r4, #24]
 801e3dc:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 801e3e0:	f003 031f 	and.w	r3, r3, #31
 801e3e4:	9304      	str	r3, [sp, #16]
 801e3e6:	9b03      	ldr	r3, [sp, #12]
 801e3e8:	45ac      	cmp	ip, r5
 801e3ea:	f001 011f 	and.w	r1, r1, #31
 801e3ee:	eba3 020e 	sub.w	r2, r3, lr
 801e3f2:	d109      	bne.n	801e408 <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 801e3f4:	9b04      	ldr	r3, [sp, #16]
 801e3f6:	4419      	add	r1, r3
 801e3f8:	4410      	add	r0, r2
 801e3fa:	fb02 8201 	mla	r2, r2, r1, r8
 801e3fe:	8320      	strh	r0, [r4, #24]
 801e400:	8362      	strh	r2, [r4, #26]
 801e402:	b013      	add	sp, #76	; 0x4c
 801e404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e408:	f1ba 0f00 	cmp.w	sl, #0
 801e40c:	f2c0 80a5 	blt.w	801e55a <_ZN8touchgfx7Outline10renderLineEiiii+0x242>
 801e410:	f1c1 0320 	rsb	r3, r1, #32
 801e414:	435a      	muls	r2, r3
 801e416:	2301      	movs	r3, #1
 801e418:	9302      	str	r3, [sp, #8]
 801e41a:	f04f 0b20 	mov.w	fp, #32
 801e41e:	fb92 f7fa 	sdiv	r7, r2, sl
 801e422:	fb0a 2217 	mls	r2, sl, r7, r2
 801e426:	2a00      	cmp	r2, #0
 801e428:	bfb8      	it	lt
 801e42a:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801e42e:	4459      	add	r1, fp
 801e430:	fb07 8101 	mla	r1, r7, r1, r8
 801e434:	b20b      	sxth	r3, r1
 801e436:	9902      	ldr	r1, [sp, #8]
 801e438:	9301      	str	r3, [sp, #4]
 801e43a:	8363      	strh	r3, [r4, #26]
 801e43c:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 801e440:	eb05 0301 	add.w	r3, r5, r1
 801e444:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 801e448:	9300      	str	r3, [sp, #0]
 801e44a:	ea4f 4506 	mov.w	r5, r6, lsl #16
 801e44e:	4438      	add	r0, r7
 801e450:	eb03 0905 	add.w	r9, r3, r5
 801e454:	eb08 4801 	add.w	r8, r8, r1, lsl #16
 801e458:	bfb8      	it	lt
 801e45a:	4452      	addlt	r2, sl
 801e45c:	b200      	sxth	r0, r0
 801e45e:	45c1      	cmp	r9, r8
 801e460:	8320      	strh	r0, [r4, #24]
 801e462:	9505      	str	r5, [sp, #20]
 801e464:	d014      	beq.n	801e490 <_ZN8touchgfx7Outline10renderLineEiiii+0x178>
 801e466:	9b01      	ldr	r3, [sp, #4]
 801e468:	4303      	orrs	r3, r0
 801e46a:	d00b      	beq.n	801e484 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801e46c:	2900      	cmp	r1, #0
 801e46e:	db09      	blt.n	801e484 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801e470:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e472:	428b      	cmp	r3, r1
 801e474:	dd06      	ble.n	801e484 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801e476:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e47a:	4299      	cmp	r1, r3
 801e47c:	d376      	bcc.n	801e56c <_ZN8touchgfx7Outline10renderLineEiiii+0x254>
 801e47e:	2301      	movs	r3, #1
 801e480:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e484:	9b00      	ldr	r3, [sp, #0]
 801e486:	82a3      	strh	r3, [r4, #20]
 801e488:	2300      	movs	r3, #0
 801e48a:	82e6      	strh	r6, [r4, #22]
 801e48c:	8323      	strh	r3, [r4, #24]
 801e48e:	8363      	strh	r3, [r4, #26]
 801e490:	9900      	ldr	r1, [sp, #0]
 801e492:	458c      	cmp	ip, r1
 801e494:	eb0e 0307 	add.w	r3, lr, r7
 801e498:	d050      	beq.n	801e53c <_ZN8touchgfx7Outline10renderLineEiiii+0x224>
 801e49a:	9903      	ldr	r1, [sp, #12]
 801e49c:	1ac9      	subs	r1, r1, r3
 801e49e:	440f      	add	r7, r1
 801e4a0:	017f      	lsls	r7, r7, #5
 801e4a2:	fb97 fefa 	sdiv	lr, r7, sl
 801e4a6:	fb0a 771e 	mls	r7, sl, lr, r7
 801e4aa:	2f00      	cmp	r7, #0
 801e4ac:	bfb8      	it	lt
 801e4ae:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801e4b2:	eba2 020a 	sub.w	r2, r2, sl
 801e4b6:	f10e 0101 	add.w	r1, lr, #1
 801e4ba:	bfb8      	it	lt
 801e4bc:	4457      	addlt	r7, sl
 801e4be:	9201      	str	r2, [sp, #4]
 801e4c0:	9106      	str	r1, [sp, #24]
 801e4c2:	9a01      	ldr	r2, [sp, #4]
 801e4c4:	8b20      	ldrh	r0, [r4, #24]
 801e4c6:	8b61      	ldrh	r1, [r4, #26]
 801e4c8:	9d02      	ldr	r5, [sp, #8]
 801e4ca:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801e4ce:	19d2      	adds	r2, r2, r7
 801e4d0:	9201      	str	r2, [sp, #4]
 801e4d2:	bf5e      	ittt	pl
 801e4d4:	eba2 020a 	subpl.w	r2, r2, sl
 801e4d8:	f8dd 8018 	ldrpl.w	r8, [sp, #24]
 801e4dc:	9201      	strpl	r2, [sp, #4]
 801e4de:	9a00      	ldr	r2, [sp, #0]
 801e4e0:	bf48      	it	mi
 801e4e2:	46f0      	movmi	r8, lr
 801e4e4:	442a      	add	r2, r5
 801e4e6:	4440      	add	r0, r8
 801e4e8:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 801e4ec:	4443      	add	r3, r8
 801e4ee:	9d05      	ldr	r5, [sp, #20]
 801e4f0:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801e4f4:	9200      	str	r2, [sp, #0]
 801e4f6:	4415      	add	r5, r2
 801e4f8:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801e4fc:	b200      	sxth	r0, r0
 801e4fe:	b209      	sxth	r1, r1
 801e500:	454d      	cmp	r5, r9
 801e502:	8320      	strh	r0, [r4, #24]
 801e504:	8361      	strh	r1, [r4, #26]
 801e506:	d016      	beq.n	801e536 <_ZN8touchgfx7Outline10renderLineEiiii+0x21e>
 801e508:	4301      	orrs	r1, r0
 801e50a:	d00d      	beq.n	801e528 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801e50c:	f1b8 0f00 	cmp.w	r8, #0
 801e510:	db0a      	blt.n	801e528 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801e512:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e514:	4541      	cmp	r1, r8
 801e516:	dd07      	ble.n	801e528 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801e518:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e51c:	4288      	cmp	r0, r1
 801e51e:	d335      	bcc.n	801e58c <_ZN8touchgfx7Outline10renderLineEiiii+0x274>
 801e520:	f04f 0101 	mov.w	r1, #1
 801e524:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801e528:	9900      	ldr	r1, [sp, #0]
 801e52a:	82a1      	strh	r1, [r4, #20]
 801e52c:	f04f 0100 	mov.w	r1, #0
 801e530:	82e6      	strh	r6, [r4, #22]
 801e532:	8321      	strh	r1, [r4, #24]
 801e534:	8361      	strh	r1, [r4, #26]
 801e536:	9a00      	ldr	r2, [sp, #0]
 801e538:	4594      	cmp	ip, r2
 801e53a:	d1c2      	bne.n	801e4c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1aa>
 801e53c:	9a03      	ldr	r2, [sp, #12]
 801e53e:	f8b4 c01a 	ldrh.w	ip, [r4, #26]
 801e542:	1ad3      	subs	r3, r2, r3
 801e544:	8b22      	ldrh	r2, [r4, #24]
 801e546:	441a      	add	r2, r3
 801e548:	8322      	strh	r2, [r4, #24]
 801e54a:	9a04      	ldr	r2, [sp, #16]
 801e54c:	3220      	adds	r2, #32
 801e54e:	eba2 020b 	sub.w	r2, r2, fp
 801e552:	fb03 c302 	mla	r3, r3, r2, ip
 801e556:	8363      	strh	r3, [r4, #26]
 801e558:	e753      	b.n	801e402 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801e55a:	f04f 33ff 	mov.w	r3, #4294967295
 801e55e:	434a      	muls	r2, r1
 801e560:	f1ca 0a00 	rsb	sl, sl, #0
 801e564:	9302      	str	r3, [sp, #8]
 801e566:	f04f 0b00 	mov.w	fp, #0
 801e56a:	e758      	b.n	801e41e <_ZN8touchgfx7Outline10renderLineEiiii+0x106>
 801e56c:	f104 0314 	add.w	r3, r4, #20
 801e570:	cb03      	ldmia	r3!, {r0, r1}
 801e572:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801e576:	f8c8 0000 	str.w	r0, [r8]
 801e57a:	f8c8 1004 	str.w	r1, [r8, #4]
 801e57e:	6923      	ldr	r3, [r4, #16]
 801e580:	3308      	adds	r3, #8
 801e582:	6123      	str	r3, [r4, #16]
 801e584:	68a3      	ldr	r3, [r4, #8]
 801e586:	3301      	adds	r3, #1
 801e588:	60a3      	str	r3, [r4, #8]
 801e58a:	e77b      	b.n	801e484 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 801e58c:	f104 0814 	add.w	r8, r4, #20
 801e590:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801e594:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801e598:	f8c9 0000 	str.w	r0, [r9]
 801e59c:	f8c9 1004 	str.w	r1, [r9, #4]
 801e5a0:	6921      	ldr	r1, [r4, #16]
 801e5a2:	3108      	adds	r1, #8
 801e5a4:	6121      	str	r1, [r4, #16]
 801e5a6:	68a1      	ldr	r1, [r4, #8]
 801e5a8:	3101      	adds	r1, #1
 801e5aa:	60a1      	str	r1, [r4, #8]
 801e5ac:	e7bc      	b.n	801e528 <_ZN8touchgfx7Outline10renderLineEiiii+0x210>
 801e5ae:	1a83      	subs	r3, r0, r2
 801e5b0:	9301      	str	r3, [sp, #4]
 801e5b2:	f1ba 0f00 	cmp.w	sl, #0
 801e5b6:	f040 8096 	bne.w	801e6e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801e5ba:	9a01      	ldr	r2, [sp, #4]
 801e5bc:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 801e5c0:	2a00      	cmp	r2, #0
 801e5c2:	ea4f 0141 	mov.w	r1, r1, lsl #1
 801e5c6:	8b62      	ldrh	r2, [r4, #26]
 801e5c8:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 801e5cc:	bfa8      	it	ge
 801e5ce:	f04f 0a20 	movge.w	sl, #32
 801e5d2:	8b21      	ldrh	r1, [r4, #24]
 801e5d4:	bfb4      	ite	lt
 801e5d6:	f04f 38ff 	movlt.w	r8, #4294967295
 801e5da:	f04f 0801 	movge.w	r8, #1
 801e5de:	ebaa 0e0e 	sub.w	lr, sl, lr
 801e5e2:	4471      	add	r1, lr
 801e5e4:	fb0e 2e03 	mla	lr, lr, r3, r2
 801e5e8:	eb08 0206 	add.w	r2, r8, r6
 801e5ec:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801e5f0:	eb05 4702 	add.w	r7, r5, r2, lsl #16
 801e5f4:	eb06 4600 	add.w	r6, r6, r0, lsl #16
 801e5f8:	b209      	sxth	r1, r1
 801e5fa:	fa0f fe8e 	sxth.w	lr, lr
 801e5fe:	42b7      	cmp	r7, r6
 801e600:	8321      	strh	r1, [r4, #24]
 801e602:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801e606:	d013      	beq.n	801e630 <_ZN8touchgfx7Outline10renderLineEiiii+0x318>
 801e608:	ea51 010e 	orrs.w	r1, r1, lr
 801e60c:	d00b      	beq.n	801e626 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801e60e:	2800      	cmp	r0, #0
 801e610:	db09      	blt.n	801e626 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801e612:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e614:	4281      	cmp	r1, r0
 801e616:	dd06      	ble.n	801e626 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801e618:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e61c:	4288      	cmp	r0, r1
 801e61e:	d339      	bcc.n	801e694 <_ZN8touchgfx7Outline10renderLineEiiii+0x37c>
 801e620:	2101      	movs	r1, #1
 801e622:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801e626:	2100      	movs	r1, #0
 801e628:	82a5      	strh	r5, [r4, #20]
 801e62a:	82e2      	strh	r2, [r4, #22]
 801e62c:	8321      	strh	r1, [r4, #24]
 801e62e:	8361      	strh	r1, [r4, #26]
 801e630:	f1aa 0610 	sub.w	r6, sl, #16
 801e634:	0076      	lsls	r6, r6, #1
 801e636:	fb06 f703 	mul.w	r7, r6, r3
 801e63a:	b23f      	sxth	r7, r7
 801e63c:	b236      	sxth	r6, r6
 801e63e:	ea46 0107 	orr.w	r1, r6, r7
 801e642:	9100      	str	r1, [sp, #0]
 801e644:	f04f 0e00 	mov.w	lr, #0
 801e648:	f04f 0b01 	mov.w	fp, #1
 801e64c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e64e:	428a      	cmp	r2, r1
 801e650:	d03e      	beq.n	801e6d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x3b8>
 801e652:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 801e656:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 801e65a:	8326      	strh	r6, [r4, #24]
 801e65c:	4442      	add	r2, r8
 801e65e:	eb05 4c02 	add.w	ip, r5, r2, lsl #16
 801e662:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 801e666:	4584      	cmp	ip, r0
 801e668:	8367      	strh	r7, [r4, #26]
 801e66a:	d0ef      	beq.n	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x334>
 801e66c:	9800      	ldr	r0, [sp, #0]
 801e66e:	b150      	cbz	r0, 801e686 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801e670:	2900      	cmp	r1, #0
 801e672:	db08      	blt.n	801e686 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801e674:	6c20      	ldr	r0, [r4, #64]	; 0x40
 801e676:	4288      	cmp	r0, r1
 801e678:	dd05      	ble.n	801e686 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801e67a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801e67e:	4288      	cmp	r0, r1
 801e680:	d315      	bcc.n	801e6ae <_ZN8touchgfx7Outline10renderLineEiiii+0x396>
 801e682:	f884 b044 	strb.w	fp, [r4, #68]	; 0x44
 801e686:	82a5      	strh	r5, [r4, #20]
 801e688:	82e2      	strh	r2, [r4, #22]
 801e68a:	f8a4 e018 	strh.w	lr, [r4, #24]
 801e68e:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801e692:	e7db      	b.n	801e64c <_ZN8touchgfx7Outline10renderLineEiiii+0x334>
 801e694:	f104 0614 	add.w	r6, r4, #20
 801e698:	ce03      	ldmia	r6!, {r0, r1}
 801e69a:	6927      	ldr	r7, [r4, #16]
 801e69c:	6038      	str	r0, [r7, #0]
 801e69e:	6079      	str	r1, [r7, #4]
 801e6a0:	6921      	ldr	r1, [r4, #16]
 801e6a2:	3108      	adds	r1, #8
 801e6a4:	6121      	str	r1, [r4, #16]
 801e6a6:	68a1      	ldr	r1, [r4, #8]
 801e6a8:	3101      	adds	r1, #1
 801e6aa:	60a1      	str	r1, [r4, #8]
 801e6ac:	e7bb      	b.n	801e626 <_ZN8touchgfx7Outline10renderLineEiiii+0x30e>
 801e6ae:	f104 0c14 	add.w	ip, r4, #20
 801e6b2:	e8bc 0003 	ldmia.w	ip!, {r0, r1}
 801e6b6:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801e6ba:	f8c9 0000 	str.w	r0, [r9]
 801e6be:	f8c9 1004 	str.w	r1, [r9, #4]
 801e6c2:	6921      	ldr	r1, [r4, #16]
 801e6c4:	3108      	adds	r1, #8
 801e6c6:	6121      	str	r1, [r4, #16]
 801e6c8:	68a1      	ldr	r1, [r4, #8]
 801e6ca:	3101      	adds	r1, #1
 801e6cc:	60a1      	str	r1, [r4, #8]
 801e6ce:	e7da      	b.n	801e686 <_ZN8touchgfx7Outline10renderLineEiiii+0x36e>
 801e6d0:	9a03      	ldr	r2, [sp, #12]
 801e6d2:	8b61      	ldrh	r1, [r4, #26]
 801e6d4:	f1a2 0c20 	sub.w	ip, r2, #32
 801e6d8:	8b22      	ldrh	r2, [r4, #24]
 801e6da:	44d4      	add	ip, sl
 801e6dc:	4462      	add	r2, ip
 801e6de:	8322      	strh	r2, [r4, #24]
 801e6e0:	fb0c 1303 	mla	r3, ip, r3, r1
 801e6e4:	e737      	b.n	801e556 <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 801e6e6:	9b01      	ldr	r3, [sp, #4]
 801e6e8:	2b00      	cmp	r3, #0
 801e6ea:	db3f      	blt.n	801e76c <_ZN8touchgfx7Outline10renderLineEiiii+0x454>
 801e6ec:	2201      	movs	r2, #1
 801e6ee:	f1ce 0320 	rsb	r3, lr, #32
 801e6f2:	920b      	str	r2, [sp, #44]	; 0x2c
 801e6f4:	fb0a f303 	mul.w	r3, sl, r3
 801e6f8:	2220      	movs	r2, #32
 801e6fa:	9202      	str	r2, [sp, #8]
 801e6fc:	9a01      	ldr	r2, [sp, #4]
 801e6fe:	fb93 f7f2 	sdiv	r7, r3, r2
 801e702:	fb02 3317 	mls	r3, r2, r7, r3
 801e706:	2b00      	cmp	r3, #0
 801e708:	bfb8      	it	lt
 801e70a:	f107 37ff 	addlt.w	r7, r7, #4294967295
 801e70e:	9308      	str	r3, [sp, #32]
 801e710:	eb07 0b01 	add.w	fp, r7, r1
 801e714:	bfbc      	itt	lt
 801e716:	189b      	addlt	r3, r3, r2
 801e718:	9308      	strlt	r3, [sp, #32]
 801e71a:	ea4f 136b 	mov.w	r3, fp, asr #5
 801e71e:	9304      	str	r3, [sp, #16]
 801e720:	9b02      	ldr	r3, [sp, #8]
 801e722:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801e726:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801e72a:	4573      	cmp	r3, lr
 801e72c:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801e730:	d133      	bne.n	801e79a <_ZN8touchgfx7Outline10renderLineEiiii+0x482>
 801e732:	9b04      	ldr	r3, [sp, #16]
 801e734:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 801e738:	454b      	cmp	r3, r9
 801e73a:	d045      	beq.n	801e7c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4b0>
 801e73c:	8b62      	ldrh	r2, [r4, #26]
 801e73e:	8b23      	ldrh	r3, [r4, #24]
 801e740:	4313      	orrs	r3, r2
 801e742:	d00c      	beq.n	801e75e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801e744:	f1b8 0f00 	cmp.w	r8, #0
 801e748:	db09      	blt.n	801e75e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801e74a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e74c:	4543      	cmp	r3, r8
 801e74e:	dd06      	ble.n	801e75e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801e750:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801e754:	429a      	cmp	r2, r3
 801e756:	d313      	bcc.n	801e780 <_ZN8touchgfx7Outline10renderLineEiiii+0x468>
 801e758:	2301      	movs	r3, #1
 801e75a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e75e:	9b04      	ldr	r3, [sp, #16]
 801e760:	82a3      	strh	r3, [r4, #20]
 801e762:	2300      	movs	r3, #0
 801e764:	82e6      	strh	r6, [r4, #22]
 801e766:	8323      	strh	r3, [r4, #24]
 801e768:	8363      	strh	r3, [r4, #26]
 801e76a:	e02d      	b.n	801e7c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4b0>
 801e76c:	9a01      	ldr	r2, [sp, #4]
 801e76e:	4252      	negs	r2, r2
 801e770:	9201      	str	r2, [sp, #4]
 801e772:	f04f 32ff 	mov.w	r2, #4294967295
 801e776:	920b      	str	r2, [sp, #44]	; 0x2c
 801e778:	fb0a f30e 	mul.w	r3, sl, lr
 801e77c:	2200      	movs	r2, #0
 801e77e:	e7bc      	b.n	801e6fa <_ZN8touchgfx7Outline10renderLineEiiii+0x3e2>
 801e780:	f104 0314 	add.w	r3, r4, #20
 801e784:	cb03      	ldmia	r3!, {r0, r1}
 801e786:	6922      	ldr	r2, [r4, #16]
 801e788:	6010      	str	r0, [r2, #0]
 801e78a:	6051      	str	r1, [r2, #4]
 801e78c:	6923      	ldr	r3, [r4, #16]
 801e78e:	3308      	adds	r3, #8
 801e790:	6123      	str	r3, [r4, #16]
 801e792:	68a3      	ldr	r3, [r4, #8]
 801e794:	3301      	adds	r3, #1
 801e796:	60a3      	str	r3, [r4, #8]
 801e798:	e7e1      	b.n	801e75e <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801e79a:	f00b 031f 	and.w	r3, fp, #31
 801e79e:	9309      	str	r3, [sp, #36]	; 0x24
 801e7a0:	9b02      	ldr	r3, [sp, #8]
 801e7a2:	8b20      	ldrh	r0, [r4, #24]
 801e7a4:	eba3 020e 	sub.w	r2, r3, lr
 801e7a8:	8b63      	ldrh	r3, [r4, #26]
 801e7aa:	9300      	str	r3, [sp, #0]
 801e7ac:	9b04      	ldr	r3, [sp, #16]
 801e7ae:	42ab      	cmp	r3, r5
 801e7b0:	f001 011f 	and.w	r1, r1, #31
 801e7b4:	f040 80ef 	bne.w	801e996 <_ZN8touchgfx7Outline10renderLineEiiii+0x67e>
 801e7b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e7ba:	4419      	add	r1, r3
 801e7bc:	9b00      	ldr	r3, [sp, #0]
 801e7be:	4410      	add	r0, r2
 801e7c0:	fb02 3101 	mla	r1, r2, r1, r3
 801e7c4:	8320      	strh	r0, [r4, #24]
 801e7c6:	8361      	strh	r1, [r4, #26]
 801e7c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e7ca:	9904      	ldr	r1, [sp, #16]
 801e7cc:	4433      	add	r3, r6
 801e7ce:	9300      	str	r3, [sp, #0]
 801e7d0:	9a00      	ldr	r2, [sp, #0]
 801e7d2:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801e7d6:	eb01 4002 	add.w	r0, r1, r2, lsl #16
 801e7da:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801e7de:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801e7e2:	4288      	cmp	r0, r1
 801e7e4:	d018      	beq.n	801e818 <_ZN8touchgfx7Outline10renderLineEiiii+0x500>
 801e7e6:	8b60      	ldrh	r0, [r4, #26]
 801e7e8:	8b21      	ldrh	r1, [r4, #24]
 801e7ea:	ea50 0201 	orrs.w	r2, r0, r1
 801e7ee:	d00c      	beq.n	801e80a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801e7f0:	2b00      	cmp	r3, #0
 801e7f2:	db0a      	blt.n	801e80a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801e7f4:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e7f6:	4299      	cmp	r1, r3
 801e7f8:	dd07      	ble.n	801e80a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801e7fa:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e7fe:	4299      	cmp	r1, r3
 801e800:	f0c0 8190 	bcc.w	801eb24 <_ZN8touchgfx7Outline10renderLineEiiii+0x80c>
 801e804:	2301      	movs	r3, #1
 801e806:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e80a:	9b04      	ldr	r3, [sp, #16]
 801e80c:	82a3      	strh	r3, [r4, #20]
 801e80e:	9b00      	ldr	r3, [sp, #0]
 801e810:	82e3      	strh	r3, [r4, #22]
 801e812:	2300      	movs	r3, #0
 801e814:	8323      	strh	r3, [r4, #24]
 801e816:	8363      	strh	r3, [r4, #26]
 801e818:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e81a:	9a00      	ldr	r2, [sp, #0]
 801e81c:	4293      	cmp	r3, r2
 801e81e:	f000 808d 	beq.w	801e93c <_ZN8touchgfx7Outline10renderLineEiiii+0x624>
 801e822:	9801      	ldr	r0, [sp, #4]
 801e824:	9901      	ldr	r1, [sp, #4]
 801e826:	ea4f 134a 	mov.w	r3, sl, lsl #5
 801e82a:	fb93 f1f1 	sdiv	r1, r3, r1
 801e82e:	fb00 3311 	mls	r3, r0, r1, r3
 801e832:	2b00      	cmp	r3, #0
 801e834:	9106      	str	r1, [sp, #24]
 801e836:	9307      	str	r3, [sp, #28]
 801e838:	da04      	bge.n	801e844 <_ZN8touchgfx7Outline10renderLineEiiii+0x52c>
 801e83a:	1e4b      	subs	r3, r1, #1
 801e83c:	9306      	str	r3, [sp, #24]
 801e83e:	9b07      	ldr	r3, [sp, #28]
 801e840:	4403      	add	r3, r0
 801e842:	9307      	str	r3, [sp, #28]
 801e844:	9b08      	ldr	r3, [sp, #32]
 801e846:	9901      	ldr	r1, [sp, #4]
 801e848:	1a5b      	subs	r3, r3, r1
 801e84a:	9308      	str	r3, [sp, #32]
 801e84c:	9b02      	ldr	r3, [sp, #8]
 801e84e:	f1c3 0320 	rsb	r3, r3, #32
 801e852:	930a      	str	r3, [sp, #40]	; 0x28
 801e854:	980a      	ldr	r0, [sp, #40]	; 0x28
 801e856:	9b02      	ldr	r3, [sp, #8]
 801e858:	1a1b      	subs	r3, r3, r0
 801e85a:	4659      	mov	r1, fp
 801e85c:	9309      	str	r3, [sp, #36]	; 0x24
 801e85e:	f04f 0c00 	mov.w	ip, #0
 801e862:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 801e866:	181b      	adds	r3, r3, r0
 801e868:	bf58      	it	pl
 801e86a:	9801      	ldrpl	r0, [sp, #4]
 801e86c:	9308      	str	r3, [sp, #32]
 801e86e:	bf5d      	ittte	pl
 801e870:	1a1b      	subpl	r3, r3, r0
 801e872:	9308      	strpl	r3, [sp, #32]
 801e874:	9b06      	ldrpl	r3, [sp, #24]
 801e876:	9d06      	ldrmi	r5, [sp, #24]
 801e878:	9802      	ldr	r0, [sp, #8]
 801e87a:	f9b4 e016 	ldrsh.w	lr, [r4, #22]
 801e87e:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 801e882:	bf58      	it	pl
 801e884:	1c5d      	addpl	r5, r3, #1
 801e886:	44ab      	add	fp, r5
 801e888:	ea4f 136b 	mov.w	r3, fp, asr #5
 801e88c:	9304      	str	r3, [sp, #16]
 801e88e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e890:	4283      	cmp	r3, r0
 801e892:	eb08 480e 	add.w	r8, r8, lr, lsl #16
 801e896:	f040 815f 	bne.w	801eb58 <_ZN8touchgfx7Outline10renderLineEiiii+0x840>
 801e89a:	9b04      	ldr	r3, [sp, #16]
 801e89c:	9a00      	ldr	r2, [sp, #0]
 801e89e:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 801e8a2:	4543      	cmp	r3, r8
 801e8a4:	d01a      	beq.n	801e8dc <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 801e8a6:	8b61      	ldrh	r1, [r4, #26]
 801e8a8:	8b23      	ldrh	r3, [r4, #24]
 801e8aa:	430b      	orrs	r3, r1
 801e8ac:	d00e      	beq.n	801e8cc <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801e8ae:	f1be 0f00 	cmp.w	lr, #0
 801e8b2:	db0b      	blt.n	801e8cc <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801e8b4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e8b6:	4573      	cmp	r3, lr
 801e8b8:	dd08      	ble.n	801e8cc <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801e8ba:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e8be:	4299      	cmp	r1, r3
 801e8c0:	f0c0 813d 	bcc.w	801eb3e <_ZN8touchgfx7Outline10renderLineEiiii+0x826>
 801e8c4:	f04f 0301 	mov.w	r3, #1
 801e8c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e8cc:	9b04      	ldr	r3, [sp, #16]
 801e8ce:	82a3      	strh	r3, [r4, #20]
 801e8d0:	9b00      	ldr	r3, [sp, #0]
 801e8d2:	82e3      	strh	r3, [r4, #22]
 801e8d4:	f8a4 c018 	strh.w	ip, [r4, #24]
 801e8d8:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801e8dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e8de:	9a00      	ldr	r2, [sp, #0]
 801e8e0:	441a      	add	r2, r3
 801e8e2:	9200      	str	r2, [sp, #0]
 801e8e4:	9900      	ldr	r1, [sp, #0]
 801e8e6:	9a04      	ldr	r2, [sp, #16]
 801e8e8:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801e8ec:	eb02 4001 	add.w	r0, r2, r1, lsl #16
 801e8f0:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801e8f4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801e8f8:	4288      	cmp	r0, r1
 801e8fa:	d01a      	beq.n	801e932 <_ZN8touchgfx7Outline10renderLineEiiii+0x61a>
 801e8fc:	8b60      	ldrh	r0, [r4, #26]
 801e8fe:	8b21      	ldrh	r1, [r4, #24]
 801e900:	ea50 0201 	orrs.w	r2, r0, r1
 801e904:	d00d      	beq.n	801e922 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801e906:	2b00      	cmp	r3, #0
 801e908:	db0b      	blt.n	801e922 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801e90a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e90c:	4299      	cmp	r1, r3
 801e90e:	dd08      	ble.n	801e922 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801e910:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e914:	4299      	cmp	r1, r3
 801e916:	f0c0 8202 	bcc.w	801ed1e <_ZN8touchgfx7Outline10renderLineEiiii+0xa06>
 801e91a:	f04f 0301 	mov.w	r3, #1
 801e91e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e922:	9b04      	ldr	r3, [sp, #16]
 801e924:	82a3      	strh	r3, [r4, #20]
 801e926:	9b00      	ldr	r3, [sp, #0]
 801e928:	82e3      	strh	r3, [r4, #22]
 801e92a:	f8a4 c018 	strh.w	ip, [r4, #24]
 801e92e:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801e932:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e934:	9a00      	ldr	r2, [sp, #0]
 801e936:	4293      	cmp	r3, r2
 801e938:	4659      	mov	r1, fp
 801e93a:	d192      	bne.n	801e862 <_ZN8touchgfx7Outline10renderLineEiiii+0x54a>
 801e93c:	9b02      	ldr	r3, [sp, #8]
 801e93e:	f1c3 0c20 	rsb	ip, r3, #32
 801e942:	9b05      	ldr	r3, [sp, #20]
 801e944:	ea4f 1e63 	mov.w	lr, r3, asr #5
 801e948:	9b03      	ldr	r3, [sp, #12]
 801e94a:	459c      	cmp	ip, r3
 801e94c:	f040 8201 	bne.w	801ed52 <_ZN8touchgfx7Outline10renderLineEiiii+0xa3a>
 801e950:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801e954:	9a00      	ldr	r2, [sp, #0]
 801e956:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 801e95a:	eb0e 4002 	add.w	r0, lr, r2, lsl #16
 801e95e:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801e962:	4288      	cmp	r0, r1
 801e964:	f43f ad4d 	beq.w	801e402 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801e968:	8b60      	ldrh	r0, [r4, #26]
 801e96a:	8b21      	ldrh	r1, [r4, #24]
 801e96c:	ea50 0201 	orrs.w	r2, r0, r1
 801e970:	d00c      	beq.n	801e98c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801e972:	2b00      	cmp	r3, #0
 801e974:	db0a      	blt.n	801e98c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801e976:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801e978:	4299      	cmp	r1, r3
 801e97a:	dd07      	ble.n	801e98c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801e97c:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e980:	4299      	cmp	r1, r3
 801e982:	f0c0 81d9 	bcc.w	801ed38 <_ZN8touchgfx7Outline10renderLineEiiii+0xa20>
 801e986:	2301      	movs	r3, #1
 801e988:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801e98c:	9b00      	ldr	r3, [sp, #0]
 801e98e:	f8a4 e014 	strh.w	lr, [r4, #20]
 801e992:	82e3      	strh	r3, [r4, #22]
 801e994:	e510      	b.n	801e3b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 801e996:	2f00      	cmp	r7, #0
 801e998:	f2c0 809c 	blt.w	801ead4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 801e99c:	2301      	movs	r3, #1
 801e99e:	f1c1 0c20 	rsb	ip, r1, #32
 801e9a2:	9307      	str	r3, [sp, #28]
 801e9a4:	fb02 f20c 	mul.w	r2, r2, ip
 801e9a8:	2320      	movs	r3, #32
 801e9aa:	9306      	str	r3, [sp, #24]
 801e9ac:	9b06      	ldr	r3, [sp, #24]
 801e9ae:	fb92 fcf7 	sdiv	ip, r2, r7
 801e9b2:	fb07 221c 	mls	r2, r7, ip, r2
 801e9b6:	2a00      	cmp	r2, #0
 801e9b8:	4419      	add	r1, r3
 801e9ba:	9b00      	ldr	r3, [sp, #0]
 801e9bc:	bfb8      	it	lt
 801e9be:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801e9c2:	fb0c 3101 	mla	r1, ip, r1, r3
 801e9c6:	9b07      	ldr	r3, [sp, #28]
 801e9c8:	441d      	add	r5, r3
 801e9ca:	ea4f 4306 	mov.w	r3, r6, lsl #16
 801e9ce:	4460      	add	r0, ip
 801e9d0:	930a      	str	r3, [sp, #40]	; 0x28
 801e9d2:	442b      	add	r3, r5
 801e9d4:	bfb8      	it	lt
 801e9d6:	19d2      	addlt	r2, r2, r7
 801e9d8:	b200      	sxth	r0, r0
 801e9da:	b209      	sxth	r1, r1
 801e9dc:	454b      	cmp	r3, r9
 801e9de:	8320      	strh	r0, [r4, #24]
 801e9e0:	8361      	strh	r1, [r4, #26]
 801e9e2:	d014      	beq.n	801ea0e <_ZN8touchgfx7Outline10renderLineEiiii+0x6f6>
 801e9e4:	ea50 0301 	orrs.w	r3, r0, r1
 801e9e8:	d00c      	beq.n	801ea04 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801e9ea:	f1b8 0f00 	cmp.w	r8, #0
 801e9ee:	db09      	blt.n	801ea04 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801e9f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e9f2:	4543      	cmp	r3, r8
 801e9f4:	dd06      	ble.n	801ea04 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801e9f6:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 801e9fa:	4299      	cmp	r1, r3
 801e9fc:	d371      	bcc.n	801eae2 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ca>
 801e9fe:	2301      	movs	r3, #1
 801ea00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801ea04:	2300      	movs	r3, #0
 801ea06:	82a5      	strh	r5, [r4, #20]
 801ea08:	82e6      	strh	r6, [r4, #22]
 801ea0a:	8323      	strh	r3, [r4, #24]
 801ea0c:	8363      	strh	r3, [r4, #26]
 801ea0e:	9904      	ldr	r1, [sp, #16]
 801ea10:	42a9      	cmp	r1, r5
 801ea12:	eb0e 030c 	add.w	r3, lr, ip
 801ea16:	d050      	beq.n	801eaba <_ZN8touchgfx7Outline10renderLineEiiii+0x7a2>
 801ea18:	9902      	ldr	r1, [sp, #8]
 801ea1a:	1ac9      	subs	r1, r1, r3
 801ea1c:	448c      	add	ip, r1
 801ea1e:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 801ea22:	fb9c fef7 	sdiv	lr, ip, r7
 801ea26:	fb07 cc1e 	mls	ip, r7, lr, ip
 801ea2a:	f1bc 0f00 	cmp.w	ip, #0
 801ea2e:	bfb8      	it	lt
 801ea30:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801ea34:	eba2 0207 	sub.w	r2, r2, r7
 801ea38:	f10e 0101 	add.w	r1, lr, #1
 801ea3c:	bfb8      	it	lt
 801ea3e:	44bc      	addlt	ip, r7
 801ea40:	9200      	str	r2, [sp, #0]
 801ea42:	910d      	str	r1, [sp, #52]	; 0x34
 801ea44:	9a00      	ldr	r2, [sp, #0]
 801ea46:	8b20      	ldrh	r0, [r4, #24]
 801ea48:	8b61      	ldrh	r1, [r4, #26]
 801ea4a:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801ea4e:	eb12 020c 	adds.w	r2, r2, ip
 801ea52:	9200      	str	r2, [sp, #0]
 801ea54:	bf5e      	ittt	pl
 801ea56:	1bd2      	subpl	r2, r2, r7
 801ea58:	f8dd 8034 	ldrpl.w	r8, [sp, #52]	; 0x34
 801ea5c:	9200      	strpl	r2, [sp, #0]
 801ea5e:	9a07      	ldr	r2, [sp, #28]
 801ea60:	bf48      	it	mi
 801ea62:	46f0      	movmi	r8, lr
 801ea64:	4440      	add	r0, r8
 801ea66:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 801ea6a:	4415      	add	r5, r2
 801ea6c:	4443      	add	r3, r8
 801ea6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ea70:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801ea74:	442a      	add	r2, r5
 801ea76:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801ea7a:	b200      	sxth	r0, r0
 801ea7c:	b209      	sxth	r1, r1
 801ea7e:	454a      	cmp	r2, r9
 801ea80:	8320      	strh	r0, [r4, #24]
 801ea82:	8361      	strh	r1, [r4, #26]
 801ea84:	d016      	beq.n	801eab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x79c>
 801ea86:	ea50 0201 	orrs.w	r2, r0, r1
 801ea8a:	d00d      	beq.n	801eaa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801ea8c:	f1b8 0f00 	cmp.w	r8, #0
 801ea90:	db0a      	blt.n	801eaa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801ea92:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ea94:	4541      	cmp	r1, r8
 801ea96:	dd07      	ble.n	801eaa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801ea98:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ea9c:	4288      	cmp	r0, r1
 801ea9e:	d330      	bcc.n	801eb02 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ea>
 801eaa0:	f04f 0201 	mov.w	r2, #1
 801eaa4:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801eaa8:	f04f 0200 	mov.w	r2, #0
 801eaac:	82a5      	strh	r5, [r4, #20]
 801eaae:	82e6      	strh	r6, [r4, #22]
 801eab0:	8322      	strh	r2, [r4, #24]
 801eab2:	8362      	strh	r2, [r4, #26]
 801eab4:	9904      	ldr	r1, [sp, #16]
 801eab6:	42a9      	cmp	r1, r5
 801eab8:	d1c4      	bne.n	801ea44 <_ZN8touchgfx7Outline10renderLineEiiii+0x72c>
 801eaba:	9a02      	ldr	r2, [sp, #8]
 801eabc:	9909      	ldr	r1, [sp, #36]	; 0x24
 801eabe:	1ad3      	subs	r3, r2, r3
 801eac0:	8b22      	ldrh	r2, [r4, #24]
 801eac2:	441a      	add	r2, r3
 801eac4:	8322      	strh	r2, [r4, #24]
 801eac6:	9a06      	ldr	r2, [sp, #24]
 801eac8:	3120      	adds	r1, #32
 801eaca:	1a89      	subs	r1, r1, r2
 801eacc:	8b62      	ldrh	r2, [r4, #26]
 801eace:	fb03 2301 	mla	r3, r3, r1, r2
 801ead2:	e649      	b.n	801e768 <_ZN8touchgfx7Outline10renderLineEiiii+0x450>
 801ead4:	f04f 33ff 	mov.w	r3, #4294967295
 801ead8:	9307      	str	r3, [sp, #28]
 801eada:	434a      	muls	r2, r1
 801eadc:	427f      	negs	r7, r7
 801eade:	2300      	movs	r3, #0
 801eae0:	e763      	b.n	801e9aa <_ZN8touchgfx7Outline10renderLineEiiii+0x692>
 801eae2:	f104 0314 	add.w	r3, r4, #20
 801eae6:	cb03      	ldmia	r3!, {r0, r1}
 801eae8:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801eaec:	f8c8 0000 	str.w	r0, [r8]
 801eaf0:	f8c8 1004 	str.w	r1, [r8, #4]
 801eaf4:	6923      	ldr	r3, [r4, #16]
 801eaf6:	3308      	adds	r3, #8
 801eaf8:	6123      	str	r3, [r4, #16]
 801eafa:	68a3      	ldr	r3, [r4, #8]
 801eafc:	3301      	adds	r3, #1
 801eafe:	60a3      	str	r3, [r4, #8]
 801eb00:	e780      	b.n	801ea04 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ec>
 801eb02:	f104 0814 	add.w	r8, r4, #20
 801eb06:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801eb0a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801eb0e:	f8c9 0000 	str.w	r0, [r9]
 801eb12:	f8c9 1004 	str.w	r1, [r9, #4]
 801eb16:	6921      	ldr	r1, [r4, #16]
 801eb18:	3108      	adds	r1, #8
 801eb1a:	6121      	str	r1, [r4, #16]
 801eb1c:	68a1      	ldr	r1, [r4, #8]
 801eb1e:	3101      	adds	r1, #1
 801eb20:	60a1      	str	r1, [r4, #8]
 801eb22:	e7c1      	b.n	801eaa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 801eb24:	f104 0314 	add.w	r3, r4, #20
 801eb28:	cb03      	ldmia	r3!, {r0, r1}
 801eb2a:	6925      	ldr	r5, [r4, #16]
 801eb2c:	6028      	str	r0, [r5, #0]
 801eb2e:	6069      	str	r1, [r5, #4]
 801eb30:	6923      	ldr	r3, [r4, #16]
 801eb32:	3308      	adds	r3, #8
 801eb34:	6123      	str	r3, [r4, #16]
 801eb36:	68a3      	ldr	r3, [r4, #8]
 801eb38:	3301      	adds	r3, #1
 801eb3a:	60a3      	str	r3, [r4, #8]
 801eb3c:	e665      	b.n	801e80a <_ZN8touchgfx7Outline10renderLineEiiii+0x4f2>
 801eb3e:	f104 0314 	add.w	r3, r4, #20
 801eb42:	cb03      	ldmia	r3!, {r0, r1}
 801eb44:	6925      	ldr	r5, [r4, #16]
 801eb46:	6028      	str	r0, [r5, #0]
 801eb48:	6069      	str	r1, [r5, #4]
 801eb4a:	6923      	ldr	r3, [r4, #16]
 801eb4c:	3308      	adds	r3, #8
 801eb4e:	6123      	str	r3, [r4, #16]
 801eb50:	68a3      	ldr	r3, [r4, #8]
 801eb52:	3301      	adds	r3, #1
 801eb54:	60a3      	str	r3, [r4, #8]
 801eb56:	e6b9      	b.n	801e8cc <_ZN8touchgfx7Outline10renderLineEiiii+0x5b4>
 801eb58:	f00b 031f 	and.w	r3, fp, #31
 801eb5c:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb5e:	9b04      	ldr	r3, [sp, #16]
 801eb60:	8b20      	ldrh	r0, [r4, #24]
 801eb62:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 801eb66:	114f      	asrs	r7, r1, #5
 801eb68:	429f      	cmp	r7, r3
 801eb6a:	f001 011f 	and.w	r1, r1, #31
 801eb6e:	d10a      	bne.n	801eb86 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 801eb70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb72:	4418      	add	r0, r3
 801eb74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eb76:	8320      	strh	r0, [r4, #24]
 801eb78:	4419      	add	r1, r3
 801eb7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb7c:	fb03 9901 	mla	r9, r3, r1, r9
 801eb80:	f8a4 901a 	strh.w	r9, [r4, #26]
 801eb84:	e6aa      	b.n	801e8dc <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 801eb86:	2d00      	cmp	r5, #0
 801eb88:	f2c0 809f 	blt.w	801ecca <_ZN8touchgfx7Outline10renderLineEiiii+0x9b2>
 801eb8c:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801eb8e:	f1c1 0320 	rsb	r3, r1, #32
 801eb92:	4373      	muls	r3, r6
 801eb94:	2601      	movs	r6, #1
 801eb96:	960e      	str	r6, [sp, #56]	; 0x38
 801eb98:	2620      	movs	r6, #32
 801eb9a:	960d      	str	r6, [sp, #52]	; 0x34
 801eb9c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801eb9e:	fb93 f6f5 	sdiv	r6, r3, r5
 801eba2:	4411      	add	r1, r2
 801eba4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801eba6:	fb05 3316 	mls	r3, r5, r6, r3
 801ebaa:	4417      	add	r7, r2
 801ebac:	9a00      	ldr	r2, [sp, #0]
 801ebae:	2b00      	cmp	r3, #0
 801ebb0:	bfb8      	it	lt
 801ebb2:	f106 36ff 	addlt.w	r6, r6, #4294967295
 801ebb6:	ea4f 4202 	mov.w	r2, r2, lsl #16
 801ebba:	fb06 9101 	mla	r1, r6, r1, r9
 801ebbe:	4430      	add	r0, r6
 801ebc0:	eb07 0902 	add.w	r9, r7, r2
 801ebc4:	bfb8      	it	lt
 801ebc6:	195b      	addlt	r3, r3, r5
 801ebc8:	b200      	sxth	r0, r0
 801ebca:	b209      	sxth	r1, r1
 801ebcc:	45c1      	cmp	r9, r8
 801ebce:	8320      	strh	r0, [r4, #24]
 801ebd0:	8361      	strh	r1, [r4, #26]
 801ebd2:	9210      	str	r2, [sp, #64]	; 0x40
 801ebd4:	d017      	beq.n	801ec06 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ee>
 801ebd6:	ea50 0201 	orrs.w	r2, r0, r1
 801ebda:	d00d      	beq.n	801ebf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801ebdc:	f1be 0f00 	cmp.w	lr, #0
 801ebe0:	db0a      	blt.n	801ebf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801ebe2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ebe4:	4571      	cmp	r1, lr
 801ebe6:	dd07      	ble.n	801ebf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801ebe8:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ebec:	4288      	cmp	r0, r1
 801ebee:	d374      	bcc.n	801ecda <_ZN8touchgfx7Outline10renderLineEiiii+0x9c2>
 801ebf0:	f04f 0201 	mov.w	r2, #1
 801ebf4:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ebf8:	9a00      	ldr	r2, [sp, #0]
 801ebfa:	82a7      	strh	r7, [r4, #20]
 801ebfc:	82e2      	strh	r2, [r4, #22]
 801ebfe:	f8a4 c018 	strh.w	ip, [r4, #24]
 801ec02:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801ec06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ec08:	eb02 0e06 	add.w	lr, r2, r6
 801ec0c:	9a04      	ldr	r2, [sp, #16]
 801ec0e:	42ba      	cmp	r2, r7
 801ec10:	d04b      	beq.n	801ecaa <_ZN8touchgfx7Outline10renderLineEiiii+0x992>
 801ec12:	9a02      	ldr	r2, [sp, #8]
 801ec14:	eba2 010e 	sub.w	r1, r2, lr
 801ec18:	440e      	add	r6, r1
 801ec1a:	0176      	lsls	r6, r6, #5
 801ec1c:	fb96 f8f5 	sdiv	r8, r6, r5
 801ec20:	fb05 6618 	mls	r6, r5, r8, r6
 801ec24:	2e00      	cmp	r6, #0
 801ec26:	bfb8      	it	lt
 801ec28:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801ec2c:	f108 0201 	add.w	r2, r8, #1
 801ec30:	bfb8      	it	lt
 801ec32:	1976      	addlt	r6, r6, r5
 801ec34:	1b5b      	subs	r3, r3, r5
 801ec36:	9211      	str	r2, [sp, #68]	; 0x44
 801ec38:	199b      	adds	r3, r3, r6
 801ec3a:	bf58      	it	pl
 801ec3c:	f8dd 9044 	ldrpl.w	r9, [sp, #68]	; 0x44
 801ec40:	8b20      	ldrh	r0, [r4, #24]
 801ec42:	8b61      	ldrh	r1, [r4, #26]
 801ec44:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ec46:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 801ec4a:	bf48      	it	mi
 801ec4c:	46c1      	movmi	r9, r8
 801ec4e:	4448      	add	r0, r9
 801ec50:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 801ec54:	4417      	add	r7, r2
 801ec56:	44ce      	add	lr, r9
 801ec58:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ec5a:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 801ec5e:	443a      	add	r2, r7
 801ec60:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 801ec64:	bf58      	it	pl
 801ec66:	1b5b      	subpl	r3, r3, r5
 801ec68:	b200      	sxth	r0, r0
 801ec6a:	b209      	sxth	r1, r1
 801ec6c:	4552      	cmp	r2, sl
 801ec6e:	8320      	strh	r0, [r4, #24]
 801ec70:	8361      	strh	r1, [r4, #26]
 801ec72:	d017      	beq.n	801eca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x98c>
 801ec74:	ea50 0201 	orrs.w	r2, r0, r1
 801ec78:	d00d      	beq.n	801ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801ec7a:	f1b9 0f00 	cmp.w	r9, #0
 801ec7e:	db0a      	blt.n	801ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801ec80:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ec82:	4549      	cmp	r1, r9
 801ec84:	dd07      	ble.n	801ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801ec86:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ec8a:	4288      	cmp	r0, r1
 801ec8c:	d336      	bcc.n	801ecfc <_ZN8touchgfx7Outline10renderLineEiiii+0x9e4>
 801ec8e:	f04f 0201 	mov.w	r2, #1
 801ec92:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ec96:	9a00      	ldr	r2, [sp, #0]
 801ec98:	82a7      	strh	r7, [r4, #20]
 801ec9a:	82e2      	strh	r2, [r4, #22]
 801ec9c:	f8a4 c018 	strh.w	ip, [r4, #24]
 801eca0:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801eca4:	9a04      	ldr	r2, [sp, #16]
 801eca6:	42ba      	cmp	r2, r7
 801eca8:	d1c6      	bne.n	801ec38 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 801ecaa:	9b02      	ldr	r3, [sp, #8]
 801ecac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ecae:	eba3 0e0e 	sub.w	lr, r3, lr
 801ecb2:	8b23      	ldrh	r3, [r4, #24]
 801ecb4:	4473      	add	r3, lr
 801ecb6:	8323      	strh	r3, [r4, #24]
 801ecb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ecba:	3120      	adds	r1, #32
 801ecbc:	1ac9      	subs	r1, r1, r3
 801ecbe:	8b63      	ldrh	r3, [r4, #26]
 801ecc0:	fb0e 3e01 	mla	lr, lr, r1, r3
 801ecc4:	f8a4 e01a 	strh.w	lr, [r4, #26]
 801ecc8:	e608      	b.n	801e8dc <_ZN8touchgfx7Outline10renderLineEiiii+0x5c4>
 801ecca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eccc:	f04f 36ff 	mov.w	r6, #4294967295
 801ecd0:	960e      	str	r6, [sp, #56]	; 0x38
 801ecd2:	434b      	muls	r3, r1
 801ecd4:	426d      	negs	r5, r5
 801ecd6:	2600      	movs	r6, #0
 801ecd8:	e75f      	b.n	801eb9a <_ZN8touchgfx7Outline10renderLineEiiii+0x882>
 801ecda:	f104 0e14 	add.w	lr, r4, #20
 801ecde:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 801ece2:	f8d4 8010 	ldr.w	r8, [r4, #16]
 801ece6:	f8c8 0000 	str.w	r0, [r8]
 801ecea:	f8c8 1004 	str.w	r1, [r8, #4]
 801ecee:	6921      	ldr	r1, [r4, #16]
 801ecf0:	3108      	adds	r1, #8
 801ecf2:	6121      	str	r1, [r4, #16]
 801ecf4:	68a1      	ldr	r1, [r4, #8]
 801ecf6:	3101      	adds	r1, #1
 801ecf8:	60a1      	str	r1, [r4, #8]
 801ecfa:	e77d      	b.n	801ebf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x8e0>
 801ecfc:	f104 0914 	add.w	r9, r4, #20
 801ed00:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 801ed04:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801ed08:	f8ca 0000 	str.w	r0, [sl]
 801ed0c:	f8ca 1004 	str.w	r1, [sl, #4]
 801ed10:	6921      	ldr	r1, [r4, #16]
 801ed12:	3108      	adds	r1, #8
 801ed14:	6121      	str	r1, [r4, #16]
 801ed16:	68a1      	ldr	r1, [r4, #8]
 801ed18:	3101      	adds	r1, #1
 801ed1a:	60a1      	str	r1, [r4, #8]
 801ed1c:	e7bb      	b.n	801ec96 <_ZN8touchgfx7Outline10renderLineEiiii+0x97e>
 801ed1e:	f104 0314 	add.w	r3, r4, #20
 801ed22:	cb03      	ldmia	r3!, {r0, r1}
 801ed24:	6925      	ldr	r5, [r4, #16]
 801ed26:	6028      	str	r0, [r5, #0]
 801ed28:	6069      	str	r1, [r5, #4]
 801ed2a:	6923      	ldr	r3, [r4, #16]
 801ed2c:	3308      	adds	r3, #8
 801ed2e:	6123      	str	r3, [r4, #16]
 801ed30:	68a3      	ldr	r3, [r4, #8]
 801ed32:	3301      	adds	r3, #1
 801ed34:	60a3      	str	r3, [r4, #8]
 801ed36:	e5f4      	b.n	801e922 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801ed38:	f104 0314 	add.w	r3, r4, #20
 801ed3c:	cb03      	ldmia	r3!, {r0, r1}
 801ed3e:	6925      	ldr	r5, [r4, #16]
 801ed40:	6028      	str	r0, [r5, #0]
 801ed42:	6069      	str	r1, [r5, #4]
 801ed44:	6923      	ldr	r3, [r4, #16]
 801ed46:	3308      	adds	r3, #8
 801ed48:	6123      	str	r3, [r4, #16]
 801ed4a:	68a3      	ldr	r3, [r4, #8]
 801ed4c:	3301      	adds	r3, #1
 801ed4e:	60a3      	str	r3, [r4, #8]
 801ed50:	e61c      	b.n	801e98c <_ZN8touchgfx7Outline10renderLineEiiii+0x674>
 801ed52:	9b05      	ldr	r3, [sp, #20]
 801ed54:	8b20      	ldrh	r0, [r4, #24]
 801ed56:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 801ed5a:	f003 031f 	and.w	r3, r3, #31
 801ed5e:	ea4f 176b 	mov.w	r7, fp, asr #5
 801ed62:	9302      	str	r3, [sp, #8]
 801ed64:	9b03      	ldr	r3, [sp, #12]
 801ed66:	4577      	cmp	r7, lr
 801ed68:	f00b 081f 	and.w	r8, fp, #31
 801ed6c:	eba3 050c 	sub.w	r5, r3, ip
 801ed70:	d108      	bne.n	801ed84 <_ZN8touchgfx7Outline10renderLineEiiii+0xa6c>
 801ed72:	9b02      	ldr	r3, [sp, #8]
 801ed74:	4498      	add	r8, r3
 801ed76:	4428      	add	r0, r5
 801ed78:	fb05 9508 	mla	r5, r5, r8, r9
 801ed7c:	8320      	strh	r0, [r4, #24]
 801ed7e:	8365      	strh	r5, [r4, #26]
 801ed80:	f7ff bb3f 	b.w	801e402 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801ed84:	9b05      	ldr	r3, [sp, #20]
 801ed86:	ebb3 030b 	subs.w	r3, r3, fp
 801ed8a:	f100 809f 	bmi.w	801eecc <_ZN8touchgfx7Outline10renderLineEiiii+0xbb4>
 801ed8e:	f1c8 0120 	rsb	r1, r8, #32
 801ed92:	2201      	movs	r2, #1
 801ed94:	434d      	muls	r5, r1
 801ed96:	9201      	str	r2, [sp, #4]
 801ed98:	f04f 0b20 	mov.w	fp, #32
 801ed9c:	fb95 f6f3 	sdiv	r6, r5, r3
 801eda0:	fb03 5516 	mls	r5, r3, r6, r5
 801eda4:	2d00      	cmp	r5, #0
 801eda6:	9a01      	ldr	r2, [sp, #4]
 801eda8:	bfb8      	it	lt
 801edaa:	f106 36ff 	addlt.w	r6, r6, #4294967295
 801edae:	44d8      	add	r8, fp
 801edb0:	fb06 9808 	mla	r8, r6, r8, r9
 801edb4:	4417      	add	r7, r2
 801edb6:	9a00      	ldr	r2, [sp, #0]
 801edb8:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 801edbc:	fa0f f188 	sxth.w	r1, r8
 801edc0:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 801edc4:	8361      	strh	r1, [r4, #26]
 801edc6:	ea4f 4202 	mov.w	r2, r2, lsl #16
 801edca:	4430      	add	r0, r6
 801edcc:	eb07 0a02 	add.w	sl, r7, r2
 801edd0:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 801edd4:	bfb8      	it	lt
 801edd6:	18ed      	addlt	r5, r5, r3
 801edd8:	b200      	sxth	r0, r0
 801edda:	45ca      	cmp	sl, r9
 801eddc:	8320      	strh	r0, [r4, #24]
 801edde:	9204      	str	r2, [sp, #16]
 801ede0:	d015      	beq.n	801ee0e <_ZN8touchgfx7Outline10renderLineEiiii+0xaf6>
 801ede2:	ea50 0201 	orrs.w	r2, r0, r1
 801ede6:	d00c      	beq.n	801ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801ede8:	f1b8 0f00 	cmp.w	r8, #0
 801edec:	db09      	blt.n	801ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801edee:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801edf0:	4541      	cmp	r1, r8
 801edf2:	dd06      	ble.n	801ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801edf4:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801edf8:	4288      	cmp	r0, r1
 801edfa:	d370      	bcc.n	801eede <_ZN8touchgfx7Outline10renderLineEiiii+0xbc6>
 801edfc:	2101      	movs	r1, #1
 801edfe:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 801ee02:	2100      	movs	r1, #0
 801ee04:	9a00      	ldr	r2, [sp, #0]
 801ee06:	82a7      	strh	r7, [r4, #20]
 801ee08:	82e2      	strh	r2, [r4, #22]
 801ee0a:	8321      	strh	r1, [r4, #24]
 801ee0c:	8361      	strh	r1, [r4, #26]
 801ee0e:	45be      	cmp	lr, r7
 801ee10:	44b4      	add	ip, r6
 801ee12:	d04a      	beq.n	801eeaa <_ZN8touchgfx7Outline10renderLineEiiii+0xb92>
 801ee14:	9a03      	ldr	r2, [sp, #12]
 801ee16:	eba2 010c 	sub.w	r1, r2, ip
 801ee1a:	440e      	add	r6, r1
 801ee1c:	0176      	lsls	r6, r6, #5
 801ee1e:	fb96 f8f3 	sdiv	r8, r6, r3
 801ee22:	fb03 6618 	mls	r6, r3, r8, r6
 801ee26:	2e00      	cmp	r6, #0
 801ee28:	bfb8      	it	lt
 801ee2a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801ee2e:	f108 0201 	add.w	r2, r8, #1
 801ee32:	bfb8      	it	lt
 801ee34:	18f6      	addlt	r6, r6, r3
 801ee36:	1aed      	subs	r5, r5, r3
 801ee38:	9205      	str	r2, [sp, #20]
 801ee3a:	19ad      	adds	r5, r5, r6
 801ee3c:	bf58      	it	pl
 801ee3e:	f8dd 9014 	ldrpl.w	r9, [sp, #20]
 801ee42:	8b20      	ldrh	r0, [r4, #24]
 801ee44:	8b61      	ldrh	r1, [r4, #26]
 801ee46:	9a01      	ldr	r2, [sp, #4]
 801ee48:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 801ee4c:	bf48      	it	mi
 801ee4e:	46c1      	movmi	r9, r8
 801ee50:	4448      	add	r0, r9
 801ee52:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 801ee56:	4417      	add	r7, r2
 801ee58:	44cc      	add	ip, r9
 801ee5a:	9a04      	ldr	r2, [sp, #16]
 801ee5c:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 801ee60:	443a      	add	r2, r7
 801ee62:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 801ee66:	bf58      	it	pl
 801ee68:	1aed      	subpl	r5, r5, r3
 801ee6a:	b200      	sxth	r0, r0
 801ee6c:	b209      	sxth	r1, r1
 801ee6e:	4552      	cmp	r2, sl
 801ee70:	8320      	strh	r0, [r4, #24]
 801ee72:	8361      	strh	r1, [r4, #26]
 801ee74:	d017      	beq.n	801eea6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8e>
 801ee76:	ea50 0201 	orrs.w	r2, r0, r1
 801ee7a:	d00d      	beq.n	801ee98 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 801ee7c:	f1b9 0f00 	cmp.w	r9, #0
 801ee80:	db0a      	blt.n	801ee98 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 801ee82:	6c21      	ldr	r1, [r4, #64]	; 0x40
 801ee84:	4549      	cmp	r1, r9
 801ee86:	dd07      	ble.n	801ee98 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>
 801ee88:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 801ee8c:	4288      	cmp	r0, r1
 801ee8e:	d337      	bcc.n	801ef00 <_ZN8touchgfx7Outline10renderLineEiiii+0xbe8>
 801ee90:	f04f 0201 	mov.w	r2, #1
 801ee94:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 801ee98:	9a00      	ldr	r2, [sp, #0]
 801ee9a:	82e2      	strh	r2, [r4, #22]
 801ee9c:	f04f 0200 	mov.w	r2, #0
 801eea0:	82a7      	strh	r7, [r4, #20]
 801eea2:	8322      	strh	r2, [r4, #24]
 801eea4:	8362      	strh	r2, [r4, #26]
 801eea6:	45be      	cmp	lr, r7
 801eea8:	d1c7      	bne.n	801ee3a <_ZN8touchgfx7Outline10renderLineEiiii+0xb22>
 801eeaa:	9b03      	ldr	r3, [sp, #12]
 801eeac:	8b62      	ldrh	r2, [r4, #26]
 801eeae:	eba3 0c0c 	sub.w	ip, r3, ip
 801eeb2:	8b23      	ldrh	r3, [r4, #24]
 801eeb4:	4463      	add	r3, ip
 801eeb6:	8323      	strh	r3, [r4, #24]
 801eeb8:	9b02      	ldr	r3, [sp, #8]
 801eeba:	3320      	adds	r3, #32
 801eebc:	eba3 030b 	sub.w	r3, r3, fp
 801eec0:	fb0c 2c03 	mla	ip, ip, r3, r2
 801eec4:	f8a4 c01a 	strh.w	ip, [r4, #26]
 801eec8:	f7ff ba9b 	b.w	801e402 <_ZN8touchgfx7Outline10renderLineEiiii+0xea>
 801eecc:	f04f 32ff 	mov.w	r2, #4294967295
 801eed0:	fb05 f508 	mul.w	r5, r5, r8
 801eed4:	425b      	negs	r3, r3
 801eed6:	9201      	str	r2, [sp, #4]
 801eed8:	f04f 0b00 	mov.w	fp, #0
 801eedc:	e75e      	b.n	801ed9c <_ZN8touchgfx7Outline10renderLineEiiii+0xa84>
 801eede:	f104 0814 	add.w	r8, r4, #20
 801eee2:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 801eee6:	f8d4 9010 	ldr.w	r9, [r4, #16]
 801eeea:	f8c9 0000 	str.w	r0, [r9]
 801eeee:	f8c9 1004 	str.w	r1, [r9, #4]
 801eef2:	6921      	ldr	r1, [r4, #16]
 801eef4:	3108      	adds	r1, #8
 801eef6:	6121      	str	r1, [r4, #16]
 801eef8:	68a1      	ldr	r1, [r4, #8]
 801eefa:	3101      	adds	r1, #1
 801eefc:	60a1      	str	r1, [r4, #8]
 801eefe:	e780      	b.n	801ee02 <_ZN8touchgfx7Outline10renderLineEiiii+0xaea>
 801ef00:	f104 0914 	add.w	r9, r4, #20
 801ef04:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 801ef08:	f8d4 a010 	ldr.w	sl, [r4, #16]
 801ef0c:	f8ca 0000 	str.w	r0, [sl]
 801ef10:	f8ca 1004 	str.w	r1, [sl, #4]
 801ef14:	6921      	ldr	r1, [r4, #16]
 801ef16:	3108      	adds	r1, #8
 801ef18:	6121      	str	r1, [r4, #16]
 801ef1a:	68a1      	ldr	r1, [r4, #8]
 801ef1c:	3101      	adds	r1, #1
 801ef1e:	60a1      	str	r1, [r4, #8]
 801ef20:	e7ba      	b.n	801ee98 <_ZN8touchgfx7Outline10renderLineEiiii+0xb80>

0801ef22 <_ZN8touchgfx7Outline6lineToEii>:
 801ef22:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ef24:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801ef26:	079b      	lsls	r3, r3, #30
 801ef28:	4604      	mov	r4, r0
 801ef2a:	460d      	mov	r5, r1
 801ef2c:	4616      	mov	r6, r2
 801ef2e:	d526      	bpl.n	801ef7e <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801ef30:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801ef34:	ea85 0001 	eor.w	r0, r5, r1
 801ef38:	ea86 0302 	eor.w	r3, r6, r2
 801ef3c:	4303      	orrs	r3, r0
 801ef3e:	d01e      	beq.n	801ef7e <_ZN8touchgfx7Outline6lineToEii+0x5c>
 801ef40:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801ef42:	9600      	str	r6, [sp, #0]
 801ef44:	114b      	asrs	r3, r1, #5
 801ef46:	4283      	cmp	r3, r0
 801ef48:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801ef4a:	bfb8      	it	lt
 801ef4c:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801ef4e:	3301      	adds	r3, #1
 801ef50:	4283      	cmp	r3, r0
 801ef52:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801ef54:	bfc8      	it	gt
 801ef56:	6363      	strgt	r3, [r4, #52]	; 0x34
 801ef58:	116b      	asrs	r3, r5, #5
 801ef5a:	4283      	cmp	r3, r0
 801ef5c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801ef5e:	bfb8      	it	lt
 801ef60:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 801ef62:	3301      	adds	r3, #1
 801ef64:	4283      	cmp	r3, r0
 801ef66:	bfc8      	it	gt
 801ef68:	6363      	strgt	r3, [r4, #52]	; 0x34
 801ef6a:	4620      	mov	r0, r4
 801ef6c:	462b      	mov	r3, r5
 801ef6e:	f7ff f9d3 	bl	801e318 <_ZN8touchgfx7Outline10renderLineEiiii>
 801ef72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801ef74:	e9c4 5607 	strd	r5, r6, [r4, #28]
 801ef78:	f043 0301 	orr.w	r3, r3, #1
 801ef7c:	63e3      	str	r3, [r4, #60]	; 0x3c
 801ef7e:	b002      	add	sp, #8
 801ef80:	bd70      	pop	{r4, r5, r6, pc}

0801ef82 <_ZN8touchgfx7Outline6moveToEii>:
 801ef82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ef84:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801ef86:	4615      	mov	r5, r2
 801ef88:	079a      	lsls	r2, r3, #30
 801ef8a:	4604      	mov	r4, r0
 801ef8c:	460e      	mov	r6, r1
 801ef8e:	d401      	bmi.n	801ef94 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801ef90:	f7ff f97b 	bl	801e28a <_ZN8touchgfx7Outline5resetEv>
 801ef94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801ef96:	07db      	lsls	r3, r3, #31
 801ef98:	d504      	bpl.n	801efa4 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801ef9a:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 801ef9e:	4620      	mov	r0, r4
 801efa0:	f7ff ffbf 	bl	801ef22 <_ZN8touchgfx7Outline6lineToEii>
 801efa4:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801efa8:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 801efac:	ea4f 1c66 	mov.w	ip, r6, asr #5
 801efb0:	116f      	asrs	r7, r5, #5
 801efb2:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 801efb6:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 801efba:	4291      	cmp	r1, r2
 801efbc:	d015      	beq.n	801efea <_ZN8touchgfx7Outline6moveToEii+0x68>
 801efbe:	8b61      	ldrh	r1, [r4, #26]
 801efc0:	8b22      	ldrh	r2, [r4, #24]
 801efc2:	430a      	orrs	r2, r1
 801efc4:	d00b      	beq.n	801efde <_ZN8touchgfx7Outline6moveToEii+0x5c>
 801efc6:	2b00      	cmp	r3, #0
 801efc8:	db09      	blt.n	801efde <_ZN8touchgfx7Outline6moveToEii+0x5c>
 801efca:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801efcc:	429a      	cmp	r2, r3
 801efce:	dd06      	ble.n	801efde <_ZN8touchgfx7Outline6moveToEii+0x5c>
 801efd0:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 801efd4:	429a      	cmp	r2, r3
 801efd6:	d30d      	bcc.n	801eff4 <_ZN8touchgfx7Outline6moveToEii+0x72>
 801efd8:	2301      	movs	r3, #1
 801efda:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801efde:	2300      	movs	r3, #0
 801efe0:	f8a4 c014 	strh.w	ip, [r4, #20]
 801efe4:	82e7      	strh	r7, [r4, #22]
 801efe6:	8323      	strh	r3, [r4, #24]
 801efe8:	8363      	strh	r3, [r4, #26]
 801efea:	61e6      	str	r6, [r4, #28]
 801efec:	e9c4 5608 	strd	r5, r6, [r4, #32]
 801eff0:	62a5      	str	r5, [r4, #40]	; 0x28
 801eff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801eff4:	f104 0314 	add.w	r3, r4, #20
 801eff8:	cb03      	ldmia	r3!, {r0, r1}
 801effa:	6922      	ldr	r2, [r4, #16]
 801effc:	6010      	str	r0, [r2, #0]
 801effe:	6051      	str	r1, [r2, #4]
 801f000:	6923      	ldr	r3, [r4, #16]
 801f002:	3308      	adds	r3, #8
 801f004:	6123      	str	r3, [r4, #16]
 801f006:	68a3      	ldr	r3, [r4, #8]
 801f008:	3301      	adds	r3, #1
 801f00a:	60a3      	str	r3, [r4, #8]
 801f00c:	e7e7      	b.n	801efde <_ZN8touchgfx7Outline6moveToEii+0x5c>

0801f00e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801f00e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f012:	b0d1      	sub	sp, #324	; 0x144
 801f014:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801f018:	466c      	mov	r4, sp
 801f01a:	1a0d      	subs	r5, r1, r0
 801f01c:	2d48      	cmp	r5, #72	; 0x48
 801f01e:	f100 0208 	add.w	r2, r0, #8
 801f022:	f340 80bb 	ble.w	801f19c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 801f026:	112d      	asrs	r5, r5, #4
 801f028:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 801f02c:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 801f030:	681e      	ldr	r6, [r3, #0]
 801f032:	f9b0 8000 	ldrsh.w	r8, [r0]
 801f036:	6006      	str	r6, [r0, #0]
 801f038:	685e      	ldr	r6, [r3, #4]
 801f03a:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 801f03e:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 801f042:	6046      	str	r6, [r0, #4]
 801f044:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 801f048:	f8a3 c004 	strh.w	ip, [r3, #4]
 801f04c:	f8a3 e002 	strh.w	lr, [r3, #2]
 801f050:	80df      	strh	r7, [r3, #6]
 801f052:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 801f056:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 801f05a:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 801f05e:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801f062:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f066:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801f06a:	45ac      	cmp	ip, r5
 801f06c:	f1a1 0308 	sub.w	r3, r1, #8
 801f070:	dd0f      	ble.n	801f092 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 801f072:	681d      	ldr	r5, [r3, #0]
 801f074:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 801f078:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 801f07c:	6015      	str	r5, [r2, #0]
 801f07e:	685d      	ldr	r5, [r3, #4]
 801f080:	6055      	str	r5, [r2, #4]
 801f082:	f821 7c08 	strh.w	r7, [r1, #-8]
 801f086:	f821 6c06 	strh.w	r6, [r1, #-6]
 801f08a:	f821 ec04 	strh.w	lr, [r1, #-4]
 801f08e:	f821 cc02 	strh.w	ip, [r1, #-2]
 801f092:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801f096:	f9b0 7000 	ldrsh.w	r7, [r0]
 801f09a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801f09e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801f0a2:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 801f0a6:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f0aa:	4565      	cmp	r5, ip
 801f0ac:	dd0d      	ble.n	801f0ca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 801f0ae:	6815      	ldr	r5, [r2, #0]
 801f0b0:	6005      	str	r5, [r0, #0]
 801f0b2:	6855      	ldr	r5, [r2, #4]
 801f0b4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801f0b8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801f0bc:	8107      	strh	r7, [r0, #8]
 801f0be:	6045      	str	r5, [r0, #4]
 801f0c0:	8146      	strh	r6, [r0, #10]
 801f0c2:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801f0c6:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801f0ca:	f9b0 7000 	ldrsh.w	r7, [r0]
 801f0ce:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801f0d2:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 801f0d6:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801f0da:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 801f0de:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 801f0e2:	45ac      	cmp	ip, r5
 801f0e4:	dd0f      	ble.n	801f106 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801f0e6:	681d      	ldr	r5, [r3, #0]
 801f0e8:	6005      	str	r5, [r0, #0]
 801f0ea:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801f0ee:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801f0f2:	685d      	ldr	r5, [r3, #4]
 801f0f4:	6045      	str	r5, [r0, #4]
 801f0f6:	f821 7c08 	strh.w	r7, [r1, #-8]
 801f0fa:	f821 6c06 	strh.w	r6, [r1, #-6]
 801f0fe:	f821 ec04 	strh.w	lr, [r1, #-4]
 801f102:	f821 cc02 	strh.w	ip, [r1, #-2]
 801f106:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 801f10a:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 801f10e:	f9b0 e000 	ldrsh.w	lr, [r0]
 801f112:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801f116:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 801f11a:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 801f11e:	f102 0508 	add.w	r5, r2, #8
 801f122:	45b2      	cmp	sl, r6
 801f124:	462f      	mov	r7, r5
 801f126:	dc18      	bgt.n	801f15a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 801f128:	3b08      	subs	r3, #8
 801f12a:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 801f12e:	f9b3 6000 	ldrsh.w	r6, [r3]
 801f132:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 801f136:	45b2      	cmp	sl, r6
 801f138:	dbf6      	blt.n	801f128 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 801f13a:	42ab      	cmp	r3, r5
 801f13c:	681e      	ldr	r6, [r3, #0]
 801f13e:	d30e      	bcc.n	801f15e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 801f140:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 801f144:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 801f148:	602e      	str	r6, [r5, #0]
 801f14a:	685e      	ldr	r6, [r3, #4]
 801f14c:	606e      	str	r6, [r5, #4]
 801f14e:	f8a3 9000 	strh.w	r9, [r3]
 801f152:	f8a3 8002 	strh.w	r8, [r3, #2]
 801f156:	809f      	strh	r7, [r3, #4]
 801f158:	80da      	strh	r2, [r3, #6]
 801f15a:	462a      	mov	r2, r5
 801f15c:	e7d3      	b.n	801f106 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 801f15e:	6006      	str	r6, [r0, #0]
 801f160:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801f164:	685e      	ldr	r6, [r3, #4]
 801f166:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801f16a:	6046      	str	r6, [r0, #4]
 801f16c:	80da      	strh	r2, [r3, #6]
 801f16e:	1b4a      	subs	r2, r1, r5
 801f170:	1a1e      	subs	r6, r3, r0
 801f172:	10d2      	asrs	r2, r2, #3
 801f174:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 801f178:	bfb8      	it	lt
 801f17a:	e9c4 0300 	strdlt	r0, r3, [r4]
 801f17e:	f8a3 e000 	strh.w	lr, [r3]
 801f182:	f8a3 c002 	strh.w	ip, [r3, #2]
 801f186:	f8a3 8004 	strh.w	r8, [r3, #4]
 801f18a:	bfaa      	itet	ge
 801f18c:	4607      	movge	r7, r0
 801f18e:	460b      	movlt	r3, r1
 801f190:	e9c4 5100 	strdge	r5, r1, [r4]
 801f194:	4638      	mov	r0, r7
 801f196:	3408      	adds	r4, #8
 801f198:	4619      	mov	r1, r3
 801f19a:	e73e      	b.n	801f01a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801f19c:	4291      	cmp	r1, r2
 801f19e:	d926      	bls.n	801f1ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e0>
 801f1a0:	f1a2 0310 	sub.w	r3, r2, #16
 801f1a4:	f9b3 600a 	ldrsh.w	r6, [r3, #10]
 801f1a8:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 801f1ac:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 801f1b0:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 801f1b4:	eb05 4506 	add.w	r5, r5, r6, lsl #16
 801f1b8:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 801f1bc:	42b5      	cmp	r5, r6
 801f1be:	dd14      	ble.n	801f1ea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 801f1c0:	461d      	mov	r5, r3
 801f1c2:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 801f1c6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801f1ca:	611e      	str	r6, [r3, #16]
 801f1cc:	686e      	ldr	r6, [r5, #4]
 801f1ce:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 801f1d2:	f8a3 c008 	strh.w	ip, [r3, #8]
 801f1d6:	42a8      	cmp	r0, r5
 801f1d8:	615e      	str	r6, [r3, #20]
 801f1da:	815f      	strh	r7, [r3, #10]
 801f1dc:	f8a3 800c 	strh.w	r8, [r3, #12]
 801f1e0:	f8a3 e00e 	strh.w	lr, [r3, #14]
 801f1e4:	f1a3 0308 	sub.w	r3, r3, #8
 801f1e8:	d1dc      	bne.n	801f1a4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x196>
 801f1ea:	3208      	adds	r2, #8
 801f1ec:	e7d6      	b.n	801f19c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18e>
 801f1ee:	466b      	mov	r3, sp
 801f1f0:	429c      	cmp	r4, r3
 801f1f2:	d903      	bls.n	801f1fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ee>
 801f1f4:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801f1f8:	3c08      	subs	r4, #8
 801f1fa:	e70e      	b.n	801f01a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 801f1fc:	b051      	add	sp, #324	; 0x144
 801f1fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f202 <_ZN8touchgfx7Outline9sortCellsEv>:
 801f202:	6881      	ldr	r1, [r0, #8]
 801f204:	b111      	cbz	r1, 801f20c <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 801f206:	68c0      	ldr	r0, [r0, #12]
 801f208:	f7ff bf01 	b.w	801f00e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801f20c:	4770      	bx	lr

0801f20e <_ZN8touchgfx7Outline8getCellsEv>:
 801f20e:	b510      	push	{r4, lr}
 801f210:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 801f212:	07da      	lsls	r2, r3, #31
 801f214:	4604      	mov	r4, r0
 801f216:	d507      	bpl.n	801f228 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 801f218:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 801f21c:	f7ff fe81 	bl	801ef22 <_ZN8touchgfx7Outline6lineToEii>
 801f220:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f222:	f023 0301 	bic.w	r3, r3, #1
 801f226:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f228:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f22a:	079b      	lsls	r3, r3, #30
 801f22c:	d51a      	bpl.n	801f264 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 801f22e:	8b62      	ldrh	r2, [r4, #26]
 801f230:	8b23      	ldrh	r3, [r4, #24]
 801f232:	4313      	orrs	r3, r2
 801f234:	d00d      	beq.n	801f252 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f236:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 801f23a:	2b00      	cmp	r3, #0
 801f23c:	db09      	blt.n	801f252 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f23e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801f240:	4293      	cmp	r3, r2
 801f242:	da06      	bge.n	801f252 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 801f244:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 801f248:	429a      	cmp	r2, r3
 801f24a:	d80d      	bhi.n	801f268 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 801f24c:	2301      	movs	r3, #1
 801f24e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 801f252:	68a0      	ldr	r0, [r4, #8]
 801f254:	b138      	cbz	r0, 801f266 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 801f256:	4620      	mov	r0, r4
 801f258:	f7ff ffd3 	bl	801f202 <_ZN8touchgfx7Outline9sortCellsEv>
 801f25c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801f25e:	f023 0302 	bic.w	r3, r3, #2
 801f262:	63e3      	str	r3, [r4, #60]	; 0x3c
 801f264:	68e0      	ldr	r0, [r4, #12]
 801f266:	bd10      	pop	{r4, pc}
 801f268:	f104 0314 	add.w	r3, r4, #20
 801f26c:	cb03      	ldmia	r3!, {r0, r1}
 801f26e:	6922      	ldr	r2, [r4, #16]
 801f270:	6010      	str	r0, [r2, #0]
 801f272:	6051      	str	r1, [r2, #4]
 801f274:	6923      	ldr	r3, [r4, #16]
 801f276:	3308      	adds	r3, #8
 801f278:	6123      	str	r3, [r4, #16]
 801f27a:	68a3      	ldr	r3, [r4, #8]
 801f27c:	3301      	adds	r3, #1
 801f27e:	60a3      	str	r3, [r4, #8]
 801f280:	e7e7      	b.n	801f252 <_ZN8touchgfx7Outline8getCellsEv+0x44>

0801f282 <_ZN8touchgfx8ScanlineD1Ev>:
 801f282:	4770      	bx	lr

0801f284 <_ZN8touchgfx8ScanlineD0Ev>:
 801f284:	b510      	push	{r4, lr}
 801f286:	2124      	movs	r1, #36	; 0x24
 801f288:	4604      	mov	r4, r0
 801f28a:	f000 f884 	bl	801f396 <_ZdlPvj>
 801f28e:	4620      	mov	r0, r4
 801f290:	bd10      	pop	{r4, pc}

0801f292 <_ZN8touchgfx8Scanline5resetEv>:
 801f292:	b510      	push	{r4, lr}
 801f294:	4604      	mov	r4, r0
 801f296:	f7ee fc07 	bl	800daa8 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 801f29a:	61a0      	str	r0, [r4, #24]
 801f29c:	f7ee fc0a 	bl	800dab4 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 801f2a0:	61e0      	str	r0, [r4, #28]
 801f2a2:	f7ee fc0d 	bl	800dac0 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 801f2a6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f2aa:	e9c4 3301 	strd	r3, r3, [r4, #4]
 801f2ae:	69e3      	ldr	r3, [r4, #28]
 801f2b0:	6123      	str	r3, [r4, #16]
 801f2b2:	2300      	movs	r3, #0
 801f2b4:	6220      	str	r0, [r4, #32]
 801f2b6:	6160      	str	r0, [r4, #20]
 801f2b8:	60e3      	str	r3, [r4, #12]
 801f2ba:	bd10      	pop	{r4, pc}

0801f2bc <_ZN8touchgfx8ScanlineC1Ev>:
 801f2bc:	b510      	push	{r4, lr}
 801f2be:	4b07      	ldr	r3, [pc, #28]	; (801f2dc <_ZN8touchgfx8ScanlineC1Ev+0x20>)
 801f2c0:	6003      	str	r3, [r0, #0]
 801f2c2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801f2c6:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801f2ca:	2300      	movs	r3, #0
 801f2cc:	4604      	mov	r4, r0
 801f2ce:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801f2d2:	6143      	str	r3, [r0, #20]
 801f2d4:	f7ff ffdd 	bl	801f292 <_ZN8touchgfx8Scanline5resetEv>
 801f2d8:	4620      	mov	r0, r4
 801f2da:	bd10      	pop	{r4, pc}
 801f2dc:	080249b0 	.word	0x080249b0

0801f2e0 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 801f2e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f2e4:	1e0c      	subs	r4, r1, #0
 801f2e6:	4605      	mov	r5, r0
 801f2e8:	4617      	mov	r7, r2
 801f2ea:	461e      	mov	r6, r3
 801f2ec:	da03      	bge.n	801f2f6 <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 801f2ee:	4426      	add	r6, r4
 801f2f0:	2e01      	cmp	r6, #1
 801f2f2:	d421      	bmi.n	801f338 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801f2f4:	2400      	movs	r4, #0
 801f2f6:	f7ee fbd1 	bl	800da9c <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f2fa:	42a0      	cmp	r0, r4
 801f2fc:	d91c      	bls.n	801f338 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 801f2fe:	f7ee fbcd 	bl	800da9c <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f302:	eb04 0806 	add.w	r8, r4, r6
 801f306:	4580      	cmp	r8, r0
 801f308:	d902      	bls.n	801f310 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 801f30a:	f7ee fbc7 	bl	800da9c <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 801f30e:	1b06      	subs	r6, r0, r4
 801f310:	69a8      	ldr	r0, [r5, #24]
 801f312:	f89d 1018 	ldrb.w	r1, [sp, #24]
 801f316:	4632      	mov	r2, r6
 801f318:	4420      	add	r0, r4
 801f31a:	f7f1 f8ff 	bl	801051c <_ZN8touchgfx6memsetEPvhm>
 801f31e:	686b      	ldr	r3, [r5, #4]
 801f320:	3301      	adds	r3, #1
 801f322:	42a3      	cmp	r3, r4
 801f324:	b2b2      	uxth	r2, r6
 801f326:	696b      	ldr	r3, [r5, #20]
 801f328:	d108      	bne.n	801f33c <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 801f32a:	8819      	ldrh	r1, [r3, #0]
 801f32c:	440a      	add	r2, r1
 801f32e:	801a      	strh	r2, [r3, #0]
 801f330:	3c01      	subs	r4, #1
 801f332:	4434      	add	r4, r6
 801f334:	e9c5 4701 	strd	r4, r7, [r5, #4]
 801f338:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f33c:	1c99      	adds	r1, r3, #2
 801f33e:	6169      	str	r1, [r5, #20]
 801f340:	805a      	strh	r2, [r3, #2]
 801f342:	692b      	ldr	r3, [r5, #16]
 801f344:	1c9a      	adds	r2, r3, #2
 801f346:	612a      	str	r2, [r5, #16]
 801f348:	805c      	strh	r4, [r3, #2]
 801f34a:	68eb      	ldr	r3, [r5, #12]
 801f34c:	3301      	adds	r3, #1
 801f34e:	60eb      	str	r3, [r5, #12]
 801f350:	e7ee      	b.n	801f330 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0801f352 <_ZN8touchgfx15RenderingBufferD1Ev>:
 801f352:	4770      	bx	lr

0801f354 <_ZN8touchgfx15RenderingBufferD0Ev>:
 801f354:	b510      	push	{r4, lr}
 801f356:	2118      	movs	r1, #24
 801f358:	4604      	mov	r4, r0
 801f35a:	f000 f81c 	bl	801f396 <_ZdlPvj>
 801f35e:	4620      	mov	r0, r4
 801f360:	bd10      	pop	{r4, pc}
	...

0801f364 <_ZN8touchgfx15RenderingBufferC1Ev>:
 801f364:	4a04      	ldr	r2, [pc, #16]	; (801f378 <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 801f366:	6002      	str	r2, [r0, #0]
 801f368:	2200      	movs	r2, #0
 801f36a:	6042      	str	r2, [r0, #4]
 801f36c:	7202      	strb	r2, [r0, #8]
 801f36e:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801f372:	6142      	str	r2, [r0, #20]
 801f374:	4770      	bx	lr
 801f376:	bf00      	nop
 801f378:	080249c0 	.word	0x080249c0

0801f37c <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 801f37c:	60c3      	str	r3, [r0, #12]
 801f37e:	9b00      	ldr	r3, [sp, #0]
 801f380:	6103      	str	r3, [r0, #16]
 801f382:	9b01      	ldr	r3, [sp, #4]
 801f384:	6041      	str	r1, [r0, #4]
 801f386:	7202      	strb	r2, [r0, #8]
 801f388:	6143      	str	r3, [r0, #20]
 801f38a:	4770      	bx	lr

0801f38c <__aeabi_atexit>:
 801f38c:	460b      	mov	r3, r1
 801f38e:	4601      	mov	r1, r0
 801f390:	4618      	mov	r0, r3
 801f392:	f000 b853 	b.w	801f43c <__cxa_atexit>

0801f396 <_ZdlPvj>:
 801f396:	f000 b812 	b.w	801f3be <_ZdlPv>

0801f39a <__cxa_guard_acquire>:
 801f39a:	6803      	ldr	r3, [r0, #0]
 801f39c:	07db      	lsls	r3, r3, #31
 801f39e:	d406      	bmi.n	801f3ae <__cxa_guard_acquire+0x14>
 801f3a0:	7843      	ldrb	r3, [r0, #1]
 801f3a2:	b103      	cbz	r3, 801f3a6 <__cxa_guard_acquire+0xc>
 801f3a4:	deff      	udf	#255	; 0xff
 801f3a6:	2301      	movs	r3, #1
 801f3a8:	7043      	strb	r3, [r0, #1]
 801f3aa:	4618      	mov	r0, r3
 801f3ac:	4770      	bx	lr
 801f3ae:	2000      	movs	r0, #0
 801f3b0:	4770      	bx	lr

0801f3b2 <__cxa_guard_release>:
 801f3b2:	2301      	movs	r3, #1
 801f3b4:	6003      	str	r3, [r0, #0]
 801f3b6:	4770      	bx	lr

0801f3b8 <__cxa_pure_virtual>:
 801f3b8:	b508      	push	{r3, lr}
 801f3ba:	f000 f80f 	bl	801f3dc <_ZSt9terminatev>

0801f3be <_ZdlPv>:
 801f3be:	f000 b88f 	b.w	801f4e0 <free>

0801f3c2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801f3c2:	b508      	push	{r3, lr}
 801f3c4:	4780      	blx	r0
 801f3c6:	f000 f80e 	bl	801f3e6 <abort>
	...

0801f3cc <_ZSt13get_terminatev>:
 801f3cc:	4b02      	ldr	r3, [pc, #8]	; (801f3d8 <_ZSt13get_terminatev+0xc>)
 801f3ce:	6818      	ldr	r0, [r3, #0]
 801f3d0:	f3bf 8f5b 	dmb	ish
 801f3d4:	4770      	bx	lr
 801f3d6:	bf00      	nop
 801f3d8:	200000d4 	.word	0x200000d4

0801f3dc <_ZSt9terminatev>:
 801f3dc:	b508      	push	{r3, lr}
 801f3de:	f7ff fff5 	bl	801f3cc <_ZSt13get_terminatev>
 801f3e2:	f7ff ffee 	bl	801f3c2 <_ZN10__cxxabiv111__terminateEPFvvE>

0801f3e6 <abort>:
 801f3e6:	b508      	push	{r3, lr}
 801f3e8:	2006      	movs	r0, #6
 801f3ea:	f000 fc9d 	bl	801fd28 <raise>
 801f3ee:	2001      	movs	r0, #1
 801f3f0:	f7e2 fdb8 	bl	8001f64 <_exit>

0801f3f4 <__assert_func>:
 801f3f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801f3f6:	4614      	mov	r4, r2
 801f3f8:	461a      	mov	r2, r3
 801f3fa:	4b09      	ldr	r3, [pc, #36]	; (801f420 <__assert_func+0x2c>)
 801f3fc:	681b      	ldr	r3, [r3, #0]
 801f3fe:	4605      	mov	r5, r0
 801f400:	68d8      	ldr	r0, [r3, #12]
 801f402:	b14c      	cbz	r4, 801f418 <__assert_func+0x24>
 801f404:	4b07      	ldr	r3, [pc, #28]	; (801f424 <__assert_func+0x30>)
 801f406:	9100      	str	r1, [sp, #0]
 801f408:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801f40c:	4906      	ldr	r1, [pc, #24]	; (801f428 <__assert_func+0x34>)
 801f40e:	462b      	mov	r3, r5
 801f410:	f000 f828 	bl	801f464 <fiprintf>
 801f414:	f7ff ffe7 	bl	801f3e6 <abort>
 801f418:	4b04      	ldr	r3, [pc, #16]	; (801f42c <__assert_func+0x38>)
 801f41a:	461c      	mov	r4, r3
 801f41c:	e7f3      	b.n	801f406 <__assert_func+0x12>
 801f41e:	bf00      	nop
 801f420:	200000d8 	.word	0x200000d8
 801f424:	080249c8 	.word	0x080249c8
 801f428:	080249d5 	.word	0x080249d5
 801f42c:	08024a03 	.word	0x08024a03

0801f430 <atexit>:
 801f430:	2300      	movs	r3, #0
 801f432:	4601      	mov	r1, r0
 801f434:	461a      	mov	r2, r3
 801f436:	4618      	mov	r0, r3
 801f438:	f000 bd52 	b.w	801fee0 <__register_exitproc>

0801f43c <__cxa_atexit>:
 801f43c:	b510      	push	{r4, lr}
 801f43e:	4c05      	ldr	r4, [pc, #20]	; (801f454 <__cxa_atexit+0x18>)
 801f440:	4613      	mov	r3, r2
 801f442:	b12c      	cbz	r4, 801f450 <__cxa_atexit+0x14>
 801f444:	460a      	mov	r2, r1
 801f446:	4601      	mov	r1, r0
 801f448:	2002      	movs	r0, #2
 801f44a:	f000 fd49 	bl	801fee0 <__register_exitproc>
 801f44e:	bd10      	pop	{r4, pc}
 801f450:	4620      	mov	r0, r4
 801f452:	e7fc      	b.n	801f44e <__cxa_atexit+0x12>
 801f454:	0801fee1 	.word	0x0801fee1

0801f458 <__errno>:
 801f458:	4b01      	ldr	r3, [pc, #4]	; (801f460 <__errno+0x8>)
 801f45a:	6818      	ldr	r0, [r3, #0]
 801f45c:	4770      	bx	lr
 801f45e:	bf00      	nop
 801f460:	200000d8 	.word	0x200000d8

0801f464 <fiprintf>:
 801f464:	b40e      	push	{r1, r2, r3}
 801f466:	b503      	push	{r0, r1, lr}
 801f468:	4601      	mov	r1, r0
 801f46a:	ab03      	add	r3, sp, #12
 801f46c:	4805      	ldr	r0, [pc, #20]	; (801f484 <fiprintf+0x20>)
 801f46e:	f853 2b04 	ldr.w	r2, [r3], #4
 801f472:	6800      	ldr	r0, [r0, #0]
 801f474:	9301      	str	r3, [sp, #4]
 801f476:	f000 f95b 	bl	801f730 <_vfiprintf_r>
 801f47a:	b002      	add	sp, #8
 801f47c:	f85d eb04 	ldr.w	lr, [sp], #4
 801f480:	b003      	add	sp, #12
 801f482:	4770      	bx	lr
 801f484:	200000d8 	.word	0x200000d8

0801f488 <__libc_init_array>:
 801f488:	b570      	push	{r4, r5, r6, lr}
 801f48a:	4d0d      	ldr	r5, [pc, #52]	; (801f4c0 <__libc_init_array+0x38>)
 801f48c:	4c0d      	ldr	r4, [pc, #52]	; (801f4c4 <__libc_init_array+0x3c>)
 801f48e:	1b64      	subs	r4, r4, r5
 801f490:	10a4      	asrs	r4, r4, #2
 801f492:	2600      	movs	r6, #0
 801f494:	42a6      	cmp	r6, r4
 801f496:	d109      	bne.n	801f4ac <__libc_init_array+0x24>
 801f498:	4d0b      	ldr	r5, [pc, #44]	; (801f4c8 <__libc_init_array+0x40>)
 801f49a:	4c0c      	ldr	r4, [pc, #48]	; (801f4cc <__libc_init_array+0x44>)
 801f49c:	f001 f85a 	bl	8020554 <_init>
 801f4a0:	1b64      	subs	r4, r4, r5
 801f4a2:	10a4      	asrs	r4, r4, #2
 801f4a4:	2600      	movs	r6, #0
 801f4a6:	42a6      	cmp	r6, r4
 801f4a8:	d105      	bne.n	801f4b6 <__libc_init_array+0x2e>
 801f4aa:	bd70      	pop	{r4, r5, r6, pc}
 801f4ac:	f855 3b04 	ldr.w	r3, [r5], #4
 801f4b0:	4798      	blx	r3
 801f4b2:	3601      	adds	r6, #1
 801f4b4:	e7ee      	b.n	801f494 <__libc_init_array+0xc>
 801f4b6:	f855 3b04 	ldr.w	r3, [r5], #4
 801f4ba:	4798      	blx	r3
 801f4bc:	3601      	adds	r6, #1
 801f4be:	e7f2      	b.n	801f4a6 <__libc_init_array+0x1e>
 801f4c0:	08024ac4 	.word	0x08024ac4
 801f4c4:	08024ac4 	.word	0x08024ac4
 801f4c8:	08024ac4 	.word	0x08024ac4
 801f4cc:	08024adc 	.word	0x08024adc

0801f4d0 <malloc>:
 801f4d0:	4b02      	ldr	r3, [pc, #8]	; (801f4dc <malloc+0xc>)
 801f4d2:	4601      	mov	r1, r0
 801f4d4:	6818      	ldr	r0, [r3, #0]
 801f4d6:	f000 b88d 	b.w	801f5f4 <_malloc_r>
 801f4da:	bf00      	nop
 801f4dc:	200000d8 	.word	0x200000d8

0801f4e0 <free>:
 801f4e0:	4b02      	ldr	r3, [pc, #8]	; (801f4ec <free+0xc>)
 801f4e2:	4601      	mov	r1, r0
 801f4e4:	6818      	ldr	r0, [r3, #0]
 801f4e6:	f000 b819 	b.w	801f51c <_free_r>
 801f4ea:	bf00      	nop
 801f4ec:	200000d8 	.word	0x200000d8

0801f4f0 <memcpy>:
 801f4f0:	440a      	add	r2, r1
 801f4f2:	4291      	cmp	r1, r2
 801f4f4:	f100 33ff 	add.w	r3, r0, #4294967295
 801f4f8:	d100      	bne.n	801f4fc <memcpy+0xc>
 801f4fa:	4770      	bx	lr
 801f4fc:	b510      	push	{r4, lr}
 801f4fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f502:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f506:	4291      	cmp	r1, r2
 801f508:	d1f9      	bne.n	801f4fe <memcpy+0xe>
 801f50a:	bd10      	pop	{r4, pc}

0801f50c <memset>:
 801f50c:	4402      	add	r2, r0
 801f50e:	4603      	mov	r3, r0
 801f510:	4293      	cmp	r3, r2
 801f512:	d100      	bne.n	801f516 <memset+0xa>
 801f514:	4770      	bx	lr
 801f516:	f803 1b01 	strb.w	r1, [r3], #1
 801f51a:	e7f9      	b.n	801f510 <memset+0x4>

0801f51c <_free_r>:
 801f51c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f51e:	2900      	cmp	r1, #0
 801f520:	d044      	beq.n	801f5ac <_free_r+0x90>
 801f522:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f526:	9001      	str	r0, [sp, #4]
 801f528:	2b00      	cmp	r3, #0
 801f52a:	f1a1 0404 	sub.w	r4, r1, #4
 801f52e:	bfb8      	it	lt
 801f530:	18e4      	addlt	r4, r4, r3
 801f532:	f000 ff57 	bl	80203e4 <__malloc_lock>
 801f536:	4a1e      	ldr	r2, [pc, #120]	; (801f5b0 <_free_r+0x94>)
 801f538:	9801      	ldr	r0, [sp, #4]
 801f53a:	6813      	ldr	r3, [r2, #0]
 801f53c:	b933      	cbnz	r3, 801f54c <_free_r+0x30>
 801f53e:	6063      	str	r3, [r4, #4]
 801f540:	6014      	str	r4, [r2, #0]
 801f542:	b003      	add	sp, #12
 801f544:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801f548:	f000 bf52 	b.w	80203f0 <__malloc_unlock>
 801f54c:	42a3      	cmp	r3, r4
 801f54e:	d908      	bls.n	801f562 <_free_r+0x46>
 801f550:	6825      	ldr	r5, [r4, #0]
 801f552:	1961      	adds	r1, r4, r5
 801f554:	428b      	cmp	r3, r1
 801f556:	bf01      	itttt	eq
 801f558:	6819      	ldreq	r1, [r3, #0]
 801f55a:	685b      	ldreq	r3, [r3, #4]
 801f55c:	1949      	addeq	r1, r1, r5
 801f55e:	6021      	streq	r1, [r4, #0]
 801f560:	e7ed      	b.n	801f53e <_free_r+0x22>
 801f562:	461a      	mov	r2, r3
 801f564:	685b      	ldr	r3, [r3, #4]
 801f566:	b10b      	cbz	r3, 801f56c <_free_r+0x50>
 801f568:	42a3      	cmp	r3, r4
 801f56a:	d9fa      	bls.n	801f562 <_free_r+0x46>
 801f56c:	6811      	ldr	r1, [r2, #0]
 801f56e:	1855      	adds	r5, r2, r1
 801f570:	42a5      	cmp	r5, r4
 801f572:	d10b      	bne.n	801f58c <_free_r+0x70>
 801f574:	6824      	ldr	r4, [r4, #0]
 801f576:	4421      	add	r1, r4
 801f578:	1854      	adds	r4, r2, r1
 801f57a:	42a3      	cmp	r3, r4
 801f57c:	6011      	str	r1, [r2, #0]
 801f57e:	d1e0      	bne.n	801f542 <_free_r+0x26>
 801f580:	681c      	ldr	r4, [r3, #0]
 801f582:	685b      	ldr	r3, [r3, #4]
 801f584:	6053      	str	r3, [r2, #4]
 801f586:	4421      	add	r1, r4
 801f588:	6011      	str	r1, [r2, #0]
 801f58a:	e7da      	b.n	801f542 <_free_r+0x26>
 801f58c:	d902      	bls.n	801f594 <_free_r+0x78>
 801f58e:	230c      	movs	r3, #12
 801f590:	6003      	str	r3, [r0, #0]
 801f592:	e7d6      	b.n	801f542 <_free_r+0x26>
 801f594:	6825      	ldr	r5, [r4, #0]
 801f596:	1961      	adds	r1, r4, r5
 801f598:	428b      	cmp	r3, r1
 801f59a:	bf04      	itt	eq
 801f59c:	6819      	ldreq	r1, [r3, #0]
 801f59e:	685b      	ldreq	r3, [r3, #4]
 801f5a0:	6063      	str	r3, [r4, #4]
 801f5a2:	bf04      	itt	eq
 801f5a4:	1949      	addeq	r1, r1, r5
 801f5a6:	6021      	streq	r1, [r4, #0]
 801f5a8:	6054      	str	r4, [r2, #4]
 801f5aa:	e7ca      	b.n	801f542 <_free_r+0x26>
 801f5ac:	b003      	add	sp, #12
 801f5ae:	bd30      	pop	{r4, r5, pc}
 801f5b0:	2000d528 	.word	0x2000d528

0801f5b4 <sbrk_aligned>:
 801f5b4:	b570      	push	{r4, r5, r6, lr}
 801f5b6:	4e0e      	ldr	r6, [pc, #56]	; (801f5f0 <sbrk_aligned+0x3c>)
 801f5b8:	460c      	mov	r4, r1
 801f5ba:	6831      	ldr	r1, [r6, #0]
 801f5bc:	4605      	mov	r5, r0
 801f5be:	b911      	cbnz	r1, 801f5c6 <sbrk_aligned+0x12>
 801f5c0:	f000 fb7a 	bl	801fcb8 <_sbrk_r>
 801f5c4:	6030      	str	r0, [r6, #0]
 801f5c6:	4621      	mov	r1, r4
 801f5c8:	4628      	mov	r0, r5
 801f5ca:	f000 fb75 	bl	801fcb8 <_sbrk_r>
 801f5ce:	1c43      	adds	r3, r0, #1
 801f5d0:	d00a      	beq.n	801f5e8 <sbrk_aligned+0x34>
 801f5d2:	1cc4      	adds	r4, r0, #3
 801f5d4:	f024 0403 	bic.w	r4, r4, #3
 801f5d8:	42a0      	cmp	r0, r4
 801f5da:	d007      	beq.n	801f5ec <sbrk_aligned+0x38>
 801f5dc:	1a21      	subs	r1, r4, r0
 801f5de:	4628      	mov	r0, r5
 801f5e0:	f000 fb6a 	bl	801fcb8 <_sbrk_r>
 801f5e4:	3001      	adds	r0, #1
 801f5e6:	d101      	bne.n	801f5ec <sbrk_aligned+0x38>
 801f5e8:	f04f 34ff 	mov.w	r4, #4294967295
 801f5ec:	4620      	mov	r0, r4
 801f5ee:	bd70      	pop	{r4, r5, r6, pc}
 801f5f0:	2000d52c 	.word	0x2000d52c

0801f5f4 <_malloc_r>:
 801f5f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f5f8:	1ccd      	adds	r5, r1, #3
 801f5fa:	f025 0503 	bic.w	r5, r5, #3
 801f5fe:	3508      	adds	r5, #8
 801f600:	2d0c      	cmp	r5, #12
 801f602:	bf38      	it	cc
 801f604:	250c      	movcc	r5, #12
 801f606:	2d00      	cmp	r5, #0
 801f608:	4607      	mov	r7, r0
 801f60a:	db01      	blt.n	801f610 <_malloc_r+0x1c>
 801f60c:	42a9      	cmp	r1, r5
 801f60e:	d905      	bls.n	801f61c <_malloc_r+0x28>
 801f610:	230c      	movs	r3, #12
 801f612:	603b      	str	r3, [r7, #0]
 801f614:	2600      	movs	r6, #0
 801f616:	4630      	mov	r0, r6
 801f618:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801f61c:	4e2e      	ldr	r6, [pc, #184]	; (801f6d8 <_malloc_r+0xe4>)
 801f61e:	f000 fee1 	bl	80203e4 <__malloc_lock>
 801f622:	6833      	ldr	r3, [r6, #0]
 801f624:	461c      	mov	r4, r3
 801f626:	bb34      	cbnz	r4, 801f676 <_malloc_r+0x82>
 801f628:	4629      	mov	r1, r5
 801f62a:	4638      	mov	r0, r7
 801f62c:	f7ff ffc2 	bl	801f5b4 <sbrk_aligned>
 801f630:	1c43      	adds	r3, r0, #1
 801f632:	4604      	mov	r4, r0
 801f634:	d14d      	bne.n	801f6d2 <_malloc_r+0xde>
 801f636:	6834      	ldr	r4, [r6, #0]
 801f638:	4626      	mov	r6, r4
 801f63a:	2e00      	cmp	r6, #0
 801f63c:	d140      	bne.n	801f6c0 <_malloc_r+0xcc>
 801f63e:	6823      	ldr	r3, [r4, #0]
 801f640:	4631      	mov	r1, r6
 801f642:	4638      	mov	r0, r7
 801f644:	eb04 0803 	add.w	r8, r4, r3
 801f648:	f000 fb36 	bl	801fcb8 <_sbrk_r>
 801f64c:	4580      	cmp	r8, r0
 801f64e:	d13a      	bne.n	801f6c6 <_malloc_r+0xd2>
 801f650:	6821      	ldr	r1, [r4, #0]
 801f652:	3503      	adds	r5, #3
 801f654:	1a6d      	subs	r5, r5, r1
 801f656:	f025 0503 	bic.w	r5, r5, #3
 801f65a:	3508      	adds	r5, #8
 801f65c:	2d0c      	cmp	r5, #12
 801f65e:	bf38      	it	cc
 801f660:	250c      	movcc	r5, #12
 801f662:	4629      	mov	r1, r5
 801f664:	4638      	mov	r0, r7
 801f666:	f7ff ffa5 	bl	801f5b4 <sbrk_aligned>
 801f66a:	3001      	adds	r0, #1
 801f66c:	d02b      	beq.n	801f6c6 <_malloc_r+0xd2>
 801f66e:	6823      	ldr	r3, [r4, #0]
 801f670:	442b      	add	r3, r5
 801f672:	6023      	str	r3, [r4, #0]
 801f674:	e00e      	b.n	801f694 <_malloc_r+0xa0>
 801f676:	6822      	ldr	r2, [r4, #0]
 801f678:	1b52      	subs	r2, r2, r5
 801f67a:	d41e      	bmi.n	801f6ba <_malloc_r+0xc6>
 801f67c:	2a0b      	cmp	r2, #11
 801f67e:	d916      	bls.n	801f6ae <_malloc_r+0xba>
 801f680:	1961      	adds	r1, r4, r5
 801f682:	42a3      	cmp	r3, r4
 801f684:	6025      	str	r5, [r4, #0]
 801f686:	bf18      	it	ne
 801f688:	6059      	strne	r1, [r3, #4]
 801f68a:	6863      	ldr	r3, [r4, #4]
 801f68c:	bf08      	it	eq
 801f68e:	6031      	streq	r1, [r6, #0]
 801f690:	5162      	str	r2, [r4, r5]
 801f692:	604b      	str	r3, [r1, #4]
 801f694:	4638      	mov	r0, r7
 801f696:	f104 060b 	add.w	r6, r4, #11
 801f69a:	f000 fea9 	bl	80203f0 <__malloc_unlock>
 801f69e:	f026 0607 	bic.w	r6, r6, #7
 801f6a2:	1d23      	adds	r3, r4, #4
 801f6a4:	1af2      	subs	r2, r6, r3
 801f6a6:	d0b6      	beq.n	801f616 <_malloc_r+0x22>
 801f6a8:	1b9b      	subs	r3, r3, r6
 801f6aa:	50a3      	str	r3, [r4, r2]
 801f6ac:	e7b3      	b.n	801f616 <_malloc_r+0x22>
 801f6ae:	6862      	ldr	r2, [r4, #4]
 801f6b0:	42a3      	cmp	r3, r4
 801f6b2:	bf0c      	ite	eq
 801f6b4:	6032      	streq	r2, [r6, #0]
 801f6b6:	605a      	strne	r2, [r3, #4]
 801f6b8:	e7ec      	b.n	801f694 <_malloc_r+0xa0>
 801f6ba:	4623      	mov	r3, r4
 801f6bc:	6864      	ldr	r4, [r4, #4]
 801f6be:	e7b2      	b.n	801f626 <_malloc_r+0x32>
 801f6c0:	4634      	mov	r4, r6
 801f6c2:	6876      	ldr	r6, [r6, #4]
 801f6c4:	e7b9      	b.n	801f63a <_malloc_r+0x46>
 801f6c6:	230c      	movs	r3, #12
 801f6c8:	603b      	str	r3, [r7, #0]
 801f6ca:	4638      	mov	r0, r7
 801f6cc:	f000 fe90 	bl	80203f0 <__malloc_unlock>
 801f6d0:	e7a1      	b.n	801f616 <_malloc_r+0x22>
 801f6d2:	6025      	str	r5, [r4, #0]
 801f6d4:	e7de      	b.n	801f694 <_malloc_r+0xa0>
 801f6d6:	bf00      	nop
 801f6d8:	2000d528 	.word	0x2000d528

0801f6dc <__sfputc_r>:
 801f6dc:	6893      	ldr	r3, [r2, #8]
 801f6de:	3b01      	subs	r3, #1
 801f6e0:	2b00      	cmp	r3, #0
 801f6e2:	b410      	push	{r4}
 801f6e4:	6093      	str	r3, [r2, #8]
 801f6e6:	da08      	bge.n	801f6fa <__sfputc_r+0x1e>
 801f6e8:	6994      	ldr	r4, [r2, #24]
 801f6ea:	42a3      	cmp	r3, r4
 801f6ec:	db01      	blt.n	801f6f2 <__sfputc_r+0x16>
 801f6ee:	290a      	cmp	r1, #10
 801f6f0:	d103      	bne.n	801f6fa <__sfputc_r+0x1e>
 801f6f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f6f6:	f000 bb33 	b.w	801fd60 <__swbuf_r>
 801f6fa:	6813      	ldr	r3, [r2, #0]
 801f6fc:	1c58      	adds	r0, r3, #1
 801f6fe:	6010      	str	r0, [r2, #0]
 801f700:	7019      	strb	r1, [r3, #0]
 801f702:	4608      	mov	r0, r1
 801f704:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f708:	4770      	bx	lr

0801f70a <__sfputs_r>:
 801f70a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f70c:	4606      	mov	r6, r0
 801f70e:	460f      	mov	r7, r1
 801f710:	4614      	mov	r4, r2
 801f712:	18d5      	adds	r5, r2, r3
 801f714:	42ac      	cmp	r4, r5
 801f716:	d101      	bne.n	801f71c <__sfputs_r+0x12>
 801f718:	2000      	movs	r0, #0
 801f71a:	e007      	b.n	801f72c <__sfputs_r+0x22>
 801f71c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f720:	463a      	mov	r2, r7
 801f722:	4630      	mov	r0, r6
 801f724:	f7ff ffda 	bl	801f6dc <__sfputc_r>
 801f728:	1c43      	adds	r3, r0, #1
 801f72a:	d1f3      	bne.n	801f714 <__sfputs_r+0xa>
 801f72c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801f730 <_vfiprintf_r>:
 801f730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f734:	460d      	mov	r5, r1
 801f736:	b09d      	sub	sp, #116	; 0x74
 801f738:	4614      	mov	r4, r2
 801f73a:	4698      	mov	r8, r3
 801f73c:	4606      	mov	r6, r0
 801f73e:	b118      	cbz	r0, 801f748 <_vfiprintf_r+0x18>
 801f740:	6983      	ldr	r3, [r0, #24]
 801f742:	b90b      	cbnz	r3, 801f748 <_vfiprintf_r+0x18>
 801f744:	f000 fd48 	bl	80201d8 <__sinit>
 801f748:	4b89      	ldr	r3, [pc, #548]	; (801f970 <_vfiprintf_r+0x240>)
 801f74a:	429d      	cmp	r5, r3
 801f74c:	d11b      	bne.n	801f786 <_vfiprintf_r+0x56>
 801f74e:	6875      	ldr	r5, [r6, #4]
 801f750:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801f752:	07d9      	lsls	r1, r3, #31
 801f754:	d405      	bmi.n	801f762 <_vfiprintf_r+0x32>
 801f756:	89ab      	ldrh	r3, [r5, #12]
 801f758:	059a      	lsls	r2, r3, #22
 801f75a:	d402      	bmi.n	801f762 <_vfiprintf_r+0x32>
 801f75c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801f75e:	f000 fdd9 	bl	8020314 <__retarget_lock_acquire_recursive>
 801f762:	89ab      	ldrh	r3, [r5, #12]
 801f764:	071b      	lsls	r3, r3, #28
 801f766:	d501      	bpl.n	801f76c <_vfiprintf_r+0x3c>
 801f768:	692b      	ldr	r3, [r5, #16]
 801f76a:	b9eb      	cbnz	r3, 801f7a8 <_vfiprintf_r+0x78>
 801f76c:	4629      	mov	r1, r5
 801f76e:	4630      	mov	r0, r6
 801f770:	f000 fb48 	bl	801fe04 <__swsetup_r>
 801f774:	b1c0      	cbz	r0, 801f7a8 <_vfiprintf_r+0x78>
 801f776:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801f778:	07dc      	lsls	r4, r3, #31
 801f77a:	d50e      	bpl.n	801f79a <_vfiprintf_r+0x6a>
 801f77c:	f04f 30ff 	mov.w	r0, #4294967295
 801f780:	b01d      	add	sp, #116	; 0x74
 801f782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f786:	4b7b      	ldr	r3, [pc, #492]	; (801f974 <_vfiprintf_r+0x244>)
 801f788:	429d      	cmp	r5, r3
 801f78a:	d101      	bne.n	801f790 <_vfiprintf_r+0x60>
 801f78c:	68b5      	ldr	r5, [r6, #8]
 801f78e:	e7df      	b.n	801f750 <_vfiprintf_r+0x20>
 801f790:	4b79      	ldr	r3, [pc, #484]	; (801f978 <_vfiprintf_r+0x248>)
 801f792:	429d      	cmp	r5, r3
 801f794:	bf08      	it	eq
 801f796:	68f5      	ldreq	r5, [r6, #12]
 801f798:	e7da      	b.n	801f750 <_vfiprintf_r+0x20>
 801f79a:	89ab      	ldrh	r3, [r5, #12]
 801f79c:	0598      	lsls	r0, r3, #22
 801f79e:	d4ed      	bmi.n	801f77c <_vfiprintf_r+0x4c>
 801f7a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801f7a2:	f000 fdb9 	bl	8020318 <__retarget_lock_release_recursive>
 801f7a6:	e7e9      	b.n	801f77c <_vfiprintf_r+0x4c>
 801f7a8:	2300      	movs	r3, #0
 801f7aa:	9309      	str	r3, [sp, #36]	; 0x24
 801f7ac:	2320      	movs	r3, #32
 801f7ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801f7b2:	f8cd 800c 	str.w	r8, [sp, #12]
 801f7b6:	2330      	movs	r3, #48	; 0x30
 801f7b8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801f97c <_vfiprintf_r+0x24c>
 801f7bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801f7c0:	f04f 0901 	mov.w	r9, #1
 801f7c4:	4623      	mov	r3, r4
 801f7c6:	469a      	mov	sl, r3
 801f7c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 801f7cc:	b10a      	cbz	r2, 801f7d2 <_vfiprintf_r+0xa2>
 801f7ce:	2a25      	cmp	r2, #37	; 0x25
 801f7d0:	d1f9      	bne.n	801f7c6 <_vfiprintf_r+0x96>
 801f7d2:	ebba 0b04 	subs.w	fp, sl, r4
 801f7d6:	d00b      	beq.n	801f7f0 <_vfiprintf_r+0xc0>
 801f7d8:	465b      	mov	r3, fp
 801f7da:	4622      	mov	r2, r4
 801f7dc:	4629      	mov	r1, r5
 801f7de:	4630      	mov	r0, r6
 801f7e0:	f7ff ff93 	bl	801f70a <__sfputs_r>
 801f7e4:	3001      	adds	r0, #1
 801f7e6:	f000 80aa 	beq.w	801f93e <_vfiprintf_r+0x20e>
 801f7ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f7ec:	445a      	add	r2, fp
 801f7ee:	9209      	str	r2, [sp, #36]	; 0x24
 801f7f0:	f89a 3000 	ldrb.w	r3, [sl]
 801f7f4:	2b00      	cmp	r3, #0
 801f7f6:	f000 80a2 	beq.w	801f93e <_vfiprintf_r+0x20e>
 801f7fa:	2300      	movs	r3, #0
 801f7fc:	f04f 32ff 	mov.w	r2, #4294967295
 801f800:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801f804:	f10a 0a01 	add.w	sl, sl, #1
 801f808:	9304      	str	r3, [sp, #16]
 801f80a:	9307      	str	r3, [sp, #28]
 801f80c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801f810:	931a      	str	r3, [sp, #104]	; 0x68
 801f812:	4654      	mov	r4, sl
 801f814:	2205      	movs	r2, #5
 801f816:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f81a:	4858      	ldr	r0, [pc, #352]	; (801f97c <_vfiprintf_r+0x24c>)
 801f81c:	f7e0 fcf0 	bl	8000200 <memchr>
 801f820:	9a04      	ldr	r2, [sp, #16]
 801f822:	b9d8      	cbnz	r0, 801f85c <_vfiprintf_r+0x12c>
 801f824:	06d1      	lsls	r1, r2, #27
 801f826:	bf44      	itt	mi
 801f828:	2320      	movmi	r3, #32
 801f82a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801f82e:	0713      	lsls	r3, r2, #28
 801f830:	bf44      	itt	mi
 801f832:	232b      	movmi	r3, #43	; 0x2b
 801f834:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801f838:	f89a 3000 	ldrb.w	r3, [sl]
 801f83c:	2b2a      	cmp	r3, #42	; 0x2a
 801f83e:	d015      	beq.n	801f86c <_vfiprintf_r+0x13c>
 801f840:	9a07      	ldr	r2, [sp, #28]
 801f842:	4654      	mov	r4, sl
 801f844:	2000      	movs	r0, #0
 801f846:	f04f 0c0a 	mov.w	ip, #10
 801f84a:	4621      	mov	r1, r4
 801f84c:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f850:	3b30      	subs	r3, #48	; 0x30
 801f852:	2b09      	cmp	r3, #9
 801f854:	d94e      	bls.n	801f8f4 <_vfiprintf_r+0x1c4>
 801f856:	b1b0      	cbz	r0, 801f886 <_vfiprintf_r+0x156>
 801f858:	9207      	str	r2, [sp, #28]
 801f85a:	e014      	b.n	801f886 <_vfiprintf_r+0x156>
 801f85c:	eba0 0308 	sub.w	r3, r0, r8
 801f860:	fa09 f303 	lsl.w	r3, r9, r3
 801f864:	4313      	orrs	r3, r2
 801f866:	9304      	str	r3, [sp, #16]
 801f868:	46a2      	mov	sl, r4
 801f86a:	e7d2      	b.n	801f812 <_vfiprintf_r+0xe2>
 801f86c:	9b03      	ldr	r3, [sp, #12]
 801f86e:	1d19      	adds	r1, r3, #4
 801f870:	681b      	ldr	r3, [r3, #0]
 801f872:	9103      	str	r1, [sp, #12]
 801f874:	2b00      	cmp	r3, #0
 801f876:	bfbb      	ittet	lt
 801f878:	425b      	neglt	r3, r3
 801f87a:	f042 0202 	orrlt.w	r2, r2, #2
 801f87e:	9307      	strge	r3, [sp, #28]
 801f880:	9307      	strlt	r3, [sp, #28]
 801f882:	bfb8      	it	lt
 801f884:	9204      	strlt	r2, [sp, #16]
 801f886:	7823      	ldrb	r3, [r4, #0]
 801f888:	2b2e      	cmp	r3, #46	; 0x2e
 801f88a:	d10c      	bne.n	801f8a6 <_vfiprintf_r+0x176>
 801f88c:	7863      	ldrb	r3, [r4, #1]
 801f88e:	2b2a      	cmp	r3, #42	; 0x2a
 801f890:	d135      	bne.n	801f8fe <_vfiprintf_r+0x1ce>
 801f892:	9b03      	ldr	r3, [sp, #12]
 801f894:	1d1a      	adds	r2, r3, #4
 801f896:	681b      	ldr	r3, [r3, #0]
 801f898:	9203      	str	r2, [sp, #12]
 801f89a:	2b00      	cmp	r3, #0
 801f89c:	bfb8      	it	lt
 801f89e:	f04f 33ff 	movlt.w	r3, #4294967295
 801f8a2:	3402      	adds	r4, #2
 801f8a4:	9305      	str	r3, [sp, #20]
 801f8a6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801f98c <_vfiprintf_r+0x25c>
 801f8aa:	7821      	ldrb	r1, [r4, #0]
 801f8ac:	2203      	movs	r2, #3
 801f8ae:	4650      	mov	r0, sl
 801f8b0:	f7e0 fca6 	bl	8000200 <memchr>
 801f8b4:	b140      	cbz	r0, 801f8c8 <_vfiprintf_r+0x198>
 801f8b6:	2340      	movs	r3, #64	; 0x40
 801f8b8:	eba0 000a 	sub.w	r0, r0, sl
 801f8bc:	fa03 f000 	lsl.w	r0, r3, r0
 801f8c0:	9b04      	ldr	r3, [sp, #16]
 801f8c2:	4303      	orrs	r3, r0
 801f8c4:	3401      	adds	r4, #1
 801f8c6:	9304      	str	r3, [sp, #16]
 801f8c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 801f8cc:	482c      	ldr	r0, [pc, #176]	; (801f980 <_vfiprintf_r+0x250>)
 801f8ce:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801f8d2:	2206      	movs	r2, #6
 801f8d4:	f7e0 fc94 	bl	8000200 <memchr>
 801f8d8:	2800      	cmp	r0, #0
 801f8da:	d03f      	beq.n	801f95c <_vfiprintf_r+0x22c>
 801f8dc:	4b29      	ldr	r3, [pc, #164]	; (801f984 <_vfiprintf_r+0x254>)
 801f8de:	bb1b      	cbnz	r3, 801f928 <_vfiprintf_r+0x1f8>
 801f8e0:	9b03      	ldr	r3, [sp, #12]
 801f8e2:	3307      	adds	r3, #7
 801f8e4:	f023 0307 	bic.w	r3, r3, #7
 801f8e8:	3308      	adds	r3, #8
 801f8ea:	9303      	str	r3, [sp, #12]
 801f8ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ee:	443b      	add	r3, r7
 801f8f0:	9309      	str	r3, [sp, #36]	; 0x24
 801f8f2:	e767      	b.n	801f7c4 <_vfiprintf_r+0x94>
 801f8f4:	fb0c 3202 	mla	r2, ip, r2, r3
 801f8f8:	460c      	mov	r4, r1
 801f8fa:	2001      	movs	r0, #1
 801f8fc:	e7a5      	b.n	801f84a <_vfiprintf_r+0x11a>
 801f8fe:	2300      	movs	r3, #0
 801f900:	3401      	adds	r4, #1
 801f902:	9305      	str	r3, [sp, #20]
 801f904:	4619      	mov	r1, r3
 801f906:	f04f 0c0a 	mov.w	ip, #10
 801f90a:	4620      	mov	r0, r4
 801f90c:	f810 2b01 	ldrb.w	r2, [r0], #1
 801f910:	3a30      	subs	r2, #48	; 0x30
 801f912:	2a09      	cmp	r2, #9
 801f914:	d903      	bls.n	801f91e <_vfiprintf_r+0x1ee>
 801f916:	2b00      	cmp	r3, #0
 801f918:	d0c5      	beq.n	801f8a6 <_vfiprintf_r+0x176>
 801f91a:	9105      	str	r1, [sp, #20]
 801f91c:	e7c3      	b.n	801f8a6 <_vfiprintf_r+0x176>
 801f91e:	fb0c 2101 	mla	r1, ip, r1, r2
 801f922:	4604      	mov	r4, r0
 801f924:	2301      	movs	r3, #1
 801f926:	e7f0      	b.n	801f90a <_vfiprintf_r+0x1da>
 801f928:	ab03      	add	r3, sp, #12
 801f92a:	9300      	str	r3, [sp, #0]
 801f92c:	462a      	mov	r2, r5
 801f92e:	4b16      	ldr	r3, [pc, #88]	; (801f988 <_vfiprintf_r+0x258>)
 801f930:	a904      	add	r1, sp, #16
 801f932:	4630      	mov	r0, r6
 801f934:	f3af 8000 	nop.w
 801f938:	4607      	mov	r7, r0
 801f93a:	1c78      	adds	r0, r7, #1
 801f93c:	d1d6      	bne.n	801f8ec <_vfiprintf_r+0x1bc>
 801f93e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801f940:	07d9      	lsls	r1, r3, #31
 801f942:	d405      	bmi.n	801f950 <_vfiprintf_r+0x220>
 801f944:	89ab      	ldrh	r3, [r5, #12]
 801f946:	059a      	lsls	r2, r3, #22
 801f948:	d402      	bmi.n	801f950 <_vfiprintf_r+0x220>
 801f94a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801f94c:	f000 fce4 	bl	8020318 <__retarget_lock_release_recursive>
 801f950:	89ab      	ldrh	r3, [r5, #12]
 801f952:	065b      	lsls	r3, r3, #25
 801f954:	f53f af12 	bmi.w	801f77c <_vfiprintf_r+0x4c>
 801f958:	9809      	ldr	r0, [sp, #36]	; 0x24
 801f95a:	e711      	b.n	801f780 <_vfiprintf_r+0x50>
 801f95c:	ab03      	add	r3, sp, #12
 801f95e:	9300      	str	r3, [sp, #0]
 801f960:	462a      	mov	r2, r5
 801f962:	4b09      	ldr	r3, [pc, #36]	; (801f988 <_vfiprintf_r+0x258>)
 801f964:	a904      	add	r1, sp, #16
 801f966:	4630      	mov	r0, r6
 801f968:	f000 f880 	bl	801fa6c <_printf_i>
 801f96c:	e7e4      	b.n	801f938 <_vfiprintf_r+0x208>
 801f96e:	bf00      	nop
 801f970:	08024a60 	.word	0x08024a60
 801f974:	08024a80 	.word	0x08024a80
 801f978:	08024a40 	.word	0x08024a40
 801f97c:	08024a08 	.word	0x08024a08
 801f980:	08024a12 	.word	0x08024a12
 801f984:	00000000 	.word	0x00000000
 801f988:	0801f70b 	.word	0x0801f70b
 801f98c:	08024a0e 	.word	0x08024a0e

0801f990 <_printf_common>:
 801f990:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f994:	4616      	mov	r6, r2
 801f996:	4699      	mov	r9, r3
 801f998:	688a      	ldr	r2, [r1, #8]
 801f99a:	690b      	ldr	r3, [r1, #16]
 801f99c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801f9a0:	4293      	cmp	r3, r2
 801f9a2:	bfb8      	it	lt
 801f9a4:	4613      	movlt	r3, r2
 801f9a6:	6033      	str	r3, [r6, #0]
 801f9a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801f9ac:	4607      	mov	r7, r0
 801f9ae:	460c      	mov	r4, r1
 801f9b0:	b10a      	cbz	r2, 801f9b6 <_printf_common+0x26>
 801f9b2:	3301      	adds	r3, #1
 801f9b4:	6033      	str	r3, [r6, #0]
 801f9b6:	6823      	ldr	r3, [r4, #0]
 801f9b8:	0699      	lsls	r1, r3, #26
 801f9ba:	bf42      	ittt	mi
 801f9bc:	6833      	ldrmi	r3, [r6, #0]
 801f9be:	3302      	addmi	r3, #2
 801f9c0:	6033      	strmi	r3, [r6, #0]
 801f9c2:	6825      	ldr	r5, [r4, #0]
 801f9c4:	f015 0506 	ands.w	r5, r5, #6
 801f9c8:	d106      	bne.n	801f9d8 <_printf_common+0x48>
 801f9ca:	f104 0a19 	add.w	sl, r4, #25
 801f9ce:	68e3      	ldr	r3, [r4, #12]
 801f9d0:	6832      	ldr	r2, [r6, #0]
 801f9d2:	1a9b      	subs	r3, r3, r2
 801f9d4:	42ab      	cmp	r3, r5
 801f9d6:	dc26      	bgt.n	801fa26 <_printf_common+0x96>
 801f9d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801f9dc:	1e13      	subs	r3, r2, #0
 801f9de:	6822      	ldr	r2, [r4, #0]
 801f9e0:	bf18      	it	ne
 801f9e2:	2301      	movne	r3, #1
 801f9e4:	0692      	lsls	r2, r2, #26
 801f9e6:	d42b      	bmi.n	801fa40 <_printf_common+0xb0>
 801f9e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801f9ec:	4649      	mov	r1, r9
 801f9ee:	4638      	mov	r0, r7
 801f9f0:	47c0      	blx	r8
 801f9f2:	3001      	adds	r0, #1
 801f9f4:	d01e      	beq.n	801fa34 <_printf_common+0xa4>
 801f9f6:	6823      	ldr	r3, [r4, #0]
 801f9f8:	68e5      	ldr	r5, [r4, #12]
 801f9fa:	6832      	ldr	r2, [r6, #0]
 801f9fc:	f003 0306 	and.w	r3, r3, #6
 801fa00:	2b04      	cmp	r3, #4
 801fa02:	bf08      	it	eq
 801fa04:	1aad      	subeq	r5, r5, r2
 801fa06:	68a3      	ldr	r3, [r4, #8]
 801fa08:	6922      	ldr	r2, [r4, #16]
 801fa0a:	bf0c      	ite	eq
 801fa0c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801fa10:	2500      	movne	r5, #0
 801fa12:	4293      	cmp	r3, r2
 801fa14:	bfc4      	itt	gt
 801fa16:	1a9b      	subgt	r3, r3, r2
 801fa18:	18ed      	addgt	r5, r5, r3
 801fa1a:	2600      	movs	r6, #0
 801fa1c:	341a      	adds	r4, #26
 801fa1e:	42b5      	cmp	r5, r6
 801fa20:	d11a      	bne.n	801fa58 <_printf_common+0xc8>
 801fa22:	2000      	movs	r0, #0
 801fa24:	e008      	b.n	801fa38 <_printf_common+0xa8>
 801fa26:	2301      	movs	r3, #1
 801fa28:	4652      	mov	r2, sl
 801fa2a:	4649      	mov	r1, r9
 801fa2c:	4638      	mov	r0, r7
 801fa2e:	47c0      	blx	r8
 801fa30:	3001      	adds	r0, #1
 801fa32:	d103      	bne.n	801fa3c <_printf_common+0xac>
 801fa34:	f04f 30ff 	mov.w	r0, #4294967295
 801fa38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fa3c:	3501      	adds	r5, #1
 801fa3e:	e7c6      	b.n	801f9ce <_printf_common+0x3e>
 801fa40:	18e1      	adds	r1, r4, r3
 801fa42:	1c5a      	adds	r2, r3, #1
 801fa44:	2030      	movs	r0, #48	; 0x30
 801fa46:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801fa4a:	4422      	add	r2, r4
 801fa4c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801fa50:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801fa54:	3302      	adds	r3, #2
 801fa56:	e7c7      	b.n	801f9e8 <_printf_common+0x58>
 801fa58:	2301      	movs	r3, #1
 801fa5a:	4622      	mov	r2, r4
 801fa5c:	4649      	mov	r1, r9
 801fa5e:	4638      	mov	r0, r7
 801fa60:	47c0      	blx	r8
 801fa62:	3001      	adds	r0, #1
 801fa64:	d0e6      	beq.n	801fa34 <_printf_common+0xa4>
 801fa66:	3601      	adds	r6, #1
 801fa68:	e7d9      	b.n	801fa1e <_printf_common+0x8e>
	...

0801fa6c <_printf_i>:
 801fa6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801fa70:	7e0f      	ldrb	r7, [r1, #24]
 801fa72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801fa74:	2f78      	cmp	r7, #120	; 0x78
 801fa76:	4691      	mov	r9, r2
 801fa78:	4680      	mov	r8, r0
 801fa7a:	460c      	mov	r4, r1
 801fa7c:	469a      	mov	sl, r3
 801fa7e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801fa82:	d807      	bhi.n	801fa94 <_printf_i+0x28>
 801fa84:	2f62      	cmp	r7, #98	; 0x62
 801fa86:	d80a      	bhi.n	801fa9e <_printf_i+0x32>
 801fa88:	2f00      	cmp	r7, #0
 801fa8a:	f000 80d8 	beq.w	801fc3e <_printf_i+0x1d2>
 801fa8e:	2f58      	cmp	r7, #88	; 0x58
 801fa90:	f000 80a3 	beq.w	801fbda <_printf_i+0x16e>
 801fa94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fa98:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801fa9c:	e03a      	b.n	801fb14 <_printf_i+0xa8>
 801fa9e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801faa2:	2b15      	cmp	r3, #21
 801faa4:	d8f6      	bhi.n	801fa94 <_printf_i+0x28>
 801faa6:	a101      	add	r1, pc, #4	; (adr r1, 801faac <_printf_i+0x40>)
 801faa8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801faac:	0801fb05 	.word	0x0801fb05
 801fab0:	0801fb19 	.word	0x0801fb19
 801fab4:	0801fa95 	.word	0x0801fa95
 801fab8:	0801fa95 	.word	0x0801fa95
 801fabc:	0801fa95 	.word	0x0801fa95
 801fac0:	0801fa95 	.word	0x0801fa95
 801fac4:	0801fb19 	.word	0x0801fb19
 801fac8:	0801fa95 	.word	0x0801fa95
 801facc:	0801fa95 	.word	0x0801fa95
 801fad0:	0801fa95 	.word	0x0801fa95
 801fad4:	0801fa95 	.word	0x0801fa95
 801fad8:	0801fc25 	.word	0x0801fc25
 801fadc:	0801fb49 	.word	0x0801fb49
 801fae0:	0801fc07 	.word	0x0801fc07
 801fae4:	0801fa95 	.word	0x0801fa95
 801fae8:	0801fa95 	.word	0x0801fa95
 801faec:	0801fc47 	.word	0x0801fc47
 801faf0:	0801fa95 	.word	0x0801fa95
 801faf4:	0801fb49 	.word	0x0801fb49
 801faf8:	0801fa95 	.word	0x0801fa95
 801fafc:	0801fa95 	.word	0x0801fa95
 801fb00:	0801fc0f 	.word	0x0801fc0f
 801fb04:	682b      	ldr	r3, [r5, #0]
 801fb06:	1d1a      	adds	r2, r3, #4
 801fb08:	681b      	ldr	r3, [r3, #0]
 801fb0a:	602a      	str	r2, [r5, #0]
 801fb0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801fb10:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801fb14:	2301      	movs	r3, #1
 801fb16:	e0a3      	b.n	801fc60 <_printf_i+0x1f4>
 801fb18:	6820      	ldr	r0, [r4, #0]
 801fb1a:	6829      	ldr	r1, [r5, #0]
 801fb1c:	0606      	lsls	r6, r0, #24
 801fb1e:	f101 0304 	add.w	r3, r1, #4
 801fb22:	d50a      	bpl.n	801fb3a <_printf_i+0xce>
 801fb24:	680e      	ldr	r6, [r1, #0]
 801fb26:	602b      	str	r3, [r5, #0]
 801fb28:	2e00      	cmp	r6, #0
 801fb2a:	da03      	bge.n	801fb34 <_printf_i+0xc8>
 801fb2c:	232d      	movs	r3, #45	; 0x2d
 801fb2e:	4276      	negs	r6, r6
 801fb30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801fb34:	485e      	ldr	r0, [pc, #376]	; (801fcb0 <_printf_i+0x244>)
 801fb36:	230a      	movs	r3, #10
 801fb38:	e019      	b.n	801fb6e <_printf_i+0x102>
 801fb3a:	680e      	ldr	r6, [r1, #0]
 801fb3c:	602b      	str	r3, [r5, #0]
 801fb3e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801fb42:	bf18      	it	ne
 801fb44:	b236      	sxthne	r6, r6
 801fb46:	e7ef      	b.n	801fb28 <_printf_i+0xbc>
 801fb48:	682b      	ldr	r3, [r5, #0]
 801fb4a:	6820      	ldr	r0, [r4, #0]
 801fb4c:	1d19      	adds	r1, r3, #4
 801fb4e:	6029      	str	r1, [r5, #0]
 801fb50:	0601      	lsls	r1, r0, #24
 801fb52:	d501      	bpl.n	801fb58 <_printf_i+0xec>
 801fb54:	681e      	ldr	r6, [r3, #0]
 801fb56:	e002      	b.n	801fb5e <_printf_i+0xf2>
 801fb58:	0646      	lsls	r6, r0, #25
 801fb5a:	d5fb      	bpl.n	801fb54 <_printf_i+0xe8>
 801fb5c:	881e      	ldrh	r6, [r3, #0]
 801fb5e:	4854      	ldr	r0, [pc, #336]	; (801fcb0 <_printf_i+0x244>)
 801fb60:	2f6f      	cmp	r7, #111	; 0x6f
 801fb62:	bf0c      	ite	eq
 801fb64:	2308      	moveq	r3, #8
 801fb66:	230a      	movne	r3, #10
 801fb68:	2100      	movs	r1, #0
 801fb6a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801fb6e:	6865      	ldr	r5, [r4, #4]
 801fb70:	60a5      	str	r5, [r4, #8]
 801fb72:	2d00      	cmp	r5, #0
 801fb74:	bfa2      	ittt	ge
 801fb76:	6821      	ldrge	r1, [r4, #0]
 801fb78:	f021 0104 	bicge.w	r1, r1, #4
 801fb7c:	6021      	strge	r1, [r4, #0]
 801fb7e:	b90e      	cbnz	r6, 801fb84 <_printf_i+0x118>
 801fb80:	2d00      	cmp	r5, #0
 801fb82:	d04d      	beq.n	801fc20 <_printf_i+0x1b4>
 801fb84:	4615      	mov	r5, r2
 801fb86:	fbb6 f1f3 	udiv	r1, r6, r3
 801fb8a:	fb03 6711 	mls	r7, r3, r1, r6
 801fb8e:	5dc7      	ldrb	r7, [r0, r7]
 801fb90:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801fb94:	4637      	mov	r7, r6
 801fb96:	42bb      	cmp	r3, r7
 801fb98:	460e      	mov	r6, r1
 801fb9a:	d9f4      	bls.n	801fb86 <_printf_i+0x11a>
 801fb9c:	2b08      	cmp	r3, #8
 801fb9e:	d10b      	bne.n	801fbb8 <_printf_i+0x14c>
 801fba0:	6823      	ldr	r3, [r4, #0]
 801fba2:	07de      	lsls	r6, r3, #31
 801fba4:	d508      	bpl.n	801fbb8 <_printf_i+0x14c>
 801fba6:	6923      	ldr	r3, [r4, #16]
 801fba8:	6861      	ldr	r1, [r4, #4]
 801fbaa:	4299      	cmp	r1, r3
 801fbac:	bfde      	ittt	le
 801fbae:	2330      	movle	r3, #48	; 0x30
 801fbb0:	f805 3c01 	strble.w	r3, [r5, #-1]
 801fbb4:	f105 35ff 	addle.w	r5, r5, #4294967295
 801fbb8:	1b52      	subs	r2, r2, r5
 801fbba:	6122      	str	r2, [r4, #16]
 801fbbc:	f8cd a000 	str.w	sl, [sp]
 801fbc0:	464b      	mov	r3, r9
 801fbc2:	aa03      	add	r2, sp, #12
 801fbc4:	4621      	mov	r1, r4
 801fbc6:	4640      	mov	r0, r8
 801fbc8:	f7ff fee2 	bl	801f990 <_printf_common>
 801fbcc:	3001      	adds	r0, #1
 801fbce:	d14c      	bne.n	801fc6a <_printf_i+0x1fe>
 801fbd0:	f04f 30ff 	mov.w	r0, #4294967295
 801fbd4:	b004      	add	sp, #16
 801fbd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fbda:	4835      	ldr	r0, [pc, #212]	; (801fcb0 <_printf_i+0x244>)
 801fbdc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801fbe0:	6829      	ldr	r1, [r5, #0]
 801fbe2:	6823      	ldr	r3, [r4, #0]
 801fbe4:	f851 6b04 	ldr.w	r6, [r1], #4
 801fbe8:	6029      	str	r1, [r5, #0]
 801fbea:	061d      	lsls	r5, r3, #24
 801fbec:	d514      	bpl.n	801fc18 <_printf_i+0x1ac>
 801fbee:	07df      	lsls	r7, r3, #31
 801fbf0:	bf44      	itt	mi
 801fbf2:	f043 0320 	orrmi.w	r3, r3, #32
 801fbf6:	6023      	strmi	r3, [r4, #0]
 801fbf8:	b91e      	cbnz	r6, 801fc02 <_printf_i+0x196>
 801fbfa:	6823      	ldr	r3, [r4, #0]
 801fbfc:	f023 0320 	bic.w	r3, r3, #32
 801fc00:	6023      	str	r3, [r4, #0]
 801fc02:	2310      	movs	r3, #16
 801fc04:	e7b0      	b.n	801fb68 <_printf_i+0xfc>
 801fc06:	6823      	ldr	r3, [r4, #0]
 801fc08:	f043 0320 	orr.w	r3, r3, #32
 801fc0c:	6023      	str	r3, [r4, #0]
 801fc0e:	2378      	movs	r3, #120	; 0x78
 801fc10:	4828      	ldr	r0, [pc, #160]	; (801fcb4 <_printf_i+0x248>)
 801fc12:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801fc16:	e7e3      	b.n	801fbe0 <_printf_i+0x174>
 801fc18:	0659      	lsls	r1, r3, #25
 801fc1a:	bf48      	it	mi
 801fc1c:	b2b6      	uxthmi	r6, r6
 801fc1e:	e7e6      	b.n	801fbee <_printf_i+0x182>
 801fc20:	4615      	mov	r5, r2
 801fc22:	e7bb      	b.n	801fb9c <_printf_i+0x130>
 801fc24:	682b      	ldr	r3, [r5, #0]
 801fc26:	6826      	ldr	r6, [r4, #0]
 801fc28:	6961      	ldr	r1, [r4, #20]
 801fc2a:	1d18      	adds	r0, r3, #4
 801fc2c:	6028      	str	r0, [r5, #0]
 801fc2e:	0635      	lsls	r5, r6, #24
 801fc30:	681b      	ldr	r3, [r3, #0]
 801fc32:	d501      	bpl.n	801fc38 <_printf_i+0x1cc>
 801fc34:	6019      	str	r1, [r3, #0]
 801fc36:	e002      	b.n	801fc3e <_printf_i+0x1d2>
 801fc38:	0670      	lsls	r0, r6, #25
 801fc3a:	d5fb      	bpl.n	801fc34 <_printf_i+0x1c8>
 801fc3c:	8019      	strh	r1, [r3, #0]
 801fc3e:	2300      	movs	r3, #0
 801fc40:	6123      	str	r3, [r4, #16]
 801fc42:	4615      	mov	r5, r2
 801fc44:	e7ba      	b.n	801fbbc <_printf_i+0x150>
 801fc46:	682b      	ldr	r3, [r5, #0]
 801fc48:	1d1a      	adds	r2, r3, #4
 801fc4a:	602a      	str	r2, [r5, #0]
 801fc4c:	681d      	ldr	r5, [r3, #0]
 801fc4e:	6862      	ldr	r2, [r4, #4]
 801fc50:	2100      	movs	r1, #0
 801fc52:	4628      	mov	r0, r5
 801fc54:	f7e0 fad4 	bl	8000200 <memchr>
 801fc58:	b108      	cbz	r0, 801fc5e <_printf_i+0x1f2>
 801fc5a:	1b40      	subs	r0, r0, r5
 801fc5c:	6060      	str	r0, [r4, #4]
 801fc5e:	6863      	ldr	r3, [r4, #4]
 801fc60:	6123      	str	r3, [r4, #16]
 801fc62:	2300      	movs	r3, #0
 801fc64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801fc68:	e7a8      	b.n	801fbbc <_printf_i+0x150>
 801fc6a:	6923      	ldr	r3, [r4, #16]
 801fc6c:	462a      	mov	r2, r5
 801fc6e:	4649      	mov	r1, r9
 801fc70:	4640      	mov	r0, r8
 801fc72:	47d0      	blx	sl
 801fc74:	3001      	adds	r0, #1
 801fc76:	d0ab      	beq.n	801fbd0 <_printf_i+0x164>
 801fc78:	6823      	ldr	r3, [r4, #0]
 801fc7a:	079b      	lsls	r3, r3, #30
 801fc7c:	d413      	bmi.n	801fca6 <_printf_i+0x23a>
 801fc7e:	68e0      	ldr	r0, [r4, #12]
 801fc80:	9b03      	ldr	r3, [sp, #12]
 801fc82:	4298      	cmp	r0, r3
 801fc84:	bfb8      	it	lt
 801fc86:	4618      	movlt	r0, r3
 801fc88:	e7a4      	b.n	801fbd4 <_printf_i+0x168>
 801fc8a:	2301      	movs	r3, #1
 801fc8c:	4632      	mov	r2, r6
 801fc8e:	4649      	mov	r1, r9
 801fc90:	4640      	mov	r0, r8
 801fc92:	47d0      	blx	sl
 801fc94:	3001      	adds	r0, #1
 801fc96:	d09b      	beq.n	801fbd0 <_printf_i+0x164>
 801fc98:	3501      	adds	r5, #1
 801fc9a:	68e3      	ldr	r3, [r4, #12]
 801fc9c:	9903      	ldr	r1, [sp, #12]
 801fc9e:	1a5b      	subs	r3, r3, r1
 801fca0:	42ab      	cmp	r3, r5
 801fca2:	dcf2      	bgt.n	801fc8a <_printf_i+0x21e>
 801fca4:	e7eb      	b.n	801fc7e <_printf_i+0x212>
 801fca6:	2500      	movs	r5, #0
 801fca8:	f104 0619 	add.w	r6, r4, #25
 801fcac:	e7f5      	b.n	801fc9a <_printf_i+0x22e>
 801fcae:	bf00      	nop
 801fcb0:	08024a19 	.word	0x08024a19
 801fcb4:	08024a2a 	.word	0x08024a2a

0801fcb8 <_sbrk_r>:
 801fcb8:	b538      	push	{r3, r4, r5, lr}
 801fcba:	4d06      	ldr	r5, [pc, #24]	; (801fcd4 <_sbrk_r+0x1c>)
 801fcbc:	2300      	movs	r3, #0
 801fcbe:	4604      	mov	r4, r0
 801fcc0:	4608      	mov	r0, r1
 801fcc2:	602b      	str	r3, [r5, #0]
 801fcc4:	f7e2 f97c 	bl	8001fc0 <_sbrk>
 801fcc8:	1c43      	adds	r3, r0, #1
 801fcca:	d102      	bne.n	801fcd2 <_sbrk_r+0x1a>
 801fccc:	682b      	ldr	r3, [r5, #0]
 801fcce:	b103      	cbz	r3, 801fcd2 <_sbrk_r+0x1a>
 801fcd0:	6023      	str	r3, [r4, #0]
 801fcd2:	bd38      	pop	{r3, r4, r5, pc}
 801fcd4:	2000d6cc 	.word	0x2000d6cc

0801fcd8 <_raise_r>:
 801fcd8:	291f      	cmp	r1, #31
 801fcda:	b538      	push	{r3, r4, r5, lr}
 801fcdc:	4604      	mov	r4, r0
 801fcde:	460d      	mov	r5, r1
 801fce0:	d904      	bls.n	801fcec <_raise_r+0x14>
 801fce2:	2316      	movs	r3, #22
 801fce4:	6003      	str	r3, [r0, #0]
 801fce6:	f04f 30ff 	mov.w	r0, #4294967295
 801fcea:	bd38      	pop	{r3, r4, r5, pc}
 801fcec:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801fcee:	b112      	cbz	r2, 801fcf6 <_raise_r+0x1e>
 801fcf0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801fcf4:	b94b      	cbnz	r3, 801fd0a <_raise_r+0x32>
 801fcf6:	4620      	mov	r0, r4
 801fcf8:	f000 f830 	bl	801fd5c <_getpid_r>
 801fcfc:	462a      	mov	r2, r5
 801fcfe:	4601      	mov	r1, r0
 801fd00:	4620      	mov	r0, r4
 801fd02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801fd06:	f000 b817 	b.w	801fd38 <_kill_r>
 801fd0a:	2b01      	cmp	r3, #1
 801fd0c:	d00a      	beq.n	801fd24 <_raise_r+0x4c>
 801fd0e:	1c59      	adds	r1, r3, #1
 801fd10:	d103      	bne.n	801fd1a <_raise_r+0x42>
 801fd12:	2316      	movs	r3, #22
 801fd14:	6003      	str	r3, [r0, #0]
 801fd16:	2001      	movs	r0, #1
 801fd18:	e7e7      	b.n	801fcea <_raise_r+0x12>
 801fd1a:	2400      	movs	r4, #0
 801fd1c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801fd20:	4628      	mov	r0, r5
 801fd22:	4798      	blx	r3
 801fd24:	2000      	movs	r0, #0
 801fd26:	e7e0      	b.n	801fcea <_raise_r+0x12>

0801fd28 <raise>:
 801fd28:	4b02      	ldr	r3, [pc, #8]	; (801fd34 <raise+0xc>)
 801fd2a:	4601      	mov	r1, r0
 801fd2c:	6818      	ldr	r0, [r3, #0]
 801fd2e:	f7ff bfd3 	b.w	801fcd8 <_raise_r>
 801fd32:	bf00      	nop
 801fd34:	200000d8 	.word	0x200000d8

0801fd38 <_kill_r>:
 801fd38:	b538      	push	{r3, r4, r5, lr}
 801fd3a:	4d07      	ldr	r5, [pc, #28]	; (801fd58 <_kill_r+0x20>)
 801fd3c:	2300      	movs	r3, #0
 801fd3e:	4604      	mov	r4, r0
 801fd40:	4608      	mov	r0, r1
 801fd42:	4611      	mov	r1, r2
 801fd44:	602b      	str	r3, [r5, #0]
 801fd46:	f7e2 f905 	bl	8001f54 <_kill>
 801fd4a:	1c43      	adds	r3, r0, #1
 801fd4c:	d102      	bne.n	801fd54 <_kill_r+0x1c>
 801fd4e:	682b      	ldr	r3, [r5, #0]
 801fd50:	b103      	cbz	r3, 801fd54 <_kill_r+0x1c>
 801fd52:	6023      	str	r3, [r4, #0]
 801fd54:	bd38      	pop	{r3, r4, r5, pc}
 801fd56:	bf00      	nop
 801fd58:	2000d6cc 	.word	0x2000d6cc

0801fd5c <_getpid_r>:
 801fd5c:	f7e2 b8f8 	b.w	8001f50 <_getpid>

0801fd60 <__swbuf_r>:
 801fd60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801fd62:	460e      	mov	r6, r1
 801fd64:	4614      	mov	r4, r2
 801fd66:	4605      	mov	r5, r0
 801fd68:	b118      	cbz	r0, 801fd72 <__swbuf_r+0x12>
 801fd6a:	6983      	ldr	r3, [r0, #24]
 801fd6c:	b90b      	cbnz	r3, 801fd72 <__swbuf_r+0x12>
 801fd6e:	f000 fa33 	bl	80201d8 <__sinit>
 801fd72:	4b21      	ldr	r3, [pc, #132]	; (801fdf8 <__swbuf_r+0x98>)
 801fd74:	429c      	cmp	r4, r3
 801fd76:	d12b      	bne.n	801fdd0 <__swbuf_r+0x70>
 801fd78:	686c      	ldr	r4, [r5, #4]
 801fd7a:	69a3      	ldr	r3, [r4, #24]
 801fd7c:	60a3      	str	r3, [r4, #8]
 801fd7e:	89a3      	ldrh	r3, [r4, #12]
 801fd80:	071a      	lsls	r2, r3, #28
 801fd82:	d52f      	bpl.n	801fde4 <__swbuf_r+0x84>
 801fd84:	6923      	ldr	r3, [r4, #16]
 801fd86:	b36b      	cbz	r3, 801fde4 <__swbuf_r+0x84>
 801fd88:	6923      	ldr	r3, [r4, #16]
 801fd8a:	6820      	ldr	r0, [r4, #0]
 801fd8c:	1ac0      	subs	r0, r0, r3
 801fd8e:	6963      	ldr	r3, [r4, #20]
 801fd90:	b2f6      	uxtb	r6, r6
 801fd92:	4283      	cmp	r3, r0
 801fd94:	4637      	mov	r7, r6
 801fd96:	dc04      	bgt.n	801fda2 <__swbuf_r+0x42>
 801fd98:	4621      	mov	r1, r4
 801fd9a:	4628      	mov	r0, r5
 801fd9c:	f000 f988 	bl	80200b0 <_fflush_r>
 801fda0:	bb30      	cbnz	r0, 801fdf0 <__swbuf_r+0x90>
 801fda2:	68a3      	ldr	r3, [r4, #8]
 801fda4:	3b01      	subs	r3, #1
 801fda6:	60a3      	str	r3, [r4, #8]
 801fda8:	6823      	ldr	r3, [r4, #0]
 801fdaa:	1c5a      	adds	r2, r3, #1
 801fdac:	6022      	str	r2, [r4, #0]
 801fdae:	701e      	strb	r6, [r3, #0]
 801fdb0:	6963      	ldr	r3, [r4, #20]
 801fdb2:	3001      	adds	r0, #1
 801fdb4:	4283      	cmp	r3, r0
 801fdb6:	d004      	beq.n	801fdc2 <__swbuf_r+0x62>
 801fdb8:	89a3      	ldrh	r3, [r4, #12]
 801fdba:	07db      	lsls	r3, r3, #31
 801fdbc:	d506      	bpl.n	801fdcc <__swbuf_r+0x6c>
 801fdbe:	2e0a      	cmp	r6, #10
 801fdc0:	d104      	bne.n	801fdcc <__swbuf_r+0x6c>
 801fdc2:	4621      	mov	r1, r4
 801fdc4:	4628      	mov	r0, r5
 801fdc6:	f000 f973 	bl	80200b0 <_fflush_r>
 801fdca:	b988      	cbnz	r0, 801fdf0 <__swbuf_r+0x90>
 801fdcc:	4638      	mov	r0, r7
 801fdce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801fdd0:	4b0a      	ldr	r3, [pc, #40]	; (801fdfc <__swbuf_r+0x9c>)
 801fdd2:	429c      	cmp	r4, r3
 801fdd4:	d101      	bne.n	801fdda <__swbuf_r+0x7a>
 801fdd6:	68ac      	ldr	r4, [r5, #8]
 801fdd8:	e7cf      	b.n	801fd7a <__swbuf_r+0x1a>
 801fdda:	4b09      	ldr	r3, [pc, #36]	; (801fe00 <__swbuf_r+0xa0>)
 801fddc:	429c      	cmp	r4, r3
 801fdde:	bf08      	it	eq
 801fde0:	68ec      	ldreq	r4, [r5, #12]
 801fde2:	e7ca      	b.n	801fd7a <__swbuf_r+0x1a>
 801fde4:	4621      	mov	r1, r4
 801fde6:	4628      	mov	r0, r5
 801fde8:	f000 f80c 	bl	801fe04 <__swsetup_r>
 801fdec:	2800      	cmp	r0, #0
 801fdee:	d0cb      	beq.n	801fd88 <__swbuf_r+0x28>
 801fdf0:	f04f 37ff 	mov.w	r7, #4294967295
 801fdf4:	e7ea      	b.n	801fdcc <__swbuf_r+0x6c>
 801fdf6:	bf00      	nop
 801fdf8:	08024a60 	.word	0x08024a60
 801fdfc:	08024a80 	.word	0x08024a80
 801fe00:	08024a40 	.word	0x08024a40

0801fe04 <__swsetup_r>:
 801fe04:	4b32      	ldr	r3, [pc, #200]	; (801fed0 <__swsetup_r+0xcc>)
 801fe06:	b570      	push	{r4, r5, r6, lr}
 801fe08:	681d      	ldr	r5, [r3, #0]
 801fe0a:	4606      	mov	r6, r0
 801fe0c:	460c      	mov	r4, r1
 801fe0e:	b125      	cbz	r5, 801fe1a <__swsetup_r+0x16>
 801fe10:	69ab      	ldr	r3, [r5, #24]
 801fe12:	b913      	cbnz	r3, 801fe1a <__swsetup_r+0x16>
 801fe14:	4628      	mov	r0, r5
 801fe16:	f000 f9df 	bl	80201d8 <__sinit>
 801fe1a:	4b2e      	ldr	r3, [pc, #184]	; (801fed4 <__swsetup_r+0xd0>)
 801fe1c:	429c      	cmp	r4, r3
 801fe1e:	d10f      	bne.n	801fe40 <__swsetup_r+0x3c>
 801fe20:	686c      	ldr	r4, [r5, #4]
 801fe22:	89a3      	ldrh	r3, [r4, #12]
 801fe24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fe28:	0719      	lsls	r1, r3, #28
 801fe2a:	d42c      	bmi.n	801fe86 <__swsetup_r+0x82>
 801fe2c:	06dd      	lsls	r5, r3, #27
 801fe2e:	d411      	bmi.n	801fe54 <__swsetup_r+0x50>
 801fe30:	2309      	movs	r3, #9
 801fe32:	6033      	str	r3, [r6, #0]
 801fe34:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801fe38:	81a3      	strh	r3, [r4, #12]
 801fe3a:	f04f 30ff 	mov.w	r0, #4294967295
 801fe3e:	e03e      	b.n	801febe <__swsetup_r+0xba>
 801fe40:	4b25      	ldr	r3, [pc, #148]	; (801fed8 <__swsetup_r+0xd4>)
 801fe42:	429c      	cmp	r4, r3
 801fe44:	d101      	bne.n	801fe4a <__swsetup_r+0x46>
 801fe46:	68ac      	ldr	r4, [r5, #8]
 801fe48:	e7eb      	b.n	801fe22 <__swsetup_r+0x1e>
 801fe4a:	4b24      	ldr	r3, [pc, #144]	; (801fedc <__swsetup_r+0xd8>)
 801fe4c:	429c      	cmp	r4, r3
 801fe4e:	bf08      	it	eq
 801fe50:	68ec      	ldreq	r4, [r5, #12]
 801fe52:	e7e6      	b.n	801fe22 <__swsetup_r+0x1e>
 801fe54:	0758      	lsls	r0, r3, #29
 801fe56:	d512      	bpl.n	801fe7e <__swsetup_r+0x7a>
 801fe58:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801fe5a:	b141      	cbz	r1, 801fe6e <__swsetup_r+0x6a>
 801fe5c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801fe60:	4299      	cmp	r1, r3
 801fe62:	d002      	beq.n	801fe6a <__swsetup_r+0x66>
 801fe64:	4630      	mov	r0, r6
 801fe66:	f7ff fb59 	bl	801f51c <_free_r>
 801fe6a:	2300      	movs	r3, #0
 801fe6c:	6363      	str	r3, [r4, #52]	; 0x34
 801fe6e:	89a3      	ldrh	r3, [r4, #12]
 801fe70:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801fe74:	81a3      	strh	r3, [r4, #12]
 801fe76:	2300      	movs	r3, #0
 801fe78:	6063      	str	r3, [r4, #4]
 801fe7a:	6923      	ldr	r3, [r4, #16]
 801fe7c:	6023      	str	r3, [r4, #0]
 801fe7e:	89a3      	ldrh	r3, [r4, #12]
 801fe80:	f043 0308 	orr.w	r3, r3, #8
 801fe84:	81a3      	strh	r3, [r4, #12]
 801fe86:	6923      	ldr	r3, [r4, #16]
 801fe88:	b94b      	cbnz	r3, 801fe9e <__swsetup_r+0x9a>
 801fe8a:	89a3      	ldrh	r3, [r4, #12]
 801fe8c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801fe90:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801fe94:	d003      	beq.n	801fe9e <__swsetup_r+0x9a>
 801fe96:	4621      	mov	r1, r4
 801fe98:	4630      	mov	r0, r6
 801fe9a:	f000 fa63 	bl	8020364 <__smakebuf_r>
 801fe9e:	89a0      	ldrh	r0, [r4, #12]
 801fea0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fea4:	f010 0301 	ands.w	r3, r0, #1
 801fea8:	d00a      	beq.n	801fec0 <__swsetup_r+0xbc>
 801feaa:	2300      	movs	r3, #0
 801feac:	60a3      	str	r3, [r4, #8]
 801feae:	6963      	ldr	r3, [r4, #20]
 801feb0:	425b      	negs	r3, r3
 801feb2:	61a3      	str	r3, [r4, #24]
 801feb4:	6923      	ldr	r3, [r4, #16]
 801feb6:	b943      	cbnz	r3, 801feca <__swsetup_r+0xc6>
 801feb8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801febc:	d1ba      	bne.n	801fe34 <__swsetup_r+0x30>
 801febe:	bd70      	pop	{r4, r5, r6, pc}
 801fec0:	0781      	lsls	r1, r0, #30
 801fec2:	bf58      	it	pl
 801fec4:	6963      	ldrpl	r3, [r4, #20]
 801fec6:	60a3      	str	r3, [r4, #8]
 801fec8:	e7f4      	b.n	801feb4 <__swsetup_r+0xb0>
 801feca:	2000      	movs	r0, #0
 801fecc:	e7f7      	b.n	801febe <__swsetup_r+0xba>
 801fece:	bf00      	nop
 801fed0:	200000d8 	.word	0x200000d8
 801fed4:	08024a60 	.word	0x08024a60
 801fed8:	08024a80 	.word	0x08024a80
 801fedc:	08024a40 	.word	0x08024a40

0801fee0 <__register_exitproc>:
 801fee0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801fee4:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801ffa0 <__register_exitproc+0xc0>
 801fee8:	4606      	mov	r6, r0
 801feea:	f8d8 0000 	ldr.w	r0, [r8]
 801feee:	461f      	mov	r7, r3
 801fef0:	460d      	mov	r5, r1
 801fef2:	4691      	mov	r9, r2
 801fef4:	f000 fa0e 	bl	8020314 <__retarget_lock_acquire_recursive>
 801fef8:	4b25      	ldr	r3, [pc, #148]	; (801ff90 <__register_exitproc+0xb0>)
 801fefa:	681c      	ldr	r4, [r3, #0]
 801fefc:	b934      	cbnz	r4, 801ff0c <__register_exitproc+0x2c>
 801fefe:	4c25      	ldr	r4, [pc, #148]	; (801ff94 <__register_exitproc+0xb4>)
 801ff00:	601c      	str	r4, [r3, #0]
 801ff02:	4b25      	ldr	r3, [pc, #148]	; (801ff98 <__register_exitproc+0xb8>)
 801ff04:	b113      	cbz	r3, 801ff0c <__register_exitproc+0x2c>
 801ff06:	681b      	ldr	r3, [r3, #0]
 801ff08:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801ff0c:	6863      	ldr	r3, [r4, #4]
 801ff0e:	2b1f      	cmp	r3, #31
 801ff10:	dd07      	ble.n	801ff22 <__register_exitproc+0x42>
 801ff12:	f8d8 0000 	ldr.w	r0, [r8]
 801ff16:	f000 f9ff 	bl	8020318 <__retarget_lock_release_recursive>
 801ff1a:	f04f 30ff 	mov.w	r0, #4294967295
 801ff1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ff22:	b34e      	cbz	r6, 801ff78 <__register_exitproc+0x98>
 801ff24:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801ff28:	b988      	cbnz	r0, 801ff4e <__register_exitproc+0x6e>
 801ff2a:	4b1c      	ldr	r3, [pc, #112]	; (801ff9c <__register_exitproc+0xbc>)
 801ff2c:	b923      	cbnz	r3, 801ff38 <__register_exitproc+0x58>
 801ff2e:	f8d8 0000 	ldr.w	r0, [r8]
 801ff32:	f000 f9f0 	bl	8020316 <__retarget_lock_release>
 801ff36:	e7f0      	b.n	801ff1a <__register_exitproc+0x3a>
 801ff38:	f44f 7084 	mov.w	r0, #264	; 0x108
 801ff3c:	f7ff fac8 	bl	801f4d0 <malloc>
 801ff40:	2800      	cmp	r0, #0
 801ff42:	d0f4      	beq.n	801ff2e <__register_exitproc+0x4e>
 801ff44:	2300      	movs	r3, #0
 801ff46:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801ff4a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801ff4e:	6863      	ldr	r3, [r4, #4]
 801ff50:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801ff54:	2201      	movs	r2, #1
 801ff56:	409a      	lsls	r2, r3
 801ff58:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801ff5c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801ff60:	4313      	orrs	r3, r2
 801ff62:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801ff66:	2e02      	cmp	r6, #2
 801ff68:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801ff6c:	bf02      	ittt	eq
 801ff6e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801ff72:	4313      	orreq	r3, r2
 801ff74:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801ff78:	6863      	ldr	r3, [r4, #4]
 801ff7a:	f8d8 0000 	ldr.w	r0, [r8]
 801ff7e:	1c5a      	adds	r2, r3, #1
 801ff80:	3302      	adds	r3, #2
 801ff82:	6062      	str	r2, [r4, #4]
 801ff84:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801ff88:	f000 f9c6 	bl	8020318 <__retarget_lock_release_recursive>
 801ff8c:	2000      	movs	r0, #0
 801ff8e:	e7c6      	b.n	801ff1e <__register_exitproc+0x3e>
 801ff90:	2000d6c4 	.word	0x2000d6c4
 801ff94:	2000d638 	.word	0x2000d638
 801ff98:	08024a3c 	.word	0x08024a3c
 801ff9c:	0801f4d1 	.word	0x0801f4d1
 801ffa0:	2000013c 	.word	0x2000013c

0801ffa4 <__sflush_r>:
 801ffa4:	898a      	ldrh	r2, [r1, #12]
 801ffa6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ffaa:	4605      	mov	r5, r0
 801ffac:	0710      	lsls	r0, r2, #28
 801ffae:	460c      	mov	r4, r1
 801ffb0:	d458      	bmi.n	8020064 <__sflush_r+0xc0>
 801ffb2:	684b      	ldr	r3, [r1, #4]
 801ffb4:	2b00      	cmp	r3, #0
 801ffb6:	dc05      	bgt.n	801ffc4 <__sflush_r+0x20>
 801ffb8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801ffba:	2b00      	cmp	r3, #0
 801ffbc:	dc02      	bgt.n	801ffc4 <__sflush_r+0x20>
 801ffbe:	2000      	movs	r0, #0
 801ffc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ffc4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801ffc6:	2e00      	cmp	r6, #0
 801ffc8:	d0f9      	beq.n	801ffbe <__sflush_r+0x1a>
 801ffca:	2300      	movs	r3, #0
 801ffcc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801ffd0:	682f      	ldr	r7, [r5, #0]
 801ffd2:	602b      	str	r3, [r5, #0]
 801ffd4:	d032      	beq.n	802003c <__sflush_r+0x98>
 801ffd6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801ffd8:	89a3      	ldrh	r3, [r4, #12]
 801ffda:	075a      	lsls	r2, r3, #29
 801ffdc:	d505      	bpl.n	801ffea <__sflush_r+0x46>
 801ffde:	6863      	ldr	r3, [r4, #4]
 801ffe0:	1ac0      	subs	r0, r0, r3
 801ffe2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801ffe4:	b10b      	cbz	r3, 801ffea <__sflush_r+0x46>
 801ffe6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801ffe8:	1ac0      	subs	r0, r0, r3
 801ffea:	2300      	movs	r3, #0
 801ffec:	4602      	mov	r2, r0
 801ffee:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801fff0:	6a21      	ldr	r1, [r4, #32]
 801fff2:	4628      	mov	r0, r5
 801fff4:	47b0      	blx	r6
 801fff6:	1c43      	adds	r3, r0, #1
 801fff8:	89a3      	ldrh	r3, [r4, #12]
 801fffa:	d106      	bne.n	802000a <__sflush_r+0x66>
 801fffc:	6829      	ldr	r1, [r5, #0]
 801fffe:	291d      	cmp	r1, #29
 8020000:	d82c      	bhi.n	802005c <__sflush_r+0xb8>
 8020002:	4a2a      	ldr	r2, [pc, #168]	; (80200ac <__sflush_r+0x108>)
 8020004:	40ca      	lsrs	r2, r1
 8020006:	07d6      	lsls	r6, r2, #31
 8020008:	d528      	bpl.n	802005c <__sflush_r+0xb8>
 802000a:	2200      	movs	r2, #0
 802000c:	6062      	str	r2, [r4, #4]
 802000e:	04d9      	lsls	r1, r3, #19
 8020010:	6922      	ldr	r2, [r4, #16]
 8020012:	6022      	str	r2, [r4, #0]
 8020014:	d504      	bpl.n	8020020 <__sflush_r+0x7c>
 8020016:	1c42      	adds	r2, r0, #1
 8020018:	d101      	bne.n	802001e <__sflush_r+0x7a>
 802001a:	682b      	ldr	r3, [r5, #0]
 802001c:	b903      	cbnz	r3, 8020020 <__sflush_r+0x7c>
 802001e:	6560      	str	r0, [r4, #84]	; 0x54
 8020020:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8020022:	602f      	str	r7, [r5, #0]
 8020024:	2900      	cmp	r1, #0
 8020026:	d0ca      	beq.n	801ffbe <__sflush_r+0x1a>
 8020028:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802002c:	4299      	cmp	r1, r3
 802002e:	d002      	beq.n	8020036 <__sflush_r+0x92>
 8020030:	4628      	mov	r0, r5
 8020032:	f7ff fa73 	bl	801f51c <_free_r>
 8020036:	2000      	movs	r0, #0
 8020038:	6360      	str	r0, [r4, #52]	; 0x34
 802003a:	e7c1      	b.n	801ffc0 <__sflush_r+0x1c>
 802003c:	6a21      	ldr	r1, [r4, #32]
 802003e:	2301      	movs	r3, #1
 8020040:	4628      	mov	r0, r5
 8020042:	47b0      	blx	r6
 8020044:	1c41      	adds	r1, r0, #1
 8020046:	d1c7      	bne.n	801ffd8 <__sflush_r+0x34>
 8020048:	682b      	ldr	r3, [r5, #0]
 802004a:	2b00      	cmp	r3, #0
 802004c:	d0c4      	beq.n	801ffd8 <__sflush_r+0x34>
 802004e:	2b1d      	cmp	r3, #29
 8020050:	d001      	beq.n	8020056 <__sflush_r+0xb2>
 8020052:	2b16      	cmp	r3, #22
 8020054:	d101      	bne.n	802005a <__sflush_r+0xb6>
 8020056:	602f      	str	r7, [r5, #0]
 8020058:	e7b1      	b.n	801ffbe <__sflush_r+0x1a>
 802005a:	89a3      	ldrh	r3, [r4, #12]
 802005c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8020060:	81a3      	strh	r3, [r4, #12]
 8020062:	e7ad      	b.n	801ffc0 <__sflush_r+0x1c>
 8020064:	690f      	ldr	r7, [r1, #16]
 8020066:	2f00      	cmp	r7, #0
 8020068:	d0a9      	beq.n	801ffbe <__sflush_r+0x1a>
 802006a:	0793      	lsls	r3, r2, #30
 802006c:	680e      	ldr	r6, [r1, #0]
 802006e:	bf08      	it	eq
 8020070:	694b      	ldreq	r3, [r1, #20]
 8020072:	600f      	str	r7, [r1, #0]
 8020074:	bf18      	it	ne
 8020076:	2300      	movne	r3, #0
 8020078:	eba6 0807 	sub.w	r8, r6, r7
 802007c:	608b      	str	r3, [r1, #8]
 802007e:	f1b8 0f00 	cmp.w	r8, #0
 8020082:	dd9c      	ble.n	801ffbe <__sflush_r+0x1a>
 8020084:	6a21      	ldr	r1, [r4, #32]
 8020086:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8020088:	4643      	mov	r3, r8
 802008a:	463a      	mov	r2, r7
 802008c:	4628      	mov	r0, r5
 802008e:	47b0      	blx	r6
 8020090:	2800      	cmp	r0, #0
 8020092:	dc06      	bgt.n	80200a2 <__sflush_r+0xfe>
 8020094:	89a3      	ldrh	r3, [r4, #12]
 8020096:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802009a:	81a3      	strh	r3, [r4, #12]
 802009c:	f04f 30ff 	mov.w	r0, #4294967295
 80200a0:	e78e      	b.n	801ffc0 <__sflush_r+0x1c>
 80200a2:	4407      	add	r7, r0
 80200a4:	eba8 0800 	sub.w	r8, r8, r0
 80200a8:	e7e9      	b.n	802007e <__sflush_r+0xda>
 80200aa:	bf00      	nop
 80200ac:	20400001 	.word	0x20400001

080200b0 <_fflush_r>:
 80200b0:	b538      	push	{r3, r4, r5, lr}
 80200b2:	690b      	ldr	r3, [r1, #16]
 80200b4:	4605      	mov	r5, r0
 80200b6:	460c      	mov	r4, r1
 80200b8:	b913      	cbnz	r3, 80200c0 <_fflush_r+0x10>
 80200ba:	2500      	movs	r5, #0
 80200bc:	4628      	mov	r0, r5
 80200be:	bd38      	pop	{r3, r4, r5, pc}
 80200c0:	b118      	cbz	r0, 80200ca <_fflush_r+0x1a>
 80200c2:	6983      	ldr	r3, [r0, #24]
 80200c4:	b90b      	cbnz	r3, 80200ca <_fflush_r+0x1a>
 80200c6:	f000 f887 	bl	80201d8 <__sinit>
 80200ca:	4b14      	ldr	r3, [pc, #80]	; (802011c <_fflush_r+0x6c>)
 80200cc:	429c      	cmp	r4, r3
 80200ce:	d11b      	bne.n	8020108 <_fflush_r+0x58>
 80200d0:	686c      	ldr	r4, [r5, #4]
 80200d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80200d6:	2b00      	cmp	r3, #0
 80200d8:	d0ef      	beq.n	80200ba <_fflush_r+0xa>
 80200da:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80200dc:	07d0      	lsls	r0, r2, #31
 80200de:	d404      	bmi.n	80200ea <_fflush_r+0x3a>
 80200e0:	0599      	lsls	r1, r3, #22
 80200e2:	d402      	bmi.n	80200ea <_fflush_r+0x3a>
 80200e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80200e6:	f000 f915 	bl	8020314 <__retarget_lock_acquire_recursive>
 80200ea:	4628      	mov	r0, r5
 80200ec:	4621      	mov	r1, r4
 80200ee:	f7ff ff59 	bl	801ffa4 <__sflush_r>
 80200f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80200f4:	07da      	lsls	r2, r3, #31
 80200f6:	4605      	mov	r5, r0
 80200f8:	d4e0      	bmi.n	80200bc <_fflush_r+0xc>
 80200fa:	89a3      	ldrh	r3, [r4, #12]
 80200fc:	059b      	lsls	r3, r3, #22
 80200fe:	d4dd      	bmi.n	80200bc <_fflush_r+0xc>
 8020100:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8020102:	f000 f909 	bl	8020318 <__retarget_lock_release_recursive>
 8020106:	e7d9      	b.n	80200bc <_fflush_r+0xc>
 8020108:	4b05      	ldr	r3, [pc, #20]	; (8020120 <_fflush_r+0x70>)
 802010a:	429c      	cmp	r4, r3
 802010c:	d101      	bne.n	8020112 <_fflush_r+0x62>
 802010e:	68ac      	ldr	r4, [r5, #8]
 8020110:	e7df      	b.n	80200d2 <_fflush_r+0x22>
 8020112:	4b04      	ldr	r3, [pc, #16]	; (8020124 <_fflush_r+0x74>)
 8020114:	429c      	cmp	r4, r3
 8020116:	bf08      	it	eq
 8020118:	68ec      	ldreq	r4, [r5, #12]
 802011a:	e7da      	b.n	80200d2 <_fflush_r+0x22>
 802011c:	08024a60 	.word	0x08024a60
 8020120:	08024a80 	.word	0x08024a80
 8020124:	08024a40 	.word	0x08024a40

08020128 <std>:
 8020128:	2300      	movs	r3, #0
 802012a:	b510      	push	{r4, lr}
 802012c:	4604      	mov	r4, r0
 802012e:	e9c0 3300 	strd	r3, r3, [r0]
 8020132:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020136:	6083      	str	r3, [r0, #8]
 8020138:	8181      	strh	r1, [r0, #12]
 802013a:	6643      	str	r3, [r0, #100]	; 0x64
 802013c:	81c2      	strh	r2, [r0, #14]
 802013e:	6183      	str	r3, [r0, #24]
 8020140:	4619      	mov	r1, r3
 8020142:	2208      	movs	r2, #8
 8020144:	305c      	adds	r0, #92	; 0x5c
 8020146:	f7ff f9e1 	bl	801f50c <memset>
 802014a:	4b05      	ldr	r3, [pc, #20]	; (8020160 <std+0x38>)
 802014c:	6263      	str	r3, [r4, #36]	; 0x24
 802014e:	4b05      	ldr	r3, [pc, #20]	; (8020164 <std+0x3c>)
 8020150:	62a3      	str	r3, [r4, #40]	; 0x28
 8020152:	4b05      	ldr	r3, [pc, #20]	; (8020168 <std+0x40>)
 8020154:	62e3      	str	r3, [r4, #44]	; 0x2c
 8020156:	4b05      	ldr	r3, [pc, #20]	; (802016c <std+0x44>)
 8020158:	6224      	str	r4, [r4, #32]
 802015a:	6323      	str	r3, [r4, #48]	; 0x30
 802015c:	bd10      	pop	{r4, pc}
 802015e:	bf00      	nop
 8020160:	080203fd 	.word	0x080203fd
 8020164:	0802041f 	.word	0x0802041f
 8020168:	08020457 	.word	0x08020457
 802016c:	0802047b 	.word	0x0802047b

08020170 <_cleanup_r>:
 8020170:	4901      	ldr	r1, [pc, #4]	; (8020178 <_cleanup_r+0x8>)
 8020172:	f000 b8af 	b.w	80202d4 <_fwalk_reent>
 8020176:	bf00      	nop
 8020178:	080200b1 	.word	0x080200b1

0802017c <__sfmoreglue>:
 802017c:	b570      	push	{r4, r5, r6, lr}
 802017e:	2268      	movs	r2, #104	; 0x68
 8020180:	1e4d      	subs	r5, r1, #1
 8020182:	4355      	muls	r5, r2
 8020184:	460e      	mov	r6, r1
 8020186:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802018a:	f7ff fa33 	bl	801f5f4 <_malloc_r>
 802018e:	4604      	mov	r4, r0
 8020190:	b140      	cbz	r0, 80201a4 <__sfmoreglue+0x28>
 8020192:	2100      	movs	r1, #0
 8020194:	e9c0 1600 	strd	r1, r6, [r0]
 8020198:	300c      	adds	r0, #12
 802019a:	60a0      	str	r0, [r4, #8]
 802019c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80201a0:	f7ff f9b4 	bl	801f50c <memset>
 80201a4:	4620      	mov	r0, r4
 80201a6:	bd70      	pop	{r4, r5, r6, pc}

080201a8 <__sfp_lock_acquire>:
 80201a8:	4801      	ldr	r0, [pc, #4]	; (80201b0 <__sfp_lock_acquire+0x8>)
 80201aa:	f000 b8b3 	b.w	8020314 <__retarget_lock_acquire_recursive>
 80201ae:	bf00      	nop
 80201b0:	2000d6ca 	.word	0x2000d6ca

080201b4 <__sfp_lock_release>:
 80201b4:	4801      	ldr	r0, [pc, #4]	; (80201bc <__sfp_lock_release+0x8>)
 80201b6:	f000 b8af 	b.w	8020318 <__retarget_lock_release_recursive>
 80201ba:	bf00      	nop
 80201bc:	2000d6ca 	.word	0x2000d6ca

080201c0 <__sinit_lock_acquire>:
 80201c0:	4801      	ldr	r0, [pc, #4]	; (80201c8 <__sinit_lock_acquire+0x8>)
 80201c2:	f000 b8a7 	b.w	8020314 <__retarget_lock_acquire_recursive>
 80201c6:	bf00      	nop
 80201c8:	2000d6cb 	.word	0x2000d6cb

080201cc <__sinit_lock_release>:
 80201cc:	4801      	ldr	r0, [pc, #4]	; (80201d4 <__sinit_lock_release+0x8>)
 80201ce:	f000 b8a3 	b.w	8020318 <__retarget_lock_release_recursive>
 80201d2:	bf00      	nop
 80201d4:	2000d6cb 	.word	0x2000d6cb

080201d8 <__sinit>:
 80201d8:	b510      	push	{r4, lr}
 80201da:	4604      	mov	r4, r0
 80201dc:	f7ff fff0 	bl	80201c0 <__sinit_lock_acquire>
 80201e0:	69a3      	ldr	r3, [r4, #24]
 80201e2:	b11b      	cbz	r3, 80201ec <__sinit+0x14>
 80201e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80201e8:	f7ff bff0 	b.w	80201cc <__sinit_lock_release>
 80201ec:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80201f0:	6523      	str	r3, [r4, #80]	; 0x50
 80201f2:	4b13      	ldr	r3, [pc, #76]	; (8020240 <__sinit+0x68>)
 80201f4:	4a13      	ldr	r2, [pc, #76]	; (8020244 <__sinit+0x6c>)
 80201f6:	681b      	ldr	r3, [r3, #0]
 80201f8:	62a2      	str	r2, [r4, #40]	; 0x28
 80201fa:	42a3      	cmp	r3, r4
 80201fc:	bf04      	itt	eq
 80201fe:	2301      	moveq	r3, #1
 8020200:	61a3      	streq	r3, [r4, #24]
 8020202:	4620      	mov	r0, r4
 8020204:	f000 f820 	bl	8020248 <__sfp>
 8020208:	6060      	str	r0, [r4, #4]
 802020a:	4620      	mov	r0, r4
 802020c:	f000 f81c 	bl	8020248 <__sfp>
 8020210:	60a0      	str	r0, [r4, #8]
 8020212:	4620      	mov	r0, r4
 8020214:	f000 f818 	bl	8020248 <__sfp>
 8020218:	2200      	movs	r2, #0
 802021a:	60e0      	str	r0, [r4, #12]
 802021c:	2104      	movs	r1, #4
 802021e:	6860      	ldr	r0, [r4, #4]
 8020220:	f7ff ff82 	bl	8020128 <std>
 8020224:	68a0      	ldr	r0, [r4, #8]
 8020226:	2201      	movs	r2, #1
 8020228:	2109      	movs	r1, #9
 802022a:	f7ff ff7d 	bl	8020128 <std>
 802022e:	68e0      	ldr	r0, [r4, #12]
 8020230:	2202      	movs	r2, #2
 8020232:	2112      	movs	r1, #18
 8020234:	f7ff ff78 	bl	8020128 <std>
 8020238:	2301      	movs	r3, #1
 802023a:	61a3      	str	r3, [r4, #24]
 802023c:	e7d2      	b.n	80201e4 <__sinit+0xc>
 802023e:	bf00      	nop
 8020240:	08024a04 	.word	0x08024a04
 8020244:	08020171 	.word	0x08020171

08020248 <__sfp>:
 8020248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802024a:	4607      	mov	r7, r0
 802024c:	f7ff ffac 	bl	80201a8 <__sfp_lock_acquire>
 8020250:	4b1e      	ldr	r3, [pc, #120]	; (80202cc <__sfp+0x84>)
 8020252:	681e      	ldr	r6, [r3, #0]
 8020254:	69b3      	ldr	r3, [r6, #24]
 8020256:	b913      	cbnz	r3, 802025e <__sfp+0x16>
 8020258:	4630      	mov	r0, r6
 802025a:	f7ff ffbd 	bl	80201d8 <__sinit>
 802025e:	3648      	adds	r6, #72	; 0x48
 8020260:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020264:	3b01      	subs	r3, #1
 8020266:	d503      	bpl.n	8020270 <__sfp+0x28>
 8020268:	6833      	ldr	r3, [r6, #0]
 802026a:	b30b      	cbz	r3, 80202b0 <__sfp+0x68>
 802026c:	6836      	ldr	r6, [r6, #0]
 802026e:	e7f7      	b.n	8020260 <__sfp+0x18>
 8020270:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020274:	b9d5      	cbnz	r5, 80202ac <__sfp+0x64>
 8020276:	4b16      	ldr	r3, [pc, #88]	; (80202d0 <__sfp+0x88>)
 8020278:	60e3      	str	r3, [r4, #12]
 802027a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802027e:	6665      	str	r5, [r4, #100]	; 0x64
 8020280:	f000 f847 	bl	8020312 <__retarget_lock_init_recursive>
 8020284:	f7ff ff96 	bl	80201b4 <__sfp_lock_release>
 8020288:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802028c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020290:	6025      	str	r5, [r4, #0]
 8020292:	61a5      	str	r5, [r4, #24]
 8020294:	2208      	movs	r2, #8
 8020296:	4629      	mov	r1, r5
 8020298:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802029c:	f7ff f936 	bl	801f50c <memset>
 80202a0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80202a4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80202a8:	4620      	mov	r0, r4
 80202aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80202ac:	3468      	adds	r4, #104	; 0x68
 80202ae:	e7d9      	b.n	8020264 <__sfp+0x1c>
 80202b0:	2104      	movs	r1, #4
 80202b2:	4638      	mov	r0, r7
 80202b4:	f7ff ff62 	bl	802017c <__sfmoreglue>
 80202b8:	4604      	mov	r4, r0
 80202ba:	6030      	str	r0, [r6, #0]
 80202bc:	2800      	cmp	r0, #0
 80202be:	d1d5      	bne.n	802026c <__sfp+0x24>
 80202c0:	f7ff ff78 	bl	80201b4 <__sfp_lock_release>
 80202c4:	230c      	movs	r3, #12
 80202c6:	603b      	str	r3, [r7, #0]
 80202c8:	e7ee      	b.n	80202a8 <__sfp+0x60>
 80202ca:	bf00      	nop
 80202cc:	08024a04 	.word	0x08024a04
 80202d0:	ffff0001 	.word	0xffff0001

080202d4 <_fwalk_reent>:
 80202d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80202d8:	4606      	mov	r6, r0
 80202da:	4688      	mov	r8, r1
 80202dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80202e0:	2700      	movs	r7, #0
 80202e2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80202e6:	f1b9 0901 	subs.w	r9, r9, #1
 80202ea:	d505      	bpl.n	80202f8 <_fwalk_reent+0x24>
 80202ec:	6824      	ldr	r4, [r4, #0]
 80202ee:	2c00      	cmp	r4, #0
 80202f0:	d1f7      	bne.n	80202e2 <_fwalk_reent+0xe>
 80202f2:	4638      	mov	r0, r7
 80202f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80202f8:	89ab      	ldrh	r3, [r5, #12]
 80202fa:	2b01      	cmp	r3, #1
 80202fc:	d907      	bls.n	802030e <_fwalk_reent+0x3a>
 80202fe:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020302:	3301      	adds	r3, #1
 8020304:	d003      	beq.n	802030e <_fwalk_reent+0x3a>
 8020306:	4629      	mov	r1, r5
 8020308:	4630      	mov	r0, r6
 802030a:	47c0      	blx	r8
 802030c:	4307      	orrs	r7, r0
 802030e:	3568      	adds	r5, #104	; 0x68
 8020310:	e7e9      	b.n	80202e6 <_fwalk_reent+0x12>

08020312 <__retarget_lock_init_recursive>:
 8020312:	4770      	bx	lr

08020314 <__retarget_lock_acquire_recursive>:
 8020314:	4770      	bx	lr

08020316 <__retarget_lock_release>:
 8020316:	4770      	bx	lr

08020318 <__retarget_lock_release_recursive>:
 8020318:	4770      	bx	lr

0802031a <__swhatbuf_r>:
 802031a:	b570      	push	{r4, r5, r6, lr}
 802031c:	460e      	mov	r6, r1
 802031e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020322:	2900      	cmp	r1, #0
 8020324:	b096      	sub	sp, #88	; 0x58
 8020326:	4614      	mov	r4, r2
 8020328:	461d      	mov	r5, r3
 802032a:	da08      	bge.n	802033e <__swhatbuf_r+0x24>
 802032c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8020330:	2200      	movs	r2, #0
 8020332:	602a      	str	r2, [r5, #0]
 8020334:	061a      	lsls	r2, r3, #24
 8020336:	d410      	bmi.n	802035a <__swhatbuf_r+0x40>
 8020338:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802033c:	e00e      	b.n	802035c <__swhatbuf_r+0x42>
 802033e:	466a      	mov	r2, sp
 8020340:	f000 f8c2 	bl	80204c8 <_fstat_r>
 8020344:	2800      	cmp	r0, #0
 8020346:	dbf1      	blt.n	802032c <__swhatbuf_r+0x12>
 8020348:	9a01      	ldr	r2, [sp, #4]
 802034a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802034e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8020352:	425a      	negs	r2, r3
 8020354:	415a      	adcs	r2, r3
 8020356:	602a      	str	r2, [r5, #0]
 8020358:	e7ee      	b.n	8020338 <__swhatbuf_r+0x1e>
 802035a:	2340      	movs	r3, #64	; 0x40
 802035c:	2000      	movs	r0, #0
 802035e:	6023      	str	r3, [r4, #0]
 8020360:	b016      	add	sp, #88	; 0x58
 8020362:	bd70      	pop	{r4, r5, r6, pc}

08020364 <__smakebuf_r>:
 8020364:	898b      	ldrh	r3, [r1, #12]
 8020366:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8020368:	079d      	lsls	r5, r3, #30
 802036a:	4606      	mov	r6, r0
 802036c:	460c      	mov	r4, r1
 802036e:	d507      	bpl.n	8020380 <__smakebuf_r+0x1c>
 8020370:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8020374:	6023      	str	r3, [r4, #0]
 8020376:	6123      	str	r3, [r4, #16]
 8020378:	2301      	movs	r3, #1
 802037a:	6163      	str	r3, [r4, #20]
 802037c:	b002      	add	sp, #8
 802037e:	bd70      	pop	{r4, r5, r6, pc}
 8020380:	ab01      	add	r3, sp, #4
 8020382:	466a      	mov	r2, sp
 8020384:	f7ff ffc9 	bl	802031a <__swhatbuf_r>
 8020388:	9900      	ldr	r1, [sp, #0]
 802038a:	4605      	mov	r5, r0
 802038c:	4630      	mov	r0, r6
 802038e:	f7ff f931 	bl	801f5f4 <_malloc_r>
 8020392:	b948      	cbnz	r0, 80203a8 <__smakebuf_r+0x44>
 8020394:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8020398:	059a      	lsls	r2, r3, #22
 802039a:	d4ef      	bmi.n	802037c <__smakebuf_r+0x18>
 802039c:	f023 0303 	bic.w	r3, r3, #3
 80203a0:	f043 0302 	orr.w	r3, r3, #2
 80203a4:	81a3      	strh	r3, [r4, #12]
 80203a6:	e7e3      	b.n	8020370 <__smakebuf_r+0xc>
 80203a8:	4b0d      	ldr	r3, [pc, #52]	; (80203e0 <__smakebuf_r+0x7c>)
 80203aa:	62b3      	str	r3, [r6, #40]	; 0x28
 80203ac:	89a3      	ldrh	r3, [r4, #12]
 80203ae:	6020      	str	r0, [r4, #0]
 80203b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80203b4:	81a3      	strh	r3, [r4, #12]
 80203b6:	9b00      	ldr	r3, [sp, #0]
 80203b8:	6163      	str	r3, [r4, #20]
 80203ba:	9b01      	ldr	r3, [sp, #4]
 80203bc:	6120      	str	r0, [r4, #16]
 80203be:	b15b      	cbz	r3, 80203d8 <__smakebuf_r+0x74>
 80203c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80203c4:	4630      	mov	r0, r6
 80203c6:	f000 f891 	bl	80204ec <_isatty_r>
 80203ca:	b128      	cbz	r0, 80203d8 <__smakebuf_r+0x74>
 80203cc:	89a3      	ldrh	r3, [r4, #12]
 80203ce:	f023 0303 	bic.w	r3, r3, #3
 80203d2:	f043 0301 	orr.w	r3, r3, #1
 80203d6:	81a3      	strh	r3, [r4, #12]
 80203d8:	89a0      	ldrh	r0, [r4, #12]
 80203da:	4305      	orrs	r5, r0
 80203dc:	81a5      	strh	r5, [r4, #12]
 80203de:	e7cd      	b.n	802037c <__smakebuf_r+0x18>
 80203e0:	08020171 	.word	0x08020171

080203e4 <__malloc_lock>:
 80203e4:	4801      	ldr	r0, [pc, #4]	; (80203ec <__malloc_lock+0x8>)
 80203e6:	f7ff bf95 	b.w	8020314 <__retarget_lock_acquire_recursive>
 80203ea:	bf00      	nop
 80203ec:	2000d6c9 	.word	0x2000d6c9

080203f0 <__malloc_unlock>:
 80203f0:	4801      	ldr	r0, [pc, #4]	; (80203f8 <__malloc_unlock+0x8>)
 80203f2:	f7ff bf91 	b.w	8020318 <__retarget_lock_release_recursive>
 80203f6:	bf00      	nop
 80203f8:	2000d6c9 	.word	0x2000d6c9

080203fc <__sread>:
 80203fc:	b510      	push	{r4, lr}
 80203fe:	460c      	mov	r4, r1
 8020400:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020404:	f000 f894 	bl	8020530 <_read_r>
 8020408:	2800      	cmp	r0, #0
 802040a:	bfab      	itete	ge
 802040c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802040e:	89a3      	ldrhlt	r3, [r4, #12]
 8020410:	181b      	addge	r3, r3, r0
 8020412:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8020416:	bfac      	ite	ge
 8020418:	6563      	strge	r3, [r4, #84]	; 0x54
 802041a:	81a3      	strhlt	r3, [r4, #12]
 802041c:	bd10      	pop	{r4, pc}

0802041e <__swrite>:
 802041e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020422:	461f      	mov	r7, r3
 8020424:	898b      	ldrh	r3, [r1, #12]
 8020426:	05db      	lsls	r3, r3, #23
 8020428:	4605      	mov	r5, r0
 802042a:	460c      	mov	r4, r1
 802042c:	4616      	mov	r6, r2
 802042e:	d505      	bpl.n	802043c <__swrite+0x1e>
 8020430:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8020434:	2302      	movs	r3, #2
 8020436:	2200      	movs	r2, #0
 8020438:	f000 f868 	bl	802050c <_lseek_r>
 802043c:	89a3      	ldrh	r3, [r4, #12]
 802043e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8020442:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8020446:	81a3      	strh	r3, [r4, #12]
 8020448:	4632      	mov	r2, r6
 802044a:	463b      	mov	r3, r7
 802044c:	4628      	mov	r0, r5
 802044e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8020452:	f000 b817 	b.w	8020484 <_write_r>

08020456 <__sseek>:
 8020456:	b510      	push	{r4, lr}
 8020458:	460c      	mov	r4, r1
 802045a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802045e:	f000 f855 	bl	802050c <_lseek_r>
 8020462:	1c43      	adds	r3, r0, #1
 8020464:	89a3      	ldrh	r3, [r4, #12]
 8020466:	bf15      	itete	ne
 8020468:	6560      	strne	r0, [r4, #84]	; 0x54
 802046a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802046e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8020472:	81a3      	strheq	r3, [r4, #12]
 8020474:	bf18      	it	ne
 8020476:	81a3      	strhne	r3, [r4, #12]
 8020478:	bd10      	pop	{r4, pc}

0802047a <__sclose>:
 802047a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802047e:	f000 b813 	b.w	80204a8 <_close_r>
	...

08020484 <_write_r>:
 8020484:	b538      	push	{r3, r4, r5, lr}
 8020486:	4d07      	ldr	r5, [pc, #28]	; (80204a4 <_write_r+0x20>)
 8020488:	4604      	mov	r4, r0
 802048a:	4608      	mov	r0, r1
 802048c:	4611      	mov	r1, r2
 802048e:	2200      	movs	r2, #0
 8020490:	602a      	str	r2, [r5, #0]
 8020492:	461a      	mov	r2, r3
 8020494:	f7e1 fd7a 	bl	8001f8c <_write>
 8020498:	1c43      	adds	r3, r0, #1
 802049a:	d102      	bne.n	80204a2 <_write_r+0x1e>
 802049c:	682b      	ldr	r3, [r5, #0]
 802049e:	b103      	cbz	r3, 80204a2 <_write_r+0x1e>
 80204a0:	6023      	str	r3, [r4, #0]
 80204a2:	bd38      	pop	{r3, r4, r5, pc}
 80204a4:	2000d6cc 	.word	0x2000d6cc

080204a8 <_close_r>:
 80204a8:	b538      	push	{r3, r4, r5, lr}
 80204aa:	4d06      	ldr	r5, [pc, #24]	; (80204c4 <_close_r+0x1c>)
 80204ac:	2300      	movs	r3, #0
 80204ae:	4604      	mov	r4, r0
 80204b0:	4608      	mov	r0, r1
 80204b2:	602b      	str	r3, [r5, #0]
 80204b4:	f7e1 fd78 	bl	8001fa8 <_close>
 80204b8:	1c43      	adds	r3, r0, #1
 80204ba:	d102      	bne.n	80204c2 <_close_r+0x1a>
 80204bc:	682b      	ldr	r3, [r5, #0]
 80204be:	b103      	cbz	r3, 80204c2 <_close_r+0x1a>
 80204c0:	6023      	str	r3, [r4, #0]
 80204c2:	bd38      	pop	{r3, r4, r5, pc}
 80204c4:	2000d6cc 	.word	0x2000d6cc

080204c8 <_fstat_r>:
 80204c8:	b538      	push	{r3, r4, r5, lr}
 80204ca:	4d07      	ldr	r5, [pc, #28]	; (80204e8 <_fstat_r+0x20>)
 80204cc:	2300      	movs	r3, #0
 80204ce:	4604      	mov	r4, r0
 80204d0:	4608      	mov	r0, r1
 80204d2:	4611      	mov	r1, r2
 80204d4:	602b      	str	r3, [r5, #0]
 80204d6:	f7e1 fd6a 	bl	8001fae <_fstat>
 80204da:	1c43      	adds	r3, r0, #1
 80204dc:	d102      	bne.n	80204e4 <_fstat_r+0x1c>
 80204de:	682b      	ldr	r3, [r5, #0]
 80204e0:	b103      	cbz	r3, 80204e4 <_fstat_r+0x1c>
 80204e2:	6023      	str	r3, [r4, #0]
 80204e4:	bd38      	pop	{r3, r4, r5, pc}
 80204e6:	bf00      	nop
 80204e8:	2000d6cc 	.word	0x2000d6cc

080204ec <_isatty_r>:
 80204ec:	b538      	push	{r3, r4, r5, lr}
 80204ee:	4d06      	ldr	r5, [pc, #24]	; (8020508 <_isatty_r+0x1c>)
 80204f0:	2300      	movs	r3, #0
 80204f2:	4604      	mov	r4, r0
 80204f4:	4608      	mov	r0, r1
 80204f6:	602b      	str	r3, [r5, #0]
 80204f8:	f7e1 fd5e 	bl	8001fb8 <_isatty>
 80204fc:	1c43      	adds	r3, r0, #1
 80204fe:	d102      	bne.n	8020506 <_isatty_r+0x1a>
 8020500:	682b      	ldr	r3, [r5, #0]
 8020502:	b103      	cbz	r3, 8020506 <_isatty_r+0x1a>
 8020504:	6023      	str	r3, [r4, #0]
 8020506:	bd38      	pop	{r3, r4, r5, pc}
 8020508:	2000d6cc 	.word	0x2000d6cc

0802050c <_lseek_r>:
 802050c:	b538      	push	{r3, r4, r5, lr}
 802050e:	4d07      	ldr	r5, [pc, #28]	; (802052c <_lseek_r+0x20>)
 8020510:	4604      	mov	r4, r0
 8020512:	4608      	mov	r0, r1
 8020514:	4611      	mov	r1, r2
 8020516:	2200      	movs	r2, #0
 8020518:	602a      	str	r2, [r5, #0]
 802051a:	461a      	mov	r2, r3
 802051c:	f7e1 fd4e 	bl	8001fbc <_lseek>
 8020520:	1c43      	adds	r3, r0, #1
 8020522:	d102      	bne.n	802052a <_lseek_r+0x1e>
 8020524:	682b      	ldr	r3, [r5, #0]
 8020526:	b103      	cbz	r3, 802052a <_lseek_r+0x1e>
 8020528:	6023      	str	r3, [r4, #0]
 802052a:	bd38      	pop	{r3, r4, r5, pc}
 802052c:	2000d6cc 	.word	0x2000d6cc

08020530 <_read_r>:
 8020530:	b538      	push	{r3, r4, r5, lr}
 8020532:	4d07      	ldr	r5, [pc, #28]	; (8020550 <_read_r+0x20>)
 8020534:	4604      	mov	r4, r0
 8020536:	4608      	mov	r0, r1
 8020538:	4611      	mov	r1, r2
 802053a:	2200      	movs	r2, #0
 802053c:	602a      	str	r2, [r5, #0]
 802053e:	461a      	mov	r2, r3
 8020540:	f7e1 fd16 	bl	8001f70 <_read>
 8020544:	1c43      	adds	r3, r0, #1
 8020546:	d102      	bne.n	802054e <_read_r+0x1e>
 8020548:	682b      	ldr	r3, [r5, #0]
 802054a:	b103      	cbz	r3, 802054e <_read_r+0x1e>
 802054c:	6023      	str	r3, [r4, #0]
 802054e:	bd38      	pop	{r3, r4, r5, pc}
 8020550:	2000d6cc 	.word	0x2000d6cc

08020554 <_init>:
 8020554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020556:	bf00      	nop
 8020558:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802055a:	bc08      	pop	{r3}
 802055c:	469e      	mov	lr, r3
 802055e:	4770      	bx	lr

08020560 <_fini>:
 8020560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020562:	bf00      	nop
 8020564:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8020566:	bc08      	pop	{r3}
 8020568:	469e      	mov	lr, r3
 802056a:	4770      	bx	lr
