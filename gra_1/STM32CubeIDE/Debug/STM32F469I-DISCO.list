
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001adf8  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003280  0801afb8  0801afb8  0002afb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000000c  0801e238  0801e238  0002e238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801e244  0801e244  003436b4  2**0
                  CONTENTS
  5 .ARM          00000008  0801e244  0801e244  0002e244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801e24c  0801e24c  003436b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801e24c  0801e24c  0002e24c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801e264  0801e264  0002e264  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801e26c  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a500  20000140  0801e3ac  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000a640  0801e3ac  0003a640  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  003436b4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00303500  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 000001a8  90303500  90303500  00343500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 0000000c  903036a8  903036a8  003436a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00048eed  00000000  00000000  003436e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   000914d7  00000000  00000000  0038c5d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000126e9  00000000  00000000  0041daa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 000027a0  00000000  00000000  00430198  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00128fd9  00000000  00000000  00432938  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00003df8  00000000  00000000  0055b918  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    000230ed  00000000  00000000  0055f710  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00037d83  00000000  00000000  005827fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  005ba580  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000780c  00000000  00000000  005ba650  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801afa0 	.word	0x0801afa0

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801afa0 	.word	0x0801afa0

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b974 	b.w	80005a0 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468e      	mov	lr, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	d14d      	bne.n	800037a <__udivmoddi4+0xaa>
 80002de:	428a      	cmp	r2, r1
 80002e0:	4694      	mov	ip, r2
 80002e2:	d969      	bls.n	80003b8 <__udivmoddi4+0xe8>
 80002e4:	fab2 f282 	clz	r2, r2
 80002e8:	b152      	cbz	r2, 8000300 <__udivmoddi4+0x30>
 80002ea:	fa01 f302 	lsl.w	r3, r1, r2
 80002ee:	f1c2 0120 	rsb	r1, r2, #32
 80002f2:	fa20 f101 	lsr.w	r1, r0, r1
 80002f6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002fa:	ea41 0e03 	orr.w	lr, r1, r3
 80002fe:	4094      	lsls	r4, r2
 8000300:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000304:	0c21      	lsrs	r1, r4, #16
 8000306:	fbbe f6f8 	udiv	r6, lr, r8
 800030a:	fa1f f78c 	uxth.w	r7, ip
 800030e:	fb08 e316 	mls	r3, r8, r6, lr
 8000312:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000316:	fb06 f107 	mul.w	r1, r6, r7
 800031a:	4299      	cmp	r1, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x64>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f106 30ff 	add.w	r0, r6, #4294967295
 8000326:	f080 811f 	bcs.w	8000568 <__udivmoddi4+0x298>
 800032a:	4299      	cmp	r1, r3
 800032c:	f240 811c 	bls.w	8000568 <__udivmoddi4+0x298>
 8000330:	3e02      	subs	r6, #2
 8000332:	4463      	add	r3, ip
 8000334:	1a5b      	subs	r3, r3, r1
 8000336:	b2a4      	uxth	r4, r4
 8000338:	fbb3 f0f8 	udiv	r0, r3, r8
 800033c:	fb08 3310 	mls	r3, r8, r0, r3
 8000340:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000344:	fb00 f707 	mul.w	r7, r0, r7
 8000348:	42a7      	cmp	r7, r4
 800034a:	d90a      	bls.n	8000362 <__udivmoddi4+0x92>
 800034c:	eb1c 0404 	adds.w	r4, ip, r4
 8000350:	f100 33ff 	add.w	r3, r0, #4294967295
 8000354:	f080 810a 	bcs.w	800056c <__udivmoddi4+0x29c>
 8000358:	42a7      	cmp	r7, r4
 800035a:	f240 8107 	bls.w	800056c <__udivmoddi4+0x29c>
 800035e:	4464      	add	r4, ip
 8000360:	3802      	subs	r0, #2
 8000362:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000366:	1be4      	subs	r4, r4, r7
 8000368:	2600      	movs	r6, #0
 800036a:	b11d      	cbz	r5, 8000374 <__udivmoddi4+0xa4>
 800036c:	40d4      	lsrs	r4, r2
 800036e:	2300      	movs	r3, #0
 8000370:	e9c5 4300 	strd	r4, r3, [r5]
 8000374:	4631      	mov	r1, r6
 8000376:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037a:	428b      	cmp	r3, r1
 800037c:	d909      	bls.n	8000392 <__udivmoddi4+0xc2>
 800037e:	2d00      	cmp	r5, #0
 8000380:	f000 80ef 	beq.w	8000562 <__udivmoddi4+0x292>
 8000384:	2600      	movs	r6, #0
 8000386:	e9c5 0100 	strd	r0, r1, [r5]
 800038a:	4630      	mov	r0, r6
 800038c:	4631      	mov	r1, r6
 800038e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000392:	fab3 f683 	clz	r6, r3
 8000396:	2e00      	cmp	r6, #0
 8000398:	d14a      	bne.n	8000430 <__udivmoddi4+0x160>
 800039a:	428b      	cmp	r3, r1
 800039c:	d302      	bcc.n	80003a4 <__udivmoddi4+0xd4>
 800039e:	4282      	cmp	r2, r0
 80003a0:	f200 80f9 	bhi.w	8000596 <__udivmoddi4+0x2c6>
 80003a4:	1a84      	subs	r4, r0, r2
 80003a6:	eb61 0303 	sbc.w	r3, r1, r3
 80003aa:	2001      	movs	r0, #1
 80003ac:	469e      	mov	lr, r3
 80003ae:	2d00      	cmp	r5, #0
 80003b0:	d0e0      	beq.n	8000374 <__udivmoddi4+0xa4>
 80003b2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003b6:	e7dd      	b.n	8000374 <__udivmoddi4+0xa4>
 80003b8:	b902      	cbnz	r2, 80003bc <__udivmoddi4+0xec>
 80003ba:	deff      	udf	#255	; 0xff
 80003bc:	fab2 f282 	clz	r2, r2
 80003c0:	2a00      	cmp	r2, #0
 80003c2:	f040 8092 	bne.w	80004ea <__udivmoddi4+0x21a>
 80003c6:	eba1 010c 	sub.w	r1, r1, ip
 80003ca:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ce:	fa1f fe8c 	uxth.w	lr, ip
 80003d2:	2601      	movs	r6, #1
 80003d4:	0c20      	lsrs	r0, r4, #16
 80003d6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003da:	fb07 1113 	mls	r1, r7, r3, r1
 80003de:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003e2:	fb0e f003 	mul.w	r0, lr, r3
 80003e6:	4288      	cmp	r0, r1
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x12c>
 80003ea:	eb1c 0101 	adds.w	r1, ip, r1
 80003ee:	f103 38ff 	add.w	r8, r3, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x12a>
 80003f4:	4288      	cmp	r0, r1
 80003f6:	f200 80cb 	bhi.w	8000590 <__udivmoddi4+0x2c0>
 80003fa:	4643      	mov	r3, r8
 80003fc:	1a09      	subs	r1, r1, r0
 80003fe:	b2a4      	uxth	r4, r4
 8000400:	fbb1 f0f7 	udiv	r0, r1, r7
 8000404:	fb07 1110 	mls	r1, r7, r0, r1
 8000408:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800040c:	fb0e fe00 	mul.w	lr, lr, r0
 8000410:	45a6      	cmp	lr, r4
 8000412:	d908      	bls.n	8000426 <__udivmoddi4+0x156>
 8000414:	eb1c 0404 	adds.w	r4, ip, r4
 8000418:	f100 31ff 	add.w	r1, r0, #4294967295
 800041c:	d202      	bcs.n	8000424 <__udivmoddi4+0x154>
 800041e:	45a6      	cmp	lr, r4
 8000420:	f200 80bb 	bhi.w	800059a <__udivmoddi4+0x2ca>
 8000424:	4608      	mov	r0, r1
 8000426:	eba4 040e 	sub.w	r4, r4, lr
 800042a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800042e:	e79c      	b.n	800036a <__udivmoddi4+0x9a>
 8000430:	f1c6 0720 	rsb	r7, r6, #32
 8000434:	40b3      	lsls	r3, r6
 8000436:	fa22 fc07 	lsr.w	ip, r2, r7
 800043a:	ea4c 0c03 	orr.w	ip, ip, r3
 800043e:	fa20 f407 	lsr.w	r4, r0, r7
 8000442:	fa01 f306 	lsl.w	r3, r1, r6
 8000446:	431c      	orrs	r4, r3
 8000448:	40f9      	lsrs	r1, r7
 800044a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800044e:	fa00 f306 	lsl.w	r3, r0, r6
 8000452:	fbb1 f8f9 	udiv	r8, r1, r9
 8000456:	0c20      	lsrs	r0, r4, #16
 8000458:	fa1f fe8c 	uxth.w	lr, ip
 800045c:	fb09 1118 	mls	r1, r9, r8, r1
 8000460:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000464:	fb08 f00e 	mul.w	r0, r8, lr
 8000468:	4288      	cmp	r0, r1
 800046a:	fa02 f206 	lsl.w	r2, r2, r6
 800046e:	d90b      	bls.n	8000488 <__udivmoddi4+0x1b8>
 8000470:	eb1c 0101 	adds.w	r1, ip, r1
 8000474:	f108 3aff 	add.w	sl, r8, #4294967295
 8000478:	f080 8088 	bcs.w	800058c <__udivmoddi4+0x2bc>
 800047c:	4288      	cmp	r0, r1
 800047e:	f240 8085 	bls.w	800058c <__udivmoddi4+0x2bc>
 8000482:	f1a8 0802 	sub.w	r8, r8, #2
 8000486:	4461      	add	r1, ip
 8000488:	1a09      	subs	r1, r1, r0
 800048a:	b2a4      	uxth	r4, r4
 800048c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000490:	fb09 1110 	mls	r1, r9, r0, r1
 8000494:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000498:	fb00 fe0e 	mul.w	lr, r0, lr
 800049c:	458e      	cmp	lr, r1
 800049e:	d908      	bls.n	80004b2 <__udivmoddi4+0x1e2>
 80004a0:	eb1c 0101 	adds.w	r1, ip, r1
 80004a4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004a8:	d26c      	bcs.n	8000584 <__udivmoddi4+0x2b4>
 80004aa:	458e      	cmp	lr, r1
 80004ac:	d96a      	bls.n	8000584 <__udivmoddi4+0x2b4>
 80004ae:	3802      	subs	r0, #2
 80004b0:	4461      	add	r1, ip
 80004b2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004b6:	fba0 9402 	umull	r9, r4, r0, r2
 80004ba:	eba1 010e 	sub.w	r1, r1, lr
 80004be:	42a1      	cmp	r1, r4
 80004c0:	46c8      	mov	r8, r9
 80004c2:	46a6      	mov	lr, r4
 80004c4:	d356      	bcc.n	8000574 <__udivmoddi4+0x2a4>
 80004c6:	d053      	beq.n	8000570 <__udivmoddi4+0x2a0>
 80004c8:	b15d      	cbz	r5, 80004e2 <__udivmoddi4+0x212>
 80004ca:	ebb3 0208 	subs.w	r2, r3, r8
 80004ce:	eb61 010e 	sbc.w	r1, r1, lr
 80004d2:	fa01 f707 	lsl.w	r7, r1, r7
 80004d6:	fa22 f306 	lsr.w	r3, r2, r6
 80004da:	40f1      	lsrs	r1, r6
 80004dc:	431f      	orrs	r7, r3
 80004de:	e9c5 7100 	strd	r7, r1, [r5]
 80004e2:	2600      	movs	r6, #0
 80004e4:	4631      	mov	r1, r6
 80004e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004ea:	f1c2 0320 	rsb	r3, r2, #32
 80004ee:	40d8      	lsrs	r0, r3
 80004f0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f4:	fa21 f303 	lsr.w	r3, r1, r3
 80004f8:	4091      	lsls	r1, r2
 80004fa:	4301      	orrs	r1, r0
 80004fc:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000500:	fa1f fe8c 	uxth.w	lr, ip
 8000504:	fbb3 f0f7 	udiv	r0, r3, r7
 8000508:	fb07 3610 	mls	r6, r7, r0, r3
 800050c:	0c0b      	lsrs	r3, r1, #16
 800050e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000512:	fb00 f60e 	mul.w	r6, r0, lr
 8000516:	429e      	cmp	r6, r3
 8000518:	fa04 f402 	lsl.w	r4, r4, r2
 800051c:	d908      	bls.n	8000530 <__udivmoddi4+0x260>
 800051e:	eb1c 0303 	adds.w	r3, ip, r3
 8000522:	f100 38ff 	add.w	r8, r0, #4294967295
 8000526:	d22f      	bcs.n	8000588 <__udivmoddi4+0x2b8>
 8000528:	429e      	cmp	r6, r3
 800052a:	d92d      	bls.n	8000588 <__udivmoddi4+0x2b8>
 800052c:	3802      	subs	r0, #2
 800052e:	4463      	add	r3, ip
 8000530:	1b9b      	subs	r3, r3, r6
 8000532:	b289      	uxth	r1, r1
 8000534:	fbb3 f6f7 	udiv	r6, r3, r7
 8000538:	fb07 3316 	mls	r3, r7, r6, r3
 800053c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000540:	fb06 f30e 	mul.w	r3, r6, lr
 8000544:	428b      	cmp	r3, r1
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x28a>
 8000548:	eb1c 0101 	adds.w	r1, ip, r1
 800054c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000550:	d216      	bcs.n	8000580 <__udivmoddi4+0x2b0>
 8000552:	428b      	cmp	r3, r1
 8000554:	d914      	bls.n	8000580 <__udivmoddi4+0x2b0>
 8000556:	3e02      	subs	r6, #2
 8000558:	4461      	add	r1, ip
 800055a:	1ac9      	subs	r1, r1, r3
 800055c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000560:	e738      	b.n	80003d4 <__udivmoddi4+0x104>
 8000562:	462e      	mov	r6, r5
 8000564:	4628      	mov	r0, r5
 8000566:	e705      	b.n	8000374 <__udivmoddi4+0xa4>
 8000568:	4606      	mov	r6, r0
 800056a:	e6e3      	b.n	8000334 <__udivmoddi4+0x64>
 800056c:	4618      	mov	r0, r3
 800056e:	e6f8      	b.n	8000362 <__udivmoddi4+0x92>
 8000570:	454b      	cmp	r3, r9
 8000572:	d2a9      	bcs.n	80004c8 <__udivmoddi4+0x1f8>
 8000574:	ebb9 0802 	subs.w	r8, r9, r2
 8000578:	eb64 0e0c 	sbc.w	lr, r4, ip
 800057c:	3801      	subs	r0, #1
 800057e:	e7a3      	b.n	80004c8 <__udivmoddi4+0x1f8>
 8000580:	4646      	mov	r6, r8
 8000582:	e7ea      	b.n	800055a <__udivmoddi4+0x28a>
 8000584:	4620      	mov	r0, r4
 8000586:	e794      	b.n	80004b2 <__udivmoddi4+0x1e2>
 8000588:	4640      	mov	r0, r8
 800058a:	e7d1      	b.n	8000530 <__udivmoddi4+0x260>
 800058c:	46d0      	mov	r8, sl
 800058e:	e77b      	b.n	8000488 <__udivmoddi4+0x1b8>
 8000590:	3b02      	subs	r3, #2
 8000592:	4461      	add	r1, ip
 8000594:	e732      	b.n	80003fc <__udivmoddi4+0x12c>
 8000596:	4630      	mov	r0, r6
 8000598:	e709      	b.n	80003ae <__udivmoddi4+0xde>
 800059a:	4464      	add	r4, ip
 800059c:	3802      	subs	r0, #2
 800059e:	e742      	b.n	8000426 <__udivmoddi4+0x156>

080005a0 <__aeabi_idiv0>:
 80005a0:	4770      	bx	lr
 80005a2:	bf00      	nop

080005a4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80005a4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005dc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80005a8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80005aa:	e003      	b.n	80005b4 <LoopCopyDataInit>

080005ac <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005ae:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005b0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005b2:	3104      	adds	r1, #4

080005b4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005b4:	480b      	ldr	r0, [pc, #44]	; (80005e4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005b6:	4b0c      	ldr	r3, [pc, #48]	; (80005e8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005b8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005bc:	d3f6      	bcc.n	80005ac <CopyDataInit>
  ldr  r2, =_sbss
 80005be:	4a0b      	ldr	r2, [pc, #44]	; (80005ec <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005c0:	e002      	b.n	80005c8 <LoopFillZerobss>

080005c2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005c2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005c4:	f842 3b04 	str.w	r3, [r2], #4

080005c8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005c8:	4b09      	ldr	r3, [pc, #36]	; (80005f0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ca:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005cc:	d3f9      	bcc.n	80005c2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ce:	f003 facd 	bl	8003b6c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005d2:	f019 fc7f 	bl	8019ed4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005d6:	f000 ff81 	bl	80014dc <main>
  bx  lr    
 80005da:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005dc:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005e0:	0801e26c 	.word	0x0801e26c
  ldr  r0, =_sdata
 80005e4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005e8:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005ec:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005f0:	2000a640 	.word	0x2000a640

080005f4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005f4:	e7fe      	b.n	80005f4 <ADC_IRQHandler>

080005f6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005f6:	f000 bdf3 	b.w	80011e0 <touchgfx_init>

080005fa <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005fa:	f000 be61 	b.w	80012c0 <touchgfx_taskEntry>

080005fe <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005fe:	2100      	movs	r1, #0
 8000600:	4608      	mov	r0, r1
 8000602:	f002 be1b 	b.w	800323c <BSP_PB_Init>

08000606 <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000606:	2000      	movs	r0, #0
 8000608:	f002 be52 	b.w	80032b0 <BSP_PB_GetState>

0800060c <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800060c:	6840      	ldr	r0, [r0, #4]
    }
 800060e:	4770      	bx	lr

08000610 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000610:	6041      	str	r1, [r0, #4]
    }
 8000612:	4770      	bx	lr

08000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000614:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000618:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800061c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000620:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000624:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000628:	6813      	ldr	r3, [r2, #0]
 800062a:	f043 0301 	orr.w	r3, r3, #1
 800062e:	6013      	str	r3, [r2, #0]
}
 8000630:	4770      	bx	lr

08000632 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000632:	1a51      	subs	r1, r2, r1
 8000634:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000638:	fbb1 f0f3 	udiv	r0, r1, r3
 800063c:	4770      	bx	lr
	...

08000640 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000640:	4b01      	ldr	r3, [pc, #4]	; (8000648 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000642:	6858      	ldr	r0, [r3, #4]
}
 8000644:	4770      	bx	lr
 8000646:	bf00      	nop
 8000648:	e0001000 	.word	0xe0001000

0800064c <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800064c:	4770      	bx	lr

0800064e <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800064e:	b510      	push	{r4, lr}
 8000650:	210c      	movs	r1, #12
 8000652:	4604      	mov	r4, r0
 8000654:	f019 fbc5 	bl	8019de2 <_ZdlPvj>
 8000658:	4620      	mov	r0, r4
 800065a:	bd10      	pop	{r4, pc}

0800065c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065c:	6803      	ldr	r3, [r0, #0]
{
 800065e:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000660:	691b      	ldr	r3, [r3, #16]
{
 8000662:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000664:	b131      	cbz	r1, 8000674 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000666:	4798      	blx	r3
 8000668:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800066a:	6863      	ldr	r3, [r4, #4]
 800066c:	1a9b      	subs	r3, r3, r2
 800066e:	4418      	add	r0, r3
 8000670:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000672:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000674:	4798      	blx	r3
 8000676:	60a0      	str	r0, [r4, #8]
}
 8000678:	e7fb      	b.n	8000672 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800067a <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800067a:	4770      	bx	lr

0800067c <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 800067c:	4770      	bx	lr
	...

08000680 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000680:	b508      	push	{r3, lr}
    Buttons::init();
 8000682:	f7ff ffbc 	bl	80005fe <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000686:	4b02      	ldr	r3, [pc, #8]	; (8000690 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000688:	2200      	movs	r2, #0
 800068a:	601a      	str	r2, [r3, #0]
}
 800068c:	bd08      	pop	{r3, pc}
 800068e:	bf00      	nop
 8000690:	2000015c 	.word	0x2000015c

08000694 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000698:	f7ff ffb5 	bl	8000606 <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 800069c:	4a0b      	ldr	r2, [pc, #44]	; (80006cc <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 800069e:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 80006a0:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 80006a2:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 80006a4:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 80006a6:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a8:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006ac:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006ae:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006b0:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006b2:	d00a      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006b4:	f016 0001 	ands.w	r0, r6, #1
 80006b8:	d007      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ba:	f011 0001 	ands.w	r0, r1, #1
 80006be:	d004      	beq.n	80006ca <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006c0:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006c2:	bf5a      	itte	pl
 80006c4:	2001      	movpl	r0, #1
 80006c6:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006c8:	2000      	movmi	r0, #0
}
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	2000015c 	.word	0x2000015c

080006d0 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006d0:	b510      	push	{r4, lr}
 80006d2:	2104      	movs	r1, #4
 80006d4:	4604      	mov	r4, r0
 80006d6:	f019 fb84 	bl	8019de2 <_ZdlPvj>
 80006da:	4620      	mov	r0, r4
 80006dc:	bd10      	pop	{r4, pc}

080006de <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006de:	4770      	bx	lr

080006e0 <_ZN20STM32TouchControllerD0Ev>:
 80006e0:	b510      	push	{r4, lr}
 80006e2:	2104      	movs	r1, #4
 80006e4:	4604      	mov	r4, r0
 80006e6:	f019 fb7c 	bl	8019de2 <_ZdlPvj>
 80006ea:	4620      	mov	r0, r4
 80006ec:	bd10      	pop	{r4, pc}
	...

080006f0 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006f0:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006f2:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006f6:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006fa:	f003 f989 	bl	8003a10 <BSP_TS_Init>
 80006fe:	4b07      	ldr	r3, [pc, #28]	; (800071c <_ZN20STM32TouchController4initEv+0x2c>)
 8000700:	b910      	cbnz	r0, 8000708 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000702:	2201      	movs	r2, #1
 8000704:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000706:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000708:	781b      	ldrb	r3, [r3, #0]
 800070a:	2b00      	cmp	r3, #0
 800070c:	d1fb      	bne.n	8000706 <_ZN20STM32TouchController4initEv+0x16>
 800070e:	4b04      	ldr	r3, [pc, #16]	; (8000720 <_ZN20STM32TouchController4initEv+0x30>)
 8000710:	4a04      	ldr	r2, [pc, #16]	; (8000724 <_ZN20STM32TouchController4initEv+0x34>)
 8000712:	4805      	ldr	r0, [pc, #20]	; (8000728 <_ZN20STM32TouchController4initEv+0x38>)
 8000714:	2124      	movs	r1, #36	; 0x24
 8000716:	f019 fb93 	bl	8019e40 <__assert_func>
 800071a:	bf00      	nop
 800071c:	20000160 	.word	0x20000160
 8000720:	0801b044 	.word	0x0801b044
 8000724:	0801b057 	.word	0x0801b057
 8000728:	0801b081 	.word	0x0801b081

0800072c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800072c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 800072e:	4b0b      	ldr	r3, [pc, #44]	; (800075c <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000730:	781c      	ldrb	r4, [r3, #0]
{
 8000732:	460e      	mov	r6, r1
 8000734:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000736:	b15c      	cbz	r4, 8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000738:	a801      	add	r0, sp, #4
 800073a:	f003 f9a1 	bl	8003a80 <BSP_TS_GetState>
        if (state.touchDetected)
 800073e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000742:	b143      	cbz	r3, 8000756 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000744:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000748:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800074a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800074e:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000750:	4620      	mov	r0, r4
 8000752:	b004      	add	sp, #16
 8000754:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000756:	461c      	mov	r4, r3
 8000758:	e7fa      	b.n	8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800075a:	bf00      	nop
 800075c:	20000160 	.word	0x20000160

08000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000760:	b110      	cbz	r0, 8000768 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000762:	2801      	cmp	r0, #1
 8000764:	d009      	beq.n	800077a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000766:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000768:	4b08      	ldr	r3, [pc, #32]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800076a:	4809      	ldr	r0, [pc, #36]	; (8000790 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 800076c:	681a      	ldr	r2, [r3, #0]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000776:	f004 bb2f 	b.w	8004dd8 <HAL_GPIO_WritePin>
 800077a:	4b04      	ldr	r3, [pc, #16]	; (800078c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800077c:	4805      	ldr	r0, [pc, #20]	; (8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 800077e:	685a      	ldr	r2, [r3, #4]
 8000780:	fab2 f282 	clz	r2, r2
 8000784:	0952      	lsrs	r2, r2, #5
 8000786:	2110      	movs	r1, #16
 8000788:	e7f5      	b.n	8000776 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800078a:	bf00      	nop
 800078c:	20000164 	.word	0x20000164
 8000790:	40021800 	.word	0x40021800
 8000794:	40020c00 	.word	0x40020c00

08000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000798:	b110      	cbz	r0, 80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800079a:	2801      	cmp	r0, #1
 800079c:	d009      	beq.n	80007b2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 800079e:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007a0:	4b08      	ldr	r3, [pc, #32]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a2:	4809      	ldr	r0, [pc, #36]	; (80007c8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 80007a4:	681a      	ldr	r2, [r3, #0]
 80007a6:	3a00      	subs	r2, #0
 80007a8:	bf18      	it	ne
 80007aa:	2201      	movne	r2, #1
 80007ac:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007ae:	f004 bb13 	b.w	8004dd8 <HAL_GPIO_WritePin>
 80007b2:	4b04      	ldr	r3, [pc, #16]	; (80007c4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007b4:	4805      	ldr	r0, [pc, #20]	; (80007cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007b6:	685a      	ldr	r2, [r3, #4]
 80007b8:	3a00      	subs	r2, #0
 80007ba:	bf18      	it	ne
 80007bc:	2201      	movne	r2, #1
 80007be:	2110      	movs	r1, #16
 80007c0:	e7f5      	b.n	80007ae <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007c2:	bf00      	nop
 80007c4:	20000164 	.word	0x20000164
 80007c8:	40021800 	.word	0x40021800
 80007cc:	40020c00 	.word	0x40020c00

080007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007d0:	b110      	cbz	r0, 80007d8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007d2:	2801      	cmp	r0, #1
 80007d4:	d004      	beq.n	80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007d6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007d8:	4803      	ldr	r0, [pc, #12]	; (80007e8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007da:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007dc:	f004 bb01 	b.w	8004de2 <HAL_GPIO_TogglePin>
 80007e0:	4802      	ldr	r0, [pc, #8]	; (80007ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007e2:	2110      	movs	r1, #16
 80007e4:	e7fa      	b.n	80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007e6:	bf00      	nop
 80007e8:	40021800 	.word	0x40021800
 80007ec:	40020c00 	.word	0x40020c00

080007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007f0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007f2:	b130      	cbz	r0, 8000802 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007f4:	2801      	cmp	r0, #1
 80007f6:	d009      	beq.n	800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007f8:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007fa:	1e43      	subs	r3, r0, #1
 80007fc:	4258      	negs	r0, r3
 80007fe:	4158      	adcs	r0, r3
 8000800:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000802:	4804      	ldr	r0, [pc, #16]	; (8000814 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 8000804:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000806:	f004 fae1 	bl	8004dcc <HAL_GPIO_ReadPin>
        break;
 800080a:	e7f6      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800080c:	4802      	ldr	r0, [pc, #8]	; (8000818 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 800080e:	2110      	movs	r1, #16
 8000810:	e7f9      	b.n	8000806 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000812:	bf00      	nop
 8000814:	40021800 	.word	0x40021800
 8000818:	40020c00 	.word	0x40020c00

0800081c <_ZN8touchgfx4GPIO4initEv>:
{
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4d08      	ldr	r5, [pc, #32]	; (8000840 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000820:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000822:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000824:	b2e0      	uxtb	r0, r4
 8000826:	f7ff ffe3 	bl	80007f0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800082a:	b118      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000830:	bf18      	it	ne
 8000832:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000834:	3401      	adds	r4, #1
 8000836:	2c05      	cmp	r4, #5
 8000838:	f105 0504 	add.w	r5, r5, #4
 800083c:	d1f2      	bne.n	8000824 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800083e:	bd70      	pop	{r4, r5, r6, pc}
 8000840:	20000164 	.word	0x20000164

08000844 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000844:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000846:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800084a:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 800084e:	4770      	bx	lr

08000850 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000850:	2000      	movs	r0, #0
 8000852:	4770      	bx	lr

08000854 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000854:	2000      	movs	r0, #0
 8000856:	4770      	bx	lr

08000858 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000858:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800085a:	b10b      	cbz	r3, 8000860 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800085c:	4608      	mov	r0, r1
 800085e:	4718      	bx	r3
        }
    }
 8000860:	4770      	bx	lr

08000862 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000862:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000866:	4770      	bx	lr

08000868 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000868:	6840      	ldr	r0, [r0, #4]
 800086a:	6803      	ldr	r3, [r0, #0]
 800086c:	699b      	ldr	r3, [r3, #24]
 800086e:	4718      	bx	r3

08000870 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {

    }
 8000870:	4770      	bx	lr

08000872 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {

    }
 8000872:	4770      	bx	lr

08000874 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000874:	4b01      	ldr	r3, [pc, #4]	; (800087c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8000876:	6818      	ldr	r0, [r3, #0]
 8000878:	4770      	bx	lr
 800087a:	bf00      	nop
 800087c:	20000174 	.word	0x20000174

08000880 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000880:	4770      	bx	lr
	...

08000884 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000884:	6803      	ldr	r3, [r0, #0]
{
 8000886:	4604      	mov	r4, r0
 8000888:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 800088a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800088c:	4798      	blx	r3
    enableInterrupts();
 800088e:	6823      	ldr	r3, [r4, #0]
 8000890:	4620      	mov	r0, r4
 8000892:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000894:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000896:	f000 fa35 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800089a:	6823      	ldr	r3, [r4, #0]
 800089c:	4620      	mov	r0, r4
 800089e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008a0:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008a2:	2100      	movs	r1, #0
 80008a4:	4806      	ldr	r0, [pc, #24]	; (80008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008a6:	9100      	str	r1, [sp, #0]
 80008a8:	2329      	movs	r3, #41	; 0x29
 80008aa:	2215      	movs	r2, #21
 80008ac:	f004 f87b 	bl	80049a6 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008b0:	f000 fa28 	bl	8000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008b4:	6823      	ldr	r3, [r4, #0]
 80008b6:	4620      	mov	r0, r4
 80008b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80008ba:	4798      	blx	r3
    for (;;)
 80008bc:	e7f8      	b.n	80008b0 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008be:	bf00      	nop
 80008c0:	200011e4 	.word	0x200011e4

080008c4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008c4:	b510      	push	{r4, lr}
 80008c6:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008c8:	f009 fb34 	bl	8009f34 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008cc:	6823      	ldr	r3, [r4, #0]
 80008ce:	4620      	mov	r0, r4
 80008d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80008d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80008d8:	4718      	bx	r3

080008da <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80008da:	f000 bd72 	b.w	80013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080008de <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80008de:	f000 bd71 	b.w	80013c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080008e2 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80008e2:	f008 bece 	b.w	8009682 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080008e6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80008e6:	f000 bd5b 	b.w	80013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080008ea <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80008ea:	f000 bd61 	b.w	80013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080008ee <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80008ee:	f000 bd6b 	b.w	80013c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080008f4 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80008f4:	4b02      	ldr	r3, [pc, #8]	; (8000900 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80008fa:	f008 bdad 	b.w	8009458 <_ZN8touchgfx3HAL10beginFrameEv>
 80008fe:	bf00      	nop
 8000900:	20000014 	.word	0x20000014

08000904 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000904:	b510      	push	{r4, lr}
 8000906:	4604      	mov	r4, r0
    HAL::endFrame();
 8000908:	f008 fdb2 	bl	8009470 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 800090c:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000910:	b113      	cbz	r3, 8000918 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000912:	4b02      	ldr	r3, [pc, #8]	; (800091c <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000914:	2201      	movs	r2, #1
 8000916:	701a      	strb	r2, [r3, #0]
    }
}
 8000918:	bd10      	pop	{r4, pc}
 800091a:	bf00      	nop
 800091c:	20000014 	.word	0x20000014

08000920 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000920:	f008 bd82 	b.w	8009428 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000924 <_ZN11TouchGFXHALD0Ev>:
 8000924:	b510      	push	{r4, lr}
 8000926:	217c      	movs	r1, #124	; 0x7c
 8000928:	4604      	mov	r4, r0
 800092a:	f019 fa5a 	bl	8019de2 <_ZdlPvj>
 800092e:	4620      	mov	r0, r4
 8000930:	bd10      	pop	{r4, pc}

08000932 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000932:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000936:	b11b      	cbz	r3, 8000940 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000938:	6840      	ldr	r0, [r0, #4]
 800093a:	6803      	ldr	r3, [r0, #0]
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	4718      	bx	r3
    }
 8000940:	4618      	mov	r0, r3
 8000942:	4770      	bx	lr

08000944 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000944:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000946:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800094a:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800094e:	4b10      	ldr	r3, [pc, #64]	; (8000990 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000950:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000952:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000954:	d00d      	beq.n	8000972 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 8000956:	b95a      	cbnz	r2, 8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000958:	4a0e      	ldr	r2, [pc, #56]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 800095a:	490f      	ldr	r1, [pc, #60]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800095c:	480f      	ldr	r0, [pc, #60]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800095e:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000960:	4d0f      	ldr	r5, [pc, #60]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000962:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000964:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 8000966:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000968:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800096a:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 800096c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800096e:	701a      	strb	r2, [r3, #0]
    }
 8000970:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000972:	2a00      	cmp	r2, #0
 8000974:	d0fc      	beq.n	8000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8000976:	4809      	ldr	r0, [pc, #36]	; (800099c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 8000978:	4a07      	ldr	r2, [pc, #28]	; (8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 800097a:	8801      	ldrh	r1, [r0, #0]
 800097c:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800097e:	4a05      	ldr	r2, [pc, #20]	; (8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000980:	4d07      	ldr	r5, [pc, #28]	; (80009a0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000982:	8814      	ldrh	r4, [r2, #0]
 8000984:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8000986:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8000988:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800098a:	2200      	movs	r2, #0
 800098c:	e7ef      	b.n	800096e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 800098e:	bf00      	nop
 8000990:	2000a394 	.word	0x2000a394
 8000994:	2000a390 	.word	0x2000a390
 8000998:	2000a396 	.word	0x2000a396
 800099c:	2000a392 	.word	0x2000a392
 80009a0:	2000a398 	.word	0x2000a398

080009a4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009a4:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009a6:	4c0c      	ldr	r4, [pc, #48]	; (80009d8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009a8:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009aa:	b931      	cbnz	r1, 80009ba <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009ac:	4b0b      	ldr	r3, [pc, #44]	; (80009dc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009ae:	4a0c      	ldr	r2, [pc, #48]	; (80009e0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009b0:	480c      	ldr	r0, [pc, #48]	; (80009e4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009b2:	f240 216b 	movw	r1, #619	; 0x26b
 80009b6:	f019 fa43 	bl	8019e40 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ba:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009be:	3a00      	subs	r2, #0
 80009c0:	4909      	ldr	r1, [pc, #36]	; (80009e8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009c2:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009c4:	bf18      	it	ne
 80009c6:	2201      	movne	r2, #1
 80009c8:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009ca:	3b00      	subs	r3, #0
 80009cc:	4a07      	ldr	r2, [pc, #28]	; (80009ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009ce:	bf18      	it	ne
 80009d0:	2301      	movne	r3, #1
 80009d2:	7013      	strb	r3, [r2, #0]
}
 80009d4:	bd10      	pop	{r4, pc}
 80009d6:	bf00      	nop
 80009d8:	20000174 	.word	0x20000174
 80009dc:	0801b0e8 	.word	0x0801b0e8
 80009e0:	0801b120 	.word	0x0801b120
 80009e4:	0801b16e 	.word	0x0801b16e
 80009e8:	2000a39a 	.word	0x2000a39a
 80009ec:	2000a39b 	.word	0x2000a39b

080009f0 <_ZN11TouchGFXHAL10initializeEv>:
{
 80009f0:	b538      	push	{r3, r4, r5, lr}
 80009f2:	4604      	mov	r4, r0
    mcuInstr.init();
 80009f4:	4d09      	ldr	r5, [pc, #36]	; (8000a1c <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80009f6:	f7ff ff11 	bl	800081c <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 80009fa:	4620      	mov	r0, r4
 80009fc:	f000 fcf0 	bl	80013e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000a00:	2300      	movs	r3, #0
 8000a02:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8000a06:	4628      	mov	r0, r5
 8000a08:	f7ff fe04 	bl	8000614 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000a0c:	2301      	movs	r3, #1
 8000a0e:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 8000a12:	4b03      	ldr	r3, [pc, #12]	; (8000a20 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000a14:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000a16:	6163      	str	r3, [r4, #20]
}
 8000a18:	bd38      	pop	{r3, r4, r5, pc}
 8000a1a:	bf00      	nop
 8000a1c:	20000180 	.word	0x20000180
 8000a20:	2000017c 	.word	0x2000017c

08000a24 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a24:	2801      	cmp	r0, #1
    {
 8000a26:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a28:	d80a      	bhi.n	8000a40 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a2a:	784b      	ldrb	r3, [r1, #1]
 8000a2c:	9300      	str	r3, [sp, #0]
 8000a2e:	780b      	ldrb	r3, [r1, #0]
 8000a30:	4808      	ldr	r0, [pc, #32]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a32:	2215      	movs	r2, #21
 8000a34:	2100      	movs	r1, #0
 8000a36:	f003 ffb6 	bl	80049a6 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a3a:	b003      	add	sp, #12
 8000a3c:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a40:	9101      	str	r1, [sp, #4]
 8000a42:	5c0b      	ldrb	r3, [r1, r0]
 8000a44:	9300      	str	r3, [sp, #0]
 8000a46:	2239      	movs	r2, #57	; 0x39
 8000a48:	4603      	mov	r3, r0
 8000a4a:	2100      	movs	r1, #0
 8000a4c:	4801      	ldr	r0, [pc, #4]	; (8000a54 <DSI_IO_WriteCmd+0x30>)
 8000a4e:	f003 ffbb 	bl	80049c8 <HAL_DSI_LongWrite>
    }
 8000a52:	e7f2      	b.n	8000a3a <DSI_IO_WriteCmd+0x16>
 8000a54:	200011e4 	.word	0x200011e4

08000a58 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a58:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a5a:	4a0b      	ldr	r2, [pc, #44]	; (8000a88 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5c:	4c0b      	ldr	r4, [pc, #44]	; (8000a8c <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a5e:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a60:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a62:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a64:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a66:	9201      	str	r2, [sp, #4]
 8000a68:	2244      	movs	r2, #68	; 0x44
 8000a6a:	9200      	str	r2, [sp, #0]
 8000a6c:	2100      	movs	r1, #0
 8000a6e:	2239      	movs	r2, #57	; 0x39
 8000a70:	4620      	mov	r0, r4
 8000a72:	f003 ffa9 	bl	80049c8 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a76:	2100      	movs	r1, #0
 8000a78:	9100      	str	r1, [sp, #0]
 8000a7a:	2335      	movs	r3, #53	; 0x35
 8000a7c:	462a      	mov	r2, r5
 8000a7e:	4620      	mov	r0, r4
 8000a80:	f003 ff91 	bl	80049a6 <HAL_DSI_ShortWrite>
    }
 8000a84:	b003      	add	sp, #12
 8000a86:	bd30      	pop	{r4, r5, pc}
 8000a88:	2000018c 	.word	0x2000018c
 8000a8c:	200011e4 	.word	0x200011e4

08000a90 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a90:	b507      	push	{r0, r1, r2, lr}
 8000a92:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a94:	f7ff ffe0 	bl	8000a58 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a98:	9801      	ldr	r0, [sp, #4]
}
 8000a9a:	b003      	add	sp, #12
 8000a9c:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000aa0:	f000 bc8e 	b.w	80013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000aa4 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000aa4:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000aa6:	4b07      	ldr	r3, [pc, #28]	; (8000ac4 <LCD_SetUpdateRegion+0x20>)
 8000aa8:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aac:	232a      	movs	r3, #42	; 0x2a
 8000aae:	9001      	str	r0, [sp, #4]
 8000ab0:	9300      	str	r3, [sp, #0]
 8000ab2:	2239      	movs	r2, #57	; 0x39
 8000ab4:	2304      	movs	r3, #4
 8000ab6:	2100      	movs	r1, #0
 8000ab8:	4803      	ldr	r0, [pc, #12]	; (8000ac8 <LCD_SetUpdateRegion+0x24>)
 8000aba:	f003 ff85 	bl	80049c8 <HAL_DSI_LongWrite>
    }
 8000abe:	b003      	add	sp, #12
 8000ac0:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ac4:	20000004 	.word	0x20000004
 8000ac8:	200011e4 	.word	0x200011e4

08000acc <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000acc:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ace:	4d15      	ldr	r5, [pc, #84]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ad0:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ad2:	2000      	movs	r0, #0
 8000ad4:	f7ff fe44 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000ad8:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ada:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ade:	3301      	adds	r3, #1
 8000ae0:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ae4:	f000 f902 	bl	8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000ae8:	4b0f      	ldr	r3, [pc, #60]	; (8000b28 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000aea:	6828      	ldr	r0, [r5, #0]
 8000aec:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000aee:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000af0:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000af4:	b123      	cbz	r3, 8000b00 <HAL_DSI_TearingEffectCallback+0x34>
 8000af6:	4d0d      	ldr	r5, [pc, #52]	; (8000b2c <HAL_DSI_TearingEffectCallback+0x60>)
 8000af8:	782b      	ldrb	r3, [r5, #0]
 8000afa:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000afe:	b123      	cbz	r3, 8000b0a <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000b00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000b04:	2000      	movs	r0, #0
 8000b06:	f7ff be47 	b.w	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000b0a:	f009 fa13 	bl	8009f34 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b0e:	4b08      	ldr	r3, [pc, #32]	; (8000b30 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b10:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b12:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b14:	f7ff ffc6 	bl	8000aa4 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b18:	4620      	mov	r0, r4
 8000b1a:	f003 ff34 	bl	8004986 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b1e:	2301      	movs	r3, #1
 8000b20:	702b      	strb	r3, [r5, #0]
    }
 8000b22:	bd70      	pop	{r4, r5, r6, pc}
 8000b24:	2000a39c 	.word	0x2000a39c
 8000b28:	20000014 	.word	0x20000014
 8000b2c:	2000018e 	.word	0x2000018e
 8000b30:	20000178 	.word	0x20000178

08000b34 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b34:	4b33      	ldr	r3, [pc, #204]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b36:	681a      	ldr	r2, [r3, #0]
 8000b38:	3201      	adds	r2, #1
    {
 8000b3a:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8000b3c:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b3e:	4b32      	ldr	r3, [pc, #200]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b40:	4c32      	ldr	r4, [pc, #200]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b42:	6819      	ldr	r1, [r3, #0]
 8000b44:	4b32      	ldr	r3, [pc, #200]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8000b46:	2a03      	cmp	r2, #3
    {
 8000b48:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8000b4a:	dc2e      	bgt.n	8000baa <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8000b50:	f020 0008 	bic.w	r0, r0, #8
 8000b54:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b58:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000b5c:	fb00 1102 	mla	r1, r0, r2, r1
 8000b60:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b64:	bf0c      	ite	eq
 8000b66:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b68:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b6a:	3302      	adds	r3, #2
 8000b6c:	4928      	ldr	r1, [pc, #160]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b6e:	041b      	lsls	r3, r3, #16
 8000b70:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b74:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b76:	4b27      	ldr	r3, [pc, #156]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8000b78:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b7a:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b7e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b82:	4b25      	ldr	r3, [pc, #148]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000b84:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b88:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8000b8a:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b8c:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b8e:	f7ff ff89 	bl	8000aa4 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b92:	4a1e      	ldr	r2, [pc, #120]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b94:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b98:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b9c:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b9e:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000ba2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000ba6:	f003 beee 	b.w	8004986 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000baa:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 8000bae:	f022 0208 	bic.w	r2, r2, #8
 8000bb2:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bb6:	4a19      	ldr	r2, [pc, #100]	; (8000c1c <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000bb8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000bbc:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000bbe:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 8000bc2:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bc4:	4a16      	ldr	r2, [pc, #88]	; (8000c20 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bc6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bca:	4a13      	ldr	r2, [pc, #76]	; (8000c18 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bcc:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bd0:	2201      	movs	r2, #1
 8000bd2:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bd4:	2000      	movs	r0, #0
 8000bd6:	f7ff ff65 	bl	8000aa4 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bda:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bde:	f043 0308 	orr.w	r3, r3, #8
 8000be2:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000be6:	2000      	movs	r0, #0
 8000be8:	f7ff fdd6 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bec:	4b0d      	ldr	r3, [pc, #52]	; (8000c24 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8000bee:	2200      	movs	r2, #0
 8000bf0:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bf2:	4b0d      	ldr	r3, [pc, #52]	; (8000c28 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8000bf4:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bf6:	b120      	cbz	r0, 8000c02 <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8000bf8:	6803      	ldr	r3, [r0, #0]
    }
 8000bfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000bfe:	699b      	ldr	r3, [r3, #24]
 8000c00:	4718      	bx	r3
 8000c02:	bd70      	pop	{r4, r5, r6, pc}
 8000c04:	20000178 	.word	0x20000178
 8000c08:	20000174 	.word	0x20000174
 8000c0c:	40016c00 	.word	0x40016c00
 8000c10:	40016800 	.word	0x40016800
 8000c14:	00ca01e3 	.word	0x00ca01e3
 8000c18:	06800193 	.word	0x06800193
 8000c1c:	00ca01e2 	.word	0x00ca01e2
 8000c20:	00ca0003 	.word	0x00ca0003
 8000c24:	2000018e 	.word	0x2000018e
 8000c28:	2000a39c 	.word	0x2000a39c

08000c2c <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c2c:	b508      	push	{r3, lr}
        return instance;
 8000c2e:	4b04      	ldr	r3, [pc, #16]	; (8000c40 <IdleTaskHook+0x14>)
 8000c30:	4601      	mov	r1, r0
 8000c32:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c34:	b101      	cbz	r1, 8000c38 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c36:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c38:	f009 f996 	bl	8009f68 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c3c:	2001      	movs	r0, #1
 8000c3e:	bd08      	pop	{r3, pc}
 8000c40:	2000a39c 	.word	0x2000a39c

08000c44 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c44:	4b05      	ldr	r3, [pc, #20]	; (8000c5c <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c46:	4806      	ldr	r0, [pc, #24]	; (8000c60 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c48:	2200      	movs	r2, #0
 8000c4a:	605a      	str	r2, [r3, #4]
 8000c4c:	609a      	str	r2, [r3, #8]
 8000c4e:	4a05      	ldr	r2, [pc, #20]	; (8000c64 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c50:	601a      	str	r2, [r3, #0]
 8000c52:	4b05      	ldr	r3, [pc, #20]	; (8000c68 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c54:	6003      	str	r3, [r0, #0]
        init();
 8000c56:	f7ff bd13 	b.w	8000680 <_ZN8touchgfx10KeySampler4initEv>
 8000c5a:	bf00      	nop
 8000c5c:	20000180 	.word	0x20000180
 8000c60:	2000017c 	.word	0x2000017c
 8000c64:	0801b008 	.word	0x0801b008
 8000c68:	0801b030 	.word	0x0801b030

08000c6c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c6c:	2101      	movs	r1, #1
{
 8000c6e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c70:	2200      	movs	r2, #0
 8000c72:	4608      	mov	r0, r1
 8000c74:	f006 f8ae 	bl	8006dd4 <osSemaphoreNew>
 8000c78:	4b0a      	ldr	r3, [pc, #40]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c7a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c7c:	b928      	cbnz	r0, 8000c8a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c7e:	4b0a      	ldr	r3, [pc, #40]	; (8000ca8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c80:	4a0a      	ldr	r2, [pc, #40]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c82:	2125      	movs	r1, #37	; 0x25

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	480a      	ldr	r0, [pc, #40]	; (8000cb0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c86:	f019 f8db 	bl	8019e40 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	2104      	movs	r1, #4
 8000c8e:	2001      	movs	r0, #1
 8000c90:	f006 f966 	bl	8006f60 <osMessageQueueNew>
 8000c94:	4b07      	ldr	r3, [pc, #28]	; (8000cb4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c96:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c98:	b918      	cbnz	r0, 8000ca2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c9a:	4b07      	ldr	r3, [pc, #28]	; (8000cb8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c9c:	4a03      	ldr	r2, [pc, #12]	; (8000cac <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c9e:	2129      	movs	r1, #41	; 0x29
 8000ca0:	e7f0      	b.n	8000c84 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ca2:	bd08      	pop	{r3, pc}
 8000ca4:	20000194 	.word	0x20000194
 8000ca8:	0801b270 	.word	0x0801b270
 8000cac:	0801b2b9 	.word	0x0801b2b9
 8000cb0:	0801b2e8 	.word	0x0801b2e8
 8000cb4:	20000190 	.word	0x20000190
 8000cb8:	0801b336 	.word	0x0801b336

08000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000cbc:	4b02      	ldr	r3, [pc, #8]	; (8000cc8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000cbe:	f04f 31ff 	mov.w	r1, #4294967295
 8000cc2:	6818      	ldr	r0, [r3, #0]
 8000cc4:	f006 b8dc 	b.w	8006e80 <osSemaphoreAcquire>
 8000cc8:	20000194 	.word	0x20000194

08000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000ccc:	4b01      	ldr	r3, [pc, #4]	; (8000cd4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cce:	6818      	ldr	r0, [r3, #0]
 8000cd0:	f006 b910 	b.w	8006ef4 <osSemaphoreRelease>
 8000cd4:	20000194 	.word	0x20000194

08000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cd8:	4b02      	ldr	r3, [pc, #8]	; (8000ce4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cda:	2100      	movs	r1, #0
 8000cdc:	6818      	ldr	r0, [r3, #0]
 8000cde:	f006 b8cf 	b.w	8006e80 <osSemaphoreAcquire>
 8000ce2:	bf00      	nop
 8000ce4:	20000194 	.word	0x20000194

08000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ce8:	f7ff bff0 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cec:	4803      	ldr	r0, [pc, #12]	; (8000cfc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cee:	4904      	ldr	r1, [pc, #16]	; (8000d00 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cf0:	6800      	ldr	r0, [r0, #0]
 8000cf2:	2300      	movs	r3, #0
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	f006 b979 	b.w	8006fec <osMessageQueuePut>
 8000cfa:	bf00      	nop
 8000cfc:	20000190 	.word	0x20000190
 8000d00:	20000018 	.word	0x20000018

08000d04 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000d04:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000d06:	4c08      	ldr	r4, [pc, #32]	; (8000d28 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000d08:	2300      	movs	r3, #0
 8000d0a:	461a      	mov	r2, r3
 8000d0c:	a901      	add	r1, sp, #4
 8000d0e:	6820      	ldr	r0, [r4, #0]
 8000d10:	f006 f9ae 	bl	8007070 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d14:	6820      	ldr	r0, [r4, #0]
 8000d16:	f04f 33ff 	mov.w	r3, #4294967295
 8000d1a:	2200      	movs	r2, #0
 8000d1c:	a901      	add	r1, sp, #4
 8000d1e:	f006 f9a7 	bl	8007070 <osMessageQueueGet>
}
 8000d22:	b002      	add	sp, #8
 8000d24:	bd10      	pop	{r4, pc}
 8000d26:	bf00      	nop
 8000d28:	20000190 	.word	0x20000190

08000d2c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d2c:	6803      	ldr	r3, [r0, #0]
 8000d2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d30:	4718      	bx	r3

08000d32 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000d32:	2000      	movs	r0, #0
 8000d34:	4770      	bx	lr

08000d36 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d36:	6803      	ldr	r3, [r0, #0]
 8000d38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d3a:	4718      	bx	r3

08000d3c <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d3c:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000d40:	4770      	bx	lr
	...

08000d44 <_ZN10STM32F4DMA10initializeEv>:
{
 8000d44:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000d46:	4c07      	ldr	r4, [pc, #28]	; (8000d64 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000d48:	4b07      	ldr	r3, [pc, #28]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000d4a:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000d4c:	4620      	mov	r0, r4
 8000d4e:	f003 f917 	bl	8003f80 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d52:	4b06      	ldr	r3, [pc, #24]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000d54:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000d56:	4b06      	ldr	r3, [pc, #24]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000d58:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5a:	4b06      	ldr	r3, [pc, #24]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000d5c:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d60:	609a      	str	r2, [r3, #8]
}
 8000d62:	bd10      	pop	{r4, pc}
 8000d64:	200011a4 	.word	0x200011a4
 8000d68:	4002b000 	.word	0x4002b000
 8000d6c:	08000ddd 	.word	0x08000ddd
 8000d70:	08000d79 	.word	0x08000d79
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <DMA2D_XferErrorCallback>:
    {
 8000d78:	b508      	push	{r3, lr}
        assert(0);
 8000d7a:	4a03      	ldr	r2, [pc, #12]	; (8000d88 <DMA2D_XferErrorCallback+0x10>)
 8000d7c:	4b03      	ldr	r3, [pc, #12]	; (8000d8c <DMA2D_XferErrorCallback+0x14>)
 8000d7e:	4804      	ldr	r0, [pc, #16]	; (8000d90 <DMA2D_XferErrorCallback+0x18>)
 8000d80:	2136      	movs	r1, #54	; 0x36
 8000d82:	f019 f85d 	bl	8019e40 <__assert_func>
 8000d86:	bf00      	nop
 8000d88:	0801b378 	.word	0x0801b378
 8000d8c:	0801d97a 	.word	0x0801d97a
 8000d90:	0801b3ab 	.word	0x0801b3ab

08000d94 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000d94:	4b08      	ldr	r3, [pc, #32]	; (8000db8 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000d96:	b510      	push	{r4, lr}
 8000d98:	6003      	str	r3, [r0, #0]
 8000d9a:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000d9c:	4807      	ldr	r0, [pc, #28]	; (8000dbc <_ZN10STM32F4DMAD1Ev+0x28>)
 8000d9e:	f003 f9b9 	bl	8004114 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000da2:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000da4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000da8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000dac:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000db0:	f3bf 8f6f 	isb	sy
}
 8000db4:	4620      	mov	r0, r4
 8000db6:	bd10      	pop	{r4, pc}
 8000db8:	0801b400 	.word	0x0801b400
 8000dbc:	200011a4 	.word	0x200011a4
 8000dc0:	e000e100 	.word	0xe000e100

08000dc4 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000dc4:	b510      	push	{r4, lr}
 8000dc6:	4604      	mov	r4, r0
}
 8000dc8:	f7ff ffe4 	bl	8000d94 <_ZN10STM32F4DMAD1Ev>
 8000dcc:	4620      	mov	r0, r4
 8000dce:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000dd2:	f019 f806 	bl	8019de2 <_ZdlPvj>
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	bd10      	pop	{r4, pc}
	...

08000ddc <DMA2D_XferCpltCallback>:
 8000ddc:	4b02      	ldr	r3, [pc, #8]	; (8000de8 <DMA2D_XferCpltCallback+0xc>)
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000de2:	6803      	ldr	r3, [r0, #0]
 8000de4:	695b      	ldr	r3, [r3, #20]
 8000de6:	4718      	bx	r3
 8000de8:	2000a39c 	.word	0x2000a39c

08000dec <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000dec:	4b04      	ldr	r3, [pc, #16]	; (8000e00 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000dee:	681b      	ldr	r3, [r3, #0]
 8000df0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000df4:	b10a      	cbz	r2, 8000dfa <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000df6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000df8:	b900      	cbnz	r0, 8000dfc <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000dfa:	6898      	ldr	r0, [r3, #8]
    }
 8000dfc:	4770      	bx	lr
 8000dfe:	bf00      	nop
 8000e00:	2000a39c 	.word	0x2000a39c

08000e04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e04:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000e08:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0a:	2d20      	cmp	r5, #32
{
 8000e0c:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e0e:	f000 809c 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000e12:	2d40      	cmp	r5, #64	; 0x40
 8000e14:	f000 8099 	beq.w	8000f4a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000e18:	1f2a      	subs	r2, r5, #4
 8000e1a:	4256      	negs	r6, r2
 8000e1c:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000e1e:	2d80      	cmp	r5, #128	; 0x80
 8000e20:	f000 8095 	beq.w	8000f4e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14a>
 8000e24:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000e28:	425d      	negs	r5, r3
 8000e2a:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e2c:	f7ff ffde 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000e30:	6803      	ldr	r3, [r0, #0]
 8000e32:	69db      	ldr	r3, [r3, #28]
 8000e34:	4798      	blx	r3

    switch (blitOp.operation)
 8000e36:	6823      	ldr	r3, [r4, #0]
 8000e38:	2b80      	cmp	r3, #128	; 0x80
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000e3a:	4684      	mov	ip, r0
    switch (blitOp.operation)
 8000e3c:	f000 8096 	beq.w	8000f6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
 8000e40:	f200 8087 	bhi.w	8000f52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
 8000e44:	2b20      	cmp	r3, #32
 8000e46:	f000 8093 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e4a:	2b40      	cmp	r3, #64	; 0x40
 8000e4c:	f000 8090 	beq.w	8000f70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16c>
 8000e50:	2b04      	cmp	r3, #4
 8000e52:	f000 8084 	beq.w	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000e56:	f1bc 0f10 	cmp.w	ip, #16
 8000e5a:	bf0c      	ite	eq
 8000e5c:	2102      	moveq	r1, #2
 8000e5e:	2101      	movne	r1, #1
 8000e60:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e62:	4b4a      	ldr	r3, [pc, #296]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e64:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e68:	f8d3 e000 	ldr.w	lr, [r3]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e6c:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e6e:	f8de 9000 	ldr.w	r9, [lr]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000e72:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e74:	f1bc 0f10 	cmp.w	ip, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e78:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e7c:	bf0c      	ite	eq
 8000e7e:	2002      	moveq	r0, #2
 8000e80:	2001      	movne	r0, #1
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e82:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e86:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000e8a:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000e8c:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000e8e:	f8ce 2000 	str.w	r2, [lr]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e92:	f8de 2034 	ldr.w	r2, [lr, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000e96:	62d9      	str	r1, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000e98:	f022 0207 	bic.w	r2, r2, #7
 8000e9c:	4302      	orrs	r2, r0
 8000e9e:	f8ce 2034 	str.w	r2, [lr, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000ea2:	f8de 2040 	ldr.w	r2, [lr, #64]	; 0x40
 8000ea6:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000eaa:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000eae:	433a      	orrs	r2, r7
 8000eb0:	f8ce 2040 	str.w	r2, [lr, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000eb4:	8aa2      	ldrh	r2, [r4, #20]
 8000eb6:	eba2 0208 	sub.w	r2, r2, r8
 8000eba:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000ebc:	b906      	cbnz	r6, 8000ec0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8000ebe:	b38d      	cbz	r5, 8000f24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
    {
        if (blitOp.alpha < 255)
 8000ec0:	7f22      	ldrb	r2, [r4, #28]
 8000ec2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000ec4:	bf15      	itete	ne
 8000ec6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ec8:	2100      	moveq	r1, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000eca:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000ece:	6319      	streq	r1, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000ed0:	b315      	cbz	r5, 8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        {
            if (bitDepth == 16)
 8000ed2:	f1bc 0f10 	cmp.w	ip, #16
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ed6:	69a1      	ldr	r1, [r4, #24]
 8000ed8:	ea4f 6e02 	mov.w	lr, r2, lsl #24
 8000edc:	d14a      	bne.n	8000f74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x170>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ede:	f04f 081f 	mov.w	r8, #31
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000ee2:	ea01 0208 	and.w	r2, r1, r8
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ee6:	f3c1 2cc4 	ubfx	ip, r1, #11, #5
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000eea:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000eee:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ef2:	ea42 020e 	orr.w	r2, r2, lr
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ef6:	ebcc 2c0c 	rsb	ip, ip, ip, lsl #8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000efa:	f3c1 1145 	ubfx	r1, r1, #5, #6
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000efe:	fbbc fcf8 	udiv	ip, ip, r8
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f02:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000f06:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000f0a:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000f0e:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000f12:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000f16:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f18:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000f1c:	2100      	movs	r1, #0
 8000f1e:	481b      	ldr	r0, [pc, #108]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f20:	f003 f9b8 	bl	8004294 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000f24:	4819      	ldr	r0, [pc, #100]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f26:	2101      	movs	r1, #1
 8000f28:	f003 f9b4 	bl	8004294 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 8000f2c:	8a23      	ldrh	r3, [r4, #16]
 8000f2e:	8a62      	ldrh	r2, [r4, #18]
 8000f30:	b906      	cbnz	r6, 8000f34 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
 8000f32:	b31d      	cbz	r5, 8000f7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000f34:	e9cd 3200 	strd	r3, r2, [sp]
 8000f38:	68e3      	ldr	r3, [r4, #12]
 8000f3a:	6861      	ldr	r1, [r4, #4]
 8000f3c:	4813      	ldr	r0, [pc, #76]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f3e:	461a      	mov	r2, r3
 8000f40:	f003 f868 	bl	8004014 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000f44:	b003      	add	sp, #12
 8000f46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000f4a:	2601      	movs	r6, #1
 8000f4c:	e76a      	b.n	8000e24 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000f4e:	2501      	movs	r5, #1
 8000f50:	e76c      	b.n	8000e2c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000f52:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000f56:	f47f af7e 	bne.w	8000e56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x52>
 8000f5a:	2109      	movs	r1, #9
 8000f5c:	e003      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f5e:	2810      	cmp	r0, #16
 8000f60:	bf0c      	ite	eq
 8000f62:	2102      	moveq	r1, #2
 8000f64:	2101      	movne	r1, #1
    switch (blitOp.operation)
 8000f66:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000f6a:	e77a      	b.n	8000e62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5e>
        dma2dColorMode = CM_A4;
 8000f6c:	210a      	movs	r1, #10
 8000f6e:	e7fa      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
        dma2dColorMode = CM_ARGB8888;
 8000f70:	2100      	movs	r1, #0
 8000f72:	e7f8      	b.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000f74:	ea4e 0101 	orr.w	r1, lr, r1
 8000f78:	6359      	str	r1, [r3, #52]	; 0x34
 8000f7a:	e7cd      	b.n	8000f18 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x114>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000f7c:	9200      	str	r2, [sp, #0]
 8000f7e:	6861      	ldr	r1, [r4, #4]
 8000f80:	68e2      	ldr	r2, [r4, #12]
 8000f82:	4802      	ldr	r0, [pc, #8]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000f84:	f003 f828 	bl	8003fd8 <HAL_DMA2D_Start_IT>
}
 8000f88:	e7dc      	b.n	8000f44 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000f8a:	bf00      	nop
 8000f8c:	200011a4 	.word	0x200011a4

08000f90 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000f92:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000f94:	f7ff ff2a 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8000f98:	6803      	ldr	r3, [r0, #0]
 8000f9a:	69db      	ldr	r3, [r3, #28]
 8000f9c:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000f9e:	2810      	cmp	r0, #16
 8000fa0:	69ab      	ldr	r3, [r5, #24]
 8000fa2:	7f29      	ldrb	r1, [r5, #28]
 8000fa4:	d167      	bne.n	8001076 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe6>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000fa6:	f003 021f 	and.w	r2, r3, #31
 8000faa:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000fae:	201f      	movs	r0, #31
 8000fb0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fb4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fb8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fbc:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fc0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000fc4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fc8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fcc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000fd0:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000fd2:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000fd4:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000fd8:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000fdc:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000fde:	4828      	ldr	r0, [pc, #160]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe0:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fe2:	6802      	ldr	r2, [r0, #0]
        dma2dTransferMode = DMA2D_R2M;
 8000fe4:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fe6:	8a2b      	ldrh	r3, [r5, #16]
 8000fe8:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000fec:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000fee:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000ff0:	bf0c      	ite	eq
 8000ff2:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000ff6:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ffa:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000ffe:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8001000:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8001004:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8001006:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001008:	f023 0307 	bic.w	r3, r3, #7
 800100c:	430b      	orrs	r3, r1
 800100e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001010:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001012:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001016:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800101a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 800101c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8001020:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001022:	d11c      	bne.n	800105e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8001024:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8001026:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 800102a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800102c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8001030:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8001032:	2100      	movs	r1, #0
 8001034:	f003 f92e 	bl	8004294 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8001038:	2101      	movs	r1, #1
 800103a:	4811      	ldr	r0, [pc, #68]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800103c:	f003 f92a 	bl	8004294 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8001040:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8001044:	8a2a      	ldrh	r2, [r5, #16]
 8001046:	8a69      	ldrh	r1, [r5, #18]
 8001048:	d10d      	bne.n	8001066 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 800104a:	68eb      	ldr	r3, [r5, #12]
 800104c:	480c      	ldr	r0, [pc, #48]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 800104e:	e9cd 2100 	strd	r2, r1, [sp]
 8001052:	461a      	mov	r2, r3
 8001054:	4619      	mov	r1, r3
 8001056:	f002 ffdd 	bl	8004014 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 800105a:	b003      	add	sp, #12
 800105c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 800105e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8001060:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8001062:	6283      	str	r3, [r0, #40]	; 0x28
 8001064:	e7e8      	b.n	8001038 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8001066:	9100      	str	r1, [sp, #0]
 8001068:	4613      	mov	r3, r2
 800106a:	4621      	mov	r1, r4
 800106c:	68ea      	ldr	r2, [r5, #12]
 800106e:	4804      	ldr	r0, [pc, #16]	; (8001080 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf0>)
 8001070:	f002 ffb2 	bl	8003fd8 <HAL_DMA2D_Start_IT>
}
 8001074:	e7f1      	b.n	800105a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8001076:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800107a:	2101      	movs	r1, #1
 800107c:	e7ae      	b.n	8000fdc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 800107e:	bf00      	nop
 8001080:	200011a4 	.word	0x200011a4

08001084 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001088:	4625      	mov	r5, r4
 800108a:	4b0a      	ldr	r3, [pc, #40]	; (80010b4 <_ZN10STM32F4DMAC1Ev+0x30>)
 800108c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800108e:	2600      	movs	r6, #0
 8001090:	6060      	str	r0, [r4, #4]
 8001092:	7226      	strb	r6, [r4, #8]
 8001094:	7266      	strb	r6, [r4, #9]
 8001096:	f845 3b20 	str.w	r3, [r5], #32
 800109a:	2260      	movs	r2, #96	; 0x60
 800109c:	4629      	mov	r1, r5
 800109e:	f009 f891 	bl	800a1c4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80010a2:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
        : color(0)
 80010a6:	61ae      	str	r6, [r5, #24]
 80010a8:	3520      	adds	r5, #32
 80010aa:	42ab      	cmp	r3, r5
 80010ac:	d1fb      	bne.n	80010a6 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 80010ae:	4620      	mov	r0, r4
 80010b0:	bd70      	pop	{r4, r5, r6, pc}
 80010b2:	bf00      	nop
 80010b4:	0801b400 	.word	0x0801b400

080010b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010b8:	2001      	movs	r0, #1
 80010ba:	4770      	bx	lr

080010bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010bc:	200c      	movs	r0, #12
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010c0:	230c      	movs	r3, #12
 80010c2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010c6:	3008      	adds	r0, #8
 80010c8:	4770      	bx	lr

080010ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010ca:	230c      	movs	r3, #12
 80010cc:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d0:	3008      	adds	r0, #8
 80010d2:	4770      	bx	lr

080010d4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010d4:	2001      	movs	r0, #1
 80010d6:	4770      	bx	lr

080010d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010d8:	f44f 709e 	mov.w	r0, #316	; 0x13c
 80010dc:	4770      	bx	lr

080010de <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010de:	f44f 739e 	mov.w	r3, #316	; 0x13c
 80010e2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010e6:	3008      	adds	r0, #8
 80010e8:	4770      	bx	lr

080010ea <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ea:	f44f 739e 	mov.w	r3, #316	; 0x13c
 80010ee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010f2:	3008      	adds	r0, #8
 80010f4:	4770      	bx	lr

080010f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010f6:	2001      	movs	r0, #1
 80010f8:	4770      	bx	lr

080010fa <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010fa:	2010      	movs	r0, #16
 80010fc:	4770      	bx	lr

080010fe <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010fe:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001102:	3008      	adds	r0, #8
 8001104:	4770      	bx	lr

08001106 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001106:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800110a:	3008      	adds	r0, #8
 800110c:	4770      	bx	lr

0800110e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 800110e:	4608      	mov	r0, r1
 8001110:	f001 b8e2 	b.w	80022d8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001114:	b510      	push	{r4, lr}
 8001116:	4b03      	ldr	r3, [pc, #12]	; (8001124 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	4604      	mov	r4, r0
 800111c:	f007 ff9a 	bl	8009054 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001120:	4620      	mov	r0, r4
 8001122:	bd10      	pop	{r4, pc}
 8001124:	0801b4b8 	.word	0x0801b4b8

08001128 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001128:	b510      	push	{r4, lr}
 800112a:	4604      	mov	r4, r0
 800112c:	f7ff fff2 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001130:	4620      	mov	r0, r4
 8001132:	2114      	movs	r1, #20
 8001134:	f018 fe55 	bl	8019de2 <_ZdlPvj>
 8001138:	4620      	mov	r0, r4
 800113a:	bd10      	pop	{r4, pc}

0800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800113c:	b510      	push	{r4, lr}
 800113e:	4b03      	ldr	r3, [pc, #12]	; (800114c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001140:	6003      	str	r3, [r0, #0]
 8001142:	4604      	mov	r4, r0
 8001144:	f007 ff86 	bl	8009054 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001148:	4620      	mov	r0, r4
 800114a:	bd10      	pop	{r4, pc}
 800114c:	0801b484 	.word	0x0801b484

08001150 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001150:	b510      	push	{r4, lr}
 8001152:	4604      	mov	r4, r0
 8001154:	f7ff fff2 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001158:	4620      	mov	r0, r4
 800115a:	f44f 71a2 	mov.w	r1, #324	; 0x144
 800115e:	f018 fe40 	bl	8019de2 <_ZdlPvj>
 8001162:	4620      	mov	r0, r4
 8001164:	bd10      	pop	{r4, pc}
	...

08001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001168:	b510      	push	{r4, lr}
 800116a:	4b03      	ldr	r3, [pc, #12]	; (8001178 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800116c:	6003      	str	r3, [r0, #0]
 800116e:	4604      	mov	r4, r0
 8001170:	f007 ff70 	bl	8009054 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001174:	4620      	mov	r0, r4
 8001176:	bd10      	pop	{r4, pc}
 8001178:	0801b450 	.word	0x0801b450

0800117c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800117c:	b510      	push	{r4, lr}
 800117e:	4604      	mov	r4, r0
 8001180:	f7ff fff2 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001184:	4620      	mov	r0, r4
 8001186:	2118      	movs	r1, #24
 8001188:	f018 fe2b 	bl	8019de2 <_ZdlPvj>
 800118c:	4620      	mov	r0, r4
 800118e:	bd10      	pop	{r4, pc}

08001190 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001190:	b510      	push	{r4, lr}
 8001192:	4b08      	ldr	r3, [pc, #32]	; (80011b4 <_ZN12FrontendHeapD1Ev+0x24>)
 8001194:	6003      	str	r3, [r0, #0]
 8001196:	4604      	mov	r4, r0
 8001198:	f500 70b8 	add.w	r0, r0, #368	; 0x170
 800119c:	f7ff ffba 	bl	8001114 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a0:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80011a4:	f7ff ffca 	bl	800113c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011a8:	f104 0014 	add.w	r0, r4, #20
 80011ac:	f7ff ffdc 	bl	8001168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80011b0:	4620      	mov	r0, r4
 80011b2:	bd10      	pop	{r4, pc}
 80011b4:	0801b4ec 	.word	0x0801b4ec

080011b8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80011b8:	b508      	push	{r3, lr}
 80011ba:	4802      	ldr	r0, [pc, #8]	; (80011c4 <__tcf_0+0xc>)
 80011bc:	f7ff ffe8 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011c0:	bd08      	pop	{r3, pc}
 80011c2:	bf00      	nop
 80011c4:	2000019c 	.word	0x2000019c

080011c8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011c8:	b510      	push	{r4, lr}
 80011ca:	4604      	mov	r4, r0
 80011cc:	f7ff ffe0 	bl	8001190 <_ZN12FrontendHeapD1Ev>
 80011d0:	4620      	mov	r0, r4
 80011d2:	f44f 7138 	mov.w	r1, #736	; 0x2e0
 80011d6:	f018 fe04 	bl	8019de2 <_ZdlPvj>
 80011da:	4620      	mov	r0, r4
 80011dc:	bd10      	pop	{r4, pc}
	...

080011e0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011e4:	f000 ff1e 	bl	8002024 <_ZN14BitmapDatabase11getInstanceEv>
 80011e8:	4605      	mov	r5, r0
 80011ea:	f000 ff1f 	bl	800202c <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011ee:	2400      	movs	r4, #0
 80011f0:	4601      	mov	r1, r0
 80011f2:	4623      	mov	r3, r4
 80011f4:	4628      	mov	r0, r5
 80011f6:	4622      	mov	r2, r4
 80011f8:	9400      	str	r4, [sp, #0]
 80011fa:	f00c ffed 	bl	800e1d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011fe:	4b25      	ldr	r3, [pc, #148]	; (8001294 <touchgfx_init+0xb4>)
 8001200:	4a25      	ldr	r2, [pc, #148]	; (8001298 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8001202:	4d26      	ldr	r5, [pc, #152]	; (800129c <touchgfx_init+0xbc>)
 8001204:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001206:	4620      	mov	r0, r4
 8001208:	f001 fc40 	bl	8002a8c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800120c:	4824      	ldr	r0, [pc, #144]	; (80012a0 <touchgfx_init+0xc0>)
 800120e:	f00c ff25 	bl	800e05c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001212:	782b      	ldrb	r3, [r5, #0]
 8001214:	f3bf 8f5b 	dmb	ish
 8001218:	07db      	lsls	r3, r3, #31
 800121a:	d435      	bmi.n	8001288 <touchgfx_init+0xa8>
 800121c:	4628      	mov	r0, r5
 800121e:	f018 fde2 	bl	8019de6 <__cxa_guard_acquire>
 8001222:	b388      	cbz	r0, 8001288 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001224:	4c1f      	ldr	r4, [pc, #124]	; (80012a4 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001226:	4b20      	ldr	r3, [pc, #128]	; (80012a8 <touchgfx_init+0xc8>)
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	f504 76c4 	add.w	r6, r4, #392	; 0x188
 800122e:	f104 0014 	add.w	r0, r4, #20
 8001232:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001236:	f504 77b8 	add.w	r7, r4, #368	; 0x170
 800123a:	6060      	str	r0, [r4, #4]
 800123c:	f8c4 8008 	str.w	r8, [r4, #8]
 8001240:	60e7      	str	r7, [r4, #12]
 8001242:	6126      	str	r6, [r4, #16]
 8001244:	f007 ff08 	bl	8009058 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001248:	4b18      	ldr	r3, [pc, #96]	; (80012ac <touchgfx_init+0xcc>)
 800124a:	6163      	str	r3, [r4, #20]
 800124c:	4640      	mov	r0, r8
 800124e:	f007 ff03 	bl	8009058 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001252:	4b17      	ldr	r3, [pc, #92]	; (80012b0 <touchgfx_init+0xd0>)
 8001254:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001256:	4638      	mov	r0, r7
 8001258:	f007 fefe 	bl	8009058 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800125c:	4b15      	ldr	r3, [pc, #84]	; (80012b4 <touchgfx_init+0xd4>)
 800125e:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 8001262:	f504 70c2 	add.w	r0, r4, #388	; 0x184
 8001266:	f001 fc7b 	bl	8002b60 <_ZN5ModelC1Ev>
 800126a:	4622      	mov	r2, r4
 800126c:	f504 71c2 	add.w	r1, r4, #388	; 0x184
 8001270:	4630      	mov	r0, r6
 8001272:	f001 fc6b 	bl	8002b4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001276:	4630      	mov	r0, r6
 8001278:	f001 f82e 	bl	80022d8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800127c:	480e      	ldr	r0, [pc, #56]	; (80012b8 <touchgfx_init+0xd8>)
 800127e:	f018 fdfd 	bl	8019e7c <atexit>
 8001282:	4628      	mov	r0, r5
 8001284:	f018 fdbb 	bl	8019dfe <__cxa_guard_release>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8001288:	480c      	ldr	r0, [pc, #48]	; (80012bc <touchgfx_init+0xdc>)
}
 800128a:	b002      	add	sp, #8
 800128c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001290:	f7ff bbae 	b.w	80009f0 <_ZN11TouchGFXHAL10initializeEv>
 8001294:	2000a3f8 	.word	0x2000a3f8
 8001298:	2000111c 	.word	0x2000111c
 800129c:	20000198 	.word	0x20000198
 80012a0:	2000001c 	.word	0x2000001c
 80012a4:	2000019c 	.word	0x2000019c
 80012a8:	0801b4ec 	.word	0x0801b4ec
 80012ac:	0801b450 	.word	0x0801b450
 80012b0:	0801b484 	.word	0x0801b484
 80012b4:	0801b4b8 	.word	0x0801b4b8
 80012b8:	080011b9 	.word	0x080011b9
 80012bc:	200010a0 	.word	0x200010a0

080012c0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012c0:	4801      	ldr	r0, [pc, #4]	; (80012c8 <touchgfx_taskEntry+0x8>)
 80012c2:	f7ff badf 	b.w	8000884 <_ZN11TouchGFXHAL9taskEntryEv>
 80012c6:	bf00      	nop
 80012c8:	200010a0 	.word	0x200010a0

080012cc <_GLOBAL__sub_I_touchgfx_init>:
}
 80012cc:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012ce:	4c24      	ldr	r4, [pc, #144]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012d0:	4e24      	ldr	r6, [pc, #144]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012d2:	4b25      	ldr	r3, [pc, #148]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012d4:	4d25      	ldr	r5, [pc, #148]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012d6:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012d8:	4630      	mov	r0, r6
 80012da:	f7ff fed3 	bl	8001084 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012de:	4628      	mov	r0, r5
 80012e0:	f010 f806 	bl	80112f0 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderVariant(HARDWARE)
 80012e4:	4b22      	ldr	r3, [pc, #136]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012e6:	4823      	ldr	r0, [pc, #140]	; (8001374 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012e8:	60dc      	str	r4, [r3, #12]
 80012ea:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012ee:	f8a3 1048 	strh.w	r1, [r3, #72]	; 0x48
 80012f2:	f8a3 1076 	strh.w	r1, [r3, #118]	; 0x76
 80012f6:	2101      	movs	r1, #1
 80012f8:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012fc:	491e      	ldr	r1, [pc, #120]	; (8001378 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012fe:	4c1f      	ldr	r4, [pc, #124]	; (800137c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 8001300:	600b      	str	r3, [r1, #0]
          lastRenderVariant(HARDWARE)
 8001302:	2200      	movs	r2, #0
        DISPLAY_WIDTH = width;
 8001304:	491e      	ldr	r1, [pc, #120]	; (8001380 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001306:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderVariant(HARDWARE)
 8001308:	e9c3 0219 	strd	r0, r2, [r3, #100]	; 0x64
        DISPLAY_WIDTH = width;
 800130c:	f44f 7050 	mov.w	r0, #832	; 0x340
 8001310:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 8001312:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001316:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001318:	4c1a      	ldr	r4, [pc, #104]	; (8001384 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
          lastRenderVariant(HARDWARE)
 800131a:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
        DISPLAY_ROTATION = rotate0;
 800131e:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001320:	4c19      	ldr	r4, [pc, #100]	; (8001388 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
 8001322:	655a      	str	r2, [r3, #84]	; 0x54
          lastRenderVariant(HARDWARE)
 8001324:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001328:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800132c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001330:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001334:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001338:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 800133c:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
 8001340:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001344:	671a      	str	r2, [r3, #112]	; 0x70
 8001346:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800134a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800134e:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001350:	480e      	ldr	r0, [pc, #56]	; (800138c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001352:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001356:	4a0e      	ldr	r2, [pc, #56]	; (8001390 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001358:	8001      	strh	r1, [r0, #0]
 800135a:	601a      	str	r2, [r3, #0]
}
 800135c:	bd70      	pop	{r4, r5, r6, pc}
 800135e:	bf00      	nop
 8001360:	2000047c 	.word	0x2000047c
 8001364:	20000480 	.word	0x20000480
 8001368:	0801b0d8 	.word	0x0801b0d8
 800136c:	20001120 	.word	0x20001120
 8001370:	200010a0 	.word	0x200010a0
 8001374:	01000001 	.word	0x01000001
 8001378:	2000a39c 	.word	0x2000a39c
 800137c:	2000a392 	.word	0x2000a392
 8001380:	2000a390 	.word	0x2000a390
 8001384:	2000a394 	.word	0x2000a394
 8001388:	2000a396 	.word	0x2000a396
 800138c:	2000a398 	.word	0x2000a398
 8001390:	0801b1bc 	.word	0x0801b1bc

08001394 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001394:	4801      	ldr	r0, [pc, #4]	; (800139c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001396:	f7ff bcfd 	b.w	8000d94 <_ZN10STM32F4DMAD1Ev>
 800139a:	bf00      	nop
 800139c:	20000480 	.word	0x20000480

080013a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a0:	4b02      	ldr	r3, [pc, #8]	; (80013ac <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80013a2:	2290      	movs	r2, #144	; 0x90
 80013a4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 80013a8:	4770      	bx	lr
 80013aa:	bf00      	nop
 80013ac:	e000e100 	.word	0xe000e100

080013b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013b0:	4b02      	ldr	r3, [pc, #8]	; (80013bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80013b2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013b6:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80013b8:	4770      	bx	lr
 80013ba:	bf00      	nop
 80013bc:	e000e100 	.word	0xe000e100

080013c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013c0:	4770      	bx	lr

080013c2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013c2:	4770      	bx	lr

080013c4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013c4:	f008 b836 	b.w	8009434 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013c8:	4b04      	ldr	r3, [pc, #16]	; (80013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013ca:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013d6:	f3bf 8f6f 	isb	sy
}
 80013da:	4770      	bx	lr
 80013dc:	e000e100 	.word	0xe000e100

080013e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013e0:	b538      	push	{r3, r4, r5, lr}
 80013e2:	4604      	mov	r4, r0
    HAL::initialize();
 80013e4:	f008 fb1e 	bl	8009a24 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013e8:	6823      	ldr	r3, [r4, #0]
 80013ea:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80013ec:	f00a fa40 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 80013f0:	4601      	mov	r1, r0
 80013f2:	4620      	mov	r0, r4
 80013f4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013f6:	6823      	ldr	r3, [r4, #0]
 80013f8:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 80013fa:	2300      	movs	r3, #0
 80013fc:	461a      	mov	r2, r3
 80013fe:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001402:	4620      	mov	r0, r4
 8001404:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 8001406:	2301      	movs	r3, #1
 8001408:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 800140c:	bd38      	pop	{r3, r4, r5, pc}
	...

08001410 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001410:	4901      	ldr	r1, [pc, #4]	; (8001418 <vApplicationIdleHook+0x8>)
 8001412:	2000      	movs	r0, #0
 8001414:	f007 b942 	b.w	800869c <vTaskSetApplicationTaskTag>
 8001418:	08000c2d 	.word	0x08000c2d

0800141c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800141c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001420:	b0a4      	sub	sp, #144	; 0x90
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001422:	2210      	movs	r2, #16
 8001424:	2100      	movs	r1, #0
 8001426:	a80a      	add	r0, sp, #40	; 0x28
 8001428:	f018 fd96 	bl	8019f58 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800142c:	2214      	movs	r2, #20
 800142e:	2100      	movs	r1, #0
 8001430:	a803      	add	r0, sp, #12
 8001432:	f018 fd91 	bl	8019f58 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001436:	2100      	movs	r1, #0
 8001438:	223c      	movs	r2, #60	; 0x3c
 800143a:	a815      	add	r0, sp, #84	; 0x54
 800143c:	f018 fd8c 	bl	8019f58 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001440:	2400      	movs	r4, #0
 8001442:	4b24      	ldr	r3, [pc, #144]	; (80014d4 <SystemClock_Config+0xb8>)
 8001444:	9401      	str	r4, [sp, #4]
 8001446:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001448:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800144c:	641a      	str	r2, [r3, #64]	; 0x40
 800144e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001450:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001454:	9301      	str	r3, [sp, #4]
 8001456:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001458:	4b1f      	ldr	r3, [pc, #124]	; (80014d8 <SystemClock_Config+0xbc>)
 800145a:	9402      	str	r4, [sp, #8]
 800145c:	681a      	ldr	r2, [r3, #0]
 800145e:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001462:	601a      	str	r2, [r3, #0]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800146a:	9302      	str	r3, [sp, #8]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800146c:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800146e:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001470:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001474:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001478:	2502      	movs	r5, #2
 800147a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800147e:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001482:	f04f 0808 	mov.w	r8, #8
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001486:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001488:	f44f 77b4 	mov.w	r7, #360	; 0x168
  RCC_OscInitStruct.PLL.PLLR = 6;
 800148c:	2606      	movs	r6, #6
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800148e:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001490:	e9cd 3613 	strd	r3, r6, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001494:	e9cd 8710 	strd	r8, r7, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001498:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800149a:	f005 f843 	bl	8006524 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800149e:	f004 fa9d 	bl	80059dc <HAL_PWREx_EnableOverDrive>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014a2:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014a4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014a8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014b0:	e9cd 1306 	strd	r1, r3, [sp, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014b4:	a803      	add	r0, sp, #12
 80014b6:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014b8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014ba:	f004 fe07 	bl	80060cc <HAL_RCC_ClockConfig>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014be:	a815      	add	r0, sp, #84	; 0x54
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80014c0:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 80014c4:	9719      	str	r7, [sp, #100]	; 0x64
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80014c6:	961c      	str	r6, [sp, #112]	; 0x70
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 80014c8:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80014ca:	f004 fec9 	bl	8006260 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 80014ce:	b024      	add	sp, #144	; 0x90
 80014d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014d4:	40023800 	.word	0x40023800
 80014d8:	40007000 	.word	0x40007000

080014dc <main>:
{
 80014dc:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014e0:	b0bd      	sub	sp, #244	; 0xf4
  HAL_Init();
 80014e2:	f002 fb51 	bl	8003b88 <HAL_Init>
  SystemClock_Config();
 80014e6:	f7ff ff99 	bl	800141c <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ea:	2214      	movs	r2, #20
 80014ec:	2100      	movs	r1, #0
 80014ee:	a82f      	add	r0, sp, #188	; 0xbc

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014f2:	f018 fd31 	bl	8019f58 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014f6:	4bc8      	ldr	r3, [pc, #800]	; (8001818 <main+0x33c>)
 80014f8:	9402      	str	r4, [sp, #8]
 80014fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOC_CLK_ENABLE();
  __HAL_RCC_GPIOJ_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014fc:	48c7      	ldr	r0, [pc, #796]	; (800181c <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014fe:	f042 0210 	orr.w	r2, r2, #16
 8001502:	631a      	str	r2, [r3, #48]	; 0x30
 8001504:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001506:	f002 0210 	and.w	r2, r2, #16
 800150a:	9202      	str	r2, [sp, #8]
 800150c:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800150e:	9403      	str	r4, [sp, #12]
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f042 0202 	orr.w	r2, r2, #2
 8001516:	631a      	str	r2, [r3, #48]	; 0x30
 8001518:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151a:	f002 0202 	and.w	r2, r2, #2
 800151e:	9203      	str	r2, [sp, #12]
 8001520:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001522:	9404      	str	r4, [sp, #16]
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800152a:	631a      	str	r2, [r3, #48]	; 0x30
 800152c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001532:	9204      	str	r2, [sp, #16]
 8001534:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001536:	9405      	str	r4, [sp, #20]
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f042 0208 	orr.w	r2, r2, #8
 800153e:	631a      	str	r2, [r3, #48]	; 0x30
 8001540:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001542:	f002 0208 	and.w	r2, r2, #8
 8001546:	9205      	str	r2, [sp, #20]
 8001548:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800154a:	9406      	str	r4, [sp, #24]
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001552:	631a      	str	r2, [r3, #48]	; 0x30
 8001554:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001556:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800155a:	9206      	str	r2, [sp, #24]
 800155c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800155e:	9407      	str	r4, [sp, #28]
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f042 0220 	orr.w	r2, r2, #32
 8001566:	631a      	str	r2, [r3, #48]	; 0x30
 8001568:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156a:	f002 0220 	and.w	r2, r2, #32
 800156e:	9207      	str	r2, [sp, #28]
 8001570:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001572:	9408      	str	r4, [sp, #32]
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800157a:	631a      	str	r2, [r3, #48]	; 0x30
 800157c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800157e:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001582:	9208      	str	r2, [sp, #32]
 8001584:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001586:	9409      	str	r4, [sp, #36]	; 0x24
 8001588:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800158a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800158e:	631a      	str	r2, [r3, #48]	; 0x30
 8001590:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001592:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001596:	9209      	str	r2, [sp, #36]	; 0x24
 8001598:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800159a:	940a      	str	r4, [sp, #40]	; 0x28
 800159c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159e:	f042 0204 	orr.w	r2, r2, #4
 80015a2:	631a      	str	r2, [r3, #48]	; 0x30
 80015a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a6:	f002 0204 	and.w	r2, r2, #4
 80015aa:	920a      	str	r2, [sp, #40]	; 0x28
 80015ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015ae:	940b      	str	r4, [sp, #44]	; 0x2c
 80015b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80015b6:	631a      	str	r2, [r3, #48]	; 0x30
 80015b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015ba:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80015be:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015c0:	2201      	movs	r2, #1
 80015c2:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80015c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80015c6:	f003 fc07 	bl	8004dd8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 80015ca:	4895      	ldr	r0, [pc, #596]	; (8001820 <main+0x344>)
 80015cc:	4622      	mov	r2, r4
 80015ce:	2110      	movs	r1, #16
 80015d0:	f003 fc02 	bl	8004dd8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015d4:	4893      	ldr	r0, [pc, #588]	; (8001824 <main+0x348>)
 80015d6:	4622      	mov	r2, r4
 80015d8:	2140      	movs	r1, #64	; 0x40
 80015da:	f003 fbfd 	bl	8004dd8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015de:	4622      	mov	r2, r4
 80015e0:	4891      	ldr	r0, [pc, #580]	; (8001828 <main+0x34c>)
 80015e2:	2180      	movs	r1, #128	; 0x80
 80015e4:	f003 fbf8 	bl	8004dd8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015e8:	2611      	movs	r6, #17
 80015ea:	2308      	movs	r3, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015ec:	488b      	ldr	r0, [pc, #556]	; (800181c <main+0x340>)
 80015ee:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : RENDER_TIME_Pin */
  GPIO_InitStruct.Pin = RENDER_TIME_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	2701      	movs	r7, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f2:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015f6:	e9cd 362f 	strd	r3, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fa:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fe:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001602:	f003 fa59 	bl	8004ab8 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001606:	4886      	ldr	r0, [pc, #536]	; (8001820 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001608:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 800160a:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800160c:	e9cd a72f 	strd	sl, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001610:	f8cd 80c8 	str.w	r8, [sp, #200]	; 0xc8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 8001614:	f003 fa50 	bl	8004ab8 <HAL_GPIO_Init>

  /*Configure GPIO pin : VSYNC_FREQ_Pin */
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8001618:	2340      	movs	r3, #64	; 0x40
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800161a:	4882      	ldr	r0, [pc, #520]	; (8001824 <main+0x348>)
 800161c:	a92f      	add	r1, sp, #188	; 0xbc

  /*Configure GPIO pin : PH7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800161e:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001620:	e9cd 372f 	strd	r3, r7, [sp, #188]	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001624:	e9cd 4831 	strd	r4, r8, [sp, #196]	; 0xc4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8001628:	f003 fa46 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800162c:	a92f      	add	r1, sp, #188	; 0xbc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800162e:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001630:	487d      	ldr	r0, [pc, #500]	; (8001828 <main+0x34c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001632:	9332      	str	r3, [sp, #200]	; 0xc8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001634:	e9cd 562f 	strd	r5, r6, [sp, #188]	; 0xbc
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001638:	9431      	str	r4, [sp, #196]	; 0xc4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800163a:	f003 fa3d 	bl	8004ab8 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800163e:	487b      	ldr	r0, [pc, #492]	; (800182c <main+0x350>)
  hdma2d.Instance = DMA2D;
 8001640:	4e7b      	ldr	r6, [pc, #492]	; (8001830 <main+0x354>)
  hcrc.Instance = CRC;
 8001642:	4b7c      	ldr	r3, [pc, #496]	; (8001834 <main+0x358>)
 8001644:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001646:	f002 fb45 	bl	8003cd4 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800164a:	4b7b      	ldr	r3, [pc, #492]	; (8001838 <main+0x35c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800164c:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001650:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001654:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001656:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800165a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800165e:	f002 fc8f 	bl	8003f80 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001662:	4639      	mov	r1, r7
 8001664:	4630      	mov	r0, r6
 8001666:	f002 fe15 	bl	8004294 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800166a:	4629      	mov	r1, r5
 800166c:	4622      	mov	r2, r4
 800166e:	486e      	ldr	r0, [pc, #440]	; (8001828 <main+0x34c>)
  hdsi.Instance = DSI;
 8001670:	4e72      	ldr	r6, [pc, #456]	; (800183c <main+0x360>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001672:	f003 fbb1 	bl	8004dd8 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001676:	2014      	movs	r0, #20
 8001678:	f002 fab2 	bl	8003be0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 800167c:	4629      	mov	r1, r5
 800167e:	463a      	mov	r2, r7
 8001680:	4869      	ldr	r0, [pc, #420]	; (8001828 <main+0x34c>)
 8001682:	f003 fba9 	bl	8004dd8 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001686:	200a      	movs	r0, #10
 8001688:	f002 faaa 	bl	8003be0 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800168c:	2224      	movs	r2, #36	; 0x24
 800168e:	4621      	mov	r1, r4
 8001690:	a815      	add	r0, sp, #84	; 0x54
  DSI_PLLInitTypeDef PLLInit = {0};
 8001692:	940e      	str	r4, [sp, #56]	; 0x38
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001694:	f018 fc60 	bl	8019f58 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001698:	2218      	movs	r2, #24
 800169a:	4621      	mov	r1, r4
 800169c:	a80f      	add	r0, sp, #60	; 0x3c
 800169e:	f018 fc5b 	bl	8019f58 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80016a2:	2234      	movs	r2, #52	; 0x34
 80016a4:	4621      	mov	r1, r4
 80016a6:	a82f      	add	r0, sp, #188	; 0xbc
 80016a8:	f018 fc56 	bl	8019f58 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80016ac:	222c      	movs	r2, #44	; 0x2c
 80016ae:	4621      	mov	r1, r4
 80016b0:	a822      	add	r0, sp, #136	; 0x88
 80016b2:	f018 fc51 	bl	8019f58 <memset>
  hdsi.Instance = DSI;
 80016b6:	4b62      	ldr	r3, [pc, #392]	; (8001840 <main+0x364>)
  hdsi.Init.TXEscapeCkdiv = 4;
 80016b8:	2504      	movs	r5, #4
  PLLInit.PLLNDIV = 125;
 80016ba:	227d      	movs	r2, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016bc:	a90c      	add	r1, sp, #48	; 0x30
 80016be:	4630      	mov	r0, r6
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 80016c0:	e9c6 3400 	strd	r3, r4, [r6]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 80016c4:	e9cd 280c 	strd	r2, r8, [sp, #48]	; 0x30
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 80016c8:	e9c6 5702 	strd	r5, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 80016cc:	f002 feaa 	bl	8004424 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016d0:	a915      	add	r1, sp, #84	; 0x54
 80016d2:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016d4:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016d8:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016dc:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016e0:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016e4:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016e6:	f003 f8c5 	bl	8004874 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016ea:	231c      	movs	r3, #28
 80016ec:	2221      	movs	r2, #33	; 0x21
 80016ee:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016f2:	210f      	movs	r1, #15
 80016f4:	2219      	movs	r2, #25
 80016f6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016fa:	4630      	mov	r0, r6
 80016fc:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016fe:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001702:	f003 f87a 	bl	80047fa <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001706:	4629      	mov	r1, r5
 8001708:	4630      	mov	r0, r6
 800170a:	f003 f865 	bl	80047d8 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 800170e:	f242 7110 	movw	r1, #10000	; 0x2710
 8001712:	4630      	mov	r0, r6
 8001714:	f003 f9b9 	bl	8004a8a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001718:	4621      	mov	r1, r4
 800171a:	4630      	mov	r0, r6
 800171c:	f002 fe1f 	bl	800435e <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001720:	f44f 7080 	mov.w	r0, #256	; 0x100
 8001724:	f44f 7200 	mov.w	r2, #512	; 0x200
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001728:	f44f 6980 	mov.w	r9, #1024	; 0x400
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 800172c:	e9cd 022f 	strd	r0, r2, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001730:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001734:	e9cd 9231 	strd	r9, r2, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001738:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800173c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001740:	e9cd 2133 	strd	r2, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001744:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001748:	f44f 3180 	mov.w	r1, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800174c:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001750:	e9cd 3135 	strd	r3, r1, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001754:	f44f 2180 	mov.w	r1, #262144	; 0x40000
 8001758:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800175c:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001760:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001764:	e9cd e139 	strd	lr, r1, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001768:	4630      	mov	r0, r6
 800176a:	a92f      	add	r1, sp, #188	; 0xbc
  CmdCfg.CommandSize = 200;
 800176c:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001770:	f8cd 80ec 	str.w	r8, [sp, #236]	; 0xec
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001774:	f002 fffc 	bl	8004770 <HAL_DSI_ConfigCommand>
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001778:	a922      	add	r1, sp, #136	; 0x88
 800177a:	4630      	mov	r0, r6
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 800177c:	e9cd 4526 	strd	r4, r5, [sp, #152]	; 0x98
  CmdCfg.ColorCoding = DSI_RGB565;
 8001780:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001784:	e9cd ba24 	strd	fp, sl, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001788:	e9cd 8428 	strd	r8, r4, [sp, #160]	; 0xa0
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800178c:	e9cd 442a 	strd	r4, r4, [sp, #168]	; 0xa8
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001790:	972c      	str	r7, [sp, #176]	; 0xb0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001792:	f002 ff7b 	bl	800468c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001796:	4621      	mov	r1, r4
 8001798:	4630      	mov	r0, r6
 800179a:	f002 ff66 	bl	800466a <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800179e:	4829      	ldr	r0, [pc, #164]	; (8001844 <main+0x368>)
 80017a0:	4929      	ldr	r1, [pc, #164]	; (8001848 <main+0x36c>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80017a2:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80017a4:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80017a8:	2340      	movs	r3, #64	; 0x40
 80017aa:	2120      	movs	r1, #32
 80017ac:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017b4:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80017b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80017bc:	e9c0 2309 	strd	r2, r3, [r0, #36]	; 0x24
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017c0:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.WriteRecoveryTime = 3;
 80017c4:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017c6:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017c8:	a92f      	add	r1, sp, #188	; 0xbc
  SdramTiming.RPDelay = 2;
 80017ca:	e9cd 3833 	strd	r3, r8, [sp, #204]	; 0xcc
  SdramTiming.SelfRefreshTime = 4;
 80017ce:	e9cd 2530 	strd	r2, r5, [sp, #192]	; 0xc0
  SdramTiming.RowCycleDelay = 7;
 80017d2:	9232      	str	r2, [sp, #200]	; 0xc8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80017d4:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017d8:	f8cd 80bc 	str.w	r8, [sp, #188]	; 0xbc
  SdramTiming.RCDDelay = 2;
 80017dc:	f8cd 80d4 	str.w	r8, [sp, #212]	; 0xd4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e0:	f005 f82a 	bl	8006838 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017e4:	f002 f8fe 	bl	80039e4 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017e8:	f002 f8ae 	bl	8003948 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017ec:	2234      	movs	r2, #52	; 0x34
 80017ee:	4621      	mov	r1, r4
 80017f0:	a815      	add	r0, sp, #84	; 0x54
 80017f2:	f018 fbb1 	bl	8019f58 <memset>
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80017f6:	2234      	movs	r2, #52	; 0x34
 80017f8:	4621      	mov	r1, r4
 80017fa:	a822      	add	r0, sp, #136	; 0x88
  hltdc.Instance = LTDC;
 80017fc:	4d13      	ldr	r5, [pc, #76]	; (800184c <main+0x370>)
  LTDC_LayerCfgTypeDef pLayerCfg1 = {0};
 80017fe:	f018 fbab 	bl	8019f58 <memset>
  hltdc.Instance = LTDC;
 8001802:	4b13      	ldr	r3, [pc, #76]	; (8001850 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 8001804:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001806:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 800180a:	22ca      	movs	r2, #202	; 0xca
 800180c:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001810:	e9c5 2309 	strd	r2, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8001814:	21cb      	movs	r1, #203	; 0xcb
 8001816:	e01d      	b.n	8001854 <main+0x378>
 8001818:	40023800 	.word	0x40023800
 800181c:	40022800 	.word	0x40022800
 8001820:	40020c00 	.word	0x40020c00
 8001824:	40021800 	.word	0x40021800
 8001828:	40021c00 	.word	0x40021c00
 800182c:	2000119c 	.word	0x2000119c
 8001830:	200011a4 	.word	0x200011a4
 8001834:	40023000 	.word	0x40023000
 8001838:	4002b000 	.word	0x4002b000
 800183c:	200011e4 	.word	0x200011e4
 8001840:	40016c00 	.word	0x40016c00
 8001844:	20001348 	.word	0x20001348
 8001848:	a0000140 	.word	0xa0000140
 800184c:	20001254 	.word	0x20001254
 8001850:	40016800 	.word	0x40016800
 8001854:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001858:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 800185a:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800185e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 8001862:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8001866:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 800186a:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 800186e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001872:	f003 ff7d 	bl	8005770 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001876:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowY1 = 480;
 8001878:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 800187c:	e9cd 341a 	strd	r3, r4, [sp, #104]	; 0x68
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001880:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001884:	2305      	movs	r3, #5
 8001886:	e9cd 311d 	strd	r3, r1, [sp, #116]	; 0x74
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800188a:	e9cd 2818 	strd	r2, r8, [sp, #96]	; 0x60
  pLayerCfg.ImageHeight = 480;
 800188e:	e9cd b21f 	strd	fp, r2, [sp, #124]	; 0x7c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001892:	a915      	add	r1, sp, #84	; 0x54
 8001894:	4622      	mov	r2, r4
 8001896:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 200;
 8001898:	e9cd 4b15 	strd	r4, fp, [sp, #84]	; 0x54
  pLayerCfg.WindowY0 = 0;
 800189c:	9417      	str	r4, [sp, #92]	; 0x5c
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800189e:	f8cd 9070 	str.w	r9, [sp, #112]	; 0x70
  pLayerCfg.Backcolor.Blue = 0;
 80018a2:	f8ad 4084 	strh.w	r4, [sp, #132]	; 0x84
  pLayerCfg.Backcolor.Red = 0;
 80018a6:	f88d 4086 	strb.w	r4, [sp, #134]	; 0x86
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80018aa:	f004 f82d 	bl	8005908 <HAL_LTDC_ConfigLayer>
  pLayerCfg1.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80018ae:	2305      	movs	r3, #5
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018b0:	a922      	add	r1, sp, #136	; 0x88
 80018b2:	463a      	mov	r2, r7
 80018b4:	4628      	mov	r0, r5
  pLayerCfg1.FBStartAdress = 0;
 80018b6:	e9cd 342a 	strd	r3, r4, [sp, #168]	; 0xa8
  pLayerCfg1.WindowX1 = 0;
 80018ba:	e9cd 4422 	strd	r4, r4, [sp, #136]	; 0x88
  pLayerCfg1.WindowY1 = 0;
 80018be:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  pLayerCfg1.Alpha = 0;
 80018c2:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  pLayerCfg1.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 80018c6:	e9cd 4928 	strd	r4, r9, [sp, #160]	; 0xa0
  pLayerCfg1.ImageHeight = 0;
 80018ca:	e9cd 442c 	strd	r4, r4, [sp, #176]	; 0xb0
  pLayerCfg1.Backcolor.Blue = 0;
 80018ce:	f8ad 40b8 	strh.w	r4, [sp, #184]	; 0xb8
  pLayerCfg1.Backcolor.Red = 0;
 80018d2:	f88d 40ba 	strb.w	r4, [sp, #186]	; 0xba
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg1, 1) != HAL_OK)
 80018d6:	f004 f817 	bl	8005908 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 80018da:	682a      	ldr	r2, [r5, #0]
 80018dc:	6993      	ldr	r3, [r2, #24]
 80018de:	f023 0301 	bic.w	r3, r3, #1
 80018e2:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 80018e4:	4630      	mov	r0, r6
 80018e6:	f003 f82b 	bl	8004940 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 80018ea:	4639      	mov	r1, r7
 80018ec:	4640      	mov	r0, r8
 80018ee:	f001 f9ef 	bl	8002cd0 <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 80018f2:	2328      	movs	r3, #40	; 0x28
 80018f4:	2215      	movs	r2, #21
 80018f6:	4621      	mov	r1, r4
 80018f8:	9400      	str	r4, [sp, #0]
 80018fa:	4630      	mov	r0, r6
 80018fc:	f003 f853 	bl	80049a6 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001900:	a92f      	add	r1, sp, #188	; 0xbc
 8001902:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001904:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001908:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 800190c:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001910:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001914:	e9cd 4437 	strd	r4, r4, [sp, #220]	; 0xdc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001918:	9439      	str	r4, [sp, #228]	; 0xe4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 800191a:	f002 ff29 	bl	8004770 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 800191e:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001922:	4622      	mov	r2, r4
 8001924:	4628      	mov	r0, r5
 8001926:	f004 f81d 	bl	8005964 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 800192a:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 800192c:	481c      	ldr	r0, [pc, #112]	; (80019a0 <main+0x4c4>)
  __HAL_LTDC_ENABLE(&hltdc);
 800192e:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 8001930:	4d1c      	ldr	r5, [pc, #112]	; (80019a4 <main+0x4c8>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001932:	433b      	orrs	r3, r7
 8001934:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8001936:	4b1c      	ldr	r3, [pc, #112]	; (80019a8 <main+0x4cc>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001938:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 800193a:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 800193e:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8001940:	e9c0 3904 	strd	r3, r9, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8001944:	e9c0 7a02 	strd	r7, sl, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 8001948:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800194c:	f004 f954 	bl	8005bf8 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8001950:	f001 fec0 	bl	80036d4 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8001954:	f001 fdf4 	bl	8003540 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8001958:	f001 fd6a 	bl	8003430 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 800195c:	4813      	ldr	r0, [pc, #76]	; (80019ac <main+0x4d0>)
 800195e:	4b14      	ldr	r3, [pc, #80]	; (80019b0 <main+0x4d4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001960:	622c      	str	r4, [r5, #32]
  hi2c1.Init.ClockSpeed = 400000;
 8001962:	e9c5 0300 	strd	r0, r3, [r5]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001966:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800196a:	4628      	mov	r0, r5
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800196c:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c1.Init.OwnAddress1 = 0;
 8001970:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001974:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001978:	f003 fc16 	bl	80051a8 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 800197c:	4628      	mov	r0, r5
 800197e:	f003 fcbb 	bl	80052f8 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 8001982:	f7fe fe38 	bl	80005f6 <MX_TouchGFX_Init>
  osKernelInitialize();
 8001986:	f005 f995 	bl	8006cb4 <osKernelInitialize>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800198a:	4a0a      	ldr	r2, [pc, #40]	; (80019b4 <main+0x4d8>)
 800198c:	480a      	ldr	r0, [pc, #40]	; (80019b8 <main+0x4dc>)
 800198e:	4621      	mov	r1, r4
 8001990:	f005 f9ca 	bl	8006d28 <osThreadNew>
 8001994:	4b09      	ldr	r3, [pc, #36]	; (80019bc <main+0x4e0>)
 8001996:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001998:	f005 f9a6 	bl	8006ce8 <osKernelStart>
  while (1)
 800199c:	e7fe      	b.n	800199c <main+0x4c0>
 800199e:	bf00      	nop
 80019a0:	200012fc 	.word	0x200012fc
 80019a4:	20001200 	.word	0x20001200
 80019a8:	a0001000 	.word	0xa0001000
 80019ac:	40005400 	.word	0x40005400
 80019b0:	00061a80 	.word	0x00061a80
 80019b4:	0801b508 	.word	0x0801b508
 80019b8:	080005fb 	.word	0x080005fb
 80019bc:	20001198 	.word	0x20001198

080019c0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80019c0:	6802      	ldr	r2, [r0, #0]
 80019c2:	4b03      	ldr	r3, [pc, #12]	; (80019d0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80019c4:	429a      	cmp	r2, r3
 80019c6:	d101      	bne.n	80019cc <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80019c8:	f002 b8f8 	b.w	8003bbc <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80019cc:	4770      	bx	lr
 80019ce:	bf00      	nop
 80019d0:	40001000 	.word	0x40001000

080019d4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019d4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019d6:	4b0e      	ldr	r3, [pc, #56]	; (8001a10 <HAL_MspInit+0x3c>)
 80019d8:	2200      	movs	r2, #0
 80019da:	9200      	str	r2, [sp, #0]
 80019dc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019de:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019e2:	6459      	str	r1, [r3, #68]	; 0x44
 80019e4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019e6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019ea:	9100      	str	r1, [sp, #0]
 80019ec:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019ee:	9201      	str	r2, [sp, #4]
 80019f0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019f2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019f6:	6419      	str	r1, [r3, #64]	; 0x40
 80019f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019fa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019fe:	9301      	str	r3, [sp, #4]
 8001a00:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a02:	210f      	movs	r1, #15
 8001a04:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001a08:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001a0a:	f002 b90f 	b.w	8003c2c <HAL_NVIC_SetPriority>
 8001a0e:	bf00      	nop
 8001a10:	40023800 	.word	0x40023800

08001a14 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a14:	6802      	ldr	r2, [r0, #0]
 8001a16:	4b09      	ldr	r3, [pc, #36]	; (8001a3c <HAL_CRC_MspInit+0x28>)
 8001a18:	429a      	cmp	r2, r3
{
 8001a1a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a1c:	d10b      	bne.n	8001a36 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a1e:	2300      	movs	r3, #0
 8001a20:	9301      	str	r3, [sp, #4]
 8001a22:	4b07      	ldr	r3, [pc, #28]	; (8001a40 <HAL_CRC_MspInit+0x2c>)
 8001a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a26:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a2e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a32:	9301      	str	r3, [sp, #4]
 8001a34:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a36:	b002      	add	sp, #8
 8001a38:	4770      	bx	lr
 8001a3a:	bf00      	nop
 8001a3c:	40023000 	.word	0x40023000
 8001a40:	40023800 	.word	0x40023800

08001a44 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001a44:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001a46:	4b0f      	ldr	r3, [pc, #60]	; (8001a84 <HAL_DMA2D_MspInit+0x40>)
 8001a48:	6802      	ldr	r2, [r0, #0]
 8001a4a:	429a      	cmp	r2, r3
 8001a4c:	d116      	bne.n	8001a7c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a4e:	2200      	movs	r2, #0
 8001a50:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001a54:	9201      	str	r2, [sp, #4]
 8001a56:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001a58:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001a5c:	6319      	str	r1, [r3, #48]	; 0x30
 8001a5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a60:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a64:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a66:	2105      	movs	r1, #5
 8001a68:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a6a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a6c:	f002 f8de 	bl	8003c2c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a70:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a72:	b003      	add	sp, #12
 8001a74:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a78:	f002 b90a 	b.w	8003c90 <HAL_NVIC_EnableIRQ>
}
 8001a7c:	b003      	add	sp, #12
 8001a7e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a82:	bf00      	nop
 8001a84:	4002b000 	.word	0x4002b000

08001a88 <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8001a88:	6802      	ldr	r2, [r0, #0]
 8001a8a:	4b06      	ldr	r3, [pc, #24]	; (8001aa4 <HAL_DMA2D_MspDeInit+0x1c>)
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	d107      	bne.n	8001aa0 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 8001a90:	4a05      	ldr	r2, [pc, #20]	; (8001aa8 <HAL_DMA2D_MspDeInit+0x20>)
 8001a92:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a94:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001a98:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 8001a9a:	205a      	movs	r0, #90	; 0x5a
 8001a9c:	f002 b906 	b.w	8003cac <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop
 8001aa4:	4002b000 	.word	0x4002b000
 8001aa8:	40023800 	.word	0x40023800

08001aac <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001aac:	b510      	push	{r4, lr}
 8001aae:	4604      	mov	r4, r0
 8001ab0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ab2:	2214      	movs	r2, #20
 8001ab4:	2100      	movs	r1, #0
 8001ab6:	a803      	add	r0, sp, #12
 8001ab8:	f018 fa4e 	bl	8019f58 <memset>
  if(hdsi->Instance==DSI)
 8001abc:	6822      	ldr	r2, [r4, #0]
 8001abe:	4b17      	ldr	r3, [pc, #92]	; (8001b1c <HAL_DSI_MspInit+0x70>)
 8001ac0:	429a      	cmp	r2, r3
 8001ac2:	d128      	bne.n	8001b16 <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ac4:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001ac8:	2400      	movs	r4, #0
 8001aca:	9401      	str	r4, [sp, #4]
 8001acc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001ace:	4814      	ldr	r0, [pc, #80]	; (8001b20 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001ad0:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001ad4:	645a      	str	r2, [r3, #68]	; 0x44
 8001ad6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ad8:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001adc:	9201      	str	r2, [sp, #4]
 8001ade:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001ae0:	9402      	str	r4, [sp, #8]
 8001ae2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ae4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ae8:	631a      	str	r2, [r3, #48]	; 0x30
 8001aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aec:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001af0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af2:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001af4:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001af6:	2302      	movs	r3, #2
 8001af8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001afc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001afe:	230d      	movs	r3, #13
 8001b00:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001b02:	f002 ffd9 	bl	8004ab8 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001b06:	205c      	movs	r0, #92	; 0x5c
 8001b08:	4622      	mov	r2, r4
 8001b0a:	2105      	movs	r1, #5
 8001b0c:	f002 f88e 	bl	8003c2c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001b10:	205c      	movs	r0, #92	; 0x5c
 8001b12:	f002 f8bd 	bl	8003c90 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001b16:	b008      	add	sp, #32
 8001b18:	bd10      	pop	{r4, pc}
 8001b1a:	bf00      	nop
 8001b1c:	40016c00 	.word	0x40016c00
 8001b20:	40022400 	.word	0x40022400

08001b24 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b24:	b530      	push	{r4, r5, lr}
 8001b26:	4604      	mov	r4, r0
 8001b28:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b2a:	2214      	movs	r2, #20
 8001b2c:	2100      	movs	r1, #0
 8001b2e:	a803      	add	r0, sp, #12
 8001b30:	f018 fa12 	bl	8019f58 <memset>
  if(hi2c->Instance==I2C1)
 8001b34:	6822      	ldr	r2, [r4, #0]
 8001b36:	4b1a      	ldr	r3, [pc, #104]	; (8001ba0 <HAL_I2C_MspInit+0x7c>)
 8001b38:	429a      	cmp	r2, r3
 8001b3a:	d12f      	bne.n	8001b9c <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b3c:	4c19      	ldr	r4, [pc, #100]	; (8001ba4 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b3e:	481a      	ldr	r0, [pc, #104]	; (8001ba8 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b40:	2500      	movs	r5, #0
 8001b42:	9501      	str	r5, [sp, #4]
 8001b44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b46:	f043 0302 	orr.w	r3, r3, #2
 8001b4a:	6323      	str	r3, [r4, #48]	; 0x30
 8001b4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b4e:	f003 0302 	and.w	r3, r3, #2
 8001b52:	9301      	str	r3, [sp, #4]
 8001b54:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b56:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001b5a:	2312      	movs	r3, #18
 8001b5c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b60:	2101      	movs	r1, #1
 8001b62:	2303      	movs	r3, #3
 8001b64:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b68:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b6a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001b6c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b6e:	f002 ffa3 	bl	8004ab8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001b72:	9502      	str	r5, [sp, #8]
 8001b74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b76:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b7a:	6423      	str	r3, [r4, #64]	; 0x40
 8001b7c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001b7e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001b82:	9302      	str	r3, [sp, #8]
 8001b84:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b86:	6a23      	ldr	r3, [r4, #32]
 8001b88:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b8c:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b8e:	6a23      	ldr	r3, [r4, #32]
 8001b90:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b94:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b96:	2064      	movs	r0, #100	; 0x64
 8001b98:	f002 f822 	bl	8003be0 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b9c:	b009      	add	sp, #36	; 0x24
 8001b9e:	bd30      	pop	{r4, r5, pc}
 8001ba0:	40005400 	.word	0x40005400
 8001ba4:	40023800 	.word	0x40023800
 8001ba8:	40020400 	.word	0x40020400

08001bac <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001bac:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001bae:	6802      	ldr	r2, [r0, #0]
 8001bb0:	4b0a      	ldr	r3, [pc, #40]	; (8001bdc <HAL_I2C_MspDeInit+0x30>)
 8001bb2:	429a      	cmp	r2, r3
 8001bb4:	d110      	bne.n	8001bd8 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bb6:	4a0a      	ldr	r2, [pc, #40]	; (8001be0 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bb8:	480a      	ldr	r0, [pc, #40]	; (8001be4 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001bba:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001bbc:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001bc0:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001bc2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001bc6:	f003 f85f 	bl	8004c88 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001bca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001bce:	4805      	ldr	r0, [pc, #20]	; (8001be4 <HAL_I2C_MspDeInit+0x38>)
 8001bd0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001bd4:	f003 b858 	b.w	8004c88 <HAL_GPIO_DeInit>
}
 8001bd8:	bd08      	pop	{r3, pc}
 8001bda:	bf00      	nop
 8001bdc:	40005400 	.word	0x40005400
 8001be0:	40023800 	.word	0x40023800
 8001be4:	40020400 	.word	0x40020400

08001be8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001be8:	b507      	push	{r0, r1, r2, lr}
  if(hltdc->Instance==LTDC)
 8001bea:	4b0f      	ldr	r3, [pc, #60]	; (8001c28 <HAL_LTDC_MspInit+0x40>)
 8001bec:	6802      	ldr	r2, [r0, #0]
 8001bee:	429a      	cmp	r2, r3
 8001bf0:	d116      	bne.n	8001c20 <HAL_LTDC_MspInit+0x38>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001bf8:	9201      	str	r2, [sp, #4]
 8001bfa:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001bfc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8001c00:	6459      	str	r1, [r3, #68]	; 0x44
 8001c02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c04:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001c08:	9301      	str	r3, [sp, #4]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c0a:	2105      	movs	r1, #5
 8001c0c:	2058      	movs	r0, #88	; 0x58
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c0e:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c10:	f002 f80c 	bl	8003c2c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c14:	2058      	movs	r0, #88	; 0x58
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c16:	b003      	add	sp, #12
 8001c18:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c1c:	f002 b838 	b.w	8003c90 <HAL_NVIC_EnableIRQ>
}
 8001c20:	b003      	add	sp, #12
 8001c22:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c26:	bf00      	nop
 8001c28:	40016800 	.word	0x40016800

08001c2c <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001c2e:	4604      	mov	r4, r0
 8001c30:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c32:	2214      	movs	r2, #20
 8001c34:	2100      	movs	r1, #0
 8001c36:	a803      	add	r0, sp, #12
 8001c38:	f018 f98e 	bl	8019f58 <memset>
  if(hqspi->Instance==QUADSPI)
 8001c3c:	6822      	ldr	r2, [r4, #0]
 8001c3e:	4b24      	ldr	r3, [pc, #144]	; (8001cd0 <HAL_QSPI_MspInit+0xa4>)
 8001c40:	429a      	cmp	r2, r3
 8001c42:	d142      	bne.n	8001cca <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c44:	4b23      	ldr	r3, [pc, #140]	; (8001cd4 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c46:	4824      	ldr	r0, [pc, #144]	; (8001cd8 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001c48:	2400      	movs	r4, #0
 8001c4a:	9400      	str	r4, [sp, #0]
 8001c4c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c4e:	f042 0202 	orr.w	r2, r2, #2
 8001c52:	639a      	str	r2, [r3, #56]	; 0x38
 8001c54:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001c56:	f002 0202 	and.w	r2, r2, #2
 8001c5a:	9200      	str	r2, [sp, #0]
 8001c5c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c5e:	9401      	str	r4, [sp, #4]
 8001c60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c62:	f042 0202 	orr.w	r2, r2, #2
 8001c66:	631a      	str	r2, [r3, #48]	; 0x30
 8001c68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c6a:	f002 0202 	and.w	r2, r2, #2
 8001c6e:	9201      	str	r2, [sp, #4]
 8001c70:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c72:	9402      	str	r4, [sp, #8]
 8001c74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c76:	f042 0220 	orr.w	r2, r2, #32
 8001c7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c7e:	f003 0320 	and.w	r3, r3, #32
 8001c82:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c84:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c86:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c88:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c8a:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c8c:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c8e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c90:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c94:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c98:	f002 ff0e 	bl	8004ab8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c9c:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca0:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ca4:	480d      	ldr	r0, [pc, #52]	; (8001cdc <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001ca6:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ca8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001caa:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cac:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb0:	f002 ff02 	bl	8004ab8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001cb4:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb8:	4808      	ldr	r0, [pc, #32]	; (8001cdc <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001cba:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cbc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cbe:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cc2:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cc6:	f002 fef7 	bl	8004ab8 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001cca:	b009      	add	sp, #36	; 0x24
 8001ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cce:	bf00      	nop
 8001cd0:	a0001000 	.word	0xa0001000
 8001cd4:	40023800 	.word	0x40023800
 8001cd8:	40020400 	.word	0x40020400
 8001cdc:	40021400 	.word	0x40021400

08001ce0 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001ce0:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001ce2:	6802      	ldr	r2, [r0, #0]
 8001ce4:	4b09      	ldr	r3, [pc, #36]	; (8001d0c <HAL_QSPI_MspDeInit+0x2c>)
 8001ce6:	429a      	cmp	r2, r3
 8001ce8:	d10f      	bne.n	8001d0a <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cea:	4a09      	ldr	r2, [pc, #36]	; (8001d10 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cec:	4809      	ldr	r0, [pc, #36]	; (8001d14 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001cee:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001cf0:	f023 0302 	bic.w	r3, r3, #2
 8001cf4:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001cf6:	2140      	movs	r1, #64	; 0x40
 8001cf8:	f002 ffc6 	bl	8004c88 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001cfc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001d00:	4805      	ldr	r0, [pc, #20]	; (8001d18 <HAL_QSPI_MspDeInit+0x38>)
 8001d02:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001d06:	f002 bfbf 	b.w	8004c88 <HAL_GPIO_DeInit>
}
 8001d0a:	bd08      	pop	{r3, pc}
 8001d0c:	a0001000 	.word	0xa0001000
 8001d10:	40023800 	.word	0x40023800
 8001d14:	40020400 	.word	0x40020400
 8001d18:	40021400 	.word	0x40021400

08001d1c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d1e:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d20:	2300      	movs	r3, #0
 8001d22:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d24:	4b30      	ldr	r3, [pc, #192]	; (8001de8 <HAL_SDRAM_MspInit+0xcc>)
 8001d26:	681c      	ldr	r4, [r3, #0]
 8001d28:	2c00      	cmp	r4, #0
 8001d2a:	d15a      	bne.n	8001de2 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8001d2c:	2201      	movs	r2, #1
 8001d2e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d30:	4b2e      	ldr	r3, [pc, #184]	; (8001dec <HAL_SDRAM_MspInit+0xd0>)
 8001d32:	9400      	str	r4, [sp, #0]
 8001d34:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d36:	482e      	ldr	r0, [pc, #184]	; (8001df0 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d38:	f042 0201 	orr.w	r2, r2, #1
 8001d3c:	639a      	str	r2, [r3, #56]	; 0x38
 8001d3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d40:	f003 0301 	and.w	r3, r3, #1
 8001d44:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d46:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d48:	2603      	movs	r6, #3
 8001d4a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d4c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d4e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d50:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001d54:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d58:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d5c:	f002 feac 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001d60:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d64:	4823      	ldr	r0, [pc, #140]	; (8001df4 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d66:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d6e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d72:	f002 fea1 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d76:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d7a:	481f      	ldr	r0, [pc, #124]	; (8001df8 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d88:	f002 fe96 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d8c:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d90:	481a      	ldr	r0, [pc, #104]	; (8001dfc <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d92:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d94:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d9a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d9e:	f002 fe8b 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001da2:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001da6:	4816      	ldr	r0, [pc, #88]	; (8001e00 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001daa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001db4:	f002 fe80 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001db8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dbc:	4811      	ldr	r0, [pc, #68]	; (8001e04 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dbe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dc0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dc6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001dca:	f002 fe75 	bl	8004ab8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001dce:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd0:	480d      	ldr	r0, [pc, #52]	; (8001e08 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dd4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001dde:	f002 fe6b 	bl	8004ab8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001de2:	b007      	add	sp, #28
 8001de4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001de6:	bf00      	nop
 8001de8:	20001380 	.word	0x20001380
 8001dec:	40023800 	.word	0x40023800
 8001df0:	40021000 	.word	0x40021000
 8001df4:	40021800 	.word	0x40021800
 8001df8:	40020c00 	.word	0x40020c00
 8001dfc:	40022000 	.word	0x40022000
 8001e00:	40021400 	.word	0x40021400
 8001e04:	40021c00 	.word	0x40021c00
 8001e08:	40020800 	.word	0x40020800

08001e0c <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001e0c:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001e0e:	4b17      	ldr	r3, [pc, #92]	; (8001e6c <HAL_SDRAM_MspDeInit+0x60>)
 8001e10:	681a      	ldr	r2, [r3, #0]
 8001e12:	bb52      	cbnz	r2, 8001e6a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001e14:	2201      	movs	r2, #1
 8001e16:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e18:	4a15      	ldr	r2, [pc, #84]	; (8001e70 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e1a:	4816      	ldr	r0, [pc, #88]	; (8001e74 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001e1c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001e1e:	f023 0301 	bic.w	r3, r3, #1
 8001e22:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001e24:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001e28:	f002 ff2e 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001e2c:	4812      	ldr	r0, [pc, #72]	; (8001e78 <HAL_SDRAM_MspDeInit+0x6c>)
 8001e2e:	f248 1133 	movw	r1, #33075	; 0x8133
 8001e32:	f002 ff29 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001e36:	4811      	ldr	r0, [pc, #68]	; (8001e7c <HAL_SDRAM_MspDeInit+0x70>)
 8001e38:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001e3c:	f002 ff24 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001e40:	480f      	ldr	r0, [pc, #60]	; (8001e80 <HAL_SDRAM_MspDeInit+0x74>)
 8001e42:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001e46:	f002 ff1f 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001e4a:	480e      	ldr	r0, [pc, #56]	; (8001e84 <HAL_SDRAM_MspDeInit+0x78>)
 8001e4c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001e50:	f002 ff1a 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001e54:	480c      	ldr	r0, [pc, #48]	; (8001e88 <HAL_SDRAM_MspDeInit+0x7c>)
 8001e56:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001e5a:	f002 ff15 	bl	8004c88 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001e5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001e62:	480a      	ldr	r0, [pc, #40]	; (8001e8c <HAL_SDRAM_MspDeInit+0x80>)
 8001e64:	210d      	movs	r1, #13
 8001e66:	f002 bf0f 	b.w	8004c88 <HAL_GPIO_DeInit>
}
 8001e6a:	bd08      	pop	{r3, pc}
 8001e6c:	2000137c 	.word	0x2000137c
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40021000 	.word	0x40021000
 8001e78:	40021800 	.word	0x40021800
 8001e7c:	40020c00 	.word	0x40020c00
 8001e80:	40022000 	.word	0x40022000
 8001e84:	40021400 	.word	0x40021400
 8001e88:	40021c00 	.word	0x40021c00
 8001e8c:	40020800 	.word	0x40020800

08001e90 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e90:	b530      	push	{r4, r5, lr}
 8001e92:	4601      	mov	r1, r0
 8001e94:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e96:	2200      	movs	r2, #0
 8001e98:	2036      	movs	r0, #54	; 0x36
 8001e9a:	f001 fec7 	bl	8003c2c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e9e:	2036      	movs	r0, #54	; 0x36
 8001ea0:	f001 fef6 	bl	8003c90 <HAL_NVIC_EnableIRQ>
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ea4:	2500      	movs	r5, #0
 8001ea6:	4b15      	ldr	r3, [pc, #84]	; (8001efc <HAL_InitTick+0x6c>)
 8001ea8:	9502      	str	r5, [sp, #8]
 8001eaa:	6c1a      	ldr	r2, [r3, #64]	; 0x40

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001eac:	4c14      	ldr	r4, [pc, #80]	; (8001f00 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001eae:	f042 0210 	orr.w	r2, r2, #16
 8001eb2:	641a      	str	r2, [r3, #64]	; 0x40
 8001eb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eb6:	f003 0310 	and.w	r3, r3, #16
 8001eba:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ebc:	a901      	add	r1, sp, #4
 8001ebe:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001ec0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001ec2:	f004 f9af 	bl	8006224 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ec6:	f004 f99d 	bl	8006204 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001eca:	4b0e      	ldr	r3, [pc, #56]	; (8001f04 <HAL_InitTick+0x74>)
 8001ecc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001ece:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001ed2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001ed4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001ed6:	4b0c      	ldr	r3, [pc, #48]	; (8001f08 <HAL_InitTick+0x78>)
 8001ed8:	fbb0 f0f3 	udiv	r0, r0, r3
 8001edc:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001ede:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee0:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001ee2:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ee4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001ee6:	f004 fe1b 	bl	8006b20 <HAL_TIM_Base_Init>
 8001eea:	b920      	cbnz	r0, 8001ef6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001eec:	4620      	mov	r0, r4
 8001eee:	f004 fcfb 	bl	80068e8 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001ef2:	b009      	add	sp, #36	; 0x24
 8001ef4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001ef6:	2001      	movs	r0, #1
 8001ef8:	e7fb      	b.n	8001ef2 <HAL_InitTick+0x62>
 8001efa:	bf00      	nop
 8001efc:	40023800 	.word	0x40023800
 8001f00:	20001384 	.word	0x20001384
 8001f04:	40001000 	.word	0x40001000
 8001f08:	000f4240 	.word	0x000f4240

08001f0c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f0c:	4770      	bx	lr

08001f0e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f0e:	e7fe      	b.n	8001f0e <HardFault_Handler>

08001f10 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f10:	e7fe      	b.n	8001f10 <MemManage_Handler>

08001f12 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f12:	e7fe      	b.n	8001f12 <BusFault_Handler>

08001f14 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f14:	e7fe      	b.n	8001f14 <UsageFault_Handler>

08001f16 <DebugMon_Handler>:
 8001f16:	4770      	bx	lr

08001f18 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f18:	4801      	ldr	r0, [pc, #4]	; (8001f20 <TIM6_DAC_IRQHandler+0x8>)
 8001f1a:	f004 bcf9 	b.w	8006910 <HAL_TIM_IRQHandler>
 8001f1e:	bf00      	nop
 8001f20:	20001384 	.word	0x20001384

08001f24 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f24:	4801      	ldr	r0, [pc, #4]	; (8001f2c <LTDC_IRQHandler+0x8>)
 8001f26:	f003 bc92 	b.w	800584e <HAL_LTDC_IRQHandler>
 8001f2a:	bf00      	nop
 8001f2c:	20001254 	.word	0x20001254

08001f30 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001f30:	4801      	ldr	r0, [pc, #4]	; (8001f38 <DMA2D_IRQHandler+0x8>)
 8001f32:	f002 b925 	b.w	8004180 <HAL_DMA2D_IRQHandler>
 8001f36:	bf00      	nop
 8001f38:	200011a4 	.word	0x200011a4

08001f3c <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001f3c:	4801      	ldr	r0, [pc, #4]	; (8001f44 <DSI_IRQHandler+0x8>)
 8001f3e:	f002 bb22 	b.w	8004586 <HAL_DSI_IRQHandler>
 8001f42:	bf00      	nop
 8001f44:	200011e4 	.word	0x200011e4

08001f48 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001f48:	2001      	movs	r0, #1
 8001f4a:	4770      	bx	lr

08001f4c <_kill>:

int _kill(int pid, int sig)
{
 8001f4c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f4e:	f017 ffa9 	bl	8019ea4 <__errno>
 8001f52:	2316      	movs	r3, #22
 8001f54:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001f56:	f04f 30ff 	mov.w	r0, #4294967295
 8001f5a:	bd08      	pop	{r3, pc}

08001f5c <_exit>:

void _exit (int status)
{
 8001f5c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001f5e:	f017 ffa1 	bl	8019ea4 <__errno>
 8001f62:	2316      	movs	r3, #22
 8001f64:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f66:	e7fe      	b.n	8001f66 <_exit+0xa>

08001f68 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f68:	b570      	push	{r4, r5, r6, lr}
 8001f6a:	460d      	mov	r5, r1
 8001f6c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f6e:	460e      	mov	r6, r1
 8001f70:	1b73      	subs	r3, r6, r5
 8001f72:	429c      	cmp	r4, r3
 8001f74:	dc01      	bgt.n	8001f7a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f76:	4620      	mov	r0, r4
 8001f78:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f7a:	f3af 8000 	nop.w
 8001f7e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f82:	e7f5      	b.n	8001f70 <_read+0x8>

08001f84 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f84:	b570      	push	{r4, r5, r6, lr}
 8001f86:	460d      	mov	r5, r1
 8001f88:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f8a:	460e      	mov	r6, r1
 8001f8c:	1b73      	subs	r3, r6, r5
 8001f8e:	429c      	cmp	r4, r3
 8001f90:	dc01      	bgt.n	8001f96 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f92:	4620      	mov	r0, r4
 8001f94:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f96:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001f9a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f9e:	e7f5      	b.n	8001f8c <_write+0x8>

08001fa0 <_close>:

int _close(int file)
{
	return -1;
}
 8001fa0:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa4:	4770      	bx	lr

08001fa6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001fa6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001faa:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001fac:	2000      	movs	r0, #0
 8001fae:	4770      	bx	lr

08001fb0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001fb0:	2001      	movs	r0, #1
 8001fb2:	4770      	bx	lr

08001fb4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001fb4:	2000      	movs	r0, #0
 8001fb6:	4770      	bx	lr

08001fb8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001fb8:	4a0a      	ldr	r2, [pc, #40]	; (8001fe4 <_sbrk+0x2c>)
 8001fba:	6811      	ldr	r1, [r2, #0]
{
 8001fbc:	b508      	push	{r3, lr}
 8001fbe:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001fc0:	b909      	cbnz	r1, 8001fc6 <_sbrk+0xe>
		heap_end = &end;
 8001fc2:	4909      	ldr	r1, [pc, #36]	; (8001fe8 <_sbrk+0x30>)
 8001fc4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001fc6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001fc8:	4669      	mov	r1, sp
 8001fca:	4403      	add	r3, r0
 8001fcc:	428b      	cmp	r3, r1
 8001fce:	d906      	bls.n	8001fde <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001fd0:	f017 ff68 	bl	8019ea4 <__errno>
 8001fd4:	230c      	movs	r3, #12
 8001fd6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001fd8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001fdc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001fde:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001fe0:	e7fc      	b.n	8001fdc <_sbrk+0x24>
 8001fe2:	bf00      	nop
 8001fe4:	200013c4 	.word	0x200013c4
 8001fe8:	2000a640 	.word	0x2000a640

08001fec <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001fec:	4770      	bx	lr

08001fee <_ZN23ApplicationFontProviderD0Ev>:
 8001fee:	b510      	push	{r4, lr}
 8001ff0:	2104      	movs	r1, #4
 8001ff2:	4604      	mov	r4, r0
 8001ff4:	f017 fef5 	bl	8019de2 <_ZdlPvj>
 8001ff8:	4620      	mov	r0, r4
 8001ffa:	bd10      	pop	{r4, pc}

08001ffc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001ffc:	2901      	cmp	r1, #1
{
 8001ffe:	b508      	push	{r3, lr}
    switch (typography)
 8002000:	d006      	beq.n	8002010 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002002:	2902      	cmp	r1, #2
 8002004:	d008      	beq.n	8002018 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002006:	b959      	cbnz	r1, 8002020 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002008:	f000 fd7a 	bl	8002b00 <_ZN17TypedTextDatabase8getFontsEv>
 800200c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800200e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002010:	f000 fd76 	bl	8002b00 <_ZN17TypedTextDatabase8getFontsEv>
 8002014:	6840      	ldr	r0, [r0, #4]
 8002016:	e7fa      	b.n	800200e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002018:	f000 fd72 	bl	8002b00 <_ZN17TypedTextDatabase8getFontsEv>
 800201c:	6880      	ldr	r0, [r0, #8]
 800201e:	e7f6      	b.n	800200e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002020:	2000      	movs	r0, #0
 8002022:	e7f4      	b.n	800200e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002024 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002024:	4800      	ldr	r0, [pc, #0]	; (8002028 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002026:	4770      	bx	lr
 8002028:	0801b540 	.word	0x0801b540

0800202c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800202c:	2001      	movs	r0, #1
 800202e:	4770      	bx	lr

08002030 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002030:	b513      	push	{r0, r1, r4, lr}
 8002032:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002034:	b151      	cbz	r1, 800204c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002036:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002038:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800203a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800203e:	aa01      	add	r2, sp, #4
 8002040:	689c      	ldr	r4, [r3, #8]
 8002042:	f10d 0303 	add.w	r3, sp, #3
 8002046:	47a0      	blx	r4
        return glyph;
    }
 8002048:	b002      	add	sp, #8
 800204a:	bd10      	pop	{r4, pc}
            return 0;
 800204c:	4608      	mov	r0, r1
 800204e:	e7fb      	b.n	8002048 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002050 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002050:	8940      	ldrh	r0, [r0, #10]
 8002052:	4770      	bx	lr

08002054 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002054:	8980      	ldrh	r0, [r0, #12]
 8002056:	4770      	bx	lr

08002058 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002058:	8880      	ldrh	r0, [r0, #4]
 800205a:	4770      	bx	lr

0800205c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800205c:	7983      	ldrb	r3, [r0, #6]
 800205e:	8880      	ldrh	r0, [r0, #4]
 8002060:	4418      	add	r0, r3
    }
 8002062:	b280      	uxth	r0, r0
 8002064:	4770      	bx	lr

08002066 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002066:	79c0      	ldrb	r0, [r0, #7]
    }
 8002068:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800206c:	4770      	bx	lr

0800206e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800206e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002070:	09c0      	lsrs	r0, r0, #7
 8002072:	4770      	bx	lr

08002074 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002074:	4770      	bx	lr

08002076 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002076:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800207a:	6808      	ldr	r0, [r1, #0]
 800207c:	6849      	ldr	r1, [r1, #4]
 800207e:	c303      	stmia	r3!, {r0, r1}
    };
 8002080:	4770      	bx	lr

08002082 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002082:	4770      	bx	lr

08002084 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002084:	4770      	bx	lr

08002086 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002086:	6041      	str	r1, [r0, #4]
    }
 8002088:	4770      	bx	lr

0800208a <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800208a:	4770      	bx	lr

0800208c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800208c:	2301      	movs	r3, #1
 800208e:	7203      	strb	r3, [r0, #8]
    }
 8002090:	4770      	bx	lr

08002092 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002092:	4770      	bx	lr

08002094 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002094:	4770      	bx	lr

08002096 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002096:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002098:	68c2      	ldr	r2, [r0, #12]
 800209a:	6841      	ldr	r1, [r0, #4]
 800209c:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800209e:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 80020a0:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80020a4:	07d2      	lsls	r2, r2, #31
 80020a6:	bf48      	it	mi
 80020a8:	590a      	ldrmi	r2, [r1, r4]
 80020aa:	689b      	ldr	r3, [r3, #8]
    }
 80020ac:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 80020b0:	bf48      	it	mi
 80020b2:	58d3      	ldrmi	r3, [r2, r3]
 80020b4:	4718      	bx	r3

080020b6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80020b6:	6843      	ldr	r3, [r0, #4]
 80020b8:	b12b      	cbz	r3, 80020c6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80020ba:	6883      	ldr	r3, [r0, #8]
 80020bc:	b92b      	cbnz	r3, 80020ca <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80020be:	68c0      	ldr	r0, [r0, #12]
 80020c0:	f000 0001 	and.w	r0, r0, #1
 80020c4:	4770      	bx	lr
 80020c6:	4618      	mov	r0, r3
 80020c8:	4770      	bx	lr
 80020ca:	2001      	movs	r0, #1
    }
 80020cc:	4770      	bx	lr

080020ce <_ZN8touchgfx12NoTransitionD0Ev>:
 80020ce:	b510      	push	{r4, lr}
 80020d0:	210c      	movs	r1, #12
 80020d2:	4604      	mov	r4, r0
 80020d4:	f017 fe85 	bl	8019de2 <_ZdlPvj>
 80020d8:	4620      	mov	r0, r4
 80020da:	bd10      	pop	{r4, pc}

080020dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020dc:	b510      	push	{r4, lr}
 80020de:	2110      	movs	r1, #16
 80020e0:	4604      	mov	r4, r0
 80020e2:	f017 fe7e 	bl	8019de2 <_ZdlPvj>
 80020e6:	4620      	mov	r0, r4
 80020e8:	bd10      	pop	{r4, pc}

080020ea <_ZN23FrontendApplicationBaseD0Ev>:
 80020ea:	b510      	push	{r4, lr}
 80020ec:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80020f0:	4604      	mov	r4, r0
 80020f2:	f017 fe76 	bl	8019de2 <_ZdlPvj>
 80020f6:	4620      	mov	r0, r4
 80020f8:	bd10      	pop	{r4, pc}

080020fa <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80020fa:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 80020fc:	f009 fbb8 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 8002100:	6803      	ldr	r3, [r0, #0]
    }
 8002102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002106:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002108:	4718      	bx	r3

0800210a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800210a:	b510      	push	{r4, lr}
 800210c:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800210e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002112:	b158      	cbz	r0, 800212c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8002114:	6803      	ldr	r3, [r0, #0]
 8002116:	68db      	ldr	r3, [r3, #12]
 8002118:	4798      	blx	r3
 800211a:	b138      	cbz	r0, 800212c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800211c:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002120:	6803      	ldr	r3, [r0, #0]
 8002122:	689b      	ldr	r3, [r3, #8]
 8002124:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002126:	2300      	movs	r3, #0
 8002128:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 800212c:	bd10      	pop	{r4, pc}
	...

08002130 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002130:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002134:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002138:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800213a:	68a8      	ldr	r0, [r5, #8]
 800213c:	6803      	ldr	r3, [r0, #0]
 800213e:	6a1b      	ldr	r3, [r3, #32]
 8002140:	4798      	blx	r3
 8002142:	f5b0 7f9e 	cmp.w	r0, #316	; 0x13c
 8002146:	d205      	bcs.n	8002154 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002148:	4b45      	ldr	r3, [pc, #276]	; (8002260 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800214a:	4a46      	ldr	r2, [pc, #280]	; (8002264 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800214c:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800214e:	4846      	ldr	r0, [pc, #280]	; (8002268 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002150:	f017 fe76 	bl	8019e40 <__assert_func>
 8002154:	6868      	ldr	r0, [r5, #4]
 8002156:	6803      	ldr	r3, [r0, #0]
 8002158:	6a1b      	ldr	r3, [r3, #32]
 800215a:	4798      	blx	r3
 800215c:	280f      	cmp	r0, #15
 800215e:	d803      	bhi.n	8002168 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002160:	4b42      	ldr	r3, [pc, #264]	; (800226c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002162:	4a40      	ldr	r2, [pc, #256]	; (8002264 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002164:	21a8      	movs	r1, #168	; 0xa8
 8002166:	e7f2      	b.n	800214e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002168:	68e8      	ldr	r0, [r5, #12]
 800216a:	6803      	ldr	r3, [r0, #0]
 800216c:	6a1b      	ldr	r3, [r3, #32]
 800216e:	4798      	blx	r3
 8002170:	280b      	cmp	r0, #11
 8002172:	d803      	bhi.n	800217c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002174:	4b3e      	ldr	r3, [pc, #248]	; (8002270 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 8002176:	4a3b      	ldr	r2, [pc, #236]	; (8002264 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002178:	21a9      	movs	r1, #169	; 0xa9
 800217a:	e7e8      	b.n	800214e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 800217c:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002278 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002180:	f009 fb76 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 8002184:	f009 fbc2 	bl	800b90c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002188:	f8d9 0000 	ldr.w	r0, [r9]
 800218c:	b110      	cbz	r0, 8002194 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800218e:	6803      	ldr	r3, [r0, #0]
 8002190:	68db      	ldr	r3, [r3, #12]
 8002192:	4798      	blx	r3
    if (*currentTrans)
 8002194:	f8d9 0000 	ldr.w	r0, [r9]
 8002198:	b110      	cbz	r0, 80021a0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800219a:	6803      	ldr	r3, [r0, #0]
 800219c:	681b      	ldr	r3, [r3, #0]
 800219e:	4798      	blx	r3
    if (*currentScreen)
 80021a0:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800227c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 80021a4:	f8d8 0000 	ldr.w	r0, [r8]
 80021a8:	b110      	cbz	r0, 80021b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80021aa:	6803      	ldr	r3, [r0, #0]
 80021ac:	695b      	ldr	r3, [r3, #20]
 80021ae:	4798      	blx	r3
    if (*currentPresenter)
 80021b0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80021b4:	b110      	cbz	r0, 80021bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80021b6:	6803      	ldr	r3, [r0, #0]
 80021b8:	685b      	ldr	r3, [r3, #4]
 80021ba:	4798      	blx	r3
    if (*currentScreen)
 80021bc:	f8d8 0000 	ldr.w	r0, [r8]
 80021c0:	b110      	cbz	r0, 80021c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	4798      	blx	r3
    if (*currentPresenter)
 80021c8:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80021cc:	b110      	cbz	r0, 80021d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80021ce:	6803      	ldr	r3, [r0, #0]
 80021d0:	689b      	ldr	r3, [r3, #8]
 80021d2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80021d4:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80021d6:	6803      	ldr	r3, [r0, #0]
 80021d8:	2100      	movs	r1, #0
 80021da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021dc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80021de:	f04f 0b00 	mov.w	fp, #0
 80021e2:	4b24      	ldr	r3, [pc, #144]	; (8002274 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80021e4:	6003      	str	r3, [r0, #0]
 80021e6:	4604      	mov	r4, r0
 80021e8:	f8c0 b004 	str.w	fp, [r0, #4]
 80021ec:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80021f0:	68a8      	ldr	r0, [r5, #8]
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	4659      	mov	r1, fp
 80021f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021f8:	4798      	blx	r3
 80021fa:	4606      	mov	r6, r0
 80021fc:	f000 fcdc 	bl	8002bb8 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002200:	6868      	ldr	r0, [r5, #4]
 8002202:	6803      	ldr	r3, [r0, #0]
 8002204:	4659      	mov	r1, fp
 8002206:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002208:	4798      	blx	r3
 800220a:	4631      	mov	r1, r6
 800220c:	4605      	mov	r5, r0
 800220e:	f000 fcb9 	bl	8002b84 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002212:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002216:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800221a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800221e:	b1e5      	cbz	r5, 800225a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002220:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002222:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002226:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002228:	f8c5 a008 	str.w	sl, [r5, #8]
 800222c:	4630      	mov	r0, r6
 800222e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 8002230:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002232:	4798      	blx	r3
    newPresenter->activate();
 8002234:	682b      	ldr	r3, [r5, #0]
 8002236:	4628      	mov	r0, r5
 8002238:	681b      	ldr	r3, [r3, #0]
 800223a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800223c:	4621      	mov	r1, r4
 800223e:	4630      	mov	r0, r6
 8002240:	f00a ff97 	bl	800d172 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002244:	6823      	ldr	r3, [r4, #0]
 8002246:	4620      	mov	r0, r4
 8002248:	691b      	ldr	r3, [r3, #16]
 800224a:	4798      	blx	r3
    newTransition->invalidate();
 800224c:	6823      	ldr	r3, [r4, #0]
 800224e:	695b      	ldr	r3, [r3, #20]
 8002250:	4620      	mov	r0, r4
}
 8002252:	b001      	add	sp, #4
 8002254:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002258:	4718      	bx	r3
    model->bind(newPresenter);
 800225a:	462b      	mov	r3, r5
 800225c:	e7e1      	b.n	8002222 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 800225e:	bf00      	nop
 8002260:	0801b554 	.word	0x0801b554
 8002264:	0801b5e2 	.word	0x0801b5e2
 8002268:	0801b6e6 	.word	0x0801b6e6
 800226c:	0801b72d 	.word	0x0801b72d
 8002270:	0801b7d0 	.word	0x0801b7d0
 8002274:	0801b8d8 	.word	0x0801b8d8
 8002278:	2000a3dc 	.word	0x2000a3dc
 800227c:	2000a3d8 	.word	0x2000a3d8

08002280 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002280:	b570      	push	{r4, r5, r6, lr}
 8002282:	4604      	mov	r4, r0
 8002284:	460d      	mov	r5, r1
 8002286:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 8002288:	f009 fb5a 	bl	800b940 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800228c:	4b0e      	ldr	r3, [pc, #56]	; (80022c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
          pendingScreenTransitionCallback(0)
 800228e:	2100      	movs	r1, #0
      model(m)
 8002290:	e9c4 6554 	strd	r6, r5, [r4, #336]	; 0x150
        return instance;
 8002294:	4d0d      	ldr	r5, [pc, #52]	; (80022cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
        instance = this;
 8002296:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 8002298:	e9c4 1152 	strd	r1, r1, [r4, #328]	; 0x148
 800229c:	4b0c      	ldr	r3, [pc, #48]	; (80022d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800229e:	6023      	str	r3, [r4, #0]
 80022a0:	6828      	ldr	r0, [r5, #0]
 80022a2:	4b0c      	ldr	r3, [pc, #48]	; (80022d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80022a4:	e9c4 3150 	strd	r3, r1, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80022a8:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80022aa:	e9c4 114e 	strd	r1, r1, [r4, #312]	; 0x138
 80022ae:	689b      	ldr	r3, [r3, #8]
 80022b0:	4798      	blx	r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80022b2:	682b      	ldr	r3, [r5, #0]
 80022b4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80022b8:	b10a      	cbz	r2, 80022be <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3e>
 80022ba:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80022bc:	b900      	cbnz	r0, 80022c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>
            return instance->lcdRef;
 80022be:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80022c0:	f010 fc77 	bl	8012bb2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80022c4:	4620      	mov	r0, r4
 80022c6:	bd70      	pop	{r4, r5, r6, pc}
 80022c8:	2000a3e8 	.word	0x2000a3e8
 80022cc:	2000a39c 	.word	0x2000a39c
 80022d0:	0801b894 	.word	0x0801b894
 80022d4:	0801b87c 	.word	0x0801b87c

080022d8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022d8:	4b06      	ldr	r3, [pc, #24]	; (80022f4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80022da:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80022de:	2300      	movs	r3, #0
 80022e0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80022e4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022e8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80022ec:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80022f0:	4770      	bx	lr
 80022f2:	bf00      	nop
 80022f4:	08002131 	.word	0x08002131

080022f8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80022f8:	6a00      	ldr	r0, [r0, #32]
 80022fa:	4770      	bx	lr

080022fc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80022fc:	4770      	bx	lr

080022fe <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80022fe:	888b      	ldrh	r3, [r1, #4]
 8002300:	6980      	ldr	r0, [r0, #24]
 8002302:	680a      	ldr	r2, [r1, #0]
 8002304:	0adb      	lsrs	r3, r3, #11
 8002306:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800230a:	4410      	add	r0, r2
 800230c:	4770      	bx	lr

0800230e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800230e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002310:	b1c2      	cbz	r2, 8002344 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002312:	7b13      	ldrb	r3, [r2, #12]
 8002314:	b1b3      	cbz	r3, 8002344 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002316:	7b54      	ldrb	r4, [r2, #13]
 8002318:	7ad2      	ldrb	r2, [r2, #11]
 800231a:	0224      	lsls	r4, r4, #8
 800231c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002320:	4314      	orrs	r4, r2
 8002322:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002324:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002326:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800232a:	8813      	ldrh	r3, [r2, #0]
 800232c:	428b      	cmp	r3, r1
 800232e:	d102      	bne.n	8002336 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002330:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002334:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002336:	d805      	bhi.n	8002344 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002338:	3801      	subs	r0, #1
 800233a:	b280      	uxth	r0, r0
 800233c:	3204      	adds	r2, #4
 800233e:	2800      	cmp	r0, #0
 8002340:	d1f3      	bne.n	800232a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002342:	e7f7      	b.n	8002334 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002344:	2000      	movs	r0, #0
 8002346:	e7f5      	b.n	8002334 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002348 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002348:	b510      	push	{r4, lr}
 800234a:	2124      	movs	r1, #36	; 0x24
 800234c:	4604      	mov	r4, r0
 800234e:	f017 fd48 	bl	8019de2 <_ZdlPvj>
 8002352:	4620      	mov	r0, r4
 8002354:	bd10      	pop	{r4, pc}
	...

08002358 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002358:	b530      	push	{r4, r5, lr}
 800235a:	b089      	sub	sp, #36	; 0x24
 800235c:	4604      	mov	r4, r0
    gsubTable(gsubData)
 800235e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002362:	9506      	str	r5, [sp, #24]
 8002364:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002368:	9505      	str	r5, [sp, #20]
 800236a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800236e:	9504      	str	r5, [sp, #16]
 8002370:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002374:	9503      	str	r5, [sp, #12]
 8002376:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800237a:	9502      	str	r5, [sp, #8]
 800237c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002380:	9501      	str	r5, [sp, #4]
 8002382:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002386:	9500      	str	r5, [sp, #0]
 8002388:	f00a fad6 	bl	800c938 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800238c:	4b05      	ldr	r3, [pc, #20]	; (80023a4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 800238e:	6023      	str	r3, [r4, #0]
 8002390:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002392:	61a3      	str	r3, [r4, #24]
 8002394:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002396:	61e3      	str	r3, [r4, #28]
 8002398:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800239a:	6223      	str	r3, [r4, #32]
}
 800239c:	4620      	mov	r0, r4
 800239e:	b009      	add	sp, #36	; 0x24
 80023a0:	bd30      	pop	{r4, r5, pc}
 80023a2:	bf00      	nop
 80023a4:	0801b8fc 	.word	0x0801b8fc

080023a8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80023a8:	2000      	movs	r0, #0
 80023aa:	4770      	bx	lr

080023ac <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80023ac:	8081      	strh	r1, [r0, #4]
    }
 80023ae:	4770      	bx	lr

080023b0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80023b0:	80c1      	strh	r1, [r0, #6]
    }
 80023b2:	4770      	bx	lr

080023b4 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80023b4:	8101      	strh	r1, [r0, #8]
    }
 80023b6:	4770      	bx	lr

080023b8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80023b8:	8141      	strh	r1, [r0, #10]
    }
 80023ba:	4770      	bx	lr

080023bc <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80023bc:	4770      	bx	lr

080023be <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80023be:	4770      	bx	lr

080023c0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80023c0:	4770      	bx	lr

080023c2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80023c2:	4770      	bx	lr

080023c4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80023c4:	4770      	bx	lr

080023c6 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80023c6:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80023c8:	88c4      	ldrh	r4, [r0, #6]
 80023ca:	6803      	ldr	r3, [r0, #0]
 80023cc:	1b12      	subs	r2, r2, r4
 80023ce:	8884      	ldrh	r4, [r0, #4]
 80023d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80023d2:	1b09      	subs	r1, r1, r4
 80023d4:	b212      	sxth	r2, r2
    }
 80023d6:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80023da:	b209      	sxth	r1, r1
 80023dc:	4718      	bx	r3

080023de <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80023de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023e2:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80023e4:	f04f 33ff 	mov.w	r3, #4294967295
 80023e8:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80023ea:	6813      	ldr	r3, [r2, #0]
 80023ec:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80023ee:	6010      	str	r0, [r2, #0]
    }
 80023f0:	4770      	bx	lr

080023f2 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80023f2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80023f4:	4770      	bx	lr

080023f6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80023f6:	4770      	bx	lr

080023f8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80023f8:	4770      	bx	lr

080023fa <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80023fa:	4770      	bx	lr

080023fc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80023fc:	4770      	bx	lr

080023fe <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80023fe:	4770      	bx	lr

08002400 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 8002400:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002404:	b11a      	cbz	r2, 800240e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002406:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800240a:	b102      	cbz	r2, 800240e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800240c:	6018      	str	r0, [r3, #0]
        }
    }
 800240e:	4770      	bx	lr

08002410 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002410:	4770      	bx	lr

08002412 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002412:	4770      	bx	lr

08002414 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002414:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002418:	b14b      	cbz	r3, 800242e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 800241a:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 800241e:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002420:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002422:	b13b      	cbz	r3, 8002434 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002424:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002428:	681b      	ldr	r3, [r3, #0]
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 800242a:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 800242c:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 800242e:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002432:	e7f4      	b.n	800241e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002434:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002438:	e7f6      	b.n	8002428 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

0800243a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800243a:	4770      	bx	lr

0800243c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800243c:	4770      	bx	lr

0800243e <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED1Ev>:
 * callback when the animation has finished.
 *
 * This mixin can be used on any Drawable.
 */
template <class T>
class MoveAnimator : public T
 800243e:	4770      	bx	lr

08002440 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002440:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002442:	68c2      	ldr	r2, [r0, #12]
 8002444:	6844      	ldr	r4, [r0, #4]
 8002446:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002448:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800244a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800244e:	07d2      	lsls	r2, r2, #31
 8002450:	bf48      	it	mi
 8002452:	5962      	ldrmi	r2, [r4, r5]
 8002454:	689b      	ldr	r3, [r3, #8]
    }
 8002456:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002458:	bf48      	it	mi
 800245a:	58d3      	ldrmi	r3, [r2, r3]
 800245c:	4718      	bx	r3

0800245e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 800245e:	6843      	ldr	r3, [r0, #4]
 8002460:	b12b      	cbz	r3, 800246e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002462:	6883      	ldr	r3, [r0, #8]
 8002464:	b92b      	cbnz	r3, 8002472 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002466:	68c0      	ldr	r0, [r0, #12]
 8002468:	f000 0001 	and.w	r0, r0, #1
 800246c:	4770      	bx	lr
 800246e:	4618      	mov	r0, r3
 8002470:	4770      	bx	lr
 8002472:	2001      	movs	r0, #1
    }
 8002474:	4770      	bx	lr

08002476 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002476:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800247a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800247e:	4770      	bx	lr

08002480 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21setMoveAnimationDelayEt>:
     *
     * @see getMoveAnimationDelay
     */
    virtual void setMoveAnimationDelay(uint16_t delay)
    {
        moveAnimationDelay = delay;
 8002480:	85c1      	strh	r1, [r0, #46]	; 0x2e
    }
 8002482:	4770      	bx	lr

08002484 <_ZNK8touchgfx12MoveAnimatorINS_13ScalableImageEE21getMoveAnimationDelayEv>:
     * @see setMoveAnimationDelay
     */
    virtual uint16_t getMoveAnimationDelay() const
    {
        return moveAnimationDelay;
    }
 8002484:	8dc0      	ldrh	r0, [r0, #46]	; 0x2e
 8002486:	4770      	bx	lr

08002488 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEED0Ev>:
class MoveAnimator : public T
 8002488:	b510      	push	{r4, lr}
 800248a:	2148      	movs	r1, #72	; 0x48
 800248c:	4604      	mov	r4, r0
 800248e:	f017 fca8 	bl	8019de2 <_ZdlPvj>
 8002492:	4620      	mov	r0, r4
 8002494:	bd10      	pop	{r4, pc}

08002496 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002496:	b510      	push	{r4, lr}
 8002498:	2178      	movs	r1, #120	; 0x78
 800249a:	4604      	mov	r4, r0
 800249c:	f017 fca1 	bl	8019de2 <_ZdlPvj>
 80024a0:	4620      	mov	r0, r4
 80024a2:	bd10      	pop	{r4, pc}

080024a4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80024a4:	b510      	push	{r4, lr}
 80024a6:	2110      	movs	r1, #16
 80024a8:	4604      	mov	r4, r0
 80024aa:	f017 fc9a 	bl	8019de2 <_ZdlPvj>
 80024ae:	4620      	mov	r0, r4
 80024b0:	bd10      	pop	{r4, pc}

080024b2 <_ZN15Screen1ViewBaseD0Ev>:
 80024b2:	b510      	push	{r4, lr}
 80024b4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80024b8:	4604      	mov	r4, r0
 80024ba:	f017 fc92 	bl	8019de2 <_ZdlPvj>
 80024be:	4620      	mov	r0, r4
 80024c0:	bd10      	pop	{r4, pc}

080024c2 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80024c2:	b510      	push	{r4, lr}
 80024c4:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80024c6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80024c8:	b150      	cbz	r0, 80024e0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80024ca:	6803      	ldr	r3, [r0, #0]
 80024cc:	68db      	ldr	r3, [r3, #12]
 80024ce:	4798      	blx	r3
 80024d0:	b130      	cbz	r0, 80024e0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80024d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80024d4:	6803      	ldr	r3, [r0, #0]
 80024d6:	4621      	mov	r1, r4
 80024d8:	689b      	ldr	r3, [r3, #8]
        }
    }
 80024da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80024de:	4718      	bx	r3
    }
 80024e0:	bd10      	pop	{r4, pc}

080024e2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80024e2:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80024e4:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 80024e6:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 80024ea:	4604      	mov	r4, r0
 80024ec:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80024ee:	b99b      	cbnz	r3, 8002518 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80024f0:	b98e      	cbnz	r6, 8002516 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80024f2:	fab3 f383 	clz	r3, r3
 80024f6:	095b      	lsrs	r3, r3, #5
 80024f8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 80024fc:	6823      	ldr	r3, [r4, #0]
 80024fe:	4620      	mov	r0, r4
 8002500:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002504:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002506:	6823      	ldr	r3, [r4, #0]
 8002508:	4620      	mov	r0, r4
 800250a:	695b      	ldr	r3, [r3, #20]
 800250c:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800250e:	b116      	cbz	r6, 8002516 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002510:	792b      	ldrb	r3, [r5, #4]
 8002512:	2b01      	cmp	r3, #1
 8002514:	d003      	beq.n	800251e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002516:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002518:	2e00      	cmp	r6, #0
 800251a:	d0fc      	beq.n	8002516 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 800251c:	e7e9      	b.n	80024f2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 800251e:	6823      	ldr	r3, [r4, #0]
 8002520:	4620      	mov	r0, r4
 8002522:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
    }
 8002526:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 800252a:	4718      	bx	r3

0800252c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 800252c:	f100 03b4 	add.w	r3, r0, #180	; 0xb4
 8002530:	428b      	cmp	r3, r1
{
 8002532:	b510      	push	{r4, lr}
 8002534:	4604      	mov	r4, r0
    if (&src == &flexButton1)
 8002536:	d126      	bne.n	8002586 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5a>
        moveAnimationEndedCallback = 0;
 8002538:	2300      	movs	r3, #0
 800253a:	f8c0 30b0 	str.w	r3, [r0, #176]	; 0xb0
     *                              Y position during the animation. Default is
     *                              EasingEquations::linearEaseNone.
     */
    void startMoveAnimation(int16_t endX, int16_t endY, uint16_t duration, EasingEquation xProgressionEquation = &EasingEquations::linearEaseNone, EasingEquation yProgressionEquation = &EasingEquations::linearEaseNone)
    {
        if (!moveAnimationRunning)
 800253e:	f890 3096 	ldrb.w	r3, [r0, #150]	; 0x96
 8002542:	b92b      	cbnz	r3, 8002550 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
        {
            Application::getInstance()->registerTimerWidget(this);
 8002544:	f009 f994 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 8002548:	f104 016c 	add.w	r1, r4, #108	; 0x6c
 800254c:	f009 f996 	bl	800b87c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        }

        moveAnimationCounter = 0;
 8002550:	2300      	movs	r3, #0
 8002552:	f8a4 3098 	strh.w	r3, [r4, #152]	; 0x98
        moveAnimationStartX = T::getX();
        moveAnimationStartY = T::getY();
        moveAnimationEndX = endX;
        moveAnimationEndY = endY;
 8002556:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
        moveAnimationDuration = duration;
 800255a:	f44f 7361 	mov.w	r3, #900	; 0x384
        moveAnimationStartX = T::getX();
 800255e:	f8b4 2070 	ldrh.w	r2, [r4, #112]	; 0x70
        moveAnimationDuration = duration;
 8002562:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
        moveAnimationXEquation = xProgressionEquation;
 8002566:	4b08      	ldr	r3, [pc, #32]	; (8002588 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x5c>)
        moveAnimationStartX = T::getX();
 8002568:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
        moveAnimationStartY = T::getY();
 800256c:	f8b4 2072 	ldrh.w	r2, [r4, #114]	; 0x72
 8002570:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
        moveAnimationYEquation = yProgressionEquation;
 8002574:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
        moveAnimationEndX = endX;
 8002578:	f24f 0260 	movw	r2, #61536	; 0xf060

        moveAnimationRunning = true;
 800257c:	2301      	movs	r3, #1
        moveAnimationEndX = endX;
 800257e:	f8a4 20a2 	strh.w	r2, [r4, #162]	; 0xa2
        moveAnimationRunning = true;
 8002582:	f884 3096 	strb.w	r3, [r4, #150]	; 0x96
        //When flexButton1 clicked move scalableImage1
        //Move scalableImage1 to x:-4000, y:0 with LinearIn easing in 15000 ms (900 Ticks)
        scalableImage1.clearMoveAnimationEndedAction();
        scalableImage1.startMoveAnimation(-4000, 0, 900, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    }
}
 8002586:	bd10      	pop	{r4, pc}
 8002588:	0800d1dd 	.word	0x0800d1dd

0800258c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800258c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800258e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002590:	4604      	mov	r4, r0
        setX(x);
 8002592:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    void setXY(int16_t x, int16_t y)
 8002594:	4615      	mov	r5, r2
        setX(x);
 8002596:	4798      	blx	r3
        setY(y);
 8002598:	6823      	ldr	r3, [r4, #0]
 800259a:	4629      	mov	r1, r5
 800259c:	4620      	mov	r0, r4
 800259e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80025a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80025a4:	4718      	bx	r3

080025a6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80025a6:	b570      	push	{r4, r5, r6, lr}
 80025a8:	4604      	mov	r4, r0
 80025aa:	461d      	mov	r5, r3
 80025ac:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80025b0:	f7ff ffec 	bl	800258c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80025b4:	6823      	ldr	r3, [r4, #0]
 80025b6:	4629      	mov	r1, r5
 80025b8:	4620      	mov	r0, r4
 80025ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80025bc:	4798      	blx	r3
        setHeight(height);
 80025be:	6823      	ldr	r3, [r4, #0]
 80025c0:	4631      	mov	r1, r6
 80025c2:	4620      	mov	r0, r4
 80025c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    }
 80025c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80025ca:	4718      	bx	r3

080025cc <_ZN8touchgfx3BoxC1Ev>:
        : Widget(), alpha(255), color(0)
 80025cc:	4908      	ldr	r1, [pc, #32]	; (80025f0 <_ZN8touchgfx3BoxC1Ev+0x24>)
 80025ce:	6001      	str	r1, [r0, #0]
          visible(true)
 80025d0:	f44f 7180 	mov.w	r1, #256	; 0x100
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 80025d4:	2200      	movs	r2, #0
 80025d6:	8481      	strh	r1, [r0, #36]	; 0x24
 80025d8:	21ff      	movs	r1, #255	; 0xff
        this->y = y;
        this->width = width;
 80025da:	e9c0 2201 	strd	r2, r2, [r0, #4]
        width = 0;
 80025de:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80025e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80025e6:	61c2      	str	r2, [r0, #28]
 80025e8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        color = col;
 80025ec:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80025ee:	4770      	bx	lr
 80025f0:	0801ca0c 	.word	0x0801ca0c

080025f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80025f4:	4613      	mov	r3, r2
        return instance;
 80025f6:	4a0c      	ldr	r2, [pc, #48]	; (8002628 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 80025f8:	b570      	push	{r4, r5, r6, lr}
 80025fa:	6814      	ldr	r4, [r2, #0]
 80025fc:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80025fe:	b92c      	cbnz	r4, 800260c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 8002600:	4b0a      	ldr	r3, [pc, #40]	; (800262c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 8002602:	4a0b      	ldr	r2, [pc, #44]	; (8002630 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002604:	480b      	ldr	r0, [pc, #44]	; (8002634 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8002606:	2135      	movs	r1, #53	; 0x35
 8002608:	f017 fc1a 	bl	8019e40 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800260c:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 8002610:	b10a      	cbz	r2, 8002616 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 8002612:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002614:	b900      	cbnz	r0, 8002618 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8002616:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002618:	6802      	ldr	r2, [r0, #0]
 800261a:	6a94      	ldr	r4, [r2, #40]	; 0x28
 800261c:	460a      	mov	r2, r1
 800261e:	46a4      	mov	ip, r4
 8002620:	4629      	mov	r1, r5
    }
 8002622:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002626:	4760      	bx	ip
 8002628:	2000a39c 	.word	0x2000a39c
 800262c:	0801b948 	.word	0x0801b948
 8002630:	0801b98b 	.word	0x0801b98b
 8002634:	0801b9e7 	.word	0x0801b9e7

08002638 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800263c:	4604      	mov	r4, r0
 800263e:	b087      	sub	sp, #28
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002640:	4627      	mov	r7, r4
        : presenter(0)
 8002642:	2500      	movs	r5, #0
 8002644:	f00a fc1a 	bl	800ce7c <_ZN8touchgfx6ScreenC1Ev>
 8002648:	4b5e      	ldr	r3, [pc, #376]	; (80027c4 <_ZN15Screen1ViewBaseC1Ev+0x18c>)
 800264a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800264c:	f847 3b40 	str.w	r3, [r7], #64
 8002650:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8002654:	4638      	mov	r0, r7
 8002656:	f7ff ffb9 	bl	80025cc <_ZN8touchgfx3BoxC1Ev>
          moveAnimationEndedCallback(0)
 800265a:	a905      	add	r1, sp, #20
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800265c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002660:	4630      	mov	r0, r6
 8002662:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002666:	f007 fdf7 	bl	800a258 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 800266a:	4b57      	ldr	r3, [pc, #348]	; (80027c8 <_ZN15Screen1ViewBaseC1Ev+0x190>)
 800266c:	66e3      	str	r3, [r4, #108]	; 0x6c
        : pressed(false), alpha(255), action(0)
 800266e:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 8002672:	f8a4 30e0 	strh.w	r3, [r4, #224]	; 0xe0
        touchable = touch;
 8002676:	f240 1301 	movw	r3, #257	; 0x101
        : T(), up(), down()
 800267a:	f104 09e8 	add.w	r9, r4, #232	; 0xe8
 800267e:	f8a4 30d8 	strh.w	r3, [r4, #216]	; 0xd8
 8002682:	4b52      	ldr	r3, [pc, #328]	; (80027cc <_ZN15Screen1ViewBaseC1Ev+0x194>)
 8002684:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
        this->width = width;
 8002688:	e9c4 552e 	strd	r5, r5, [r4, #184]	; 0xb8
        width = 0;
 800268c:	e9c4 5530 	strd	r5, r5, [r4, #192]	; 0xc0
          visible(true)
 8002690:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
 8002694:	f884 5096 	strb.w	r5, [r4, #150]	; 0x96
 8002698:	f8c4 5098 	str.w	r5, [r4, #152]	; 0x98
 800269c:	f8c4 50b0 	str.w	r5, [r4, #176]	; 0xb0
 80026a0:	f8c4 50d0 	str.w	r5, [r4, #208]	; 0xd0
          firstChild(0)
 80026a4:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 80026a8:	f8c4 50e4 	str.w	r5, [r4, #228]	; 0xe4
        : Box(), borderColor(0), borderSize(0)
 80026ac:	4648      	mov	r0, r9
 80026ae:	f7ff ff8d 	bl	80025cc <_ZN8touchgfx3BoxC1Ev>
 80026b2:	4b47      	ldr	r3, [pc, #284]	; (80027d0 <_ZN15Screen1ViewBaseC1Ev+0x198>)
 80026b4:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 80026b8:	f104 08b4 	add.w	r8, r4, #180	; 0xb4
        borderBox.setXY(0, 0);
 80026bc:	462a      	mov	r2, r5
 80026be:	4629      	mov	r1, r5
 80026c0:	4648      	mov	r0, r9
        : color(0)
 80026c2:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
 80026c6:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
        color = col;
 80026ca:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80026ce:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
 80026d2:	f7ff ff5b 	bl	800258c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80026d6:	4649      	mov	r1, r9
 80026d8:	4640      	mov	r0, r8
 80026da:	f006 fd65 	bl	80091a8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    {
 80026de:	4b3d      	ldr	r3, [pc, #244]	; (80027d4 <_ZN15Screen1ViewBaseC1Ev+0x19c>)
        this->pobject = pobject;
 80026e0:	e9c4 344b 	strd	r3, r4, [r4, #300]	; 0x12c
        this->pmemfun_1 = pmemfun_1;
 80026e4:	4b3c      	ldr	r3, [pc, #240]	; (80027d8 <_ZN15Screen1ViewBaseC1Ev+0x1a0>)
    __background.setPosition(0, 0, 800, 480);
 80026e6:	f44f 7af0 	mov.w	sl, #480	; 0x1e0
 80026ea:	e9c4 354d 	strd	r3, r5, [r4, #308]	; 0x134
 80026ee:	f8cd a000 	str.w	sl, [sp]
 80026f2:	f44f 7348 	mov.w	r3, #800	; 0x320
 80026f6:	462a      	mov	r2, r5
 80026f8:	4629      	mov	r1, r5
 80026fa:	4638      	mov	r0, r7
 80026fc:	f7ff ff53 	bl	80025a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002700:	462a      	mov	r2, r5
 8002702:	4629      	mov	r1, r5
 8002704:	4628      	mov	r0, r5
 8002706:	f7ff ff75 	bl	80025f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_DLUUUUGI_OBRAZ_ID));
 800270a:	a905      	add	r1, sp, #20
        this->color = color;
 800270c:	66a0      	str	r0, [r4, #104]	; 0x68
 800270e:	4630      	mov	r0, r6
 8002710:	f8ad 5014 	strh.w	r5, [sp, #20]
 8002714:	f008 f84c 	bl	800a7b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(0, 0, 4592, 480);
 8002718:	462a      	mov	r2, r5
 800271a:	f8cd a000 	str.w	sl, [sp]
 800271e:	f241 13f0 	movw	r3, #4592	; 0x11f0
 8002722:	4629      	mov	r1, r5
 8002724:	4630      	mov	r0, r6
 8002726:	f7ff ff3e 	bl	80025a6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 800272a:	f04f 0a35 	mov.w	sl, #53	; 0x35
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 800272e:	4629      	mov	r1, r5
 8002730:	4630      	mov	r0, r6
 8002732:	f007 fd57 	bl	800a1e4 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8002736:	462a      	mov	r2, r5
 8002738:	4629      	mov	r1, r5
 800273a:	4648      	mov	r0, r9
 800273c:	f8cd a000 	str.w	sl, [sp]
 8002740:	2363      	movs	r3, #99	; 0x63
 8002742:	f7ff ff30 	bl	80025a6 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002746:	2305      	movs	r3, #5
 8002748:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
 800274c:	2299      	movs	r2, #153	; 0x99
 800274e:	2166      	movs	r1, #102	; 0x66
 8002750:	4628      	mov	r0, r5
 8002752:	f7ff ff4f 	bl	80025f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002756:	22cc      	movs	r2, #204	; 0xcc
 8002758:	9003      	str	r0, [sp, #12]
 800275a:	2199      	movs	r1, #153	; 0x99
 800275c:	4628      	mov	r0, r5
 800275e:	f7ff ff49 	bl	80025f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002762:	2266      	movs	r2, #102	; 0x66
 8002764:	4683      	mov	fp, r0
 8002766:	2133      	movs	r1, #51	; 0x33
 8002768:	4628      	mov	r0, r5
 800276a:	f7ff ff43 	bl	80025f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800276e:	2299      	movs	r2, #153	; 0x99
 8002770:	4681      	mov	r9, r0
 8002772:	2166      	movs	r1, #102	; 0x66
 8002774:	2033      	movs	r0, #51	; 0x33
 8002776:	f7ff ff3d 	bl	80025f4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        up = colorReleased;
 800277a:	9b03      	ldr	r3, [sp, #12]
        borderDown = borderColorPressed;
 800277c:	e9c4 9049 	strd	r9, r0, [r4, #292]	; 0x124
        down = colorPressed;
 8002780:	e9c4 3b47 	strd	r3, fp, [r4, #284]	; 0x11c
        handlePressedUpdated();
 8002784:	4640      	mov	r0, r8
 8002786:	f7ff fe45 	bl	8002414 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setPosition(0, 0, 99, 53);
 800278a:	462a      	mov	r2, r5
 800278c:	4629      	mov	r1, r5
 800278e:	4640      	mov	r0, r8
 8002790:	f8cd a000 	str.w	sl, [sp]
 8002794:	2363      	movs	r3, #99	; 0x63
 8002796:	f7ff ff06 	bl	80025a6 <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setAction(flexButtonCallback);
 800279a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
        action = &callback;
 800279e:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80027a2:	1d20      	adds	r0, r4, #4
 80027a4:	4639      	mov	r1, r7
 80027a6:	9003      	str	r0, [sp, #12]
 80027a8:	f006 fcfe 	bl	80091a8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80027ac:	9803      	ldr	r0, [sp, #12]
 80027ae:	4631      	mov	r1, r6
 80027b0:	f006 fcfa 	bl	80091a8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80027b4:	9803      	ldr	r0, [sp, #12]
 80027b6:	4641      	mov	r1, r8
 80027b8:	f006 fcf6 	bl	80091a8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80027bc:	4620      	mov	r0, r4
 80027be:	b007      	add	sp, #28
 80027c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027c4:	0801bb58 	.word	0x0801bb58
 80027c8:	0801ba34 	.word	0x0801ba34
 80027cc:	0801baac 	.word	0x0801baac
 80027d0:	0801ca70 	.word	0x0801ca70
 80027d4:	0801bb40 	.word	0x0801bb40
 80027d8:	0800252d 	.word	0x0800252d

080027dc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>:

protected:
    /** Execute next step in move animation and stop the timer if the animation has finished. */
    void nextMoveAnimationStep()
    {
        if (moveAnimationRunning)
 80027dc:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
    void nextMoveAnimationStep()
 80027e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80027e4:	4604      	mov	r4, r0
        if (moveAnimationRunning)
 80027e6:	2b00      	cmp	r3, #0
 80027e8:	d040      	beq.n	800286c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
        {
            moveAnimationCounter++;
 80027ea:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 80027ec:	8dc5      	ldrh	r5, [r0, #46]	; 0x2e
            moveAnimationCounter++;
 80027ee:	3301      	adds	r3, #1
 80027f0:	b29b      	uxth	r3, r3
            if (moveAnimationCounter >= moveAnimationDelay)
 80027f2:	42ab      	cmp	r3, r5
            moveAnimationCounter++;
 80027f4:	8583      	strh	r3, [r0, #44]	; 0x2c
            if (moveAnimationCounter >= moveAnimationDelay)
 80027f6:	d339      	bcc.n	800286c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = moveAnimationCounter - moveAnimationDelay;

                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 80027f8:	1b5b      	subs	r3, r3, r5
 80027fa:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 80027fc:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
 80027fe:	b29d      	uxth	r5, r3
 8002800:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8002802:	1ad2      	subs	r2, r2, r3
 8002804:	b212      	sxth	r2, r2
 8002806:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002808:	2100      	movs	r1, #0
 800280a:	4628      	mov	r0, r5
 800280c:	47b0      	blx	r6
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 800280e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8002810:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8002812:	6c27      	ldr	r7, [r4, #64]	; 0x40
 8002814:	1ad2      	subs	r2, r2, r3
                int16_t deltaX = moveAnimationXEquation(actualAnimationCounter, 0, moveAnimationEndX - moveAnimationStartX, moveAnimationDuration);
 8002816:	4606      	mov	r6, r0
                int16_t deltaY = moveAnimationYEquation(actualAnimationCounter, 0, moveAnimationEndY - moveAnimationStartY, moveAnimationDuration);
 8002818:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800281a:	b212      	sxth	r2, r2
 800281c:	2100      	movs	r1, #0
 800281e:	4628      	mov	r0, r5
 8002820:	47b8      	blx	r7

                T::moveTo(moveAnimationStartX + deltaX, moveAnimationStartY + deltaY);
 8002822:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8002824:	8e61      	ldrh	r1, [r4, #50]	; 0x32
 8002826:	4402      	add	r2, r0
 8002828:	4431      	add	r1, r6
 800282a:	b212      	sxth	r2, r2
 800282c:	b209      	sxth	r1, r1
 800282e:	4620      	mov	r0, r4
 8002830:	f7ff fdc9 	bl	80023c6 <_ZN8touchgfx8Drawable6moveToEss>

                if (moveAnimationCounter >= (uint32_t)(moveAnimationDelay + moveAnimationDuration))
 8002834:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8002836:	8e21      	ldrh	r1, [r4, #48]	; 0x30
 8002838:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800283a:	440b      	add	r3, r1
 800283c:	429a      	cmp	r2, r3
 800283e:	d315      	bcc.n	800286c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                {
                    // End of animation
                    moveAnimationRunning = false;
 8002840:	2300      	movs	r3, #0
 8002842:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
                    moveAnimationCounter = 0;
 8002846:	85a3      	strh	r3, [r4, #44]	; 0x2c
                    Application::getInstance()->unregisterTimerWidget(this);
 8002848:	f009 f812 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 800284c:	4621      	mov	r1, r4
 800284e:	f009 f847 	bl	800b8e0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (moveAnimationEndedCallback && moveAnimationEndedCallback->isValid())
 8002852:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002854:	b150      	cbz	r0, 800286c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
 8002856:	6803      	ldr	r3, [r0, #0]
 8002858:	68db      	ldr	r3, [r3, #12]
 800285a:	4798      	blx	r3
 800285c:	b130      	cbz	r0, 800286c <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv+0x90>
                    {
                        moveAnimationEndedCallback->execute(*this);
 800285e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8002860:	6803      	ldr	r3, [r0, #0]
 8002862:	4621      	mov	r1, r4
 8002864:	689b      	ldr	r3, [r3, #8]
                    }
                }
            }
        }
    }
 8002866:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
                        moveAnimationEndedCallback->execute(*this);
 800286a:	4718      	bx	r3
    }
 800286c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08002870 <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002870:	b508      	push	{r3, lr}
        nextMoveAnimationStep();
 8002872:	f7ff ffb3 	bl	80027dc <_ZN8touchgfx12MoveAnimatorINS_13ScalableImageEE21nextMoveAnimationStepEv>
    }
 8002876:	bd08      	pop	{r3, pc}

08002878 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002878:	4770      	bx	lr
	...

0800287c <_Z23getFont_verdana_10_4bppv>:
{
 800287c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800287e:	4d14      	ldr	r5, [pc, #80]	; (80028d0 <_Z23getFont_verdana_10_4bppv+0x54>)
 8002880:	782c      	ldrb	r4, [r5, #0]
 8002882:	f3bf 8f5b 	dmb	ish
 8002886:	f014 0401 	ands.w	r4, r4, #1
{
 800288a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800288c:	d11d      	bne.n	80028ca <_Z23getFont_verdana_10_4bppv+0x4e>
 800288e:	4628      	mov	r0, r5
 8002890:	f017 faa9 	bl	8019de6 <__cxa_guard_acquire>
 8002894:	b1c8      	cbz	r0, 80028ca <_Z23getFont_verdana_10_4bppv+0x4e>
 8002896:	233f      	movs	r3, #63	; 0x3f
 8002898:	9307      	str	r3, [sp, #28]
 800289a:	4b0e      	ldr	r3, [pc, #56]	; (80028d4 <_Z23getFont_verdana_10_4bppv+0x58>)
 800289c:	9306      	str	r3, [sp, #24]
 800289e:	4b0e      	ldr	r3, [pc, #56]	; (80028d8 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80028a0:	490e      	ldr	r1, [pc, #56]	; (80028dc <_Z23getFont_verdana_10_4bppv+0x60>)
 80028a2:	480f      	ldr	r0, [pc, #60]	; (80028e0 <_Z23getFont_verdana_10_4bppv+0x64>)
 80028a4:	9403      	str	r4, [sp, #12]
 80028a6:	2201      	movs	r2, #1
 80028a8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80028ac:	2304      	movs	r3, #4
 80028ae:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80028b2:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80028b6:	230a      	movs	r3, #10
 80028b8:	9400      	str	r4, [sp, #0]
 80028ba:	f7ff fd4d 	bl	8002358 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80028be:	4809      	ldr	r0, [pc, #36]	; (80028e4 <_Z23getFont_verdana_10_4bppv+0x68>)
 80028c0:	f017 fadc 	bl	8019e7c <atexit>
 80028c4:	4628      	mov	r0, r5
 80028c6:	f017 fa9a 	bl	8019dfe <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80028ca:	4805      	ldr	r0, [pc, #20]	; (80028e0 <_Z23getFont_verdana_10_4bppv+0x64>)
 80028cc:	b00b      	add	sp, #44	; 0x2c
 80028ce:	bd30      	pop	{r4, r5, pc}
 80028d0:	200013c8 	.word	0x200013c8
 80028d4:	0801e238 	.word	0x0801e238
 80028d8:	0801bb84 	.word	0x0801bb84
 80028dc:	90303678 	.word	0x90303678
 80028e0:	200013cc 	.word	0x200013cc
 80028e4:	08002879 	.word	0x08002879

080028e8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80028e8:	4770      	bx	lr
	...

080028ec <_Z23getFont_verdana_20_4bppv>:
{
 80028ec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80028ee:	4d14      	ldr	r5, [pc, #80]	; (8002940 <_Z23getFont_verdana_20_4bppv+0x54>)
 80028f0:	782c      	ldrb	r4, [r5, #0]
 80028f2:	f3bf 8f5b 	dmb	ish
 80028f6:	f014 0401 	ands.w	r4, r4, #1
{
 80028fa:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80028fc:	d11d      	bne.n	800293a <_Z23getFont_verdana_20_4bppv+0x4e>
 80028fe:	4628      	mov	r0, r5
 8002900:	f017 fa71 	bl	8019de6 <__cxa_guard_acquire>
 8002904:	b1c8      	cbz	r0, 800293a <_Z23getFont_verdana_20_4bppv+0x4e>
 8002906:	233f      	movs	r3, #63	; 0x3f
 8002908:	9307      	str	r3, [sp, #28]
 800290a:	4b0e      	ldr	r3, [pc, #56]	; (8002944 <_Z23getFont_verdana_20_4bppv+0x58>)
 800290c:	9306      	str	r3, [sp, #24]
 800290e:	4b0e      	ldr	r3, [pc, #56]	; (8002948 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002910:	490e      	ldr	r1, [pc, #56]	; (800294c <_Z23getFont_verdana_20_4bppv+0x60>)
 8002912:	480f      	ldr	r0, [pc, #60]	; (8002950 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002914:	9403      	str	r4, [sp, #12]
 8002916:	2201      	movs	r2, #1
 8002918:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800291c:	2304      	movs	r3, #4
 800291e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002922:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002926:	2314      	movs	r3, #20
 8002928:	9400      	str	r4, [sp, #0]
 800292a:	f7ff fd15 	bl	8002358 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800292e:	4809      	ldr	r0, [pc, #36]	; (8002954 <_Z23getFont_verdana_20_4bppv+0x68>)
 8002930:	f017 faa4 	bl	8019e7c <atexit>
 8002934:	4628      	mov	r0, r5
 8002936:	f017 fa62 	bl	8019dfe <__cxa_guard_release>
    return verdana_20_4bpp;
}
 800293a:	4805      	ldr	r0, [pc, #20]	; (8002950 <_Z23getFont_verdana_20_4bppv+0x64>)
 800293c:	b00b      	add	sp, #44	; 0x2c
 800293e:	bd30      	pop	{r4, r5, pc}
 8002940:	200013f0 	.word	0x200013f0
 8002944:	0801e23c 	.word	0x0801e23c
 8002948:	0801bb88 	.word	0x0801bb88
 800294c:	90303688 	.word	0x90303688
 8002950:	200013f4 	.word	0x200013f4
 8002954:	080028e9 	.word	0x080028e9

08002958 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002958:	4770      	bx	lr
	...

0800295c <_Z23getFont_verdana_40_4bppv>:
{
 800295c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800295e:	4d14      	ldr	r5, [pc, #80]	; (80029b0 <_Z23getFont_verdana_40_4bppv+0x54>)
 8002960:	782c      	ldrb	r4, [r5, #0]
 8002962:	f3bf 8f5b 	dmb	ish
 8002966:	f014 0401 	ands.w	r4, r4, #1
{
 800296a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800296c:	d11d      	bne.n	80029aa <_Z23getFont_verdana_40_4bppv+0x4e>
 800296e:	4628      	mov	r0, r5
 8002970:	f017 fa39 	bl	8019de6 <__cxa_guard_acquire>
 8002974:	b1c8      	cbz	r0, 80029aa <_Z23getFont_verdana_40_4bppv+0x4e>
 8002976:	233f      	movs	r3, #63	; 0x3f
 8002978:	9307      	str	r3, [sp, #28]
 800297a:	4b0e      	ldr	r3, [pc, #56]	; (80029b4 <_Z23getFont_verdana_40_4bppv+0x58>)
 800297c:	9306      	str	r3, [sp, #24]
 800297e:	4b0e      	ldr	r3, [pc, #56]	; (80029b8 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002980:	490e      	ldr	r1, [pc, #56]	; (80029bc <_Z23getFont_verdana_40_4bppv+0x60>)
 8002982:	480f      	ldr	r0, [pc, #60]	; (80029c0 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002984:	9403      	str	r4, [sp, #12]
 8002986:	2201      	movs	r2, #1
 8002988:	e9cd 4304 	strd	r4, r3, [sp, #16]
 800298c:	2304      	movs	r3, #4
 800298e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002992:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8002996:	2328      	movs	r3, #40	; 0x28
 8002998:	9400      	str	r4, [sp, #0]
 800299a:	f7ff fcdd 	bl	8002358 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800299e:	4809      	ldr	r0, [pc, #36]	; (80029c4 <_Z23getFont_verdana_40_4bppv+0x68>)
 80029a0:	f017 fa6c 	bl	8019e7c <atexit>
 80029a4:	4628      	mov	r0, r5
 80029a6:	f017 fa2a 	bl	8019dfe <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80029aa:	4805      	ldr	r0, [pc, #20]	; (80029c0 <_Z23getFont_verdana_40_4bppv+0x64>)
 80029ac:	b00b      	add	sp, #44	; 0x2c
 80029ae:	bd30      	pop	{r4, r5, pc}
 80029b0:	20001418 	.word	0x20001418
 80029b4:	0801e240 	.word	0x0801e240
 80029b8:	0801bb8c 	.word	0x0801bb8c
 80029bc:	90303698 	.word	0x90303698
 80029c0:	2000141c 	.word	0x2000141c
 80029c4:	08002959 	.word	0x08002959

080029c8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80029c8:	2000      	movs	r0, #0
 80029ca:	4770      	bx	lr

080029cc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80029cc:	b40e      	push	{r1, r2, r3}
 80029ce:	b503      	push	{r0, r1, lr}
 80029d0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80029d2:	2100      	movs	r1, #0
{
 80029d4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80029d8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80029da:	f009 fde3 	bl	800c5a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80029de:	b002      	add	sp, #8
 80029e0:	f85d eb04 	ldr.w	lr, [sp], #4
 80029e4:	b003      	add	sp, #12
 80029e6:	4770      	bx	lr

080029e8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80029e8:	b40c      	push	{r2, r3}
 80029ea:	b507      	push	{r0, r1, r2, lr}
 80029ec:	ab04      	add	r3, sp, #16
 80029ee:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80029f2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80029f4:	f009 fdd6 	bl	800c5a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80029f8:	b003      	add	sp, #12
 80029fa:	f85d eb04 	ldr.w	lr, [sp], #4
 80029fe:	b002      	add	sp, #8
 8002a00:	4770      	bx	lr
	...

08002a04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002a04:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002a06:	b510      	push	{r4, lr}
 8002a08:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002a0a:	b373      	cbz	r3, 8002a6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002a0c:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002a0e:	b92b      	cbnz	r3, 8002a1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002a10:	4b18      	ldr	r3, [pc, #96]	; (8002a74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002a12:	4a19      	ldr	r2, [pc, #100]	; (8002a78 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002a14:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002a16:	4819      	ldr	r0, [pc, #100]	; (8002a7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002a18:	f017 fa12 	bl	8019e40 <__assert_func>
            return buffer[pos];
 8002a1c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002a1e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002a22:	8b5b      	ldrh	r3, [r3, #26]
 8002a24:	b30b      	cbz	r3, 8002a6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002a26:	f00b f8d3 	bl	800dbd0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002a2a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002a2c:	2b01      	cmp	r3, #1
 8002a2e:	d803      	bhi.n	8002a38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002a30:	4b13      	ldr	r3, [pc, #76]	; (8002a80 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002a32:	4a14      	ldr	r2, [pc, #80]	; (8002a84 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002a34:	21c5      	movs	r1, #197	; 0xc5
 8002a36:	e7ee      	b.n	8002a16 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002a38:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002a3a:	1c53      	adds	r3, r2, #1
 8002a3c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002a3e:	2b09      	cmp	r3, #9
 8002a40:	4619      	mov	r1, r3
 8002a42:	bf88      	it	hi
 8002a44:	f1a3 010a 	subhi.w	r1, r3, #10
 8002a48:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002a4c:	f640 103f 	movw	r0, #2367	; 0x93f
 8002a50:	8b49      	ldrh	r1, [r1, #26]
 8002a52:	4281      	cmp	r1, r0
 8002a54:	d109      	bne.n	8002a6a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002a56:	2b0a      	cmp	r3, #10
 8002a58:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002a5c:	bf28      	it	cs
 8002a5e:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002a60:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002a64:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002a66:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002a68:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002a6a:	4620      	mov	r0, r4
}
 8002a6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002a70:	f00a bf92 	b.w	800d998 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002a74:	0801bb90 	.word	0x0801bb90
 8002a78:	0801bb99 	.word	0x0801bb99
 8002a7c:	0801bc44 	.word	0x0801bc44
 8002a80:	0801bc8e 	.word	0x0801bc8e
 8002a84:	0801bc9c 	.word	0x0801bc9c

08002a88 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002a88:	f00a bf40 	b.w	800d90c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002a8c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002a8c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002a8e:	bb10      	cbnz	r0, 8002ad6 <_ZN8touchgfx5Texts11setLanguageEt+0x4a>
    {
        if (languagesArray[id] != 0)
 8002a90:	4b11      	ldr	r3, [pc, #68]	; (8002ad8 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8002a92:	4812      	ldr	r0, [pc, #72]	; (8002adc <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002a94:	681b      	ldr	r3, [r3, #0]
 8002a96:	4912      	ldr	r1, [pc, #72]	; (8002ae0 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002a98:	b1b3      	cbz	r3, 8002ac8 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002a9a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002a9c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002a9e:	441a      	add	r2, r3
 8002aa0:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002aa2:	685a      	ldr	r2, [r3, #4]
 8002aa4:	441a      	add	r2, r3
 8002aa6:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002aa8:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002aaa:	4b0e      	ldr	r3, [pc, #56]	; (8002ae4 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002aac:	2200      	movs	r2, #0
 8002aae:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002ab0:	f000 f826 	bl	8002b00 <_ZN17TypedTextDatabase8getFontsEv>
 8002ab4:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002ab6:	f000 f821 	bl	8002afc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002aba:	4b0b      	ldr	r3, [pc, #44]	; (8002ae8 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002abc:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002abe:	4b0b      	ldr	r3, [pc, #44]	; (8002aec <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002ac0:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002ac2:	4b0b      	ldr	r3, [pc, #44]	; (8002af0 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002ac4:	8018      	strh	r0, [r3, #0]
    }
}
 8002ac6:	e006      	b.n	8002ad6 <_ZN8touchgfx5Texts11setLanguageEt+0x4a>
            currentLanguageIndices = staticLanguageIndices[id];
 8002ac8:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002aca:	4b0a      	ldr	r3, [pc, #40]	; (8002af4 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
            currentLanguagePtr = texts_all_languages;
 8002acc:	4a0a      	ldr	r2, [pc, #40]	; (8002af8 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002ace:	681c      	ldr	r4, [r3, #0]
            currentLanguagePtr = texts_all_languages;
 8002ad0:	6002      	str	r2, [r0, #0]
    if (currentLanguageTypedText)
 8002ad2:	2c00      	cmp	r4, #0
 8002ad4:	d1e9      	bne.n	8002aaa <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002ad6:	bd38      	pop	{r3, r4, r5, pc}
 8002ad8:	20001440 	.word	0x20001440
 8002adc:	20001444 	.word	0x20001444
 8002ae0:	20001448 	.word	0x20001448
 8002ae4:	2000144c 	.word	0x2000144c
 8002ae8:	2000a3ec 	.word	0x2000a3ec
 8002aec:	2000a3f4 	.word	0x2000a3f4
 8002af0:	2000a3f0 	.word	0x2000a3f0
 8002af4:	903036b0 	.word	0x903036b0
 8002af8:	903036a8 	.word	0x903036a8

08002afc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002afc:	2001      	movs	r0, #1
 8002afe:	4770      	bx	lr

08002b00 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002b00:	4800      	ldr	r0, [pc, #0]	; (8002b04 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002b02:	4770      	bx	lr
 8002b04:	20001450 	.word	0x20001450

08002b08 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8002b08:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002b0a:	f7ff feef 	bl	80028ec <_Z23getFont_verdana_20_4bppv>
};
 8002b0e:	4c04      	ldr	r4, [pc, #16]	; (8002b20 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002b10:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002b12:	f7ff ff23 	bl	800295c <_Z23getFont_verdana_40_4bppv>
};
 8002b16:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002b18:	f7ff feb0 	bl	800287c <_Z23getFont_verdana_10_4bppv>
};
 8002b1c:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 8002b1e:	bd10      	pop	{r4, pc}
 8002b20:	20001450 	.word	0x20001450

08002b24 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002b24:	4770      	bx	lr

08002b26 <_ZN19FrontendApplicationD0Ev>:
 8002b26:	b510      	push	{r4, lr}
 8002b28:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002b2c:	4604      	mov	r4, r0
 8002b2e:	f017 f958 	bl	8019de2 <_ZdlPvj>
 8002b32:	4620      	mov	r0, r4
 8002b34:	bd10      	pop	{r4, pc}

08002b36 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002b36:	b510      	push	{r4, lr}
 8002b38:	4604      	mov	r4, r0
    {
        model.tick();
 8002b3a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002b3e:	f000 f812 	bl	8002b66 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002b42:	4620      	mov	r0, r4
    }
 8002b44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002b48:	f008 bd6a 	b.w	800b620 <_ZN8touchgfx11Application15handleTickEventEv>

08002b4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002b4c:	b510      	push	{r4, lr}
 8002b4e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002b50:	f7ff fb96 	bl	8002280 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002b54:	4b01      	ldr	r3, [pc, #4]	; (8002b5c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002b56:	6023      	str	r3, [r4, #0]
{

}
 8002b58:	4620      	mov	r0, r4
 8002b5a:	bd10      	pop	{r4, pc}
 8002b5c:	0801bd78 	.word	0x0801bd78

08002b60 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002b60:	2200      	movs	r2, #0
 8002b62:	6002      	str	r2, [r0, #0]
{

}
 8002b64:	4770      	bx	lr

08002b66 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002b66:	4770      	bx	lr

08002b68 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002b68:	4770      	bx	lr

08002b6a <_ZThn4_N16Screen1PresenterD1Ev>:
 8002b6a:	3804      	subs	r0, #4
 8002b6c:	4770      	bx	lr

08002b6e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002b6e:	4770      	bx	lr

08002b70 <_ZN16Screen1PresenterD0Ev>:
 8002b70:	b510      	push	{r4, lr}
 8002b72:	2110      	movs	r1, #16
 8002b74:	4604      	mov	r4, r0
 8002b76:	f017 f934 	bl	8019de2 <_ZdlPvj>
 8002b7a:	4620      	mov	r0, r4
 8002b7c:	bd10      	pop	{r4, pc}

08002b7e <_ZThn4_N16Screen1PresenterD0Ev>:
 8002b7e:	f1a0 0004 	sub.w	r0, r0, #4
 8002b82:	e7f5      	b.n	8002b70 <_ZN16Screen1PresenterD0Ev>

08002b84 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002b84:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002b86:	2200      	movs	r2, #0
 8002b88:	6082      	str	r2, [r0, #8]
    : view(v)
 8002b8a:	4a04      	ldr	r2, [pc, #16]	; (8002b9c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002b8c:	60c1      	str	r1, [r0, #12]
 8002b8e:	f102 0408 	add.w	r4, r2, #8
 8002b92:	3220      	adds	r2, #32
 8002b94:	6004      	str	r4, [r0, #0]
 8002b96:	6042      	str	r2, [r0, #4]
}
 8002b98:	bd10      	pop	{r4, pc}
 8002b9a:	bf00      	nop
 8002b9c:	0801bdb4 	.word	0x0801bdb4

08002ba0 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002ba0:	4770      	bx	lr

08002ba2 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002ba2:	4770      	bx	lr

08002ba4 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002ba4:	f7ff bc35 	b.w	8002412 <_ZN15Screen1ViewBase11setupScreenEv>

08002ba8 <_ZN11Screen1ViewD0Ev>:
 8002ba8:	b510      	push	{r4, lr}
 8002baa:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8002bae:	4604      	mov	r4, r0
 8002bb0:	f017 f917 	bl	8019de2 <_ZdlPvj>
 8002bb4:	4620      	mov	r0, r4
 8002bb6:	bd10      	pop	{r4, pc}

08002bb8 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002bb8:	b510      	push	{r4, lr}
 8002bba:	4604      	mov	r4, r0
 8002bbc:	f7ff fd3c 	bl	8002638 <_ZN15Screen1ViewBaseC1Ev>
 8002bc0:	4b01      	ldr	r3, [pc, #4]	; (8002bc8 <_ZN11Screen1ViewC1Ev+0x10>)
 8002bc2:	6023      	str	r3, [r4, #0]
}
 8002bc4:	4620      	mov	r0, r4
 8002bc6:	bd10      	pop	{r4, pc}
 8002bc8:	0801bde4 	.word	0x0801bde4

08002bcc <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002bcc:	4770      	bx	lr

08002bce <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8002bce:	2000      	movs	r0, #0
 8002bd0:	4770      	bx	lr

08002bd2 <ft6x06_ReadID>:
{
 8002bd2:	b510      	push	{r4, lr}
 8002bd4:	4604      	mov	r4, r0
  TS_IO_Init();
 8002bd6:	f000 fb75 	bl	80032c4 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8002bda:	21a8      	movs	r1, #168	; 0xa8
 8002bdc:	b2e0      	uxtb	r0, r4
 8002bde:	f000 fb8d 	bl	80032fc <TS_IO_Read>
}
 8002be2:	b280      	uxth	r0, r0
 8002be4:	bd10      	pop	{r4, pc}
	...

08002be8 <ft6x06_TS_DetectTouch>:
{
 8002be8:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8002bea:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002bec:	2102      	movs	r1, #2
 8002bee:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8002bf0:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8002bf4:	f000 fb82 	bl	80032fc <TS_IO_Read>
 8002bf8:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8002bfc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002c00:	f003 030f 	and.w	r3, r3, #15
 8002c04:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8002c08:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8002c0c:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8002c0e:	bf88      	it	hi
 8002c10:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002c14:	4b04      	ldr	r3, [pc, #16]	; (8002c28 <ft6x06_TS_DetectTouch+0x40>)
 8002c16:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8002c1a:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8002c1e:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8002c20:	2200      	movs	r2, #0
 8002c22:	709a      	strb	r2, [r3, #2]
}
 8002c24:	b002      	add	sp, #8
 8002c26:	bd10      	pop	{r4, pc}
 8002c28:	2000145e 	.word	0x2000145e

08002c2c <ft6x06_TS_GetXY>:
{
 8002c2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002c2e:	4c15      	ldr	r4, [pc, #84]	; (8002c84 <ft6x06_TS_GetXY+0x58>)
{
 8002c30:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002c32:	78a3      	ldrb	r3, [r4, #2]
 8002c34:	7862      	ldrb	r2, [r4, #1]
 8002c36:	429a      	cmp	r2, r3
{
 8002c38:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002c3a:	d91f      	bls.n	8002c7c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002c3c:	b303      	cbz	r3, 8002c80 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8002c3e:	2b01      	cmp	r3, #1
 8002c40:	bf14      	ite	ne
 8002c42:	2100      	movne	r1, #0
 8002c44:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002c46:	2304      	movs	r3, #4
 8002c48:	eb0d 0203 	add.w	r2, sp, r3
 8002c4c:	b2c0      	uxtb	r0, r0
 8002c4e:	f000 fb73 	bl	8003338 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8002c52:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002c56:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002c5a:	021b      	lsls	r3, r3, #8
 8002c5c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002c60:	4313      	orrs	r3, r2
 8002c62:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002c64:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002c68:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002c6c:	021b      	lsls	r3, r3, #8
 8002c6e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002c72:	4313      	orrs	r3, r2
 8002c74:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002c76:	78a3      	ldrb	r3, [r4, #2]
 8002c78:	3301      	adds	r3, #1
 8002c7a:	70a3      	strb	r3, [r4, #2]
}
 8002c7c:	b002      	add	sp, #8
 8002c7e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8002c80:	2103      	movs	r1, #3
 8002c82:	e7e0      	b.n	8002c46 <ft6x06_TS_GetXY+0x1a>
 8002c84:	2000145e 	.word	0x2000145e

08002c88 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002c88:	2201      	movs	r2, #1
 8002c8a:	21a4      	movs	r1, #164	; 0xa4
 8002c8c:	b2c0      	uxtb	r0, r0
 8002c8e:	f000 bb1b 	b.w	80032c8 <TS_IO_Write>

08002c92 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002c92:	2200      	movs	r2, #0
 8002c94:	21a4      	movs	r1, #164	; 0xa4
 8002c96:	b2c0      	uxtb	r0, r0
 8002c98:	f000 bb16 	b.w	80032c8 <TS_IO_Write>

08002c9c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002c9c:	f7ff bff9 	b.w	8002c92 <ft6x06_TS_DisableIT>

08002ca0 <ft6x06_TS_ClearIT>:
 8002ca0:	4770      	bx	lr
	...

08002ca4 <ft6x06_Init>:
{  
 8002ca4:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002ca6:	4b09      	ldr	r3, [pc, #36]	; (8002ccc <ft6x06_Init+0x28>)
 8002ca8:	781a      	ldrb	r2, [r3, #0]
 8002caa:	4290      	cmp	r0, r2
 8002cac:	d00a      	beq.n	8002cc4 <ft6x06_Init+0x20>
 8002cae:	7859      	ldrb	r1, [r3, #1]
 8002cb0:	4288      	cmp	r0, r1
 8002cb2:	d007      	beq.n	8002cc4 <ft6x06_Init+0x20>
 8002cb4:	b10a      	cbz	r2, 8002cba <ft6x06_Init+0x16>
 8002cb6:	b929      	cbnz	r1, 8002cc4 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002cb8:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002cba:	5498      	strb	r0, [r3, r2]
}
 8002cbc:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8002cc0:	f000 bb00 	b.w	80032c4 <TS_IO_Init>
}
 8002cc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002cc8:	4770      	bx	lr
 8002cca:	bf00      	nop
 8002ccc:	2000145c 	.word	0x2000145c

08002cd0 <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8002cd0:	b538      	push	{r3, r4, r5, lr}
 8002cd2:	4604      	mov	r4, r0
 8002cd4:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002cd6:	2000      	movs	r0, #0
 8002cd8:	49c9      	ldr	r1, [pc, #804]	; (8003000 <OTM8009A_Init+0x330>)
 8002cda:	f7fd fea3 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 8002cde:	49c9      	ldr	r1, [pc, #804]	; (8003004 <OTM8009A_Init+0x334>)
 8002ce0:	2003      	movs	r0, #3
 8002ce2:	f7fd fe9f 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 8002ce6:	49c8      	ldr	r1, [pc, #800]	; (8003008 <OTM8009A_Init+0x338>)
 8002ce8:	2000      	movs	r0, #0
 8002cea:	f7fd fe9b 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 8002cee:	49c7      	ldr	r1, [pc, #796]	; (800300c <OTM8009A_Init+0x33c>)
 8002cf0:	2002      	movs	r0, #2
 8002cf2:	f7fd fe97 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002cf6:	49c4      	ldr	r1, [pc, #784]	; (8003008 <OTM8009A_Init+0x338>)
 8002cf8:	2000      	movs	r0, #0
 8002cfa:	f7fd fe93 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 8002cfe:	49c4      	ldr	r1, [pc, #784]	; (8003010 <OTM8009A_Init+0x340>)
 8002d00:	2000      	movs	r0, #0
 8002d02:	f7fd fe8f 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002d06:	200a      	movs	r0, #10
 8002d08:	f000 fb2e 	bl	8003368 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 8002d0c:	49c1      	ldr	r1, [pc, #772]	; (8003014 <OTM8009A_Init+0x344>)
 8002d0e:	2000      	movs	r0, #0
 8002d10:	f7fd fe88 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 8002d14:	49c0      	ldr	r1, [pc, #768]	; (8003018 <OTM8009A_Init+0x348>)
 8002d16:	2000      	movs	r0, #0
 8002d18:	f7fd fe84 	bl	8000a24 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 8002d1c:	200a      	movs	r0, #10
 8002d1e:	f000 fb23 	bl	8003368 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 8002d22:	49be      	ldr	r1, [pc, #760]	; (800301c <OTM8009A_Init+0x34c>)
 8002d24:	2000      	movs	r0, #0
 8002d26:	f7fd fe7d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 8002d2a:	49bd      	ldr	r1, [pc, #756]	; (8003020 <OTM8009A_Init+0x350>)
 8002d2c:	2000      	movs	r0, #0
 8002d2e:	f7fd fe79 	bl	8000a24 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 8002d32:	49bc      	ldr	r1, [pc, #752]	; (8003024 <OTM8009A_Init+0x354>)
 8002d34:	2000      	movs	r0, #0
 8002d36:	f7fd fe75 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002d3a:	49bb      	ldr	r1, [pc, #748]	; (8003028 <OTM8009A_Init+0x358>)
 8002d3c:	2000      	movs	r0, #0
 8002d3e:	f7fd fe71 	bl	8000a24 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 8002d42:	49ba      	ldr	r1, [pc, #744]	; (800302c <OTM8009A_Init+0x35c>)
 8002d44:	2000      	movs	r0, #0
 8002d46:	f7fd fe6d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002d4a:	49b9      	ldr	r1, [pc, #740]	; (8003030 <OTM8009A_Init+0x360>)
 8002d4c:	2000      	movs	r0, #0
 8002d4e:	f7fd fe69 	bl	8000a24 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d52:	49ab      	ldr	r1, [pc, #684]	; (8003000 <OTM8009A_Init+0x330>)
 8002d54:	2000      	movs	r0, #0
 8002d56:	f7fd fe65 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002d5a:	49b6      	ldr	r1, [pc, #728]	; (8003034 <OTM8009A_Init+0x364>)
 8002d5c:	2000      	movs	r0, #0
 8002d5e:	f7fd fe61 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002d62:	49b5      	ldr	r1, [pc, #724]	; (8003038 <OTM8009A_Init+0x368>)
 8002d64:	2000      	movs	r0, #0
 8002d66:	f7fd fe5d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002d6a:	49b4      	ldr	r1, [pc, #720]	; (800303c <OTM8009A_Init+0x36c>)
 8002d6c:	2000      	movs	r0, #0
 8002d6e:	f7fd fe59 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002d72:	49b3      	ldr	r1, [pc, #716]	; (8003040 <OTM8009A_Init+0x370>)
 8002d74:	2000      	movs	r0, #0
 8002d76:	f7fd fe55 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002d7a:	49b2      	ldr	r1, [pc, #712]	; (8003044 <OTM8009A_Init+0x374>)
 8002d7c:	2000      	movs	r0, #0
 8002d7e:	f7fd fe51 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 8002d82:	49b1      	ldr	r1, [pc, #708]	; (8003048 <OTM8009A_Init+0x378>)
 8002d84:	2000      	movs	r0, #0
 8002d86:	f7fd fe4d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002d8a:	49b0      	ldr	r1, [pc, #704]	; (800304c <OTM8009A_Init+0x37c>)
 8002d8c:	2000      	movs	r0, #0
 8002d8e:	f7fd fe49 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 8002d92:	49af      	ldr	r1, [pc, #700]	; (8003050 <OTM8009A_Init+0x380>)
 8002d94:	2000      	movs	r0, #0
 8002d96:	f7fd fe45 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002d9a:	49a3      	ldr	r1, [pc, #652]	; (8003028 <OTM8009A_Init+0x358>)
 8002d9c:	2000      	movs	r0, #0
 8002d9e:	f7fd fe41 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002da2:	4997      	ldr	r1, [pc, #604]	; (8003000 <OTM8009A_Init+0x330>)
 8002da4:	2000      	movs	r0, #0
 8002da6:	f7fd fe3d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002daa:	49aa      	ldr	r1, [pc, #680]	; (8003054 <OTM8009A_Init+0x384>)
 8002dac:	2002      	movs	r0, #2
 8002dae:	f7fd fe39 	bl	8000a24 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 8002db2:	49a9      	ldr	r1, [pc, #676]	; (8003058 <OTM8009A_Init+0x388>)
 8002db4:	2000      	movs	r0, #0
 8002db6:	f7fd fe35 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002dba:	49a8      	ldr	r1, [pc, #672]	; (800305c <OTM8009A_Init+0x38c>)
 8002dbc:	2000      	movs	r0, #0
 8002dbe:	f7fd fe31 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 8002dc2:	49a7      	ldr	r1, [pc, #668]	; (8003060 <OTM8009A_Init+0x390>)
 8002dc4:	2000      	movs	r0, #0
 8002dc6:	f7fd fe2d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002dca:	49a6      	ldr	r1, [pc, #664]	; (8003064 <OTM8009A_Init+0x394>)
 8002dcc:	2000      	movs	r0, #0
 8002dce:	f7fd fe29 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 8002dd2:	49a5      	ldr	r1, [pc, #660]	; (8003068 <OTM8009A_Init+0x398>)
 8002dd4:	2000      	movs	r0, #0
 8002dd6:	f7fd fe25 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 8002dda:	49a4      	ldr	r1, [pc, #656]	; (800306c <OTM8009A_Init+0x39c>)
 8002ddc:	2000      	movs	r0, #0
 8002dde:	f7fd fe21 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002de2:	4995      	ldr	r1, [pc, #596]	; (8003038 <OTM8009A_Init+0x368>)
 8002de4:	2000      	movs	r0, #0
 8002de6:	f7fd fe1d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 8002dea:	49a1      	ldr	r1, [pc, #644]	; (8003070 <OTM8009A_Init+0x3a0>)
 8002dec:	2000      	movs	r0, #0
 8002dee:	f7fd fe19 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 8002df2:	4993      	ldr	r1, [pc, #588]	; (8003040 <OTM8009A_Init+0x370>)
 8002df4:	2000      	movs	r0, #0
 8002df6:	f7fd fe15 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 8002dfa:	499e      	ldr	r1, [pc, #632]	; (8003074 <OTM8009A_Init+0x3a4>)
 8002dfc:	2000      	movs	r0, #0
 8002dfe:	f7fd fe11 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 8002e02:	499d      	ldr	r1, [pc, #628]	; (8003078 <OTM8009A_Init+0x3a8>)
 8002e04:	2000      	movs	r0, #0
 8002e06:	f7fd fe0d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 8002e0a:	499c      	ldr	r1, [pc, #624]	; (800307c <OTM8009A_Init+0x3ac>)
 8002e0c:	2002      	movs	r0, #2
 8002e0e:	f7fd fe09 	bl	8000a24 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002e12:	497d      	ldr	r1, [pc, #500]	; (8003008 <OTM8009A_Init+0x338>)
 8002e14:	2000      	movs	r0, #0
 8002e16:	f7fd fe05 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 8002e1a:	4999      	ldr	r1, [pc, #612]	; (8003080 <OTM8009A_Init+0x3b0>)
 8002e1c:	2006      	movs	r0, #6
 8002e1e:	f7fd fe01 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002e22:	4998      	ldr	r1, [pc, #608]	; (8003084 <OTM8009A_Init+0x3b4>)
 8002e24:	2000      	movs	r0, #0
 8002e26:	f7fd fdfd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 8002e2a:	4997      	ldr	r1, [pc, #604]	; (8003088 <OTM8009A_Init+0x3b8>)
 8002e2c:	200e      	movs	r0, #14
 8002e2e:	f7fd fdf9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002e32:	4996      	ldr	r1, [pc, #600]	; (800308c <OTM8009A_Init+0x3bc>)
 8002e34:	2000      	movs	r0, #0
 8002e36:	f7fd fdf5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002e3a:	4995      	ldr	r1, [pc, #596]	; (8003090 <OTM8009A_Init+0x3c0>)
 8002e3c:	200e      	movs	r0, #14
 8002e3e:	f7fd fdf1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002e42:	4994      	ldr	r1, [pc, #592]	; (8003094 <OTM8009A_Init+0x3c4>)
 8002e44:	2000      	movs	r0, #0
 8002e46:	f7fd fded 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002e4a:	4993      	ldr	r1, [pc, #588]	; (8003098 <OTM8009A_Init+0x3c8>)
 8002e4c:	200a      	movs	r0, #10
 8002e4e:	f7fd fde9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002e52:	4992      	ldr	r1, [pc, #584]	; (800309c <OTM8009A_Init+0x3cc>)
 8002e54:	2000      	movs	r0, #0
 8002e56:	f7fd fde5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002e5a:	4991      	ldr	r1, [pc, #580]	; (80030a0 <OTM8009A_Init+0x3d0>)
 8002e5c:	2000      	movs	r0, #0
 8002e5e:	f7fd fde1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002e62:	4969      	ldr	r1, [pc, #420]	; (8003008 <OTM8009A_Init+0x338>)
 8002e64:	2000      	movs	r0, #0
 8002e66:	f7fd fddd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002e6a:	498e      	ldr	r1, [pc, #568]	; (80030a4 <OTM8009A_Init+0x3d4>)
 8002e6c:	200a      	movs	r0, #10
 8002e6e:	f7fd fdd9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002e72:	498d      	ldr	r1, [pc, #564]	; (80030a8 <OTM8009A_Init+0x3d8>)
 8002e74:	2000      	movs	r0, #0
 8002e76:	f7fd fdd5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002e7a:	498c      	ldr	r1, [pc, #560]	; (80030ac <OTM8009A_Init+0x3dc>)
 8002e7c:	200f      	movs	r0, #15
 8002e7e:	f7fd fdd1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002e82:	4980      	ldr	r1, [pc, #512]	; (8003084 <OTM8009A_Init+0x3b4>)
 8002e84:	2000      	movs	r0, #0
 8002e86:	f7fd fdcd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002e8a:	4989      	ldr	r1, [pc, #548]	; (80030b0 <OTM8009A_Init+0x3e0>)
 8002e8c:	200f      	movs	r0, #15
 8002e8e:	f7fd fdc9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002e92:	497e      	ldr	r1, [pc, #504]	; (800308c <OTM8009A_Init+0x3bc>)
 8002e94:	2000      	movs	r0, #0
 8002e96:	f7fd fdc5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002e9a:	4986      	ldr	r1, [pc, #536]	; (80030b4 <OTM8009A_Init+0x3e4>)
 8002e9c:	200a      	movs	r0, #10
 8002e9e:	f7fd fdc1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002ea2:	497c      	ldr	r1, [pc, #496]	; (8003094 <OTM8009A_Init+0x3c4>)
 8002ea4:	2000      	movs	r0, #0
 8002ea6:	f7fd fdbd 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002eaa:	4983      	ldr	r1, [pc, #524]	; (80030b8 <OTM8009A_Init+0x3e8>)
 8002eac:	200f      	movs	r0, #15
 8002eae:	f7fd fdb9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002eb2:	497a      	ldr	r1, [pc, #488]	; (800309c <OTM8009A_Init+0x3cc>)
 8002eb4:	2000      	movs	r0, #0
 8002eb6:	f7fd fdb5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002eba:	4980      	ldr	r1, [pc, #512]	; (80030bc <OTM8009A_Init+0x3ec>)
 8002ebc:	200f      	movs	r0, #15
 8002ebe:	f7fd fdb1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002ec2:	497f      	ldr	r1, [pc, #508]	; (80030c0 <OTM8009A_Init+0x3f0>)
 8002ec4:	2000      	movs	r0, #0
 8002ec6:	f7fd fdad 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002eca:	497e      	ldr	r1, [pc, #504]	; (80030c4 <OTM8009A_Init+0x3f4>)
 8002ecc:	200a      	movs	r0, #10
 8002ece:	f7fd fda9 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002ed2:	497d      	ldr	r1, [pc, #500]	; (80030c8 <OTM8009A_Init+0x3f8>)
 8002ed4:	2000      	movs	r0, #0
 8002ed6:	f7fd fda5 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002eda:	497c      	ldr	r1, [pc, #496]	; (80030cc <OTM8009A_Init+0x3fc>)
 8002edc:	200a      	movs	r0, #10
 8002ede:	f7fd fda1 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002ee2:	4949      	ldr	r1, [pc, #292]	; (8003008 <OTM8009A_Init+0x338>)
 8002ee4:	2000      	movs	r0, #0
 8002ee6:	f7fd fd9d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002eea:	4979      	ldr	r1, [pc, #484]	; (80030d0 <OTM8009A_Init+0x400>)
 8002eec:	200a      	movs	r0, #10
 8002eee:	f7fd fd99 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002ef2:	496d      	ldr	r1, [pc, #436]	; (80030a8 <OTM8009A_Init+0x3d8>)
 8002ef4:	2000      	movs	r0, #0
 8002ef6:	f7fd fd95 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002efa:	4976      	ldr	r1, [pc, #472]	; (80030d4 <OTM8009A_Init+0x404>)
 8002efc:	200f      	movs	r0, #15
 8002efe:	f7fd fd91 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002f02:	4960      	ldr	r1, [pc, #384]	; (8003084 <OTM8009A_Init+0x3b4>)
 8002f04:	2000      	movs	r0, #0
 8002f06:	f7fd fd8d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002f0a:	4973      	ldr	r1, [pc, #460]	; (80030d8 <OTM8009A_Init+0x408>)
 8002f0c:	200f      	movs	r0, #15
 8002f0e:	f7fd fd89 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002f12:	495e      	ldr	r1, [pc, #376]	; (800308c <OTM8009A_Init+0x3bc>)
 8002f14:	2000      	movs	r0, #0
 8002f16:	f7fd fd85 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002f1a:	4970      	ldr	r1, [pc, #448]	; (80030dc <OTM8009A_Init+0x40c>)
 8002f1c:	200a      	movs	r0, #10
 8002f1e:	f7fd fd81 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002f22:	495c      	ldr	r1, [pc, #368]	; (8003094 <OTM8009A_Init+0x3c4>)
 8002f24:	2000      	movs	r0, #0
 8002f26:	f7fd fd7d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002f2a:	496d      	ldr	r1, [pc, #436]	; (80030e0 <OTM8009A_Init+0x410>)
 8002f2c:	200f      	movs	r0, #15
 8002f2e:	f7fd fd79 	bl	8000a24 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002f32:	495a      	ldr	r1, [pc, #360]	; (800309c <OTM8009A_Init+0x3cc>)
 8002f34:	2000      	movs	r0, #0
 8002f36:	f7fd fd75 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002f3a:	496a      	ldr	r1, [pc, #424]	; (80030e4 <OTM8009A_Init+0x414>)
 8002f3c:	200f      	movs	r0, #15
 8002f3e:	f7fd fd71 	bl	8000a24 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002f42:	493d      	ldr	r1, [pc, #244]	; (8003038 <OTM8009A_Init+0x368>)
 8002f44:	2000      	movs	r0, #0
 8002f46:	f7fd fd6d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002f4a:	4967      	ldr	r1, [pc, #412]	; (80030e8 <OTM8009A_Init+0x418>)
 8002f4c:	2000      	movs	r0, #0
 8002f4e:	f7fd fd69 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002f52:	4966      	ldr	r1, [pc, #408]	; (80030ec <OTM8009A_Init+0x41c>)
 8002f54:	2000      	movs	r0, #0
 8002f56:	f7fd fd65 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002f5a:	4965      	ldr	r1, [pc, #404]	; (80030f0 <OTM8009A_Init+0x420>)
 8002f5c:	2000      	movs	r0, #0
 8002f5e:	f7fd fd61 	bl	8000a24 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002f62:	4964      	ldr	r1, [pc, #400]	; (80030f4 <OTM8009A_Init+0x424>)
 8002f64:	2000      	movs	r0, #0
 8002f66:	f7fd fd5d 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002f6a:	4963      	ldr	r1, [pc, #396]	; (80030f8 <OTM8009A_Init+0x428>)
 8002f6c:	2000      	movs	r0, #0
 8002f6e:	f7fd fd59 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f72:	4923      	ldr	r1, [pc, #140]	; (8003000 <OTM8009A_Init+0x330>)
 8002f74:	2000      	movs	r0, #0
 8002f76:	f7fd fd55 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002f7a:	4960      	ldr	r1, [pc, #384]	; (80030fc <OTM8009A_Init+0x42c>)
 8002f7c:	2003      	movs	r0, #3
 8002f7e:	f7fd fd51 	bl	8000a24 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f82:	491f      	ldr	r1, [pc, #124]	; (8003000 <OTM8009A_Init+0x330>)
 8002f84:	2000      	movs	r0, #0
 8002f86:	f7fd fd4d 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f8a:	491d      	ldr	r1, [pc, #116]	; (8003000 <OTM8009A_Init+0x330>)
 8002f8c:	2000      	movs	r0, #0
 8002f8e:	f7fd fd49 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8002f92:	495b      	ldr	r1, [pc, #364]	; (8003100 <OTM8009A_Init+0x430>)
 8002f94:	2010      	movs	r0, #16
 8002f96:	f7fd fd45 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002f9a:	4919      	ldr	r1, [pc, #100]	; (8003000 <OTM8009A_Init+0x330>)
 8002f9c:	2000      	movs	r0, #0
 8002f9e:	f7fd fd41 	bl	8000a24 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8002fa2:	4958      	ldr	r1, [pc, #352]	; (8003104 <OTM8009A_Init+0x434>)
 8002fa4:	2010      	movs	r0, #16
 8002fa6:	f7fd fd3d 	bl	8000a24 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8002faa:	2000      	movs	r0, #0
 8002fac:	4956      	ldr	r1, [pc, #344]	; (8003108 <OTM8009A_Init+0x438>)
 8002fae:	f7fd fd39 	bl	8000a24 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8002fb2:	2078      	movs	r0, #120	; 0x78
 8002fb4:	f000 f9d8 	bl	8003368 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8002fb8:	2c00      	cmp	r4, #0
 8002fba:	f000 80c7 	beq.w	800314c <OTM8009A_Init+0x47c>
 8002fbe:	2c02      	cmp	r4, #2
 8002fc0:	d103      	bne.n	8002fca <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8002fc2:	4952      	ldr	r1, [pc, #328]	; (800310c <OTM8009A_Init+0x43c>)
 8002fc4:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002fc6:	f7fd fd2d 	bl	8000a24 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8002fca:	2d01      	cmp	r5, #1
 8002fcc:	d10b      	bne.n	8002fe6 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8002fce:	4950      	ldr	r1, [pc, #320]	; (8003110 <OTM8009A_Init+0x440>)
 8002fd0:	2000      	movs	r0, #0
 8002fd2:	f7fd fd27 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8002fd6:	494f      	ldr	r1, [pc, #316]	; (8003114 <OTM8009A_Init+0x444>)
 8002fd8:	2004      	movs	r0, #4
 8002fda:	f7fd fd23 	bl	8000a24 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8002fde:	494e      	ldr	r1, [pc, #312]	; (8003118 <OTM8009A_Init+0x448>)
 8002fe0:	2004      	movs	r0, #4
 8002fe2:	f7fd fd1f 	bl	8000a24 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8002fe6:	494d      	ldr	r1, [pc, #308]	; (800311c <OTM8009A_Init+0x44c>)
 8002fe8:	2000      	movs	r0, #0
 8002fea:	f7fd fd1b 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8002fee:	494c      	ldr	r1, [pc, #304]	; (8003120 <OTM8009A_Init+0x450>)
 8002ff0:	2000      	movs	r0, #0
 8002ff2:	f7fd fd17 	bl	8000a24 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8002ff6:	494b      	ldr	r1, [pc, #300]	; (8003124 <OTM8009A_Init+0x454>)
 8002ff8:	2000      	movs	r0, #0
 8002ffa:	f7fd fd13 	bl	8000a24 <DSI_IO_WriteCmd>
 8002ffe:	e093      	b.n	8003128 <OTM8009A_Init+0x458>
 8003000:	0801be10 	.word	0x0801be10
 8003004:	0801be76 	.word	0x0801be76
 8003008:	0801be26 	.word	0x0801be26
 800300c:	0801befc 	.word	0x0801befc
 8003010:	0801be3c 	.word	0x0801be3c
 8003014:	0801be52 	.word	0x0801be52
 8003018:	0801be68 	.word	0x0801be68
 800301c:	0801be6e 	.word	0x0801be6e
 8003020:	0801be70 	.word	0x0801be70
 8003024:	0801be72 	.word	0x0801be72
 8003028:	0801be74 	.word	0x0801be74
 800302c:	0801be12 	.word	0x0801be12
 8003030:	0801be14 	.word	0x0801be14
 8003034:	0801be16 	.word	0x0801be16
 8003038:	0801be18 	.word	0x0801be18
 800303c:	0801be1a 	.word	0x0801be1a
 8003040:	0801be1c 	.word	0x0801be1c
 8003044:	0801be1e 	.word	0x0801be1e
 8003048:	0801be20 	.word	0x0801be20
 800304c:	0801be22 	.word	0x0801be22
 8003050:	0801be24 	.word	0x0801be24
 8003054:	0801bf7a 	.word	0x0801bf7a
 8003058:	0801be28 	.word	0x0801be28
 800305c:	0801be2a 	.word	0x0801be2a
 8003060:	0801be2c 	.word	0x0801be2c
 8003064:	0801be2e 	.word	0x0801be2e
 8003068:	0801be30 	.word	0x0801be30
 800306c:	0801be32 	.word	0x0801be32
 8003070:	0801be34 	.word	0x0801be34
 8003074:	0801be36 	.word	0x0801be36
 8003078:	0801be38 	.word	0x0801be38
 800307c:	0801bf7d 	.word	0x0801bf7d
 8003080:	0801bf80 	.word	0x0801bf80
 8003084:	0801be3a 	.word	0x0801be3a
 8003088:	0801bf87 	.word	0x0801bf87
 800308c:	0801be3e 	.word	0x0801be3e
 8003090:	0801bf96 	.word	0x0801bf96
 8003094:	0801be40 	.word	0x0801be40
 8003098:	0801be7a 	.word	0x0801be7a
 800309c:	0801be42 	.word	0x0801be42
 80030a0:	0801be60 	.word	0x0801be60
 80030a4:	0801be85 	.word	0x0801be85
 80030a8:	0801be44 	.word	0x0801be44
 80030ac:	0801be90 	.word	0x0801be90
 80030b0:	0801bea0 	.word	0x0801bea0
 80030b4:	0801beb0 	.word	0x0801beb0
 80030b8:	0801bebb 	.word	0x0801bebb
 80030bc:	0801becb 	.word	0x0801becb
 80030c0:	0801be46 	.word	0x0801be46
 80030c4:	0801bedb 	.word	0x0801bedb
 80030c8:	0801be48 	.word	0x0801be48
 80030cc:	0801bee6 	.word	0x0801bee6
 80030d0:	0801bef1 	.word	0x0801bef1
 80030d4:	0801beff 	.word	0x0801beff
 80030d8:	0801bf0f 	.word	0x0801bf0f
 80030dc:	0801bf1f 	.word	0x0801bf1f
 80030e0:	0801bf2a 	.word	0x0801bf2a
 80030e4:	0801bf3a 	.word	0x0801bf3a
 80030e8:	0801be62 	.word	0x0801be62
 80030ec:	0801be64 	.word	0x0801be64
 80030f0:	0801be66 	.word	0x0801be66
 80030f4:	0801be6a 	.word	0x0801be6a
 80030f8:	0801be6c 	.word	0x0801be6c
 80030fc:	0801bf4a 	.word	0x0801bf4a
 8003100:	0801bf58 	.word	0x0801bf58
 8003104:	0801bf69 	.word	0x0801bf69
 8003108:	0801be4a 	.word	0x0801be4a
 800310c:	0801be4c 	.word	0x0801be4c
 8003110:	0801be50 	.word	0x0801be50
 8003114:	0801bf4e 	.word	0x0801bf4e
 8003118:	0801bf53 	.word	0x0801bf53
 800311c:	0801be54 	.word	0x0801be54
 8003120:	0801be56 	.word	0x0801be56
 8003124:	0801be58 	.word	0x0801be58

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8003128:	490a      	ldr	r1, [pc, #40]	; (8003154 <OTM8009A_Init+0x484>)
 800312a:	2000      	movs	r0, #0
 800312c:	f7fd fc7a 	bl	8000a24 <DSI_IO_WriteCmd>

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8003130:	4909      	ldr	r1, [pc, #36]	; (8003158 <OTM8009A_Init+0x488>)
 8003132:	2000      	movs	r0, #0
 8003134:	f7fd fc76 	bl	8000a24 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8003138:	4908      	ldr	r1, [pc, #32]	; (800315c <OTM8009A_Init+0x48c>)
 800313a:	2000      	movs	r0, #0
 800313c:	f7fd fc72 	bl	8000a24 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8003140:	4907      	ldr	r1, [pc, #28]	; (8003160 <OTM8009A_Init+0x490>)
 8003142:	2000      	movs	r0, #0
 8003144:	f7fd fc6e 	bl	8000a24 <DSI_IO_WriteCmd>

  return 0;
}
 8003148:	2000      	movs	r0, #0
 800314a:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 800314c:	4905      	ldr	r1, [pc, #20]	; (8003164 <OTM8009A_Init+0x494>)
 800314e:	4620      	mov	r0, r4
 8003150:	e739      	b.n	8002fc6 <OTM8009A_Init+0x2f6>
 8003152:	bf00      	nop
 8003154:	0801be5a 	.word	0x0801be5a
 8003158:	0801be5c 	.word	0x0801be5c
 800315c:	0801be10 	.word	0x0801be10
 8003160:	0801be5e 	.word	0x0801be5e
 8003164:	0801be4e 	.word	0x0801be4e

08003168 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8003168:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800316a:	4d2f      	ldr	r5, [pc, #188]	; (8003228 <I2C1_Init+0xc0>)
{
 800316c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800316e:	4628      	mov	r0, r5
 8003170:	f002 fa74 	bl	800565c <HAL_I2C_GetState>
 8003174:	4604      	mov	r4, r0
 8003176:	2800      	cmp	r0, #0
 8003178:	d154      	bne.n	8003224 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800317a:	4a2c      	ldr	r2, [pc, #176]	; (800322c <I2C1_Init+0xc4>)
 800317c:	4b2c      	ldr	r3, [pc, #176]	; (8003230 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800317e:	4e2d      	ldr	r6, [pc, #180]	; (8003234 <I2C1_Init+0xcc>)
 8003180:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8003182:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8003186:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800318a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800318e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8003192:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8003196:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8003198:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800319a:	f043 0302 	orr.w	r3, r3, #2
 800319e:	6333      	str	r3, [r6, #48]	; 0x30
 80031a0:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 80031a2:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80031a4:	f003 0302 	and.w	r3, r3, #2
 80031a8:	9301      	str	r3, [sp, #4]
 80031aa:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 80031ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 80031b0:	2312      	movs	r3, #18
 80031b2:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 80031b6:	2002      	movs	r0, #2
 80031b8:	2304      	movs	r3, #4
 80031ba:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80031be:	a903      	add	r1, sp, #12
 80031c0:	481d      	ldr	r0, [pc, #116]	; (8003238 <I2C1_Init+0xd0>)
 80031c2:	f001 fc79 	bl	8004ab8 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 80031c6:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80031ca:	a903      	add	r1, sp, #12
 80031cc:	481a      	ldr	r0, [pc, #104]	; (8003238 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 80031ce:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80031d0:	f001 fc72 	bl	8004ab8 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 80031d4:	9402      	str	r4, [sp, #8]
 80031d6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80031d8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80031dc:	6433      	str	r3, [r6, #64]	; 0x40
 80031de:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80031e0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80031e4:	9302      	str	r3, [sp, #8]
 80031e6:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 80031e8:	6a33      	ldr	r3, [r6, #32]
 80031ea:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80031ee:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 80031f0:	6a33      	ldr	r3, [r6, #32]
 80031f2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80031f6:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 80031f8:	4622      	mov	r2, r4
 80031fa:	2105      	movs	r1, #5
 80031fc:	201f      	movs	r0, #31
 80031fe:	f000 fd15 	bl	8003c2c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8003202:	201f      	movs	r0, #31
 8003204:	f000 fd44 	bl	8003c90 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8003208:	4622      	mov	r2, r4
 800320a:	2105      	movs	r1, #5
 800320c:	2020      	movs	r0, #32
 800320e:	f000 fd0d 	bl	8003c2c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8003212:	2020      	movs	r0, #32
 8003214:	f000 fd3c 	bl	8003c90 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8003218:	4628      	mov	r0, r5
  }
}
 800321a:	b008      	add	sp, #32
 800321c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8003220:	f001 bfc2 	b.w	80051a8 <HAL_I2C_Init>
}
 8003224:	b008      	add	sp, #32
 8003226:	bd70      	pop	{r4, r5, r6, pc}
 8003228:	20001464 	.word	0x20001464
 800322c:	40005400 	.word	0x40005400
 8003230:	00061a80 	.word	0x00061a80
 8003234:	40023800 	.word	0x40023800
 8003238:	40020400 	.word	0x40020400

0800323c <BSP_PB_Init>:
{
 800323c:	b510      	push	{r4, lr}
 800323e:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8003240:	4b18      	ldr	r3, [pc, #96]	; (80032a4 <BSP_PB_Init+0x68>)
 8003242:	2400      	movs	r4, #0
 8003244:	9400      	str	r4, [sp, #0]
 8003246:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003248:	f042 0201 	orr.w	r2, r2, #1
 800324c:	631a      	str	r2, [r3, #48]	; 0x30
 800324e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003250:	f003 0301 	and.w	r3, r3, #1
 8003254:	9300      	str	r3, [sp, #0]
 8003256:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8003258:	b969      	cbnz	r1, 8003276 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800325a:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800325c:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003260:	2302      	movs	r3, #2
 8003262:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003264:	4b10      	ldr	r3, [pc, #64]	; (80032a8 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003266:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003268:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800326c:	a901      	add	r1, sp, #4
 800326e:	f001 fc23 	bl	8004ab8 <HAL_GPIO_Init>
}
 8003272:	b006      	add	sp, #24
 8003274:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8003276:	2901      	cmp	r1, #1
 8003278:	d1fb      	bne.n	8003272 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800327a:	2302      	movs	r3, #2
 800327c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800327e:	4b0b      	ldr	r3, [pc, #44]	; (80032ac <BSP_PB_Init+0x70>)
 8003280:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003282:	4b09      	ldr	r3, [pc, #36]	; (80032a8 <BSP_PB_Init+0x6c>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8003284:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8003286:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800328a:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800328c:	a901      	add	r1, sp, #4
 800328e:	f001 fc13 	bl	8004ab8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8003292:	4622      	mov	r2, r4
 8003294:	210f      	movs	r1, #15
 8003296:	2006      	movs	r0, #6
 8003298:	f000 fcc8 	bl	8003c2c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800329c:	2006      	movs	r0, #6
 800329e:	f000 fcf7 	bl	8003c90 <HAL_NVIC_EnableIRQ>
}
 80032a2:	e7e6      	b.n	8003272 <BSP_PB_Init+0x36>
 80032a4:	40023800 	.word	0x40023800
 80032a8:	20000048 	.word	0x20000048
 80032ac:	10110000 	.word	0x10110000

080032b0 <BSP_PB_GetState>:
{
 80032b0:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 80032b2:	4b03      	ldr	r3, [pc, #12]	; (80032c0 <BSP_PB_GetState+0x10>)
 80032b4:	2101      	movs	r1, #1
 80032b6:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80032ba:	f001 fd87 	bl	8004dcc <HAL_GPIO_ReadPin>
}
 80032be:	bd08      	pop	{r3, pc}
 80032c0:	20000048 	.word	0x20000048

080032c4 <TS_IO_Init>:
 80032c4:	f7ff bf50 	b.w	8003168 <I2C1_Init>

080032c8 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 80032c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 80032ca:	2301      	movs	r3, #1
 80032cc:	f88d 2017 	strb.w	r2, [sp, #23]
 80032d0:	2264      	movs	r2, #100	; 0x64
 80032d2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80032d6:	f10d 0217 	add.w	r2, sp, #23
 80032da:	9200      	str	r2, [sp, #0]
 80032dc:	460a      	mov	r2, r1
 80032de:	4601      	mov	r1, r0
 80032e0:	4805      	ldr	r0, [pc, #20]	; (80032f8 <TS_IO_Write+0x30>)
 80032e2:	f002 f823 	bl	800532c <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80032e6:	b120      	cbz	r0, 80032f2 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 80032e8:	4803      	ldr	r0, [pc, #12]	; (80032f8 <TS_IO_Write+0x30>)
 80032ea:	f002 f805 	bl	80052f8 <HAL_I2C_DeInit>
  I2C1_Init();
 80032ee:	f7ff ff3b 	bl	8003168 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 80032f2:	b007      	add	sp, #28
 80032f4:	f85d fb04 	ldr.w	pc, [sp], #4
 80032f8:	20001464 	.word	0x20001464

080032fc <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80032fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80032fe:	2300      	movs	r3, #0
{
 8003300:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8003302:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8003306:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800330a:	2301      	movs	r3, #1
 800330c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8003310:	f10d 0117 	add.w	r1, sp, #23
 8003314:	9100      	str	r1, [sp, #0]
 8003316:	4601      	mov	r1, r0
 8003318:	4806      	ldr	r0, [pc, #24]	; (8003334 <TS_IO_Read+0x38>)
 800331a:	f002 f897 	bl	800544c <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 800331e:	b120      	cbz	r0, 800332a <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8003320:	4804      	ldr	r0, [pc, #16]	; (8003334 <TS_IO_Read+0x38>)
 8003322:	f001 ffe9 	bl	80052f8 <HAL_I2C_DeInit>
  I2C1_Init();
 8003326:	f7ff ff1f 	bl	8003168 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 800332a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800332e:	b007      	add	sp, #28
 8003330:	f85d fb04 	ldr.w	pc, [sp], #4
 8003334:	20001464 	.word	0x20001464

08003338 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8003338:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800333a:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800333e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003342:	9200      	str	r2, [sp, #0]
 8003344:	2301      	movs	r3, #1
 8003346:	460a      	mov	r2, r1
 8003348:	4601      	mov	r1, r0
 800334a:	4806      	ldr	r0, [pc, #24]	; (8003364 <TS_IO_ReadMultiple+0x2c>)
 800334c:	f002 f87e 	bl	800544c <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8003350:	4604      	mov	r4, r0
 8003352:	b120      	cbz	r0, 800335e <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8003354:	4803      	ldr	r0, [pc, #12]	; (8003364 <TS_IO_ReadMultiple+0x2c>)
 8003356:	f001 ffcf 	bl	80052f8 <HAL_I2C_DeInit>
  I2C1_Init();
 800335a:	f7ff ff05 	bl	8003168 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 800335e:	b2a0      	uxth	r0, r4
 8003360:	b004      	add	sp, #16
 8003362:	bd10      	pop	{r4, pc}
 8003364:	20001464 	.word	0x20001464

08003368 <OTM8009A_IO_Delay>:
 8003368:	f000 bc3a 	b.w	8003be0 <HAL_Delay>

0800336c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800336c:	b500      	push	{lr}
 800336e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003370:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003374:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8003376:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800337a:	2205      	movs	r2, #5
 800337c:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800337e:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8003380:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8003382:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8003384:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003388:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800338c:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8003390:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003392:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8003394:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8003396:	2210      	movs	r2, #16
 8003398:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800339a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800339e:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 80033a0:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80033a2:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80033a4:	a906      	add	r1, sp, #24
 80033a6:	466a      	mov	r2, sp
 80033a8:	4804      	ldr	r0, [pc, #16]	; (80033bc <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 80033aa:	f002 fcd0 	bl	8005d4e <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 80033ae:	3800      	subs	r0, #0
 80033b0:	bf18      	it	ne
 80033b2:	2001      	movne	r0, #1
 80033b4:	b015      	add	sp, #84	; 0x54
 80033b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80033ba:	bf00      	nop
 80033bc:	200014b8 	.word	0x200014b8

080033c0 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 80033c0:	b500      	push	{lr}
 80033c2:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80033c4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80033c8:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 80033ca:	2306      	movs	r3, #6
 80033cc:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033ce:	4817      	ldr	r0, [pc, #92]	; (800342c <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80033d0:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80033d6:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80033d8:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80033dc:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 80033e0:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80033e2:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80033e4:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033e6:	f002 fc6e 	bl	8005cc6 <HAL_QSPI_Command>
 80033ea:	b9e0      	cbnz	r0, 8003426 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80033ec:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80033ee:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80033f2:	2201      	movs	r2, #1
 80033f4:	2310      	movs	r3, #16
 80033f6:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80033fa:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80033fe:	2305      	movs	r3, #5
 8003400:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8003404:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8003408:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800340a:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800340c:	4807      	ldr	r0, [pc, #28]	; (800342c <QSPI_WriteEnable.constprop.0+0x6c>)
 800340e:	f241 3388 	movw	r3, #5000	; 0x1388
 8003412:	466a      	mov	r2, sp
 8003414:	a906      	add	r1, sp, #24
 8003416:	f002 fc9a 	bl	8005d4e <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 800341a:	3800      	subs	r0, #0
 800341c:	bf18      	it	ne
 800341e:	2001      	movne	r0, #1
}
 8003420:	b015      	add	sp, #84	; 0x54
 8003422:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8003426:	2001      	movs	r0, #1
 8003428:	e7fa      	b.n	8003420 <QSPI_WriteEnable.constprop.0+0x60>
 800342a:	bf00      	nop
 800342c:	200014b8 	.word	0x200014b8

08003430 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003430:	b500      	push	{lr}
 8003432:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003434:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003438:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800343a:	23eb      	movs	r3, #235	; 0xeb
 800343c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800343e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003442:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003444:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003448:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800344a:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 800344e:	2300      	movs	r3, #0
 8003450:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003454:	220a      	movs	r2, #10
 8003456:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003458:	a902      	add	r1, sp, #8
 800345a:	466a      	mov	r2, sp
 800345c:	4806      	ldr	r0, [pc, #24]	; (8003478 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800345e:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003460:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003464:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003466:	f002 fcc2 	bl	8005dee <HAL_QSPI_MemoryMapped>
}
 800346a:	3800      	subs	r0, #0
 800346c:	bf18      	it	ne
 800346e:	2001      	movne	r0, #1
 8003470:	b011      	add	sp, #68	; 0x44
 8003472:	f85d fb04 	ldr.w	pc, [sp], #4
 8003476:	bf00      	nop
 8003478:	200014b8 	.word	0x200014b8

0800347c <BSP_QSPI_MspInit>:
{
 800347c:	b570      	push	{r4, r5, r6, lr}
 800347e:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003480:	4b2c      	ldr	r3, [pc, #176]	; (8003534 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003482:	482d      	ldr	r0, [pc, #180]	; (8003538 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003484:	2400      	movs	r4, #0
 8003486:	9400      	str	r4, [sp, #0]
 8003488:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800348a:	f042 0202 	orr.w	r2, r2, #2
 800348e:	639a      	str	r2, [r3, #56]	; 0x38
 8003490:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003492:	f002 0202 	and.w	r2, r2, #2
 8003496:	9200      	str	r2, [sp, #0]
 8003498:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800349a:	699a      	ldr	r2, [r3, #24]
 800349c:	f042 0202 	orr.w	r2, r2, #2
 80034a0:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80034a2:	699a      	ldr	r2, [r3, #24]
 80034a4:	f022 0202 	bic.w	r2, r2, #2
 80034a8:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 80034aa:	9401      	str	r4, [sp, #4]
 80034ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034ae:	f042 0202 	orr.w	r2, r2, #2
 80034b2:	631a      	str	r2, [r3, #48]	; 0x30
 80034b4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034b6:	f002 0202 	and.w	r2, r2, #2
 80034ba:	9201      	str	r2, [sp, #4]
 80034bc:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80034be:	9402      	str	r4, [sp, #8]
 80034c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80034c2:	f042 0220 	orr.w	r2, r2, #32
 80034c6:	631a      	str	r2, [r3, #48]	; 0x30
 80034c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034ca:	f003 0320 	and.w	r3, r3, #32
 80034ce:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80034d0:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80034d2:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80034d4:	2302      	movs	r3, #2
 80034d6:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80034da:	2101      	movs	r1, #1
 80034dc:	2303      	movs	r3, #3
 80034de:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80034e2:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80034e4:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80034e6:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80034e8:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80034ea:	f001 fae5 	bl	8004ab8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80034ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80034f2:	a903      	add	r1, sp, #12
 80034f4:	4811      	ldr	r0, [pc, #68]	; (800353c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80034f6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80034f8:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80034fa:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80034fc:	f001 fadc 	bl	8004ab8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003500:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003504:	a903      	add	r1, sp, #12
 8003506:	480d      	ldr	r0, [pc, #52]	; (800353c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8003508:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 800350a:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800350c:	f001 fad4 	bl	8004ab8 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003510:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8003512:	a903      	add	r1, sp, #12
 8003514:	4809      	ldr	r0, [pc, #36]	; (800353c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8003516:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8003518:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800351a:	f001 facd 	bl	8004ab8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 800351e:	4622      	mov	r2, r4
 8003520:	210f      	movs	r1, #15
 8003522:	205b      	movs	r0, #91	; 0x5b
 8003524:	f000 fb82 	bl	8003c2c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8003528:	205b      	movs	r0, #91	; 0x5b
 800352a:	f000 fbb1 	bl	8003c90 <HAL_NVIC_EnableIRQ>
}
 800352e:	b008      	add	sp, #32
 8003530:	bd70      	pop	{r4, r5, r6, pc}
 8003532:	bf00      	nop
 8003534:	40023800 	.word	0x40023800
 8003538:	40020400 	.word	0x40020400
 800353c:	40021400 	.word	0x40021400

08003540 <BSP_QSPI_Init>:
{
 8003540:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003542:	4c48      	ldr	r4, [pc, #288]	; (8003664 <BSP_QSPI_Init+0x124>)
 8003544:	4b48      	ldr	r3, [pc, #288]	; (8003668 <BSP_QSPI_Init+0x128>)
 8003546:	6023      	str	r3, [r4, #0]
{
 8003548:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800354a:	4620      	mov	r0, r4
 800354c:	f002 fba8 	bl	8005ca0 <HAL_QSPI_DeInit>
 8003550:	4605      	mov	r5, r0
 8003552:	b110      	cbz	r0, 800355a <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003554:	2001      	movs	r0, #1
}
 8003556:	b011      	add	sp, #68	; 0x44
 8003558:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800355a:	4601      	mov	r1, r0
 800355c:	4620      	mov	r0, r4
 800355e:	f7ff ff8d 	bl	800347c <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003562:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003564:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003566:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800356a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800356c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003570:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003574:	fab3 f383 	clz	r3, r3
 8003578:	3b01      	subs	r3, #1
 800357a:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800357c:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800357e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003582:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003586:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800358a:	f002 fb35 	bl	8005bf8 <HAL_QSPI_Init>
 800358e:	2800      	cmp	r0, #0
 8003590:	d1e0      	bne.n	8003554 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003592:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003596:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800359a:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800359e:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 80035a0:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 80035a2:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80035a4:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80035aa:	a902      	add	r1, sp, #8
 80035ac:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80035ae:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 80035b0:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035b2:	f002 fb88 	bl	8005cc6 <HAL_QSPI_Command>
 80035b6:	b108      	cbz	r0, 80035bc <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 80035b8:	2004      	movs	r0, #4
 80035ba:	e7cc      	b.n	8003556 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80035bc:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035be:	f241 3288 	movw	r2, #5000	; 0x1388
 80035c2:	a902      	add	r1, sp, #8
 80035c4:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80035c6:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035c8:	f002 fb7d 	bl	8005cc6 <HAL_QSPI_Command>
 80035cc:	2800      	cmp	r0, #0
 80035ce:	d1f3      	bne.n	80035b8 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80035d0:	f241 3088 	movw	r0, #5000	; 0x1388
 80035d4:	f7ff feca 	bl	800336c <QSPI_AutoPollingMemReady.constprop.0>
 80035d8:	2800      	cmp	r0, #0
 80035da:	d1ed      	bne.n	80035b8 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80035dc:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80035e0:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80035e4:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80035e8:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 80035ea:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035ec:	f241 3288 	movw	r2, #5000	; 0x1388
 80035f0:	a902      	add	r1, sp, #8
 80035f2:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80035f4:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80035f6:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80035f8:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035fa:	f002 fb64 	bl	8005cc6 <HAL_QSPI_Command>
 80035fe:	2800      	cmp	r0, #0
 8003600:	d1da      	bne.n	80035b8 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003602:	f241 3288 	movw	r2, #5000	; 0x1388
 8003606:	f10d 0107 	add.w	r1, sp, #7
 800360a:	4620      	mov	r0, r4
 800360c:	f002 fcce 	bl	8005fac <HAL_QSPI_Receive>
 8003610:	2800      	cmp	r0, #0
 8003612:	d1d1      	bne.n	80035b8 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8003614:	f7ff fed4 	bl	80033c0 <QSPI_WriteEnable.constprop.0>
 8003618:	2800      	cmp	r0, #0
 800361a:	d1cd      	bne.n	80035b8 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 800361c:	2381      	movs	r3, #129	; 0x81
 800361e:	9302      	str	r3, [sp, #8]
 8003620:	22f0      	movs	r2, #240	; 0xf0
 8003622:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003626:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800362a:	210a      	movs	r1, #10
 800362c:	fab2 f282 	clz	r2, r2
 8003630:	fa01 f202 	lsl.w	r2, r1, r2
 8003634:	f003 030f 	and.w	r3, r3, #15
 8003638:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800363a:	a902      	add	r1, sp, #8
 800363c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003640:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003642:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003646:	f002 fb3e 	bl	8005cc6 <HAL_QSPI_Command>
 800364a:	2800      	cmp	r0, #0
 800364c:	d1b4      	bne.n	80035b8 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800364e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003652:	f10d 0107 	add.w	r1, sp, #7
 8003656:	4620      	mov	r0, r4
 8003658:	f002 fc4c 	bl	8005ef4 <HAL_QSPI_Transmit>
 800365c:	2800      	cmp	r0, #0
 800365e:	f43f af7a 	beq.w	8003556 <BSP_QSPI_Init+0x16>
 8003662:	e7a9      	b.n	80035b8 <BSP_QSPI_Init+0x78>
 8003664:	200014b8 	.word	0x200014b8
 8003668:	a0001000 	.word	0xa0001000

0800366c <BSP_QSPI_MspDeInit>:
{
 800366c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800366e:	205b      	movs	r0, #91	; 0x5b
 8003670:	f000 fb1c 	bl	8003cac <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003674:	4814      	ldr	r0, [pc, #80]	; (80036c8 <BSP_QSPI_MspDeInit+0x5c>)
 8003676:	2140      	movs	r1, #64	; 0x40
 8003678:	f001 fb06 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800367c:	4813      	ldr	r0, [pc, #76]	; (80036cc <BSP_QSPI_MspDeInit+0x60>)
 800367e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003682:	f001 fb01 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8003686:	4811      	ldr	r0, [pc, #68]	; (80036cc <BSP_QSPI_MspDeInit+0x60>)
 8003688:	f44f 7180 	mov.w	r1, #256	; 0x100
 800368c:	f001 fafc 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003690:	480e      	ldr	r0, [pc, #56]	; (80036cc <BSP_QSPI_MspDeInit+0x60>)
 8003692:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003696:	f001 faf7 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800369a:	480c      	ldr	r0, [pc, #48]	; (80036cc <BSP_QSPI_MspDeInit+0x60>)
 800369c:	2180      	movs	r1, #128	; 0x80
 800369e:	f001 faf3 	bl	8004c88 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 80036a2:	480a      	ldr	r0, [pc, #40]	; (80036cc <BSP_QSPI_MspDeInit+0x60>)
 80036a4:	2140      	movs	r1, #64	; 0x40
 80036a6:	f001 faef 	bl	8004c88 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 80036aa:	4b09      	ldr	r3, [pc, #36]	; (80036d0 <BSP_QSPI_MspDeInit+0x64>)
 80036ac:	699a      	ldr	r2, [r3, #24]
 80036ae:	f042 0202 	orr.w	r2, r2, #2
 80036b2:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80036b4:	699a      	ldr	r2, [r3, #24]
 80036b6:	f022 0202 	bic.w	r2, r2, #2
 80036ba:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80036bc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80036be:	f022 0202 	bic.w	r2, r2, #2
 80036c2:	639a      	str	r2, [r3, #56]	; 0x38
}
 80036c4:	bd08      	pop	{r3, pc}
 80036c6:	bf00      	nop
 80036c8:	40020400 	.word	0x40020400
 80036cc:	40021400 	.word	0x40021400
 80036d0:	40023800 	.word	0x40023800

080036d4 <BSP_QSPI_DeInit>:
{
 80036d4:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80036d6:	4d08      	ldr	r5, [pc, #32]	; (80036f8 <BSP_QSPI_DeInit+0x24>)
 80036d8:	4b08      	ldr	r3, [pc, #32]	; (80036fc <BSP_QSPI_DeInit+0x28>)
 80036da:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80036dc:	4628      	mov	r0, r5
 80036de:	f002 fadf 	bl	8005ca0 <HAL_QSPI_DeInit>
 80036e2:	4604      	mov	r4, r0
 80036e4:	b928      	cbnz	r0, 80036f2 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80036e6:	4601      	mov	r1, r0
 80036e8:	4628      	mov	r0, r5
 80036ea:	f7ff ffbf 	bl	800366c <BSP_QSPI_MspDeInit>
}
 80036ee:	4620      	mov	r0, r4
 80036f0:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80036f2:	2401      	movs	r4, #1
 80036f4:	e7fb      	b.n	80036ee <BSP_QSPI_DeInit+0x1a>
 80036f6:	bf00      	nop
 80036f8:	200014b8 	.word	0x200014b8
 80036fc:	a0001000 	.word	0xa0001000

08003700 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8003700:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8003704:	4c21      	ldr	r4, [pc, #132]	; (800378c <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003706:	4d22      	ldr	r5, [pc, #136]	; (8003790 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003708:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 800370a:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800370e:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003710:	4621      	mov	r1, r4
{
 8003712:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003714:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003718:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800371a:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800371e:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8003722:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003726:	f003 f8b5 	bl	8006894 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 800372a:	4630      	mov	r0, r6
 800372c:	f000 fa58 	bl	8003be0 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003730:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003732:	4621      	mov	r1, r4
 8003734:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003738:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800373a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800373e:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003742:	f003 f8a7 	bl	8006894 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8003746:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003748:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800374c:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800374e:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003750:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003754:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8003756:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800375a:	f003 f89b 	bl	8006894 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800375e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003762:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003764:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003766:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800376a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800376c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800376e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003770:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003774:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8003776:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003778:	f003 f88c 	bl	8006894 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800377c:	4649      	mov	r1, r9
 800377e:	4628      	mov	r0, r5
}
 8003780:	b003      	add	sp, #12
 8003782:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003786:	f003 b89c 	b.w	80068c2 <HAL_SDRAM_ProgramRefreshRate>
 800378a:	bf00      	nop
 800378c:	20001504 	.word	0x20001504
 8003790:	200015f0 	.word	0x200015f0

08003794 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003794:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003796:	4606      	mov	r6, r0
{
 8003798:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800379a:	2800      	cmp	r0, #0
 800379c:	f000 80bd 	beq.w	800391a <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 80037a0:	4b5f      	ldr	r3, [pc, #380]	; (8003920 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80037a2:	4860      	ldr	r0, [pc, #384]	; (8003924 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80037a4:	4c60      	ldr	r4, [pc, #384]	; (8003928 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 80037a6:	2500      	movs	r5, #0
 80037a8:	9500      	str	r5, [sp, #0]
 80037aa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80037ac:	f042 0201 	orr.w	r2, r2, #1
 80037b0:	639a      	str	r2, [r3, #56]	; 0x38
 80037b2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80037b4:	f002 0201 	and.w	r2, r2, #1
 80037b8:	9200      	str	r2, [sp, #0]
 80037ba:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80037bc:	9501      	str	r5, [sp, #4]
 80037be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037c0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80037c4:	631a      	str	r2, [r3, #48]	; 0x30
 80037c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037c8:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80037cc:	9201      	str	r2, [sp, #4]
 80037ce:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80037d0:	9502      	str	r5, [sp, #8]
 80037d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037d4:	f042 0204 	orr.w	r2, r2, #4
 80037d8:	631a      	str	r2, [r3, #48]	; 0x30
 80037da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037dc:	f002 0204 	and.w	r2, r2, #4
 80037e0:	9202      	str	r2, [sp, #8]
 80037e2:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80037e4:	9503      	str	r5, [sp, #12]
 80037e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037e8:	f042 0208 	orr.w	r2, r2, #8
 80037ec:	631a      	str	r2, [r3, #48]	; 0x30
 80037ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037f0:	f002 0208 	and.w	r2, r2, #8
 80037f4:	9203      	str	r2, [sp, #12]
 80037f6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80037f8:	9504      	str	r5, [sp, #16]
 80037fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80037fc:	f042 0210 	orr.w	r2, r2, #16
 8003800:	631a      	str	r2, [r3, #48]	; 0x30
 8003802:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003804:	f002 0210 	and.w	r2, r2, #16
 8003808:	9204      	str	r2, [sp, #16]
 800380a:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800380c:	9505      	str	r5, [sp, #20]
 800380e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003810:	f042 0220 	orr.w	r2, r2, #32
 8003814:	631a      	str	r2, [r3, #48]	; 0x30
 8003816:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003818:	f002 0220 	and.w	r2, r2, #32
 800381c:	9205      	str	r2, [sp, #20]
 800381e:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8003820:	9506      	str	r5, [sp, #24]
 8003822:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003824:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003828:	631a      	str	r2, [r3, #48]	; 0x30
 800382a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800382c:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003830:	9206      	str	r2, [sp, #24]
 8003832:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003834:	9507      	str	r5, [sp, #28]
 8003836:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003838:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800383c:	631a      	str	r2, [r3, #48]	; 0x30
 800383e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003840:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003844:	9207      	str	r2, [sp, #28]
 8003846:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003848:	9508      	str	r5, [sp, #32]
 800384a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800384c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003850:	631a      	str	r2, [r3, #48]	; 0x30
 8003852:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003854:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003858:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800385a:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800385c:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800385e:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003860:	2301      	movs	r3, #1
 8003862:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003866:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003868:	220c      	movs	r2, #12
 800386a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800386c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800386e:	f001 f923 	bl	8004ab8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003872:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003876:	482d      	ldr	r0, [pc, #180]	; (800392c <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003878:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800387a:	a909      	add	r1, sp, #36	; 0x24
 800387c:	f001 f91c 	bl	8004ab8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003880:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003884:	482a      	ldr	r0, [pc, #168]	; (8003930 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003886:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003888:	a909      	add	r1, sp, #36	; 0x24
 800388a:	f001 f915 	bl	8004ab8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800388e:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003892:	4828      	ldr	r0, [pc, #160]	; (8003934 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003894:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003896:	a909      	add	r1, sp, #36	; 0x24
 8003898:	f001 f90e 	bl	8004ab8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800389c:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80038a0:	4825      	ldr	r0, [pc, #148]	; (8003938 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80038a2:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80038a4:	a909      	add	r1, sp, #36	; 0x24
 80038a6:	f001 f907 	bl	8004ab8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80038aa:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80038ae:	4823      	ldr	r0, [pc, #140]	; (800393c <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80038b0:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80038b2:	a909      	add	r1, sp, #36	; 0x24
 80038b4:	f001 f900 	bl	8004ab8 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80038b8:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80038bc:	4820      	ldr	r0, [pc, #128]	; (8003940 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80038be:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80038c0:	a909      	add	r1, sp, #36	; 0x24
 80038c2:	f001 f8f9 	bl	8004ab8 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80038c6:	2280      	movs	r2, #128	; 0x80
 80038c8:	f44f 7300 	mov.w	r3, #512	; 0x200
 80038cc:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80038d0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80038d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80038d8:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80038dc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80038e0:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80038e4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 80038e8:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80038ec:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 80038ee:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80038f2:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80038f4:	4b13      	ldr	r3, [pc, #76]	; (8003944 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80038f6:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80038f8:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80038fa:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80038fc:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80038fe:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8003900:	f000 fa8e 	bl	8003e20 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8003904:	4620      	mov	r0, r4
 8003906:	f000 fa0b 	bl	8003d20 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 800390a:	2038      	movs	r0, #56	; 0x38
 800390c:	462a      	mov	r2, r5
 800390e:	2105      	movs	r1, #5
 8003910:	f000 f98c 	bl	8003c2c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8003914:	2038      	movs	r0, #56	; 0x38
 8003916:	f000 f9bb 	bl	8003c90 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 800391a:	b00e      	add	sp, #56	; 0x38
 800391c:	bd70      	pop	{r4, r5, r6, pc}
 800391e:	bf00      	nop
 8003920:	40023800 	.word	0x40023800
 8003924:	40020800 	.word	0x40020800
 8003928:	20001590 	.word	0x20001590
 800392c:	40020c00 	.word	0x40020c00
 8003930:	40021000 	.word	0x40021000
 8003934:	40021400 	.word	0x40021400
 8003938:	40021800 	.word	0x40021800
 800393c:	40021c00 	.word	0x40021c00
 8003940:	40022000 	.word	0x40022000
 8003944:	40026410 	.word	0x40026410

08003948 <BSP_SDRAM_Init>:
{
 8003948:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800394a:	4c19      	ldr	r4, [pc, #100]	; (80039b0 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 800394c:	4d19      	ldr	r5, [pc, #100]	; (80039b4 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800394e:	4b1a      	ldr	r3, [pc, #104]	; (80039b8 <BSP_SDRAM_Init+0x70>)
 8003950:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003952:	2107      	movs	r1, #7
 8003954:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003956:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003958:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800395c:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003960:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003964:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003966:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003968:	2340      	movs	r3, #64	; 0x40
 800396a:	2220      	movs	r2, #32
 800396c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003970:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003972:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003976:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800397a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800397e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003982:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003986:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003988:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800398c:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800398e:	f7ff ff01 	bl	8003794 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003992:	4629      	mov	r1, r5
 8003994:	4620      	mov	r0, r4
 8003996:	f002 ff4f 	bl	8006838 <HAL_SDRAM_Init>
 800399a:	4c08      	ldr	r4, [pc, #32]	; (80039bc <BSP_SDRAM_Init+0x74>)
 800399c:	3800      	subs	r0, #0
 800399e:	bf18      	it	ne
 80039a0:	2001      	movne	r0, #1
 80039a2:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 80039a4:	f240 5069 	movw	r0, #1385	; 0x569
 80039a8:	f7ff feaa 	bl	8003700 <BSP_SDRAM_Initialization_sequence>
}
 80039ac:	7820      	ldrb	r0, [r4, #0]
 80039ae:	bd38      	pop	{r3, r4, r5, pc}
 80039b0:	200015f0 	.word	0x200015f0
 80039b4:	20001514 	.word	0x20001514
 80039b8:	a0000140 	.word	0xa0000140
 80039bc:	2000004d 	.word	0x2000004d

080039c0 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80039c0:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80039c2:	b148      	cbz	r0, 80039d8 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80039c4:	2038      	movs	r0, #56	; 0x38
 80039c6:	f000 f971 	bl	8003cac <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80039ca:	4804      	ldr	r0, [pc, #16]	; (80039dc <BSP_SDRAM_MspDeInit+0x1c>)
 80039cc:	4b04      	ldr	r3, [pc, #16]	; (80039e0 <BSP_SDRAM_MspDeInit+0x20>)
 80039ce:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80039d0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80039d4:	f000 ba24 	b.w	8003e20 <HAL_DMA_DeInit>
}
 80039d8:	bd08      	pop	{r3, pc}
 80039da:	bf00      	nop
 80039dc:	20001530 	.word	0x20001530
 80039e0:	40026410 	.word	0x40026410

080039e4 <BSP_SDRAM_DeInit>:
{
 80039e4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80039e6:	4c07      	ldr	r4, [pc, #28]	; (8003a04 <BSP_SDRAM_DeInit+0x20>)
 80039e8:	4b07      	ldr	r3, [pc, #28]	; (8003a08 <BSP_SDRAM_DeInit+0x24>)
 80039ea:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 80039ec:	4620      	mov	r0, r4
 80039ee:	f002 ff43 	bl	8006878 <HAL_SDRAM_DeInit>
 80039f2:	4d06      	ldr	r5, [pc, #24]	; (8003a0c <BSP_SDRAM_DeInit+0x28>)
 80039f4:	4601      	mov	r1, r0
 80039f6:	b918      	cbnz	r0, 8003a00 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80039f8:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80039fa:	4620      	mov	r0, r4
 80039fc:	f7ff ffe0 	bl	80039c0 <BSP_SDRAM_MspDeInit>
}
 8003a00:	7828      	ldrb	r0, [r5, #0]
 8003a02:	bd38      	pop	{r3, r4, r5, pc}
 8003a04:	200015f0 	.word	0x200015f0
 8003a08:	a0000140 	.word	0xa0000140
 8003a0c:	2000004c 	.word	0x2000004c

08003a10 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8003a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8003a14:	4d16      	ldr	r5, [pc, #88]	; (8003a70 <BSP_TS_Init+0x60>)
 8003a16:	4c17      	ldr	r4, [pc, #92]	; (8003a74 <BSP_TS_Init+0x64>)
 8003a18:	682b      	ldr	r3, [r5, #0]
{
 8003a1a:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8003a1c:	7820      	ldrb	r0, [r4, #0]
{
 8003a1e:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8003a20:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8003a22:	686b      	ldr	r3, [r5, #4]
 8003a24:	2054      	movs	r0, #84	; 0x54
 8003a26:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8003a28:	b2c0      	uxtb	r0, r0
 8003a2a:	2811      	cmp	r0, #17
 8003a2c:	d00a      	beq.n	8003a44 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003a2e:	686b      	ldr	r3, [r5, #4]
 8003a30:	2070      	movs	r0, #112	; 0x70
 8003a32:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003a34:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003a36:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003a38:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003a3a:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003a3c:	d004      	beq.n	8003a48 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003a3e:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8003a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8003a44:	2354      	movs	r3, #84	; 0x54
 8003a46:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003a48:	4b0b      	ldr	r3, [pc, #44]	; (8003a78 <BSP_TS_Init+0x68>)
 8003a4a:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8003a7c <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8003a4e:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8003a50:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8003a54:	42be      	cmp	r6, r7
 8003a56:	bf34      	ite	cc
 8003a58:	2601      	movcc	r6, #1
 8003a5a:	260c      	movcs	r6, #12
 8003a5c:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003a5e:	68ab      	ldr	r3, [r5, #8]
 8003a60:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8003a62:	f8d8 3000 	ldr.w	r3, [r8]
 8003a66:	7820      	ldrb	r0, [r4, #0]
 8003a68:	68db      	ldr	r3, [r3, #12]
 8003a6a:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003a6c:	2000      	movs	r0, #0
 8003a6e:	e7e7      	b.n	8003a40 <BSP_TS_Init+0x30>
 8003a70:	20000020 	.word	0x20000020
 8003a74:	20001624 	.word	0x20001624
 8003a78:	2000163c 	.word	0x2000163c
 8003a7c:	20001638 	.word	0x20001638

08003a80 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8003a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003a84:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8003b64 <BSP_TS_GetState+0xe4>
 8003a88:	4a33      	ldr	r2, [pc, #204]	; (8003b58 <BSP_TS_GetState+0xd8>)
 8003a8a:	f8db 3000 	ldr.w	r3, [fp]
{
 8003a8e:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003a90:	691b      	ldr	r3, [r3, #16]
 8003a92:	7810      	ldrb	r0, [r2, #0]
{
 8003a94:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003a96:	4798      	blx	r3
 8003a98:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003a9a:	b158      	cbz	r0, 8003ab4 <BSP_TS_GetState+0x34>
 8003a9c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003b68 <BSP_TS_GetState+0xe8>
 8003aa0:	4f2e      	ldr	r7, [pc, #184]	; (8003b5c <BSP_TS_GetState+0xdc>)
 8003aa2:	f106 0a02 	add.w	sl, r6, #2
 8003aa6:	ad03      	add	r5, sp, #12
 8003aa8:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003aaa:	f04f 0900 	mov.w	r9, #0
 8003aae:	7833      	ldrb	r3, [r6, #0]
 8003ab0:	454b      	cmp	r3, r9
 8003ab2:	d803      	bhi.n	8003abc <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003ab4:	2000      	movs	r0, #0
 8003ab6:	b005      	add	sp, #20
 8003ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003abc:	f8db 3000 	ldr.w	r3, [fp]
 8003ac0:	4825      	ldr	r0, [pc, #148]	; (8003b58 <BSP_TS_GetState+0xd8>)
 8003ac2:	695b      	ldr	r3, [r3, #20]
 8003ac4:	7800      	ldrb	r0, [r0, #0]
 8003ac6:	9101      	str	r1, [sp, #4]
 8003ac8:	462a      	mov	r2, r5
 8003aca:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8003acc:	4b24      	ldr	r3, [pc, #144]	; (8003b60 <BSP_TS_GetState+0xe0>)
 8003ace:	9901      	ldr	r1, [sp, #4]
 8003ad0:	781b      	ldrb	r3, [r3, #0]
 8003ad2:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8003ad6:	bf1f      	itttt	ne
 8003ad8:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8003ada:	8828      	ldrhne	r0, [r5, #0]
 8003adc:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8003ade:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8003ae0:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8003ae2:	bf41      	itttt	mi
 8003ae4:	880a      	ldrhmi	r2, [r1, #0]
 8003ae6:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8003aea:	3203      	addmi	r2, #3
 8003aec:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8003aee:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003af0:	bf48      	it	mi
 8003af2:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003af4:	f8d8 2000 	ldr.w	r2, [r8]
 8003af8:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8003afc:	bf42      	ittt	mi
 8003afe:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8003b02:	3301      	addmi	r3, #1
 8003b04:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003b06:	b293      	uxth	r3, r2
 8003b08:	4290      	cmp	r0, r2
 8003b0a:	bf8c      	ite	hi
 8003b0c:	1ac3      	subhi	r3, r0, r3
 8003b0e:	1a1b      	subls	r3, r3, r0
 8003b10:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003b12:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8003b16:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003b18:	683b      	ldr	r3, [r7, #0]
 8003b1a:	b29c      	uxth	r4, r3
 8003b1c:	429a      	cmp	r2, r3
 8003b1e:	bf88      	it	hi
 8003b20:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8003b22:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003b24:	bf98      	it	ls
 8003b26:	1aa4      	subls	r4, r4, r2
 8003b28:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003b2a:	441c      	add	r4, r3
 8003b2c:	46c4      	mov	ip, r8
 8003b2e:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8003b30:	bfc8      	it	gt
 8003b32:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003b36:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003b3a:	bfc8      	it	gt
 8003b3c:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8003b3e:	46be      	mov	lr, r7
 8003b40:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8003b44:	f8de 3000 	ldr.w	r3, [lr]
 8003b48:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003b4c:	f108 0804 	add.w	r8, r8, #4
 8003b50:	3704      	adds	r7, #4
 8003b52:	f109 0901 	add.w	r9, r9, #1
 8003b56:	e7aa      	b.n	8003aae <BSP_TS_GetState+0x2e>
 8003b58:	20001624 	.word	0x20001624
 8003b5c:	20001630 	.word	0x20001630
 8003b60:	2000163c 	.word	0x2000163c
 8003b64:	20001638 	.word	0x20001638
 8003b68:	20001628 	.word	0x20001628

08003b6c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003b6c:	4b05      	ldr	r3, [pc, #20]	; (8003b84 <SystemInit+0x18>)
 8003b6e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003b72:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003b76:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003b7a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8003b7e:	609a      	str	r2, [r3, #8]
#endif
}
 8003b80:	4770      	bx	lr
 8003b82:	bf00      	nop
 8003b84:	e000ed00 	.word	0xe000ed00

08003b88 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003b88:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003b8a:	4b0b      	ldr	r3, [pc, #44]	; (8003bb8 <HAL_Init+0x30>)
 8003b8c:	681a      	ldr	r2, [r3, #0]
 8003b8e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003b92:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003b94:	681a      	ldr	r2, [r3, #0]
 8003b96:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003b9a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003b9c:	681a      	ldr	r2, [r3, #0]
 8003b9e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003ba2:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003ba4:	2003      	movs	r0, #3
 8003ba6:	f000 f82f 	bl	8003c08 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003baa:	2000      	movs	r0, #0
 8003bac:	f7fe f970 	bl	8001e90 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003bb0:	f7fd ff10 	bl	80019d4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003bb4:	2000      	movs	r0, #0
 8003bb6:	bd08      	pop	{r3, pc}
 8003bb8:	40023c00 	.word	0x40023c00

08003bbc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003bbc:	4a03      	ldr	r2, [pc, #12]	; (8003bcc <HAL_IncTick+0x10>)
 8003bbe:	4b04      	ldr	r3, [pc, #16]	; (8003bd0 <HAL_IncTick+0x14>)
 8003bc0:	6811      	ldr	r1, [r2, #0]
 8003bc2:	781b      	ldrb	r3, [r3, #0]
 8003bc4:	440b      	add	r3, r1
 8003bc6:	6013      	str	r3, [r2, #0]
}
 8003bc8:	4770      	bx	lr
 8003bca:	bf00      	nop
 8003bcc:	20001640 	.word	0x20001640
 8003bd0:	20000054 	.word	0x20000054

08003bd4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003bd4:	4b01      	ldr	r3, [pc, #4]	; (8003bdc <HAL_GetTick+0x8>)
 8003bd6:	6818      	ldr	r0, [r3, #0]
}
 8003bd8:	4770      	bx	lr
 8003bda:	bf00      	nop
 8003bdc:	20001640 	.word	0x20001640

08003be0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003be0:	b538      	push	{r3, r4, r5, lr}
 8003be2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003be4:	f7ff fff6 	bl	8003bd4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003be8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8003bea:	bf1c      	itt	ne
 8003bec:	4b05      	ldrne	r3, [pc, #20]	; (8003c04 <HAL_Delay+0x24>)
 8003bee:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003bf0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003bf2:	bf18      	it	ne
 8003bf4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003bf6:	f7ff ffed 	bl	8003bd4 <HAL_GetTick>
 8003bfa:	1b43      	subs	r3, r0, r5
 8003bfc:	42a3      	cmp	r3, r4
 8003bfe:	d3fa      	bcc.n	8003bf6 <HAL_Delay+0x16>
  {
  }
}
 8003c00:	bd38      	pop	{r3, r4, r5, pc}
 8003c02:	bf00      	nop
 8003c04:	20000054 	.word	0x20000054

08003c08 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003c08:	4907      	ldr	r1, [pc, #28]	; (8003c28 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8003c0a:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c0c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003c10:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c12:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003c14:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003c18:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003c1a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003c1c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003c20:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003c24:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8003c26:	4770      	bx	lr
 8003c28:	e000ed00 	.word	0xe000ed00

08003c2c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003c2c:	4b16      	ldr	r3, [pc, #88]	; (8003c88 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003c2e:	b530      	push	{r4, r5, lr}
 8003c30:	68dc      	ldr	r4, [r3, #12]
 8003c32:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003c36:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003c3a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003c3c:	2d04      	cmp	r5, #4
 8003c3e:	bf28      	it	cs
 8003c40:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003c42:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c44:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003c48:	bf8c      	ite	hi
 8003c4a:	3c03      	subhi	r4, #3
 8003c4c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c4e:	fa03 f505 	lsl.w	r5, r3, r5
 8003c52:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003c56:	40a3      	lsls	r3, r4
 8003c58:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c5c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003c5e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003c60:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c64:	bfac      	ite	ge
 8003c66:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c6a:	4a08      	ldrlt	r2, [pc, #32]	; (8003c8c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c6c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c70:	bfb8      	it	lt
 8003c72:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c76:	b2db      	uxtb	r3, r3
 8003c78:	bfaa      	itet	ge
 8003c7a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c7e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003c80:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003c84:	bd30      	pop	{r4, r5, pc}
 8003c86:	bf00      	nop
 8003c88:	e000ed00 	.word	0xe000ed00
 8003c8c:	e000ed14 	.word	0xe000ed14

08003c90 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003c90:	2800      	cmp	r0, #0
 8003c92:	db08      	blt.n	8003ca6 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003c94:	0942      	lsrs	r2, r0, #5
 8003c96:	2301      	movs	r3, #1
 8003c98:	f000 001f 	and.w	r0, r0, #31
 8003c9c:	fa03 f000 	lsl.w	r0, r3, r0
 8003ca0:	4b01      	ldr	r3, [pc, #4]	; (8003ca8 <HAL_NVIC_EnableIRQ+0x18>)
 8003ca2:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8003ca6:	4770      	bx	lr
 8003ca8:	e000e100 	.word	0xe000e100

08003cac <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003cac:	2800      	cmp	r0, #0
 8003cae:	db0d      	blt.n	8003ccc <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003cb0:	0943      	lsrs	r3, r0, #5
 8003cb2:	2201      	movs	r2, #1
 8003cb4:	f000 001f 	and.w	r0, r0, #31
 8003cb8:	fa02 f000 	lsl.w	r0, r2, r0
 8003cbc:	3320      	adds	r3, #32
 8003cbe:	4a04      	ldr	r2, [pc, #16]	; (8003cd0 <HAL_NVIC_DisableIRQ+0x24>)
 8003cc0:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003cc4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8003cc8:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003ccc:	4770      	bx	lr
 8003cce:	bf00      	nop
 8003cd0:	e000e100 	.word	0xe000e100

08003cd4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003cd4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003cd6:	4604      	mov	r4, r0
 8003cd8:	b150      	cbz	r0, 8003cf0 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003cda:	7943      	ldrb	r3, [r0, #5]
 8003cdc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003ce0:	b913      	cbnz	r3, 8003ce8 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003ce2:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003ce4:	f7fd fe96 	bl	8001a14 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003ce8:	2301      	movs	r3, #1
 8003cea:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8003cec:	2000      	movs	r0, #0
}
 8003cee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003cf0:	2001      	movs	r0, #1
 8003cf2:	e7fc      	b.n	8003cee <HAL_CRC_Init+0x1a>

08003cf4 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003cf4:	6803      	ldr	r3, [r0, #0]
{
 8003cf6:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003cf8:	4c08      	ldr	r4, [pc, #32]	; (8003d1c <DMA_CalcBaseAndBitshift+0x28>)
{
 8003cfa:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003cfc:	b2d9      	uxtb	r1, r3
 8003cfe:	3910      	subs	r1, #16
 8003d00:	2018      	movs	r0, #24
 8003d02:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003d06:	5c20      	ldrb	r0, [r4, r0]
 8003d08:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003d0a:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8003d0e:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8003d12:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003d14:	bf88      	it	hi
 8003d16:	3004      	addhi	r0, #4
 8003d18:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8003d1a:	bd10      	pop	{r4, pc}
 8003d1c:	0801bfbd 	.word	0x0801bfbd

08003d20 <HAL_DMA_Init>:
{
 8003d20:	b570      	push	{r4, r5, r6, lr}
 8003d22:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003d24:	f7ff ff56 	bl	8003bd4 <HAL_GetTick>
 8003d28:	4605      	mov	r5, r0
  if(hdma == NULL)
 8003d2a:	2c00      	cmp	r4, #0
 8003d2c:	d073      	beq.n	8003e16 <HAL_DMA_Init+0xf6>
  __HAL_UNLOCK(hdma);
 8003d2e:	2300      	movs	r3, #0
 8003d30:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003d34:	6822      	ldr	r2, [r4, #0]
  hdma->State = HAL_DMA_STATE_BUSY;
 8003d36:	2302      	movs	r3, #2
 8003d38:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8003d3c:	6813      	ldr	r3, [r2, #0]
 8003d3e:	f023 0301 	bic.w	r3, r3, #1
 8003d42:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003d44:	6821      	ldr	r1, [r4, #0]
 8003d46:	680b      	ldr	r3, [r1, #0]
 8003d48:	07d8      	lsls	r0, r3, #31
 8003d4a:	d42f      	bmi.n	8003dac <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003d4c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003d4e:	4d33      	ldr	r5, [pc, #204]	; (8003e1c <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003d50:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003d52:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003d54:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8003d58:	4313      	orrs	r3, r2
 8003d5a:	68e2      	ldr	r2, [r4, #12]
 8003d5c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003d5e:	6922      	ldr	r2, [r4, #16]
 8003d60:	4313      	orrs	r3, r2
 8003d62:	6962      	ldr	r2, [r4, #20]
 8003d64:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003d66:	69e2      	ldr	r2, [r4, #28]
 8003d68:	4303      	orrs	r3, r0
 8003d6a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003d6c:	6a22      	ldr	r2, [r4, #32]
 8003d6e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003d70:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003d72:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003d74:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003d78:	bf02      	ittt	eq
 8003d7a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003d7e:	4335      	orreq	r5, r6
 8003d80:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003d82:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003d84:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003d86:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003d88:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003d8c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003d90:	d133      	bne.n	8003dfa <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003d92:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003d94:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8003d96:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003d98:	b37d      	cbz	r5, 8003dfa <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003d9a:	b990      	cbnz	r0, 8003dc2 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003d9c:	2a01      	cmp	r2, #1
 8003d9e:	d021      	beq.n	8003de4 <HAL_DMA_Init+0xc4>
 8003da0:	f032 0202 	bics.w	r2, r2, #2
 8003da4:	d129      	bne.n	8003dfa <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003da6:	01ea      	lsls	r2, r5, #7
 8003da8:	d527      	bpl.n	8003dfa <HAL_DMA_Init+0xda>
 8003daa:	e01e      	b.n	8003dea <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003dac:	f7ff ff12 	bl	8003bd4 <HAL_GetTick>
 8003db0:	1b40      	subs	r0, r0, r5
 8003db2:	2805      	cmp	r0, #5
 8003db4:	d9c6      	bls.n	8003d44 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003db6:	2320      	movs	r3, #32
 8003db8:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003dba:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003dbc:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003dc0:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003dc2:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8003dc6:	d114      	bne.n	8003df2 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8003dc8:	2a03      	cmp	r2, #3
 8003dca:	d816      	bhi.n	8003dfa <HAL_DMA_Init+0xda>
 8003dcc:	a001      	add	r0, pc, #4	; (adr r0, 8003dd4 <HAL_DMA_Init+0xb4>)
 8003dce:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003dd2:	bf00      	nop
 8003dd4:	08003deb 	.word	0x08003deb
 8003dd8:	08003da7 	.word	0x08003da7
 8003ddc:	08003deb 	.word	0x08003deb
 8003de0:	08003de5 	.word	0x08003de5
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003de4:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8003de8:	d107      	bne.n	8003dfa <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003dea:	2340      	movs	r3, #64	; 0x40
 8003dec:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8003dee:	2001      	movs	r0, #1
 8003df0:	e7e4      	b.n	8003dbc <HAL_DMA_Init+0x9c>
    switch (tmp)
 8003df2:	2a02      	cmp	r2, #2
 8003df4:	d9f9      	bls.n	8003dea <HAL_DMA_Init+0xca>
 8003df6:	2a03      	cmp	r2, #3
 8003df8:	d0d5      	beq.n	8003da6 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8003dfa:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003dfc:	4620      	mov	r0, r4
 8003dfe:	f7ff ff79 	bl	8003cf4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003e02:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003e04:	233f      	movs	r3, #63	; 0x3f
 8003e06:	4093      	lsls	r3, r2
 8003e08:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e0a:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8003e0c:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e0e:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8003e10:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8003e14:	e7d4      	b.n	8003dc0 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8003e16:	2001      	movs	r0, #1
 8003e18:	e7d2      	b.n	8003dc0 <HAL_DMA_Init+0xa0>
 8003e1a:	bf00      	nop
 8003e1c:	f010803f 	.word	0xf010803f

08003e20 <HAL_DMA_DeInit>:
{
 8003e20:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8003e22:	4605      	mov	r5, r0
 8003e24:	b320      	cbz	r0, 8003e70 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8003e26:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8003e2a:	2b02      	cmp	r3, #2
 8003e2c:	b2dc      	uxtb	r4, r3
 8003e2e:	d01d      	beq.n	8003e6c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8003e30:	6803      	ldr	r3, [r0, #0]
 8003e32:	681a      	ldr	r2, [r3, #0]
 8003e34:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8003e38:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8003e3a:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003e3c:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003e3e:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003e40:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003e42:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003e44:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003e46:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003e48:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003e4a:	f7ff ff53 	bl	8003cf4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003e4e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003e50:	233f      	movs	r3, #63	; 0x3f
 8003e52:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003e54:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003e58:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003e5c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003e60:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003e62:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003e64:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003e68:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003e6c:	4620      	mov	r0, r4
 8003e6e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003e70:	2401      	movs	r4, #1
 8003e72:	e7fb      	b.n	8003e6c <HAL_DMA_DeInit+0x4c>

08003e74 <HAL_DMA_Abort>:
{
 8003e74:	b570      	push	{r4, r5, r6, lr}
 8003e76:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003e78:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003e7a:	f7ff feab 	bl	8003bd4 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003e7e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003e82:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003e84:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003e86:	d006      	beq.n	8003e96 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003e88:	2380      	movs	r3, #128	; 0x80
 8003e8a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003e8c:	2300      	movs	r3, #0
 8003e8e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003e92:	2001      	movs	r0, #1
}
 8003e94:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003e96:	6823      	ldr	r3, [r4, #0]
 8003e98:	681a      	ldr	r2, [r3, #0]
 8003e9a:	f022 0216 	bic.w	r2, r2, #22
 8003e9e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003ea0:	695a      	ldr	r2, [r3, #20]
 8003ea2:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003ea6:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003ea8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003eaa:	b90a      	cbnz	r2, 8003eb0 <HAL_DMA_Abort+0x3c>
 8003eac:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003eae:	b11a      	cbz	r2, 8003eb8 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003eb0:	681a      	ldr	r2, [r3, #0]
 8003eb2:	f022 0208 	bic.w	r2, r2, #8
 8003eb6:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003eb8:	681a      	ldr	r2, [r3, #0]
 8003eba:	f022 0201 	bic.w	r2, r2, #1
 8003ebe:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003ec0:	6823      	ldr	r3, [r4, #0]
 8003ec2:	681b      	ldr	r3, [r3, #0]
 8003ec4:	f013 0301 	ands.w	r3, r3, #1
 8003ec8:	d10a      	bne.n	8003ee0 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003eca:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003ecc:	223f      	movs	r2, #63	; 0x3f
 8003ece:	408a      	lsls	r2, r1
 8003ed0:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003ed2:	2201      	movs	r2, #1
    __HAL_UNLOCK(hdma);
 8003ed4:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    hdma->State = HAL_DMA_STATE_READY;
 8003ed8:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
  return HAL_OK;
 8003edc:	4618      	mov	r0, r3
 8003ede:	e7d9      	b.n	8003e94 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003ee0:	f7ff fe78 	bl	8003bd4 <HAL_GetTick>
 8003ee4:	1b40      	subs	r0, r0, r5
 8003ee6:	2805      	cmp	r0, #5
 8003ee8:	d9ea      	bls.n	8003ec0 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003eea:	2320      	movs	r3, #32
 8003eec:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003eee:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003ef0:	2300      	movs	r3, #0
 8003ef2:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003ef6:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        return HAL_TIMEOUT;
 8003efa:	e7cb      	b.n	8003e94 <HAL_DMA_Abort+0x20>

08003efc <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8003efc:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8003efe:	6804      	ldr	r4, [r0, #0]
 8003f00:	9d04      	ldr	r5, [sp, #16]
 8003f02:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8003f04:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8003f08:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8003f0c:	4333      	orrs	r3, r6
 8003f0e:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003f10:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8003f12:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8003f14:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8003f18:	d130      	bne.n	8003f7c <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8003f1a:	6886      	ldr	r6, [r0, #8]
 8003f1c:	b11e      	cbz	r6, 8003f26 <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8003f1e:	2e01      	cmp	r6, #1
 8003f20:	d103      	bne.n	8003f2a <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8003f22:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8003f26:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8003f28:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003f2a:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8003f2c:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8003f30:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8003f34:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8003f36:	d107      	bne.n	8003f48 <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 8003f38:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 10U);
 8003f3a:	0aa9      	lsrs	r1, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8003f3c:	02db      	lsls	r3, r3, #11
 8003f3e:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
 8003f42:	ea43 01d0 	orr.w	r1, r3, r0, lsr #3
 8003f46:	e7ee      	b.n	8003f26 <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003f48:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8003f4a:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8003f4e:	d10a      	bne.n	8003f66 <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8003f50:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 11U);
 8003f52:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003f54:	0289      	lsls	r1, r1, #10
 8003f56:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 8003f5a:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 8003f5e:	0fd3      	lsrs	r3, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8003f60:	ea41 31c3 	orr.w	r1, r1, r3, lsl #15
 8003f64:	e7df      	b.n	8003f26 <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 8003f66:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 8003f68:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003f6a:	0209      	lsls	r1, r1, #8
 8003f6c:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8003f70:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 8003f74:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8003f76:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 8003f7a:	e7d4      	b.n	8003f26 <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8003f7c:	60e1      	str	r1, [r4, #12]
}
 8003f7e:	e7d3      	b.n	8003f28 <DMA2D_SetConfig+0x2c>

08003f80 <HAL_DMA2D_Init>:
{
 8003f80:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 8003f82:	4604      	mov	r4, r0
 8003f84:	b330      	cbz	r0, 8003fd4 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003f86:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003f8a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003f8e:	b91b      	cbnz	r3, 8003f98 <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 8003f90:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8003f94:	f7fd fd56 	bl	8001a44 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003f98:	6822      	ldr	r2, [r4, #0]
 8003f9a:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003f9c:	2302      	movs	r3, #2
 8003f9e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003fa2:	6813      	ldr	r3, [r2, #0]
 8003fa4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003fa8:	430b      	orrs	r3, r1
 8003faa:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003fac:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003fae:	68a1      	ldr	r1, [r4, #8]
 8003fb0:	f023 0307 	bic.w	r3, r3, #7
 8003fb4:	430b      	orrs	r3, r1
 8003fb6:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003fb8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003fba:	68e1      	ldr	r1, [r4, #12]
 8003fbc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003fc0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003fc4:	430b      	orrs	r3, r1
 8003fc6:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003fc8:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003fca:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003fcc:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003fce:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 8003fd2:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8003fd4:	2001      	movs	r0, #1
 8003fd6:	e7fc      	b.n	8003fd2 <HAL_DMA2D_Init+0x52>

08003fd8 <HAL_DMA2D_Start_IT>:
{
 8003fd8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 8003fda:	f890 5038 	ldrb.w	r5, [r0, #56]	; 0x38
 8003fde:	2d01      	cmp	r5, #1
{
 8003fe0:	4604      	mov	r4, r0
 8003fe2:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 8003fe6:	d013      	beq.n	8004010 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003fe8:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003fec:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8003fee:	9d06      	ldr	r5, [sp, #24]
  __HAL_LOCK(hdma2d);
 8003ff0:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8003ff4:	9500      	str	r5, [sp, #0]
 8003ff6:	f7ff ff81 	bl	8003efc <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8003ffa:	6823      	ldr	r3, [r4, #0]
 8003ffc:	681a      	ldr	r2, [r3, #0]
 8003ffe:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004002:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004004:	681a      	ldr	r2, [r3, #0]
 8004006:	4332      	orrs	r2, r6
 8004008:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 800400a:	2000      	movs	r0, #0
}
 800400c:	b002      	add	sp, #8
 800400e:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004010:	4628      	mov	r0, r5
 8004012:	e7fb      	b.n	800400c <HAL_DMA2D_Start_IT+0x34>

08004014 <HAL_DMA2D_BlendingStart_IT>:
{
 8004014:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004016:	4616      	mov	r6, r2
 8004018:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 800401a:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800401e:	2b01      	cmp	r3, #1
{
 8004020:	4604      	mov	r4, r0
 8004022:	f04f 0502 	mov.w	r5, #2
  __HAL_LOCK(hdma2d);
 8004026:	d017      	beq.n	8004058 <HAL_DMA2D_BlendingStart_IT+0x44>
 8004028:	2301      	movs	r3, #1
 800402a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 800402e:	6803      	ldr	r3, [r0, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004030:	f880 5039 	strb.w	r5, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004034:	615e      	str	r6, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8004036:	9b07      	ldr	r3, [sp, #28]
 8004038:	9300      	str	r3, [sp, #0]
 800403a:	9b06      	ldr	r3, [sp, #24]
 800403c:	f7ff ff5e 	bl	8003efc <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004040:	6823      	ldr	r3, [r4, #0]
 8004042:	681a      	ldr	r2, [r3, #0]
 8004044:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004048:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 800404a:	681a      	ldr	r2, [r3, #0]
 800404c:	f042 0201 	orr.w	r2, r2, #1
 8004050:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004052:	2000      	movs	r0, #0
}
 8004054:	b002      	add	sp, #8
 8004056:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004058:	4628      	mov	r0, r5
 800405a:	e7fb      	b.n	8004054 <HAL_DMA2D_BlendingStart_IT+0x40>

0800405c <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800405c:	6802      	ldr	r2, [r0, #0]
{
 800405e:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8004060:	6813      	ldr	r3, [r2, #0]
 8004062:	f023 0305 	bic.w	r3, r3, #5
 8004066:	f043 0304 	orr.w	r3, r3, #4
 800406a:	6013      	str	r3, [r2, #0]
{
 800406c:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 800406e:	f7ff fdb1 	bl	8003bd4 <HAL_GetTick>
 8004072:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8004074:	6822      	ldr	r2, [r4, #0]
 8004076:	6813      	ldr	r3, [r2, #0]
 8004078:	f013 0301 	ands.w	r3, r3, #1
 800407c:	d109      	bne.n	8004092 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800407e:	6811      	ldr	r1, [r2, #0]
 8004080:	f421 510c 	bic.w	r1, r1, #8960	; 0x2300
 8004084:	6011      	str	r1, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004086:	2201      	movs	r2, #1
 8004088:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800408c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004090:	e00f      	b.n	80040b2 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004092:	f7ff fd9f 	bl	8003bd4 <HAL_GetTick>
 8004096:	1b40      	subs	r0, r0, r5
 8004098:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800409c:	d9ea      	bls.n	8004074 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800409e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80040a0:	f043 0320 	orr.w	r3, r3, #32
 80040a4:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 80040a6:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80040a8:	2303      	movs	r3, #3
 80040aa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80040ae:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 80040b2:	4618      	mov	r0, r3
}
 80040b4:	bd38      	pop	{r3, r4, r5, pc}

080040b6 <HAL_DMA2D_CLUTLoading_Abort>:
{
 80040b6:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80040b8:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 80040ba:	682a      	ldr	r2, [r5, #0]
 80040bc:	f042 0204 	orr.w	r2, r2, #4
 80040c0:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 80040c2:	2901      	cmp	r1, #1
{
 80040c4:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80040c6:	bf14      	ite	ne
 80040c8:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 80040ca:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 80040cc:	f7ff fd82 	bl	8003bd4 <HAL_GetTick>
 80040d0:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 80040d2:	682b      	ldr	r3, [r5, #0]
 80040d4:	f013 0320 	ands.w	r3, r3, #32
 80040d8:	d10a      	bne.n	80040f0 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 80040da:	6821      	ldr	r1, [r4, #0]
 80040dc:	680a      	ldr	r2, [r1, #0]
 80040de:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 80040e2:	600a      	str	r2, [r1, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80040e4:	2201      	movs	r2, #1
 80040e6:	f884 2039 	strb.w	r2, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80040ea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 80040ee:	e00f      	b.n	8004110 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80040f0:	f7ff fd70 	bl	8003bd4 <HAL_GetTick>
 80040f4:	1b80      	subs	r0, r0, r6
 80040f6:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80040fa:	d9ea      	bls.n	80040d2 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80040fc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80040fe:	f043 0320 	orr.w	r3, r3, #32
 8004102:	63e3      	str	r3, [r4, #60]	; 0x3c
      __HAL_UNLOCK(hdma2d);
 8004104:	2200      	movs	r2, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004106:	2303      	movs	r3, #3
 8004108:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800410c:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
  return HAL_OK;
 8004110:	4618      	mov	r0, r3
}
 8004112:	bd70      	pop	{r4, r5, r6, pc}

08004114 <HAL_DMA2D_DeInit>:
{
 8004114:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8004116:	4605      	mov	r5, r0
 8004118:	b908      	cbnz	r0, 800411e <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 800411a:	2001      	movs	r0, #1
}
 800411c:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 800411e:	4b16      	ldr	r3, [pc, #88]	; (8004178 <HAL_DMA2D_DeInit+0x64>)
 8004120:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004122:	0219      	lsls	r1, r3, #8
 8004124:	d413      	bmi.n	800414e <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 8004126:	682b      	ldr	r3, [r5, #0]
 8004128:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 800412a:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 800412c:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 800412e:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 8004130:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8004132:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8004134:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8004136:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8004138:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 800413a:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 800413c:	f7fd fca4 	bl	8001a88 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004140:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 8004142:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8004146:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 800414a:	4620      	mov	r0, r4
 800414c:	e7e6      	b.n	800411c <HAL_DMA2D_DeInit+0x8>
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 800414e:	6803      	ldr	r3, [r0, #0]
 8004150:	6819      	ldr	r1, [r3, #0]
 8004152:	f011 0101 	ands.w	r1, r1, #1
 8004156:	d004      	beq.n	8004162 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8004158:	f7ff ff80 	bl	800405c <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800415c:	2800      	cmp	r0, #0
 800415e:	d0e2      	beq.n	8004126 <HAL_DMA2D_DeInit+0x12>
 8004160:	e7db      	b.n	800411a <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8004162:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004164:	0692      	lsls	r2, r2, #26
 8004166:	d502      	bpl.n	800416e <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004168:	f7ff ffa5 	bl	80040b6 <HAL_DMA2D_CLUTLoading_Abort>
 800416c:	e7f6      	b.n	800415c <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 800416e:	69db      	ldr	r3, [r3, #28]
 8004170:	069b      	lsls	r3, r3, #26
 8004172:	d5d8      	bpl.n	8004126 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8004174:	2101      	movs	r1, #1
 8004176:	e7f7      	b.n	8004168 <HAL_DMA2D_DeInit+0x54>
 8004178:	40023800 	.word	0x40023800

0800417c <HAL_DMA2D_LineEventCallback>:
 800417c:	4770      	bx	lr

0800417e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800417e:	4770      	bx	lr

08004180 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004180:	6803      	ldr	r3, [r0, #0]
{
 8004182:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004184:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004186:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004188:	07f2      	lsls	r2, r6, #31
{
 800418a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800418c:	d514      	bpl.n	80041b8 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 800418e:	05e9      	lsls	r1, r5, #23
 8004190:	d512      	bpl.n	80041b8 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004192:	681a      	ldr	r2, [r3, #0]
 8004194:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004198:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800419a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800419c:	f042 0201 	orr.w	r2, r2, #1
 80041a0:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80041a2:	2201      	movs	r2, #1
 80041a4:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80041a6:	2304      	movs	r3, #4
 80041a8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80041ac:	2300      	movs	r3, #0
 80041ae:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80041b2:	6943      	ldr	r3, [r0, #20]
 80041b4:	b103      	cbz	r3, 80041b8 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80041b6:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80041b8:	06b2      	lsls	r2, r6, #26
 80041ba:	d516      	bpl.n	80041ea <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80041bc:	04ab      	lsls	r3, r5, #18
 80041be:	d514      	bpl.n	80041ea <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80041c0:	6823      	ldr	r3, [r4, #0]
 80041c2:	681a      	ldr	r2, [r3, #0]
 80041c4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80041c8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80041ca:	2220      	movs	r2, #32
 80041cc:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80041ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80041d0:	f043 0302 	orr.w	r3, r3, #2
 80041d4:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80041d6:	2304      	movs	r3, #4
 80041d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80041dc:	2300      	movs	r3, #0
 80041de:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80041e2:	6963      	ldr	r3, [r4, #20]
 80041e4:	b10b      	cbz	r3, 80041ea <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 80041e6:	4620      	mov	r0, r4
 80041e8:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80041ea:	0730      	lsls	r0, r6, #28
 80041ec:	d516      	bpl.n	800421c <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80041ee:	0529      	lsls	r1, r5, #20
 80041f0:	d514      	bpl.n	800421c <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80041f2:	6823      	ldr	r3, [r4, #0]
 80041f4:	681a      	ldr	r2, [r3, #0]
 80041f6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80041fa:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80041fc:	2208      	movs	r2, #8
 80041fe:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004200:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004202:	f043 0304 	orr.w	r3, r3, #4
 8004206:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004208:	2304      	movs	r3, #4
 800420a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800420e:	2300      	movs	r3, #0
 8004210:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004214:	6963      	ldr	r3, [r4, #20]
 8004216:	b10b      	cbz	r3, 800421c <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004218:	4620      	mov	r0, r4
 800421a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800421c:	0772      	lsls	r2, r6, #29
 800421e:	d50b      	bpl.n	8004238 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004220:	056b      	lsls	r3, r5, #21
 8004222:	d509      	bpl.n	8004238 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004224:	6823      	ldr	r3, [r4, #0]
 8004226:	681a      	ldr	r2, [r3, #0]
 8004228:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800422c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800422e:	2204      	movs	r2, #4
 8004230:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004232:	4620      	mov	r0, r4
 8004234:	f7ff ffa2 	bl	800417c <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004238:	07b0      	lsls	r0, r6, #30
 800423a:	d514      	bpl.n	8004266 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800423c:	05a9      	lsls	r1, r5, #22
 800423e:	d512      	bpl.n	8004266 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004240:	6823      	ldr	r3, [r4, #0]
 8004242:	681a      	ldr	r2, [r3, #0]
 8004244:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004248:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800424a:	2202      	movs	r2, #2
 800424c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800424e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004250:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004252:	2301      	movs	r3, #1
 8004254:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004258:	2300      	movs	r3, #0
 800425a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 800425e:	6923      	ldr	r3, [r4, #16]
 8004260:	b10b      	cbz	r3, 8004266 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 8004262:	4620      	mov	r0, r4
 8004264:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004266:	06f2      	lsls	r2, r6, #27
 8004268:	d513      	bpl.n	8004292 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800426a:	04eb      	lsls	r3, r5, #19
 800426c:	d511      	bpl.n	8004292 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800426e:	6823      	ldr	r3, [r4, #0]
 8004270:	681a      	ldr	r2, [r3, #0]
 8004272:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004276:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004278:	2210      	movs	r2, #16
 800427a:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800427c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800427e:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004280:	2301      	movs	r3, #1
 8004282:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004286:	2300      	movs	r3, #0
 8004288:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800428c:	4620      	mov	r0, r4
 800428e:	f7ff ff76 	bl	800417e <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 8004292:	bd70      	pop	{r4, r5, r6, pc}

08004294 <HAL_DMA2D_ConfigLayer>:
{
 8004294:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
 8004296:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800429a:	2b01      	cmp	r3, #1
 800429c:	f04f 0302 	mov.w	r3, #2
 80042a0:	d02b      	beq.n	80042fa <HAL_DMA2D_ConfigLayer+0x66>
 80042a2:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80042a4:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80042a8:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80042ac:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80042b0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80042b4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80042b6:	4f18      	ldr	r7, [pc, #96]	; (8004318 <HAL_DMA2D_ConfigLayer+0x84>)
 80042b8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80042bc:	3c09      	subs	r4, #9
 80042be:	2c01      	cmp	r4, #1
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80042c0:	bf9c      	itt	ls
 80042c2:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80042c6:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80042c8:	ea4f 1601 	mov.w	r6, r1, lsl #4
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80042cc:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80042ce:	bf88      	it	hi
 80042d0:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80042d4:	b999      	cbnz	r1, 80042fe <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80042d6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80042d8:	4039      	ands	r1, r7
 80042da:	430a      	orrs	r2, r1
 80042dc:	625a      	str	r2, [r3, #36]	; 0x24
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80042de:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80042e0:	6982      	ldr	r2, [r0, #24]
 80042e2:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80042e4:	d803      	bhi.n	80042ee <HAL_DMA2D_ConfigLayer+0x5a>
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80042e6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80042e8:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80042ec:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80042ee:	2301      	movs	r3, #1
 80042f0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80042f4:	2300      	movs	r3, #0
 80042f6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 80042fa:	4618      	mov	r0, r3
}
 80042fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80042fe:	69d9      	ldr	r1, [r3, #28]
 8004300:	4039      	ands	r1, r7
 8004302:	430a      	orrs	r2, r1
 8004304:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004306:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004308:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800430a:	6992      	ldr	r2, [r2, #24]
 800430c:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800430e:	bf9c      	itt	ls
 8004310:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8004314:	621d      	strls	r5, [r3, #32]
 8004316:	e7ea      	b.n	80042ee <HAL_DMA2D_ConfigLayer+0x5a>
 8004318:	00fcfff0 	.word	0x00fcfff0

0800431c <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800431c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004320:	4607      	mov	r7, r0
 8004322:	460d      	mov	r5, r1
 8004324:	4614      	mov	r4, r2
 8004326:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8004328:	f7ff fc54 	bl	8003bd4 <HAL_GetTick>
 800432c:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800432e:	683b      	ldr	r3, [r7, #0]
 8004330:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 8004332:	07d2      	lsls	r2, r2, #31
 8004334:	d50a      	bpl.n	800434c <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8004336:	9906      	ldr	r1, [sp, #24]
 8004338:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 800433c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8004340:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8004344:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 8004346:	2000      	movs	r0, #0
}
 8004348:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 800434c:	f7ff fc42 	bl	8003bd4 <HAL_GetTick>
 8004350:	eba0 0008 	sub.w	r0, r0, r8
 8004354:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004358:	d9e9      	bls.n	800432e <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800435a:	2003      	movs	r0, #3
 800435c:	e7f4      	b.n	8004348 <DSI_ShortWrite+0x2c>

0800435e <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800435e:	7c03      	ldrb	r3, [r0, #16]
 8004360:	2b01      	cmp	r3, #1
 8004362:	d05d      	beq.n	8004420 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8004364:	6803      	ldr	r3, [r0, #0]
 8004366:	2200      	movs	r2, #0
 8004368:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800436c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8004370:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8004372:	bf48      	it	mi
 8004374:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8004378:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800437a:	bf42      	ittt	mi
 800437c:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8004380:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8004384:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8004388:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800438a:	bf42      	ittt	mi
 800438c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8004390:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8004394:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8004398:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800439a:	bf42      	ittt	mi
 800439c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043a0:	f042 0201 	orrmi.w	r2, r2, #1
 80043a4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 80043a8:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 80043aa:	bf42      	ittt	mi
 80043ac:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043b0:	f042 0202 	orrmi.w	r2, r2, #2
 80043b4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 80043b8:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 80043ba:	bf42      	ittt	mi
 80043bc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043c0:	f042 020c 	orrmi.w	r2, r2, #12
 80043c4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 80043c8:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 80043ca:	bf42      	ittt	mi
 80043cc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043d0:	f042 0210 	orrmi.w	r2, r2, #16
 80043d4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 80043d8:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 80043da:	bf42      	ittt	mi
 80043dc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043e0:	f042 0220 	orrmi.w	r2, r2, #32
 80043e4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 80043e8:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 80043ea:	bf42      	ittt	mi
 80043ec:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 80043f0:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 80043f4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 80043f8:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 80043fa:	bf42      	ittt	mi
 80043fc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004400:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004404:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8004408:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800440a:	bf42      	ittt	mi
 800440c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8004410:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8004414:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8004418:	2300      	movs	r3, #0
 800441a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800441c:	4618      	mov	r0, r3
 800441e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004420:	2002      	movs	r0, #2
}
 8004422:	4770      	bx	lr

08004424 <HAL_DSI_Init>:
{
 8004424:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004426:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8004428:	4604      	mov	r4, r0
 800442a:	2800      	cmp	r0, #0
 800442c:	f000 80a6 	beq.w	800457c <HAL_DSI_Init+0x158>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8004430:	7c43      	ldrb	r3, [r0, #17]
 8004432:	b90b      	cbnz	r3, 8004438 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8004434:	f7fd fb3a 	bl	8001aac <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8004438:	2303      	movs	r3, #3
 800443a:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800443c:	2300      	movs	r3, #0
 800443e:	9300      	str	r3, [sp, #0]
 8004440:	6823      	ldr	r3, [r4, #0]
 8004442:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8004446:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800444a:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800444e:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8004452:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004456:	9300      	str	r3, [sp, #0]
 8004458:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800445a:	f7ff fbbb 	bl	8003bd4 <HAL_GetTick>
 800445e:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8004460:	6822      	ldr	r2, [r4, #0]
 8004462:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8004466:	04d9      	lsls	r1, r3, #19
 8004468:	d577      	bpl.n	800455a <HAL_DSI_Init+0x136>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800446a:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800446e:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8004472:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8004476:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 800447a:	e9d5 0300 	ldrd	r0, r3, [r5]
 800447e:	02db      	lsls	r3, r3, #11
 8004480:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8004484:	68a8      	ldr	r0, [r5, #8]
 8004486:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 800448a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800448e:	430b      	orrs	r3, r1
 8004490:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8004494:	2300      	movs	r3, #0
 8004496:	9301      	str	r3, [sp, #4]
 8004498:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800449c:	f043 0301 	orr.w	r3, r3, #1
 80044a0:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 80044a4:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80044a8:	f003 0301 	and.w	r3, r3, #1
 80044ac:	9301      	str	r3, [sp, #4]
 80044ae:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 80044b0:	f7ff fb90 	bl	8003bd4 <HAL_GetTick>
 80044b4:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 80044b6:	6823      	ldr	r3, [r4, #0]
 80044b8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80044bc:	05d2      	lsls	r2, r2, #23
 80044be:	d556      	bpl.n	800456e <HAL_DSI_Init+0x14a>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80044c0:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80044c4:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 80044c6:	f042 0206 	orr.w	r2, r2, #6
 80044ca:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 80044ce:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80044d2:	f022 0203 	bic.w	r2, r2, #3
 80044d6:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 80044da:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 80044de:	430a      	orrs	r2, r1
 80044e0:	f042 0201 	orr.w	r2, r2, #1
 80044e4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80044e8:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80044ec:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 80044ee:	f022 0203 	bic.w	r2, r2, #3
 80044f2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 80044f6:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80044fa:	430a      	orrs	r2, r1
 80044fc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004500:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8004502:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8004504:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004508:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800450a:	689a      	ldr	r2, [r3, #8]
 800450c:	430a      	orrs	r2, r1
 800450e:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8004510:	686a      	ldr	r2, [r5, #4]
 8004512:	491b      	ldr	r1, [pc, #108]	; (8004580 <HAL_DSI_Init+0x15c>)
 8004514:	2a01      	cmp	r2, #1
 8004516:	bf38      	it	cc
 8004518:	2201      	movcc	r2, #1
 800451a:	434a      	muls	r2, r1
 800451c:	68a9      	ldr	r1, [r5, #8]
 800451e:	f001 0103 	and.w	r1, r1, #3
 8004522:	408a      	lsls	r2, r1
 8004524:	6829      	ldr	r1, [r5, #0]
 8004526:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800452a:	4341      	muls	r1, r0
 800452c:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8004530:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8004534:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8004538:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800453c:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004540:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8004542:	430a      	orrs	r2, r1
 8004544:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8004548:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800454c:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8004550:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8004552:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8004554:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8004556:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8004558:	e007      	b.n	800456a <HAL_DSI_Init+0x146>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800455a:	f7ff fb3b 	bl	8003bd4 <HAL_GetTick>
 800455e:	1b80      	subs	r0, r0, r6
 8004560:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004564:	f67f af7c 	bls.w	8004460 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8004568:	2003      	movs	r0, #3
}
 800456a:	b002      	add	sp, #8
 800456c:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800456e:	f7ff fb31 	bl	8003bd4 <HAL_GetTick>
 8004572:	1b80      	subs	r0, r0, r6
 8004574:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004578:	d99d      	bls.n	80044b6 <HAL_DSI_Init+0x92>
 800457a:	e7f5      	b.n	8004568 <HAL_DSI_Init+0x144>
    return HAL_ERROR;
 800457c:	2001      	movs	r0, #1
 800457e:	e7f4      	b.n	800456a <HAL_DSI_Init+0x146>
 8004580:	003d0900 	.word	0x003d0900

08004584 <HAL_DSI_ErrorCallback>:
 8004584:	4770      	bx	lr

08004586 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004586:	6803      	ldr	r3, [r0, #0]
 8004588:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800458c:	07d1      	lsls	r1, r2, #31
{
 800458e:	b510      	push	{r4, lr}
 8004590:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8004592:	d508      	bpl.n	80045a6 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8004594:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8004598:	07d2      	lsls	r2, r2, #31
 800459a:	d504      	bpl.n	80045a6 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800459c:	2201      	movs	r2, #1
 800459e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 80045a2:	f7fc fa93 	bl	8000acc <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 80045a6:	6823      	ldr	r3, [r4, #0]
 80045a8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80045ac:	0791      	lsls	r1, r2, #30
 80045ae:	d509      	bpl.n	80045c4 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 80045b0:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80045b4:	0792      	lsls	r2, r2, #30
 80045b6:	d505      	bpl.n	80045c4 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 80045b8:	2202      	movs	r2, #2
 80045ba:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 80045be:	4620      	mov	r0, r4
 80045c0:	f7fc fab8 	bl	8000b34 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 80045c4:	69a3      	ldr	r3, [r4, #24]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d04e      	beq.n	8004668 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 80045ca:	6821      	ldr	r1, [r4, #0]
 80045cc:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80045d0:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 80045d4:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 80045d8:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80045da:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80045de:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 80045e0:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 80045e2:	b119      	cbz	r1, 80045ec <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 80045e4:	6961      	ldr	r1, [r4, #20]
 80045e6:	f041 0101 	orr.w	r1, r1, #1
 80045ea:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 80045ec:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 80045f0:	bf1e      	ittt	ne
 80045f2:	6962      	ldrne	r2, [r4, #20]
 80045f4:	f042 0202 	orrne.w	r2, r2, #2
 80045f8:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 80045fa:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 80045fc:	bf42      	ittt	mi
 80045fe:	6962      	ldrmi	r2, [r4, #20]
 8004600:	f042 0204 	orrmi.w	r2, r2, #4
 8004604:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8004606:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8004608:	bf42      	ittt	mi
 800460a:	6962      	ldrmi	r2, [r4, #20]
 800460c:	f042 0208 	orrmi.w	r2, r2, #8
 8004610:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8004612:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8004616:	bf1e      	ittt	ne
 8004618:	6962      	ldrne	r2, [r4, #20]
 800461a:	f042 0210 	orrne.w	r2, r2, #16
 800461e:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8004620:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8004622:	bf42      	ittt	mi
 8004624:	6962      	ldrmi	r2, [r4, #20]
 8004626:	f042 0220 	orrmi.w	r2, r2, #32
 800462a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800462c:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800462e:	bf42      	ittt	mi
 8004630:	6962      	ldrmi	r2, [r4, #20]
 8004632:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8004636:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8004638:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800463a:	bf42      	ittt	mi
 800463c:	6962      	ldrmi	r2, [r4, #20]
 800463e:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8004642:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8004644:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8004646:	bf42      	ittt	mi
 8004648:	6962      	ldrmi	r2, [r4, #20]
 800464a:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800464e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8004650:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8004654:	bf1e      	ittt	ne
 8004656:	6963      	ldrne	r3, [r4, #20]
 8004658:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800465c:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800465e:	6963      	ldr	r3, [r4, #20]
 8004660:	b113      	cbz	r3, 8004668 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8004662:	4620      	mov	r0, r4
 8004664:	f7ff ff8e 	bl	8004584 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004668:	bd10      	pop	{r4, pc}

0800466a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800466a:	7c03      	ldrb	r3, [r0, #16]
 800466c:	2b01      	cmp	r3, #1
 800466e:	d00b      	beq.n	8004688 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004670:	6803      	ldr	r3, [r0, #0]
 8004672:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004674:	f022 0203 	bic.w	r2, r2, #3
 8004678:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800467a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800467c:	4311      	orrs	r1, r2
 800467e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004680:	2300      	movs	r3, #0
 8004682:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004684:	4618      	mov	r0, r3
 8004686:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004688:	2002      	movs	r0, #2
}
 800468a:	4770      	bx	lr

0800468c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800468c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800468e:	7c03      	ldrb	r3, [r0, #16]
 8004690:	2b01      	cmp	r3, #1
 8004692:	d06a      	beq.n	800476a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004694:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004696:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004698:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800469a:	f042 0201 	orr.w	r2, r2, #1
 800469e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 80046a0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80046a4:	f022 0201 	bic.w	r2, r2, #1
 80046a8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 80046ac:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80046b0:	f042 0201 	orr.w	r2, r2, #1
 80046b4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 80046b8:	68da      	ldr	r2, [r3, #12]
 80046ba:	f022 0203 	bic.w	r2, r2, #3
 80046be:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 80046c0:	68da      	ldr	r2, [r3, #12]
 80046c2:	4322      	orrs	r2, r4
 80046c4:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 80046c6:	695a      	ldr	r2, [r3, #20]
 80046c8:	f022 0207 	bic.w	r2, r2, #7
 80046cc:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 80046ce:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 80046d2:	432a      	orrs	r2, r5
 80046d4:	694d      	ldr	r5, [r1, #20]
 80046d6:	695c      	ldr	r4, [r3, #20]
 80046d8:	432a      	orrs	r2, r5
 80046da:	4322      	orrs	r2, r4
 80046dc:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80046de:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80046e0:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 80046e2:	f022 020f 	bic.w	r2, r2, #15
 80046e6:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 80046e8:	691c      	ldr	r4, [r3, #16]
 80046ea:	432c      	orrs	r4, r5
 80046ec:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 80046ee:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80046f2:	f024 040e 	bic.w	r4, r4, #14
 80046f6:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80046fa:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80046fe:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8004700:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8004704:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8004708:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800470a:	0c12      	lsrs	r2, r2, #16
 800470c:	0412      	lsls	r2, r2, #16
 800470e:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8004710:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8004712:	4322      	orrs	r2, r4
 8004714:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8004716:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800471a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800471e:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8004722:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8004726:	432a      	orrs	r2, r5
 8004728:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800472a:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800472e:	432a      	orrs	r2, r5
 8004730:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004732:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8004734:	432a      	orrs	r2, r5
 8004736:	4322      	orrs	r2, r4
 8004738:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800473c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800473e:	f022 0201 	bic.w	r2, r2, #1
 8004742:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8004744:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8004746:	430a      	orrs	r2, r1
 8004748:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800474a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800474e:	f042 0201 	orr.w	r2, r2, #1
 8004752:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8004756:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800475a:	f042 0202 	orr.w	r2, r2, #2
 800475e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004762:	2300      	movs	r3, #0
 8004764:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004766:	4618      	mov	r0, r3
}
 8004768:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800476a:	2002      	movs	r0, #2
 800476c:	e7fc      	b.n	8004768 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004770 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004770:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004772:	7c03      	ldrb	r3, [r0, #16]
 8004774:	2b01      	cmp	r3, #1
 8004776:	d02a      	beq.n	80047ce <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004778:	6802      	ldr	r2, [r0, #0]
 800477a:	4b16      	ldr	r3, [pc, #88]	; (80047d4 <HAL_DSI_ConfigCommand+0x64>)
 800477c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800477e:	4023      	ands	r3, r4
 8004780:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004782:	e9d1 3500 	ldrd	r3, r5, [r1]
 8004786:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004788:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800478a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800478c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800478e:	68cd      	ldr	r5, [r1, #12]
 8004790:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8004792:	690d      	ldr	r5, [r1, #16]
 8004794:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8004796:	694d      	ldr	r5, [r1, #20]
 8004798:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800479a:	698d      	ldr	r5, [r1, #24]
 800479c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800479e:	69cd      	ldr	r5, [r1, #28]
 80047a0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 80047a2:	6a0d      	ldr	r5, [r1, #32]
 80047a4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 80047a6:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80047a8:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 80047aa:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80047ac:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 80047ae:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80047b0:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 80047b2:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 80047b4:	4323      	orrs	r3, r4
 80047b6:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 80047b8:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80047ba:	f023 0302 	bic.w	r3, r3, #2
 80047be:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 80047c0:	6e93      	ldr	r3, [r2, #104]	; 0x68
 80047c2:	430b      	orrs	r3, r1
 80047c4:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047c6:	2300      	movs	r3, #0
 80047c8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80047ca:	4618      	mov	r0, r3
}
 80047cc:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80047ce:	2002      	movs	r0, #2
 80047d0:	e7fc      	b.n	80047cc <HAL_DSI_ConfigCommand+0x5c>
 80047d2:	bf00      	nop
 80047d4:	fef080ff 	.word	0xfef080ff

080047d8 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80047d8:	7c03      	ldrb	r3, [r0, #16]
 80047da:	2b01      	cmp	r3, #1
 80047dc:	d00b      	beq.n	80047f6 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 80047de:	6803      	ldr	r3, [r0, #0]
 80047e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80047e2:	f022 021f 	bic.w	r2, r2, #31
 80047e6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 80047e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80047ea:	4311      	orrs	r1, r2
 80047ec:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80047ee:	2300      	movs	r3, #0
 80047f0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80047f2:	4618      	mov	r0, r3
 80047f4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 80047f6:	2002      	movs	r0, #2
}
 80047f8:	4770      	bx	lr

080047fa <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 80047fa:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 80047fc:	7c03      	ldrb	r3, [r0, #16]
 80047fe:	2b01      	cmp	r3, #1
 8004800:	d035      	beq.n	800486e <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004802:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8004806:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8004808:	4294      	cmp	r4, r2
 800480a:	bf38      	it	cc
 800480c:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800480e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8004812:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8004816:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800481a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800481e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004822:	4322      	orrs	r2, r4
 8004824:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8004828:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800482c:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8004830:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8004834:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8004838:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800483a:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800483e:	690d      	ldr	r5, [r1, #16]
 8004840:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8004844:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8004846:	432a      	orrs	r2, r5
 8004848:	4322      	orrs	r2, r4
 800484a:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800484e:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8004852:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004856:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800485a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800485e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004862:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004866:	2300      	movs	r3, #0
 8004868:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800486a:	4618      	mov	r0, r3
}
 800486c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800486e:	2002      	movs	r0, #2
 8004870:	e7fc      	b.n	800486c <HAL_DSI_ConfigPhyTimer+0x72>
	...

08004874 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8004874:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004876:	7c03      	ldrb	r3, [r0, #16]
 8004878:	2b01      	cmp	r3, #1
 800487a:	d05c      	beq.n	8004936 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800487c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800487e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004880:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004882:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004884:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004888:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800488a:	689a      	ldr	r2, [r3, #8]
 800488c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004890:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004892:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004894:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004896:	b292      	uxth	r2, r2
 8004898:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800489a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800489c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80048a0:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 80048a2:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80048a4:	4a25      	ldr	r2, [pc, #148]	; (800493c <HAL_DSI_ConfigHostTimeouts+0xc8>)
 80048a6:	4014      	ands	r4, r2
 80048a8:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 80048aa:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 80048ac:	432c      	orrs	r4, r5
 80048ae:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80048b0:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80048b2:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 80048b4:	4014      	ands	r4, r2
 80048b6:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 80048b8:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 80048ba:	432c      	orrs	r4, r5
 80048bc:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80048be:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80048c2:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 80048c4:	4014      	ands	r4, r2
 80048c6:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 80048ca:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 80048ce:	432c      	orrs	r4, r5
 80048d0:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80048d4:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80048d8:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 80048da:	4014      	ands	r4, r2
 80048dc:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 80048e0:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80048e4:	432c      	orrs	r4, r5
 80048e6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 80048ea:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80048ee:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 80048f2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 80048f6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 80048fa:	698d      	ldr	r5, [r1, #24]
 80048fc:	432c      	orrs	r4, r5
 80048fe:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8004902:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004906:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004908:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800490a:	4014      	ands	r4, r2
 800490c:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8004910:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8004914:	432c      	orrs	r4, r5
 8004916:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800491a:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800491e:	4022      	ands	r2, r4
 8004920:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8004924:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8004928:	430a      	orrs	r2, r1
 800492a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800492e:	2300      	movs	r3, #0
 8004930:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004932:	4618      	mov	r0, r3
}
 8004934:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004936:	2002      	movs	r0, #2
 8004938:	e7fc      	b.n	8004934 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800493a:	bf00      	nop
 800493c:	ffff0000 	.word	0xffff0000

08004940 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004940:	7c03      	ldrb	r3, [r0, #16]
 8004942:	2b01      	cmp	r3, #1
{
 8004944:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8004946:	d01c      	beq.n	8004982 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8004948:	6802      	ldr	r2, [r0, #0]
 800494a:	2300      	movs	r3, #0
 800494c:	9300      	str	r3, [sp, #0]
 800494e:	6851      	ldr	r1, [r2, #4]
 8004950:	f041 0101 	orr.w	r1, r1, #1
 8004954:	6051      	str	r1, [r2, #4]
 8004956:	6851      	ldr	r1, [r2, #4]
 8004958:	f001 0101 	and.w	r1, r1, #1
 800495c:	9100      	str	r1, [sp, #0]
 800495e:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004960:	9301      	str	r3, [sp, #4]
 8004962:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8004966:	f041 0108 	orr.w	r1, r1, #8
 800496a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800496e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004972:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004974:	f002 0208 	and.w	r2, r2, #8
 8004978:	9201      	str	r2, [sp, #4]
 800497a:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800497c:	4618      	mov	r0, r3
}
 800497e:	b002      	add	sp, #8
 8004980:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004982:	2002      	movs	r0, #2
 8004984:	e7fb      	b.n	800497e <HAL_DSI_Start+0x3e>

08004986 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004986:	7c03      	ldrb	r3, [r0, #16]
 8004988:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800498a:	bf1f      	itttt	ne
 800498c:	6802      	ldrne	r2, [r0, #0]
 800498e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8004992:	f043 0304 	orrne.w	r3, r3, #4
 8004996:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800499a:	bf1d      	ittte	ne
 800499c:	2300      	movne	r3, #0
 800499e:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 80049a0:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 80049a2:	2002      	moveq	r0, #2
}
 80049a4:	4770      	bx	lr

080049a6 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 80049a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 80049a8:	7c05      	ldrb	r5, [r0, #16]
 80049aa:	2d01      	cmp	r5, #1
{
 80049ac:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 80049ae:	d009      	beq.n	80049c4 <HAL_DSI_ShortWrite+0x1e>
 80049b0:	2501      	movs	r5, #1
 80049b2:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 80049b4:	9d06      	ldr	r5, [sp, #24]
 80049b6:	9500      	str	r5, [sp, #0]
 80049b8:	f7ff fcb0 	bl	800431c <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80049bc:	2300      	movs	r3, #0
 80049be:	7423      	strb	r3, [r4, #16]

  return status;
}
 80049c0:	b003      	add	sp, #12
 80049c2:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80049c4:	2002      	movs	r0, #2
 80049c6:	e7fb      	b.n	80049c0 <HAL_DSI_ShortWrite+0x1a>

080049c8 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 80049c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049cc:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 80049ce:	7c03      	ldrb	r3, [r0, #16]
 80049d0:	2b01      	cmp	r3, #1
{
 80049d2:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 80049d6:	4606      	mov	r6, r0
 80049d8:	460f      	mov	r7, r1
 80049da:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 80049dc:	d053      	beq.n	8004a86 <HAL_DSI_LongWrite+0xbe>
 80049de:	2301      	movs	r3, #1
 80049e0:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 80049e2:	f7ff f8f7 	bl	8003bd4 <HAL_GetTick>
 80049e6:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80049e8:	6831      	ldr	r1, [r6, #0]
 80049ea:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 80049ec:	f013 0a01 	ands.w	sl, r3, #1
 80049f0:	d01a      	beq.n	8004a28 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80049f2:	2c03      	cmp	r4, #3
 80049f4:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 80049f6:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 80049fa:	bf28      	it	cs
 80049fc:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 80049fe:	4282      	cmp	r2, r0
 8004a00:	d11e      	bne.n	8004a40 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8004a02:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8004a04:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 8004a08:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8004a0a:	bb1b      	cbnz	r3, 8004a54 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8004a0c:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8004a0e:	0222      	lsls	r2, r4, #8
 8004a10:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8004a14:	b292      	uxth	r2, r2
 8004a16:	0224      	lsls	r4, r4, #8
 8004a18:	4315      	orrs	r5, r2
 8004a1a:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8004a1e:	432c      	orrs	r4, r5
 8004a20:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8004a22:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8004a24:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8004a26:	e009      	b.n	8004a3c <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8004a28:	f7ff f8d4 	bl	8003bd4 <HAL_GetTick>
 8004a2c:	eba0 000b 	sub.w	r0, r0, fp
 8004a30:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8004a34:	d9d8      	bls.n	80049e8 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8004a36:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8004a3a:	2003      	movs	r0, #3
}
 8004a3c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8004a40:	f818 3002 	ldrb.w	r3, [r8, r2]
 8004a44:	3201      	adds	r2, #1
 8004a46:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 8004a4a:	fa03 f30c 	lsl.w	r3, r3, ip
 8004a4e:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8004a52:	e7d4      	b.n	80049fe <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004a54:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8004a56:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004a5a:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8004a5c:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8004a5e:	bf28      	it	cs
 8004a60:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004a64:	f812 8000 	ldrb.w	r8, [r2, r0]
 8004a68:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8004a6c:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004a6e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004a72:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004a74:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004a78:	d1f4      	bne.n	8004a64 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8004a7a:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 8004a7e:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004a82:	4472      	add	r2, lr
 8004a84:	e7c1      	b.n	8004a0a <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8004a86:	2002      	movs	r0, #2
 8004a88:	e7d8      	b.n	8004a3c <HAL_DSI_LongWrite+0x74>

08004a8a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004a8a:	7c03      	ldrb	r3, [r0, #16]
 8004a8c:	2b01      	cmp	r3, #1
 8004a8e:	d010      	beq.n	8004ab2 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004a90:	6803      	ldr	r3, [r0, #0]
 8004a92:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004a96:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 8004a9a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 8004a9e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004aa2:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8004aa6:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004aaa:	2300      	movs	r3, #0
 8004aac:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004aae:	4618      	mov	r0, r3
 8004ab0:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004ab2:	2002      	movs	r0, #2
}
 8004ab4:	4770      	bx	lr
	...

08004ab8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004ab8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004abc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8004c80 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004ac0:	4a6d      	ldr	r2, [pc, #436]	; (8004c78 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004ac2:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004c84 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004ac6:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004ac8:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004aca:	2401      	movs	r4, #1
 8004acc:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004ace:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8004ad2:	43ac      	bics	r4, r5
 8004ad4:	f040 80b7 	bne.w	8004c46 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004ad8:	684c      	ldr	r4, [r1, #4]
 8004ada:	f024 0c10 	bic.w	ip, r4, #16
 8004ade:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004ae2:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004ae4:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004ae8:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004aec:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004aee:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8004af2:	d811      	bhi.n	8004b18 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8004af4:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004af6:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004afa:	68cf      	ldr	r7, [r1, #12]
 8004afc:	fa07 f70e 	lsl.w	r7, r7, lr
 8004b00:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8004b04:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8004b06:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004b08:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8004b0c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8004b10:	409f      	lsls	r7, r3
 8004b12:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8004b16:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8004b18:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004b1a:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004b1e:	688f      	ldr	r7, [r1, #8]
 8004b20:	fa07 f70e 	lsl.w	r7, r7, lr
 8004b24:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004b28:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8004b2c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8004b2e:	d116      	bne.n	8004b5e <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8004b30:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8004b34:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004b38:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8004b3c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004b40:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8004b44:	f04f 0c0f 	mov.w	ip, #15
 8004b48:	fa0c fc0b 	lsl.w	ip, ip, fp
 8004b4c:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004b50:	690f      	ldr	r7, [r1, #16]
 8004b52:	fa07 f70b 	lsl.w	r7, r7, fp
 8004b56:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8004b5a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8004b5e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004b60:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004b62:	f004 0703 	and.w	r7, r4, #3
 8004b66:	fa07 f70e 	lsl.w	r7, r7, lr
 8004b6a:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8004b6c:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004b6e:	00e5      	lsls	r5, r4, #3
 8004b70:	d569      	bpl.n	8004c46 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b72:	f04f 0b00 	mov.w	fp, #0
 8004b76:	f8cd b004 	str.w	fp, [sp, #4]
 8004b7a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004b7e:	4d3f      	ldr	r5, [pc, #252]	; (8004c7c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004b80:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8004b84:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8004b88:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8004b8c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004b90:	9701      	str	r7, [sp, #4]
 8004b92:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004b94:	f023 0703 	bic.w	r7, r3, #3
 8004b98:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8004b9c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004ba0:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004ba4:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004ba8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004bac:	f04f 0c0f 	mov.w	ip, #15
 8004bb0:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004bb4:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004bb6:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004bba:	d04b      	beq.n	8004c54 <HAL_GPIO_Init+0x19c>
 8004bbc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bc0:	42a8      	cmp	r0, r5
 8004bc2:	d049      	beq.n	8004c58 <HAL_GPIO_Init+0x1a0>
 8004bc4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bc8:	42a8      	cmp	r0, r5
 8004bca:	d047      	beq.n	8004c5c <HAL_GPIO_Init+0x1a4>
 8004bcc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bd0:	42a8      	cmp	r0, r5
 8004bd2:	d045      	beq.n	8004c60 <HAL_GPIO_Init+0x1a8>
 8004bd4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bd8:	42a8      	cmp	r0, r5
 8004bda:	d043      	beq.n	8004c64 <HAL_GPIO_Init+0x1ac>
 8004bdc:	4548      	cmp	r0, r9
 8004bde:	d043      	beq.n	8004c68 <HAL_GPIO_Init+0x1b0>
 8004be0:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8004be4:	42a8      	cmp	r0, r5
 8004be6:	d041      	beq.n	8004c6c <HAL_GPIO_Init+0x1b4>
 8004be8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bec:	42a8      	cmp	r0, r5
 8004bee:	d03f      	beq.n	8004c70 <HAL_GPIO_Init+0x1b8>
 8004bf0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bf4:	42a8      	cmp	r0, r5
 8004bf6:	d03d      	beq.n	8004c74 <HAL_GPIO_Init+0x1bc>
 8004bf8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8004bfc:	42a8      	cmp	r0, r5
 8004bfe:	bf0c      	ite	eq
 8004c00:	2509      	moveq	r5, #9
 8004c02:	250a      	movne	r5, #10
 8004c04:	fa05 f50e 	lsl.w	r5, r5, lr
 8004c08:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8004c0c:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8004c0e:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8004c10:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8004c12:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8004c16:	bf0c      	ite	eq
 8004c18:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004c1a:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8004c1c:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8004c1e:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8004c20:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8004c24:	bf0c      	ite	eq
 8004c26:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004c28:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8004c2a:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004c2c:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8004c2e:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8004c32:	bf0c      	ite	eq
 8004c34:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8004c36:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8004c38:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8004c3a:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8004c3c:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8004c3e:	bf54      	ite	pl
 8004c40:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8004c42:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8004c44:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004c46:	3301      	adds	r3, #1
 8004c48:	2b10      	cmp	r3, #16
 8004c4a:	f47f af3d 	bne.w	8004ac8 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8004c4e:	b003      	add	sp, #12
 8004c50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004c54:	465d      	mov	r5, fp
 8004c56:	e7d5      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c58:	2501      	movs	r5, #1
 8004c5a:	e7d3      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c5c:	2502      	movs	r5, #2
 8004c5e:	e7d1      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c60:	2503      	movs	r5, #3
 8004c62:	e7cf      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c64:	2504      	movs	r5, #4
 8004c66:	e7cd      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c68:	2505      	movs	r5, #5
 8004c6a:	e7cb      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c6c:	2506      	movs	r5, #6
 8004c6e:	e7c9      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c70:	2507      	movs	r5, #7
 8004c72:	e7c7      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c74:	2508      	movs	r5, #8
 8004c76:	e7c5      	b.n	8004c04 <HAL_GPIO_Init+0x14c>
 8004c78:	40013c00 	.word	0x40013c00
 8004c7c:	40020000 	.word	0x40020000
 8004c80:	40023800 	.word	0x40023800
 8004c84:	40021400 	.word	0x40021400

08004c88 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004c8c:	4c4a      	ldr	r4, [pc, #296]	; (8004db8 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004c8e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8004dc0 <HAL_GPIO_DeInit+0x138>
 8004c92:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004dc4 <HAL_GPIO_DeInit+0x13c>
 8004c96:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004dc8 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004c9a:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004c9c:	2301      	movs	r3, #1
 8004c9e:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 8004ca2:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004ca6:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004caa:	d16e      	bne.n	8004d8a <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004cac:	f022 0503 	bic.w	r5, r2, #3
 8004cb0:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004cb4:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004cb8:	4b40      	ldr	r3, [pc, #256]	; (8004dbc <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004cba:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004cbe:	f002 0c03 	and.w	ip, r2, #3
 8004cc2:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004cc6:	260f      	movs	r6, #15
 8004cc8:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004ccc:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 8004cce:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004cd2:	d05f      	beq.n	8004d94 <HAL_GPIO_DeInit+0x10c>
 8004cd4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004cd8:	4298      	cmp	r0, r3
 8004cda:	d05d      	beq.n	8004d98 <HAL_GPIO_DeInit+0x110>
 8004cdc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004ce0:	4298      	cmp	r0, r3
 8004ce2:	d05b      	beq.n	8004d9c <HAL_GPIO_DeInit+0x114>
 8004ce4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004ce8:	4298      	cmp	r0, r3
 8004cea:	d059      	beq.n	8004da0 <HAL_GPIO_DeInit+0x118>
 8004cec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004cf0:	4298      	cmp	r0, r3
 8004cf2:	d057      	beq.n	8004da4 <HAL_GPIO_DeInit+0x11c>
 8004cf4:	4548      	cmp	r0, r9
 8004cf6:	d057      	beq.n	8004da8 <HAL_GPIO_DeInit+0x120>
 8004cf8:	4550      	cmp	r0, sl
 8004cfa:	d057      	beq.n	8004dac <HAL_GPIO_DeInit+0x124>
 8004cfc:	4558      	cmp	r0, fp
 8004cfe:	d057      	beq.n	8004db0 <HAL_GPIO_DeInit+0x128>
 8004d00:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8004d04:	4298      	cmp	r0, r3
 8004d06:	d055      	beq.n	8004db4 <HAL_GPIO_DeInit+0x12c>
 8004d08:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004d0c:	4298      	cmp	r0, r3
 8004d0e:	bf0c      	ite	eq
 8004d10:	2309      	moveq	r3, #9
 8004d12:	230a      	movne	r3, #10
 8004d14:	fa03 f30c 	lsl.w	r3, r3, ip
 8004d18:	4543      	cmp	r3, r8
 8004d1a:	d113      	bne.n	8004d44 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004d1c:	6823      	ldr	r3, [r4, #0]
 8004d1e:	ea23 0307 	bic.w	r3, r3, r7
 8004d22:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8004d24:	6863      	ldr	r3, [r4, #4]
 8004d26:	ea23 0307 	bic.w	r3, r3, r7
 8004d2a:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 8004d2c:	68a3      	ldr	r3, [r4, #8]
 8004d2e:	ea23 0307 	bic.w	r3, r3, r7
 8004d32:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8004d34:	68e3      	ldr	r3, [r4, #12]
 8004d36:	ea23 0307 	bic.w	r3, r3, r7
 8004d3a:	60e3      	str	r3, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8004d3c:	68ab      	ldr	r3, [r5, #8]
 8004d3e:	ea23 0306 	bic.w	r3, r3, r6
 8004d42:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004d44:	6805      	ldr	r5, [r0, #0]
 8004d46:	2603      	movs	r6, #3
 8004d48:	0053      	lsls	r3, r2, #1
 8004d4a:	fa06 f303 	lsl.w	r3, r6, r3
 8004d4e:	ea25 0503 	bic.w	r5, r5, r3
 8004d52:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004d54:	fa22 f506 	lsr.w	r5, r2, r6
 8004d58:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 8004d5c:	f002 0c07 	and.w	ip, r2, #7
 8004d60:	6a2e      	ldr	r6, [r5, #32]
 8004d62:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004d66:	270f      	movs	r7, #15
 8004d68:	fa07 f70c 	lsl.w	r7, r7, ip
 8004d6c:	ea26 0707 	bic.w	r7, r6, r7
 8004d70:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004d72:	68c5      	ldr	r5, [r0, #12]
 8004d74:	ea25 0503 	bic.w	r5, r5, r3
 8004d78:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004d7a:	6845      	ldr	r5, [r0, #4]
 8004d7c:	ea25 050e 	bic.w	r5, r5, lr
 8004d80:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004d82:	6885      	ldr	r5, [r0, #8]
 8004d84:	ea25 0303 	bic.w	r3, r5, r3
 8004d88:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004d8a:	3201      	adds	r2, #1
 8004d8c:	2a10      	cmp	r2, #16
 8004d8e:	d185      	bne.n	8004c9c <HAL_GPIO_DeInit+0x14>
    }
  }
}
 8004d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004d94:	2300      	movs	r3, #0
 8004d96:	e7bd      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004d98:	2301      	movs	r3, #1
 8004d9a:	e7bb      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004d9c:	2302      	movs	r3, #2
 8004d9e:	e7b9      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004da0:	2303      	movs	r3, #3
 8004da2:	e7b7      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004da4:	2304      	movs	r3, #4
 8004da6:	e7b5      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004da8:	2305      	movs	r3, #5
 8004daa:	e7b3      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004dac:	2306      	movs	r3, #6
 8004dae:	e7b1      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004db0:	2307      	movs	r3, #7
 8004db2:	e7af      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004db4:	2308      	movs	r3, #8
 8004db6:	e7ad      	b.n	8004d14 <HAL_GPIO_DeInit+0x8c>
 8004db8:	40013c00 	.word	0x40013c00
 8004dbc:	40020000 	.word	0x40020000
 8004dc0:	40021400 	.word	0x40021400
 8004dc4:	40021800 	.word	0x40021800
 8004dc8:	40021c00 	.word	0x40021c00

08004dcc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004dcc:	6903      	ldr	r3, [r0, #16]
 8004dce:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8004dd0:	bf14      	ite	ne
 8004dd2:	2001      	movne	r0, #1
 8004dd4:	2000      	moveq	r0, #0
 8004dd6:	4770      	bx	lr

08004dd8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004dd8:	b10a      	cbz	r2, 8004dde <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004dda:	6181      	str	r1, [r0, #24]
  }
}
 8004ddc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004dde:	0409      	lsls	r1, r1, #16
 8004de0:	e7fb      	b.n	8004dda <HAL_GPIO_WritePin+0x2>

08004de2 <HAL_GPIO_TogglePin>:
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 8004de2:	6943      	ldr	r3, [r0, #20]
 8004de4:	ea31 0303 	bics.w	r3, r1, r3
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8004de8:	bf08      	it	eq
 8004dea:	0409      	lsleq	r1, r1, #16
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
 8004dec:	6181      	str	r1, [r0, #24]
  }
}
 8004dee:	4770      	bx	lr

08004df0 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004df0:	6801      	ldr	r1, [r0, #0]
 8004df2:	694b      	ldr	r3, [r1, #20]
 8004df4:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004df8:	f04f 0200 	mov.w	r2, #0
 8004dfc:	d010      	beq.n	8004e20 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004dfe:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004e02:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e04:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004e06:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004e08:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004e0c:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e10:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004e12:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004e16:	f043 0304 	orr.w	r3, r3, #4
 8004e1a:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004e1c:	2001      	movs	r0, #1
 8004e1e:	4770      	bx	lr
  }
  return HAL_OK;
 8004e20:	4618      	mov	r0, r3
}
 8004e22:	4770      	bx	lr

08004e24 <I2C_WaitOnFlagUntilTimeout>:
{
 8004e24:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8004e28:	4606      	mov	r6, r0
 8004e2a:	460f      	mov	r7, r1
 8004e2c:	4691      	mov	r9, r2
 8004e2e:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004e30:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004e34:	6833      	ldr	r3, [r6, #0]
 8004e36:	f1ba 0f01 	cmp.w	sl, #1
 8004e3a:	bf0c      	ite	eq
 8004e3c:	695c      	ldreq	r4, [r3, #20]
 8004e3e:	699c      	ldrne	r4, [r3, #24]
 8004e40:	ea27 0404 	bic.w	r4, r7, r4
 8004e44:	b2a4      	uxth	r4, r4
 8004e46:	fab4 f484 	clz	r4, r4
 8004e4a:	0964      	lsrs	r4, r4, #5
 8004e4c:	45a1      	cmp	r9, r4
 8004e4e:	d001      	beq.n	8004e54 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004e50:	2000      	movs	r0, #0
 8004e52:	e017      	b.n	8004e84 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004e54:	1c6a      	adds	r2, r5, #1
 8004e56:	d0ee      	beq.n	8004e36 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e58:	f7fe febc 	bl	8003bd4 <HAL_GetTick>
 8004e5c:	9b08      	ldr	r3, [sp, #32]
 8004e5e:	1ac0      	subs	r0, r0, r3
 8004e60:	42a8      	cmp	r0, r5
 8004e62:	d801      	bhi.n	8004e68 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004e64:	2d00      	cmp	r5, #0
 8004e66:	d1e5      	bne.n	8004e34 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004e68:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004e6a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004e6c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004e6e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004e72:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004e76:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004e78:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004e7c:	f042 0220 	orr.w	r2, r2, #32
 8004e80:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8004e82:	2001      	movs	r0, #1
}
 8004e84:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004e88 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8004e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004e8c:	4604      	mov	r4, r0
 8004e8e:	460f      	mov	r7, r1
 8004e90:	4616      	mov	r6, r2
 8004e92:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004e94:	6825      	ldr	r5, [r4, #0]
 8004e96:	6968      	ldr	r0, [r5, #20]
 8004e98:	ea27 0000 	bic.w	r0, r7, r0
 8004e9c:	b280      	uxth	r0, r0
 8004e9e:	b1b8      	cbz	r0, 8004ed0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004ea0:	696b      	ldr	r3, [r5, #20]
 8004ea2:	055a      	lsls	r2, r3, #21
 8004ea4:	d516      	bpl.n	8004ed4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ea6:	682b      	ldr	r3, [r5, #0]
 8004ea8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004eac:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004eae:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8004eb2:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004eb4:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004eb6:	2300      	movs	r3, #0
 8004eb8:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004eba:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ebe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004ec2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ec4:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ec8:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004eca:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8004ece:	2001      	movs	r0, #1
}
 8004ed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004ed4:	1c73      	adds	r3, r6, #1
 8004ed6:	d0de      	beq.n	8004e96 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004ed8:	f7fe fe7c 	bl	8003bd4 <HAL_GetTick>
 8004edc:	eba0 0008 	sub.w	r0, r0, r8
 8004ee0:	42b0      	cmp	r0, r6
 8004ee2:	d801      	bhi.n	8004ee8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004ee4:	2e00      	cmp	r6, #0
 8004ee6:	d1d5      	bne.n	8004e94 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004ee8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004eea:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004eec:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004eee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ef2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ef6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004ef8:	f042 0220 	orr.w	r2, r2, #32
 8004efc:	e7e4      	b.n	8004ec8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08004efe <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004efe:	b570      	push	{r4, r5, r6, lr}
 8004f00:	4604      	mov	r4, r0
 8004f02:	460d      	mov	r5, r1
 8004f04:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004f06:	6821      	ldr	r1, [r4, #0]
 8004f08:	694b      	ldr	r3, [r1, #20]
 8004f0a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004f0e:	d001      	beq.n	8004f14 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004f10:	2000      	movs	r0, #0
 8004f12:	e010      	b.n	8004f36 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004f14:	694a      	ldr	r2, [r1, #20]
 8004f16:	06d2      	lsls	r2, r2, #27
 8004f18:	d50e      	bpl.n	8004f38 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004f1a:	f06f 0210 	mvn.w	r2, #16
 8004f1e:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f20:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f22:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f24:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f28:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004f2c:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f2e:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8004f30:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8004f34:	2001      	movs	r0, #1
}
 8004f36:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f38:	f7fe fe4c 	bl	8003bd4 <HAL_GetTick>
 8004f3c:	1b80      	subs	r0, r0, r6
 8004f3e:	42a8      	cmp	r0, r5
 8004f40:	d801      	bhi.n	8004f46 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004f42:	2d00      	cmp	r5, #0
 8004f44:	d1df      	bne.n	8004f06 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f46:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f48:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004f4a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004f4c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f50:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f54:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004f56:	f042 0220 	orr.w	r2, r2, #32
 8004f5a:	e7e8      	b.n	8004f2e <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08004f5c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8004f5c:	b570      	push	{r4, r5, r6, lr}
 8004f5e:	4604      	mov	r4, r0
 8004f60:	460d      	mov	r5, r1
 8004f62:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f64:	6823      	ldr	r3, [r4, #0]
 8004f66:	695b      	ldr	r3, [r3, #20]
 8004f68:	075b      	lsls	r3, r3, #29
 8004f6a:	d501      	bpl.n	8004f70 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004f6c:	2000      	movs	r0, #0
}
 8004f6e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f70:	4620      	mov	r0, r4
 8004f72:	f7ff ff3d 	bl	8004df0 <I2C_IsAcknowledgeFailed>
 8004f76:	b9a8      	cbnz	r0, 8004fa4 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004f78:	1c6a      	adds	r2, r5, #1
 8004f7a:	d0f3      	beq.n	8004f64 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f7c:	f7fe fe2a 	bl	8003bd4 <HAL_GetTick>
 8004f80:	1b80      	subs	r0, r0, r6
 8004f82:	42a8      	cmp	r0, r5
 8004f84:	d801      	bhi.n	8004f8a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004f86:	2d00      	cmp	r5, #0
 8004f88:	d1ec      	bne.n	8004f64 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f8a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f8c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004f8e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004f90:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f94:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f98:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004f9a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f9e:	f042 0220 	orr.w	r2, r2, #32
 8004fa2:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004fa4:	2001      	movs	r0, #1
 8004fa6:	e7e2      	b.n	8004f6e <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004fa8 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004fa8:	b570      	push	{r4, r5, r6, lr}
 8004faa:	4604      	mov	r4, r0
 8004fac:	460d      	mov	r5, r1
 8004fae:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004fb0:	6823      	ldr	r3, [r4, #0]
 8004fb2:	695b      	ldr	r3, [r3, #20]
 8004fb4:	061b      	lsls	r3, r3, #24
 8004fb6:	d501      	bpl.n	8004fbc <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004fb8:	2000      	movs	r0, #0
}
 8004fba:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	f7ff ff17 	bl	8004df0 <I2C_IsAcknowledgeFailed>
 8004fc2:	b9a8      	cbnz	r0, 8004ff0 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004fc4:	1c6a      	adds	r2, r5, #1
 8004fc6:	d0f3      	beq.n	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fc8:	f7fe fe04 	bl	8003bd4 <HAL_GetTick>
 8004fcc:	1b80      	subs	r0, r0, r6
 8004fce:	42a8      	cmp	r0, r5
 8004fd0:	d801      	bhi.n	8004fd6 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004fd2:	2d00      	cmp	r5, #0
 8004fd4:	d1ec      	bne.n	8004fb0 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004fd6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004fd8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004fda:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8004fdc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fe0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fe4:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004fe6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004fea:	f042 0220 	orr.w	r2, r2, #32
 8004fee:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004ff0:	2001      	movs	r0, #1
 8004ff2:	e7e2      	b.n	8004fba <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004ff4 <I2C_RequestMemoryWrite>:
{
 8004ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004ff8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004ffa:	6802      	ldr	r2, [r0, #0]
{
 8004ffc:	b085      	sub	sp, #20
 8004ffe:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8005002:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005004:	6813      	ldr	r3, [r2, #0]
 8005006:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800500a:	6013      	str	r3, [r2, #0]
{
 800500c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800500e:	463b      	mov	r3, r7
 8005010:	f8cd 8000 	str.w	r8, [sp]
 8005014:	2200      	movs	r2, #0
 8005016:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800501a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800501c:	f7ff ff02 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 8005020:	6823      	ldr	r3, [r4, #0]
 8005022:	b138      	cbz	r0, 8005034 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	05db      	lsls	r3, r3, #23
 8005028:	d502      	bpl.n	8005030 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800502a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800502e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8005030:	2003      	movs	r0, #3
 8005032:	e00a      	b.n	800504a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8005034:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8005038:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800503a:	4919      	ldr	r1, [pc, #100]	; (80050a0 <I2C_RequestMemoryWrite+0xac>)
 800503c:	4643      	mov	r3, r8
 800503e:	463a      	mov	r2, r7
 8005040:	4620      	mov	r0, r4
 8005042:	f7ff ff21 	bl	8004e88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005046:	b118      	cbz	r0, 8005050 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8005048:	2001      	movs	r0, #1
}
 800504a:	b005      	add	sp, #20
 800504c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005050:	6823      	ldr	r3, [r4, #0]
 8005052:	9003      	str	r0, [sp, #12]
 8005054:	695a      	ldr	r2, [r3, #20]
 8005056:	9203      	str	r2, [sp, #12]
 8005058:	699b      	ldr	r3, [r3, #24]
 800505a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800505c:	4642      	mov	r2, r8
 800505e:	4639      	mov	r1, r7
 8005060:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005062:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005064:	f7ff ffa0 	bl	8004fa8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005068:	b140      	cbz	r0, 800507c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800506a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800506c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800506e:	bf01      	itttt	eq
 8005070:	6822      	ldreq	r2, [r4, #0]
 8005072:	6813      	ldreq	r3, [r2, #0]
 8005074:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005078:	6013      	streq	r3, [r2, #0]
 800507a:	e7e5      	b.n	8005048 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800507c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005080:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005082:	d102      	bne.n	800508a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005084:	b2ed      	uxtb	r5, r5
 8005086:	611d      	str	r5, [r3, #16]
 8005088:	e7df      	b.n	800504a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800508a:	0a2a      	lsrs	r2, r5, #8
 800508c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800508e:	4639      	mov	r1, r7
 8005090:	4642      	mov	r2, r8
 8005092:	4620      	mov	r0, r4
 8005094:	f7ff ff88 	bl	8004fa8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005098:	2800      	cmp	r0, #0
 800509a:	d1e6      	bne.n	800506a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800509c:	6823      	ldr	r3, [r4, #0]
 800509e:	e7f1      	b.n	8005084 <I2C_RequestMemoryWrite+0x90>
 80050a0:	00010002 	.word	0x00010002

080050a4 <I2C_RequestMemoryRead>:
{
 80050a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80050a8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050aa:	6803      	ldr	r3, [r0, #0]
{
 80050ac:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80050ae:	681a      	ldr	r2, [r3, #0]
 80050b0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80050b4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80050b6:	681a      	ldr	r2, [r3, #0]
{
 80050b8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80050bc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80050c0:	601a      	str	r2, [r3, #0]
{
 80050c2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050c4:	463b      	mov	r3, r7
 80050c6:	f8cd 8000 	str.w	r8, [sp]
 80050ca:	2200      	movs	r2, #0
 80050cc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80050d0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80050d2:	f7ff fea7 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 80050d6:	6823      	ldr	r3, [r4, #0]
 80050d8:	b148      	cbz	r0, 80050ee <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80050da:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80050dc:	05db      	lsls	r3, r3, #23
 80050de:	d502      	bpl.n	80050e6 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80050e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80050e4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80050e6:	2003      	movs	r0, #3
}
 80050e8:	b004      	add	sp, #16
 80050ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80050ee:	fa5f f986 	uxtb.w	r9, r6
 80050f2:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80050f6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80050f8:	492a      	ldr	r1, [pc, #168]	; (80051a4 <I2C_RequestMemoryRead+0x100>)
 80050fa:	4643      	mov	r3, r8
 80050fc:	463a      	mov	r2, r7
 80050fe:	4620      	mov	r0, r4
 8005100:	f7ff fec2 	bl	8004e88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8005104:	b108      	cbz	r0, 800510a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8005106:	2001      	movs	r0, #1
 8005108:	e7ee      	b.n	80050e8 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800510a:	6823      	ldr	r3, [r4, #0]
 800510c:	9003      	str	r0, [sp, #12]
 800510e:	695a      	ldr	r2, [r3, #20]
 8005110:	9203      	str	r2, [sp, #12]
 8005112:	699b      	ldr	r3, [r3, #24]
 8005114:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005116:	4642      	mov	r2, r8
 8005118:	4639      	mov	r1, r7
 800511a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800511c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800511e:	f7ff ff43 	bl	8004fa8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005122:	b140      	cbz	r0, 8005136 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8005124:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005126:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005128:	bf01      	itttt	eq
 800512a:	6822      	ldreq	r2, [r4, #0]
 800512c:	6813      	ldreq	r3, [r2, #0]
 800512e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8005132:	6013      	streq	r3, [r2, #0]
 8005134:	e7e7      	b.n	8005106 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005136:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800513a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800513c:	d11a      	bne.n	8005174 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800513e:	b2ed      	uxtb	r5, r5
 8005140:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005142:	4642      	mov	r2, r8
 8005144:	4639      	mov	r1, r7
 8005146:	4620      	mov	r0, r4
 8005148:	f7ff ff2e 	bl	8004fa8 <I2C_WaitOnTXEFlagUntilTimeout>
 800514c:	2800      	cmp	r0, #0
 800514e:	d1e9      	bne.n	8005124 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8005150:	6822      	ldr	r2, [r4, #0]
 8005152:	6813      	ldr	r3, [r2, #0]
 8005154:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005158:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800515a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800515e:	4602      	mov	r2, r0
 8005160:	f8cd 8000 	str.w	r8, [sp]
 8005164:	463b      	mov	r3, r7
 8005166:	4620      	mov	r0, r4
 8005168:	f7ff fe5c 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 800516c:	6822      	ldr	r2, [r4, #0]
 800516e:	b160      	cbz	r0, 800518a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8005170:	6813      	ldr	r3, [r2, #0]
 8005172:	e7b3      	b.n	80050dc <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8005174:	0a2a      	lsrs	r2, r5, #8
 8005176:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005178:	4639      	mov	r1, r7
 800517a:	4642      	mov	r2, r8
 800517c:	4620      	mov	r0, r4
 800517e:	f7ff ff13 	bl	8004fa8 <I2C_WaitOnTXEFlagUntilTimeout>
 8005182:	2800      	cmp	r0, #0
 8005184:	d1ce      	bne.n	8005124 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8005186:	6823      	ldr	r3, [r4, #0]
 8005188:	e7d9      	b.n	800513e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800518a:	f049 0301 	orr.w	r3, r9, #1
 800518e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8005190:	4904      	ldr	r1, [pc, #16]	; (80051a4 <I2C_RequestMemoryRead+0x100>)
 8005192:	4643      	mov	r3, r8
 8005194:	463a      	mov	r2, r7
 8005196:	4620      	mov	r0, r4
 8005198:	f7ff fe76 	bl	8004e88 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800519c:	3800      	subs	r0, #0
 800519e:	bf18      	it	ne
 80051a0:	2001      	movne	r0, #1
 80051a2:	e7a1      	b.n	80050e8 <I2C_RequestMemoryRead+0x44>
 80051a4:	00010002 	.word	0x00010002

080051a8 <HAL_I2C_Init>:
{
 80051a8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80051aa:	4604      	mov	r4, r0
 80051ac:	b908      	cbnz	r0, 80051b2 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80051ae:	2001      	movs	r0, #1
}
 80051b0:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80051b2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80051b6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80051ba:	b91b      	cbnz	r3, 80051c4 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80051bc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80051c0:	f7fc fcb0 	bl	8001b24 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80051c4:	2324      	movs	r3, #36	; 0x24
 80051c6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80051ca:	6823      	ldr	r3, [r4, #0]
 80051cc:	681a      	ldr	r2, [r3, #0]
 80051ce:	f022 0201 	bic.w	r2, r2, #1
 80051d2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80051d4:	681a      	ldr	r2, [r3, #0]
 80051d6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80051da:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80051dc:	681a      	ldr	r2, [r3, #0]
 80051de:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80051e2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80051e4:	f001 f80e 	bl	8006204 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80051e8:	4b3f      	ldr	r3, [pc, #252]	; (80052e8 <HAL_I2C_Init+0x140>)
 80051ea:	6865      	ldr	r5, [r4, #4]
 80051ec:	429d      	cmp	r5, r3
 80051ee:	bf94      	ite	ls
 80051f0:	4b3e      	ldrls	r3, [pc, #248]	; (80052ec <HAL_I2C_Init+0x144>)
 80051f2:	4b3f      	ldrhi	r3, [pc, #252]	; (80052f0 <HAL_I2C_Init+0x148>)
 80051f4:	4298      	cmp	r0, r3
 80051f6:	bf8c      	ite	hi
 80051f8:	2300      	movhi	r3, #0
 80051fa:	2301      	movls	r3, #1
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d1d6      	bne.n	80051ae <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005200:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005202:	4e39      	ldr	r6, [pc, #228]	; (80052e8 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005204:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8005206:	493b      	ldr	r1, [pc, #236]	; (80052f4 <HAL_I2C_Init+0x14c>)
 8005208:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800520c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005210:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005212:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8005214:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8005216:	bf88      	it	hi
 8005218:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800521c:	6a13      	ldr	r3, [r2, #32]
 800521e:	bf88      	it	hi
 8005220:	4371      	mulhi	r1, r6
 8005222:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005226:	bf84      	itt	hi
 8005228:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800522c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8005230:	3101      	adds	r1, #1
 8005232:	4319      	orrs	r1, r3
 8005234:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8005236:	69d1      	ldr	r1, [r2, #28]
 8005238:	1e43      	subs	r3, r0, #1
 800523a:	482b      	ldr	r0, [pc, #172]	; (80052e8 <HAL_I2C_Init+0x140>)
 800523c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8005240:	4285      	cmp	r5, r0
 8005242:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005246:	d832      	bhi.n	80052ae <HAL_I2C_Init+0x106>
 8005248:	006d      	lsls	r5, r5, #1
 800524a:	f640 70fc 	movw	r0, #4092	; 0xffc
 800524e:	fbb3 f3f5 	udiv	r3, r3, r5
 8005252:	3301      	adds	r3, #1
 8005254:	4203      	tst	r3, r0
 8005256:	d042      	beq.n	80052de <HAL_I2C_Init+0x136>
 8005258:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800525c:	430b      	orrs	r3, r1
 800525e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8005260:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8005264:	6811      	ldr	r1, [r2, #0]
 8005266:	4303      	orrs	r3, r0
 8005268:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800526c:	430b      	orrs	r3, r1
 800526e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8005270:	6891      	ldr	r1, [r2, #8]
 8005272:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8005276:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800527a:	4303      	orrs	r3, r0
 800527c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005280:	430b      	orrs	r3, r1
 8005282:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8005284:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8005288:	68d1      	ldr	r1, [r2, #12]
 800528a:	4303      	orrs	r3, r0
 800528c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8005290:	430b      	orrs	r3, r1
 8005292:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8005294:	6813      	ldr	r3, [r2, #0]
 8005296:	f043 0301 	orr.w	r3, r3, #1
 800529a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800529c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800529e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80052a0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80052a2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80052a6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80052a8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 80052ac:	e780      	b.n	80051b0 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80052ae:	68a0      	ldr	r0, [r4, #8]
 80052b0:	b950      	cbnz	r0, 80052c8 <HAL_I2C_Init+0x120>
 80052b2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80052b6:	fbb3 f3f5 	udiv	r3, r3, r5
 80052ba:	3301      	adds	r3, #1
 80052bc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052c0:	b17b      	cbz	r3, 80052e2 <HAL_I2C_Init+0x13a>
 80052c2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80052c6:	e7c9      	b.n	800525c <HAL_I2C_Init+0xb4>
 80052c8:	2019      	movs	r0, #25
 80052ca:	4345      	muls	r5, r0
 80052cc:	fbb3 f3f5 	udiv	r3, r3, r5
 80052d0:	3301      	adds	r3, #1
 80052d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80052d6:	b123      	cbz	r3, 80052e2 <HAL_I2C_Init+0x13a>
 80052d8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80052dc:	e7be      	b.n	800525c <HAL_I2C_Init+0xb4>
 80052de:	2304      	movs	r3, #4
 80052e0:	e7bc      	b.n	800525c <HAL_I2C_Init+0xb4>
 80052e2:	2301      	movs	r3, #1
 80052e4:	e7ba      	b.n	800525c <HAL_I2C_Init+0xb4>
 80052e6:	bf00      	nop
 80052e8:	000186a0 	.word	0x000186a0
 80052ec:	001e847f 	.word	0x001e847f
 80052f0:	003d08ff 	.word	0x003d08ff
 80052f4:	000f4240 	.word	0x000f4240

080052f8 <HAL_I2C_DeInit>:
{
 80052f8:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80052fa:	4604      	mov	r4, r0
 80052fc:	b198      	cbz	r0, 8005326 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 80052fe:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8005300:	2324      	movs	r3, #36	; 0x24
 8005302:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8005306:	6813      	ldr	r3, [r2, #0]
 8005308:	f023 0301 	bic.w	r3, r3, #1
 800530c:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800530e:	f7fc fc4d 	bl	8001bac <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8005312:	2000      	movs	r0, #0
 8005314:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8005316:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800531a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800531e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8005320:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8005324:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005326:	2001      	movs	r0, #1
 8005328:	e7fc      	b.n	8005324 <HAL_I2C_DeInit+0x2c>
	...

0800532c <HAL_I2C_Mem_Write>:
{
 800532c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005330:	4604      	mov	r4, r0
 8005332:	4699      	mov	r9, r3
 8005334:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8005336:	460f      	mov	r7, r1
 8005338:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800533a:	f7fe fc4b 	bl	8003bd4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800533e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005342:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005344:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005346:	d003      	beq.n	8005350 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8005348:	2002      	movs	r0, #2
}
 800534a:	b003      	add	sp, #12
 800534c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005350:	9000      	str	r0, [sp, #0]
 8005352:	493c      	ldr	r1, [pc, #240]	; (8005444 <HAL_I2C_Mem_Write+0x118>)
 8005354:	2319      	movs	r3, #25
 8005356:	2201      	movs	r2, #1
 8005358:	4620      	mov	r0, r4
 800535a:	f7ff fd63 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 800535e:	2800      	cmp	r0, #0
 8005360:	d1f2      	bne.n	8005348 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8005362:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8005366:	2b01      	cmp	r3, #1
 8005368:	d0ee      	beq.n	8005348 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800536a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800536c:	2301      	movs	r3, #1
 800536e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005372:	6803      	ldr	r3, [r0, #0]
 8005374:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8005376:	bf5e      	ittt	pl
 8005378:	6803      	ldrpl	r3, [r0, #0]
 800537a:	f043 0301 	orrpl.w	r3, r3, #1
 800537e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005380:	6803      	ldr	r3, [r0, #0]
 8005382:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005386:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005388:	2321      	movs	r3, #33	; 0x21
 800538a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800538e:	2340      	movs	r3, #64	; 0x40
 8005390:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005394:	2300      	movs	r3, #0
 8005396:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8005398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800539a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800539c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80053a0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80053a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80053a4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80053a6:	4b28      	ldr	r3, [pc, #160]	; (8005448 <HAL_I2C_Mem_Write+0x11c>)
 80053a8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80053aa:	e9cd 6500 	strd	r6, r5, [sp]
 80053ae:	464b      	mov	r3, r9
 80053b0:	4642      	mov	r2, r8
 80053b2:	4639      	mov	r1, r7
 80053b4:	4620      	mov	r0, r4
 80053b6:	f7ff fe1d 	bl	8004ff4 <I2C_RequestMemoryWrite>
 80053ba:	2800      	cmp	r0, #0
 80053bc:	d02a      	beq.n	8005414 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 80053be:	2001      	movs	r0, #1
 80053c0:	e7c3      	b.n	800534a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80053c2:	f7ff fdf1 	bl	8004fa8 <I2C_WaitOnTXEFlagUntilTimeout>
 80053c6:	b140      	cbz	r0, 80053da <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80053c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80053ca:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80053cc:	bf01      	itttt	eq
 80053ce:	6822      	ldreq	r2, [r4, #0]
 80053d0:	6813      	ldreq	r3, [r2, #0]
 80053d2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80053d6:	6013      	streq	r3, [r2, #0]
 80053d8:	e7f1      	b.n	80053be <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80053da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053dc:	6827      	ldr	r7, [r4, #0]
 80053de:	461a      	mov	r2, r3
 80053e0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80053e4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80053e6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80053e8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80053ea:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80053ec:	3a01      	subs	r2, #1
 80053ee:	b292      	uxth	r2, r2
 80053f0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80053f2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80053f4:	1e48      	subs	r0, r1, #1
 80053f6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80053f8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80053fa:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80053fc:	d50a      	bpl.n	8005414 <HAL_I2C_Mem_Write+0xe8>
 80053fe:	b148      	cbz	r0, 8005414 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8005400:	785a      	ldrb	r2, [r3, #1]
 8005402:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8005404:	3302      	adds	r3, #2
 8005406:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8005408:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800540a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800540c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800540e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8005410:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8005412:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8005414:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005416:	462a      	mov	r2, r5
 8005418:	4631      	mov	r1, r6
 800541a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800541c:	2b00      	cmp	r3, #0
 800541e:	d1d0      	bne.n	80053c2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005420:	f7ff fd9c 	bl	8004f5c <I2C_WaitOnBTFFlagUntilTimeout>
 8005424:	2800      	cmp	r0, #0
 8005426:	d1cf      	bne.n	80053c8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005428:	6822      	ldr	r2, [r4, #0]
 800542a:	6813      	ldr	r3, [r2, #0]
 800542c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005430:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8005432:	2320      	movs	r3, #32
 8005434:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005438:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800543c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8005440:	e783      	b.n	800534a <HAL_I2C_Mem_Write+0x1e>
 8005442:	bf00      	nop
 8005444:	00100002 	.word	0x00100002
 8005448:	ffff0000 	.word	0xffff0000

0800544c <HAL_I2C_Mem_Read>:
{
 800544c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005450:	4604      	mov	r4, r0
 8005452:	b087      	sub	sp, #28
 8005454:	4699      	mov	r9, r3
 8005456:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8005458:	460d      	mov	r5, r1
 800545a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800545c:	f7fe fbba 	bl	8003bd4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005460:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005464:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8005466:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8005468:	d004      	beq.n	8005474 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800546a:	2502      	movs	r5, #2
}
 800546c:	4628      	mov	r0, r5
 800546e:	b007      	add	sp, #28
 8005470:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8005474:	9000      	str	r0, [sp, #0]
 8005476:	4976      	ldr	r1, [pc, #472]	; (8005650 <HAL_I2C_Mem_Read+0x204>)
 8005478:	2319      	movs	r3, #25
 800547a:	2201      	movs	r2, #1
 800547c:	4620      	mov	r0, r4
 800547e:	f7ff fcd1 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 8005482:	2800      	cmp	r0, #0
 8005484:	d1f1      	bne.n	800546a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8005486:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800548a:	2b01      	cmp	r3, #1
 800548c:	d0ed      	beq.n	800546a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800548e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8005490:	2301      	movs	r3, #1
 8005492:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8005496:	6803      	ldr	r3, [r0, #0]
 8005498:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800549a:	bf5e      	ittt	pl
 800549c:	6803      	ldrpl	r3, [r0, #0]
 800549e:	f043 0301 	orrpl.w	r3, r3, #1
 80054a2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80054a4:	6803      	ldr	r3, [r0, #0]
 80054a6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80054aa:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80054ac:	2322      	movs	r3, #34	; 0x22
 80054ae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80054b2:	2340      	movs	r3, #64	; 0x40
 80054b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80054b8:	2300      	movs	r3, #0
 80054ba:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 80054bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80054be:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 80054c0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80054c4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80054c6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80054c8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80054ca:	4b62      	ldr	r3, [pc, #392]	; (8005654 <HAL_I2C_Mem_Read+0x208>)
 80054cc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80054ce:	4629      	mov	r1, r5
 80054d0:	e9cd 7600 	strd	r7, r6, [sp]
 80054d4:	464b      	mov	r3, r9
 80054d6:	4642      	mov	r2, r8
 80054d8:	4620      	mov	r0, r4
 80054da:	f7ff fde3 	bl	80050a4 <I2C_RequestMemoryRead>
 80054de:	4605      	mov	r5, r0
 80054e0:	b108      	cbz	r0, 80054e6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80054e2:	2501      	movs	r5, #1
 80054e4:	e7c2      	b.n	800546c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80054e6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80054e8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80054ea:	b9b2      	cbnz	r2, 800551a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80054ec:	9002      	str	r0, [sp, #8]
 80054ee:	695a      	ldr	r2, [r3, #20]
 80054f0:	9202      	str	r2, [sp, #8]
 80054f2:	699a      	ldr	r2, [r3, #24]
 80054f4:	9202      	str	r2, [sp, #8]
 80054f6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80054f8:	681a      	ldr	r2, [r3, #0]
 80054fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80054fe:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8005500:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8005658 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8005504:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005506:	2b00      	cmp	r3, #0
 8005508:	d12c      	bne.n	8005564 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800550a:	2220      	movs	r2, #32
 800550c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8005510:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8005514:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8005518:	e7a8      	b.n	800546c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800551a:	2a01      	cmp	r2, #1
 800551c:	d10a      	bne.n	8005534 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800551e:	681a      	ldr	r2, [r3, #0]
 8005520:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005524:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005526:	9003      	str	r0, [sp, #12]
 8005528:	695a      	ldr	r2, [r3, #20]
 800552a:	9203      	str	r2, [sp, #12]
 800552c:	699a      	ldr	r2, [r3, #24]
 800552e:	9203      	str	r2, [sp, #12]
 8005530:	9a03      	ldr	r2, [sp, #12]
 8005532:	e7e1      	b.n	80054f8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8005534:	2a02      	cmp	r2, #2
 8005536:	d10e      	bne.n	8005556 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8005538:	681a      	ldr	r2, [r3, #0]
 800553a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800553e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8005540:	681a      	ldr	r2, [r3, #0]
 8005542:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005546:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005548:	9004      	str	r0, [sp, #16]
 800554a:	695a      	ldr	r2, [r3, #20]
 800554c:	9204      	str	r2, [sp, #16]
 800554e:	699b      	ldr	r3, [r3, #24]
 8005550:	9304      	str	r3, [sp, #16]
 8005552:	9b04      	ldr	r3, [sp, #16]
 8005554:	e7d4      	b.n	8005500 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8005556:	9005      	str	r0, [sp, #20]
 8005558:	695a      	ldr	r2, [r3, #20]
 800555a:	9205      	str	r2, [sp, #20]
 800555c:	699b      	ldr	r3, [r3, #24]
 800555e:	9305      	str	r3, [sp, #20]
 8005560:	9b05      	ldr	r3, [sp, #20]
 8005562:	e7cd      	b.n	8005500 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8005564:	2b03      	cmp	r3, #3
 8005566:	d856      	bhi.n	8005616 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8005568:	2b01      	cmp	r3, #1
 800556a:	d115      	bne.n	8005598 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800556c:	4632      	mov	r2, r6
 800556e:	4639      	mov	r1, r7
 8005570:	4620      	mov	r0, r4
 8005572:	f7ff fcc4 	bl	8004efe <I2C_WaitOnRXNEFlagUntilTimeout>
 8005576:	2800      	cmp	r0, #0
 8005578:	d1b3      	bne.n	80054e2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800557a:	6823      	ldr	r3, [r4, #0]
 800557c:	691a      	ldr	r2, [r3, #16]
 800557e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005580:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8005582:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005584:	3301      	adds	r3, #1
 8005586:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8005588:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800558a:	3b01      	subs	r3, #1
 800558c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800558e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005590:	3b01      	subs	r3, #1
 8005592:	b29b      	uxth	r3, r3
 8005594:	8563      	strh	r3, [r4, #42]	; 0x2a
 8005596:	e7b5      	b.n	8005504 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8005598:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800559a:	9600      	str	r6, [sp, #0]
 800559c:	463b      	mov	r3, r7
 800559e:	f04f 0200 	mov.w	r2, #0
 80055a2:	4641      	mov	r1, r8
 80055a4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 80055a6:	d119      	bne.n	80055dc <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055a8:	f7ff fc3c 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 80055ac:	2800      	cmp	r0, #0
 80055ae:	d198      	bne.n	80054e2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80055b0:	6823      	ldr	r3, [r4, #0]
 80055b2:	681a      	ldr	r2, [r3, #0]
 80055b4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80055b8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055ba:	691a      	ldr	r2, [r3, #16]
 80055bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055be:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80055c2:	1c53      	adds	r3, r2, #1
 80055c4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80055c6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80055c8:	3b01      	subs	r3, #1
 80055ca:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80055cc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80055ce:	3b01      	subs	r3, #1
 80055d0:	b29b      	uxth	r3, r3
 80055d2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055d4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055d6:	691b      	ldr	r3, [r3, #16]
 80055d8:	7053      	strb	r3, [r2, #1]
 80055da:	e7d2      	b.n	8005582 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055dc:	f7ff fc22 	bl	8004e24 <I2C_WaitOnFlagUntilTimeout>
 80055e0:	2800      	cmp	r0, #0
 80055e2:	f47f af7e 	bne.w	80054e2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80055e6:	6823      	ldr	r3, [r4, #0]
 80055e8:	681a      	ldr	r2, [r3, #0]
 80055ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055ee:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80055f0:	691a      	ldr	r2, [r3, #16]
 80055f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80055f4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80055f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80055f8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80055fa:	3301      	adds	r3, #1
 80055fc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80055fe:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005600:	3b01      	subs	r3, #1
 8005602:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8005604:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005606:	3b01      	subs	r3, #1
 8005608:	b29b      	uxth	r3, r3
 800560a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800560c:	4602      	mov	r2, r0
 800560e:	463b      	mov	r3, r7
 8005610:	4641      	mov	r1, r8
 8005612:	4620      	mov	r0, r4
 8005614:	e7c8      	b.n	80055a8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005616:	4632      	mov	r2, r6
 8005618:	4639      	mov	r1, r7
 800561a:	4620      	mov	r0, r4
 800561c:	f7ff fc6f 	bl	8004efe <I2C_WaitOnRXNEFlagUntilTimeout>
 8005620:	2800      	cmp	r0, #0
 8005622:	f47f af5e 	bne.w	80054e2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8005626:	6823      	ldr	r3, [r4, #0]
 8005628:	691a      	ldr	r2, [r3, #16]
 800562a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800562c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800562e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005630:	1c53      	adds	r3, r2, #1
 8005632:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8005634:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8005636:	3b01      	subs	r3, #1
 8005638:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800563a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800563c:	3b01      	subs	r3, #1
 800563e:	b29b      	uxth	r3, r3
 8005640:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8005642:	6823      	ldr	r3, [r4, #0]
 8005644:	6959      	ldr	r1, [r3, #20]
 8005646:	0749      	lsls	r1, r1, #29
 8005648:	f57f af5c 	bpl.w	8005504 <HAL_I2C_Mem_Read+0xb8>
 800564c:	e7c3      	b.n	80055d6 <HAL_I2C_Mem_Read+0x18a>
 800564e:	bf00      	nop
 8005650:	00100002 	.word	0x00100002
 8005654:	ffff0000 	.word	0xffff0000
 8005658:	00010004 	.word	0x00010004

0800565c <HAL_I2C_GetState>:
  return hi2c->State;
 800565c:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8005660:	4770      	bx	lr

08005662 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005662:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005664:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005668:	01d2      	lsls	r2, r2, #7
 800566a:	3284      	adds	r2, #132	; 0x84
 800566c:	1883      	adds	r3, r0, r2
{
 800566e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005672:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005674:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005676:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005678:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800567c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005680:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005682:	68c5      	ldr	r5, [r0, #12]
 8005684:	f10c 0701 	add.w	r7, ip, #1
 8005688:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800568c:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005690:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005692:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005694:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8005698:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800569a:	68c5      	ldr	r5, [r0, #12]
 800569c:	68ce      	ldr	r6, [r1, #12]
 800569e:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80056a2:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80056a4:	689d      	ldr	r5, [r3, #8]
 80056a6:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80056aa:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80056ac:	68c7      	ldr	r7, [r0, #12]
 80056ae:	688d      	ldr	r5, [r1, #8]
 80056b0:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80056b4:	3501      	adds	r5, #1
 80056b6:	443d      	add	r5, r7
 80056b8:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80056bc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80056be:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80056c0:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80056c2:	f025 0507 	bic.w	r5, r5, #7
 80056c6:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80056c8:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80056cc:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80056ce:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80056d0:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80056d4:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80056d8:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80056dc:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80056e0:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80056e4:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80056e8:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80056ec:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80056ee:	695d      	ldr	r5, [r3, #20]
 80056f0:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80056f4:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80056f6:	694d      	ldr	r5, [r1, #20]
 80056f8:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80056fa:	69dd      	ldr	r5, [r3, #28]
 80056fc:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005700:	f025 0507 	bic.w	r5, r5, #7
 8005704:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005706:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800570a:	433d      	orrs	r5, r7
 800570c:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800570e:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005710:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005712:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005716:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005718:	b31e      	cbz	r6, 8005762 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800571a:	2e01      	cmp	r6, #1
 800571c:	d023      	beq.n	8005766 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800571e:	1eb5      	subs	r5, r6, #2
 8005720:	2d02      	cmp	r5, #2
 8005722:	d922      	bls.n	800576a <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8005724:	2e07      	cmp	r6, #7
 8005726:	bf0c      	ite	eq
 8005728:	2502      	moveq	r5, #2
 800572a:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800572c:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800572e:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8005732:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005734:	eba4 040c 	sub.w	r4, r4, ip
 8005738:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800573a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800573c:	436c      	muls	r4, r5
 800573e:	436e      	muls	r6, r5
 8005740:	3403      	adds	r4, #3
 8005742:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005746:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005748:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800574a:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800574e:	f024 0407 	bic.w	r4, r4, #7
 8005752:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005754:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005756:	5883      	ldr	r3, [r0, r2]
 8005758:	f043 0301 	orr.w	r3, r3, #1
 800575c:	5083      	str	r3, [r0, r2]
}
 800575e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005762:	2504      	movs	r5, #4
 8005764:	e7e2      	b.n	800572c <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005766:	2503      	movs	r5, #3
 8005768:	e7e0      	b.n	800572c <LTDC_SetConfig+0xca>
    tmp = 2U;
 800576a:	2502      	movs	r5, #2
 800576c:	e7de      	b.n	800572c <LTDC_SetConfig+0xca>
	...

08005770 <HAL_LTDC_Init>:
{
 8005770:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005772:	4604      	mov	r4, r0
 8005774:	2800      	cmp	r0, #0
 8005776:	d063      	beq.n	8005840 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005778:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800577c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005780:	b91b      	cbnz	r3, 800578a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005782:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005786:	f7fc fa2f 	bl	8001be8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800578a:	2302      	movs	r3, #2
 800578c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005790:	6823      	ldr	r3, [r4, #0]
 8005792:	699a      	ldr	r2, [r3, #24]
 8005794:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005798:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800579a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800579e:	4302      	orrs	r2, r0
 80057a0:	68e0      	ldr	r0, [r4, #12]
 80057a2:	6999      	ldr	r1, [r3, #24]
 80057a4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80057a6:	6920      	ldr	r0, [r4, #16]
 80057a8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80057aa:	430a      	orrs	r2, r1
 80057ac:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80057ae:	689a      	ldr	r2, [r3, #8]
 80057b0:	4924      	ldr	r1, [pc, #144]	; (8005844 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80057b2:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80057b4:	400a      	ands	r2, r1
 80057b6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80057b8:	689a      	ldr	r2, [r3, #8]
 80057ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80057be:	69a0      	ldr	r0, [r4, #24]
 80057c0:	4302      	orrs	r2, r0
 80057c2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80057c4:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80057c6:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80057c8:	400a      	ands	r2, r1
 80057ca:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80057cc:	68da      	ldr	r2, [r3, #12]
 80057ce:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80057d2:	6a20      	ldr	r0, [r4, #32]
 80057d4:	4302      	orrs	r2, r0
 80057d6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80057d8:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80057da:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80057dc:	400a      	ands	r2, r1
 80057de:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80057e0:	691a      	ldr	r2, [r3, #16]
 80057e2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80057e6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80057e8:	4302      	orrs	r2, r0
 80057ea:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80057ec:	695a      	ldr	r2, [r3, #20]
 80057ee:	4011      	ands	r1, r2
 80057f0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80057f2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80057f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80057f6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80057fa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80057fc:	430a      	orrs	r2, r1
 80057fe:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005800:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005802:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005806:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800580a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800580e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005810:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005812:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005816:	430a      	orrs	r2, r1
 8005818:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800581c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005820:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005822:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005824:	f042 0206 	orr.w	r2, r2, #6
 8005828:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800582a:	699a      	ldr	r2, [r3, #24]
 800582c:	f042 0201 	orr.w	r2, r2, #1
 8005830:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005832:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8005834:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005836:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800583a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800583e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005840:	2001      	movs	r0, #1
 8005842:	e7fc      	b.n	800583e <HAL_LTDC_Init+0xce>
 8005844:	f000f800 	.word	0xf000f800

08005848 <HAL_LTDC_ErrorCallback>:
 8005848:	4770      	bx	lr

0800584a <HAL_LTDC_LineEventCallback>:
 800584a:	4770      	bx	lr

0800584c <HAL_LTDC_ReloadEventCallback>:
 800584c:	4770      	bx	lr

0800584e <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800584e:	6803      	ldr	r3, [r0, #0]
{
 8005850:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005852:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005854:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005856:	0772      	lsls	r2, r6, #29
{
 8005858:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800585a:	d514      	bpl.n	8005886 <HAL_LTDC_IRQHandler+0x38>
 800585c:	0769      	lsls	r1, r5, #29
 800585e:	d512      	bpl.n	8005886 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005860:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005862:	f022 0204 	bic.w	r2, r2, #4
 8005866:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005868:	2204      	movs	r2, #4
 800586a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800586c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005870:	f043 0301 	orr.w	r3, r3, #1
 8005874:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005878:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800587a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800587e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005882:	f7ff ffe1 	bl	8005848 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005886:	07b2      	lsls	r2, r6, #30
 8005888:	d516      	bpl.n	80058b8 <HAL_LTDC_IRQHandler+0x6a>
 800588a:	07ab      	lsls	r3, r5, #30
 800588c:	d514      	bpl.n	80058b8 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800588e:	6823      	ldr	r3, [r4, #0]
 8005890:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005892:	f022 0202 	bic.w	r2, r2, #2
 8005896:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005898:	2202      	movs	r2, #2
 800589a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800589c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80058a0:	4313      	orrs	r3, r2
 80058a2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80058a6:	2304      	movs	r3, #4
 80058a8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80058ac:	2300      	movs	r3, #0
 80058ae:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80058b2:	4620      	mov	r0, r4
 80058b4:	f7ff ffc8 	bl	8005848 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80058b8:	07f0      	lsls	r0, r6, #31
 80058ba:	d510      	bpl.n	80058de <HAL_LTDC_IRQHandler+0x90>
 80058bc:	07e9      	lsls	r1, r5, #31
 80058be:	d50e      	bpl.n	80058de <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80058c0:	6823      	ldr	r3, [r4, #0]
 80058c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058c4:	f022 0201 	bic.w	r2, r2, #1
 80058c8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80058ca:	2201      	movs	r2, #1
 80058cc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80058ce:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80058d0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80058d4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80058d8:	4620      	mov	r0, r4
 80058da:	f7ff ffb6 	bl	800584a <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80058de:	0732      	lsls	r2, r6, #28
 80058e0:	d511      	bpl.n	8005906 <HAL_LTDC_IRQHandler+0xb8>
 80058e2:	072b      	lsls	r3, r5, #28
 80058e4:	d50f      	bpl.n	8005906 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80058e6:	6823      	ldr	r3, [r4, #0]
 80058e8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80058ea:	f022 0208 	bic.w	r2, r2, #8
 80058ee:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80058f0:	2208      	movs	r2, #8
 80058f2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80058f4:	2301      	movs	r3, #1
 80058f6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80058fa:	2300      	movs	r3, #0
 80058fc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005900:	4620      	mov	r0, r4
 8005902:	f7ff ffa3 	bl	800584c <HAL_LTDC_ReloadEventCallback>
}
 8005906:	bd70      	pop	{r4, r5, r6, pc}

08005908 <HAL_LTDC_ConfigLayer>:
{
 8005908:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800590c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005910:	2b01      	cmp	r3, #1
{
 8005912:	4606      	mov	r6, r0
 8005914:	460f      	mov	r7, r1
 8005916:	4694      	mov	ip, r2
 8005918:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800591c:	d01f      	beq.n	800595e <HAL_LTDC_ConfigLayer+0x56>
 800591e:	f04f 0801 	mov.w	r8, #1
 8005922:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005926:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800592a:	2434      	movs	r4, #52	; 0x34
 800592c:	460d      	mov	r5, r1
 800592e:	fb04 6402 	mla	r4, r4, r2, r6
 8005932:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005934:	3438      	adds	r4, #56	; 0x38
 8005936:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005938:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800593a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800593c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800593e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005940:	682b      	ldr	r3, [r5, #0]
 8005942:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005944:	4630      	mov	r0, r6
 8005946:	4662      	mov	r2, ip
 8005948:	4639      	mov	r1, r7
 800594a:	f7ff fe8a 	bl	8005662 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800594e:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005950:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005952:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005956:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800595a:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800595e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005964 <HAL_LTDC_SetPitch>:
{
 8005964:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8005966:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800596a:	2b01      	cmp	r3, #1
 800596c:	f04f 0302 	mov.w	r3, #2
 8005970:	d02c      	beq.n	80059cc <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005972:	2434      	movs	r4, #52	; 0x34
 8005974:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005978:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800597c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800597e:	b33c      	cbz	r4, 80059d0 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005980:	2c01      	cmp	r4, #1
 8005982:	d027      	beq.n	80059d4 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005984:	1ea5      	subs	r5, r4, #2
 8005986:	429d      	cmp	r5, r3
 8005988:	d902      	bls.n	8005990 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800598a:	2c07      	cmp	r4, #7
 800598c:	bf18      	it	ne
 800598e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005990:	6804      	ldr	r4, [r0, #0]
 8005992:	01d2      	lsls	r2, r2, #7
 8005994:	3284      	adds	r2, #132	; 0x84
 8005996:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005998:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800599a:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800599c:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 80059a0:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 80059a4:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80059a6:	4c0c      	ldr	r4, [pc, #48]	; (80059d8 <HAL_LTDC_SetPitch+0x74>)
 80059a8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80059aa:	f045 0501 	orr.w	r5, r5, #1
 80059ae:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 80059b0:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 80059b2:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 80059b6:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 80059b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80059ba:	f043 0301 	orr.w	r3, r3, #1
 80059be:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 80059c0:	2301      	movs	r3, #1
 80059c2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80059c6:	2300      	movs	r3, #0
 80059c8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 80059cc:	4618      	mov	r0, r3
 80059ce:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 80059d0:	2304      	movs	r3, #4
 80059d2:	e7dd      	b.n	8005990 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 80059d4:	2303      	movs	r3, #3
 80059d6:	e7db      	b.n	8005990 <HAL_LTDC_SetPitch+0x2c>
 80059d8:	40016800 	.word	0x40016800

080059dc <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80059dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 80059de:	2300      	movs	r3, #0
 80059e0:	9301      	str	r3, [sp, #4]
 80059e2:	4b18      	ldr	r3, [pc, #96]	; (8005a44 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80059e4:	4d18      	ldr	r5, [pc, #96]	; (8005a48 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80059e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80059e8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80059ec:	641a      	str	r2, [r3, #64]	; 0x40
 80059ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80059f4:	9301      	str	r3, [sp, #4]
 80059f6:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 80059f8:	4b14      	ldr	r3, [pc, #80]	; (8005a4c <HAL_PWREx_EnableOverDrive+0x70>)
 80059fa:	2201      	movs	r2, #1
 80059fc:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 80059fe:	f7fe f8e9 	bl	8003bd4 <HAL_GetTick>
 8005a02:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a04:	686b      	ldr	r3, [r5, #4]
 8005a06:	03da      	lsls	r2, r3, #15
 8005a08:	d50b      	bpl.n	8005a22 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005a0a:	4b10      	ldr	r3, [pc, #64]	; (8005a4c <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005a0c:	4d0e      	ldr	r5, [pc, #56]	; (8005a48 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005a0e:	2201      	movs	r2, #1
 8005a10:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8005a12:	f7fe f8df 	bl	8003bd4 <HAL_GetTick>
 8005a16:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005a18:	686b      	ldr	r3, [r5, #4]
 8005a1a:	039b      	lsls	r3, r3, #14
 8005a1c:	d50a      	bpl.n	8005a34 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8005a1e:	2000      	movs	r0, #0
 8005a20:	e006      	b.n	8005a30 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005a22:	f7fe f8d7 	bl	8003bd4 <HAL_GetTick>
 8005a26:	1b00      	subs	r0, r0, r4
 8005a28:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005a2c:	d9ea      	bls.n	8005a04 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8005a2e:	2003      	movs	r0, #3
}
 8005a30:	b003      	add	sp, #12
 8005a32:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005a34:	f7fe f8ce 	bl	8003bd4 <HAL_GetTick>
 8005a38:	1b00      	subs	r0, r0, r4
 8005a3a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8005a3e:	d9eb      	bls.n	8005a18 <HAL_PWREx_EnableOverDrive+0x3c>
 8005a40:	e7f5      	b.n	8005a2e <HAL_PWREx_EnableOverDrive+0x52>
 8005a42:	bf00      	nop
 8005a44:	40023800 	.word	0x40023800
 8005a48:	40007000 	.word	0x40007000
 8005a4c:	420e0000 	.word	0x420e0000

08005a50 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8005a50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8005a54:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8005a56:	b13e      	cbz	r6, 8005a68 <QSPI_Config+0x18>
 8005a58:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005a5c:	bf1f      	itttt	ne
 8005a5e:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005a60:	6804      	ldrne	r4, [r0, #0]
 8005a62:	f103 33ff 	addne.w	r3, r3, #4294967295
 8005a66:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005a68:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005a6c:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8005a70:	f1b9 0f00 	cmp.w	r9, #0
 8005a74:	d04f      	beq.n	8005b16 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a76:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005a78:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a7a:	f8d1 a000 	ldr.w	sl, [r1]
 8005a7e:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 8005a82:	ea46 0909 	orr.w	r9, r6, r9
 8005a86:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 8005a8a:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 8005a8e:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005a92:	b335      	cbz	r5, 8005ae2 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005a94:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005a96:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005a98:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005a9a:	ea49 0505 	orr.w	r5, r9, r5
 8005a9e:	b19f      	cbz	r7, 8005ac8 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005aa0:	ea4a 0307 	orr.w	r3, sl, r7
 8005aa4:	4323      	orrs	r3, r4
 8005aa6:	ea43 0308 	orr.w	r3, r3, r8
 8005aaa:	68cc      	ldr	r4, [r1, #12]
 8005aac:	ea43 030e 	orr.w	r3, r3, lr
 8005ab0:	4333      	orrs	r3, r6
 8005ab2:	4323      	orrs	r3, r4
 8005ab4:	ea43 030c 	orr.w	r3, r3, ip
 8005ab8:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005aba:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005abe:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005ac0:	d00d      	beq.n	8005ade <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005ac2:	684b      	ldr	r3, [r1, #4]
 8005ac4:	6183      	str	r3, [r0, #24]
 8005ac6:	e00a      	b.n	8005ade <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ac8:	ea4a 0304 	orr.w	r3, sl, r4
 8005acc:	ea43 0308 	orr.w	r3, r3, r8
 8005ad0:	ea43 030e 	orr.w	r3, r3, lr
 8005ad4:	4333      	orrs	r3, r6
 8005ad6:	ea43 030c 	orr.w	r3, r3, ip
 8005ada:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005adc:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8005ade:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005ae2:	b16f      	cbz	r7, 8005b00 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005ae4:	ea4a 0307 	orr.w	r3, sl, r7
 8005ae8:	4323      	orrs	r3, r4
 8005aea:	ea43 0308 	orr.w	r3, r3, r8
 8005aee:	68cc      	ldr	r4, [r1, #12]
 8005af0:	ea43 030e 	orr.w	r3, r3, lr
 8005af4:	4323      	orrs	r3, r4
 8005af6:	ea43 030c 	orr.w	r3, r3, ip
 8005afa:	ea43 0309 	orr.w	r3, r3, r9
 8005afe:	e7dc      	b.n	8005aba <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b00:	ea4a 0304 	orr.w	r3, sl, r4
 8005b04:	ea43 0308 	orr.w	r3, r3, r8
 8005b08:	ea43 030e 	orr.w	r3, r3, lr
 8005b0c:	ea43 030c 	orr.w	r3, r3, ip
 8005b10:	ea43 0309 	orr.w	r3, r3, r9
 8005b14:	e7e2      	b.n	8005adc <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 8005b16:	b345      	cbz	r5, 8005b6a <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8005b18:	6804      	ldr	r4, [r0, #0]
 8005b1a:	688b      	ldr	r3, [r1, #8]
 8005b1c:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b1e:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b22:	694e      	ldr	r6, [r1, #20]
 8005b24:	6908      	ldr	r0, [r1, #16]
 8005b26:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 8005b2a:	ea43 0502 	orr.w	r5, r3, r2
 8005b2e:	04b6      	lsls	r6, r6, #18
 8005b30:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b34:	b187      	cbz	r7, 8005b58 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b36:	4338      	orrs	r0, r7
 8005b38:	ea40 0008 	orr.w	r0, r0, r8
 8005b3c:	4303      	orrs	r3, r0
 8005b3e:	68c8      	ldr	r0, [r1, #12]
 8005b40:	ea43 030c 	orr.w	r3, r3, ip
 8005b44:	4303      	orrs	r3, r0
 8005b46:	4333      	orrs	r3, r6
 8005b48:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005b4a:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b4e:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005b50:	d0c5      	beq.n	8005ade <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005b52:	684b      	ldr	r3, [r1, #4]
 8005b54:	61a3      	str	r3, [r4, #24]
 8005b56:	e7c2      	b.n	8005ade <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b58:	ea40 0008 	orr.w	r0, r0, r8
 8005b5c:	4303      	orrs	r3, r0
 8005b5e:	ea43 030c 	orr.w	r3, r3, ip
 8005b62:	4333      	orrs	r3, r6
 8005b64:	432b      	orrs	r3, r5
 8005b66:	6163      	str	r3, [r4, #20]
 8005b68:	e7b9      	b.n	8005ade <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005b6a:	b17f      	cbz	r7, 8005b8c <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b6c:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8005b6e:	6800      	ldr	r0, [r0, #0]
 8005b70:	ea46 0307 	orr.w	r3, r6, r7
 8005b74:	4313      	orrs	r3, r2
 8005b76:	4323      	orrs	r3, r4
 8005b78:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005b7a:	4323      	orrs	r3, r4
 8005b7c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8005b7e:	4323      	orrs	r3, r4
 8005b80:	68cc      	ldr	r4, [r1, #12]
 8005b82:	4323      	orrs	r3, r4
 8005b84:	694c      	ldr	r4, [r1, #20]
 8005b86:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005b8a:	e796      	b.n	8005aba <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8005b8c:	2e00      	cmp	r6, #0
 8005b8e:	d0a6      	beq.n	8005ade <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005b90:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005b92:	6800      	ldr	r0, [r0, #0]
 8005b94:	4333      	orrs	r3, r6
 8005b96:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8005b98:	431a      	orrs	r2, r3
 8005b9a:	4332      	orrs	r2, r6
 8005b9c:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005b9e:	694b      	ldr	r3, [r1, #20]
 8005ba0:	4332      	orrs	r2, r6
 8005ba2:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005ba6:	6142      	str	r2, [r0, #20]
}
 8005ba8:	e799      	b.n	8005ade <QSPI_Config+0x8e>

08005baa <QSPI_WaitFlagStateUntilTimeout>:
{
 8005baa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005bae:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005bb2:	4604      	mov	r4, r0
 8005bb4:	460e      	mov	r6, r1
 8005bb6:	4615      	mov	r5, r2
 8005bb8:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005bba:	6822      	ldr	r2, [r4, #0]
 8005bbc:	6893      	ldr	r3, [r2, #8]
 8005bbe:	4233      	tst	r3, r6
 8005bc0:	bf14      	ite	ne
 8005bc2:	2301      	movne	r3, #1
 8005bc4:	2300      	moveq	r3, #0
 8005bc6:	42ab      	cmp	r3, r5
 8005bc8:	d101      	bne.n	8005bce <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8005bca:	2000      	movs	r0, #0
 8005bcc:	e012      	b.n	8005bf4 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005bce:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005bd2:	d0f3      	beq.n	8005bbc <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005bd4:	f7fd fffe 	bl	8003bd4 <HAL_GetTick>
 8005bd8:	1bc0      	subs	r0, r0, r7
 8005bda:	4540      	cmp	r0, r8
 8005bdc:	d802      	bhi.n	8005be4 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005bde:	f1b8 0f00 	cmp.w	r8, #0
 8005be2:	d1ea      	bne.n	8005bba <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005be4:	2304      	movs	r3, #4
 8005be6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005bea:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005bec:	f043 0301 	orr.w	r3, r3, #1
 8005bf0:	6463      	str	r3, [r4, #68]	; 0x44
 8005bf2:	2001      	movs	r0, #1
}
 8005bf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005bf8 <HAL_QSPI_Init>:
{
 8005bf8:	b530      	push	{r4, r5, lr}
 8005bfa:	b085      	sub	sp, #20
 8005bfc:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005bfe:	f7fd ffe9 	bl	8003bd4 <HAL_GetTick>
 8005c02:	4603      	mov	r3, r0
  if(hqspi == NULL)
 8005c04:	2c00      	cmp	r4, #0
 8005c06:	d047      	beq.n	8005c98 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005c08:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005c0c:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 8005c10:	b94a      	cbnz	r2, 8005c26 <HAL_QSPI_Init+0x2e>
 8005c12:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 8005c14:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 8005c18:	4620      	mov	r0, r4
 8005c1a:	f7fc f807 	bl	8001c2c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 8005c1e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005c22:	9b03      	ldr	r3, [sp, #12]
 8005c24:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005c26:	6820      	ldr	r0, [r4, #0]
 8005c28:	68a1      	ldr	r1, [r4, #8]
 8005c2a:	6802      	ldr	r2, [r0, #0]
 8005c2c:	3901      	subs	r1, #1
 8005c2e:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 8005c32:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005c36:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005c38:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005c3a:	9200      	str	r2, [sp, #0]
 8005c3c:	2120      	movs	r1, #32
 8005c3e:	2200      	movs	r2, #0
 8005c40:	4620      	mov	r0, r4
 8005c42:	f7ff ffb2 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 8005c46:	bb10      	cbnz	r0, 8005c8e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005c48:	69e5      	ldr	r5, [r4, #28]
 8005c4a:	68e3      	ldr	r3, [r4, #12]
 8005c4c:	6822      	ldr	r2, [r4, #0]
 8005c4e:	432b      	orrs	r3, r5
 8005c50:	6a25      	ldr	r5, [r4, #32]
 8005c52:	6811      	ldr	r1, [r2, #0]
 8005c54:	432b      	orrs	r3, r5
 8005c56:	6865      	ldr	r5, [r4, #4]
 8005c58:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005c5c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005c60:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005c64:	430b      	orrs	r3, r1
 8005c66:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005c68:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005c6c:	430b      	orrs	r3, r1
 8005c6e:	6921      	ldr	r1, [r4, #16]
 8005c70:	6855      	ldr	r5, [r2, #4]
 8005c72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8005c76:	4909      	ldr	r1, [pc, #36]	; (8005c9c <HAL_QSPI_Init+0xa4>)
 8005c78:	4029      	ands	r1, r5
 8005c7a:	430b      	orrs	r3, r1
 8005c7c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005c7e:	6813      	ldr	r3, [r2, #0]
 8005c80:	f043 0301 	orr.w	r3, r3, #1
 8005c84:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 8005c86:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005c88:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8005c8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005c8e:	2300      	movs	r3, #0
 8005c90:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005c94:	b005      	add	sp, #20
 8005c96:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8005c98:	2001      	movs	r0, #1
 8005c9a:	e7fb      	b.n	8005c94 <HAL_QSPI_Init+0x9c>
 8005c9c:	ffe0f8fe 	.word	0xffe0f8fe

08005ca0 <HAL_QSPI_DeInit>:
{
 8005ca0:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005ca2:	4604      	mov	r4, r0
 8005ca4:	b168      	cbz	r0, 8005cc2 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 8005ca6:	6802      	ldr	r2, [r0, #0]
 8005ca8:	6813      	ldr	r3, [r2, #0]
 8005caa:	f023 0301 	bic.w	r3, r3, #1
 8005cae:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005cb0:	f7fc f816 	bl	8001ce0 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005cb4:	2000      	movs	r0, #0
 8005cb6:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8005cb8:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005cbc:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005cc0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005cc2:	2001      	movs	r0, #1
 8005cc4:	e7fc      	b.n	8005cc0 <HAL_QSPI_DeInit+0x20>

08005cc6 <HAL_QSPI_Command>:
{
 8005cc6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005cca:	4604      	mov	r4, r0
 8005ccc:	b085      	sub	sp, #20
 8005cce:	4617      	mov	r7, r2
 8005cd0:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005cd2:	f7fd ff7f 	bl	8003bd4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005cd6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005cda:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005cdc:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005cde:	d034      	beq.n	8005d4a <HAL_QSPI_Command+0x84>
 8005ce0:	2201      	movs	r2, #1
 8005ce2:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005ce6:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005cea:	2a01      	cmp	r2, #1
 8005cec:	fa5f f882 	uxtb.w	r8, r2
 8005cf0:	f04f 0602 	mov.w	r6, #2
 8005cf4:	d127      	bne.n	8005d46 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005cf6:	2200      	movs	r2, #0
 8005cf8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005cfa:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8005cfc:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d00:	9700      	str	r7, [sp, #0]
 8005d02:	2120      	movs	r1, #32
 8005d04:	4620      	mov	r0, r4
 8005d06:	f7ff ff50 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005d0a:	4605      	mov	r5, r0
 8005d0c:	b9a0      	cbnz	r0, 8005d38 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005d0e:	4602      	mov	r2, r0
 8005d10:	4649      	mov	r1, r9
 8005d12:	4620      	mov	r0, r4
 8005d14:	f7ff fe9c 	bl	8005a50 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 8005d18:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 8005d1c:	9b03      	ldr	r3, [sp, #12]
 8005d1e:	b94a      	cbnz	r2, 8005d34 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005d20:	9700      	str	r7, [sp, #0]
 8005d22:	4642      	mov	r2, r8
 8005d24:	4631      	mov	r1, r6
 8005d26:	4620      	mov	r0, r4
 8005d28:	f7ff ff3f 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005d2c:	4605      	mov	r5, r0
 8005d2e:	b918      	cbnz	r0, 8005d38 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005d30:	6823      	ldr	r3, [r4, #0]
 8005d32:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005d34:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005d38:	2300      	movs	r3, #0
 8005d3a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005d3e:	4628      	mov	r0, r5
 8005d40:	b005      	add	sp, #20
 8005d42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 8005d46:	4635      	mov	r5, r6
 8005d48:	e7f6      	b.n	8005d38 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 8005d4a:	2502      	movs	r5, #2
 8005d4c:	e7f7      	b.n	8005d3e <HAL_QSPI_Command+0x78>

08005d4e <HAL_QSPI_AutoPolling>:
{
 8005d4e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005d52:	4604      	mov	r4, r0
 8005d54:	4615      	mov	r5, r2
 8005d56:	461e      	mov	r6, r3
 8005d58:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 8005d5a:	f7fd ff3b 	bl	8003bd4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005d5e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005d62:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005d64:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005d66:	d040      	beq.n	8005dea <HAL_QSPI_AutoPolling+0x9c>
 8005d68:	2201      	movs	r2, #1
 8005d6a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005d6e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005d72:	2a01      	cmp	r2, #1
 8005d74:	b2d7      	uxtb	r7, r2
 8005d76:	d136      	bne.n	8005de6 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005d78:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005d7a:	2200      	movs	r2, #0
 8005d7c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d7e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005d80:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005d84:	9600      	str	r6, [sp, #0]
 8005d86:	2120      	movs	r1, #32
 8005d88:	4620      	mov	r0, r4
 8005d8a:	f7ff ff0e 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005d8e:	bb20      	cbnz	r0, 8005dda <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005d90:	6821      	ldr	r1, [r4, #0]
 8005d92:	682a      	ldr	r2, [r5, #0]
 8005d94:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 8005d96:	686a      	ldr	r2, [r5, #4]
 8005d98:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8005d9a:	68aa      	ldr	r2, [r5, #8]
 8005d9c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005d9e:	680a      	ldr	r2, [r1, #0]
 8005da0:	6928      	ldr	r0, [r5, #16]
 8005da2:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8005da6:	4302      	orrs	r2, r0
 8005da8:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005dac:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005dae:	68ea      	ldr	r2, [r5, #12]
 8005db0:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005db4:	4641      	mov	r1, r8
 8005db6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005dba:	4620      	mov	r0, r4
 8005dbc:	f7ff fe48 	bl	8005a50 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005dc0:	9b03      	ldr	r3, [sp, #12]
 8005dc2:	9600      	str	r6, [sp, #0]
 8005dc4:	463a      	mov	r2, r7
 8005dc6:	2108      	movs	r1, #8
 8005dc8:	4620      	mov	r0, r4
 8005dca:	f7ff feee 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005dce:	b920      	cbnz	r0, 8005dda <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005dd0:	6823      	ldr	r3, [r4, #0]
 8005dd2:	2208      	movs	r2, #8
 8005dd4:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 8005dd6:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005dda:	2300      	movs	r3, #0
 8005ddc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005de0:	b004      	add	sp, #16
 8005de2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 8005de6:	2002      	movs	r0, #2
 8005de8:	e7f7      	b.n	8005dda <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8005dea:	2002      	movs	r0, #2
 8005dec:	e7f8      	b.n	8005de0 <HAL_QSPI_AutoPolling+0x92>

08005dee <HAL_QSPI_MemoryMapped>:
{
 8005dee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005df0:	4604      	mov	r4, r0
 8005df2:	4616      	mov	r6, r2
 8005df4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005df6:	f7fd feed 	bl	8003bd4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005dfa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005dfe:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005e00:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005e02:	d032      	beq.n	8005e6a <HAL_QSPI_MemoryMapped+0x7c>
 8005e04:	2201      	movs	r2, #1
 8005e06:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005e0a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005e0e:	2a01      	cmp	r2, #1
 8005e10:	d129      	bne.n	8005e66 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e12:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005e14:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005e16:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 8005e18:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005e1c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8005e1e:	9100      	str	r1, [sp, #0]
 8005e20:	4620      	mov	r0, r4
 8005e22:	2120      	movs	r1, #32
 8005e24:	f7ff fec1 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005e28:	4605      	mov	r5, r0
 8005e2a:	b9b0      	cbnz	r0, 8005e5a <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005e2c:	6823      	ldr	r3, [r4, #0]
 8005e2e:	6872      	ldr	r2, [r6, #4]
 8005e30:	6818      	ldr	r0, [r3, #0]
 8005e32:	f020 0008 	bic.w	r0, r0, #8
 8005e36:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005e38:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 8005e3a:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 8005e3c:	d107      	bne.n	8005e4e <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 8005e3e:	6832      	ldr	r2, [r6, #0]
 8005e40:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 8005e42:	2210      	movs	r2, #16
 8005e44:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 8005e46:	681a      	ldr	r2, [r3, #0]
 8005e48:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005e4c:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005e4e:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005e52:	4639      	mov	r1, r7
 8005e54:	4620      	mov	r0, r4
 8005e56:	f7ff fdfb 	bl	8005a50 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 8005e5a:	2300      	movs	r3, #0
 8005e5c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005e60:	4628      	mov	r0, r5
 8005e62:	b003      	add	sp, #12
 8005e64:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 8005e66:	2502      	movs	r5, #2
 8005e68:	e7f7      	b.n	8005e5a <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8005e6a:	2502      	movs	r5, #2
 8005e6c:	e7f8      	b.n	8005e60 <HAL_QSPI_MemoryMapped+0x72>

08005e6e <HAL_QSPI_Abort>:
{
 8005e6e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005e70:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005e72:	f7fd feaf 	bl	8003bd4 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005e76:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 8005e7a:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005e7c:	f012 0002 	ands.w	r0, r2, #2
 8005e80:	d036      	beq.n	8005ef0 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8005e82:	2200      	movs	r2, #0
 8005e84:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8005e88:	6822      	ldr	r2, [r4, #0]
 8005e8a:	6811      	ldr	r1, [r2, #0]
 8005e8c:	0749      	lsls	r1, r1, #29
 8005e8e:	d50d      	bpl.n	8005eac <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005e90:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005e92:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005e94:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005e96:	f021 0104 	bic.w	r1, r1, #4
 8005e9a:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005e9c:	f7fd ffea 	bl	8003e74 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005ea0:	9b03      	ldr	r3, [sp, #12]
 8005ea2:	b118      	cbz	r0, 8005eac <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005ea4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8005ea6:	f042 0204 	orr.w	r2, r2, #4
 8005eaa:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005eac:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005eae:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005eb0:	680a      	ldr	r2, [r1, #0]
 8005eb2:	f042 0202 	orr.w	r2, r2, #2
 8005eb6:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005eb8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005eba:	9200      	str	r2, [sp, #0]
 8005ebc:	2102      	movs	r1, #2
 8005ebe:	2201      	movs	r2, #1
 8005ec0:	4620      	mov	r0, r4
 8005ec2:	f7ff fe72 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005ec6:	9b03      	ldr	r3, [sp, #12]
 8005ec8:	b990      	cbnz	r0, 8005ef0 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005eca:	6822      	ldr	r2, [r4, #0]
 8005ecc:	2102      	movs	r1, #2
 8005ece:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005ed0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005ed2:	9200      	str	r2, [sp, #0]
 8005ed4:	2120      	movs	r1, #32
 8005ed6:	4602      	mov	r2, r0
 8005ed8:	4620      	mov	r0, r4
 8005eda:	f7ff fe66 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005ede:	b938      	cbnz	r0, 8005ef0 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005ee0:	6822      	ldr	r2, [r4, #0]
 8005ee2:	6953      	ldr	r3, [r2, #20]
 8005ee4:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8005ee8:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 8005eea:	2301      	movs	r3, #1
 8005eec:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8005ef0:	b004      	add	sp, #16
 8005ef2:	bd10      	pop	{r4, pc}

08005ef4 <HAL_QSPI_Transmit>:
{
 8005ef4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ef6:	4604      	mov	r4, r0
 8005ef8:	b085      	sub	sp, #20
 8005efa:	4616      	mov	r6, r2
 8005efc:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005efe:	f7fd fe69 	bl	8003bd4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005f02:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 8005f06:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 8005f08:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005f0a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005f0c:	d04c      	beq.n	8005fa8 <HAL_QSPI_Transmit+0xb4>
 8005f0e:	2201      	movs	r2, #1
 8005f10:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005f14:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005f18:	2a01      	cmp	r2, #1
 8005f1a:	b2d0      	uxtb	r0, r2
 8005f1c:	d142      	bne.n	8005fa4 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005f1e:	2200      	movs	r2, #0
 8005f20:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005f22:	2f00      	cmp	r7, #0
 8005f24:	d039      	beq.n	8005f9a <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 8005f26:	2212      	movs	r2, #18
 8005f28:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005f2c:	692a      	ldr	r2, [r5, #16]
 8005f2e:	3201      	adds	r2, #1
 8005f30:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005f32:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 8005f34:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005f36:	3201      	adds	r2, #1
 8005f38:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8005f3a:	696a      	ldr	r2, [r5, #20]
 8005f3c:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8005f40:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 8005f42:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005f44:	b9a2      	cbnz	r2, 8005f70 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 8005f46:	9600      	str	r6, [sp, #0]
 8005f48:	2201      	movs	r2, #1
 8005f4a:	2102      	movs	r1, #2
 8005f4c:	4620      	mov	r0, r4
 8005f4e:	f7ff fe2c 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005f52:	b928      	cbnz	r0, 8005f60 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005f54:	6823      	ldr	r3, [r4, #0]
 8005f56:	2202      	movs	r2, #2
 8005f58:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 8005f5a:	4620      	mov	r0, r4
 8005f5c:	f7ff ff87 	bl	8005e6e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005f60:	2301      	movs	r3, #1
 8005f62:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005f66:	2300      	movs	r3, #0
 8005f68:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005f6c:	b005      	add	sp, #20
 8005f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005f70:	9600      	str	r6, [sp, #0]
 8005f72:	2201      	movs	r2, #1
 8005f74:	2104      	movs	r1, #4
 8005f76:	4620      	mov	r0, r4
 8005f78:	9303      	str	r3, [sp, #12]
 8005f7a:	f7ff fe16 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005f7e:	2800      	cmp	r0, #0
 8005f80:	d1ee      	bne.n	8005f60 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005f82:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005f84:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005f86:	7812      	ldrb	r2, [r2, #0]
 8005f88:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005f8c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005f8e:	3201      	adds	r2, #1
 8005f90:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005f92:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005f94:	3a01      	subs	r2, #1
 8005f96:	62e2      	str	r2, [r4, #44]	; 0x2c
 8005f98:	e7d3      	b.n	8005f42 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005f9a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005f9c:	f043 0308 	orr.w	r3, r3, #8
 8005fa0:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005fa2:	e7e0      	b.n	8005f66 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005fa4:	2002      	movs	r0, #2
 8005fa6:	e7de      	b.n	8005f66 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 8005fa8:	2002      	movs	r0, #2
 8005faa:	e7df      	b.n	8005f6c <HAL_QSPI_Transmit+0x78>

08005fac <HAL_QSPI_Receive>:
{
 8005fac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005fae:	4604      	mov	r4, r0
 8005fb0:	b085      	sub	sp, #20
 8005fb2:	4616      	mov	r6, r2
 8005fb4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 8005fb6:	f7fd fe0d 	bl	8003bd4 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 8005fba:	6825      	ldr	r5, [r4, #0]
 8005fbc:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005fc0:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005fc4:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005fc6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005fc8:	d050      	beq.n	800606c <HAL_QSPI_Receive+0xc0>
 8005fca:	2201      	movs	r2, #1
 8005fcc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005fd0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005fd4:	2a01      	cmp	r2, #1
 8005fd6:	b2d0      	uxtb	r0, r2
 8005fd8:	d146      	bne.n	8006068 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005fda:	2200      	movs	r2, #0
 8005fdc:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005fde:	2f00      	cmp	r7, #0
 8005fe0:	d03d      	beq.n	800605e <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005fe2:	2222      	movs	r2, #34	; 0x22
 8005fe4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 8005fe8:	692a      	ldr	r2, [r5, #16]
 8005fea:	3201      	adds	r2, #1
 8005fec:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005fee:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8005ff0:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8005ff2:	3201      	adds	r2, #1
 8005ff4:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 8005ff6:	6969      	ldr	r1, [r5, #20]
 8005ff8:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 8005ffc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8006000:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 8006002:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 8006006:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006008:	b9a2      	cbnz	r2, 8006034 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800600a:	9600      	str	r6, [sp, #0]
 800600c:	2201      	movs	r2, #1
 800600e:	2102      	movs	r1, #2
 8006010:	4620      	mov	r0, r4
 8006012:	f7ff fdca 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 8006016:	b928      	cbnz	r0, 8006024 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8006018:	6823      	ldr	r3, [r4, #0]
 800601a:	2202      	movs	r2, #2
 800601c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800601e:	4620      	mov	r0, r4
 8006020:	f7ff ff25 	bl	8005e6e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8006024:	2301      	movs	r3, #1
 8006026:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800602a:	2300      	movs	r3, #0
 800602c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8006030:	b005      	add	sp, #20
 8006032:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 8006034:	9600      	str	r6, [sp, #0]
 8006036:	2201      	movs	r2, #1
 8006038:	2106      	movs	r1, #6
 800603a:	4620      	mov	r0, r4
 800603c:	9303      	str	r3, [sp, #12]
 800603e:	f7ff fdb4 	bl	8005baa <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 8006042:	2800      	cmp	r0, #0
 8006044:	d1ee      	bne.n	8006024 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 8006046:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006048:	f895 1020 	ldrb.w	r1, [r5, #32]
 800604c:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800604e:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006050:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8006052:	3201      	adds	r2, #1
 8006054:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8006056:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8006058:	3a01      	subs	r2, #1
 800605a:	63a2      	str	r2, [r4, #56]	; 0x38
 800605c:	e7d3      	b.n	8006006 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800605e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8006060:	f043 0308 	orr.w	r3, r3, #8
 8006064:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8006066:	e7e0      	b.n	800602a <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8006068:	2002      	movs	r0, #2
 800606a:	e7de      	b.n	800602a <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800606c:	2002      	movs	r0, #2
 800606e:	e7df      	b.n	8006030 <HAL_QSPI_Receive+0x84>

08006070 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006070:	4913      	ldr	r1, [pc, #76]	; (80060c0 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8006072:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006074:	688b      	ldr	r3, [r1, #8]
 8006076:	f003 030c 	and.w	r3, r3, #12
 800607a:	2b04      	cmp	r3, #4
 800607c:	d01c      	beq.n	80060b8 <HAL_RCC_GetSysClockFreq+0x48>
 800607e:	2b08      	cmp	r3, #8
 8006080:	d11c      	bne.n	80060bc <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006082:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006084:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006086:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8006088:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800608c:	bf14      	ite	ne
 800608e:	480d      	ldrne	r0, [pc, #52]	; (80060c4 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006090:	480d      	ldreq	r0, [pc, #52]	; (80060c8 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8006092:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8006096:	bf18      	it	ne
 8006098:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800609a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800609e:	fba1 0100 	umull	r0, r1, r1, r0
 80060a2:	f7fa f8fd 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80060a6:	4b06      	ldr	r3, [pc, #24]	; (80060c0 <HAL_RCC_GetSysClockFreq+0x50>)
 80060a8:	685b      	ldr	r3, [r3, #4]
 80060aa:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80060ae:	3301      	adds	r3, #1
 80060b0:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80060b2:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80060b6:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80060b8:	4802      	ldr	r0, [pc, #8]	; (80060c4 <HAL_RCC_GetSysClockFreq+0x54>)
 80060ba:	e7fc      	b.n	80060b6 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80060bc:	4802      	ldr	r0, [pc, #8]	; (80060c8 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80060be:	e7fa      	b.n	80060b6 <HAL_RCC_GetSysClockFreq+0x46>
 80060c0:	40023800 	.word	0x40023800
 80060c4:	007a1200 	.word	0x007a1200
 80060c8:	00f42400 	.word	0x00f42400

080060cc <HAL_RCC_ClockConfig>:
{
 80060cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80060d0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80060d2:	4604      	mov	r4, r0
 80060d4:	b910      	cbnz	r0, 80060dc <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80060d6:	2001      	movs	r0, #1
}
 80060d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80060dc:	4b44      	ldr	r3, [pc, #272]	; (80061f0 <HAL_RCC_ClockConfig+0x124>)
 80060de:	681a      	ldr	r2, [r3, #0]
 80060e0:	f002 020f 	and.w	r2, r2, #15
 80060e4:	428a      	cmp	r2, r1
 80060e6:	d328      	bcc.n	800613a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80060e8:	6822      	ldr	r2, [r4, #0]
 80060ea:	0797      	lsls	r7, r2, #30
 80060ec:	d42d      	bmi.n	800614a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80060ee:	07d0      	lsls	r0, r2, #31
 80060f0:	d441      	bmi.n	8006176 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80060f2:	4b3f      	ldr	r3, [pc, #252]	; (80061f0 <HAL_RCC_ClockConfig+0x124>)
 80060f4:	681a      	ldr	r2, [r3, #0]
 80060f6:	f002 020f 	and.w	r2, r2, #15
 80060fa:	42aa      	cmp	r2, r5
 80060fc:	d866      	bhi.n	80061cc <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80060fe:	6822      	ldr	r2, [r4, #0]
 8006100:	0751      	lsls	r1, r2, #29
 8006102:	d46c      	bmi.n	80061de <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8006104:	0713      	lsls	r3, r2, #28
 8006106:	d507      	bpl.n	8006118 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8006108:	4a3a      	ldr	r2, [pc, #232]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 800610a:	6921      	ldr	r1, [r4, #16]
 800610c:	6893      	ldr	r3, [r2, #8]
 800610e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8006112:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006116:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8006118:	f7ff ffaa 	bl	8006070 <HAL_RCC_GetSysClockFreq>
 800611c:	4b35      	ldr	r3, [pc, #212]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 800611e:	4a36      	ldr	r2, [pc, #216]	; (80061f8 <HAL_RCC_ClockConfig+0x12c>)
 8006120:	689b      	ldr	r3, [r3, #8]
 8006122:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8006126:	5cd3      	ldrb	r3, [r2, r3]
 8006128:	40d8      	lsrs	r0, r3
 800612a:	4b34      	ldr	r3, [pc, #208]	; (80061fc <HAL_RCC_ClockConfig+0x130>)
 800612c:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800612e:	4b34      	ldr	r3, [pc, #208]	; (8006200 <HAL_RCC_ClockConfig+0x134>)
 8006130:	6818      	ldr	r0, [r3, #0]
 8006132:	f7fb fead 	bl	8001e90 <HAL_InitTick>
  return HAL_OK;
 8006136:	2000      	movs	r0, #0
 8006138:	e7ce      	b.n	80060d8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800613a:	b2ca      	uxtb	r2, r1
 800613c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800613e:	681b      	ldr	r3, [r3, #0]
 8006140:	f003 030f 	and.w	r3, r3, #15
 8006144:	428b      	cmp	r3, r1
 8006146:	d1c6      	bne.n	80060d6 <HAL_RCC_ClockConfig+0xa>
 8006148:	e7ce      	b.n	80060e8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800614a:	4b2a      	ldr	r3, [pc, #168]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 800614c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8006150:	bf1e      	ittt	ne
 8006152:	6899      	ldrne	r1, [r3, #8]
 8006154:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8006158:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800615a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800615c:	bf42      	ittt	mi
 800615e:	6899      	ldrmi	r1, [r3, #8]
 8006160:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8006164:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8006166:	4923      	ldr	r1, [pc, #140]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 8006168:	68a0      	ldr	r0, [r4, #8]
 800616a:	688b      	ldr	r3, [r1, #8]
 800616c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006170:	4303      	orrs	r3, r0
 8006172:	608b      	str	r3, [r1, #8]
 8006174:	e7bb      	b.n	80060ee <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8006176:	6862      	ldr	r2, [r4, #4]
 8006178:	4b1e      	ldr	r3, [pc, #120]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 800617a:	2a01      	cmp	r2, #1
 800617c:	d11c      	bne.n	80061b8 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8006184:	d0a7      	beq.n	80060d6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8006186:	4e1b      	ldr	r6, [pc, #108]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 8006188:	68b3      	ldr	r3, [r6, #8]
 800618a:	f023 0303 	bic.w	r3, r3, #3
 800618e:	4313      	orrs	r3, r2
 8006190:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8006192:	f7fd fd1f 	bl	8003bd4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006196:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800619a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800619c:	68b3      	ldr	r3, [r6, #8]
 800619e:	6862      	ldr	r2, [r4, #4]
 80061a0:	f003 030c 	and.w	r3, r3, #12
 80061a4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80061a8:	d0a3      	beq.n	80060f2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80061aa:	f7fd fd13 	bl	8003bd4 <HAL_GetTick>
 80061ae:	1bc0      	subs	r0, r0, r7
 80061b0:	4540      	cmp	r0, r8
 80061b2:	d9f3      	bls.n	800619c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80061b4:	2003      	movs	r0, #3
 80061b6:	e78f      	b.n	80060d8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80061b8:	1e91      	subs	r1, r2, #2
 80061ba:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80061bc:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80061be:	d802      	bhi.n	80061c6 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80061c0:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80061c4:	e7de      	b.n	8006184 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80061c6:	f013 0f02 	tst.w	r3, #2
 80061ca:	e7db      	b.n	8006184 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80061cc:	b2ea      	uxtb	r2, r5
 80061ce:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80061d0:	681b      	ldr	r3, [r3, #0]
 80061d2:	f003 030f 	and.w	r3, r3, #15
 80061d6:	42ab      	cmp	r3, r5
 80061d8:	f47f af7d 	bne.w	80060d6 <HAL_RCC_ClockConfig+0xa>
 80061dc:	e78f      	b.n	80060fe <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80061de:	4905      	ldr	r1, [pc, #20]	; (80061f4 <HAL_RCC_ClockConfig+0x128>)
 80061e0:	68e0      	ldr	r0, [r4, #12]
 80061e2:	688b      	ldr	r3, [r1, #8]
 80061e4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80061e8:	4303      	orrs	r3, r0
 80061ea:	608b      	str	r3, [r1, #8]
 80061ec:	e78a      	b.n	8006104 <HAL_RCC_ClockConfig+0x38>
 80061ee:	bf00      	nop
 80061f0:	40023c00 	.word	0x40023c00
 80061f4:	40023800 	.word	0x40023800
 80061f8:	0801bfa5 	.word	0x0801bfa5
 80061fc:	20000050 	.word	0x20000050
 8006200:	20000058 	.word	0x20000058

08006204 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8006204:	4b04      	ldr	r3, [pc, #16]	; (8006218 <HAL_RCC_GetPCLK1Freq+0x14>)
 8006206:	4a05      	ldr	r2, [pc, #20]	; (800621c <HAL_RCC_GetPCLK1Freq+0x18>)
 8006208:	689b      	ldr	r3, [r3, #8]
 800620a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800620e:	5cd3      	ldrb	r3, [r2, r3]
 8006210:	4a03      	ldr	r2, [pc, #12]	; (8006220 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8006212:	6810      	ldr	r0, [r2, #0]
}
 8006214:	40d8      	lsrs	r0, r3
 8006216:	4770      	bx	lr
 8006218:	40023800 	.word	0x40023800
 800621c:	0801bfb5 	.word	0x0801bfb5
 8006220:	20000050 	.word	0x20000050

08006224 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8006224:	230f      	movs	r3, #15
 8006226:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8006228:	4b0b      	ldr	r3, [pc, #44]	; (8006258 <HAL_RCC_GetClockConfig+0x34>)
 800622a:	689a      	ldr	r2, [r3, #8]
 800622c:	f002 0203 	and.w	r2, r2, #3
 8006230:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8006232:	689a      	ldr	r2, [r3, #8]
 8006234:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8006238:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800623a:	689a      	ldr	r2, [r3, #8]
 800623c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8006240:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8006242:	689b      	ldr	r3, [r3, #8]
 8006244:	08db      	lsrs	r3, r3, #3
 8006246:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800624a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800624c:	4b03      	ldr	r3, [pc, #12]	; (800625c <HAL_RCC_GetClockConfig+0x38>)
 800624e:	681b      	ldr	r3, [r3, #0]
 8006250:	f003 030f 	and.w	r3, r3, #15
 8006254:	600b      	str	r3, [r1, #0]
}
 8006256:	4770      	bx	lr
 8006258:	40023800 	.word	0x40023800
 800625c:	40023c00 	.word	0x40023c00

08006260 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006260:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006262:	6802      	ldr	r2, [r0, #0]
{
 8006264:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006266:	0610      	lsls	r0, r2, #24
 8006268:	d508      	bpl.n	800627c <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800626a:	49aa      	ldr	r1, [pc, #680]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800626c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800626e:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006272:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8006276:	4303      	orrs	r3, r0
 8006278:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800627c:	05d1      	lsls	r1, r2, #23
 800627e:	d508      	bpl.n	8006292 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8006280:	49a4      	ldr	r1, [pc, #656]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006282:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8006284:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8006288:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800628c:	4303      	orrs	r3, r0
 800628e:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8006292:	f012 0f43 	tst.w	r2, #67	; 0x43
 8006296:	d173      	bne.n	8006380 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8006298:	6823      	ldr	r3, [r4, #0]
 800629a:	f013 0f0c 	tst.w	r3, #12
 800629e:	f000 80c1 	beq.w	8006424 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80062a2:	4b9d      	ldr	r3, [pc, #628]	; (8006518 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062a4:	4d9b      	ldr	r5, [pc, #620]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 80062a6:	2200      	movs	r2, #0
 80062a8:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80062aa:	f7fd fc93 	bl	8003bd4 <HAL_GetTick>
 80062ae:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80062b0:	682b      	ldr	r3, [r5, #0]
 80062b2:	009b      	lsls	r3, r3, #2
 80062b4:	f100 80fc 	bmi.w	80064b0 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80062b8:	6821      	ldr	r1, [r4, #0]
 80062ba:	074f      	lsls	r7, r1, #29
 80062bc:	d51a      	bpl.n	80062f4 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80062be:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80062c2:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 80062c6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80062ca:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80062ce:	4313      	orrs	r3, r2
 80062d0:	6922      	ldr	r2, [r4, #16]
 80062d2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80062d6:	69a2      	ldr	r2, [r4, #24]
 80062d8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80062dc:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80062e0:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80062e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80062e6:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80062ea:	3a01      	subs	r2, #1
 80062ec:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80062f0:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80062f4:	070e      	lsls	r6, r1, #28
 80062f6:	d519      	bpl.n	800632c <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 80062f8:	4a86      	ldr	r2, [pc, #536]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80062fa:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80062fe:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8006302:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006306:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800630a:	4303      	orrs	r3, r0
 800630c:	6920      	ldr	r0, [r4, #16]
 800630e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8006312:	69e0      	ldr	r0, [r4, #28]
 8006314:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8006318:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800631c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8006320:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8006322:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006326:	4303      	orrs	r3, r0
 8006328:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800632c:	060d      	lsls	r5, r1, #24
 800632e:	d517      	bpl.n	8006360 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8006330:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006332:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8006336:	d113      	bne.n	8006360 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006338:	4976      	ldr	r1, [pc, #472]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800633a:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800633e:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8006342:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8006346:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800634a:	4313      	orrs	r3, r2
 800634c:	6922      	ldr	r2, [r4, #16]
 800634e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006352:	6962      	ldr	r2, [r4, #20]
 8006354:	0852      	lsrs	r2, r2, #1
 8006356:	3a01      	subs	r2, #1
 8006358:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800635c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006360:	4b6d      	ldr	r3, [pc, #436]	; (8006518 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006362:	4e6c      	ldr	r6, [pc, #432]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8006364:	2201      	movs	r2, #1
 8006366:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8006368:	f7fd fc34 	bl	8003bd4 <HAL_GetTick>
 800636c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800636e:	6833      	ldr	r3, [r6, #0]
 8006370:	0098      	lsls	r0, r3, #2
 8006372:	d459      	bmi.n	8006428 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8006374:	f7fd fc2e 	bl	8003bd4 <HAL_GetTick>
 8006378:	1b40      	subs	r0, r0, r5
 800637a:	2802      	cmp	r0, #2
 800637c:	d9f7      	bls.n	800636e <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800637e:	e04e      	b.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8006380:	4b65      	ldr	r3, [pc, #404]	; (8006518 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8006382:	4e64      	ldr	r6, [pc, #400]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8006384:	2200      	movs	r2, #0
 8006386:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8006388:	f7fd fc24 	bl	8003bd4 <HAL_GetTick>
 800638c:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800638e:	6833      	ldr	r3, [r6, #0]
 8006390:	011b      	lsls	r3, r3, #4
 8006392:	d43f      	bmi.n	8006414 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006394:	6821      	ldr	r1, [r4, #0]
 8006396:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8006398:	bf41      	itttt	mi
 800639a:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800639e:	071b      	lslmi	r3, r3, #28
 80063a0:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80063a4:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80063a8:	078e      	lsls	r6, r1, #30
 80063aa:	d515      	bpl.n	80063d8 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80063ac:	4a59      	ldr	r2, [pc, #356]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80063ae:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80063b0:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80063b4:	6865      	ldr	r5, [r4, #4]
 80063b6:	061b      	lsls	r3, r3, #24
 80063b8:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80063bc:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80063c0:	4303      	orrs	r3, r0
 80063c2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80063c6:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80063ca:	6a23      	ldr	r3, [r4, #32]
 80063cc:	f020 001f 	bic.w	r0, r0, #31
 80063d0:	3b01      	subs	r3, #1
 80063d2:	4303      	orrs	r3, r0
 80063d4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80063d8:	064d      	lsls	r5, r1, #25
 80063da:	d50a      	bpl.n	80063f2 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80063dc:	68e3      	ldr	r3, [r4, #12]
 80063de:	6862      	ldr	r2, [r4, #4]
 80063e0:	061b      	lsls	r3, r3, #24
 80063e2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80063e6:	68a2      	ldr	r2, [r4, #8]
 80063e8:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80063ec:	4a49      	ldr	r2, [pc, #292]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80063ee:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80063f2:	4b49      	ldr	r3, [pc, #292]	; (8006518 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80063f4:	4e47      	ldr	r6, [pc, #284]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 80063f6:	2201      	movs	r2, #1
 80063f8:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80063fa:	f7fd fbeb 	bl	8003bd4 <HAL_GetTick>
 80063fe:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006400:	6833      	ldr	r3, [r6, #0]
 8006402:	0118      	lsls	r0, r3, #4
 8006404:	f53f af48 	bmi.w	8006298 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006408:	f7fd fbe4 	bl	8003bd4 <HAL_GetTick>
 800640c:	1b40      	subs	r0, r0, r5
 800640e:	2802      	cmp	r0, #2
 8006410:	d9f6      	bls.n	8006400 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8006412:	e004      	b.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8006414:	f7fd fbde 	bl	8003bd4 <HAL_GetTick>
 8006418:	1b40      	subs	r0, r0, r5
 800641a:	2802      	cmp	r0, #2
 800641c:	d9b7      	bls.n	800638e <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800641e:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8006420:	b003      	add	sp, #12
 8006422:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8006424:	0619      	lsls	r1, r3, #24
 8006426:	d43e      	bmi.n	80064a6 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8006428:	6823      	ldr	r3, [r4, #0]
 800642a:	069a      	lsls	r2, r3, #26
 800642c:	d530      	bpl.n	8006490 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800642e:	2300      	movs	r3, #0
 8006430:	9301      	str	r3, [sp, #4]
 8006432:	4b38      	ldr	r3, [pc, #224]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 8006434:	4d39      	ldr	r5, [pc, #228]	; (800651c <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8006436:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006438:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800643c:	641a      	str	r2, [r3, #64]	; 0x40
 800643e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006440:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006444:	9301      	str	r3, [sp, #4]
 8006446:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8006448:	682b      	ldr	r3, [r5, #0]
 800644a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800644e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006450:	f7fd fbc0 	bl	8003bd4 <HAL_GetTick>
 8006454:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8006456:	682b      	ldr	r3, [r5, #0]
 8006458:	05d9      	lsls	r1, r3, #23
 800645a:	d530      	bpl.n	80064be <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800645c:	4d2d      	ldr	r5, [pc, #180]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800645e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8006460:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8006464:	d131      	bne.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8006466:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8006468:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800646c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8006470:	4a28      	ldr	r2, [pc, #160]	; (8006514 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8006472:	d14b      	bne.n	800650c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8006474:	6891      	ldr	r1, [r2, #8]
 8006476:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800647a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800647e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8006482:	4301      	orrs	r1, r0
 8006484:	6091      	str	r1, [r2, #8]
 8006486:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8006488:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800648c:	430b      	orrs	r3, r1
 800648e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8006490:	6820      	ldr	r0, [r4, #0]
 8006492:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8006496:	bf1f      	itttt	ne
 8006498:	4b21      	ldrne	r3, [pc, #132]	; (8006520 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800649a:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800649e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 80064a2:	2000      	movne	r0, #0
 80064a4:	e7bc      	b.n	8006420 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 80064a6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80064a8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80064ac:	d1bc      	bne.n	8006428 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 80064ae:	e6f8      	b.n	80062a2 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80064b0:	f7fd fb90 	bl	8003bd4 <HAL_GetTick>
 80064b4:	1b80      	subs	r0, r0, r6
 80064b6:	2802      	cmp	r0, #2
 80064b8:	f67f aefa 	bls.w	80062b0 <HAL_RCCEx_PeriphCLKConfig+0x50>
 80064bc:	e7af      	b.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 80064be:	f7fd fb89 	bl	8003bd4 <HAL_GetTick>
 80064c2:	1b80      	subs	r0, r0, r6
 80064c4:	2802      	cmp	r0, #2
 80064c6:	d9c6      	bls.n	8006456 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 80064c8:	e7a9      	b.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 80064ca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80064cc:	f402 7240 	and.w	r2, r2, #768	; 0x300
 80064d0:	4293      	cmp	r3, r2
 80064d2:	d0c8      	beq.n	8006466 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80064d4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 80064d6:	4a10      	ldr	r2, [pc, #64]	; (8006518 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 80064d8:	2101      	movs	r1, #1
 80064da:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 80064de:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 80064e2:	2100      	movs	r1, #0
 80064e4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 80064e8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80064ea:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80064ec:	07da      	lsls	r2, r3, #31
 80064ee:	d5ba      	bpl.n	8006466 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 80064f0:	f7fd fb70 	bl	8003bd4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80064f4:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 80064f8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80064fa:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80064fc:	079b      	lsls	r3, r3, #30
 80064fe:	d4b2      	bmi.n	8006466 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006500:	f7fd fb68 	bl	8003bd4 <HAL_GetTick>
 8006504:	1b80      	subs	r0, r0, r6
 8006506:	42b8      	cmp	r0, r7
 8006508:	d9f7      	bls.n	80064fa <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800650a:	e788      	b.n	800641e <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800650c:	6891      	ldr	r1, [r2, #8]
 800650e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8006512:	e7b7      	b.n	8006484 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8006514:	40023800 	.word	0x40023800
 8006518:	42470000 	.word	0x42470000
 800651c:	40007000 	.word	0x40007000
 8006520:	42471000 	.word	0x42471000

08006524 <HAL_RCC_OscConfig>:
  uint32_t tickstart = 0U;

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006524:	6803      	ldr	r3, [r0, #0]
{
 8006526:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800652a:	07dd      	lsls	r5, r3, #31
{
 800652c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800652e:	d410      	bmi.n	8006552 <HAL_RCC_OscConfig+0x2e>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006530:	6823      	ldr	r3, [r4, #0]
 8006532:	0798      	lsls	r0, r3, #30
 8006534:	d45e      	bmi.n	80065f4 <HAL_RCC_OscConfig+0xd0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006536:	6823      	ldr	r3, [r4, #0]
 8006538:	071a      	lsls	r2, r3, #28
 800653a:	f100 80a0 	bmi.w	800667e <HAL_RCC_OscConfig+0x15a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800653e:	6823      	ldr	r3, [r4, #0]
 8006540:	075b      	lsls	r3, r3, #29
 8006542:	f100 80c0 	bmi.w	80066c6 <HAL_RCC_OscConfig+0x1a2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006546:	69a2      	ldr	r2, [r4, #24]
 8006548:	2a00      	cmp	r2, #0
 800654a:	f040 8127 	bne.w	800679c <HAL_RCC_OscConfig+0x278>
    else
    {
      return HAL_ERROR;
    }
  }
  return HAL_OK;
 800654e:	2000      	movs	r0, #0
 8006550:	e015      	b.n	800657e <HAL_RCC_OscConfig+0x5a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006552:	4b8f      	ldr	r3, [pc, #572]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 8006554:	689a      	ldr	r2, [r3, #8]
 8006556:	f002 020c 	and.w	r2, r2, #12
 800655a:	2a04      	cmp	r2, #4
 800655c:	d007      	beq.n	800656e <HAL_RCC_OscConfig+0x4a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800655e:	689a      	ldr	r2, [r3, #8]
 8006560:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8006564:	2a08      	cmp	r2, #8
 8006566:	d10d      	bne.n	8006584 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8006568:	685a      	ldr	r2, [r3, #4]
 800656a:	0251      	lsls	r1, r2, #9
 800656c:	d50a      	bpl.n	8006584 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800656e:	4b88      	ldr	r3, [pc, #544]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	039a      	lsls	r2, r3, #14
 8006574:	d5dc      	bpl.n	8006530 <HAL_RCC_OscConfig+0xc>
 8006576:	6863      	ldr	r3, [r4, #4]
 8006578:	2b00      	cmp	r3, #0
 800657a:	d1d9      	bne.n	8006530 <HAL_RCC_OscConfig+0xc>
        return HAL_ERROR;
 800657c:	2001      	movs	r0, #1
}
 800657e:	b002      	add	sp, #8
 8006580:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006584:	6862      	ldr	r2, [r4, #4]
 8006586:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800658a:	d111      	bne.n	80065b0 <HAL_RCC_OscConfig+0x8c>
 800658c:	681a      	ldr	r2, [r3, #0]
 800658e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8006592:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006594:	f7fd fb1e 	bl	8003bd4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006598:	4e7d      	ldr	r6, [pc, #500]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 800659a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800659c:	6833      	ldr	r3, [r6, #0]
 800659e:	039b      	lsls	r3, r3, #14
 80065a0:	d4c6      	bmi.n	8006530 <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80065a2:	f7fd fb17 	bl	8003bd4 <HAL_GetTick>
 80065a6:	1b40      	subs	r0, r0, r5
 80065a8:	2864      	cmp	r0, #100	; 0x64
 80065aa:	d9f7      	bls.n	800659c <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 80065ac:	2003      	movs	r0, #3
 80065ae:	e7e6      	b.n	800657e <HAL_RCC_OscConfig+0x5a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80065b0:	4d77      	ldr	r5, [pc, #476]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 80065b2:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80065b6:	682b      	ldr	r3, [r5, #0]
 80065b8:	d107      	bne.n	80065ca <HAL_RCC_OscConfig+0xa6>
 80065ba:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80065be:	602b      	str	r3, [r5, #0]
 80065c0:	682b      	ldr	r3, [r5, #0]
 80065c2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80065c6:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80065c8:	e7e4      	b.n	8006594 <HAL_RCC_OscConfig+0x70>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80065ca:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80065ce:	602b      	str	r3, [r5, #0]
 80065d0:	682b      	ldr	r3, [r5, #0]
 80065d2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80065d6:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80065d8:	2a00      	cmp	r2, #0
 80065da:	d1db      	bne.n	8006594 <HAL_RCC_OscConfig+0x70>
        tickstart = HAL_GetTick();
 80065dc:	f7fd fafa 	bl	8003bd4 <HAL_GetTick>
 80065e0:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80065e2:	682b      	ldr	r3, [r5, #0]
 80065e4:	039f      	lsls	r7, r3, #14
 80065e6:	d5a3      	bpl.n	8006530 <HAL_RCC_OscConfig+0xc>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80065e8:	f7fd faf4 	bl	8003bd4 <HAL_GetTick>
 80065ec:	1b80      	subs	r0, r0, r6
 80065ee:	2864      	cmp	r0, #100	; 0x64
 80065f0:	d9f7      	bls.n	80065e2 <HAL_RCC_OscConfig+0xbe>
 80065f2:	e7db      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 80065f4:	4b66      	ldr	r3, [pc, #408]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 80065f6:	689a      	ldr	r2, [r3, #8]
 80065f8:	f012 0f0c 	tst.w	r2, #12
 80065fc:	d007      	beq.n	800660e <HAL_RCC_OscConfig+0xea>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80065fe:	689a      	ldr	r2, [r3, #8]
 8006600:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8006604:	2a08      	cmp	r2, #8
 8006606:	d111      	bne.n	800662c <HAL_RCC_OscConfig+0x108>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8006608:	685b      	ldr	r3, [r3, #4]
 800660a:	025e      	lsls	r6, r3, #9
 800660c:	d40e      	bmi.n	800662c <HAL_RCC_OscConfig+0x108>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800660e:	4a60      	ldr	r2, [pc, #384]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 8006610:	6813      	ldr	r3, [r2, #0]
 8006612:	079d      	lsls	r5, r3, #30
 8006614:	d502      	bpl.n	800661c <HAL_RCC_OscConfig+0xf8>
 8006616:	68e3      	ldr	r3, [r4, #12]
 8006618:	2b01      	cmp	r3, #1
 800661a:	d1af      	bne.n	800657c <HAL_RCC_OscConfig+0x58>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800661c:	6813      	ldr	r3, [r2, #0]
 800661e:	6921      	ldr	r1, [r4, #16]
 8006620:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006624:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8006628:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800662a:	e784      	b.n	8006536 <HAL_RCC_OscConfig+0x12>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800662c:	68e2      	ldr	r2, [r4, #12]
 800662e:	4b59      	ldr	r3, [pc, #356]	; (8006794 <HAL_RCC_OscConfig+0x270>)
 8006630:	b1b2      	cbz	r2, 8006660 <HAL_RCC_OscConfig+0x13c>
        __HAL_RCC_HSI_ENABLE();
 8006632:	2201      	movs	r2, #1
 8006634:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006636:	f7fd facd 	bl	8003bd4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800663a:	4d55      	ldr	r5, [pc, #340]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 800663c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800663e:	682b      	ldr	r3, [r5, #0]
 8006640:	0798      	lsls	r0, r3, #30
 8006642:	d507      	bpl.n	8006654 <HAL_RCC_OscConfig+0x130>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006644:	682b      	ldr	r3, [r5, #0]
 8006646:	6922      	ldr	r2, [r4, #16]
 8006648:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800664c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006650:	602b      	str	r3, [r5, #0]
 8006652:	e770      	b.n	8006536 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006654:	f7fd fabe 	bl	8003bd4 <HAL_GetTick>
 8006658:	1b80      	subs	r0, r0, r6
 800665a:	2802      	cmp	r0, #2
 800665c:	d9ef      	bls.n	800663e <HAL_RCC_OscConfig+0x11a>
 800665e:	e7a5      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8006660:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006662:	f7fd fab7 	bl	8003bd4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006666:	4e4a      	ldr	r6, [pc, #296]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
        tickstart = HAL_GetTick();
 8006668:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800666a:	6833      	ldr	r3, [r6, #0]
 800666c:	0799      	lsls	r1, r3, #30
 800666e:	f57f af62 	bpl.w	8006536 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006672:	f7fd faaf 	bl	8003bd4 <HAL_GetTick>
 8006676:	1b40      	subs	r0, r0, r5
 8006678:	2802      	cmp	r0, #2
 800667a:	d9f6      	bls.n	800666a <HAL_RCC_OscConfig+0x146>
 800667c:	e796      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800667e:	6962      	ldr	r2, [r4, #20]
 8006680:	4b44      	ldr	r3, [pc, #272]	; (8006794 <HAL_RCC_OscConfig+0x270>)
 8006682:	b182      	cbz	r2, 80066a6 <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 8006684:	2201      	movs	r2, #1
 8006686:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800668a:	f7fd faa3 	bl	8003bd4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800668e:	4e40      	ldr	r6, [pc, #256]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8006690:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006692:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006694:	079f      	lsls	r7, r3, #30
 8006696:	f53f af52 	bmi.w	800653e <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800669a:	f7fd fa9b 	bl	8003bd4 <HAL_GetTick>
 800669e:	1b40      	subs	r0, r0, r5
 80066a0:	2802      	cmp	r0, #2
 80066a2:	d9f6      	bls.n	8006692 <HAL_RCC_OscConfig+0x16e>
 80066a4:	e782      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
 80066a6:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80066aa:	f7fd fa93 	bl	8003bd4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80066ae:	4e38      	ldr	r6, [pc, #224]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 80066b0:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80066b2:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80066b4:	0798      	lsls	r0, r3, #30
 80066b6:	f57f af42 	bpl.w	800653e <HAL_RCC_OscConfig+0x1a>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80066ba:	f7fd fa8b 	bl	8003bd4 <HAL_GetTick>
 80066be:	1b40      	subs	r0, r0, r5
 80066c0:	2802      	cmp	r0, #2
 80066c2:	d9f6      	bls.n	80066b2 <HAL_RCC_OscConfig+0x18e>
 80066c4:	e772      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80066c6:	4b32      	ldr	r3, [pc, #200]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 80066c8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80066ca:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80066ce:	d128      	bne.n	8006722 <HAL_RCC_OscConfig+0x1fe>
      __HAL_RCC_PWR_CLK_ENABLE();
 80066d0:	9201      	str	r2, [sp, #4]
 80066d2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80066d4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80066d8:	641a      	str	r2, [r3, #64]	; 0x40
 80066da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066dc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80066e0:	9301      	str	r3, [sp, #4]
 80066e2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80066e4:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80066e6:	4d2c      	ldr	r5, [pc, #176]	; (8006798 <HAL_RCC_OscConfig+0x274>)
 80066e8:	682b      	ldr	r3, [r5, #0]
 80066ea:	05d9      	lsls	r1, r3, #23
 80066ec:	d51b      	bpl.n	8006726 <HAL_RCC_OscConfig+0x202>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80066ee:	68a3      	ldr	r3, [r4, #8]
 80066f0:	4d27      	ldr	r5, [pc, #156]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 80066f2:	2b01      	cmp	r3, #1
 80066f4:	d127      	bne.n	8006746 <HAL_RCC_OscConfig+0x222>
 80066f6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80066f8:	f043 0301 	orr.w	r3, r3, #1
 80066fc:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80066fe:	f7fd fa69 	bl	8003bd4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8006702:	4e23      	ldr	r6, [pc, #140]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
      tickstart = HAL_GetTick();
 8006704:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006706:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800670a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800670c:	079b      	lsls	r3, r3, #30
 800670e:	d539      	bpl.n	8006784 <HAL_RCC_OscConfig+0x260>
    if(pwrclkchanged == SET)
 8006710:	2f00      	cmp	r7, #0
 8006712:	f43f af18 	beq.w	8006546 <HAL_RCC_OscConfig+0x22>
      __HAL_RCC_PWR_CLK_DISABLE();
 8006716:	4a1e      	ldr	r2, [pc, #120]	; (8006790 <HAL_RCC_OscConfig+0x26c>)
 8006718:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800671a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800671e:	6413      	str	r3, [r2, #64]	; 0x40
 8006720:	e711      	b.n	8006546 <HAL_RCC_OscConfig+0x22>
    FlagStatus       pwrclkchanged = RESET;
 8006722:	2700      	movs	r7, #0
 8006724:	e7df      	b.n	80066e6 <HAL_RCC_OscConfig+0x1c2>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8006726:	682b      	ldr	r3, [r5, #0]
 8006728:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800672c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800672e:	f7fd fa51 	bl	8003bd4 <HAL_GetTick>
 8006732:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006734:	682b      	ldr	r3, [r5, #0]
 8006736:	05da      	lsls	r2, r3, #23
 8006738:	d4d9      	bmi.n	80066ee <HAL_RCC_OscConfig+0x1ca>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800673a:	f7fd fa4b 	bl	8003bd4 <HAL_GetTick>
 800673e:	1b80      	subs	r0, r0, r6
 8006740:	2802      	cmp	r0, #2
 8006742:	d9f7      	bls.n	8006734 <HAL_RCC_OscConfig+0x210>
 8006744:	e732      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006746:	2b05      	cmp	r3, #5
 8006748:	d104      	bne.n	8006754 <HAL_RCC_OscConfig+0x230>
 800674a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800674c:	f043 0304 	orr.w	r3, r3, #4
 8006750:	672b      	str	r3, [r5, #112]	; 0x70
 8006752:	e7d0      	b.n	80066f6 <HAL_RCC_OscConfig+0x1d2>
 8006754:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006756:	f022 0201 	bic.w	r2, r2, #1
 800675a:	672a      	str	r2, [r5, #112]	; 0x70
 800675c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800675e:	f022 0204 	bic.w	r2, r2, #4
 8006762:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006764:	2b00      	cmp	r3, #0
 8006766:	d1ca      	bne.n	80066fe <HAL_RCC_OscConfig+0x1da>
      tickstart = HAL_GetTick();
 8006768:	f7fd fa34 	bl	8003bd4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800676c:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006770:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006772:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006774:	0798      	lsls	r0, r3, #30
 8006776:	d5cb      	bpl.n	8006710 <HAL_RCC_OscConfig+0x1ec>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006778:	f7fd fa2c 	bl	8003bd4 <HAL_GetTick>
 800677c:	1b80      	subs	r0, r0, r6
 800677e:	4540      	cmp	r0, r8
 8006780:	d9f7      	bls.n	8006772 <HAL_RCC_OscConfig+0x24e>
 8006782:	e713      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006784:	f7fd fa26 	bl	8003bd4 <HAL_GetTick>
 8006788:	1b40      	subs	r0, r0, r5
 800678a:	4540      	cmp	r0, r8
 800678c:	d9bd      	bls.n	800670a <HAL_RCC_OscConfig+0x1e6>
 800678e:	e70d      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
 8006790:	40023800 	.word	0x40023800
 8006794:	42470000 	.word	0x42470000
 8006798:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800679c:	4d24      	ldr	r5, [pc, #144]	; (8006830 <HAL_RCC_OscConfig+0x30c>)
 800679e:	68ab      	ldr	r3, [r5, #8]
 80067a0:	f003 030c 	and.w	r3, r3, #12
 80067a4:	2b08      	cmp	r3, #8
 80067a6:	f43f aee9 	beq.w	800657c <HAL_RCC_OscConfig+0x58>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80067aa:	4b22      	ldr	r3, [pc, #136]	; (8006834 <HAL_RCC_OscConfig+0x310>)
 80067ac:	2a02      	cmp	r2, #2
 80067ae:	f04f 0200 	mov.w	r2, #0
        __HAL_RCC_PLL_DISABLE();
 80067b2:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80067b4:	d12e      	bne.n	8006814 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 80067b6:	f7fd fa0d 	bl	8003bd4 <HAL_GetTick>
 80067ba:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80067bc:	682b      	ldr	r3, [r5, #0]
 80067be:	0199      	lsls	r1, r3, #6
 80067c0:	d422      	bmi.n	8006808 <HAL_RCC_OscConfig+0x2e4>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80067c2:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80067c6:	4313      	orrs	r3, r2
 80067c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80067ca:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80067ce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80067d0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80067d4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80067d6:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80067da:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80067dc:	0852      	lsrs	r2, r2, #1
 80067de:	3a01      	subs	r2, #1
 80067e0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80067e4:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80067e6:	4b13      	ldr	r3, [pc, #76]	; (8006834 <HAL_RCC_OscConfig+0x310>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80067e8:	4d11      	ldr	r5, [pc, #68]	; (8006830 <HAL_RCC_OscConfig+0x30c>)
        __HAL_RCC_PLL_ENABLE();
 80067ea:	2201      	movs	r2, #1
 80067ec:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80067ee:	f7fd f9f1 	bl	8003bd4 <HAL_GetTick>
 80067f2:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80067f4:	682b      	ldr	r3, [r5, #0]
 80067f6:	019a      	lsls	r2, r3, #6
 80067f8:	f53f aea9 	bmi.w	800654e <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80067fc:	f7fd f9ea 	bl	8003bd4 <HAL_GetTick>
 8006800:	1b00      	subs	r0, r0, r4
 8006802:	2802      	cmp	r0, #2
 8006804:	d9f6      	bls.n	80067f4 <HAL_RCC_OscConfig+0x2d0>
 8006806:	e6d1      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006808:	f7fd f9e4 	bl	8003bd4 <HAL_GetTick>
 800680c:	1b80      	subs	r0, r0, r6
 800680e:	2802      	cmp	r0, #2
 8006810:	d9d4      	bls.n	80067bc <HAL_RCC_OscConfig+0x298>
 8006812:	e6cb      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
 8006814:	f7fd f9de 	bl	8003bd4 <HAL_GetTick>
 8006818:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800681a:	682b      	ldr	r3, [r5, #0]
 800681c:	019b      	lsls	r3, r3, #6
 800681e:	f57f ae96 	bpl.w	800654e <HAL_RCC_OscConfig+0x2a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8006822:	f7fd f9d7 	bl	8003bd4 <HAL_GetTick>
 8006826:	1b00      	subs	r0, r0, r4
 8006828:	2802      	cmp	r0, #2
 800682a:	d9f6      	bls.n	800681a <HAL_RCC_OscConfig+0x2f6>
 800682c:	e6be      	b.n	80065ac <HAL_RCC_OscConfig+0x88>
 800682e:	bf00      	nop
 8006830:	40023800 	.word	0x40023800
 8006834:	42470000 	.word	0x42470000

08006838 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006838:	b538      	push	{r3, r4, r5, lr}
 800683a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800683c:	4604      	mov	r4, r0
 800683e:	b1c8      	cbz	r0, 8006874 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8006840:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006844:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006848:	b91b      	cbnz	r3, 8006852 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800684a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800684e:	f7fb fa65 	bl	8001d1c <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006852:	2302      	movs	r3, #2
 8006854:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006858:	1d21      	adds	r1, r4, #4
 800685a:	6820      	ldr	r0, [r4, #0]
 800685c:	f000 f97c 	bl	8006b58 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8006860:	6862      	ldr	r2, [r4, #4]
 8006862:	6820      	ldr	r0, [r4, #0]
 8006864:	4629      	mov	r1, r5
 8006866:	f000 f9ad 	bl	8006bc4 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800686a:	2301      	movs	r3, #1
 800686c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8006870:	2000      	movs	r0, #0
}
 8006872:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006874:	2001      	movs	r0, #1
 8006876:	e7fc      	b.n	8006872 <HAL_SDRAM_Init+0x3a>

08006878 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006878:	b510      	push	{r4, lr}
 800687a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800687c:	f7fb fac6 	bl	8001e0c <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8006880:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006884:	f000 f9da 	bl	8006c3c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006888:	2000      	movs	r0, #0
 800688a:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800688e:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8006892:	bd10      	pop	{r4, pc}

08006894 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006894:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006896:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800689a:	2b02      	cmp	r3, #2
{
 800689c:	4604      	mov	r4, r0
 800689e:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80068a0:	b2d8      	uxtb	r0, r3
 80068a2:	d00d      	beq.n	80068c0 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068a4:	2302      	movs	r3, #2
 80068a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80068aa:	6820      	ldr	r0, [r4, #0]
 80068ac:	f000 f9d5 	bl	8006c5a <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80068b0:	682b      	ldr	r3, [r5, #0]
 80068b2:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80068b4:	bf0c      	ite	eq
 80068b6:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80068b8:	2301      	movne	r3, #1
 80068ba:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80068be:	2000      	movs	r0, #0
}
 80068c0:	bd38      	pop	{r3, r4, r5, pc}

080068c2 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80068c2:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80068c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80068c8:	2b02      	cmp	r3, #2
{
 80068ca:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80068cc:	b2d8      	uxtb	r0, r3
 80068ce:	d009      	beq.n	80068e4 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80068d0:	2302      	movs	r3, #2
 80068d2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80068d6:	6820      	ldr	r0, [r4, #0]
 80068d8:	f000 f9e6 	bl	8006ca8 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80068dc:	2301      	movs	r3, #1
 80068de:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 80068e2:	2000      	movs	r0, #0
}
 80068e4:	bd10      	pop	{r4, pc}

080068e6 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80068e6:	4770      	bx	lr

080068e8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80068e8:	6803      	ldr	r3, [r0, #0]
 80068ea:	68da      	ldr	r2, [r3, #12]
 80068ec:	f042 0201 	orr.w	r2, r2, #1
 80068f0:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80068f2:	689a      	ldr	r2, [r3, #8]
 80068f4:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80068f8:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 80068fa:	bf1e      	ittt	ne
 80068fc:	681a      	ldrne	r2, [r3, #0]
 80068fe:	f042 0201 	orrne.w	r2, r2, #1
 8006902:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8006904:	2000      	movs	r0, #0
 8006906:	4770      	bx	lr

08006908 <HAL_TIM_OC_DelayElapsedCallback>:
 8006908:	4770      	bx	lr

0800690a <HAL_TIM_IC_CaptureCallback>:
 800690a:	4770      	bx	lr

0800690c <HAL_TIM_PWM_PulseFinishedCallback>:
 800690c:	4770      	bx	lr

0800690e <HAL_TIM_TriggerCallback>:
 800690e:	4770      	bx	lr

08006910 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006910:	6803      	ldr	r3, [r0, #0]
 8006912:	691a      	ldr	r2, [r3, #16]
 8006914:	0791      	lsls	r1, r2, #30
{
 8006916:	b510      	push	{r4, lr}
 8006918:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800691a:	d50e      	bpl.n	800693a <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800691c:	68da      	ldr	r2, [r3, #12]
 800691e:	0792      	lsls	r2, r2, #30
 8006920:	d50b      	bpl.n	800693a <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006922:	f06f 0202 	mvn.w	r2, #2
 8006926:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006928:	2201      	movs	r2, #1
 800692a:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800692c:	699b      	ldr	r3, [r3, #24]
 800692e:	079b      	lsls	r3, r3, #30
 8006930:	d077      	beq.n	8006a22 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006932:	f7ff ffea 	bl	800690a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006936:	2300      	movs	r3, #0
 8006938:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800693a:	6823      	ldr	r3, [r4, #0]
 800693c:	691a      	ldr	r2, [r3, #16]
 800693e:	0750      	lsls	r0, r2, #29
 8006940:	d510      	bpl.n	8006964 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006942:	68da      	ldr	r2, [r3, #12]
 8006944:	0751      	lsls	r1, r2, #29
 8006946:	d50d      	bpl.n	8006964 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006948:	f06f 0204 	mvn.w	r2, #4
 800694c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800694e:	2202      	movs	r2, #2
 8006950:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006952:	699b      	ldr	r3, [r3, #24]
 8006954:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006958:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800695a:	d068      	beq.n	8006a2e <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800695c:	f7ff ffd5 	bl	800690a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006960:	2300      	movs	r3, #0
 8006962:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006964:	6823      	ldr	r3, [r4, #0]
 8006966:	691a      	ldr	r2, [r3, #16]
 8006968:	0712      	lsls	r2, r2, #28
 800696a:	d50f      	bpl.n	800698c <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800696c:	68da      	ldr	r2, [r3, #12]
 800696e:	0710      	lsls	r0, r2, #28
 8006970:	d50c      	bpl.n	800698c <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006972:	f06f 0208 	mvn.w	r2, #8
 8006976:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006978:	2204      	movs	r2, #4
 800697a:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800697c:	69db      	ldr	r3, [r3, #28]
 800697e:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006980:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006982:	d05a      	beq.n	8006a3a <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006984:	f7ff ffc1 	bl	800690a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006988:	2300      	movs	r3, #0
 800698a:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800698c:	6823      	ldr	r3, [r4, #0]
 800698e:	691a      	ldr	r2, [r3, #16]
 8006990:	06d2      	lsls	r2, r2, #27
 8006992:	d510      	bpl.n	80069b6 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006994:	68da      	ldr	r2, [r3, #12]
 8006996:	06d0      	lsls	r0, r2, #27
 8006998:	d50d      	bpl.n	80069b6 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800699a:	f06f 0210 	mvn.w	r2, #16
 800699e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80069a0:	2208      	movs	r2, #8
 80069a2:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80069a4:	69db      	ldr	r3, [r3, #28]
 80069a6:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80069aa:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80069ac:	d04b      	beq.n	8006a46 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80069ae:	f7ff ffac 	bl	800690a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80069b2:	2300      	movs	r3, #0
 80069b4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80069b6:	6823      	ldr	r3, [r4, #0]
 80069b8:	691a      	ldr	r2, [r3, #16]
 80069ba:	07d1      	lsls	r1, r2, #31
 80069bc:	d508      	bpl.n	80069d0 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80069be:	68da      	ldr	r2, [r3, #12]
 80069c0:	07d2      	lsls	r2, r2, #31
 80069c2:	d505      	bpl.n	80069d0 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80069c4:	f06f 0201 	mvn.w	r2, #1
 80069c8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80069ca:	4620      	mov	r0, r4
 80069cc:	f7fa fff8 	bl	80019c0 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80069d0:	6823      	ldr	r3, [r4, #0]
 80069d2:	691a      	ldr	r2, [r3, #16]
 80069d4:	0610      	lsls	r0, r2, #24
 80069d6:	d508      	bpl.n	80069ea <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80069d8:	68da      	ldr	r2, [r3, #12]
 80069da:	0611      	lsls	r1, r2, #24
 80069dc:	d505      	bpl.n	80069ea <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80069de:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80069e2:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80069e4:	4620      	mov	r0, r4
 80069e6:	f000 f8b6 	bl	8006b56 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80069ea:	6823      	ldr	r3, [r4, #0]
 80069ec:	691a      	ldr	r2, [r3, #16]
 80069ee:	0652      	lsls	r2, r2, #25
 80069f0:	d508      	bpl.n	8006a04 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80069f2:	68da      	ldr	r2, [r3, #12]
 80069f4:	0650      	lsls	r0, r2, #25
 80069f6:	d505      	bpl.n	8006a04 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80069f8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80069fc:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80069fe:	4620      	mov	r0, r4
 8006a00:	f7ff ff85 	bl	800690e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006a04:	6823      	ldr	r3, [r4, #0]
 8006a06:	691a      	ldr	r2, [r3, #16]
 8006a08:	0691      	lsls	r1, r2, #26
 8006a0a:	d522      	bpl.n	8006a52 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006a0c:	68da      	ldr	r2, [r3, #12]
 8006a0e:	0692      	lsls	r2, r2, #26
 8006a10:	d51f      	bpl.n	8006a52 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006a12:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006a16:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006a18:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006a1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8006a1e:	f000 b899 	b.w	8006b54 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a22:	f7ff ff71 	bl	8006908 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a26:	4620      	mov	r0, r4
 8006a28:	f7ff ff70 	bl	800690c <HAL_TIM_PWM_PulseFinishedCallback>
 8006a2c:	e783      	b.n	8006936 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a2e:	f7ff ff6b 	bl	8006908 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a32:	4620      	mov	r0, r4
 8006a34:	f7ff ff6a 	bl	800690c <HAL_TIM_PWM_PulseFinishedCallback>
 8006a38:	e792      	b.n	8006960 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a3a:	f7ff ff65 	bl	8006908 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a3e:	4620      	mov	r0, r4
 8006a40:	f7ff ff64 	bl	800690c <HAL_TIM_PWM_PulseFinishedCallback>
 8006a44:	e7a0      	b.n	8006988 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006a46:	f7ff ff5f 	bl	8006908 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006a4a:	4620      	mov	r0, r4
 8006a4c:	f7ff ff5e 	bl	800690c <HAL_TIM_PWM_PulseFinishedCallback>
 8006a50:	e7af      	b.n	80069b2 <HAL_TIM_IRQHandler+0xa2>
}
 8006a52:	bd10      	pop	{r4, pc}

08006a54 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006a54:	4a30      	ldr	r2, [pc, #192]	; (8006b18 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8006a56:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006a58:	4290      	cmp	r0, r2
 8006a5a:	d012      	beq.n	8006a82 <TIM_Base_SetConfig+0x2e>
 8006a5c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006a60:	d00f      	beq.n	8006a82 <TIM_Base_SetConfig+0x2e>
 8006a62:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006a66:	4290      	cmp	r0, r2
 8006a68:	d00b      	beq.n	8006a82 <TIM_Base_SetConfig+0x2e>
 8006a6a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a6e:	4290      	cmp	r0, r2
 8006a70:	d007      	beq.n	8006a82 <TIM_Base_SetConfig+0x2e>
 8006a72:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006a76:	4290      	cmp	r0, r2
 8006a78:	d003      	beq.n	8006a82 <TIM_Base_SetConfig+0x2e>
 8006a7a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006a7e:	4290      	cmp	r0, r2
 8006a80:	d119      	bne.n	8006ab6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006a82:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006a84:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8006a88:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8006a8a:	4a23      	ldr	r2, [pc, #140]	; (8006b18 <TIM_Base_SetConfig+0xc4>)
 8006a8c:	4290      	cmp	r0, r2
 8006a8e:	d029      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006a90:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006a94:	d026      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006a96:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8006a9a:	4290      	cmp	r0, r2
 8006a9c:	d022      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006a9e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006aa2:	4290      	cmp	r0, r2
 8006aa4:	d01e      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006aa6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006aaa:	4290      	cmp	r0, r2
 8006aac:	d01a      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006aae:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006ab2:	4290      	cmp	r0, r2
 8006ab4:	d016      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006ab6:	4a19      	ldr	r2, [pc, #100]	; (8006b1c <TIM_Base_SetConfig+0xc8>)
 8006ab8:	4290      	cmp	r0, r2
 8006aba:	d013      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006abc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ac0:	4290      	cmp	r0, r2
 8006ac2:	d00f      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006ac4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ac8:	4290      	cmp	r0, r2
 8006aca:	d00b      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006acc:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006ad0:	4290      	cmp	r0, r2
 8006ad2:	d007      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006ad4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ad8:	4290      	cmp	r0, r2
 8006ada:	d003      	beq.n	8006ae4 <TIM_Base_SetConfig+0x90>
 8006adc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006ae0:	4290      	cmp	r0, r2
 8006ae2:	d103      	bne.n	8006aec <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006ae4:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8006ae6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006aea:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006aec:	694a      	ldr	r2, [r1, #20]
 8006aee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006af2:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006af4:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8006af6:	688b      	ldr	r3, [r1, #8]
 8006af8:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8006afa:	680b      	ldr	r3, [r1, #0]
 8006afc:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006afe:	4b06      	ldr	r3, [pc, #24]	; (8006b18 <TIM_Base_SetConfig+0xc4>)
 8006b00:	4298      	cmp	r0, r3
 8006b02:	d003      	beq.n	8006b0c <TIM_Base_SetConfig+0xb8>
 8006b04:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8006b08:	4298      	cmp	r0, r3
 8006b0a:	d101      	bne.n	8006b10 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006b0c:	690b      	ldr	r3, [r1, #16]
 8006b0e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006b10:	2301      	movs	r3, #1
 8006b12:	6143      	str	r3, [r0, #20]
}
 8006b14:	4770      	bx	lr
 8006b16:	bf00      	nop
 8006b18:	40010000 	.word	0x40010000
 8006b1c:	40014000 	.word	0x40014000

08006b20 <HAL_TIM_Base_Init>:
{
 8006b20:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006b22:	4604      	mov	r4, r0
 8006b24:	b1a0      	cbz	r0, 8006b50 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8006b26:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006b2a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006b2e:	b91b      	cbnz	r3, 8006b38 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006b30:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006b34:	f7ff fed7 	bl	80068e6 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8006b38:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006b3a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006b3c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006b40:	1d21      	adds	r1, r4, #4
 8006b42:	f7ff ff87 	bl	8006a54 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8006b46:	2301      	movs	r3, #1
 8006b48:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8006b4c:	2000      	movs	r0, #0
}
 8006b4e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006b50:	2001      	movs	r0, #1
 8006b52:	e7fc      	b.n	8006b4e <HAL_TIM_Base_Init+0x2e>

08006b54 <HAL_TIMEx_CommutCallback>:
 8006b54:	4770      	bx	lr

08006b56 <HAL_TIMEx_BreakCallback>:
 8006b56:	4770      	bx	lr

08006b58 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8006b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8006b5c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8006b5e:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8006b62:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8006b66:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8006b6a:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006b6e:	6809      	ldr	r1, [r1, #0]
 8006b70:	2901      	cmp	r1, #1
 8006b72:	ea43 0304 	orr.w	r3, r3, r4
 8006b76:	4912      	ldr	r1, [pc, #72]	; (8006bc0 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8006b78:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8006b7a:	d00f      	beq.n	8006b9c <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006b7c:	431a      	orrs	r2, r3
 8006b7e:	432a      	orrs	r2, r5
 8006b80:	ea42 0308 	orr.w	r3, r2, r8
 8006b84:	ea43 030e 	orr.w	r3, r3, lr
 8006b88:	ea43 030c 	orr.w	r3, r3, ip
 8006b8c:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006b8e:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006b90:	4333      	orrs	r3, r6
 8006b92:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006b94:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8006b96:	2000      	movs	r0, #0
 8006b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006b9c:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8006b9e:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8006ba0:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006ba2:	ea45 0208 	orr.w	r2, r5, r8
 8006ba6:	ea42 020e 	orr.w	r2, r2, lr
 8006baa:	ea42 020c 	orr.w	r2, r2, ip
 8006bae:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8006bb0:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006bb4:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8006bb6:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006bb8:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006bba:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006bbc:	6042      	str	r2, [r0, #4]
 8006bbe:	e7ea      	b.n	8006b96 <FMC_SDRAM_Init+0x3e>
 8006bc0:	ffff8000 	.word	0xffff8000

08006bc4 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006bc4:	68cb      	ldr	r3, [r1, #12]
{
 8006bc6:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006bc8:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8006bca:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8006bcc:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006bce:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8006bd0:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006bd2:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8006bd6:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8006bd8:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8006bda:	3b01      	subs	r3, #1
 8006bdc:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8006bde:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8006be0:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8006be2:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8006be4:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8006be6:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8006be8:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8006bec:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8006bf0:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8006bf4:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006bf8:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8006bfc:	d00c      	beq.n	8006c18 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006bfe:	ea43 030c 	orr.w	r3, r3, ip
 8006c02:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006c04:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006c06:	4333      	orrs	r3, r6
 8006c08:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006c0a:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006c0e:	430b      	orrs	r3, r1
 8006c10:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006c12:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006c14:	2000      	movs	r0, #0
 8006c16:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006c18:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006c1a:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006c1e:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006c22:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006c24:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006c26:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006c2a:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006c2c:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006c2e:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006c30:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006c34:	430a      	orrs	r2, r1
 8006c36:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006c38:	60c2      	str	r2, [r0, #12]
 8006c3a:	e7eb      	b.n	8006c14 <FMC_SDRAM_Timing_Init+0x50>

08006c3c <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006c3c:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006c40:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006c44:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 8006c48:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006c4c:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006c4e:	2300      	movs	r3, #0
 8006c50:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006c52:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006c54:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 8006c56:	4618      	mov	r0, r3
 8006c58:	4770      	bx	lr

08006c5a <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006c5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006c5c:	2300      	movs	r3, #0
 8006c5e:	9301      	str	r3, [sp, #4]
{
 8006c60:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006c62:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006c66:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006c68:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006c6a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8006c6e:	688a      	ldr	r2, [r1, #8]
 8006c70:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006c72:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8006c76:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8006c78:	9b01      	ldr	r3, [sp, #4]
 8006c7a:	6103      	str	r3, [r0, #16]
{
 8006c7c:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8006c7e:	f7fc ffa9 	bl	8003bd4 <HAL_GetTick>
 8006c82:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006c84:	69a3      	ldr	r3, [r4, #24]
 8006c86:	f013 0320 	ands.w	r3, r3, #32
 8006c8a:	d101      	bne.n	8006c90 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8006c8c:	4618      	mov	r0, r3
 8006c8e:	e003      	b.n	8006c98 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8006c90:	1c6b      	adds	r3, r5, #1
 8006c92:	d0f7      	beq.n	8006c84 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006c94:	b915      	cbnz	r5, 8006c9c <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8006c96:	2003      	movs	r0, #3
}
 8006c98:	b002      	add	sp, #8
 8006c9a:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8006c9c:	f7fc ff9a 	bl	8003bd4 <HAL_GetTick>
 8006ca0:	1b80      	subs	r0, r0, r6
 8006ca2:	42a8      	cmp	r0, r5
 8006ca4:	d9ee      	bls.n	8006c84 <FMC_SDRAM_SendCommand+0x2a>
 8006ca6:	e7f6      	b.n	8006c96 <FMC_SDRAM_SendCommand+0x3c>

08006ca8 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8006ca8:	6943      	ldr	r3, [r0, #20]
 8006caa:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006cae:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8006cb0:	2000      	movs	r0, #0
 8006cb2:	4770      	bx	lr

08006cb4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006cb4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006cb8:	b113      	cbz	r3, 8006cc0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8006cba:	f06f 0005 	mvn.w	r0, #5
 8006cbe:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006cc0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8006cc4:	4b07      	ldr	r3, [pc, #28]	; (8006ce4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8006cc6:	b912      	cbnz	r2, 8006cce <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006cc8:	f3ef 8211 	mrs	r2, BASEPRI
 8006ccc:	b112      	cbz	r2, 8006cd4 <osKernelInitialize+0x20>
 8006cce:	681a      	ldr	r2, [r3, #0]
 8006cd0:	2a02      	cmp	r2, #2
 8006cd2:	d0f2      	beq.n	8006cba <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8006cd4:	6818      	ldr	r0, [r3, #0]
 8006cd6:	b910      	cbnz	r0, 8006cde <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006cd8:	2201      	movs	r2, #1
 8006cda:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006cdc:	4770      	bx	lr
    } else {
      stat = osError;
 8006cde:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006ce2:	4770      	bx	lr
 8006ce4:	200018a4 	.word	0x200018a4

08006ce8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006ce8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006cea:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006cee:	b113      	cbz	r3, 8006cf6 <osKernelStart+0xe>
    stat = osErrorISR;
 8006cf0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006cf4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006cf6:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8006cfa:	4b0a      	ldr	r3, [pc, #40]	; (8006d24 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8006cfc:	b912      	cbnz	r2, 8006d04 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006cfe:	f3ef 8211 	mrs	r2, BASEPRI
 8006d02:	b112      	cbz	r2, 8006d0a <osKernelStart+0x22>
 8006d04:	681a      	ldr	r2, [r3, #0]
 8006d06:	2a02      	cmp	r2, #2
 8006d08:	d0f2      	beq.n	8006cf0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8006d0a:	681a      	ldr	r2, [r3, #0]
 8006d0c:	2a01      	cmp	r2, #1
 8006d0e:	d105      	bne.n	8006d1c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8006d10:	2202      	movs	r2, #2
 8006d12:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8006d14:	f001 fcde 	bl	80086d4 <vTaskStartScheduler>
      stat = osOK;
 8006d18:	2000      	movs	r0, #0
 8006d1a:	e7eb      	b.n	8006cf4 <osKernelStart+0xc>
      stat = osError;
 8006d1c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006d20:	e7e8      	b.n	8006cf4 <osKernelStart+0xc>
 8006d22:	bf00      	nop
 8006d24:	200018a4 	.word	0x200018a4

08006d28 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006d28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d2a:	b087      	sub	sp, #28
 8006d2c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006d2e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006d30:	460b      	mov	r3, r1
  hTask = NULL;
 8006d32:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d34:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006d38:	bb22      	cbnz	r2, 8006d84 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006d3a:	f3ef 8210 	mrs	r2, PRIMASK
 8006d3e:	b912      	cbnz	r2, 8006d46 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006d40:	f3ef 8211 	mrs	r2, BASEPRI
 8006d44:	b11a      	cbz	r2, 8006d4e <osThreadNew+0x26>
 8006d46:	4a22      	ldr	r2, [pc, #136]	; (8006dd0 <osThreadNew+0xa8>)
 8006d48:	6812      	ldr	r2, [r2, #0]
 8006d4a:	2a02      	cmp	r2, #2
 8006d4c:	d01a      	beq.n	8006d84 <osThreadNew+0x5c>
 8006d4e:	b1c8      	cbz	r0, 8006d84 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006d50:	2c00      	cmp	r4, #0
 8006d52:	d02f      	beq.n	8006db4 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006d54:	69a5      	ldr	r5, [r4, #24]
 8006d56:	2d00      	cmp	r5, #0
 8006d58:	bf08      	it	eq
 8006d5a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006d5c:	1e6a      	subs	r2, r5, #1
 8006d5e:	2a37      	cmp	r2, #55	; 0x37
 8006d60:	46ac      	mov	ip, r5
 8006d62:	d82b      	bhi.n	8006dbc <osThreadNew+0x94>
 8006d64:	6862      	ldr	r2, [r4, #4]
 8006d66:	07d2      	lsls	r2, r2, #31
 8006d68:	d428      	bmi.n	8006dbc <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006d6a:	6966      	ldr	r6, [r4, #20]
 8006d6c:	b16e      	cbz	r6, 8006d8a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006d6e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006d70:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006d74:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006d76:	b157      	cbz	r7, 8006d8e <osThreadNew+0x66>
 8006d78:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006d7c:	d902      	bls.n	8006d84 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006d7e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006d80:	b104      	cbz	r4, 8006d84 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006d82:	b9ee      	cbnz	r6, 8006dc0 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006d84:	9805      	ldr	r0, [sp, #20]
}
 8006d86:	b007      	add	sp, #28
 8006d88:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006d8a:	2280      	movs	r2, #128	; 0x80
 8006d8c:	e7f0      	b.n	8006d70 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006d8e:	f1be 0f00 	cmp.w	lr, #0
 8006d92:	d1f7      	bne.n	8006d84 <osThreadNew+0x5c>
      if (mem == 0) {
 8006d94:	6924      	ldr	r4, [r4, #16]
 8006d96:	2c00      	cmp	r4, #0
 8006d98:	d1f4      	bne.n	8006d84 <osThreadNew+0x5c>
 8006d9a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006d9c:	a905      	add	r1, sp, #20
 8006d9e:	e9cd c100 	strd	ip, r1, [sp]
 8006da2:	b292      	uxth	r2, r2
 8006da4:	4621      	mov	r1, r4
 8006da6:	f001 fb34 	bl	8008412 <xTaskCreate>
 8006daa:	2801      	cmp	r0, #1
          hTask = NULL;
 8006dac:	bf1c      	itt	ne
 8006dae:	2300      	movne	r3, #0
 8006db0:	9305      	strne	r3, [sp, #20]
 8006db2:	e7e7      	b.n	8006d84 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8006db4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006db8:	2280      	movs	r2, #128	; 0x80
 8006dba:	e7ef      	b.n	8006d9c <osThreadNew+0x74>
        return (NULL);
 8006dbc:	2000      	movs	r0, #0
 8006dbe:	e7e2      	b.n	8006d86 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006dc0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006dc4:	9500      	str	r5, [sp, #0]
 8006dc6:	f001 faec 	bl	80083a2 <xTaskCreateStatic>
 8006dca:	9005      	str	r0, [sp, #20]
 8006dcc:	e7da      	b.n	8006d84 <osThreadNew+0x5c>
 8006dce:	bf00      	nop
 8006dd0:	200018a4 	.word	0x200018a4

08006dd4 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006dd4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006dd6:	460e      	mov	r6, r1
 8006dd8:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006dda:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006dde:	b11b      	cbz	r3, 8006de8 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006de0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006de2:	4620      	mov	r0, r4
 8006de4:	b002      	add	sp, #8
 8006de6:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006de8:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006dec:	b913      	cbnz	r3, 8006df4 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006dee:	f3ef 8311 	mrs	r3, BASEPRI
 8006df2:	b11b      	cbz	r3, 8006dfc <osSemaphoreNew+0x28>
 8006df4:	4b21      	ldr	r3, [pc, #132]	; (8006e7c <osSemaphoreNew+0xa8>)
 8006df6:	681b      	ldr	r3, [r3, #0]
 8006df8:	2b02      	cmp	r3, #2
 8006dfa:	d0f1      	beq.n	8006de0 <osSemaphoreNew+0xc>
 8006dfc:	2800      	cmp	r0, #0
 8006dfe:	d0ef      	beq.n	8006de0 <osSemaphoreNew+0xc>
 8006e00:	42b0      	cmp	r0, r6
 8006e02:	d3ed      	bcc.n	8006de0 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8006e04:	b1ed      	cbz	r5, 8006e42 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006e06:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8006e0a:	b1c3      	cbz	r3, 8006e3e <osSemaphoreNew+0x6a>
 8006e0c:	2a4f      	cmp	r2, #79	; 0x4f
 8006e0e:	d9e7      	bls.n	8006de0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006e10:	2801      	cmp	r0, #1
 8006e12:	d129      	bne.n	8006e68 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006e14:	2203      	movs	r2, #3
 8006e16:	9200      	str	r2, [sp, #0]
 8006e18:	2200      	movs	r2, #0
 8006e1a:	4611      	mov	r1, r2
 8006e1c:	f000 fd2b 	bl	8007876 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8006e20:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006e22:	2800      	cmp	r0, #0
 8006e24:	d0dc      	beq.n	8006de0 <osSemaphoreNew+0xc>
 8006e26:	b1ce      	cbz	r6, 8006e5c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006e28:	2300      	movs	r3, #0
 8006e2a:	461a      	mov	r2, r3
 8006e2c:	4619      	mov	r1, r3
 8006e2e:	f000 fdd7 	bl	80079e0 <xQueueGenericSend>
 8006e32:	2801      	cmp	r0, #1
 8006e34:	d012      	beq.n	8006e5c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8006e36:	4620      	mov	r0, r4
 8006e38:	f001 f912 	bl	8008060 <vQueueDelete>
 8006e3c:	e7d0      	b.n	8006de0 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006e3e:	2a00      	cmp	r2, #0
 8006e40:	d1ce      	bne.n	8006de0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006e42:	2801      	cmp	r0, #1
 8006e44:	d104      	bne.n	8006e50 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8006e46:	2203      	movs	r2, #3
 8006e48:	2100      	movs	r1, #0
 8006e4a:	f000 fd62 	bl	8007912 <xQueueGenericCreate>
 8006e4e:	e7e7      	b.n	8006e20 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006e50:	4631      	mov	r1, r6
 8006e52:	f000 fda7 	bl	80079a4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006e56:	4604      	mov	r4, r0
 8006e58:	2800      	cmp	r0, #0
 8006e5a:	d0c1      	beq.n	8006de0 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8006e5c:	b95d      	cbnz	r5, 8006e76 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8006e5e:	4629      	mov	r1, r5
 8006e60:	4620      	mov	r0, r4
 8006e62:	f001 f8d7 	bl	8008014 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006e66:	e7bc      	b.n	8006de2 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006e68:	461a      	mov	r2, r3
 8006e6a:	4631      	mov	r1, r6
 8006e6c:	f000 fd78 	bl	8007960 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006e70:	4604      	mov	r4, r0
 8006e72:	2800      	cmp	r0, #0
 8006e74:	d0b4      	beq.n	8006de0 <osSemaphoreNew+0xc>
          name = attr->name;
 8006e76:	682d      	ldr	r5, [r5, #0]
 8006e78:	e7f1      	b.n	8006e5e <osSemaphoreNew+0x8a>
 8006e7a:	bf00      	nop
 8006e7c:	200018a4 	.word	0x200018a4

08006e80 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006e80:	b513      	push	{r0, r1, r4, lr}
 8006e82:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006e84:	b918      	cbnz	r0, 8006e8e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8006e86:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006e8a:	b002      	add	sp, #8
 8006e8c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006e8e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8006e92:	b163      	cbz	r3, 8006eae <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8006e94:	2c00      	cmp	r4, #0
 8006e96:	d1f6      	bne.n	8006e86 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006e98:	aa01      	add	r2, sp, #4
 8006e9a:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006e9c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006e9e:	f001 f869 	bl	8007f74 <xQueueReceiveFromISR>
 8006ea2:	2801      	cmp	r0, #1
 8006ea4:	d113      	bne.n	8006ece <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8006ea6:	9b01      	ldr	r3, [sp, #4]
 8006ea8:	b9a3      	cbnz	r3, 8006ed4 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8006eaa:	2000      	movs	r0, #0
 8006eac:	e7ed      	b.n	8006e8a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006eae:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006eb2:	b913      	cbnz	r3, 8006eba <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006eb4:	f3ef 8311 	mrs	r3, BASEPRI
 8006eb8:	b11b      	cbz	r3, 8006ec2 <osSemaphoreAcquire+0x42>
 8006eba:	4b0d      	ldr	r3, [pc, #52]	; (8006ef0 <osSemaphoreAcquire+0x70>)
 8006ebc:	681b      	ldr	r3, [r3, #0]
 8006ebe:	2b02      	cmp	r3, #2
 8006ec0:	d0e8      	beq.n	8006e94 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006ec2:	4621      	mov	r1, r4
 8006ec4:	f000 ff93 	bl	8007dee <xQueueSemaphoreTake>
 8006ec8:	2801      	cmp	r0, #1
 8006eca:	d0ee      	beq.n	8006eaa <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8006ecc:	b96c      	cbnz	r4, 8006eea <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8006ece:	f06f 0002 	mvn.w	r0, #2
 8006ed2:	e7da      	b.n	8006e8a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8006ed4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006ed8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006edc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006ee0:	f3bf 8f4f 	dsb	sy
 8006ee4:	f3bf 8f6f 	isb	sy
 8006ee8:	e7df      	b.n	8006eaa <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8006eea:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006eee:	e7cc      	b.n	8006e8a <osSemaphoreAcquire+0xa>
 8006ef0:	200018a4 	.word	0x200018a4

08006ef4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006ef4:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006ef6:	b370      	cbz	r0, 8006f56 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006ef8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006efc:	b14b      	cbz	r3, 8006f12 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8006efe:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006f00:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006f02:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006f04:	f000 fe80 	bl	8007c08 <xQueueGiveFromISR>
 8006f08:	2801      	cmp	r0, #1
 8006f0a:	d014      	beq.n	8006f36 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006f0c:	f06f 0002 	mvn.w	r0, #2
 8006f10:	e014      	b.n	8006f3c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006f12:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006f16:	b913      	cbnz	r3, 8006f1e <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006f18:	f3ef 8311 	mrs	r3, BASEPRI
 8006f1c:	b11b      	cbz	r3, 8006f26 <osSemaphoreRelease+0x32>
 8006f1e:	4b0f      	ldr	r3, [pc, #60]	; (8006f5c <osSemaphoreRelease+0x68>)
 8006f20:	681b      	ldr	r3, [r3, #0]
 8006f22:	2b02      	cmp	r3, #2
 8006f24:	d0eb      	beq.n	8006efe <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006f26:	2300      	movs	r3, #0
 8006f28:	461a      	mov	r2, r3
 8006f2a:	4619      	mov	r1, r3
 8006f2c:	f000 fd58 	bl	80079e0 <xQueueGenericSend>
 8006f30:	2801      	cmp	r0, #1
 8006f32:	d002      	beq.n	8006f3a <osSemaphoreRelease+0x46>
 8006f34:	e7ea      	b.n	8006f0c <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8006f36:	9b01      	ldr	r3, [sp, #4]
 8006f38:	b913      	cbnz	r3, 8006f40 <osSemaphoreRelease+0x4c>
  stat = osOK;
 8006f3a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8006f3c:	b002      	add	sp, #8
 8006f3e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006f40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006f44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f48:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006f4c:	f3bf 8f4f 	dsb	sy
 8006f50:	f3bf 8f6f 	isb	sy
 8006f54:	e7f1      	b.n	8006f3a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8006f56:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006f5a:	e7ef      	b.n	8006f3c <osSemaphoreRelease+0x48>
 8006f5c:	200018a4 	.word	0x200018a4

08006f60 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006f60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f62:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006f64:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006f68:	b11b      	cbz	r3, 8006f72 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8006f6a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006f6c:	4628      	mov	r0, r5
 8006f6e:	b002      	add	sp, #8
 8006f70:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006f72:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006f76:	b913      	cbnz	r3, 8006f7e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006f78:	f3ef 8311 	mrs	r3, BASEPRI
 8006f7c:	b11b      	cbz	r3, 8006f86 <osMessageQueueNew+0x26>
 8006f7e:	4b1a      	ldr	r3, [pc, #104]	; (8006fe8 <osMessageQueueNew+0x88>)
 8006f80:	681b      	ldr	r3, [r3, #0]
 8006f82:	2b02      	cmp	r3, #2
 8006f84:	d0f1      	beq.n	8006f6a <osMessageQueueNew+0xa>
 8006f86:	2800      	cmp	r0, #0
 8006f88:	d0ef      	beq.n	8006f6a <osMessageQueueNew+0xa>
 8006f8a:	2900      	cmp	r1, #0
 8006f8c:	d0ed      	beq.n	8006f6a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8006f8e:	b1ec      	cbz	r4, 8006fcc <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006f90:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8006f94:	b193      	cbz	r3, 8006fbc <osMessageQueueNew+0x5c>
 8006f96:	2a4f      	cmp	r2, #79	; 0x4f
 8006f98:	d9e7      	bls.n	8006f6a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006f9a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006f9c:	2a00      	cmp	r2, #0
 8006f9e:	d0e4      	beq.n	8006f6a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006fa0:	6966      	ldr	r6, [r4, #20]
 8006fa2:	fb01 f500 	mul.w	r5, r1, r0
 8006fa6:	42ae      	cmp	r6, r5
 8006fa8:	d3df      	bcc.n	8006f6a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006faa:	2500      	movs	r5, #0
 8006fac:	9500      	str	r5, [sp, #0]
 8006fae:	f000 fc62 	bl	8007876 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006fb2:	4605      	mov	r5, r0
 8006fb4:	2800      	cmp	r0, #0
 8006fb6:	d0d8      	beq.n	8006f6a <osMessageQueueNew+0xa>
        name = attr->name;
 8006fb8:	6824      	ldr	r4, [r4, #0]
 8006fba:	e00f      	b.n	8006fdc <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006fbc:	2a00      	cmp	r2, #0
 8006fbe:	d1d4      	bne.n	8006f6a <osMessageQueueNew+0xa>
 8006fc0:	6923      	ldr	r3, [r4, #16]
 8006fc2:	2b00      	cmp	r3, #0
 8006fc4:	d1d1      	bne.n	8006f6a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006fc6:	6963      	ldr	r3, [r4, #20]
 8006fc8:	2b00      	cmp	r3, #0
 8006fca:	d1ce      	bne.n	8006f6a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8006fcc:	2200      	movs	r2, #0
 8006fce:	f000 fca0 	bl	8007912 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006fd2:	4605      	mov	r5, r0
 8006fd4:	2800      	cmp	r0, #0
 8006fd6:	d0c8      	beq.n	8006f6a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8006fd8:	2c00      	cmp	r4, #0
 8006fda:	d1ed      	bne.n	8006fb8 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8006fdc:	4621      	mov	r1, r4
 8006fde:	4628      	mov	r0, r5
 8006fe0:	f001 f818 	bl	8008014 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006fe4:	e7c2      	b.n	8006f6c <osMessageQueueNew+0xc>
 8006fe6:	bf00      	nop
 8006fe8:	200018a4 	.word	0x200018a4

08006fec <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006fec:	b513      	push	{r0, r1, r4, lr}
 8006fee:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006ff0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006ff4:	b123      	cbz	r3, 8007000 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006ff6:	b9d8      	cbnz	r0, 8007030 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8006ff8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006ffc:	b002      	add	sp, #8
 8006ffe:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007000:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007004:	b913      	cbnz	r3, 800700c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8007006:	f3ef 8311 	mrs	r3, BASEPRI
 800700a:	b11b      	cbz	r3, 8007014 <osMessageQueuePut+0x28>
 800700c:	4b17      	ldr	r3, [pc, #92]	; (800706c <osMessageQueuePut+0x80>)
 800700e:	681b      	ldr	r3, [r3, #0]
 8007010:	2b02      	cmp	r3, #2
 8007012:	d0f0      	beq.n	8006ff6 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007014:	2800      	cmp	r0, #0
 8007016:	d0ef      	beq.n	8006ff8 <osMessageQueuePut+0xc>
 8007018:	2900      	cmp	r1, #0
 800701a:	d0ed      	beq.n	8006ff8 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800701c:	2300      	movs	r3, #0
 800701e:	4622      	mov	r2, r4
 8007020:	f000 fcde 	bl	80079e0 <xQueueGenericSend>
 8007024:	2801      	cmp	r0, #1
 8007026:	d010      	beq.n	800704a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8007028:	b9e4      	cbnz	r4, 8007064 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800702a:	f06f 0002 	mvn.w	r0, #2
 800702e:	e7e5      	b.n	8006ffc <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007030:	2900      	cmp	r1, #0
 8007032:	d0e1      	beq.n	8006ff8 <osMessageQueuePut+0xc>
 8007034:	2c00      	cmp	r4, #0
 8007036:	d1df      	bne.n	8006ff8 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007038:	4623      	mov	r3, r4
 800703a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800703c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800703e:	f000 fd82 	bl	8007b46 <xQueueGenericSendFromISR>
 8007042:	2801      	cmp	r0, #1
 8007044:	d1f1      	bne.n	800702a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8007046:	9b01      	ldr	r3, [sp, #4]
 8007048:	b90b      	cbnz	r3, 800704e <osMessageQueuePut+0x62>
  stat = osOK;
 800704a:	2000      	movs	r0, #0
 800704c:	e7d6      	b.n	8006ffc <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800704e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007052:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007056:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800705a:	f3bf 8f4f 	dsb	sy
 800705e:	f3bf 8f6f 	isb	sy
 8007062:	e7f2      	b.n	800704a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8007064:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8007068:	e7c8      	b.n	8006ffc <osMessageQueuePut+0x10>
 800706a:	bf00      	nop
 800706c:	200018a4 	.word	0x200018a4

08007070 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8007070:	b513      	push	{r0, r1, r4, lr}
 8007072:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8007074:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007078:	b123      	cbz	r3, 8007084 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800707a:	b9d0      	cbnz	r0, 80070b2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800707c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8007080:	b002      	add	sp, #8
 8007082:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8007084:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8007088:	b913      	cbnz	r3, 8007090 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800708a:	f3ef 8311 	mrs	r3, BASEPRI
 800708e:	b11b      	cbz	r3, 8007098 <osMessageQueueGet+0x28>
 8007090:	4b16      	ldr	r3, [pc, #88]	; (80070ec <osMessageQueueGet+0x7c>)
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	2b02      	cmp	r3, #2
 8007096:	d0f0      	beq.n	800707a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8007098:	2800      	cmp	r0, #0
 800709a:	d0ef      	beq.n	800707c <osMessageQueueGet+0xc>
 800709c:	2900      	cmp	r1, #0
 800709e:	d0ed      	beq.n	800707c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80070a0:	4622      	mov	r2, r4
 80070a2:	f000 fe05 	bl	8007cb0 <xQueueReceive>
 80070a6:	2801      	cmp	r0, #1
 80070a8:	d00f      	beq.n	80070ca <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80070aa:	b9dc      	cbnz	r4, 80070e4 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80070ac:	f06f 0002 	mvn.w	r0, #2
 80070b0:	e7e6      	b.n	8007080 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80070b2:	2900      	cmp	r1, #0
 80070b4:	d0e2      	beq.n	800707c <osMessageQueueGet+0xc>
 80070b6:	2c00      	cmp	r4, #0
 80070b8:	d1e0      	bne.n	800707c <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80070ba:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80070bc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80070be:	f000 ff59 	bl	8007f74 <xQueueReceiveFromISR>
 80070c2:	2801      	cmp	r0, #1
 80070c4:	d1f2      	bne.n	80070ac <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80070c6:	9b01      	ldr	r3, [sp, #4]
 80070c8:	b90b      	cbnz	r3, 80070ce <osMessageQueueGet+0x5e>
  stat = osOK;
 80070ca:	2000      	movs	r0, #0
 80070cc:	e7d8      	b.n	8007080 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80070ce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80070d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80070d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80070da:	f3bf 8f4f 	dsb	sy
 80070de:	f3bf 8f6f 	isb	sy
 80070e2:	e7f2      	b.n	80070ca <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80070e4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80070e8:	e7ca      	b.n	8007080 <osMessageQueueGet+0x10>
 80070ea:	bf00      	nop
 80070ec:	200018a4 	.word	0x200018a4

080070f0 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80070f0:	4b03      	ldr	r3, [pc, #12]	; (8007100 <vApplicationGetIdleTaskMemory+0x10>)
 80070f2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80070f4:	4b03      	ldr	r3, [pc, #12]	; (8007104 <vApplicationGetIdleTaskMemory+0x14>)
 80070f6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80070f8:	2380      	movs	r3, #128	; 0x80
 80070fa:	6013      	str	r3, [r2, #0]
}
 80070fc:	4770      	bx	lr
 80070fe:	bf00      	nop
 8007100:	20001844 	.word	0x20001844
 8007104:	20001644 	.word	0x20001644

08007108 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8007108:	4b03      	ldr	r3, [pc, #12]	; (8007118 <vApplicationGetTimerTaskMemory+0x10>)
 800710a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800710c:	4b03      	ldr	r3, [pc, #12]	; (800711c <vApplicationGetTimerTaskMemory+0x14>)
 800710e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8007110:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007114:	6013      	str	r3, [r2, #0]
}
 8007116:	4770      	bx	lr
 8007118:	20001ca8 	.word	0x20001ca8
 800711c:	200018a8 	.word	0x200018a8

08007120 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8007120:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8007122:	4b0f      	ldr	r3, [pc, #60]	; (8007160 <prvInsertBlockIntoFreeList+0x40>)
 8007124:	461a      	mov	r2, r3
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	4283      	cmp	r3, r0
 800712a:	d3fb      	bcc.n	8007124 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800712c:	6854      	ldr	r4, [r2, #4]
 800712e:	1911      	adds	r1, r2, r4
 8007130:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8007132:	bf01      	itttt	eq
 8007134:	6841      	ldreq	r1, [r0, #4]
 8007136:	4610      	moveq	r0, r2
 8007138:	1909      	addeq	r1, r1, r4
 800713a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800713c:	6844      	ldr	r4, [r0, #4]
 800713e:	1901      	adds	r1, r0, r4
 8007140:	428b      	cmp	r3, r1
 8007142:	d107      	bne.n	8007154 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007144:	4907      	ldr	r1, [pc, #28]	; (8007164 <prvInsertBlockIntoFreeList+0x44>)
 8007146:	6809      	ldr	r1, [r1, #0]
 8007148:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800714a:	bf1f      	itttt	ne
 800714c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800714e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007150:	1909      	addne	r1, r1, r4
 8007152:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007154:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007156:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007158:	bf18      	it	ne
 800715a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800715c:	bd10      	pop	{r4, pc}
 800715e:	bf00      	nop
 8007160:	20009d18 	.word	0x20009d18
 8007164:	20001d08 	.word	0x20001d08

08007168 <pvPortMalloc>:
{
 8007168:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800716c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800716e:	f001 f97d 	bl	800846c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8007172:	4840      	ldr	r0, [pc, #256]	; (8007274 <pvPortMalloc+0x10c>)
 8007174:	4d40      	ldr	r5, [pc, #256]	; (8007278 <pvPortMalloc+0x110>)
 8007176:	6803      	ldr	r3, [r0, #0]
 8007178:	bb0b      	cbnz	r3, 80071be <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800717a:	4940      	ldr	r1, [pc, #256]	; (800727c <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800717c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800717e:	bf1f      	itttt	ne
 8007180:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007182:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007186:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 800718a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800718c:	bf14      	ite	ne
 800718e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8007190:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007194:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007196:	4e3a      	ldr	r6, [pc, #232]	; (8007280 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8007198:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800719a:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800719e:	2300      	movs	r3, #0
 80071a0:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80071a2:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80071a4:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80071a8:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80071aa:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80071ae:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80071b0:	4a34      	ldr	r2, [pc, #208]	; (8007284 <pvPortMalloc+0x11c>)
 80071b2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80071b4:	4a34      	ldr	r2, [pc, #208]	; (8007288 <pvPortMalloc+0x120>)
 80071b6:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80071b8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80071bc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80071be:	682f      	ldr	r7, [r5, #0]
 80071c0:	4227      	tst	r7, r4
 80071c2:	d151      	bne.n	8007268 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80071c4:	2c00      	cmp	r4, #0
 80071c6:	d042      	beq.n	800724e <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80071c8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80071cc:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80071ce:	bf1c      	itt	ne
 80071d0:	f023 0307 	bicne.w	r3, r3, #7
 80071d4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d046      	beq.n	8007268 <pvPortMalloc+0x100>
 80071da:	4c2b      	ldr	r4, [pc, #172]	; (8007288 <pvPortMalloc+0x120>)
 80071dc:	6826      	ldr	r6, [r4, #0]
 80071de:	429e      	cmp	r6, r3
 80071e0:	d342      	bcc.n	8007268 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80071e2:	4a27      	ldr	r2, [pc, #156]	; (8007280 <pvPortMalloc+0x118>)
 80071e4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80071e6:	6869      	ldr	r1, [r5, #4]
 80071e8:	4299      	cmp	r1, r3
 80071ea:	d204      	bcs.n	80071f6 <pvPortMalloc+0x8e>
 80071ec:	f8d5 c000 	ldr.w	ip, [r5]
 80071f0:	f1bc 0f00 	cmp.w	ip, #0
 80071f4:	d115      	bne.n	8007222 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80071f6:	6800      	ldr	r0, [r0, #0]
 80071f8:	42a8      	cmp	r0, r5
 80071fa:	d035      	beq.n	8007268 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80071fc:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80071fe:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007200:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8007204:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8007206:	2910      	cmp	r1, #16
 8007208:	d912      	bls.n	8007230 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800720a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800720c:	0742      	lsls	r2, r0, #29
 800720e:	d00b      	beq.n	8007228 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8007210:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007214:	f383 8811 	msr	BASEPRI, r3
 8007218:	f3bf 8f6f 	isb	sy
 800721c:	f3bf 8f4f 	dsb	sy
 8007220:	e7fe      	b.n	8007220 <pvPortMalloc+0xb8>
 8007222:	462a      	mov	r2, r5
 8007224:	4665      	mov	r5, ip
 8007226:	e7de      	b.n	80071e6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007228:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800722a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800722c:	f7ff ff78 	bl	8007120 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007230:	4914      	ldr	r1, [pc, #80]	; (8007284 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007232:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007234:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007236:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007238:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800723a:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 800723c:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007240:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007242:	bf38      	it	cc
 8007244:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8007246:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800724a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 800724c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 800724e:	f001 f9b1 	bl	80085b4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007252:	0763      	lsls	r3, r4, #29
 8007254:	d00a      	beq.n	800726c <pvPortMalloc+0x104>
 8007256:	f04f 0350 	mov.w	r3, #80	; 0x50
 800725a:	f383 8811 	msr	BASEPRI, r3
 800725e:	f3bf 8f6f 	isb	sy
 8007262:	f3bf 8f4f 	dsb	sy
 8007266:	e7fe      	b.n	8007266 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8007268:	2400      	movs	r4, #0
 800726a:	e7f0      	b.n	800724e <pvPortMalloc+0xe6>
}
 800726c:	4620      	mov	r0, r4
 800726e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007272:	bf00      	nop
 8007274:	20001d08 	.word	0x20001d08
 8007278:	20009d0c 	.word	0x20009d0c
 800727c:	20001d0c 	.word	0x20001d0c
 8007280:	20009d18 	.word	0x20009d18
 8007284:	20009d14 	.word	0x20009d14
 8007288:	20009d10 	.word	0x20009d10

0800728c <vPortFree>:
{
 800728c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800728e:	4604      	mov	r4, r0
 8007290:	b370      	cbz	r0, 80072f0 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8007292:	4a18      	ldr	r2, [pc, #96]	; (80072f4 <vPortFree+0x68>)
 8007294:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007298:	6812      	ldr	r2, [r2, #0]
 800729a:	4213      	tst	r3, r2
 800729c:	d108      	bne.n	80072b0 <vPortFree+0x24>
 800729e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072a2:	f383 8811 	msr	BASEPRI, r3
 80072a6:	f3bf 8f6f 	isb	sy
 80072aa:	f3bf 8f4f 	dsb	sy
 80072ae:	e7fe      	b.n	80072ae <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 80072b0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 80072b4:	b141      	cbz	r1, 80072c8 <vPortFree+0x3c>
 80072b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072ba:	f383 8811 	msr	BASEPRI, r3
 80072be:	f3bf 8f6f 	isb	sy
 80072c2:	f3bf 8f4f 	dsb	sy
 80072c6:	e7fe      	b.n	80072c6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80072c8:	ea23 0302 	bic.w	r3, r3, r2
 80072cc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80072d0:	f001 f8cc 	bl	800846c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80072d4:	4a08      	ldr	r2, [pc, #32]	; (80072f8 <vPortFree+0x6c>)
 80072d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80072da:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80072dc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80072e0:	440b      	add	r3, r1
 80072e2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80072e4:	f7ff ff1c 	bl	8007120 <prvInsertBlockIntoFreeList>
}
 80072e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80072ec:	f001 b962 	b.w	80085b4 <xTaskResumeAll>
}
 80072f0:	bd10      	pop	{r4, pc}
 80072f2:	bf00      	nop
 80072f4:	20009d0c 	.word	0x20009d0c
 80072f8:	20009d10 	.word	0x20009d10

080072fc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072fc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007300:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007304:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007308:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800730a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800730c:	2300      	movs	r3, #0
 800730e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007310:	4770      	bx	lr

08007312 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007312:	2300      	movs	r3, #0
 8007314:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8007316:	4770      	bx	lr

08007318 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8007318:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800731a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800731c:	689a      	ldr	r2, [r3, #8]
 800731e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007320:	689a      	ldr	r2, [r3, #8]
 8007322:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007324:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007326:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007328:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800732a:	3301      	adds	r3, #1
 800732c:	6003      	str	r3, [r0, #0]
}
 800732e:	4770      	bx	lr

08007330 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007330:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007332:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007334:	1c63      	adds	r3, r4, #1
 8007336:	d10a      	bne.n	800734e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8007338:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800733a:	685a      	ldr	r2, [r3, #4]
 800733c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800733e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007340:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007342:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007344:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8007346:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8007348:	3301      	adds	r3, #1
 800734a:	6003      	str	r3, [r0, #0]
}
 800734c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800734e:	f100 0208 	add.w	r2, r0, #8
 8007352:	4613      	mov	r3, r2
 8007354:	6852      	ldr	r2, [r2, #4]
 8007356:	6815      	ldr	r5, [r2, #0]
 8007358:	42a5      	cmp	r5, r4
 800735a:	d9fa      	bls.n	8007352 <vListInsert+0x22>
 800735c:	e7ed      	b.n	800733a <vListInsert+0xa>

0800735e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800735e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007362:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007364:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8007366:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8007368:	6859      	ldr	r1, [r3, #4]
 800736a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800736c:	bf08      	it	eq
 800736e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007370:	2200      	movs	r2, #0
 8007372:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007374:	681a      	ldr	r2, [r3, #0]
 8007376:	3a01      	subs	r2, #1
 8007378:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800737a:	6818      	ldr	r0, [r3, #0]
}
 800737c:	4770      	bx	lr
	...

08007380 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007380:	4808      	ldr	r0, [pc, #32]	; (80073a4 <prvPortStartFirstTask+0x24>)
 8007382:	6800      	ldr	r0, [r0, #0]
 8007384:	6800      	ldr	r0, [r0, #0]
 8007386:	f380 8808 	msr	MSP, r0
 800738a:	f04f 0000 	mov.w	r0, #0
 800738e:	f380 8814 	msr	CONTROL, r0
 8007392:	b662      	cpsie	i
 8007394:	b661      	cpsie	f
 8007396:	f3bf 8f4f 	dsb	sy
 800739a:	f3bf 8f6f 	isb	sy
 800739e:	df00      	svc	0
 80073a0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 80073a2:	0000      	.short	0x0000
 80073a4:	e000ed08 	.word	0xe000ed08

080073a8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 80073a8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80073b8 <vPortEnableVFP+0x10>
 80073ac:	6801      	ldr	r1, [r0, #0]
 80073ae:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80073b2:	6001      	str	r1, [r0, #0]
 80073b4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80073b6:	0000      	.short	0x0000
 80073b8:	e000ed88 	.word	0xe000ed88

080073bc <prvTaskExitError>:
{
 80073bc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80073be:	2300      	movs	r3, #0
 80073c0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80073c2:	4b0d      	ldr	r3, [pc, #52]	; (80073f8 <prvTaskExitError+0x3c>)
 80073c4:	681b      	ldr	r3, [r3, #0]
 80073c6:	3301      	adds	r3, #1
 80073c8:	d008      	beq.n	80073dc <prvTaskExitError+0x20>
 80073ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073ce:	f383 8811 	msr	BASEPRI, r3
 80073d2:	f3bf 8f6f 	isb	sy
 80073d6:	f3bf 8f4f 	dsb	sy
 80073da:	e7fe      	b.n	80073da <prvTaskExitError+0x1e>
 80073dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073e0:	f383 8811 	msr	BASEPRI, r3
 80073e4:	f3bf 8f6f 	isb	sy
 80073e8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80073ec:	9b01      	ldr	r3, [sp, #4]
 80073ee:	2b00      	cmp	r3, #0
 80073f0:	d0fc      	beq.n	80073ec <prvTaskExitError+0x30>
}
 80073f2:	b002      	add	sp, #8
 80073f4:	4770      	bx	lr
 80073f6:	bf00      	nop
 80073f8:	2000005c 	.word	0x2000005c

080073fc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80073fc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007400:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007404:	4b07      	ldr	r3, [pc, #28]	; (8007424 <pxPortInitialiseStack+0x28>)
 8007406:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800740a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800740e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007412:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8007416:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800741a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800741e:	3844      	subs	r0, #68	; 0x44
 8007420:	4770      	bx	lr
 8007422:	bf00      	nop
 8007424:	080073bd 	.word	0x080073bd
	...

08007430 <SVC_Handler>:
	__asm volatile (
 8007430:	4b07      	ldr	r3, [pc, #28]	; (8007450 <pxCurrentTCBConst2>)
 8007432:	6819      	ldr	r1, [r3, #0]
 8007434:	6808      	ldr	r0, [r1, #0]
 8007436:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800743a:	f380 8809 	msr	PSP, r0
 800743e:	f3bf 8f6f 	isb	sy
 8007442:	f04f 0000 	mov.w	r0, #0
 8007446:	f380 8811 	msr	BASEPRI, r0
 800744a:	4770      	bx	lr
 800744c:	f3af 8000 	nop.w

08007450 <pxCurrentTCBConst2>:
 8007450:	20009d68 	.word	0x20009d68

08007454 <vPortEnterCritical>:
 8007454:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007458:	f383 8811 	msr	BASEPRI, r3
 800745c:	f3bf 8f6f 	isb	sy
 8007460:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007464:	4a0a      	ldr	r2, [pc, #40]	; (8007490 <vPortEnterCritical+0x3c>)
 8007466:	6813      	ldr	r3, [r2, #0]
 8007468:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800746a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800746c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800746e:	d10e      	bne.n	800748e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007470:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007474:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007478:	b2db      	uxtb	r3, r3
 800747a:	b143      	cbz	r3, 800748e <vPortEnterCritical+0x3a>
 800747c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007480:	f383 8811 	msr	BASEPRI, r3
 8007484:	f3bf 8f6f 	isb	sy
 8007488:	f3bf 8f4f 	dsb	sy
 800748c:	e7fe      	b.n	800748c <vPortEnterCritical+0x38>
}
 800748e:	4770      	bx	lr
 8007490:	2000005c 	.word	0x2000005c

08007494 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007494:	4a08      	ldr	r2, [pc, #32]	; (80074b8 <vPortExitCritical+0x24>)
 8007496:	6813      	ldr	r3, [r2, #0]
 8007498:	b943      	cbnz	r3, 80074ac <vPortExitCritical+0x18>
 800749a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800749e:	f383 8811 	msr	BASEPRI, r3
 80074a2:	f3bf 8f6f 	isb	sy
 80074a6:	f3bf 8f4f 	dsb	sy
 80074aa:	e7fe      	b.n	80074aa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80074ac:	3b01      	subs	r3, #1
 80074ae:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80074b0:	b90b      	cbnz	r3, 80074b6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80074b2:	f383 8811 	msr	BASEPRI, r3
}
 80074b6:	4770      	bx	lr
 80074b8:	2000005c 	.word	0x2000005c
 80074bc:	00000000 	.word	0x00000000

080074c0 <PendSV_Handler>:
	__asm volatile
 80074c0:	f3ef 8009 	mrs	r0, PSP
 80074c4:	f3bf 8f6f 	isb	sy
 80074c8:	4b15      	ldr	r3, [pc, #84]	; (8007520 <pxCurrentTCBConst>)
 80074ca:	681a      	ldr	r2, [r3, #0]
 80074cc:	f01e 0f10 	tst.w	lr, #16
 80074d0:	bf08      	it	eq
 80074d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80074d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074da:	6010      	str	r0, [r2, #0]
 80074dc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80074e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80074e4:	f380 8811 	msr	BASEPRI, r0
 80074e8:	f3bf 8f4f 	dsb	sy
 80074ec:	f3bf 8f6f 	isb	sy
 80074f0:	f001 f93e 	bl	8008770 <vTaskSwitchContext>
 80074f4:	f04f 0000 	mov.w	r0, #0
 80074f8:	f380 8811 	msr	BASEPRI, r0
 80074fc:	bc09      	pop	{r0, r3}
 80074fe:	6819      	ldr	r1, [r3, #0]
 8007500:	6808      	ldr	r0, [r1, #0]
 8007502:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007506:	f01e 0f10 	tst.w	lr, #16
 800750a:	bf08      	it	eq
 800750c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007510:	f380 8809 	msr	PSP, r0
 8007514:	f3bf 8f6f 	isb	sy
 8007518:	4770      	bx	lr
 800751a:	bf00      	nop
 800751c:	f3af 8000 	nop.w

08007520 <pxCurrentTCBConst>:
 8007520:	20009d68 	.word	0x20009d68

08007524 <SysTick_Handler>:
{
 8007524:	b508      	push	{r3, lr}
	__asm volatile
 8007526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800752a:	f383 8811 	msr	BASEPRI, r3
 800752e:	f3bf 8f6f 	isb	sy
 8007532:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007536:	f000 ffa7 	bl	8008488 <xTaskIncrementTick>
 800753a:	b128      	cbz	r0, 8007548 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800753c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007540:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007544:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007548:	2300      	movs	r3, #0
 800754a:	f383 8811 	msr	BASEPRI, r3
}
 800754e:	bd08      	pop	{r3, pc}

08007550 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007550:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007554:	2300      	movs	r3, #0
 8007556:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007558:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800755a:	4b05      	ldr	r3, [pc, #20]	; (8007570 <vPortSetupTimerInterrupt+0x20>)
 800755c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007560:	681b      	ldr	r3, [r3, #0]
 8007562:	fbb3 f3f1 	udiv	r3, r3, r1
 8007566:	3b01      	subs	r3, #1
 8007568:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800756a:	2307      	movs	r3, #7
 800756c:	6113      	str	r3, [r2, #16]
}
 800756e:	4770      	bx	lr
 8007570:	20000050 	.word	0x20000050

08007574 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007574:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007578:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800757a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800757e:	4a3a      	ldr	r2, [pc, #232]	; (8007668 <xPortStartScheduler+0xf4>)
 8007580:	4291      	cmp	r1, r2
 8007582:	d108      	bne.n	8007596 <xPortStartScheduler+0x22>
	__asm volatile
 8007584:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007588:	f383 8811 	msr	BASEPRI, r3
 800758c:	f3bf 8f6f 	isb	sy
 8007590:	f3bf 8f4f 	dsb	sy
 8007594:	e7fe      	b.n	8007594 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007596:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800759a:	4b34      	ldr	r3, [pc, #208]	; (800766c <xPortStartScheduler+0xf8>)
 800759c:	429a      	cmp	r2, r3
 800759e:	d108      	bne.n	80075b2 <xPortStartScheduler+0x3e>
 80075a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075a4:	f383 8811 	msr	BASEPRI, r3
 80075a8:	f3bf 8f6f 	isb	sy
 80075ac:	f3bf 8f4f 	dsb	sy
 80075b0:	e7fe      	b.n	80075b0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80075b2:	4b2f      	ldr	r3, [pc, #188]	; (8007670 <xPortStartScheduler+0xfc>)
 80075b4:	781a      	ldrb	r2, [r3, #0]
 80075b6:	b2d2      	uxtb	r2, r2
 80075b8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80075ba:	22ff      	movs	r2, #255	; 0xff
 80075bc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80075be:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80075c0:	4a2c      	ldr	r2, [pc, #176]	; (8007674 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80075c2:	b2db      	uxtb	r3, r3
 80075c4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80075c8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80075cc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80075d0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80075d2:	4a29      	ldr	r2, [pc, #164]	; (8007678 <xPortStartScheduler+0x104>)
 80075d4:	2307      	movs	r3, #7
 80075d6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80075d8:	2100      	movs	r1, #0
 80075da:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80075de:	0600      	lsls	r0, r0, #24
 80075e0:	f103 34ff 	add.w	r4, r3, #4294967295
 80075e4:	d40c      	bmi.n	8007600 <xPortStartScheduler+0x8c>
 80075e6:	b111      	cbz	r1, 80075ee <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80075e8:	2b03      	cmp	r3, #3
 80075ea:	6013      	str	r3, [r2, #0]
 80075ec:	d011      	beq.n	8007612 <xPortStartScheduler+0x9e>
 80075ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075f2:	f383 8811 	msr	BASEPRI, r3
 80075f6:	f3bf 8f6f 	isb	sy
 80075fa:	f3bf 8f4f 	dsb	sy
 80075fe:	e7fe      	b.n	80075fe <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8007600:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8007604:	005b      	lsls	r3, r3, #1
 8007606:	b2db      	uxtb	r3, r3
 8007608:	f88d 3003 	strb.w	r3, [sp, #3]
 800760c:	2101      	movs	r1, #1
 800760e:	4623      	mov	r3, r4
 8007610:	e7e3      	b.n	80075da <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007612:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007616:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007618:	9b01      	ldr	r3, [sp, #4]
 800761a:	4a15      	ldr	r2, [pc, #84]	; (8007670 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800761c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007620:	b2db      	uxtb	r3, r3
 8007622:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007624:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007628:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800762c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007630:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007634:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007638:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800763c:	f7ff ff88 	bl	8007550 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007640:	4b0e      	ldr	r3, [pc, #56]	; (800767c <xPortStartScheduler+0x108>)
 8007642:	2500      	movs	r5, #0
 8007644:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007646:	f7ff feaf 	bl	80073a8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800764a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800764e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007652:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007656:	f7ff fe93 	bl	8007380 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800765a:	f001 f889 	bl	8008770 <vTaskSwitchContext>
	prvTaskExitError();
 800765e:	f7ff fead 	bl	80073bc <prvTaskExitError>
}
 8007662:	4628      	mov	r0, r5
 8007664:	b003      	add	sp, #12
 8007666:	bd30      	pop	{r4, r5, pc}
 8007668:	410fc271 	.word	0x410fc271
 800766c:	410fc270 	.word	0x410fc270
 8007670:	e000e400 	.word	0xe000e400
 8007674:	20009d20 	.word	0x20009d20
 8007678:	20009d24 	.word	0x20009d24
 800767c:	2000005c 	.word	0x2000005c

08007680 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007680:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007684:	2b0f      	cmp	r3, #15
 8007686:	d90e      	bls.n	80076a6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007688:	4a11      	ldr	r2, [pc, #68]	; (80076d0 <vPortValidateInterruptPriority+0x50>)
 800768a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800768c:	4a11      	ldr	r2, [pc, #68]	; (80076d4 <vPortValidateInterruptPriority+0x54>)
 800768e:	7812      	ldrb	r2, [r2, #0]
 8007690:	429a      	cmp	r2, r3
 8007692:	d908      	bls.n	80076a6 <vPortValidateInterruptPriority+0x26>
 8007694:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007698:	f383 8811 	msr	BASEPRI, r3
 800769c:	f3bf 8f6f 	isb	sy
 80076a0:	f3bf 8f4f 	dsb	sy
 80076a4:	e7fe      	b.n	80076a4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80076a6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80076aa:	4a0b      	ldr	r2, [pc, #44]	; (80076d8 <vPortValidateInterruptPriority+0x58>)
 80076ac:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80076b0:	6812      	ldr	r2, [r2, #0]
 80076b2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80076b6:	4293      	cmp	r3, r2
 80076b8:	d908      	bls.n	80076cc <vPortValidateInterruptPriority+0x4c>
 80076ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076be:	f383 8811 	msr	BASEPRI, r3
 80076c2:	f3bf 8f6f 	isb	sy
 80076c6:	f3bf 8f4f 	dsb	sy
 80076ca:	e7fe      	b.n	80076ca <vPortValidateInterruptPriority+0x4a>
	}
 80076cc:	4770      	bx	lr
 80076ce:	bf00      	nop
 80076d0:	e000e3f0 	.word	0xe000e3f0
 80076d4:	20009d20 	.word	0x20009d20
 80076d8:	20009d24 	.word	0x20009d24

080076dc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80076dc:	b510      	push	{r4, lr}
 80076de:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80076e0:	f7ff feb8 	bl	8007454 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80076e4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80076e6:	f7ff fed5 	bl	8007494 <vPortExitCritical>

	return xReturn;
}
 80076ea:	fab4 f084 	clz	r0, r4
 80076ee:	0940      	lsrs	r0, r0, #5
 80076f0:	bd10      	pop	{r4, pc}

080076f2 <prvCopyDataToQueue>:
{
 80076f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076f4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80076f6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80076f8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80076fa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80076fc:	b952      	cbnz	r2, 8007714 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80076fe:	6807      	ldr	r7, [r0, #0]
 8007700:	bb47      	cbnz	r7, 8007754 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007702:	6880      	ldr	r0, [r0, #8]
 8007704:	f001 f994 	bl	8008a30 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007708:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800770a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800770c:	3601      	adds	r6, #1
 800770e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007710:	4628      	mov	r0, r5
 8007712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007714:	b965      	cbnz	r5, 8007730 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007716:	6840      	ldr	r0, [r0, #4]
 8007718:	f012 fc10 	bl	8019f3c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800771c:	6863      	ldr	r3, [r4, #4]
 800771e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007720:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007722:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007724:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007726:	4293      	cmp	r3, r2
 8007728:	d3f0      	bcc.n	800770c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800772a:	6823      	ldr	r3, [r4, #0]
 800772c:	6063      	str	r3, [r4, #4]
 800772e:	e7ed      	b.n	800770c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007730:	68c0      	ldr	r0, [r0, #12]
 8007732:	f012 fc03 	bl	8019f3c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007736:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007738:	68e3      	ldr	r3, [r4, #12]
 800773a:	4251      	negs	r1, r2
 800773c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800773e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007740:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007742:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007744:	bf3e      	ittt	cc
 8007746:	68a3      	ldrcc	r3, [r4, #8]
 8007748:	185b      	addcc	r3, r3, r1
 800774a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800774c:	2d02      	cmp	r5, #2
 800774e:	d101      	bne.n	8007754 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007750:	b116      	cbz	r6, 8007758 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007752:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007754:	2500      	movs	r5, #0
 8007756:	e7d9      	b.n	800770c <prvCopyDataToQueue+0x1a>
 8007758:	4635      	mov	r5, r6
 800775a:	e7d7      	b.n	800770c <prvCopyDataToQueue+0x1a>

0800775c <prvCopyDataFromQueue>:
{
 800775c:	4603      	mov	r3, r0
 800775e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007760:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007762:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007764:	b16a      	cbz	r2, 8007782 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007766:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007768:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800776a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800776c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800776e:	bf28      	it	cs
 8007770:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007772:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007774:	bf28      	it	cs
 8007776:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007778:	68d9      	ldr	r1, [r3, #12]
}
 800777a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800777e:	f012 bbdd 	b.w	8019f3c <memcpy>
}
 8007782:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007786:	4770      	bx	lr

08007788 <prvUnlockQueue>:
{
 8007788:	b570      	push	{r4, r5, r6, lr}
 800778a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800778c:	f7ff fe62 	bl	8007454 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007790:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007794:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007798:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800779a:	2d00      	cmp	r5, #0
 800779c:	dc14      	bgt.n	80077c8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800779e:	23ff      	movs	r3, #255	; 0xff
 80077a0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80077a4:	f7ff fe76 	bl	8007494 <vPortExitCritical>
	taskENTER_CRITICAL();
 80077a8:	f7ff fe54 	bl	8007454 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80077ac:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077b0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80077b4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80077b6:	2d00      	cmp	r5, #0
 80077b8:	dc12      	bgt.n	80077e0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80077ba:	23ff      	movs	r3, #255	; 0xff
 80077bc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80077c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80077c4:	f7ff be66 	b.w	8007494 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80077c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077ca:	2b00      	cmp	r3, #0
 80077cc:	d0e7      	beq.n	800779e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80077ce:	4630      	mov	r0, r6
 80077d0:	f001 f84a 	bl	8008868 <xTaskRemoveFromEventList>
 80077d4:	b108      	cbz	r0, 80077da <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80077d6:	f001 f8d3 	bl	8008980 <vTaskMissedYield>
			--cTxLock;
 80077da:	3d01      	subs	r5, #1
 80077dc:	b26d      	sxtb	r5, r5
 80077de:	e7dc      	b.n	800779a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80077e0:	6923      	ldr	r3, [r4, #16]
 80077e2:	2b00      	cmp	r3, #0
 80077e4:	d0e9      	beq.n	80077ba <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077e6:	4630      	mov	r0, r6
 80077e8:	f001 f83e 	bl	8008868 <xTaskRemoveFromEventList>
 80077ec:	b108      	cbz	r0, 80077f2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80077ee:	f001 f8c7 	bl	8008980 <vTaskMissedYield>
				--cRxLock;
 80077f2:	3d01      	subs	r5, #1
 80077f4:	b26d      	sxtb	r5, r5
 80077f6:	e7de      	b.n	80077b6 <prvUnlockQueue+0x2e>

080077f8 <xQueueGenericReset>:
{
 80077f8:	b538      	push	{r3, r4, r5, lr}
 80077fa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80077fc:	4604      	mov	r4, r0
 80077fe:	b940      	cbnz	r0, 8007812 <xQueueGenericReset+0x1a>
 8007800:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007804:	f383 8811 	msr	BASEPRI, r3
 8007808:	f3bf 8f6f 	isb	sy
 800780c:	f3bf 8f4f 	dsb	sy
 8007810:	e7fe      	b.n	8007810 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007812:	f7ff fe1f 	bl	8007454 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007816:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800781a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800781c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800781e:	434b      	muls	r3, r1
 8007820:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007822:	1a5b      	subs	r3, r3, r1
 8007824:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007826:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007828:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800782a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800782c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800782e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007830:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007834:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007838:	b9a5      	cbnz	r5, 8007864 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800783a:	6923      	ldr	r3, [r4, #16]
 800783c:	b173      	cbz	r3, 800785c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800783e:	f104 0010 	add.w	r0, r4, #16
 8007842:	f001 f811 	bl	8008868 <xTaskRemoveFromEventList>
 8007846:	b148      	cbz	r0, 800785c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007848:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800784c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007850:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007854:	f3bf 8f4f 	dsb	sy
 8007858:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800785c:	f7ff fe1a 	bl	8007494 <vPortExitCritical>
}
 8007860:	2001      	movs	r0, #1
 8007862:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007864:	f104 0010 	add.w	r0, r4, #16
 8007868:	f7ff fd48 	bl	80072fc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800786c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007870:	f7ff fd44 	bl	80072fc <vListInitialise>
 8007874:	e7f2      	b.n	800785c <xQueueGenericReset+0x64>

08007876 <xQueueGenericCreateStatic>:
	{
 8007876:	b513      	push	{r0, r1, r4, lr}
 8007878:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800787a:	b940      	cbnz	r0, 800788e <xQueueGenericCreateStatic+0x18>
 800787c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007880:	f383 8811 	msr	BASEPRI, r3
 8007884:	f3bf 8f6f 	isb	sy
 8007888:	f3bf 8f4f 	dsb	sy
 800788c:	e7fe      	b.n	800788c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800788e:	b943      	cbnz	r3, 80078a2 <xQueueGenericCreateStatic+0x2c>
 8007890:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007894:	f383 8811 	msr	BASEPRI, r3
 8007898:	f3bf 8f6f 	isb	sy
 800789c:	f3bf 8f4f 	dsb	sy
 80078a0:	e7fe      	b.n	80078a0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80078a2:	b14a      	cbz	r2, 80078b8 <xQueueGenericCreateStatic+0x42>
 80078a4:	b991      	cbnz	r1, 80078cc <xQueueGenericCreateStatic+0x56>
 80078a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078aa:	f383 8811 	msr	BASEPRI, r3
 80078ae:	f3bf 8f6f 	isb	sy
 80078b2:	f3bf 8f4f 	dsb	sy
 80078b6:	e7fe      	b.n	80078b6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80078b8:	b141      	cbz	r1, 80078cc <xQueueGenericCreateStatic+0x56>
 80078ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078be:	f383 8811 	msr	BASEPRI, r3
 80078c2:	f3bf 8f6f 	isb	sy
 80078c6:	f3bf 8f4f 	dsb	sy
 80078ca:	e7fe      	b.n	80078ca <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80078cc:	2350      	movs	r3, #80	; 0x50
 80078ce:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80078d0:	9b01      	ldr	r3, [sp, #4]
 80078d2:	2b50      	cmp	r3, #80	; 0x50
 80078d4:	d008      	beq.n	80078e8 <xQueueGenericCreateStatic+0x72>
 80078d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078da:	f383 8811 	msr	BASEPRI, r3
 80078de:	f3bf 8f6f 	isb	sy
 80078e2:	f3bf 8f4f 	dsb	sy
 80078e6:	e7fe      	b.n	80078e6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80078e8:	2900      	cmp	r1, #0
 80078ea:	bf08      	it	eq
 80078ec:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80078ee:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80078f0:	6022      	str	r2, [r4, #0]
 80078f2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80078f4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80078f8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80078fc:	4619      	mov	r1, r3
 80078fe:	4620      	mov	r0, r4
 8007900:	f7ff ff7a 	bl	80077f8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007904:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007908:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800790c:	4620      	mov	r0, r4
 800790e:	b002      	add	sp, #8
 8007910:	bd10      	pop	{r4, pc}

08007912 <xQueueGenericCreate>:
	{
 8007912:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007914:	460d      	mov	r5, r1
 8007916:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007918:	4606      	mov	r6, r0
 800791a:	b940      	cbnz	r0, 800792e <xQueueGenericCreate+0x1c>
 800791c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007920:	f383 8811 	msr	BASEPRI, r3
 8007924:	f3bf 8f6f 	isb	sy
 8007928:	f3bf 8f4f 	dsb	sy
 800792c:	e7fe      	b.n	800792c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800792e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007930:	3050      	adds	r0, #80	; 0x50
 8007932:	f7ff fc19 	bl	8007168 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007936:	4604      	mov	r4, r0
 8007938:	b170      	cbz	r0, 8007958 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800793a:	2300      	movs	r3, #0
 800793c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007940:	b165      	cbz	r5, 800795c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007942:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007946:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800794a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800794c:	2101      	movs	r1, #1
 800794e:	4620      	mov	r0, r4
 8007950:	f7ff ff52 	bl	80077f8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007954:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007958:	4620      	mov	r0, r4
 800795a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800795c:	4603      	mov	r3, r0
 800795e:	e7f2      	b.n	8007946 <xQueueGenericCreate+0x34>

08007960 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007960:	b513      	push	{r0, r1, r4, lr}
 8007962:	4613      	mov	r3, r2
 8007964:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007966:	b940      	cbnz	r0, 800797a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007968:	f04f 0350 	mov.w	r3, #80	; 0x50
 800796c:	f383 8811 	msr	BASEPRI, r3
 8007970:	f3bf 8f6f 	isb	sy
 8007974:	f3bf 8f4f 	dsb	sy
 8007978:	e7fe      	b.n	8007978 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800797a:	4288      	cmp	r0, r1
 800797c:	d208      	bcs.n	8007990 <xQueueCreateCountingSemaphoreStatic+0x30>
 800797e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007982:	f383 8811 	msr	BASEPRI, r3
 8007986:	f3bf 8f6f 	isb	sy
 800798a:	f3bf 8f4f 	dsb	sy
 800798e:	e7fe      	b.n	800798e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007990:	2202      	movs	r2, #2
 8007992:	9200      	str	r2, [sp, #0]
 8007994:	2200      	movs	r2, #0
 8007996:	4611      	mov	r1, r2
 8007998:	f7ff ff6d 	bl	8007876 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800799c:	b100      	cbz	r0, 80079a0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800799e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80079a0:	b002      	add	sp, #8
 80079a2:	bd10      	pop	{r4, pc}

080079a4 <xQueueCreateCountingSemaphore>:
	{
 80079a4:	b510      	push	{r4, lr}
 80079a6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80079a8:	b940      	cbnz	r0, 80079bc <xQueueCreateCountingSemaphore+0x18>
 80079aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079ae:	f383 8811 	msr	BASEPRI, r3
 80079b2:	f3bf 8f6f 	isb	sy
 80079b6:	f3bf 8f4f 	dsb	sy
 80079ba:	e7fe      	b.n	80079ba <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80079bc:	4288      	cmp	r0, r1
 80079be:	d208      	bcs.n	80079d2 <xQueueCreateCountingSemaphore+0x2e>
 80079c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079c4:	f383 8811 	msr	BASEPRI, r3
 80079c8:	f3bf 8f6f 	isb	sy
 80079cc:	f3bf 8f4f 	dsb	sy
 80079d0:	e7fe      	b.n	80079d0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80079d2:	2202      	movs	r2, #2
 80079d4:	2100      	movs	r1, #0
 80079d6:	f7ff ff9c 	bl	8007912 <xQueueGenericCreate>
		if( xHandle != NULL )
 80079da:	b100      	cbz	r0, 80079de <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80079dc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80079de:	bd10      	pop	{r4, pc}

080079e0 <xQueueGenericSend>:
{
 80079e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079e4:	b085      	sub	sp, #20
 80079e6:	4688      	mov	r8, r1
 80079e8:	9201      	str	r2, [sp, #4]
 80079ea:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80079ec:	4604      	mov	r4, r0
 80079ee:	b940      	cbnz	r0, 8007a02 <xQueueGenericSend+0x22>
 80079f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079f4:	f383 8811 	msr	BASEPRI, r3
 80079f8:	f3bf 8f6f 	isb	sy
 80079fc:	f3bf 8f4f 	dsb	sy
 8007a00:	e7fe      	b.n	8007a00 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007a02:	b951      	cbnz	r1, 8007a1a <xQueueGenericSend+0x3a>
 8007a04:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007a06:	b143      	cbz	r3, 8007a1a <xQueueGenericSend+0x3a>
 8007a08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a0c:	f383 8811 	msr	BASEPRI, r3
 8007a10:	f3bf 8f6f 	isb	sy
 8007a14:	f3bf 8f4f 	dsb	sy
 8007a18:	e7fe      	b.n	8007a18 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007a1a:	2f02      	cmp	r7, #2
 8007a1c:	d10b      	bne.n	8007a36 <xQueueGenericSend+0x56>
 8007a1e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a20:	2b01      	cmp	r3, #1
 8007a22:	d008      	beq.n	8007a36 <xQueueGenericSend+0x56>
 8007a24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a28:	f383 8811 	msr	BASEPRI, r3
 8007a2c:	f3bf 8f6f 	isb	sy
 8007a30:	f3bf 8f4f 	dsb	sy
 8007a34:	e7fe      	b.n	8007a34 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007a36:	f000 ffa9 	bl	800898c <xTaskGetSchedulerState>
 8007a3a:	4606      	mov	r6, r0
 8007a3c:	b950      	cbnz	r0, 8007a54 <xQueueGenericSend+0x74>
 8007a3e:	9b01      	ldr	r3, [sp, #4]
 8007a40:	b14b      	cbz	r3, 8007a56 <xQueueGenericSend+0x76>
 8007a42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a46:	f383 8811 	msr	BASEPRI, r3
 8007a4a:	f3bf 8f6f 	isb	sy
 8007a4e:	f3bf 8f4f 	dsb	sy
 8007a52:	e7fe      	b.n	8007a52 <xQueueGenericSend+0x72>
 8007a54:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007a56:	f04f 0900 	mov.w	r9, #0
 8007a5a:	e037      	b.n	8007acc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007a5c:	9d01      	ldr	r5, [sp, #4]
 8007a5e:	b91d      	cbnz	r5, 8007a68 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007a60:	f7ff fd18 	bl	8007494 <vPortExitCritical>
			return errQUEUE_FULL;
 8007a64:	2000      	movs	r0, #0
 8007a66:	e052      	b.n	8007b0e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007a68:	b916      	cbnz	r6, 8007a70 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007a6a:	a802      	add	r0, sp, #8
 8007a6c:	f000 ff40 	bl	80088f0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007a70:	f7ff fd10 	bl	8007494 <vPortExitCritical>
		vTaskSuspendAll();
 8007a74:	f000 fcfa 	bl	800846c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007a78:	f7ff fcec 	bl	8007454 <vPortEnterCritical>
 8007a7c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007a80:	2bff      	cmp	r3, #255	; 0xff
 8007a82:	bf08      	it	eq
 8007a84:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007a88:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007a8c:	2bff      	cmp	r3, #255	; 0xff
 8007a8e:	bf08      	it	eq
 8007a90:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007a94:	f7ff fcfe 	bl	8007494 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a98:	a901      	add	r1, sp, #4
 8007a9a:	a802      	add	r0, sp, #8
 8007a9c:	f000 ff34 	bl	8008908 <xTaskCheckForTimeOut>
 8007aa0:	2800      	cmp	r0, #0
 8007aa2:	d14a      	bne.n	8007b3a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007aa4:	f7ff fcd6 	bl	8007454 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007aa8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007aaa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007aac:	429a      	cmp	r2, r3
 8007aae:	d131      	bne.n	8007b14 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007ab0:	f7ff fcf0 	bl	8007494 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007ab4:	9901      	ldr	r1, [sp, #4]
 8007ab6:	f104 0010 	add.w	r0, r4, #16
 8007aba:	f000 fe9d 	bl	80087f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007abe:	4620      	mov	r0, r4
 8007ac0:	f7ff fe62 	bl	8007788 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ac4:	f000 fd76 	bl	80085b4 <xTaskResumeAll>
 8007ac8:	b360      	cbz	r0, 8007b24 <xQueueGenericSend+0x144>
 8007aca:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007acc:	f7ff fcc2 	bl	8007454 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007ad0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007ad2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ad4:	429a      	cmp	r2, r3
 8007ad6:	d301      	bcc.n	8007adc <xQueueGenericSend+0xfc>
 8007ad8:	2f02      	cmp	r7, #2
 8007ada:	d1bf      	bne.n	8007a5c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007adc:	463a      	mov	r2, r7
 8007ade:	4641      	mov	r1, r8
 8007ae0:	4620      	mov	r0, r4
 8007ae2:	f7ff fe06 	bl	80076f2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007ae6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ae8:	b11b      	cbz	r3, 8007af2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007aea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007aee:	f000 febb 	bl	8008868 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007af2:	b148      	cbz	r0, 8007b08 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8007af4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007af8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007afc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007b00:	f3bf 8f4f 	dsb	sy
 8007b04:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007b08:	f7ff fcc4 	bl	8007494 <vPortExitCritical>
				return pdPASS;
 8007b0c:	2001      	movs	r0, #1
}
 8007b0e:	b005      	add	sp, #20
 8007b10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8007b14:	f7ff fcbe 	bl	8007494 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007b18:	4620      	mov	r0, r4
 8007b1a:	f7ff fe35 	bl	8007788 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007b1e:	f000 fd49 	bl	80085b4 <xTaskResumeAll>
 8007b22:	e7d2      	b.n	8007aca <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007b24:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007b28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b2c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007b30:	f3bf 8f4f 	dsb	sy
 8007b34:	f3bf 8f6f 	isb	sy
 8007b38:	e7c7      	b.n	8007aca <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8007b3a:	4620      	mov	r0, r4
 8007b3c:	f7ff fe24 	bl	8007788 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007b40:	f000 fd38 	bl	80085b4 <xTaskResumeAll>
 8007b44:	e78e      	b.n	8007a64 <xQueueGenericSend+0x84>

08007b46 <xQueueGenericSendFromISR>:
{
 8007b46:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b4a:	4689      	mov	r9, r1
 8007b4c:	4690      	mov	r8, r2
 8007b4e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007b50:	4604      	mov	r4, r0
 8007b52:	b940      	cbnz	r0, 8007b66 <xQueueGenericSendFromISR+0x20>
 8007b54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b58:	f383 8811 	msr	BASEPRI, r3
 8007b5c:	f3bf 8f6f 	isb	sy
 8007b60:	f3bf 8f4f 	dsb	sy
 8007b64:	e7fe      	b.n	8007b64 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b66:	b951      	cbnz	r1, 8007b7e <xQueueGenericSendFromISR+0x38>
 8007b68:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007b6a:	b143      	cbz	r3, 8007b7e <xQueueGenericSendFromISR+0x38>
 8007b6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b70:	f383 8811 	msr	BASEPRI, r3
 8007b74:	f3bf 8f6f 	isb	sy
 8007b78:	f3bf 8f4f 	dsb	sy
 8007b7c:	e7fe      	b.n	8007b7c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007b7e:	2f02      	cmp	r7, #2
 8007b80:	d10b      	bne.n	8007b9a <xQueueGenericSendFromISR+0x54>
 8007b82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b84:	2b01      	cmp	r3, #1
 8007b86:	d008      	beq.n	8007b9a <xQueueGenericSendFromISR+0x54>
 8007b88:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b8c:	f383 8811 	msr	BASEPRI, r3
 8007b90:	f3bf 8f6f 	isb	sy
 8007b94:	f3bf 8f4f 	dsb	sy
 8007b98:	e7fe      	b.n	8007b98 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007b9a:	f7ff fd71 	bl	8007680 <vPortValidateInterruptPriority>
	__asm volatile
 8007b9e:	f3ef 8611 	mrs	r6, BASEPRI
 8007ba2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ba6:	f383 8811 	msr	BASEPRI, r3
 8007baa:	f3bf 8f6f 	isb	sy
 8007bae:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007bb2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007bb4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007bb6:	429a      	cmp	r2, r3
 8007bb8:	d301      	bcc.n	8007bbe <xQueueGenericSendFromISR+0x78>
 8007bba:	2f02      	cmp	r7, #2
 8007bbc:	d122      	bne.n	8007c04 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007bbe:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007bc2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8007bc4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007bc6:	4649      	mov	r1, r9
 8007bc8:	4620      	mov	r0, r4
 8007bca:	f7ff fd92 	bl	80076f2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007bce:	1c6b      	adds	r3, r5, #1
 8007bd0:	d113      	bne.n	8007bfa <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007bd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bd4:	b90b      	cbnz	r3, 8007bda <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8007bd6:	2001      	movs	r0, #1
 8007bd8:	e00b      	b.n	8007bf2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007bda:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007bde:	f000 fe43 	bl	8008868 <xTaskRemoveFromEventList>
 8007be2:	2800      	cmp	r0, #0
 8007be4:	d0f7      	beq.n	8007bd6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8007be6:	f1b8 0f00 	cmp.w	r8, #0
 8007bea:	d0f4      	beq.n	8007bd6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007bec:	2001      	movs	r0, #1
 8007bee:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007bf2:	f386 8811 	msr	BASEPRI, r6
}
 8007bf6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007bfa:	3501      	adds	r5, #1
 8007bfc:	b26d      	sxtb	r5, r5
 8007bfe:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007c02:	e7e8      	b.n	8007bd6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8007c04:	2000      	movs	r0, #0
 8007c06:	e7f4      	b.n	8007bf2 <xQueueGenericSendFromISR+0xac>

08007c08 <xQueueGiveFromISR>:
{
 8007c08:	b570      	push	{r4, r5, r6, lr}
 8007c0a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007c0c:	4604      	mov	r4, r0
 8007c0e:	b940      	cbnz	r0, 8007c22 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007c10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c14:	f383 8811 	msr	BASEPRI, r3
 8007c18:	f3bf 8f6f 	isb	sy
 8007c1c:	f3bf 8f4f 	dsb	sy
 8007c20:	e7fe      	b.n	8007c20 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007c22:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007c24:	b143      	cbz	r3, 8007c38 <xQueueGiveFromISR+0x30>
 8007c26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c2a:	f383 8811 	msr	BASEPRI, r3
 8007c2e:	f3bf 8f6f 	isb	sy
 8007c32:	f3bf 8f4f 	dsb	sy
 8007c36:	e7fe      	b.n	8007c36 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007c38:	6803      	ldr	r3, [r0, #0]
 8007c3a:	b953      	cbnz	r3, 8007c52 <xQueueGiveFromISR+0x4a>
 8007c3c:	6883      	ldr	r3, [r0, #8]
 8007c3e:	b143      	cbz	r3, 8007c52 <xQueueGiveFromISR+0x4a>
 8007c40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c44:	f383 8811 	msr	BASEPRI, r3
 8007c48:	f3bf 8f6f 	isb	sy
 8007c4c:	f3bf 8f4f 	dsb	sy
 8007c50:	e7fe      	b.n	8007c50 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007c52:	f7ff fd15 	bl	8007680 <vPortValidateInterruptPriority>
	__asm volatile
 8007c56:	f3ef 8611 	mrs	r6, BASEPRI
 8007c5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c5e:	f383 8811 	msr	BASEPRI, r3
 8007c62:	f3bf 8f6f 	isb	sy
 8007c66:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c6a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007c6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007c6e:	4293      	cmp	r3, r2
 8007c70:	d91c      	bls.n	8007cac <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c72:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c76:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007c78:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c7a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c7c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007c7e:	d110      	bne.n	8007ca2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007c80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007c82:	b90b      	cbnz	r3, 8007c88 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007c84:	2001      	movs	r0, #1
 8007c86:	e009      	b.n	8007c9c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007c88:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007c8c:	f000 fdec 	bl	8008868 <xTaskRemoveFromEventList>
 8007c90:	2800      	cmp	r0, #0
 8007c92:	d0f7      	beq.n	8007c84 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007c94:	2d00      	cmp	r5, #0
 8007c96:	d0f5      	beq.n	8007c84 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007c98:	2001      	movs	r0, #1
 8007c9a:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007c9c:	f386 8811 	msr	BASEPRI, r6
}
 8007ca0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007ca2:	3301      	adds	r3, #1
 8007ca4:	b25b      	sxtb	r3, r3
 8007ca6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007caa:	e7eb      	b.n	8007c84 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007cac:	2000      	movs	r0, #0
 8007cae:	e7f5      	b.n	8007c9c <xQueueGiveFromISR+0x94>

08007cb0 <xQueueReceive>:
{
 8007cb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007cb4:	460f      	mov	r7, r1
 8007cb6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007cb8:	4604      	mov	r4, r0
 8007cba:	b940      	cbnz	r0, 8007cce <xQueueReceive+0x1e>
	__asm volatile
 8007cbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cc0:	f383 8811 	msr	BASEPRI, r3
 8007cc4:	f3bf 8f6f 	isb	sy
 8007cc8:	f3bf 8f4f 	dsb	sy
 8007ccc:	e7fe      	b.n	8007ccc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007cce:	b951      	cbnz	r1, 8007ce6 <xQueueReceive+0x36>
 8007cd0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007cd2:	b143      	cbz	r3, 8007ce6 <xQueueReceive+0x36>
 8007cd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cd8:	f383 8811 	msr	BASEPRI, r3
 8007cdc:	f3bf 8f6f 	isb	sy
 8007ce0:	f3bf 8f4f 	dsb	sy
 8007ce4:	e7fe      	b.n	8007ce4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007ce6:	f000 fe51 	bl	800898c <xTaskGetSchedulerState>
 8007cea:	4606      	mov	r6, r0
 8007cec:	b950      	cbnz	r0, 8007d04 <xQueueReceive+0x54>
 8007cee:	9b01      	ldr	r3, [sp, #4]
 8007cf0:	b14b      	cbz	r3, 8007d06 <xQueueReceive+0x56>
 8007cf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cf6:	f383 8811 	msr	BASEPRI, r3
 8007cfa:	f3bf 8f6f 	isb	sy
 8007cfe:	f3bf 8f4f 	dsb	sy
 8007d02:	e7fe      	b.n	8007d02 <xQueueReceive+0x52>
 8007d04:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007d06:	f04f 0800 	mov.w	r8, #0
 8007d0a:	e03d      	b.n	8007d88 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007d0c:	9d01      	ldr	r5, [sp, #4]
 8007d0e:	b91d      	cbnz	r5, 8007d18 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8007d10:	f7ff fbc0 	bl	8007494 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007d14:	2000      	movs	r0, #0
 8007d16:	e056      	b.n	8007dc6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8007d18:	b916      	cbnz	r6, 8007d20 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007d1a:	a802      	add	r0, sp, #8
 8007d1c:	f000 fde8 	bl	80088f0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007d20:	f7ff fbb8 	bl	8007494 <vPortExitCritical>
		vTaskSuspendAll();
 8007d24:	f000 fba2 	bl	800846c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007d28:	f7ff fb94 	bl	8007454 <vPortEnterCritical>
 8007d2c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007d30:	2bff      	cmp	r3, #255	; 0xff
 8007d32:	bf08      	it	eq
 8007d34:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007d38:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007d3c:	2bff      	cmp	r3, #255	; 0xff
 8007d3e:	bf08      	it	eq
 8007d40:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007d44:	f7ff fba6 	bl	8007494 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007d48:	a901      	add	r1, sp, #4
 8007d4a:	a802      	add	r0, sp, #8
 8007d4c:	f000 fddc 	bl	8008908 <xTaskCheckForTimeOut>
 8007d50:	2800      	cmp	r0, #0
 8007d52:	d141      	bne.n	8007dd8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d54:	4620      	mov	r0, r4
 8007d56:	f7ff fcc1 	bl	80076dc <prvIsQueueEmpty>
 8007d5a:	b3b8      	cbz	r0, 8007dcc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007d5c:	9901      	ldr	r1, [sp, #4]
 8007d5e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d62:	f000 fd49 	bl	80087f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007d66:	4620      	mov	r0, r4
 8007d68:	f7ff fd0e 	bl	8007788 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007d6c:	f000 fc22 	bl	80085b4 <xTaskResumeAll>
 8007d70:	b948      	cbnz	r0, 8007d86 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007d72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007d76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007d7e:	f3bf 8f4f 	dsb	sy
 8007d82:	f3bf 8f6f 	isb	sy
 8007d86:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007d88:	f7ff fb64 	bl	8007454 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007d8c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007d8e:	2d00      	cmp	r5, #0
 8007d90:	d0bc      	beq.n	8007d0c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007d92:	4639      	mov	r1, r7
 8007d94:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007d96:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007d98:	f7ff fce0 	bl	800775c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007d9c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d9e:	6923      	ldr	r3, [r4, #16]
 8007da0:	b173      	cbz	r3, 8007dc0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007da2:	f104 0010 	add.w	r0, r4, #16
 8007da6:	f000 fd5f 	bl	8008868 <xTaskRemoveFromEventList>
 8007daa:	b148      	cbz	r0, 8007dc0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8007dac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007db0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007db4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007db8:	f3bf 8f4f 	dsb	sy
 8007dbc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007dc0:	f7ff fb68 	bl	8007494 <vPortExitCritical>
				return pdPASS;
 8007dc4:	2001      	movs	r0, #1
}
 8007dc6:	b004      	add	sp, #16
 8007dc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007dcc:	4620      	mov	r0, r4
 8007dce:	f7ff fcdb 	bl	8007788 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007dd2:	f000 fbef 	bl	80085b4 <xTaskResumeAll>
 8007dd6:	e7d6      	b.n	8007d86 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007dd8:	4620      	mov	r0, r4
 8007dda:	f7ff fcd5 	bl	8007788 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007dde:	f000 fbe9 	bl	80085b4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007de2:	4620      	mov	r0, r4
 8007de4:	f7ff fc7a 	bl	80076dc <prvIsQueueEmpty>
 8007de8:	2800      	cmp	r0, #0
 8007dea:	d0cc      	beq.n	8007d86 <xQueueReceive+0xd6>
 8007dec:	e792      	b.n	8007d14 <xQueueReceive+0x64>

08007dee <xQueueSemaphoreTake>:
{
 8007dee:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007df0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007df2:	4604      	mov	r4, r0
{
 8007df4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007df6:	b940      	cbnz	r0, 8007e0a <xQueueSemaphoreTake+0x1c>
 8007df8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dfc:	f383 8811 	msr	BASEPRI, r3
 8007e00:	f3bf 8f6f 	isb	sy
 8007e04:	f3bf 8f4f 	dsb	sy
 8007e08:	e7fe      	b.n	8007e08 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007e0a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007e0c:	b145      	cbz	r5, 8007e20 <xQueueSemaphoreTake+0x32>
 8007e0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e12:	f383 8811 	msr	BASEPRI, r3
 8007e16:	f3bf 8f6f 	isb	sy
 8007e1a:	f3bf 8f4f 	dsb	sy
 8007e1e:	e7fe      	b.n	8007e1e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e20:	f000 fdb4 	bl	800898c <xTaskGetSchedulerState>
 8007e24:	4606      	mov	r6, r0
 8007e26:	b950      	cbnz	r0, 8007e3e <xQueueSemaphoreTake+0x50>
 8007e28:	9b01      	ldr	r3, [sp, #4]
 8007e2a:	b15b      	cbz	r3, 8007e44 <xQueueSemaphoreTake+0x56>
 8007e2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e30:	f383 8811 	msr	BASEPRI, r3
 8007e34:	f3bf 8f6f 	isb	sy
 8007e38:	f3bf 8f4f 	dsb	sy
 8007e3c:	e7fe      	b.n	8007e3c <xQueueSemaphoreTake+0x4e>
 8007e3e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007e40:	2700      	movs	r7, #0
 8007e42:	e053      	b.n	8007eec <xQueueSemaphoreTake+0xfe>
 8007e44:	4605      	mov	r5, r0
 8007e46:	e7fb      	b.n	8007e40 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e48:	9b01      	ldr	r3, [sp, #4]
 8007e4a:	b963      	cbnz	r3, 8007e66 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007e4c:	b145      	cbz	r5, 8007e60 <xQueueSemaphoreTake+0x72>
 8007e4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e52:	f383 8811 	msr	BASEPRI, r3
 8007e56:	f3bf 8f6f 	isb	sy
 8007e5a:	f3bf 8f4f 	dsb	sy
 8007e5e:	e7fe      	b.n	8007e5e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8007e60:	f7ff fb18 	bl	8007494 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007e64:	e062      	b.n	8007f2c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8007e66:	b916      	cbnz	r6, 8007e6e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e68:	a802      	add	r0, sp, #8
 8007e6a:	f000 fd41 	bl	80088f0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e6e:	f7ff fb11 	bl	8007494 <vPortExitCritical>
		vTaskSuspendAll();
 8007e72:	f000 fafb 	bl	800846c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e76:	f7ff faed 	bl	8007454 <vPortEnterCritical>
 8007e7a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007e7e:	2bff      	cmp	r3, #255	; 0xff
 8007e80:	bf08      	it	eq
 8007e82:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007e86:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007e8a:	2bff      	cmp	r3, #255	; 0xff
 8007e8c:	bf08      	it	eq
 8007e8e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007e92:	f7ff faff 	bl	8007494 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007e96:	a901      	add	r1, sp, #4
 8007e98:	a802      	add	r0, sp, #8
 8007e9a:	f000 fd35 	bl	8008908 <xTaskCheckForTimeOut>
 8007e9e:	2800      	cmp	r0, #0
 8007ea0:	d14d      	bne.n	8007f3e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007ea2:	4620      	mov	r0, r4
 8007ea4:	f7ff fc1a 	bl	80076dc <prvIsQueueEmpty>
 8007ea8:	2800      	cmp	r0, #0
 8007eaa:	d042      	beq.n	8007f32 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007eac:	6823      	ldr	r3, [r4, #0]
 8007eae:	b93b      	cbnz	r3, 8007ec0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8007eb0:	f7ff fad0 	bl	8007454 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007eb4:	68a0      	ldr	r0, [r4, #8]
 8007eb6:	f000 fd79 	bl	80089ac <xTaskPriorityInherit>
 8007eba:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007ebc:	f7ff faea 	bl	8007494 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007ec0:	9901      	ldr	r1, [sp, #4]
 8007ec2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ec6:	f000 fc97 	bl	80087f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007eca:	4620      	mov	r0, r4
 8007ecc:	f7ff fc5c 	bl	8007788 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ed0:	f000 fb70 	bl	80085b4 <xTaskResumeAll>
 8007ed4:	b948      	cbnz	r0, 8007eea <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007ed6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007eda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ede:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007ee2:	f3bf 8f4f 	dsb	sy
 8007ee6:	f3bf 8f6f 	isb	sy
 8007eea:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007eec:	f7ff fab2 	bl	8007454 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007ef0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007ef2:	2b00      	cmp	r3, #0
 8007ef4:	d0a8      	beq.n	8007e48 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007ef6:	3b01      	subs	r3, #1
 8007ef8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007efa:	6823      	ldr	r3, [r4, #0]
 8007efc:	b913      	cbnz	r3, 8007f04 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007efe:	f000 fe2d 	bl	8008b5c <pvTaskIncrementMutexHeldCount>
 8007f02:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007f04:	6923      	ldr	r3, [r4, #16]
 8007f06:	b173      	cbz	r3, 8007f26 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007f08:	f104 0010 	add.w	r0, r4, #16
 8007f0c:	f000 fcac 	bl	8008868 <xTaskRemoveFromEventList>
 8007f10:	b148      	cbz	r0, 8007f26 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8007f12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f1e:	f3bf 8f4f 	dsb	sy
 8007f22:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007f26:	f7ff fab5 	bl	8007494 <vPortExitCritical>
				return pdPASS;
 8007f2a:	2501      	movs	r5, #1
}
 8007f2c:	4628      	mov	r0, r5
 8007f2e:	b005      	add	sp, #20
 8007f30:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8007f32:	4620      	mov	r0, r4
 8007f34:	f7ff fc28 	bl	8007788 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007f38:	f000 fb3c 	bl	80085b4 <xTaskResumeAll>
 8007f3c:	e7d5      	b.n	8007eea <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007f3e:	4620      	mov	r0, r4
 8007f40:	f7ff fc22 	bl	8007788 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007f44:	f000 fb36 	bl	80085b4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007f48:	4620      	mov	r0, r4
 8007f4a:	f7ff fbc7 	bl	80076dc <prvIsQueueEmpty>
 8007f4e:	2800      	cmp	r0, #0
 8007f50:	d0cb      	beq.n	8007eea <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007f52:	2d00      	cmp	r5, #0
 8007f54:	d0ea      	beq.n	8007f2c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8007f56:	f7ff fa7d 	bl	8007454 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007f5a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007f5c:	b119      	cbz	r1, 8007f66 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007f5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f60:	6819      	ldr	r1, [r3, #0]
 8007f62:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007f66:	68a0      	ldr	r0, [r4, #8]
 8007f68:	f000 fda6 	bl	8008ab8 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007f6c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007f6e:	f7ff fa91 	bl	8007494 <vPortExitCritical>
 8007f72:	e7db      	b.n	8007f2c <xQueueSemaphoreTake+0x13e>

08007f74 <xQueueReceiveFromISR>:
{
 8007f74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f78:	4689      	mov	r9, r1
 8007f7a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007f7c:	4605      	mov	r5, r0
 8007f7e:	b940      	cbnz	r0, 8007f92 <xQueueReceiveFromISR+0x1e>
 8007f80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f84:	f383 8811 	msr	BASEPRI, r3
 8007f88:	f3bf 8f6f 	isb	sy
 8007f8c:	f3bf 8f4f 	dsb	sy
 8007f90:	e7fe      	b.n	8007f90 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f92:	b951      	cbnz	r1, 8007faa <xQueueReceiveFromISR+0x36>
 8007f94:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007f96:	b143      	cbz	r3, 8007faa <xQueueReceiveFromISR+0x36>
 8007f98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f9c:	f383 8811 	msr	BASEPRI, r3
 8007fa0:	f3bf 8f6f 	isb	sy
 8007fa4:	f3bf 8f4f 	dsb	sy
 8007fa8:	e7fe      	b.n	8007fa8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007faa:	f7ff fb69 	bl	8007680 <vPortValidateInterruptPriority>
	__asm volatile
 8007fae:	f3ef 8711 	mrs	r7, BASEPRI
 8007fb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fb6:	f383 8811 	msr	BASEPRI, r3
 8007fba:	f3bf 8f6f 	isb	sy
 8007fbe:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007fc2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007fc4:	b31c      	cbz	r4, 800800e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007fc6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007fca:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007fcc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007fce:	4628      	mov	r0, r5
 8007fd0:	f7ff fbc4 	bl	800775c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007fd4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007fd6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007fd8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007fda:	d113      	bne.n	8008004 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007fdc:	692b      	ldr	r3, [r5, #16]
 8007fde:	b90b      	cbnz	r3, 8007fe4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007fe0:	2001      	movs	r0, #1
 8007fe2:	e00b      	b.n	8007ffc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007fe4:	f105 0010 	add.w	r0, r5, #16
 8007fe8:	f000 fc3e 	bl	8008868 <xTaskRemoveFromEventList>
 8007fec:	2800      	cmp	r0, #0
 8007fee:	d0f7      	beq.n	8007fe0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007ff0:	f1b8 0f00 	cmp.w	r8, #0
 8007ff4:	d0f4      	beq.n	8007fe0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007ff6:	2001      	movs	r0, #1
 8007ff8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007ffc:	f387 8811 	msr	BASEPRI, r7
}
 8008000:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8008004:	3601      	adds	r6, #1
 8008006:	b276      	sxtb	r6, r6
 8008008:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800800c:	e7e8      	b.n	8007fe0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800800e:	4620      	mov	r0, r4
 8008010:	e7f4      	b.n	8007ffc <xQueueReceiveFromISR+0x88>
	...

08008014 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008014:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008016:	4a07      	ldr	r2, [pc, #28]	; (8008034 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008018:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800801a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800801e:	b92c      	cbnz	r4, 800802c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008020:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008024:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008028:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800802a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800802c:	3301      	adds	r3, #1
 800802e:	2b08      	cmp	r3, #8
 8008030:	d1f3      	bne.n	800801a <vQueueAddToRegistry+0x6>
 8008032:	e7fa      	b.n	800802a <vQueueAddToRegistry+0x16>
 8008034:	20009d28 	.word	0x20009d28

08008038 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008038:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800803a:	4a08      	ldr	r2, [pc, #32]	; (800805c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800803c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800803e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008042:	684c      	ldr	r4, [r1, #4]
 8008044:	4284      	cmp	r4, r0
 8008046:	d104      	bne.n	8008052 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008048:	2000      	movs	r0, #0
 800804a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800804e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008050:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008052:	3301      	adds	r3, #1
 8008054:	2b08      	cmp	r3, #8
 8008056:	d1f2      	bne.n	800803e <vQueueUnregisterQueue+0x6>
 8008058:	e7fa      	b.n	8008050 <vQueueUnregisterQueue+0x18>
 800805a:	bf00      	nop
 800805c:	20009d28 	.word	0x20009d28

08008060 <vQueueDelete>:
{
 8008060:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008062:	4604      	mov	r4, r0
 8008064:	b940      	cbnz	r0, 8008078 <vQueueDelete+0x18>
	__asm volatile
 8008066:	f04f 0350 	mov.w	r3, #80	; 0x50
 800806a:	f383 8811 	msr	BASEPRI, r3
 800806e:	f3bf 8f6f 	isb	sy
 8008072:	f3bf 8f4f 	dsb	sy
 8008076:	e7fe      	b.n	8008076 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8008078:	f7ff ffde 	bl	8008038 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800807c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008080:	b923      	cbnz	r3, 800808c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008082:	4620      	mov	r0, r4
}
 8008084:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008088:	f7ff b900 	b.w	800728c <vPortFree>
}
 800808c:	bd10      	pop	{r4, pc}

0800808e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800808e:	b570      	push	{r4, r5, r6, lr}
 8008090:	4604      	mov	r4, r0
 8008092:	460d      	mov	r5, r1
 8008094:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008096:	f7ff f9dd 	bl	8007454 <vPortEnterCritical>
 800809a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800809e:	2bff      	cmp	r3, #255	; 0xff
 80080a0:	bf04      	itt	eq
 80080a2:	2300      	moveq	r3, #0
 80080a4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80080a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80080ac:	2bff      	cmp	r3, #255	; 0xff
 80080ae:	bf04      	itt	eq
 80080b0:	2300      	moveq	r3, #0
 80080b2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80080b6:	f7ff f9ed 	bl	8007494 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80080ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080bc:	b92b      	cbnz	r3, 80080ca <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80080be:	4632      	mov	r2, r6
 80080c0:	4629      	mov	r1, r5
 80080c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80080c6:	f000 fbb1 	bl	800882c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80080ca:	4620      	mov	r0, r4
	}
 80080cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80080d0:	f7ff bb5a 	b.w	8007788 <prvUnlockQueue>

080080d4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80080d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080d8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80080da:	f7ff f9bb 	bl	8007454 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80080de:	4b30      	ldr	r3, [pc, #192]	; (80081a0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80080e0:	4e30      	ldr	r6, [pc, #192]	; (80081a4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80080e2:	681a      	ldr	r2, [r3, #0]
 80080e4:	4f30      	ldr	r7, [pc, #192]	; (80081a8 <prvAddNewTaskToReadyList+0xd4>)
 80080e6:	3201      	adds	r2, #1
 80080e8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80080ea:	6835      	ldr	r5, [r6, #0]
 80080ec:	2d00      	cmp	r5, #0
 80080ee:	d14b      	bne.n	8008188 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80080f0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80080f2:	681b      	ldr	r3, [r3, #0]
 80080f4:	2b01      	cmp	r3, #1
 80080f6:	d11f      	bne.n	8008138 <prvAddNewTaskToReadyList+0x64>
 80080f8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80080fa:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80080fc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80080fe:	f7ff f8fd 	bl	80072fc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8008102:	2d38      	cmp	r5, #56	; 0x38
 8008104:	f108 0814 	add.w	r8, r8, #20
 8008108:	d1f7      	bne.n	80080fa <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800810a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80081d0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800810e:	4d27      	ldr	r5, [pc, #156]	; (80081ac <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008110:	4640      	mov	r0, r8
 8008112:	f7ff f8f3 	bl	80072fc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008116:	4628      	mov	r0, r5
 8008118:	f7ff f8f0 	bl	80072fc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800811c:	4824      	ldr	r0, [pc, #144]	; (80081b0 <prvAddNewTaskToReadyList+0xdc>)
 800811e:	f7ff f8ed 	bl	80072fc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008122:	4824      	ldr	r0, [pc, #144]	; (80081b4 <prvAddNewTaskToReadyList+0xe0>)
 8008124:	f7ff f8ea 	bl	80072fc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008128:	4823      	ldr	r0, [pc, #140]	; (80081b8 <prvAddNewTaskToReadyList+0xe4>)
 800812a:	f7ff f8e7 	bl	80072fc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800812e:	4b23      	ldr	r3, [pc, #140]	; (80081bc <prvAddNewTaskToReadyList+0xe8>)
 8008130:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008134:	4b22      	ldr	r3, [pc, #136]	; (80081c0 <prvAddNewTaskToReadyList+0xec>)
 8008136:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008138:	4a22      	ldr	r2, [pc, #136]	; (80081c4 <prvAddNewTaskToReadyList+0xf0>)
 800813a:	6813      	ldr	r3, [r2, #0]
 800813c:	3301      	adds	r3, #1
 800813e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008140:	4a21      	ldr	r2, [pc, #132]	; (80081c8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008142:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008144:	6811      	ldr	r1, [r2, #0]
 8008146:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008148:	2014      	movs	r0, #20
 800814a:	428b      	cmp	r3, r1
 800814c:	fb00 7003 	mla	r0, r0, r3, r7
 8008150:	f104 0104 	add.w	r1, r4, #4
 8008154:	bf88      	it	hi
 8008156:	6013      	strhi	r3, [r2, #0]
 8008158:	f7ff f8de 	bl	8007318 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800815c:	f7ff f99a 	bl	8007494 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008160:	4b1a      	ldr	r3, [pc, #104]	; (80081cc <prvAddNewTaskToReadyList+0xf8>)
 8008162:	681b      	ldr	r3, [r3, #0]
 8008164:	b173      	cbz	r3, 8008184 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008166:	6833      	ldr	r3, [r6, #0]
 8008168:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800816a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800816c:	429a      	cmp	r2, r3
 800816e:	d209      	bcs.n	8008184 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008170:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008174:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008178:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800817c:	f3bf 8f4f 	dsb	sy
 8008180:	f3bf 8f6f 	isb	sy
}
 8008184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008188:	4b10      	ldr	r3, [pc, #64]	; (80081cc <prvAddNewTaskToReadyList+0xf8>)
 800818a:	681b      	ldr	r3, [r3, #0]
 800818c:	2b00      	cmp	r3, #0
 800818e:	d1d3      	bne.n	8008138 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008190:	6833      	ldr	r3, [r6, #0]
 8008192:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008194:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008196:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008198:	bf98      	it	ls
 800819a:	6034      	strls	r4, [r6, #0]
 800819c:	e7cc      	b.n	8008138 <prvAddNewTaskToReadyList+0x64>
 800819e:	bf00      	nop
 80081a0:	2000a1d4 	.word	0x2000a1d4
 80081a4:	20009d68 	.word	0x20009d68
 80081a8:	20009d74 	.word	0x20009d74
 80081ac:	2000a200 	.word	0x2000a200
 80081b0:	2000a21c 	.word	0x2000a21c
 80081b4:	2000a248 	.word	0x2000a248
 80081b8:	2000a234 	.word	0x2000a234
 80081bc:	20009d6c 	.word	0x20009d6c
 80081c0:	20009d70 	.word	0x20009d70
 80081c4:	2000a1e4 	.word	0x2000a1e4
 80081c8:	2000a1e8 	.word	0x2000a1e8
 80081cc:	2000a230 	.word	0x2000a230
 80081d0:	2000a1ec 	.word	0x2000a1ec

080081d4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80081d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80081d6:	4b15      	ldr	r3, [pc, #84]	; (800822c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80081d8:	4e15      	ldr	r6, [pc, #84]	; (8008230 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80081da:	681d      	ldr	r5, [r3, #0]
{
 80081dc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80081de:	6830      	ldr	r0, [r6, #0]
 80081e0:	3004      	adds	r0, #4
{
 80081e2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80081e4:	f7ff f8bb 	bl	800735e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80081e8:	1c63      	adds	r3, r4, #1
 80081ea:	d107      	bne.n	80081fc <prvAddCurrentTaskToDelayedList+0x28>
 80081ec:	b137      	cbz	r7, 80081fc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081ee:	6831      	ldr	r1, [r6, #0]
 80081f0:	4810      	ldr	r0, [pc, #64]	; (8008234 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80081f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081f6:	3104      	adds	r1, #4
 80081f8:	f7ff b88e 	b.w	8007318 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80081fc:	6833      	ldr	r3, [r6, #0]
 80081fe:	192c      	adds	r4, r5, r4
 8008200:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8008202:	d307      	bcc.n	8008214 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008204:	4b0c      	ldr	r3, [pc, #48]	; (8008238 <prvAddCurrentTaskToDelayedList+0x64>)
 8008206:	6818      	ldr	r0, [r3, #0]
 8008208:	6831      	ldr	r1, [r6, #0]
}
 800820a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800820e:	3104      	adds	r1, #4
 8008210:	f7ff b88e 	b.w	8007330 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008214:	4b09      	ldr	r3, [pc, #36]	; (800823c <prvAddCurrentTaskToDelayedList+0x68>)
 8008216:	6818      	ldr	r0, [r3, #0]
 8008218:	6831      	ldr	r1, [r6, #0]
 800821a:	3104      	adds	r1, #4
 800821c:	f7ff f888 	bl	8007330 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008220:	4b07      	ldr	r3, [pc, #28]	; (8008240 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008222:	681a      	ldr	r2, [r3, #0]
 8008224:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008226:	bf88      	it	hi
 8008228:	601c      	strhi	r4, [r3, #0]
}
 800822a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800822c:	2000a25c 	.word	0x2000a25c
 8008230:	20009d68 	.word	0x20009d68
 8008234:	2000a234 	.word	0x2000a234
 8008238:	20009d70 	.word	0x20009d70
 800823c:	20009d6c 	.word	0x20009d6c
 8008240:	2000a214 	.word	0x2000a214

08008244 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008244:	4a06      	ldr	r2, [pc, #24]	; (8008260 <prvResetNextTaskUnblockTime+0x1c>)
 8008246:	6813      	ldr	r3, [r2, #0]
 8008248:	6819      	ldr	r1, [r3, #0]
 800824a:	4b06      	ldr	r3, [pc, #24]	; (8008264 <prvResetNextTaskUnblockTime+0x20>)
 800824c:	b919      	cbnz	r1, 8008256 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800824e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008252:	601a      	str	r2, [r3, #0]
}
 8008254:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008256:	6812      	ldr	r2, [r2, #0]
 8008258:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800825a:	68d2      	ldr	r2, [r2, #12]
 800825c:	6852      	ldr	r2, [r2, #4]
 800825e:	e7f8      	b.n	8008252 <prvResetNextTaskUnblockTime+0xe>
 8008260:	20009d6c 	.word	0x20009d6c
 8008264:	2000a214 	.word	0x2000a214

08008268 <prvDeleteTCB>:
	{
 8008268:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800826a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800826e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008270:	b93b      	cbnz	r3, 8008282 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008272:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008274:	f7ff f80a 	bl	800728c <vPortFree>
				vPortFree( pxTCB );
 8008278:	4620      	mov	r0, r4
	}
 800827a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800827e:	f7ff b805 	b.w	800728c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008282:	2b01      	cmp	r3, #1
 8008284:	d0f9      	beq.n	800827a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008286:	2b02      	cmp	r3, #2
 8008288:	d008      	beq.n	800829c <prvDeleteTCB+0x34>
 800828a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800828e:	f383 8811 	msr	BASEPRI, r3
 8008292:	f3bf 8f6f 	isb	sy
 8008296:	f3bf 8f4f 	dsb	sy
 800829a:	e7fe      	b.n	800829a <prvDeleteTCB+0x32>
	}
 800829c:	bd10      	pop	{r4, pc}
	...

080082a0 <prvIdleTask>:
{
 80082a0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80082a2:	4c14      	ldr	r4, [pc, #80]	; (80082f4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082a4:	4f14      	ldr	r7, [pc, #80]	; (80082f8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 80082a6:	4d15      	ldr	r5, [pc, #84]	; (80082fc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80082a8:	6823      	ldr	r3, [r4, #0]
 80082aa:	b983      	cbnz	r3, 80082ce <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 80082ac:	4b14      	ldr	r3, [pc, #80]	; (8008300 <prvIdleTask+0x60>)
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	2b01      	cmp	r3, #1
 80082b2:	d909      	bls.n	80082c8 <prvIdleTask+0x28>
				taskYIELD();
 80082b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80082c0:	f3bf 8f4f 	dsb	sy
 80082c4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 80082c8:	f7f9 f8a2 	bl	8001410 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 80082cc:	e7eb      	b.n	80082a6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80082ce:	f7ff f8c1 	bl	8007454 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082d2:	68fb      	ldr	r3, [r7, #12]
 80082d4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80082d6:	1d30      	adds	r0, r6, #4
 80082d8:	f7ff f841 	bl	800735e <uxListRemove>
				--uxCurrentNumberOfTasks;
 80082dc:	682b      	ldr	r3, [r5, #0]
 80082de:	3b01      	subs	r3, #1
 80082e0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80082e2:	6823      	ldr	r3, [r4, #0]
 80082e4:	3b01      	subs	r3, #1
 80082e6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80082e8:	f7ff f8d4 	bl	8007494 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80082ec:	4630      	mov	r0, r6
 80082ee:	f7ff ffbb 	bl	8008268 <prvDeleteTCB>
 80082f2:	e7d9      	b.n	80082a8 <prvIdleTask+0x8>
 80082f4:	2000a1d8 	.word	0x2000a1d8
 80082f8:	2000a248 	.word	0x2000a248
 80082fc:	2000a1d4 	.word	0x2000a1d4
 8008300:	20009d74 	.word	0x20009d74

08008304 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008304:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008308:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800830c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8008310:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008312:	4606      	mov	r6, r0
 8008314:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008316:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008318:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800831a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800831c:	f011 fe1c 	bl	8019f58 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008320:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008322:	f1a9 0904 	sub.w	r9, r9, #4
 8008326:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008328:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800832c:	b3b5      	cbz	r5, 800839c <prvInitialiseNewTask.constprop.0+0x98>
 800832e:	1e6b      	subs	r3, r5, #1
 8008330:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008334:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008336:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800833a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800833e:	b108      	cbz	r0, 8008344 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008340:	42ab      	cmp	r3, r5
 8008342:	d1f8      	bne.n	8008336 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008344:	2300      	movs	r3, #0
 8008346:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800834a:	9d08      	ldr	r5, [sp, #32]
 800834c:	2d37      	cmp	r5, #55	; 0x37
 800834e:	bf28      	it	cs
 8008350:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008352:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008356:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008358:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800835a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800835c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008360:	f7fe ffd7 	bl	8007312 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008364:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008368:	f104 0018 	add.w	r0, r4, #24
 800836c:	f7fe ffd1 	bl	8007312 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008370:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008374:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008376:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008378:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800837a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800837e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008382:	463a      	mov	r2, r7
 8008384:	4631      	mov	r1, r6
 8008386:	4648      	mov	r0, r9
 8008388:	f7ff f838 	bl	80073fc <pxPortInitialiseStack>
 800838c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800838e:	f1b8 0f00 	cmp.w	r8, #0
 8008392:	d001      	beq.n	8008398 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008394:	f8c8 4000 	str.w	r4, [r8]
}
 8008398:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800839c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80083a0:	e7d3      	b.n	800834a <prvInitialiseNewTask.constprop.0+0x46>

080083a2 <xTaskCreateStatic>:
	{
 80083a2:	b570      	push	{r4, r5, r6, lr}
 80083a4:	b086      	sub	sp, #24
 80083a6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80083aa:	b945      	cbnz	r5, 80083be <xTaskCreateStatic+0x1c>
 80083ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b0:	f383 8811 	msr	BASEPRI, r3
 80083b4:	f3bf 8f6f 	isb	sy
 80083b8:	f3bf 8f4f 	dsb	sy
 80083bc:	e7fe      	b.n	80083bc <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80083be:	b944      	cbnz	r4, 80083d2 <xTaskCreateStatic+0x30>
 80083c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083c4:	f383 8811 	msr	BASEPRI, r3
 80083c8:	f3bf 8f6f 	isb	sy
 80083cc:	f3bf 8f4f 	dsb	sy
 80083d0:	e7fe      	b.n	80083d0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80083d2:	2660      	movs	r6, #96	; 0x60
 80083d4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80083d6:	9e05      	ldr	r6, [sp, #20]
 80083d8:	2e60      	cmp	r6, #96	; 0x60
 80083da:	d008      	beq.n	80083ee <xTaskCreateStatic+0x4c>
 80083dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083e0:	f383 8811 	msr	BASEPRI, r3
 80083e4:	f3bf 8f6f 	isb	sy
 80083e8:	f3bf 8f4f 	dsb	sy
 80083ec:	e7fe      	b.n	80083ec <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80083ee:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80083f0:	2502      	movs	r5, #2
 80083f2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80083f6:	ad04      	add	r5, sp, #16
 80083f8:	9501      	str	r5, [sp, #4]
 80083fa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80083fc:	9402      	str	r4, [sp, #8]
 80083fe:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008400:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008402:	f7ff ff7f 	bl	8008304 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008406:	4620      	mov	r0, r4
 8008408:	f7ff fe64 	bl	80080d4 <prvAddNewTaskToReadyList>
	}
 800840c:	9804      	ldr	r0, [sp, #16]
 800840e:	b006      	add	sp, #24
 8008410:	bd70      	pop	{r4, r5, r6, pc}

08008412 <xTaskCreate>:
	{
 8008412:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008416:	4607      	mov	r7, r0
 8008418:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800841a:	0090      	lsls	r0, r2, #2
	{
 800841c:	4688      	mov	r8, r1
 800841e:	4616      	mov	r6, r2
 8008420:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008422:	f7fe fea1 	bl	8007168 <pvPortMalloc>
			if( pxStack != NULL )
 8008426:	4605      	mov	r5, r0
 8008428:	b1e8      	cbz	r0, 8008466 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800842a:	2060      	movs	r0, #96	; 0x60
 800842c:	f7fe fe9c 	bl	8007168 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008430:	4604      	mov	r4, r0
 8008432:	b1a8      	cbz	r0, 8008460 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008434:	2300      	movs	r3, #0
 8008436:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800843a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800843c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800843e:	9301      	str	r3, [sp, #4]
 8008440:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008442:	9002      	str	r0, [sp, #8]
 8008444:	9300      	str	r3, [sp, #0]
 8008446:	4632      	mov	r2, r6
 8008448:	464b      	mov	r3, r9
 800844a:	4641      	mov	r1, r8
 800844c:	4638      	mov	r0, r7
 800844e:	f7ff ff59 	bl	8008304 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8008452:	4620      	mov	r0, r4
 8008454:	f7ff fe3e 	bl	80080d4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008458:	2001      	movs	r0, #1
	}
 800845a:	b005      	add	sp, #20
 800845c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8008460:	4628      	mov	r0, r5
 8008462:	f7fe ff13 	bl	800728c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008466:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800846a:	e7f6      	b.n	800845a <xTaskCreate+0x48>

0800846c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800846c:	4a02      	ldr	r2, [pc, #8]	; (8008478 <vTaskSuspendAll+0xc>)
 800846e:	6813      	ldr	r3, [r2, #0]
 8008470:	3301      	adds	r3, #1
 8008472:	6013      	str	r3, [r2, #0]
}
 8008474:	4770      	bx	lr
 8008476:	bf00      	nop
 8008478:	2000a1e0 	.word	0x2000a1e0

0800847c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800847c:	4b01      	ldr	r3, [pc, #4]	; (8008484 <xTaskGetTickCount+0x8>)
 800847e:	6818      	ldr	r0, [r3, #0]
}
 8008480:	4770      	bx	lr
 8008482:	bf00      	nop
 8008484:	2000a25c 	.word	0x2000a25c

08008488 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008488:	4b3f      	ldr	r3, [pc, #252]	; (8008588 <xTaskIncrementTick+0x100>)
 800848a:	681b      	ldr	r3, [r3, #0]
{
 800848c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008490:	2b00      	cmp	r3, #0
 8008492:	d173      	bne.n	800857c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008494:	4b3d      	ldr	r3, [pc, #244]	; (800858c <xTaskIncrementTick+0x104>)
 8008496:	681d      	ldr	r5, [r3, #0]
 8008498:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800849a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800849c:	b9bd      	cbnz	r5, 80084ce <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800849e:	4b3c      	ldr	r3, [pc, #240]	; (8008590 <xTaskIncrementTick+0x108>)
 80084a0:	681a      	ldr	r2, [r3, #0]
 80084a2:	6812      	ldr	r2, [r2, #0]
 80084a4:	b142      	cbz	r2, 80084b8 <xTaskIncrementTick+0x30>
 80084a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084aa:	f383 8811 	msr	BASEPRI, r3
 80084ae:	f3bf 8f6f 	isb	sy
 80084b2:	f3bf 8f4f 	dsb	sy
 80084b6:	e7fe      	b.n	80084b6 <xTaskIncrementTick+0x2e>
 80084b8:	4a36      	ldr	r2, [pc, #216]	; (8008594 <xTaskIncrementTick+0x10c>)
 80084ba:	6819      	ldr	r1, [r3, #0]
 80084bc:	6810      	ldr	r0, [r2, #0]
 80084be:	6018      	str	r0, [r3, #0]
 80084c0:	6011      	str	r1, [r2, #0]
 80084c2:	4a35      	ldr	r2, [pc, #212]	; (8008598 <xTaskIncrementTick+0x110>)
 80084c4:	6813      	ldr	r3, [r2, #0]
 80084c6:	3301      	adds	r3, #1
 80084c8:	6013      	str	r3, [r2, #0]
 80084ca:	f7ff febb 	bl	8008244 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80084ce:	4e33      	ldr	r6, [pc, #204]	; (800859c <xTaskIncrementTick+0x114>)
 80084d0:	4f33      	ldr	r7, [pc, #204]	; (80085a0 <xTaskIncrementTick+0x118>)
 80084d2:	6833      	ldr	r3, [r6, #0]
 80084d4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 80085ac <xTaskIncrementTick+0x124>
 80084d8:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 80084da:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80084de:	d911      	bls.n	8008504 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80084e0:	f8d8 3000 	ldr.w	r3, [r8]
 80084e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80084e6:	2214      	movs	r2, #20
 80084e8:	4353      	muls	r3, r2
 80084ea:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 80084ec:	2b02      	cmp	r3, #2
 80084ee:	bf28      	it	cs
 80084f0:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 80084f2:	4b2c      	ldr	r3, [pc, #176]	; (80085a4 <xTaskIncrementTick+0x11c>)
 80084f4:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 80084f6:	2b00      	cmp	r3, #0
}
 80084f8:	bf0c      	ite	eq
 80084fa:	4620      	moveq	r0, r4
 80084fc:	2001      	movne	r0, #1
 80084fe:	b003      	add	sp, #12
 8008500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008504:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008590 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008508:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 80085b0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800850c:	f8d9 3000 	ldr.w	r3, [r9]
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	b91b      	cbnz	r3, 800851c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008514:	f04f 33ff 	mov.w	r3, #4294967295
 8008518:	6033      	str	r3, [r6, #0]
					break;
 800851a:	e7e1      	b.n	80084e0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800851c:	f8d9 3000 	ldr.w	r3, [r9]
 8008520:	68db      	ldr	r3, [r3, #12]
 8008522:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008526:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800852a:	4295      	cmp	r5, r2
 800852c:	d201      	bcs.n	8008532 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800852e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008530:	e7d6      	b.n	80084e0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008532:	f10b 0104 	add.w	r1, fp, #4
 8008536:	4608      	mov	r0, r1
 8008538:	9101      	str	r1, [sp, #4]
 800853a:	f7fe ff10 	bl	800735e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800853e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8008542:	9901      	ldr	r1, [sp, #4]
 8008544:	b122      	cbz	r2, 8008550 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008546:	f10b 0018 	add.w	r0, fp, #24
 800854a:	f7fe ff08 	bl	800735e <uxListRemove>
 800854e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8008550:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8008554:	f8da 2000 	ldr.w	r2, [sl]
 8008558:	2314      	movs	r3, #20
 800855a:	4290      	cmp	r0, r2
 800855c:	bf88      	it	hi
 800855e:	f8ca 0000 	strhi.w	r0, [sl]
 8008562:	fb03 7000 	mla	r0, r3, r0, r7
 8008566:	f7fe fed7 	bl	8007318 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800856a:	f8d8 1000 	ldr.w	r1, [r8]
 800856e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8008572:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008574:	429a      	cmp	r2, r3
 8008576:	bf28      	it	cs
 8008578:	2401      	movcs	r4, #1
 800857a:	e7c7      	b.n	800850c <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 800857c:	4a0a      	ldr	r2, [pc, #40]	; (80085a8 <xTaskIncrementTick+0x120>)
 800857e:	6813      	ldr	r3, [r2, #0]
 8008580:	3301      	adds	r3, #1
 8008582:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008584:	2400      	movs	r4, #0
 8008586:	e7b4      	b.n	80084f2 <xTaskIncrementTick+0x6a>
 8008588:	2000a1e0 	.word	0x2000a1e0
 800858c:	2000a25c 	.word	0x2000a25c
 8008590:	20009d6c 	.word	0x20009d6c
 8008594:	20009d70 	.word	0x20009d70
 8008598:	2000a218 	.word	0x2000a218
 800859c:	2000a214 	.word	0x2000a214
 80085a0:	20009d74 	.word	0x20009d74
 80085a4:	2000a260 	.word	0x2000a260
 80085a8:	2000a1dc 	.word	0x2000a1dc
 80085ac:	20009d68 	.word	0x20009d68
 80085b0:	2000a1e8 	.word	0x2000a1e8

080085b4 <xTaskResumeAll>:
{
 80085b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 80085b6:	4c31      	ldr	r4, [pc, #196]	; (800867c <xTaskResumeAll+0xc8>)
 80085b8:	6823      	ldr	r3, [r4, #0]
 80085ba:	b943      	cbnz	r3, 80085ce <xTaskResumeAll+0x1a>
 80085bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085c0:	f383 8811 	msr	BASEPRI, r3
 80085c4:	f3bf 8f6f 	isb	sy
 80085c8:	f3bf 8f4f 	dsb	sy
 80085cc:	e7fe      	b.n	80085cc <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 80085ce:	f7fe ff41 	bl	8007454 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80085d2:	6823      	ldr	r3, [r4, #0]
 80085d4:	3b01      	subs	r3, #1
 80085d6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80085d8:	6824      	ldr	r4, [r4, #0]
 80085da:	b12c      	cbz	r4, 80085e8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 80085dc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80085de:	f7fe ff59 	bl	8007494 <vPortExitCritical>
}
 80085e2:	4620      	mov	r0, r4
 80085e4:	b003      	add	sp, #12
 80085e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80085e8:	4b25      	ldr	r3, [pc, #148]	; (8008680 <xTaskResumeAll+0xcc>)
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	2b00      	cmp	r3, #0
 80085ee:	d0f5      	beq.n	80085dc <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80085f0:	4d24      	ldr	r5, [pc, #144]	; (8008684 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 80085f2:	4e25      	ldr	r6, [pc, #148]	; (8008688 <xTaskResumeAll+0xd4>)
 80085f4:	4f25      	ldr	r7, [pc, #148]	; (800868c <xTaskResumeAll+0xd8>)
 80085f6:	e01e      	b.n	8008636 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80085f8:	68eb      	ldr	r3, [r5, #12]
 80085fa:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80085fc:	f104 0018 	add.w	r0, r4, #24
 8008600:	f7fe fead 	bl	800735e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008604:	1d21      	adds	r1, r4, #4
 8008606:	4608      	mov	r0, r1
 8008608:	9101      	str	r1, [sp, #4]
 800860a:	f7fe fea8 	bl	800735e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800860e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008610:	6832      	ldr	r2, [r6, #0]
 8008612:	9901      	ldr	r1, [sp, #4]
 8008614:	2014      	movs	r0, #20
 8008616:	4293      	cmp	r3, r2
 8008618:	fb00 7003 	mla	r0, r0, r3, r7
 800861c:	bf88      	it	hi
 800861e:	6033      	strhi	r3, [r6, #0]
 8008620:	f7fe fe7a 	bl	8007318 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8008624:	4b1a      	ldr	r3, [pc, #104]	; (8008690 <xTaskResumeAll+0xdc>)
 8008626:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008628:	681b      	ldr	r3, [r3, #0]
 800862a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800862c:	429a      	cmp	r2, r3
 800862e:	d302      	bcc.n	8008636 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8008630:	4b18      	ldr	r3, [pc, #96]	; (8008694 <xTaskResumeAll+0xe0>)
 8008632:	2201      	movs	r2, #1
 8008634:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008636:	682b      	ldr	r3, [r5, #0]
 8008638:	2b00      	cmp	r3, #0
 800863a:	d1dd      	bne.n	80085f8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800863c:	b10c      	cbz	r4, 8008642 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800863e:	f7ff fe01 	bl	8008244 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008642:	4d15      	ldr	r5, [pc, #84]	; (8008698 <xTaskResumeAll+0xe4>)
 8008644:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8008646:	b144      	cbz	r4, 800865a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8008648:	4e12      	ldr	r6, [pc, #72]	; (8008694 <xTaskResumeAll+0xe0>)
 800864a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800864c:	f7ff ff1c 	bl	8008488 <xTaskIncrementTick>
 8008650:	b100      	cbz	r0, 8008654 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8008652:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8008654:	3c01      	subs	r4, #1
 8008656:	d1f9      	bne.n	800864c <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8008658:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800865a:	4b0e      	ldr	r3, [pc, #56]	; (8008694 <xTaskResumeAll+0xe0>)
 800865c:	681b      	ldr	r3, [r3, #0]
 800865e:	2b00      	cmp	r3, #0
 8008660:	d0bc      	beq.n	80085dc <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8008662:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008666:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800866a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800866e:	f3bf 8f4f 	dsb	sy
 8008672:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008676:	2401      	movs	r4, #1
 8008678:	e7b1      	b.n	80085de <xTaskResumeAll+0x2a>
 800867a:	bf00      	nop
 800867c:	2000a1e0 	.word	0x2000a1e0
 8008680:	2000a1d4 	.word	0x2000a1d4
 8008684:	2000a21c 	.word	0x2000a21c
 8008688:	2000a1e8 	.word	0x2000a1e8
 800868c:	20009d74 	.word	0x20009d74
 8008690:	20009d68 	.word	0x20009d68
 8008694:	2000a260 	.word	0x2000a260
 8008698:	2000a1dc 	.word	0x2000a1dc

0800869c <vTaskSetApplicationTaskTag>:
	{
 800869c:	b538      	push	{r3, r4, r5, lr}
 800869e:	460d      	mov	r5, r1
		if( xTask == NULL )
 80086a0:	4604      	mov	r4, r0
 80086a2:	b908      	cbnz	r0, 80086a8 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 80086a4:	4b04      	ldr	r3, [pc, #16]	; (80086b8 <vTaskSetApplicationTaskTag+0x1c>)
 80086a6:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 80086a8:	f7fe fed4 	bl	8007454 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 80086ac:	6565      	str	r5, [r4, #84]	; 0x54
	}
 80086ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 80086b2:	f7fe beef 	b.w	8007494 <vPortExitCritical>
 80086b6:	bf00      	nop
 80086b8:	20009d68 	.word	0x20009d68

080086bc <xTaskCallApplicationTaskHook>:
	{
 80086bc:	4603      	mov	r3, r0
 80086be:	4608      	mov	r0, r1
		if( xTask == NULL )
 80086c0:	b90b      	cbnz	r3, 80086c6 <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 80086c2:	4b03      	ldr	r3, [pc, #12]	; (80086d0 <xTaskCallApplicationTaskHook+0x14>)
 80086c4:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 80086c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80086c8:	b103      	cbz	r3, 80086cc <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 80086ca:	4718      	bx	r3
	}
 80086cc:	4618      	mov	r0, r3
 80086ce:	4770      	bx	lr
 80086d0:	20009d68 	.word	0x20009d68

080086d4 <vTaskStartScheduler>:
{
 80086d4:	b510      	push	{r4, lr}
 80086d6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80086d8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80086da:	aa07      	add	r2, sp, #28
 80086dc:	a906      	add	r1, sp, #24
 80086de:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80086e0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80086e4:	f7fe fd04 	bl	80070f0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80086e8:	9b05      	ldr	r3, [sp, #20]
 80086ea:	9302      	str	r3, [sp, #8]
 80086ec:	9b06      	ldr	r3, [sp, #24]
 80086ee:	9a07      	ldr	r2, [sp, #28]
 80086f0:	4919      	ldr	r1, [pc, #100]	; (8008758 <vTaskStartScheduler+0x84>)
 80086f2:	481a      	ldr	r0, [pc, #104]	; (800875c <vTaskStartScheduler+0x88>)
 80086f4:	e9cd 4300 	strd	r4, r3, [sp]
 80086f8:	4623      	mov	r3, r4
 80086fa:	f7ff fe52 	bl	80083a2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80086fe:	b340      	cbz	r0, 8008752 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8008700:	f000 fa8a 	bl	8008c18 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008704:	2801      	cmp	r0, #1
 8008706:	d119      	bne.n	800873c <vTaskStartScheduler+0x68>
 8008708:	f04f 0350 	mov.w	r3, #80	; 0x50
 800870c:	f383 8811 	msr	BASEPRI, r3
 8008710:	f3bf 8f6f 	isb	sy
 8008714:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008718:	4b11      	ldr	r3, [pc, #68]	; (8008760 <vTaskStartScheduler+0x8c>)
 800871a:	f04f 32ff 	mov.w	r2, #4294967295
 800871e:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008720:	4b10      	ldr	r3, [pc, #64]	; (8008764 <vTaskStartScheduler+0x90>)
 8008722:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008724:	4b10      	ldr	r3, [pc, #64]	; (8008768 <vTaskStartScheduler+0x94>)
 8008726:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 8008728:	4b10      	ldr	r3, [pc, #64]	; (800876c <vTaskStartScheduler+0x98>)
 800872a:	4621      	mov	r1, r4
 800872c:	6818      	ldr	r0, [r3, #0]
 800872e:	f7ff ffc5 	bl	80086bc <xTaskCallApplicationTaskHook>
}
 8008732:	b008      	add	sp, #32
 8008734:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8008738:	f7fe bf1c 	b.w	8007574 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800873c:	3001      	adds	r0, #1
 800873e:	d108      	bne.n	8008752 <vTaskStartScheduler+0x7e>
 8008740:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008744:	f383 8811 	msr	BASEPRI, r3
 8008748:	f3bf 8f6f 	isb	sy
 800874c:	f3bf 8f4f 	dsb	sy
 8008750:	e7fe      	b.n	8008750 <vTaskStartScheduler+0x7c>
}
 8008752:	b008      	add	sp, #32
 8008754:	bd10      	pop	{r4, pc}
 8008756:	bf00      	nop
 8008758:	0801bfc5 	.word	0x0801bfc5
 800875c:	080082a1 	.word	0x080082a1
 8008760:	2000a214 	.word	0x2000a214
 8008764:	2000a230 	.word	0x2000a230
 8008768:	2000a25c 	.word	0x2000a25c
 800876c:	20009d68 	.word	0x20009d68

08008770 <vTaskSwitchContext>:
{
 8008770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008772:	4b1c      	ldr	r3, [pc, #112]	; (80087e4 <vTaskSwitchContext+0x74>)
 8008774:	681a      	ldr	r2, [r3, #0]
 8008776:	4b1c      	ldr	r3, [pc, #112]	; (80087e8 <vTaskSwitchContext+0x78>)
 8008778:	b112      	cbz	r2, 8008780 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800877a:	2201      	movs	r2, #1
 800877c:	601a      	str	r2, [r3, #0]
}
 800877e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 8008780:	4c1a      	ldr	r4, [pc, #104]	; (80087ec <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 8008782:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008784:	4e1a      	ldr	r6, [pc, #104]	; (80087f0 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 8008786:	6820      	ldr	r0, [r4, #0]
 8008788:	2101      	movs	r1, #1
 800878a:	f7ff ff97 	bl	80086bc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800878e:	6832      	ldr	r2, [r6, #0]
 8008790:	4918      	ldr	r1, [pc, #96]	; (80087f4 <vTaskSwitchContext+0x84>)
 8008792:	2714      	movs	r7, #20
 8008794:	fb07 f302 	mul.w	r3, r7, r2
 8008798:	18c8      	adds	r0, r1, r3
 800879a:	58cd      	ldr	r5, [r1, r3]
 800879c:	b1ad      	cbz	r5, 80087ca <vTaskSwitchContext+0x5a>
 800879e:	6845      	ldr	r5, [r0, #4]
 80087a0:	3308      	adds	r3, #8
 80087a2:	686d      	ldr	r5, [r5, #4]
 80087a4:	6045      	str	r5, [r0, #4]
 80087a6:	440b      	add	r3, r1
 80087a8:	429d      	cmp	r5, r3
 80087aa:	bf04      	itt	eq
 80087ac:	686b      	ldreq	r3, [r5, #4]
 80087ae:	6043      	streq	r3, [r0, #4]
 80087b0:	2314      	movs	r3, #20
 80087b2:	fb03 1102 	mla	r1, r3, r2, r1
 80087b6:	684b      	ldr	r3, [r1, #4]
 80087b8:	68db      	ldr	r3, [r3, #12]
 80087ba:	6023      	str	r3, [r4, #0]
 80087bc:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 80087be:	6820      	ldr	r0, [r4, #0]
 80087c0:	2100      	movs	r1, #0
}
 80087c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 80087c6:	f7ff bf79 	b.w	80086bc <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087ca:	b942      	cbnz	r2, 80087de <vTaskSwitchContext+0x6e>
 80087cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087d0:	f383 8811 	msr	BASEPRI, r3
 80087d4:	f3bf 8f6f 	isb	sy
 80087d8:	f3bf 8f4f 	dsb	sy
 80087dc:	e7fe      	b.n	80087dc <vTaskSwitchContext+0x6c>
 80087de:	3a01      	subs	r2, #1
 80087e0:	e7d8      	b.n	8008794 <vTaskSwitchContext+0x24>
 80087e2:	bf00      	nop
 80087e4:	2000a1e0 	.word	0x2000a1e0
 80087e8:	2000a260 	.word	0x2000a260
 80087ec:	20009d68 	.word	0x20009d68
 80087f0:	2000a1e8 	.word	0x2000a1e8
 80087f4:	20009d74 	.word	0x20009d74

080087f8 <vTaskPlaceOnEventList>:
{
 80087f8:	b510      	push	{r4, lr}
 80087fa:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80087fc:	b940      	cbnz	r0, 8008810 <vTaskPlaceOnEventList+0x18>
 80087fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008802:	f383 8811 	msr	BASEPRI, r3
 8008806:	f3bf 8f6f 	isb	sy
 800880a:	f3bf 8f4f 	dsb	sy
 800880e:	e7fe      	b.n	800880e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008810:	4b05      	ldr	r3, [pc, #20]	; (8008828 <vTaskPlaceOnEventList+0x30>)
 8008812:	6819      	ldr	r1, [r3, #0]
 8008814:	3118      	adds	r1, #24
 8008816:	f7fe fd8b 	bl	8007330 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800881a:	4620      	mov	r0, r4
 800881c:	2101      	movs	r1, #1
}
 800881e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008822:	f7ff bcd7 	b.w	80081d4 <prvAddCurrentTaskToDelayedList>
 8008826:	bf00      	nop
 8008828:	20009d68 	.word	0x20009d68

0800882c <vTaskPlaceOnEventListRestricted>:
	{
 800882c:	b538      	push	{r3, r4, r5, lr}
 800882e:	460d      	mov	r5, r1
 8008830:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008832:	b940      	cbnz	r0, 8008846 <vTaskPlaceOnEventListRestricted+0x1a>
 8008834:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008838:	f383 8811 	msr	BASEPRI, r3
 800883c:	f3bf 8f6f 	isb	sy
 8008840:	f3bf 8f4f 	dsb	sy
 8008844:	e7fe      	b.n	8008844 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008846:	4b07      	ldr	r3, [pc, #28]	; (8008864 <vTaskPlaceOnEventListRestricted+0x38>)
 8008848:	6819      	ldr	r1, [r3, #0]
 800884a:	3118      	adds	r1, #24
 800884c:	f7fe fd64 	bl	8007318 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008850:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008852:	4621      	mov	r1, r4
 8008854:	bf0c      	ite	eq
 8008856:	4628      	moveq	r0, r5
 8008858:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800885c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008860:	f7ff bcb8 	b.w	80081d4 <prvAddCurrentTaskToDelayedList>
 8008864:	20009d68 	.word	0x20009d68

08008868 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008868:	68c3      	ldr	r3, [r0, #12]
{
 800886a:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800886c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800886e:	b944      	cbnz	r4, 8008882 <xTaskRemoveFromEventList+0x1a>
 8008870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008874:	f383 8811 	msr	BASEPRI, r3
 8008878:	f3bf 8f6f 	isb	sy
 800887c:	f3bf 8f4f 	dsb	sy
 8008880:	e7fe      	b.n	8008880 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008882:	f104 0118 	add.w	r1, r4, #24
 8008886:	4608      	mov	r0, r1
 8008888:	9101      	str	r1, [sp, #4]
 800888a:	f7fe fd68 	bl	800735e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800888e:	4b12      	ldr	r3, [pc, #72]	; (80088d8 <xTaskRemoveFromEventList+0x70>)
 8008890:	9901      	ldr	r1, [sp, #4]
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	b9eb      	cbnz	r3, 80088d2 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008896:	1d21      	adds	r1, r4, #4
 8008898:	4608      	mov	r0, r1
 800889a:	9101      	str	r1, [sp, #4]
 800889c:	f7fe fd5f 	bl	800735e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80088a0:	4a0e      	ldr	r2, [pc, #56]	; (80088dc <xTaskRemoveFromEventList+0x74>)
 80088a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80088a4:	6810      	ldr	r0, [r2, #0]
 80088a6:	9901      	ldr	r1, [sp, #4]
 80088a8:	4283      	cmp	r3, r0
 80088aa:	bf88      	it	hi
 80088ac:	6013      	strhi	r3, [r2, #0]
 80088ae:	4a0c      	ldr	r2, [pc, #48]	; (80088e0 <xTaskRemoveFromEventList+0x78>)
 80088b0:	2014      	movs	r0, #20
 80088b2:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80088b6:	f7fe fd2f 	bl	8007318 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80088ba:	4b0a      	ldr	r3, [pc, #40]	; (80088e4 <xTaskRemoveFromEventList+0x7c>)
 80088bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80088c2:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80088c4:	bf85      	ittet	hi
 80088c6:	4b08      	ldrhi	r3, [pc, #32]	; (80088e8 <xTaskRemoveFromEventList+0x80>)
 80088c8:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80088ca:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80088cc:	6018      	strhi	r0, [r3, #0]
}
 80088ce:	b002      	add	sp, #8
 80088d0:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80088d2:	4806      	ldr	r0, [pc, #24]	; (80088ec <xTaskRemoveFromEventList+0x84>)
 80088d4:	e7ef      	b.n	80088b6 <xTaskRemoveFromEventList+0x4e>
 80088d6:	bf00      	nop
 80088d8:	2000a1e0 	.word	0x2000a1e0
 80088dc:	2000a1e8 	.word	0x2000a1e8
 80088e0:	20009d74 	.word	0x20009d74
 80088e4:	20009d68 	.word	0x20009d68
 80088e8:	2000a260 	.word	0x2000a260
 80088ec:	2000a21c 	.word	0x2000a21c

080088f0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80088f0:	4b03      	ldr	r3, [pc, #12]	; (8008900 <vTaskInternalSetTimeOutState+0x10>)
 80088f2:	681b      	ldr	r3, [r3, #0]
 80088f4:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80088f6:	4b03      	ldr	r3, [pc, #12]	; (8008904 <vTaskInternalSetTimeOutState+0x14>)
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	6043      	str	r3, [r0, #4]
}
 80088fc:	4770      	bx	lr
 80088fe:	bf00      	nop
 8008900:	2000a218 	.word	0x2000a218
 8008904:	2000a25c 	.word	0x2000a25c

08008908 <xTaskCheckForTimeOut>:
{
 8008908:	b570      	push	{r4, r5, r6, lr}
 800890a:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800890c:	4605      	mov	r5, r0
 800890e:	b940      	cbnz	r0, 8008922 <xTaskCheckForTimeOut+0x1a>
 8008910:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008914:	f383 8811 	msr	BASEPRI, r3
 8008918:	f3bf 8f6f 	isb	sy
 800891c:	f3bf 8f4f 	dsb	sy
 8008920:	e7fe      	b.n	8008920 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8008922:	b941      	cbnz	r1, 8008936 <xTaskCheckForTimeOut+0x2e>
 8008924:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008928:	f383 8811 	msr	BASEPRI, r3
 800892c:	f3bf 8f6f 	isb	sy
 8008930:	f3bf 8f4f 	dsb	sy
 8008934:	e7fe      	b.n	8008934 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8008936:	f7fe fd8d 	bl	8007454 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800893a:	4b0f      	ldr	r3, [pc, #60]	; (8008978 <xTaskCheckForTimeOut+0x70>)
 800893c:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800893e:	6823      	ldr	r3, [r4, #0]
 8008940:	1c5a      	adds	r2, r3, #1
 8008942:	d010      	beq.n	8008966 <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008944:	480d      	ldr	r0, [pc, #52]	; (800897c <xTaskCheckForTimeOut+0x74>)
 8008946:	682e      	ldr	r6, [r5, #0]
 8008948:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800894a:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800894c:	4286      	cmp	r6, r0
 800894e:	d001      	beq.n	8008954 <xTaskCheckForTimeOut+0x4c>
 8008950:	428a      	cmp	r2, r1
 8008952:	d90f      	bls.n	8008974 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008954:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008956:	4283      	cmp	r3, r0
 8008958:	d90a      	bls.n	8008970 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800895a:	1a5b      	subs	r3, r3, r1
 800895c:	4413      	add	r3, r2
 800895e:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008960:	4628      	mov	r0, r5
 8008962:	f7ff ffc5 	bl	80088f0 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8008966:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008968:	f7fe fd94 	bl	8007494 <vPortExitCritical>
}
 800896c:	4620      	mov	r0, r4
 800896e:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008970:	2300      	movs	r3, #0
 8008972:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8008974:	2401      	movs	r4, #1
 8008976:	e7f7      	b.n	8008968 <xTaskCheckForTimeOut+0x60>
 8008978:	2000a25c 	.word	0x2000a25c
 800897c:	2000a218 	.word	0x2000a218

08008980 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008980:	4b01      	ldr	r3, [pc, #4]	; (8008988 <vTaskMissedYield+0x8>)
 8008982:	2201      	movs	r2, #1
 8008984:	601a      	str	r2, [r3, #0]
}
 8008986:	4770      	bx	lr
 8008988:	2000a260 	.word	0x2000a260

0800898c <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800898c:	4b05      	ldr	r3, [pc, #20]	; (80089a4 <xTaskGetSchedulerState+0x18>)
 800898e:	681b      	ldr	r3, [r3, #0]
 8008990:	b133      	cbz	r3, 80089a0 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008992:	4b05      	ldr	r3, [pc, #20]	; (80089a8 <xTaskGetSchedulerState+0x1c>)
 8008994:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8008996:	2b00      	cmp	r3, #0
 8008998:	bf0c      	ite	eq
 800899a:	2002      	moveq	r0, #2
 800899c:	2000      	movne	r0, #0
 800899e:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80089a0:	2001      	movs	r0, #1
	}
 80089a2:	4770      	bx	lr
 80089a4:	2000a230 	.word	0x2000a230
 80089a8:	2000a1e0 	.word	0x2000a1e0

080089ac <xTaskPriorityInherit>:
	{
 80089ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80089ae:	4604      	mov	r4, r0
 80089b0:	b348      	cbz	r0, 8008a06 <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80089b2:	4d1c      	ldr	r5, [pc, #112]	; (8008a24 <xTaskPriorityInherit+0x78>)
 80089b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80089b6:	682a      	ldr	r2, [r5, #0]
 80089b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80089ba:	4293      	cmp	r3, r2
 80089bc:	d229      	bcs.n	8008a12 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80089be:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80089c0:	4e19      	ldr	r6, [pc, #100]	; (8008a28 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80089c2:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80089c4:	bfa1      	itttt	ge
 80089c6:	682a      	ldrge	r2, [r5, #0]
 80089c8:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80089ca:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80089ce:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80089d0:	2214      	movs	r2, #20
 80089d2:	fb02 6303 	mla	r3, r2, r3, r6
 80089d6:	6942      	ldr	r2, [r0, #20]
 80089d8:	429a      	cmp	r2, r3
 80089da:	d116      	bne.n	8008a0a <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80089dc:	1d01      	adds	r1, r0, #4
 80089de:	4608      	mov	r0, r1
 80089e0:	9101      	str	r1, [sp, #4]
 80089e2:	f7fe fcbc 	bl	800735e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089e6:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80089e8:	4a10      	ldr	r2, [pc, #64]	; (8008a2c <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80089ec:	6810      	ldr	r0, [r2, #0]
 80089ee:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089f0:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80089f2:	4283      	cmp	r3, r0
 80089f4:	f04f 0014 	mov.w	r0, #20
 80089f8:	fb00 6003 	mla	r0, r0, r3, r6
 80089fc:	bf88      	it	hi
 80089fe:	6013      	strhi	r3, [r2, #0]
 8008a00:	f7fe fc8a 	bl	8007318 <vListInsertEnd>
				xReturn = pdTRUE;
 8008a04:	2001      	movs	r0, #1
	}
 8008a06:	b002      	add	sp, #8
 8008a08:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008a0a:	682b      	ldr	r3, [r5, #0]
 8008a0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a0e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008a10:	e7f8      	b.n	8008a04 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008a12:	682b      	ldr	r3, [r5, #0]
 8008a14:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008a16:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008a18:	42a0      	cmp	r0, r4
 8008a1a:	bf2c      	ite	cs
 8008a1c:	2000      	movcs	r0, #0
 8008a1e:	2001      	movcc	r0, #1
 8008a20:	e7f1      	b.n	8008a06 <xTaskPriorityInherit+0x5a>
 8008a22:	bf00      	nop
 8008a24:	20009d68 	.word	0x20009d68
 8008a28:	20009d74 	.word	0x20009d74
 8008a2c:	2000a1e8 	.word	0x2000a1e8

08008a30 <xTaskPriorityDisinherit>:
	{
 8008a30:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008a32:	b910      	cbnz	r0, 8008a3a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008a34:	2000      	movs	r0, #0
	}
 8008a36:	b002      	add	sp, #8
 8008a38:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008a3a:	4b1c      	ldr	r3, [pc, #112]	; (8008aac <xTaskPriorityDisinherit+0x7c>)
 8008a3c:	681c      	ldr	r4, [r3, #0]
 8008a3e:	4284      	cmp	r4, r0
 8008a40:	d008      	beq.n	8008a54 <xTaskPriorityDisinherit+0x24>
 8008a42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a46:	f383 8811 	msr	BASEPRI, r3
 8008a4a:	f3bf 8f6f 	isb	sy
 8008a4e:	f3bf 8f4f 	dsb	sy
 8008a52:	e7fe      	b.n	8008a52 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008a54:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008a56:	b943      	cbnz	r3, 8008a6a <xTaskPriorityDisinherit+0x3a>
 8008a58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5c:	f383 8811 	msr	BASEPRI, r3
 8008a60:	f3bf 8f6f 	isb	sy
 8008a64:	f3bf 8f4f 	dsb	sy
 8008a68:	e7fe      	b.n	8008a68 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008a6a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008a6c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008a6e:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008a70:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008a72:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008a74:	d0de      	beq.n	8008a34 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008a76:	2b00      	cmp	r3, #0
 8008a78:	d1dc      	bne.n	8008a34 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a7a:	1d21      	adds	r1, r4, #4
 8008a7c:	4608      	mov	r0, r1
 8008a7e:	9101      	str	r1, [sp, #4]
 8008a80:	f7fe fc6d 	bl	800735e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008a84:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008a86:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008a88:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a8a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008a8e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008a90:	4a07      	ldr	r2, [pc, #28]	; (8008ab0 <xTaskPriorityDisinherit+0x80>)
 8008a92:	6810      	ldr	r0, [r2, #0]
 8008a94:	4283      	cmp	r3, r0
 8008a96:	bf88      	it	hi
 8008a98:	6013      	strhi	r3, [r2, #0]
 8008a9a:	4a06      	ldr	r2, [pc, #24]	; (8008ab4 <xTaskPriorityDisinherit+0x84>)
 8008a9c:	2014      	movs	r0, #20
 8008a9e:	fb00 2003 	mla	r0, r0, r3, r2
 8008aa2:	f7fe fc39 	bl	8007318 <vListInsertEnd>
					xReturn = pdTRUE;
 8008aa6:	2001      	movs	r0, #1
		return xReturn;
 8008aa8:	e7c5      	b.n	8008a36 <xTaskPriorityDisinherit+0x6>
 8008aaa:	bf00      	nop
 8008aac:	20009d68 	.word	0x20009d68
 8008ab0:	2000a1e8 	.word	0x2000a1e8
 8008ab4:	20009d74 	.word	0x20009d74

08008ab8 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008ab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008aba:	4604      	mov	r4, r0
 8008abc:	2800      	cmp	r0, #0
 8008abe:	d044      	beq.n	8008b4a <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008ac0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ac2:	b942      	cbnz	r2, 8008ad6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008ac4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ac8:	f383 8811 	msr	BASEPRI, r3
 8008acc:	f3bf 8f6f 	isb	sy
 8008ad0:	f3bf 8f4f 	dsb	sy
 8008ad4:	e7fe      	b.n	8008ad4 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008ad6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008ad8:	4299      	cmp	r1, r3
 8008ada:	bf38      	it	cc
 8008adc:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008ade:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008ae0:	428b      	cmp	r3, r1
 8008ae2:	d032      	beq.n	8008b4a <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008ae4:	2a01      	cmp	r2, #1
 8008ae6:	d130      	bne.n	8008b4a <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008ae8:	4a19      	ldr	r2, [pc, #100]	; (8008b50 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008aea:	6812      	ldr	r2, [r2, #0]
 8008aec:	4282      	cmp	r2, r0
 8008aee:	d108      	bne.n	8008b02 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008af0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008af4:	f383 8811 	msr	BASEPRI, r3
 8008af8:	f3bf 8f6f 	isb	sy
 8008afc:	f3bf 8f4f 	dsb	sy
 8008b00:	e7fe      	b.n	8008b00 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008b02:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008b04:	4d13      	ldr	r5, [pc, #76]	; (8008b54 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008b06:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008b08:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008b0a:	f04f 0214 	mov.w	r2, #20
 8008b0e:	fb02 5303 	mla	r3, r2, r3, r5
 8008b12:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b14:	bfa4      	itt	ge
 8008b16:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008b1a:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008b1c:	429a      	cmp	r2, r3
 8008b1e:	d114      	bne.n	8008b4a <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008b20:	1d01      	adds	r1, r0, #4
 8008b22:	4608      	mov	r0, r1
 8008b24:	9101      	str	r1, [sp, #4]
 8008b26:	f7fe fc1a 	bl	800735e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008b2a:	4a0b      	ldr	r2, [pc, #44]	; (8008b58 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008b2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b2e:	6810      	ldr	r0, [r2, #0]
 8008b30:	9901      	ldr	r1, [sp, #4]
 8008b32:	4283      	cmp	r3, r0
 8008b34:	f04f 0014 	mov.w	r0, #20
 8008b38:	fb00 5003 	mla	r0, r0, r3, r5
 8008b3c:	bf88      	it	hi
 8008b3e:	6013      	strhi	r3, [r2, #0]
	}
 8008b40:	b003      	add	sp, #12
 8008b42:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008b46:	f7fe bbe7 	b.w	8007318 <vListInsertEnd>
	}
 8008b4a:	b003      	add	sp, #12
 8008b4c:	bd30      	pop	{r4, r5, pc}
 8008b4e:	bf00      	nop
 8008b50:	20009d68 	.word	0x20009d68
 8008b54:	20009d74 	.word	0x20009d74
 8008b58:	2000a1e8 	.word	0x2000a1e8

08008b5c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008b5c:	4b04      	ldr	r3, [pc, #16]	; (8008b70 <pvTaskIncrementMutexHeldCount+0x14>)
 8008b5e:	681a      	ldr	r2, [r3, #0]
 8008b60:	b11a      	cbz	r2, 8008b6a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008b62:	6819      	ldr	r1, [r3, #0]
 8008b64:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008b66:	3201      	adds	r2, #1
 8008b68:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008b6a:	6818      	ldr	r0, [r3, #0]
	}
 8008b6c:	4770      	bx	lr
 8008b6e:	bf00      	nop
 8008b70:	20009d68 	.word	0x20009d68

08008b74 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008b74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008b76:	4c11      	ldr	r4, [pc, #68]	; (8008bbc <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008b78:	f7fe fc6c 	bl	8007454 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008b7c:	6825      	ldr	r5, [r4, #0]
 8008b7e:	b9bd      	cbnz	r5, 8008bb0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008b80:	4f0f      	ldr	r7, [pc, #60]	; (8008bc0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008b82:	4e10      	ldr	r6, [pc, #64]	; (8008bc4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008b84:	4638      	mov	r0, r7
 8008b86:	f7fe fbb9 	bl	80072fc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008b8a:	4630      	mov	r0, r6
 8008b8c:	f7fe fbb6 	bl	80072fc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008b90:	4b0d      	ldr	r3, [pc, #52]	; (8008bc8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008b92:	4a0e      	ldr	r2, [pc, #56]	; (8008bcc <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008b94:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008b96:	4b0e      	ldr	r3, [pc, #56]	; (8008bd0 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008b98:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008b9a:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008b9c:	200a      	movs	r0, #10
 8008b9e:	4b0d      	ldr	r3, [pc, #52]	; (8008bd4 <prvCheckForValidListAndQueue+0x60>)
 8008ba0:	9500      	str	r5, [sp, #0]
 8008ba2:	f7fe fe68 	bl	8007876 <xQueueGenericCreateStatic>
 8008ba6:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008ba8:	b110      	cbz	r0, 8008bb0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008baa:	490b      	ldr	r1, [pc, #44]	; (8008bd8 <prvCheckForValidListAndQueue+0x64>)
 8008bac:	f7ff fa32 	bl	8008014 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008bb0:	b003      	add	sp, #12
 8008bb2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008bb6:	f7fe bc6d 	b.w	8007494 <vPortExitCritical>
 8008bba:	bf00      	nop
 8008bbc:	2000a388 	.word	0x2000a388
 8008bc0:	2000a30c 	.word	0x2000a30c
 8008bc4:	2000a320 	.word	0x2000a320
 8008bc8:	2000a264 	.word	0x2000a264
 8008bcc:	2000a26c 	.word	0x2000a26c
 8008bd0:	2000a268 	.word	0x2000a268
 8008bd4:	2000a338 	.word	0x2000a338
 8008bd8:	0801bfca 	.word	0x0801bfca

08008bdc <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008bdc:	4291      	cmp	r1, r2
{
 8008bde:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008be0:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008be2:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008be4:	d80a      	bhi.n	8008bfc <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008be6:	1ad2      	subs	r2, r2, r3
 8008be8:	6983      	ldr	r3, [r0, #24]
 8008bea:	429a      	cmp	r2, r3
 8008bec:	d20d      	bcs.n	8008c0a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008bee:	4b08      	ldr	r3, [pc, #32]	; (8008c10 <prvInsertTimerInActiveList+0x34>)
 8008bf0:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008bf2:	6818      	ldr	r0, [r3, #0]
 8008bf4:	f7fe fb9c 	bl	8007330 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008bf8:	2000      	movs	r0, #0
}
 8008bfa:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008bfc:	429a      	cmp	r2, r3
 8008bfe:	d201      	bcs.n	8008c04 <prvInsertTimerInActiveList+0x28>
 8008c00:	4299      	cmp	r1, r3
 8008c02:	d202      	bcs.n	8008c0a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008c04:	4b03      	ldr	r3, [pc, #12]	; (8008c14 <prvInsertTimerInActiveList+0x38>)
 8008c06:	1d01      	adds	r1, r0, #4
 8008c08:	e7f3      	b.n	8008bf2 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008c0a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008c0c:	e7f5      	b.n	8008bfa <prvInsertTimerInActiveList+0x1e>
 8008c0e:	bf00      	nop
 8008c10:	2000a268 	.word	0x2000a268
 8008c14:	2000a264 	.word	0x2000a264

08008c18 <xTimerCreateTimerTask>:
{
 8008c18:	b510      	push	{r4, lr}
 8008c1a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008c1c:	f7ff ffaa 	bl	8008b74 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008c20:	4b12      	ldr	r3, [pc, #72]	; (8008c6c <xTimerCreateTimerTask+0x54>)
 8008c22:	681b      	ldr	r3, [r3, #0]
 8008c24:	b1b3      	cbz	r3, 8008c54 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008c26:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008c28:	aa07      	add	r2, sp, #28
 8008c2a:	a906      	add	r1, sp, #24
 8008c2c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008c2e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008c32:	f7fe fa69 	bl	8007108 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008c36:	9b05      	ldr	r3, [sp, #20]
 8008c38:	9302      	str	r3, [sp, #8]
 8008c3a:	9b06      	ldr	r3, [sp, #24]
 8008c3c:	9301      	str	r3, [sp, #4]
 8008c3e:	2302      	movs	r3, #2
 8008c40:	9300      	str	r3, [sp, #0]
 8008c42:	9a07      	ldr	r2, [sp, #28]
 8008c44:	490a      	ldr	r1, [pc, #40]	; (8008c70 <xTimerCreateTimerTask+0x58>)
 8008c46:	480b      	ldr	r0, [pc, #44]	; (8008c74 <xTimerCreateTimerTask+0x5c>)
 8008c48:	4623      	mov	r3, r4
 8008c4a:	f7ff fbaa 	bl	80083a2 <xTaskCreateStatic>
 8008c4e:	4b0a      	ldr	r3, [pc, #40]	; (8008c78 <xTimerCreateTimerTask+0x60>)
 8008c50:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008c52:	b940      	cbnz	r0, 8008c66 <xTimerCreateTimerTask+0x4e>
 8008c54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c58:	f383 8811 	msr	BASEPRI, r3
 8008c5c:	f3bf 8f6f 	isb	sy
 8008c60:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008c64:	e7fe      	b.n	8008c64 <xTimerCreateTimerTask+0x4c>
}
 8008c66:	2001      	movs	r0, #1
 8008c68:	b008      	add	sp, #32
 8008c6a:	bd10      	pop	{r4, pc}
 8008c6c:	2000a388 	.word	0x2000a388
 8008c70:	0801bfcf 	.word	0x0801bfcf
 8008c74:	08008d81 	.word	0x08008d81
 8008c78:	2000a38c 	.word	0x2000a38c

08008c7c <xTimerGenericCommand>:
{
 8008c7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008c7e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008c80:	4604      	mov	r4, r0
{
 8008c82:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008c84:	b940      	cbnz	r0, 8008c98 <xTimerGenericCommand+0x1c>
 8008c86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c8a:	f383 8811 	msr	BASEPRI, r3
 8008c8e:	f3bf 8f6f 	isb	sy
 8008c92:	f3bf 8f4f 	dsb	sy
 8008c96:	e7fe      	b.n	8008c96 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008c98:	4d0d      	ldr	r5, [pc, #52]	; (8008cd0 <xTimerGenericCommand+0x54>)
 8008c9a:	6828      	ldr	r0, [r5, #0]
 8008c9c:	b180      	cbz	r0, 8008cc0 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008c9e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008ca0:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008ca4:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008ca6:	dc0d      	bgt.n	8008cc4 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008ca8:	f7ff fe70 	bl	800898c <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008cac:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008cae:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008cb0:	bf08      	it	eq
 8008cb2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008cb4:	6828      	ldr	r0, [r5, #0]
 8008cb6:	bf18      	it	ne
 8008cb8:	461a      	movne	r2, r3
 8008cba:	4669      	mov	r1, sp
 8008cbc:	f7fe fe90 	bl	80079e0 <xQueueGenericSend>
}
 8008cc0:	b004      	add	sp, #16
 8008cc2:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008cc4:	2300      	movs	r3, #0
 8008cc6:	4669      	mov	r1, sp
 8008cc8:	f7fe ff3d 	bl	8007b46 <xQueueGenericSendFromISR>
 8008ccc:	e7f8      	b.n	8008cc0 <xTimerGenericCommand+0x44>
 8008cce:	bf00      	nop
 8008cd0:	2000a388 	.word	0x2000a388

08008cd4 <prvSampleTimeNow>:
{
 8008cd4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008cd8:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8008d7c <prvSampleTimeNow+0xa8>
{
 8008cdc:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008cde:	f7ff fbcd 	bl	800847c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008ce2:	f8d8 3000 	ldr.w	r3, [r8]
 8008ce6:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008ce8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008cea:	d940      	bls.n	8008d6e <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008cec:	4f21      	ldr	r7, [pc, #132]	; (8008d74 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008cee:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008cf2:	683b      	ldr	r3, [r7, #0]
 8008cf4:	681a      	ldr	r2, [r3, #0]
 8008cf6:	b95a      	cbnz	r2, 8008d10 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008cf8:	4a1f      	ldr	r2, [pc, #124]	; (8008d78 <prvSampleTimeNow+0xa4>)
 8008cfa:	6811      	ldr	r1, [r2, #0]
 8008cfc:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008cfe:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008d00:	2301      	movs	r3, #1
}
 8008d02:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8008d04:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008d06:	f8c8 5000 	str.w	r5, [r8]
}
 8008d0a:	b004      	add	sp, #16
 8008d0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008d10:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d12:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008d14:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008d18:	1d21      	adds	r1, r4, #4
 8008d1a:	4608      	mov	r0, r1
 8008d1c:	9103      	str	r1, [sp, #12]
 8008d1e:	f7fe fb1e 	bl	800735e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008d22:	6a23      	ldr	r3, [r4, #32]
 8008d24:	4620      	mov	r0, r4
 8008d26:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008d28:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008d2c:	9903      	ldr	r1, [sp, #12]
 8008d2e:	f013 0f04 	tst.w	r3, #4
 8008d32:	d0de      	beq.n	8008cf2 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008d34:	69a3      	ldr	r3, [r4, #24]
 8008d36:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8008d38:	459a      	cmp	sl, r3
 8008d3a:	d205      	bcs.n	8008d48 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008d3c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008d3e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008d40:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008d42:	f7fe faf5 	bl	8007330 <vListInsert>
 8008d46:	e7d4      	b.n	8008cf2 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008d48:	2300      	movs	r3, #0
 8008d4a:	f8cd 9000 	str.w	r9, [sp]
 8008d4e:	4652      	mov	r2, sl
 8008d50:	4619      	mov	r1, r3
 8008d52:	4620      	mov	r0, r4
 8008d54:	f7ff ff92 	bl	8008c7c <xTimerGenericCommand>
				configASSERT( xResult );
 8008d58:	2800      	cmp	r0, #0
 8008d5a:	d1ca      	bne.n	8008cf2 <prvSampleTimeNow+0x1e>
 8008d5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d60:	f383 8811 	msr	BASEPRI, r3
 8008d64:	f3bf 8f6f 	isb	sy
 8008d68:	f3bf 8f4f 	dsb	sy
 8008d6c:	e7fe      	b.n	8008d6c <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8008d6e:	2300      	movs	r3, #0
 8008d70:	e7c7      	b.n	8008d02 <prvSampleTimeNow+0x2e>
 8008d72:	bf00      	nop
 8008d74:	2000a264 	.word	0x2000a264
 8008d78:	2000a268 	.word	0x2000a268
 8008d7c:	2000a334 	.word	0x2000a334

08008d80 <prvTimerTask>:
{
 8008d80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d84:	4d6e      	ldr	r5, [pc, #440]	; (8008f40 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008d86:	4e6f      	ldr	r6, [pc, #444]	; (8008f44 <prvTimerTask+0x1c4>)
{
 8008d88:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d8a:	682b      	ldr	r3, [r5, #0]
 8008d8c:	f8d3 8000 	ldr.w	r8, [r3]
 8008d90:	f1b8 0f00 	cmp.w	r8, #0
 8008d94:	d035      	beq.n	8008e02 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008d96:	68db      	ldr	r3, [r3, #12]
 8008d98:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d9c:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8008d9e:	f7ff fb65 	bl	800846c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008da2:	a804      	add	r0, sp, #16
 8008da4:	f7ff ff96 	bl	8008cd4 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8008da8:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008daa:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8008dac:	2b00      	cmp	r3, #0
 8008dae:	d169      	bne.n	8008e84 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008db0:	2c00      	cmp	r4, #0
 8008db2:	d14c      	bne.n	8008e4e <prvTimerTask+0xce>
 8008db4:	4540      	cmp	r0, r8
 8008db6:	d350      	bcc.n	8008e5a <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8008db8:	f7ff fbfc 	bl	80085b4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008dbc:	682b      	ldr	r3, [r5, #0]
 8008dbe:	68db      	ldr	r3, [r3, #12]
 8008dc0:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008dc2:	1d38      	adds	r0, r7, #4
 8008dc4:	f7fe facb 	bl	800735e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008dc8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8008dcc:	0758      	lsls	r0, r3, #29
 8008dce:	d51a      	bpl.n	8008e06 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008dd0:	69b9      	ldr	r1, [r7, #24]
 8008dd2:	4643      	mov	r3, r8
 8008dd4:	464a      	mov	r2, r9
 8008dd6:	4441      	add	r1, r8
 8008dd8:	4638      	mov	r0, r7
 8008dda:	f7ff feff 	bl	8008bdc <prvInsertTimerInActiveList>
 8008dde:	b1b0      	cbz	r0, 8008e0e <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008de0:	9400      	str	r4, [sp, #0]
 8008de2:	4623      	mov	r3, r4
 8008de4:	4642      	mov	r2, r8
 8008de6:	4621      	mov	r1, r4
 8008de8:	4638      	mov	r0, r7
 8008dea:	f7ff ff47 	bl	8008c7c <xTimerGenericCommand>
			configASSERT( xResult );
 8008dee:	b970      	cbnz	r0, 8008e0e <prvTimerTask+0x8e>
 8008df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df4:	f383 8811 	msr	BASEPRI, r3
 8008df8:	f3bf 8f6f 	isb	sy
 8008dfc:	f3bf 8f4f 	dsb	sy
 8008e00:	e7fe      	b.n	8008e00 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008e02:	2401      	movs	r4, #1
 8008e04:	e7cb      	b.n	8008d9e <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008e06:	f023 0301 	bic.w	r3, r3, #1
 8008e0a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008e0e:	6a3b      	ldr	r3, [r7, #32]
 8008e10:	4638      	mov	r0, r7
 8008e12:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008e14:	6830      	ldr	r0, [r6, #0]
 8008e16:	2200      	movs	r2, #0
 8008e18:	a904      	add	r1, sp, #16
 8008e1a:	f7fe ff49 	bl	8007cb0 <xQueueReceive>
 8008e1e:	2800      	cmp	r0, #0
 8008e20:	d0b3      	beq.n	8008d8a <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008e22:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008e24:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008e26:	2b00      	cmp	r3, #0
 8008e28:	db2f      	blt.n	8008e8a <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008e2a:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008e2c:	6963      	ldr	r3, [r4, #20]
 8008e2e:	2b00      	cmp	r3, #0
 8008e30:	d132      	bne.n	8008e98 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008e32:	a803      	add	r0, sp, #12
 8008e34:	f7ff ff4e 	bl	8008cd4 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8008e38:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8008e3a:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8008e3c:	2b09      	cmp	r3, #9
 8008e3e:	d8e9      	bhi.n	8008e14 <prvTimerTask+0x94>
 8008e40:	e8df f003 	tbb	[pc, r3]
 8008e44:	572e2e2e 	.word	0x572e2e2e
 8008e48:	2e2e765e 	.word	0x2e2e765e
 8008e4c:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008e4e:	4b3e      	ldr	r3, [pc, #248]	; (8008f48 <prvTimerTask+0x1c8>)
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	681c      	ldr	r4, [r3, #0]
 8008e54:	fab4 f484 	clz	r4, r4
 8008e58:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008e5a:	6830      	ldr	r0, [r6, #0]
 8008e5c:	4622      	mov	r2, r4
 8008e5e:	eba8 0109 	sub.w	r1, r8, r9
 8008e62:	f7ff f914 	bl	800808e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008e66:	f7ff fba5 	bl	80085b4 <xTaskResumeAll>
 8008e6a:	2800      	cmp	r0, #0
 8008e6c:	d1d2      	bne.n	8008e14 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8008e6e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e72:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e76:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008e7a:	f3bf 8f4f 	dsb	sy
 8008e7e:	f3bf 8f6f 	isb	sy
 8008e82:	e7c7      	b.n	8008e14 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8008e84:	f7ff fb96 	bl	80085b4 <xTaskResumeAll>
}
 8008e88:	e7c4      	b.n	8008e14 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008e8a:	9b05      	ldr	r3, [sp, #20]
 8008e8c:	9907      	ldr	r1, [sp, #28]
 8008e8e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008e90:	9b04      	ldr	r3, [sp, #16]
 8008e92:	2b00      	cmp	r3, #0
 8008e94:	dbbe      	blt.n	8008e14 <prvTimerTask+0x94>
 8008e96:	e7c8      	b.n	8008e2a <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008e98:	1d20      	adds	r0, r4, #4
 8008e9a:	f7fe fa60 	bl	800735e <uxListRemove>
 8008e9e:	e7c8      	b.n	8008e32 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ea0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008ea4:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008ea6:	f043 0301 	orr.w	r3, r3, #1
 8008eaa:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008eae:	9b05      	ldr	r3, [sp, #20]
 8008eb0:	4620      	mov	r0, r4
 8008eb2:	4419      	add	r1, r3
 8008eb4:	f7ff fe92 	bl	8008bdc <prvInsertTimerInActiveList>
 8008eb8:	2800      	cmp	r0, #0
 8008eba:	d0ab      	beq.n	8008e14 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008ebc:	6a23      	ldr	r3, [r4, #32]
 8008ebe:	4620      	mov	r0, r4
 8008ec0:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008ec2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008ec6:	0759      	lsls	r1, r3, #29
 8008ec8:	d5a4      	bpl.n	8008e14 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008eca:	69a2      	ldr	r2, [r4, #24]
 8008ecc:	9905      	ldr	r1, [sp, #20]
 8008ece:	2300      	movs	r3, #0
 8008ed0:	440a      	add	r2, r1
 8008ed2:	9300      	str	r3, [sp, #0]
 8008ed4:	4619      	mov	r1, r3
 8008ed6:	4620      	mov	r0, r4
 8008ed8:	f7ff fed0 	bl	8008c7c <xTimerGenericCommand>
							configASSERT( xResult );
 8008edc:	2800      	cmp	r0, #0
 8008ede:	d199      	bne.n	8008e14 <prvTimerTask+0x94>
 8008ee0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ee4:	f383 8811 	msr	BASEPRI, r3
 8008ee8:	f3bf 8f6f 	isb	sy
 8008eec:	f3bf 8f4f 	dsb	sy
 8008ef0:	e7fe      	b.n	8008ef0 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008ef2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008ef6:	f023 0301 	bic.w	r3, r3, #1
 8008efa:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008efe:	e789      	b.n	8008e14 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008f00:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008f04:	f043 0301 	orr.w	r3, r3, #1
 8008f08:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008f0c:	9905      	ldr	r1, [sp, #20]
 8008f0e:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008f10:	b941      	cbnz	r1, 8008f24 <prvTimerTask+0x1a4>
 8008f12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f16:	f383 8811 	msr	BASEPRI, r3
 8008f1a:	f3bf 8f6f 	isb	sy
 8008f1e:	f3bf 8f4f 	dsb	sy
 8008f22:	e7fe      	b.n	8008f22 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008f24:	4603      	mov	r3, r0
 8008f26:	4401      	add	r1, r0
 8008f28:	4620      	mov	r0, r4
 8008f2a:	f7ff fe57 	bl	8008bdc <prvInsertTimerInActiveList>
					break;
 8008f2e:	e771      	b.n	8008e14 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008f30:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008f34:	079a      	lsls	r2, r3, #30
 8008f36:	d4de      	bmi.n	8008ef6 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8008f38:	4620      	mov	r0, r4
 8008f3a:	f7fe f9a7 	bl	800728c <vPortFree>
 8008f3e:	e769      	b.n	8008e14 <prvTimerTask+0x94>
 8008f40:	2000a264 	.word	0x2000a264
 8008f44:	2000a388 	.word	0x2000a388
 8008f48:	2000a268 	.word	0x2000a268

08008f4c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008f4c:	8880      	ldrh	r0, [r0, #4]
 8008f4e:	4770      	bx	lr

08008f50 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008f50:	2300      	movs	r3, #0
 8008f52:	8083      	strh	r3, [r0, #4]
 8008f54:	4770      	bx	lr
	...

08008f58 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008f58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f5a:	6803      	ldr	r3, [r0, #0]
 8008f5c:	4605      	mov	r5, r0
 8008f5e:	460e      	mov	r6, r1
 8008f60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f62:	2100      	movs	r1, #0
 8008f64:	4798      	blx	r3
 8008f66:	682b      	ldr	r3, [r5, #0]
 8008f68:	4604      	mov	r4, r0
 8008f6a:	6a1b      	ldr	r3, [r3, #32]
 8008f6c:	4628      	mov	r0, r5
 8008f6e:	4798      	blx	r3
 8008f70:	88ab      	ldrh	r3, [r5, #4]
 8008f72:	1b34      	subs	r4, r6, r4
 8008f74:	b2a4      	uxth	r4, r4
 8008f76:	fbb4 f4f0 	udiv	r4, r4, r0
 8008f7a:	42a3      	cmp	r3, r4
 8008f7c:	d805      	bhi.n	8008f8a <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008f7e:	4b0e      	ldr	r3, [pc, #56]	; (8008fb8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008f80:	4a0e      	ldr	r2, [pc, #56]	; (8008fbc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008f82:	2120      	movs	r1, #32
 8008f84:	480e      	ldr	r0, [pc, #56]	; (8008fc0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008f86:	f010 ff5b 	bl	8019e40 <__assert_func>
 8008f8a:	682b      	ldr	r3, [r5, #0]
 8008f8c:	2100      	movs	r1, #0
 8008f8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f90:	4628      	mov	r0, r5
 8008f92:	4798      	blx	r3
 8008f94:	682b      	ldr	r3, [r5, #0]
 8008f96:	4607      	mov	r7, r0
 8008f98:	6a1b      	ldr	r3, [r3, #32]
 8008f9a:	4628      	mov	r0, r5
 8008f9c:	4798      	blx	r3
 8008f9e:	1bf3      	subs	r3, r6, r7
 8008fa0:	b29b      	uxth	r3, r3
 8008fa2:	fbb3 f2f0 	udiv	r2, r3, r0
 8008fa6:	fb02 3010 	mls	r0, r2, r0, r3
 8008faa:	b118      	cbz	r0, 8008fb4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008fac:	4b05      	ldr	r3, [pc, #20]	; (8008fc4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008fae:	4a03      	ldr	r2, [pc, #12]	; (8008fbc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008fb0:	2121      	movs	r1, #33	; 0x21
 8008fb2:	e7e7      	b.n	8008f84 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008fb4:	4620      	mov	r0, r4
 8008fb6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008fb8:	0801bfd7 	.word	0x0801bfd7
 8008fbc:	0801c142 	.word	0x0801c142
 8008fc0:	0801bfec 	.word	0x0801bfec
 8008fc4:	0801c01a 	.word	0x0801c01a

08008fc8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008fc8:	b538      	push	{r3, r4, r5, lr}
 8008fca:	6803      	ldr	r3, [r0, #0]
 8008fcc:	6a1b      	ldr	r3, [r3, #32]
 8008fce:	460d      	mov	r5, r1
 8008fd0:	4604      	mov	r4, r0
 8008fd2:	4798      	blx	r3
 8008fd4:	4285      	cmp	r5, r0
 8008fd6:	d905      	bls.n	8008fe4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008fd8:	4b0c      	ldr	r3, [pc, #48]	; (800900c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008fda:	4a0d      	ldr	r2, [pc, #52]	; (8009010 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008fdc:	2132      	movs	r1, #50	; 0x32
 8008fde:	480d      	ldr	r0, [pc, #52]	; (8009014 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008fe0:	f010 ff2e 	bl	8019e40 <__assert_func>
 8008fe4:	6823      	ldr	r3, [r4, #0]
 8008fe6:	88a5      	ldrh	r5, [r4, #4]
 8008fe8:	69db      	ldr	r3, [r3, #28]
 8008fea:	4620      	mov	r0, r4
 8008fec:	4798      	blx	r3
 8008fee:	4285      	cmp	r5, r0
 8008ff0:	d303      	bcc.n	8008ffa <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008ff2:	4b09      	ldr	r3, [pc, #36]	; (8009018 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008ff4:	4a06      	ldr	r2, [pc, #24]	; (8009010 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008ff6:	2133      	movs	r1, #51	; 0x33
 8008ff8:	e7f1      	b.n	8008fde <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008ffa:	6823      	ldr	r3, [r4, #0]
 8008ffc:	88a1      	ldrh	r1, [r4, #4]
 8008ffe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009000:	4620      	mov	r0, r4
 8009002:	4798      	blx	r3
 8009004:	88a3      	ldrh	r3, [r4, #4]
 8009006:	3301      	adds	r3, #1
 8009008:	80a3      	strh	r3, [r4, #4]
 800900a:	bd38      	pop	{r3, r4, r5, pc}
 800900c:	0801c094 	.word	0x0801c094
 8009010:	0801c185 	.word	0x0801c185
 8009014:	0801bfec 	.word	0x0801bfec
 8009018:	0801c0ab 	.word	0x0801c0ab

0800901c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800901c:	b570      	push	{r4, r5, r6, lr}
 800901e:	6803      	ldr	r3, [r0, #0]
 8009020:	6a1b      	ldr	r3, [r3, #32]
 8009022:	4616      	mov	r6, r2
 8009024:	4604      	mov	r4, r0
 8009026:	460d      	mov	r5, r1
 8009028:	4798      	blx	r3
 800902a:	4286      	cmp	r6, r0
 800902c:	d905      	bls.n	800903a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800902e:	4b06      	ldr	r3, [pc, #24]	; (8009048 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8009030:	4a06      	ldr	r2, [pc, #24]	; (800904c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8009032:	4807      	ldr	r0, [pc, #28]	; (8009050 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8009034:	213c      	movs	r1, #60	; 0x3c
 8009036:	f010 ff03 	bl	8019e40 <__assert_func>
 800903a:	6823      	ldr	r3, [r4, #0]
 800903c:	4629      	mov	r1, r5
 800903e:	4620      	mov	r0, r4
 8009040:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009042:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009046:	4718      	bx	r3
 8009048:	0801c094 	.word	0x0801c094
 800904c:	0801c0f8 	.word	0x0801c0f8
 8009050:	0801bfec 	.word	0x0801bfec

08009054 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009054:	4770      	bx	lr
	...

08009058 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009058:	4a02      	ldr	r2, [pc, #8]	; (8009064 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800905a:	6002      	str	r2, [r0, #0]
 800905c:	2200      	movs	r2, #0
 800905e:	8082      	strh	r2, [r0, #4]
 8009060:	4770      	bx	lr
 8009062:	bf00      	nop
 8009064:	0801c0cc 	.word	0x0801c0cc

08009068 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009068:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800906a:	2000      	movs	r0, #0
 800906c:	b12b      	cbz	r3, 800907a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800906e:	b920      	cbnz	r0, 800907a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009070:	1a5a      	subs	r2, r3, r1
 8009072:	4250      	negs	r0, r2
 8009074:	4150      	adcs	r0, r2
 8009076:	699b      	ldr	r3, [r3, #24]
 8009078:	e7f8      	b.n	800906c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800907a:	4770      	bx	lr

0800907c <_ZN8touchgfx9Container9removeAllEv>:
 800907c:	2200      	movs	r2, #0
 800907e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009080:	b123      	cbz	r3, 800908c <_ZN8touchgfx9Container9removeAllEv+0x10>
 8009082:	6999      	ldr	r1, [r3, #24]
 8009084:	6281      	str	r1, [r0, #40]	; 0x28
 8009086:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800908a:	e7f8      	b.n	800907e <_ZN8touchgfx9Container9removeAllEv+0x2>
 800908c:	4770      	bx	lr

0800908e <_ZN8touchgfx9Container6unlinkEv>:
 800908e:	2300      	movs	r3, #0
 8009090:	6283      	str	r3, [r0, #40]	; 0x28
 8009092:	4770      	bx	lr

08009094 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009094:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009098:	461f      	mov	r7, r3
 800909a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800909e:	460d      	mov	r5, r1
 80090a0:	4616      	mov	r6, r2
 80090a2:	b103      	cbz	r3, 80090a6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80090a4:	6038      	str	r0, [r7, #0]
 80090a6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80090a8:	b314      	cbz	r4, 80090f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80090aa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80090ae:	b1eb      	cbz	r3, 80090ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090b0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80090b4:	428d      	cmp	r5, r1
 80090b6:	db19      	blt.n	80090ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090b8:	8923      	ldrh	r3, [r4, #8]
 80090ba:	b289      	uxth	r1, r1
 80090bc:	440b      	add	r3, r1
 80090be:	b21b      	sxth	r3, r3
 80090c0:	429d      	cmp	r5, r3
 80090c2:	da13      	bge.n	80090ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090c4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80090c8:	4296      	cmp	r6, r2
 80090ca:	db0f      	blt.n	80090ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090cc:	8963      	ldrh	r3, [r4, #10]
 80090ce:	b292      	uxth	r2, r2
 80090d0:	4413      	add	r3, r2
 80090d2:	b21b      	sxth	r3, r3
 80090d4:	429e      	cmp	r6, r3
 80090d6:	da09      	bge.n	80090ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090d8:	6823      	ldr	r3, [r4, #0]
 80090da:	1ab2      	subs	r2, r6, r2
 80090dc:	1a69      	subs	r1, r5, r1
 80090de:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80090e2:	b212      	sxth	r2, r2
 80090e4:	463b      	mov	r3, r7
 80090e6:	b209      	sxth	r1, r1
 80090e8:	4620      	mov	r0, r4
 80090ea:	47c0      	blx	r8
 80090ec:	69a4      	ldr	r4, [r4, #24]
 80090ee:	e7db      	b.n	80090a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80090f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080090f4 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80090f4:	2200      	movs	r2, #0
 80090f6:	8002      	strh	r2, [r0, #0]
 80090f8:	8042      	strh	r2, [r0, #2]
 80090fa:	8082      	strh	r2, [r0, #4]
 80090fc:	80c2      	strh	r2, [r0, #6]
 80090fe:	4770      	bx	lr

08009100 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8009100:	b570      	push	{r4, r5, r6, lr}
 8009102:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009104:	460d      	mov	r5, r1
 8009106:	4616      	mov	r6, r2
 8009108:	b13c      	cbz	r4, 800911a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800910a:	6823      	ldr	r3, [r4, #0]
 800910c:	4620      	mov	r0, r4
 800910e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009110:	4632      	mov	r2, r6
 8009112:	4629      	mov	r1, r5
 8009114:	4798      	blx	r3
 8009116:	69a4      	ldr	r4, [r4, #24]
 8009118:	e7f6      	b.n	8009108 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800911a:	bd70      	pop	{r4, r5, r6, pc}

0800911c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800911c:	b538      	push	{r3, r4, r5, lr}
 800911e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009120:	460d      	mov	r5, r1
 8009122:	b134      	cbz	r4, 8009132 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8009124:	682b      	ldr	r3, [r5, #0]
 8009126:	4621      	mov	r1, r4
 8009128:	689b      	ldr	r3, [r3, #8]
 800912a:	4628      	mov	r0, r5
 800912c:	4798      	blx	r3
 800912e:	69a4      	ldr	r4, [r4, #24]
 8009130:	e7f7      	b.n	8009122 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009132:	bd38      	pop	{r3, r4, r5, pc}

08009134 <_ZN8touchgfx9ContainerD1Ev>:
 8009134:	4770      	bx	lr

08009136 <_ZN8touchgfx9ContainerD0Ev>:
 8009136:	b510      	push	{r4, lr}
 8009138:	212c      	movs	r1, #44	; 0x2c
 800913a:	4604      	mov	r4, r0
 800913c:	f010 fe51 	bl	8019de2 <_ZdlPvj>
 8009140:	4620      	mov	r0, r4
 8009142:	bd10      	pop	{r4, pc}

08009144 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009144:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009146:	b19b      	cbz	r3, 8009170 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009148:	428b      	cmp	r3, r1
 800914a:	d109      	bne.n	8009160 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800914c:	699a      	ldr	r2, [r3, #24]
 800914e:	2100      	movs	r1, #0
 8009150:	6159      	str	r1, [r3, #20]
 8009152:	6282      	str	r2, [r0, #40]	; 0x28
 8009154:	b902      	cbnz	r2, 8009158 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009156:	4770      	bx	lr
 8009158:	6199      	str	r1, [r3, #24]
 800915a:	4770      	bx	lr
 800915c:	4613      	mov	r3, r2
 800915e:	b13a      	cbz	r2, 8009170 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009160:	699a      	ldr	r2, [r3, #24]
 8009162:	428a      	cmp	r2, r1
 8009164:	d1fa      	bne.n	800915c <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009166:	698a      	ldr	r2, [r1, #24]
 8009168:	619a      	str	r2, [r3, #24]
 800916a:	2300      	movs	r3, #0
 800916c:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009170:	4770      	bx	lr

08009172 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009172:	b410      	push	{r4}
 8009174:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009176:	4604      	mov	r4, r0
 8009178:	b92b      	cbnz	r3, 8009186 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800917a:	6803      	ldr	r3, [r0, #0]
 800917c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009180:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009182:	4611      	mov	r1, r2
 8009184:	4718      	bx	r3
 8009186:	b941      	cbnz	r1, 800919a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009188:	6193      	str	r3, [r2, #24]
 800918a:	6282      	str	r2, [r0, #40]	; 0x28
 800918c:	6154      	str	r4, [r2, #20]
 800918e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009192:	4770      	bx	lr
 8009194:	4603      	mov	r3, r0
 8009196:	2800      	cmp	r0, #0
 8009198:	d0f9      	beq.n	800918e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800919a:	4299      	cmp	r1, r3
 800919c:	6998      	ldr	r0, [r3, #24]
 800919e:	d1f9      	bne.n	8009194 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80091a0:	6190      	str	r0, [r2, #24]
 80091a2:	618a      	str	r2, [r1, #24]
 80091a4:	e7f2      	b.n	800918c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

080091a8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80091a8:	4288      	cmp	r0, r1
 80091aa:	b508      	push	{r3, lr}
 80091ac:	d105      	bne.n	80091ba <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 80091ae:	4b11      	ldr	r3, [pc, #68]	; (80091f4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 80091b0:	4a11      	ldr	r2, [pc, #68]	; (80091f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80091b2:	2123      	movs	r1, #35	; 0x23
 80091b4:	4811      	ldr	r0, [pc, #68]	; (80091fc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 80091b6:	f010 fe43 	bl	8019e40 <__assert_func>
 80091ba:	694b      	ldr	r3, [r1, #20]
 80091bc:	b11b      	cbz	r3, 80091c6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 80091be:	4b10      	ldr	r3, [pc, #64]	; (8009200 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 80091c0:	4a0d      	ldr	r2, [pc, #52]	; (80091f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80091c2:	2124      	movs	r1, #36	; 0x24
 80091c4:	e7f6      	b.n	80091b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80091c6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 80091ca:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80091cc:	b913      	cbnz	r3, 80091d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 80091ce:	6281      	str	r1, [r0, #40]	; 0x28
 80091d0:	bd08      	pop	{r3, pc}
 80091d2:	4613      	mov	r3, r2
 80091d4:	699a      	ldr	r2, [r3, #24]
 80091d6:	b12a      	cbz	r2, 80091e4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 80091d8:	428b      	cmp	r3, r1
 80091da:	d1fa      	bne.n	80091d2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 80091dc:	4b09      	ldr	r3, [pc, #36]	; (8009204 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80091de:	4a06      	ldr	r2, [pc, #24]	; (80091f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80091e0:	2135      	movs	r1, #53	; 0x35
 80091e2:	e7e7      	b.n	80091b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80091e4:	428b      	cmp	r3, r1
 80091e6:	d103      	bne.n	80091f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80091e8:	4b06      	ldr	r3, [pc, #24]	; (8009204 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80091ea:	4a03      	ldr	r2, [pc, #12]	; (80091f8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80091ec:	2138      	movs	r1, #56	; 0x38
 80091ee:	e7e1      	b.n	80091b4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80091f0:	6199      	str	r1, [r3, #24]
 80091f2:	e7ed      	b.n	80091d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80091f4:	0801c1c3 	.word	0x0801c1c3
 80091f8:	0801c314 	.word	0x0801c314
 80091fc:	0801c1ef 	.word	0x0801c1ef
 8009200:	0801c222 	.word	0x0801c222
 8009204:	0801c258 	.word	0x0801c258

08009208 <_ZN8touchgfx4RectaNERKS0_>:
 8009208:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800920c:	f9b1 7000 	ldrsh.w	r7, [r1]
 8009210:	888c      	ldrh	r4, [r1, #4]
 8009212:	f9b0 9000 	ldrsh.w	r9, [r0]
 8009216:	443c      	add	r4, r7
 8009218:	b2a4      	uxth	r4, r4
 800921a:	fa0f f884 	sxth.w	r8, r4
 800921e:	45c1      	cmp	r9, r8
 8009220:	da2f      	bge.n	8009282 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009222:	8882      	ldrh	r2, [r0, #4]
 8009224:	444a      	add	r2, r9
 8009226:	b292      	uxth	r2, r2
 8009228:	fa0f fe82 	sxth.w	lr, r2
 800922c:	4577      	cmp	r7, lr
 800922e:	da28      	bge.n	8009282 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009230:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8009234:	88cb      	ldrh	r3, [r1, #6]
 8009236:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800923a:	442b      	add	r3, r5
 800923c:	b21b      	sxth	r3, r3
 800923e:	429e      	cmp	r6, r3
 8009240:	da1f      	bge.n	8009282 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009242:	88c3      	ldrh	r3, [r0, #6]
 8009244:	4433      	add	r3, r6
 8009246:	b29b      	uxth	r3, r3
 8009248:	fa0f fc83 	sxth.w	ip, r3
 800924c:	4565      	cmp	r5, ip
 800924e:	da18      	bge.n	8009282 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009250:	454f      	cmp	r7, r9
 8009252:	bfb8      	it	lt
 8009254:	464f      	movlt	r7, r9
 8009256:	42b5      	cmp	r5, r6
 8009258:	bfb8      	it	lt
 800925a:	4635      	movlt	r5, r6
 800925c:	45f0      	cmp	r8, lr
 800925e:	bfd8      	it	le
 8009260:	4622      	movle	r2, r4
 8009262:	1bd2      	subs	r2, r2, r7
 8009264:	8082      	strh	r2, [r0, #4]
 8009266:	884a      	ldrh	r2, [r1, #2]
 8009268:	88c9      	ldrh	r1, [r1, #6]
 800926a:	8007      	strh	r7, [r0, #0]
 800926c:	440a      	add	r2, r1
 800926e:	b292      	uxth	r2, r2
 8009270:	b211      	sxth	r1, r2
 8009272:	458c      	cmp	ip, r1
 8009274:	bfa8      	it	ge
 8009276:	4613      	movge	r3, r2
 8009278:	1b5b      	subs	r3, r3, r5
 800927a:	80c3      	strh	r3, [r0, #6]
 800927c:	8045      	strh	r5, [r0, #2]
 800927e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009282:	2300      	movs	r3, #0
 8009284:	8003      	strh	r3, [r0, #0]
 8009286:	8043      	strh	r3, [r0, #2]
 8009288:	8083      	strh	r3, [r0, #4]
 800928a:	80c3      	strh	r3, [r0, #6]
 800928c:	e7f7      	b.n	800927e <_ZN8touchgfx4RectaNERKS0_+0x76>

0800928e <_ZNK8touchgfx4Rect7isEmptyEv>:
 800928e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8009292:	2b00      	cmp	r3, #0
 8009294:	dd06      	ble.n	80092a4 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8009296:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800929a:	2800      	cmp	r0, #0
 800929c:	bfcc      	ite	gt
 800929e:	2000      	movgt	r0, #0
 80092a0:	2001      	movle	r0, #1
 80092a2:	4770      	bx	lr
 80092a4:	2001      	movs	r0, #1
 80092a6:	4770      	bx	lr

080092a8 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80092a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092ac:	2300      	movs	r3, #0
 80092ae:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80092b0:	8003      	strh	r3, [r0, #0]
 80092b2:	4604      	mov	r4, r0
 80092b4:	8043      	strh	r3, [r0, #2]
 80092b6:	8083      	strh	r3, [r0, #4]
 80092b8:	80c3      	strh	r3, [r0, #6]
 80092ba:	2d00      	cmp	r5, #0
 80092bc:	d040      	beq.n	8009340 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80092be:	1d28      	adds	r0, r5, #4
 80092c0:	f7ff ffe5 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 80092c4:	b988      	cbnz	r0, 80092ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80092c6:	4620      	mov	r0, r4
 80092c8:	f7ff ffe1 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 80092cc:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80092d0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80092d4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80092d8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80092dc:	b138      	cbz	r0, 80092ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80092de:	8022      	strh	r2, [r4, #0]
 80092e0:	8063      	strh	r3, [r4, #2]
 80092e2:	f8a4 e004 	strh.w	lr, [r4, #4]
 80092e6:	f8a4 c006 	strh.w	ip, [r4, #6]
 80092ea:	69ad      	ldr	r5, [r5, #24]
 80092ec:	e7e5      	b.n	80092ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80092ee:	f9b4 0000 	ldrsh.w	r0, [r4]
 80092f2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80092f6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80092fa:	4290      	cmp	r0, r2
 80092fc:	4607      	mov	r7, r0
 80092fe:	bfa8      	it	ge
 8009300:	4617      	movge	r7, r2
 8009302:	4472      	add	r2, lr
 8009304:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8009308:	8027      	strh	r7, [r4, #0]
 800930a:	4299      	cmp	r1, r3
 800930c:	460e      	mov	r6, r1
 800930e:	4440      	add	r0, r8
 8009310:	bfa8      	it	ge
 8009312:	461e      	movge	r6, r3
 8009314:	4471      	add	r1, lr
 8009316:	4463      	add	r3, ip
 8009318:	b200      	sxth	r0, r0
 800931a:	b212      	sxth	r2, r2
 800931c:	b209      	sxth	r1, r1
 800931e:	b21b      	sxth	r3, r3
 8009320:	4290      	cmp	r0, r2
 8009322:	bfac      	ite	ge
 8009324:	ebc7 0200 	rsbge	r2, r7, r0
 8009328:	ebc7 0202 	rsblt	r2, r7, r2
 800932c:	4299      	cmp	r1, r3
 800932e:	bfac      	ite	ge
 8009330:	ebc6 0301 	rsbge	r3, r6, r1
 8009334:	ebc6 0303 	rsblt	r3, r6, r3
 8009338:	8066      	strh	r6, [r4, #2]
 800933a:	80a2      	strh	r2, [r4, #4]
 800933c:	80e3      	strh	r3, [r4, #6]
 800933e:	e7d4      	b.n	80092ea <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009340:	4620      	mov	r0, r4
 8009342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009346 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8009346:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800934a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800934e:	b383      	cbz	r3, 80093b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009350:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009352:	b374      	cbz	r4, 80093b2 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009354:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009358:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800935c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009360:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8009364:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009368:	b303      	cbz	r3, 80093ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800936a:	4668      	mov	r0, sp
 800936c:	1d21      	adds	r1, r4, #4
 800936e:	f8ad 5000 	strh.w	r5, [sp]
 8009372:	f8ad 6002 	strh.w	r6, [sp, #2]
 8009376:	f8ad 7004 	strh.w	r7, [sp, #4]
 800937a:	f8ad 8006 	strh.w	r8, [sp, #6]
 800937e:	f7ff ff43 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 8009382:	4668      	mov	r0, sp
 8009384:	f7ff ff83 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 8009388:	b980      	cbnz	r0, 80093ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800938a:	f8bd 3000 	ldrh.w	r3, [sp]
 800938e:	88a2      	ldrh	r2, [r4, #4]
 8009390:	1a9b      	subs	r3, r3, r2
 8009392:	f8ad 3000 	strh.w	r3, [sp]
 8009396:	88e2      	ldrh	r2, [r4, #6]
 8009398:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800939c:	1a9b      	subs	r3, r3, r2
 800939e:	f8ad 3002 	strh.w	r3, [sp, #2]
 80093a2:	6823      	ldr	r3, [r4, #0]
 80093a4:	4669      	mov	r1, sp
 80093a6:	689b      	ldr	r3, [r3, #8]
 80093a8:	4620      	mov	r0, r4
 80093aa:	4798      	blx	r3
 80093ac:	69a4      	ldr	r4, [r4, #24]
 80093ae:	2c00      	cmp	r4, #0
 80093b0:	d1d8      	bne.n	8009364 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80093b2:	b002      	add	sp, #8
 80093b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080093b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80093b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80093ba:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80093be:	460d      	mov	r5, r1
 80093c0:	4616      	mov	r6, r2
 80093c2:	b323      	cbz	r3, 800940e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80093c4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80093c6:	b314      	cbz	r4, 800940e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80093c8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80093cc:	b1eb      	cbz	r3, 800940a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80093ce:	6828      	ldr	r0, [r5, #0]
 80093d0:	6869      	ldr	r1, [r5, #4]
 80093d2:	466b      	mov	r3, sp
 80093d4:	c303      	stmia	r3!, {r0, r1}
 80093d6:	4668      	mov	r0, sp
 80093d8:	1d21      	adds	r1, r4, #4
 80093da:	f7ff ff15 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 80093de:	4668      	mov	r0, sp
 80093e0:	f7ff ff55 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 80093e4:	b988      	cbnz	r0, 800940a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80093e6:	f8bd 3000 	ldrh.w	r3, [sp]
 80093ea:	88a2      	ldrh	r2, [r4, #4]
 80093ec:	1a9b      	subs	r3, r3, r2
 80093ee:	f8ad 3000 	strh.w	r3, [sp]
 80093f2:	88e2      	ldrh	r2, [r4, #6]
 80093f4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80093f8:	1a9b      	subs	r3, r3, r2
 80093fa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80093fe:	6823      	ldr	r3, [r4, #0]
 8009400:	4632      	mov	r2, r6
 8009402:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009404:	4669      	mov	r1, sp
 8009406:	4620      	mov	r0, r4
 8009408:	4798      	blx	r3
 800940a:	69a4      	ldr	r4, [r4, #24]
 800940c:	e7db      	b.n	80093c6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800940e:	b002      	add	sp, #8
 8009410:	bd70      	pop	{r4, r5, r6, pc}

08009412 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8009412:	b513      	push	{r0, r1, r4, lr}
 8009414:	6803      	ldr	r3, [r0, #0]
 8009416:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800941a:	2300      	movs	r3, #0
 800941c:	e9cd 3300 	strd	r3, r3, [sp]
 8009420:	466b      	mov	r3, sp
 8009422:	47a0      	blx	r4
 8009424:	b002      	add	sp, #8
 8009426:	bd10      	pop	{r4, pc}

08009428 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8009428:	2301      	movs	r3, #1
 800942a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800942e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009432:	4770      	bx	lr

08009434 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8009434:	2301      	movs	r3, #1
 8009436:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800943a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800943e:	4770      	bx	lr

08009440 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009440:	6843      	ldr	r3, [r0, #4]
 8009442:	2201      	movs	r2, #1
 8009444:	725a      	strb	r2, [r3, #9]
 8009446:	6840      	ldr	r0, [r0, #4]
 8009448:	6803      	ldr	r3, [r0, #0]
 800944a:	691b      	ldr	r3, [r3, #16]
 800944c:	4718      	bx	r3

0800944e <_ZN8touchgfx3HAL8flushDMAEv>:
 800944e:	6840      	ldr	r0, [r0, #4]
 8009450:	6803      	ldr	r3, [r0, #0]
 8009452:	689b      	ldr	r3, [r3, #8]
 8009454:	4718      	bx	r3
	...

08009458 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009458:	4b04      	ldr	r3, [pc, #16]	; (800946c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800945a:	781b      	ldrb	r3, [r3, #0]
 800945c:	b123      	cbz	r3, 8009468 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800945e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009462:	f080 0001 	eor.w	r0, r0, #1
 8009466:	4770      	bx	lr
 8009468:	2001      	movs	r0, #1
 800946a:	4770      	bx	lr
 800946c:	2000a39a 	.word	0x2000a39a

08009470 <_ZN8touchgfx3HAL8endFrameEv>:
 8009470:	b510      	push	{r4, lr}
 8009472:	4604      	mov	r4, r0
 8009474:	6840      	ldr	r0, [r0, #4]
 8009476:	6803      	ldr	r3, [r0, #0]
 8009478:	689b      	ldr	r3, [r3, #8]
 800947a:	4798      	blx	r3
 800947c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009480:	b113      	cbz	r3, 8009488 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009482:	2301      	movs	r3, #1
 8009484:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009488:	bd10      	pop	{r4, pc}
	...

0800948c <_ZN8touchgfx3HAL4tickEv>:
 800948c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800948e:	6803      	ldr	r3, [r0, #0]
 8009490:	4d5c      	ldr	r5, [pc, #368]	; (8009604 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009492:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009496:	4604      	mov	r4, r0
 8009498:	4798      	blx	r3
 800949a:	2800      	cmp	r0, #0
 800949c:	f000 8097 	beq.w	80095ce <_ZN8touchgfx3HAL4tickEv+0x142>
 80094a0:	2001      	movs	r0, #1
 80094a2:	f7f7 f95d 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80094a6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80094aa:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80094ae:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80094b2:	2600      	movs	r6, #0
 80094b4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80094b8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80094bc:	b133      	cbz	r3, 80094cc <_ZN8touchgfx3HAL4tickEv+0x40>
 80094be:	6823      	ldr	r3, [r4, #0]
 80094c0:	4620      	mov	r0, r4
 80094c2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80094c6:	4798      	blx	r3
 80094c8:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80094cc:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80094d0:	6862      	ldr	r2, [r4, #4]
 80094d2:	f083 0301 	eor.w	r3, r3, #1
 80094d6:	7253      	strb	r3, [r2, #9]
 80094d8:	2601      	movs	r6, #1
 80094da:	702e      	strb	r6, [r5, #0]
 80094dc:	f002 f9c8 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 80094e0:	6803      	ldr	r3, [r0, #0]
 80094e2:	4631      	mov	r1, r6
 80094e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80094e6:	4798      	blx	r3
 80094e8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80094ec:	b90b      	cbnz	r3, 80094f2 <_ZN8touchgfx3HAL4tickEv+0x66>
 80094ee:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80094f2:	f002 f9bd 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 80094f6:	6803      	ldr	r3, [r0, #0]
 80094f8:	695b      	ldr	r3, [r3, #20]
 80094fa:	4798      	blx	r3
 80094fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80094fe:	6803      	ldr	r3, [r0, #0]
 8009500:	691b      	ldr	r3, [r3, #16]
 8009502:	4798      	blx	r3
 8009504:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8009508:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800950c:	3b01      	subs	r3, #1
 800950e:	b2db      	uxtb	r3, r3
 8009510:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009514:	b10a      	cbz	r2, 800951a <_ZN8touchgfx3HAL4tickEv+0x8e>
 8009516:	2b00      	cmp	r3, #0
 8009518:	d1eb      	bne.n	80094f2 <_ZN8touchgfx3HAL4tickEv+0x66>
 800951a:	4a3b      	ldr	r2, [pc, #236]	; (8009608 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800951c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009520:	7813      	ldrb	r3, [r2, #0]
 8009522:	3301      	adds	r3, #1
 8009524:	b25b      	sxtb	r3, r3
 8009526:	4299      	cmp	r1, r3
 8009528:	7013      	strb	r3, [r2, #0]
 800952a:	dc10      	bgt.n	800954e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800952c:	68e0      	ldr	r0, [r4, #12]
 800952e:	2300      	movs	r3, #0
 8009530:	7013      	strb	r3, [r2, #0]
 8009532:	6803      	ldr	r3, [r0, #0]
 8009534:	aa03      	add	r2, sp, #12
 8009536:	68db      	ldr	r3, [r3, #12]
 8009538:	a902      	add	r1, sp, #8
 800953a:	4798      	blx	r3
 800953c:	6823      	ldr	r3, [r4, #0]
 800953e:	2800      	cmp	r0, #0
 8009540:	d051      	beq.n	80095e6 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8009542:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8009546:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800954a:	4620      	mov	r0, r4
 800954c:	4798      	blx	r3
 800954e:	6960      	ldr	r0, [r4, #20]
 8009550:	2300      	movs	r3, #0
 8009552:	f88d 3007 	strb.w	r3, [sp, #7]
 8009556:	b158      	cbz	r0, 8009570 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009558:	6803      	ldr	r3, [r0, #0]
 800955a:	f10d 0107 	add.w	r1, sp, #7
 800955e:	68db      	ldr	r3, [r3, #12]
 8009560:	4798      	blx	r3
 8009562:	b128      	cbz	r0, 8009570 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009564:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009566:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800956a:	6803      	ldr	r3, [r0, #0]
 800956c:	68db      	ldr	r3, [r3, #12]
 800956e:	4798      	blx	r3
 8009570:	f104 001c 	add.w	r0, r4, #28
 8009574:	f010 fb7c 	bl	8019c70 <_ZN8touchgfx8Gestures4tickEv>
 8009578:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800957c:	b30b      	cbz	r3, 80095c2 <_ZN8touchgfx3HAL4tickEv+0x136>
 800957e:	6920      	ldr	r0, [r4, #16]
 8009580:	6803      	ldr	r3, [r0, #0]
 8009582:	691b      	ldr	r3, [r3, #16]
 8009584:	4798      	blx	r3
 8009586:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009588:	4606      	mov	r6, r0
 800958a:	b903      	cbnz	r3, 800958e <_ZN8touchgfx3HAL4tickEv+0x102>
 800958c:	6720      	str	r0, [r4, #112]	; 0x70
 800958e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009590:	4a1e      	ldr	r2, [pc, #120]	; (800960c <_ZN8touchgfx3HAL4tickEv+0x180>)
 8009592:	1af3      	subs	r3, r6, r3
 8009594:	4293      	cmp	r3, r2
 8009596:	d914      	bls.n	80095c2 <_ZN8touchgfx3HAL4tickEv+0x136>
 8009598:	6920      	ldr	r0, [r4, #16]
 800959a:	6803      	ldr	r3, [r0, #0]
 800959c:	699b      	ldr	r3, [r3, #24]
 800959e:	4798      	blx	r3
 80095a0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80095a2:	2264      	movs	r2, #100	; 0x64
 80095a4:	1af3      	subs	r3, r6, r3
 80095a6:	fbb3 f3f2 	udiv	r3, r3, r2
 80095aa:	fbb0 f0f3 	udiv	r0, r0, r3
 80095ae:	2800      	cmp	r0, #0
 80095b0:	dc1e      	bgt.n	80095f0 <_ZN8touchgfx3HAL4tickEv+0x164>
 80095b2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80095b6:	6920      	ldr	r0, [r4, #16]
 80095b8:	6803      	ldr	r3, [r0, #0]
 80095ba:	2100      	movs	r1, #0
 80095bc:	69db      	ldr	r3, [r3, #28]
 80095be:	4798      	blx	r3
 80095c0:	6726      	str	r6, [r4, #112]	; 0x70
 80095c2:	f002 f955 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 80095c6:	6803      	ldr	r3, [r0, #0]
 80095c8:	2100      	movs	r1, #0
 80095ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80095cc:	4798      	blx	r3
 80095ce:	6823      	ldr	r3, [r4, #0]
 80095d0:	4620      	mov	r0, r4
 80095d2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80095d6:	4798      	blx	r3
 80095d8:	2001      	movs	r0, #1
 80095da:	f7f7 f8dd 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80095de:	2300      	movs	r3, #0
 80095e0:	702b      	strb	r3, [r5, #0]
 80095e2:	b004      	add	sp, #16
 80095e4:	bd70      	pop	{r4, r5, r6, pc}
 80095e6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80095ea:	4620      	mov	r0, r4
 80095ec:	4798      	blx	r3
 80095ee:	e7ae      	b.n	800954e <_ZN8touchgfx3HAL4tickEv+0xc2>
 80095f0:	2863      	cmp	r0, #99	; 0x63
 80095f2:	bfcb      	itete	gt
 80095f4:	2300      	movgt	r3, #0
 80095f6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80095fa:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80095fe:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009602:	e7d8      	b.n	80095b6 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8009604:	2000a3a0 	.word	0x2000a3a0
 8009608:	2000a3a1 	.word	0x2000a3a1
 800960c:	05f5e100 	.word	0x05f5e100

08009610 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009610:	f7f7 bb5c 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009614 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009614:	6581      	str	r1, [r0, #88]	; 0x58
 8009616:	301c      	adds	r0, #28
 8009618:	f010 bb28 	b.w	8019c6c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800961c <_ZN8touchgfx3HAL5touchEll>:
 800961c:	b530      	push	{r4, r5, lr}
 800961e:	b087      	sub	sp, #28
 8009620:	4604      	mov	r4, r0
 8009622:	a804      	add	r0, sp, #16
 8009624:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009628:	f001 fec6 	bl	800b3b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800962c:	9b04      	ldr	r3, [sp, #16]
 800962e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009632:	a906      	add	r1, sp, #24
 8009634:	9b05      	ldr	r3, [sp, #20]
 8009636:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800963a:	a803      	add	r0, sp, #12
 800963c:	f001 fefa 	bl	800b434 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009640:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009644:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009648:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800964c:	f104 001c 	add.w	r0, r4, #28
 8009650:	b189      	cbz	r1, 8009676 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009652:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009656:	9300      	str	r3, [sp, #0]
 8009658:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800965c:	4613      	mov	r3, r2
 800965e:	462a      	mov	r2, r5
 8009660:	f010 fb14 	bl	8019c8c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009664:	b128      	cbz	r0, 8009672 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009666:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800966a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800966c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009670:	6623      	str	r3, [r4, #96]	; 0x60
 8009672:	b007      	add	sp, #28
 8009674:	bd30      	pop	{r4, r5, pc}
 8009676:	f010 fb4d 	bl	8019d14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800967a:	2301      	movs	r3, #1
 800967c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009680:	e7f1      	b.n	8009666 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009682 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009682:	b570      	push	{r4, r5, r6, lr}
 8009684:	2b00      	cmp	r3, #0
 8009686:	d050      	beq.n	800972a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009688:	ea81 0002 	eor.w	r0, r1, r2
 800968c:	07c6      	lsls	r6, r0, #31
 800968e:	d508      	bpl.n	80096a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009690:	3a01      	subs	r2, #1
 8009692:	18cc      	adds	r4, r1, r3
 8009694:	42a1      	cmp	r1, r4
 8009696:	d048      	beq.n	800972a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009698:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800969c:	f801 0b01 	strb.w	r0, [r1], #1
 80096a0:	e7f8      	b.n	8009694 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80096a2:	07d5      	lsls	r5, r2, #31
 80096a4:	bf42      	ittt	mi
 80096a6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80096aa:	f801 0b01 	strbmi.w	r0, [r1], #1
 80096ae:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80096b2:	2b01      	cmp	r3, #1
 80096b4:	d915      	bls.n	80096e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80096b6:	ea82 0001 	eor.w	r0, r2, r1
 80096ba:	0784      	lsls	r4, r0, #30
 80096bc:	d02d      	beq.n	800971a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 80096be:	1e94      	subs	r4, r2, #2
 80096c0:	4608      	mov	r0, r1
 80096c2:	18ce      	adds	r6, r1, r3
 80096c4:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 80096c8:	f820 5b02 	strh.w	r5, [r0], #2
 80096cc:	1a35      	subs	r5, r6, r0
 80096ce:	2d01      	cmp	r5, #1
 80096d0:	d8f8      	bhi.n	80096c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 80096d2:	1e98      	subs	r0, r3, #2
 80096d4:	f020 0001 	bic.w	r0, r0, #1
 80096d8:	3002      	adds	r0, #2
 80096da:	4401      	add	r1, r0
 80096dc:	4402      	add	r2, r0
 80096de:	f003 0301 	and.w	r3, r3, #1
 80096e2:	1f14      	subs	r4, r2, #4
 80096e4:	4608      	mov	r0, r1
 80096e6:	18ce      	adds	r6, r1, r3
 80096e8:	1a35      	subs	r5, r6, r0
 80096ea:	2d03      	cmp	r5, #3
 80096ec:	d810      	bhi.n	8009710 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 80096ee:	089c      	lsrs	r4, r3, #2
 80096f0:	00a0      	lsls	r0, r4, #2
 80096f2:	4401      	add	r1, r0
 80096f4:	3801      	subs	r0, #1
 80096f6:	4402      	add	r2, r0
 80096f8:	f06f 0003 	mvn.w	r0, #3
 80096fc:	fb00 3404 	mla	r4, r0, r4, r3
 8009700:	440c      	add	r4, r1
 8009702:	42a1      	cmp	r1, r4
 8009704:	d011      	beq.n	800972a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009706:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800970a:	f801 3b01 	strb.w	r3, [r1], #1
 800970e:	e7f8      	b.n	8009702 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8009710:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8009714:	f840 5b04 	str.w	r5, [r0], #4
 8009718:	e7e6      	b.n	80096e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800971a:	0790      	lsls	r0, r2, #30
 800971c:	d0e1      	beq.n	80096e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800971e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009722:	f821 0b02 	strh.w	r0, [r1], #2
 8009726:	3b02      	subs	r3, #2
 8009728:	e7db      	b.n	80096e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800972a:	2001      	movs	r0, #1
 800972c:	bd70      	pop	{r4, r5, r6, pc}

0800972e <_ZN8touchgfx3HAL7noTouchEv>:
 800972e:	b510      	push	{r4, lr}
 8009730:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009734:	4604      	mov	r4, r0
 8009736:	b153      	cbz	r3, 800974e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009738:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800973c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009740:	2101      	movs	r1, #1
 8009742:	301c      	adds	r0, #28
 8009744:	f010 fae6 	bl	8019d14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009748:	2300      	movs	r3, #0
 800974a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800974e:	bd10      	pop	{r4, pc}

08009750 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009750:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009754:	4604      	mov	r4, r0
 8009756:	6980      	ldr	r0, [r0, #24]
 8009758:	b085      	sub	sp, #20
 800975a:	460f      	mov	r7, r1
 800975c:	4690      	mov	r8, r2
 800975e:	4699      	mov	r9, r3
 8009760:	b930      	cbnz	r0, 8009770 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009762:	4b1c      	ldr	r3, [pc, #112]	; (80097d4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009764:	4a1c      	ldr	r2, [pc, #112]	; (80097d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8009766:	f44f 71a1 	mov.w	r1, #322	; 0x142
 800976a:	481c      	ldr	r0, [pc, #112]	; (80097dc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 800976c:	f010 fb68 	bl	8019e40 <__assert_func>
 8009770:	ad04      	add	r5, sp, #16
 8009772:	2600      	movs	r6, #0
 8009774:	f845 6d04 	str.w	r6, [r5, #-4]!
 8009778:	6806      	ldr	r6, [r0, #0]
 800977a:	9501      	str	r5, [sp, #4]
 800977c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009780:	9500      	str	r5, [sp, #0]
 8009782:	6835      	ldr	r5, [r6, #0]
 8009784:	47a8      	blx	r5
 8009786:	4d16      	ldr	r5, [pc, #88]	; (80097e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8009788:	4606      	mov	r6, r0
 800978a:	f8a5 9000 	strh.w	r9, [r5]
 800978e:	f7f7 fb2d 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009792:	6803      	ldr	r3, [r0, #0]
 8009794:	6a1b      	ldr	r3, [r3, #32]
 8009796:	4798      	blx	r3
 8009798:	2801      	cmp	r0, #1
 800979a:	d012      	beq.n	80097c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 800979c:	d306      	bcc.n	80097ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 800979e:	280d      	cmp	r0, #13
 80097a0:	d80b      	bhi.n	80097ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80097a2:	4b10      	ldr	r3, [pc, #64]	; (80097e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80097a4:	4a0c      	ldr	r2, [pc, #48]	; (80097d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80097a6:	f44f 71b0 	mov.w	r1, #352	; 0x160
 80097aa:	e7de      	b.n	800976a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80097ac:	882b      	ldrh	r3, [r5, #0]
 80097ae:	fb08 7203 	mla	r2, r8, r3, r7
 80097b2:	9b03      	ldr	r3, [sp, #12]
 80097b4:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80097b8:	63e3      	str	r3, [r4, #60]	; 0x3c
 80097ba:	4630      	mov	r0, r6
 80097bc:	b005      	add	sp, #20
 80097be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80097c2:	882a      	ldrh	r2, [r5, #0]
 80097c4:	9b03      	ldr	r3, [sp, #12]
 80097c6:	fb08 7202 	mla	r2, r8, r2, r7
 80097ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80097ce:	1a9a      	subs	r2, r3, r2
 80097d0:	63e2      	str	r2, [r4, #60]	; 0x3c
 80097d2:	e7f2      	b.n	80097ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80097d4:	0801c3bd 	.word	0x0801c3bd
 80097d8:	0801c617 	.word	0x0801c617
 80097dc:	0801c402 	.word	0x0801c402
 80097e0:	2000a396 	.word	0x2000a396
 80097e4:	0801c428 	.word	0x0801c428

080097e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 80097e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097ec:	4698      	mov	r8, r3
 80097ee:	6803      	ldr	r3, [r0, #0]
 80097f0:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 80097f2:	4b0f      	ldr	r3, [pc, #60]	; (8009830 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 80097f4:	b087      	sub	sp, #28
 80097f6:	f8b3 9000 	ldrh.w	r9, [r3]
 80097fa:	460e      	mov	r6, r1
 80097fc:	4617      	mov	r7, r2
 80097fe:	4604      	mov	r4, r0
 8009800:	f7f7 faf4 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009804:	6803      	ldr	r3, [r0, #0]
 8009806:	6a1b      	ldr	r3, [r3, #32]
 8009808:	4798      	blx	r3
 800980a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800980e:	9302      	str	r3, [sp, #8]
 8009810:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009814:	9301      	str	r3, [sp, #4]
 8009816:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800981a:	9300      	str	r3, [sp, #0]
 800981c:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8009820:	4643      	mov	r3, r8
 8009822:	463a      	mov	r2, r7
 8009824:	4631      	mov	r1, r6
 8009826:	4620      	mov	r0, r4
 8009828:	47a8      	blx	r5
 800982a:	b007      	add	sp, #28
 800982c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009830:	2000a396 	.word	0x2000a396

08009834 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009838:	4604      	mov	r4, r0
 800983a:	b08b      	sub	sp, #44	; 0x2c
 800983c:	4610      	mov	r0, r2
 800983e:	460d      	mov	r5, r1
 8009840:	4691      	mov	r9, r2
 8009842:	461e      	mov	r6, r3
 8009844:	f004 fc22 	bl	800e08c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009848:	2800      	cmp	r0, #0
 800984a:	f000 80a0 	beq.w	800998e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800984e:	6823      	ldr	r3, [r4, #0]
 8009850:	f8df b170 	ldr.w	fp, [pc, #368]	; 80099c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 8009854:	6a1b      	ldr	r3, [r3, #32]
 8009856:	f8df a170 	ldr.w	sl, [pc, #368]	; 80099c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 800985a:	4620      	mov	r0, r4
 800985c:	4798      	blx	r3
 800985e:	6823      	ldr	r3, [r4, #0]
 8009860:	4620      	mov	r0, r4
 8009862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009864:	4798      	blx	r3
 8009866:	f8bb 3000 	ldrh.w	r3, [fp]
 800986a:	9301      	str	r3, [sp, #4]
 800986c:	f8ba 3000 	ldrh.w	r3, [sl]
 8009870:	9302      	str	r3, [sp, #8]
 8009872:	4b51      	ldr	r3, [pc, #324]	; (80099b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 8009874:	881a      	ldrh	r2, [r3, #0]
 8009876:	9203      	str	r2, [sp, #12]
 8009878:	4a50      	ldr	r2, [pc, #320]	; (80099bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 800987a:	8812      	ldrh	r2, [r2, #0]
 800987c:	9204      	str	r2, [sp, #16]
 800987e:	af0a      	add	r7, sp, #40	; 0x28
 8009880:	4a4f      	ldr	r2, [pc, #316]	; (80099c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 8009882:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 8009886:	7812      	ldrb	r2, [r2, #0]
 8009888:	4698      	mov	r8, r3
 800988a:	4638      	mov	r0, r7
 800988c:	2a00      	cmp	r2, #0
 800988e:	f040 8081 	bne.w	8009994 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 8009892:	f004 fcb5 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009896:	f8ab 0000 	strh.w	r0, [fp]
 800989a:	4638      	mov	r0, r7
 800989c:	f004 fcea 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80098a0:	f8aa 0000 	strh.w	r0, [sl]
 80098a4:	4638      	mov	r0, r7
 80098a6:	f004 fcab 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80098aa:	f8a8 0000 	strh.w	r0, [r8]
 80098ae:	4638      	mov	r0, r7
 80098b0:	f004 fce0 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80098b4:	4b41      	ldr	r3, [pc, #260]	; (80099bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 80098b6:	8018      	strh	r0, [r3, #0]
 80098b8:	4648      	mov	r0, r9
 80098ba:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80098be:	f004 fbe5 	bl	800e08c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80098c2:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80098c6:	2200      	movs	r2, #0
 80098c8:	4611      	mov	r1, r2
 80098ca:	4628      	mov	r0, r5
 80098cc:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80098d0:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80098d4:	f7f8 fe5a 	bl	800258c <_ZN8touchgfx8Drawable5setXYEss>
 80098d8:	2301      	movs	r3, #1
 80098da:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80098de:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80098e2:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	dd5c      	ble.n	80099a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 80098ea:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80098ee:	2b00      	cmp	r3, #0
 80098f0:	dd58      	ble.n	80099a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 80098f2:	462a      	mov	r2, r5
 80098f4:	ab08      	add	r3, sp, #32
 80098f6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80098fa:	6851      	ldr	r1, [r2, #4]
 80098fc:	c303      	stmia	r3!, {r0, r1}
 80098fe:	4631      	mov	r1, r6
 8009900:	a808      	add	r0, sp, #32
 8009902:	f7ff fc81 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 8009906:	a807      	add	r0, sp, #28
 8009908:	f004 fe0c 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800990c:	4606      	mov	r6, r0
 800990e:	f7f7 fa6d 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009912:	6803      	ldr	r3, [r0, #0]
 8009914:	6a1b      	ldr	r3, [r3, #32]
 8009916:	4798      	blx	r3
 8009918:	4286      	cmp	r6, r0
 800991a:	d04a      	beq.n	80099b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 800991c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800991e:	b150      	cbz	r0, 8009936 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 8009920:	a807      	add	r0, sp, #28
 8009922:	f004 fdff 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009926:	4606      	mov	r6, r0
 8009928:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800992a:	6803      	ldr	r3, [r0, #0]
 800992c:	6a1b      	ldr	r3, [r3, #32]
 800992e:	4798      	blx	r3
 8009930:	1a33      	subs	r3, r6, r0
 8009932:	4258      	negs	r0, r3
 8009934:	4158      	adcs	r0, r3
 8009936:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800993a:	2600      	movs	r6, #0
 800993c:	682a      	ldr	r2, [r5, #0]
 800993e:	696b      	ldr	r3, [r5, #20]
 8009940:	616e      	str	r6, [r5, #20]
 8009942:	9305      	str	r3, [sp, #20]
 8009944:	6892      	ldr	r2, [r2, #8]
 8009946:	a908      	add	r1, sp, #32
 8009948:	4628      	mov	r0, r5
 800994a:	4790      	blx	r2
 800994c:	9b05      	ldr	r3, [sp, #20]
 800994e:	616b      	str	r3, [r5, #20]
 8009950:	4652      	mov	r2, sl
 8009952:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009956:	4649      	mov	r1, r9
 8009958:	4628      	mov	r0, r5
 800995a:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800995e:	f7f8 fe15 	bl	800258c <_ZN8touchgfx8Drawable5setXYEss>
 8009962:	4b18      	ldr	r3, [pc, #96]	; (80099c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 8009964:	9a01      	ldr	r2, [sp, #4]
 8009966:	801a      	strh	r2, [r3, #0]
 8009968:	4b17      	ldr	r3, [pc, #92]	; (80099c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 800996a:	9a02      	ldr	r2, [sp, #8]
 800996c:	801a      	strh	r2, [r3, #0]
 800996e:	4b12      	ldr	r3, [pc, #72]	; (80099b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 8009970:	9a03      	ldr	r2, [sp, #12]
 8009972:	801a      	strh	r2, [r3, #0]
 8009974:	4b11      	ldr	r3, [pc, #68]	; (80099bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8009976:	9a04      	ldr	r2, [sp, #16]
 8009978:	801a      	strh	r2, [r3, #0]
 800997a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800997e:	6823      	ldr	r3, [r4, #0]
 8009980:	4620      	mov	r0, r4
 8009982:	6a1b      	ldr	r3, [r3, #32]
 8009984:	4798      	blx	r3
 8009986:	6823      	ldr	r3, [r4, #0]
 8009988:	4620      	mov	r0, r4
 800998a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800998c:	4798      	blx	r3
 800998e:	b00b      	add	sp, #44	; 0x2c
 8009990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009994:	f004 fc6e 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009998:	f8ab 0000 	strh.w	r0, [fp]
 800999c:	4638      	mov	r0, r7
 800999e:	f004 fc2f 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80099a2:	e77d      	b.n	80098a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 80099a4:	462a      	mov	r2, r5
 80099a6:	ab08      	add	r3, sp, #32
 80099a8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80099ac:	6851      	ldr	r1, [r2, #4]
 80099ae:	c303      	stmia	r3!, {r0, r1}
 80099b0:	e7a9      	b.n	8009906 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 80099b2:	2000      	movs	r0, #0
 80099b4:	e7bf      	b.n	8009936 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 80099b6:	bf00      	nop
 80099b8:	2000a390 	.word	0x2000a390
 80099bc:	2000a392 	.word	0x2000a392
 80099c0:	2000a394 	.word	0x2000a394
 80099c4:	2000a396 	.word	0x2000a396
 80099c8:	2000a398 	.word	0x2000a398

080099cc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80099cc:	b510      	push	{r4, lr}
 80099ce:	4b07      	ldr	r3, [pc, #28]	; (80099ec <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80099d0:	781b      	ldrb	r3, [r3, #0]
 80099d2:	4604      	mov	r4, r0
 80099d4:	b13b      	cbz	r3, 80099e6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80099d6:	6803      	ldr	r3, [r0, #0]
 80099d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80099da:	4798      	blx	r3
 80099dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80099de:	4283      	cmp	r3, r0
 80099e0:	d101      	bne.n	80099e6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80099e2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80099e4:	bd10      	pop	{r4, pc}
 80099e6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80099e8:	e7fc      	b.n	80099e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80099ea:	bf00      	nop
 80099ec:	2000a39a 	.word	0x2000a39a

080099f0 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80099f0:	b510      	push	{r4, lr}
 80099f2:	4b0b      	ldr	r3, [pc, #44]	; (8009a20 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 80099f4:	781b      	ldrb	r3, [r3, #0]
 80099f6:	4604      	mov	r4, r0
 80099f8:	b95b      	cbnz	r3, 8009a12 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80099fa:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80099fe:	2b02      	cmp	r3, #2
 8009a00:	d007      	beq.n	8009a12 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009a02:	6840      	ldr	r0, [r0, #4]
 8009a04:	f000 fbea 	bl	800a1dc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009a08:	b118      	cbz	r0, 8009a12 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009a0a:	6862      	ldr	r2, [r4, #4]
 8009a0c:	7a53      	ldrb	r3, [r2, #9]
 8009a0e:	2b00      	cmp	r3, #0
 8009a10:	d0fc      	beq.n	8009a0c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8009a12:	f7f7 f953 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009a16:	4620      	mov	r0, r4
 8009a18:	f7ff ffd8 	bl	80099cc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009a1c:	bd10      	pop	{r4, pc}
 8009a1e:	bf00      	nop
 8009a20:	2000a39a 	.word	0x2000a39a

08009a24 <_ZN8touchgfx3HAL10initializeEv>:
 8009a24:	b510      	push	{r4, lr}
 8009a26:	4604      	mov	r4, r0
 8009a28:	f7f7 f920 	bl	8000c6c <_ZN8touchgfx10OSWrappers10initializeEv>
 8009a2c:	6860      	ldr	r0, [r4, #4]
 8009a2e:	6803      	ldr	r3, [r0, #0]
 8009a30:	68db      	ldr	r3, [r3, #12]
 8009a32:	4798      	blx	r3
 8009a34:	68e0      	ldr	r0, [r4, #12]
 8009a36:	6803      	ldr	r3, [r0, #0]
 8009a38:	689b      	ldr	r3, [r3, #8]
 8009a3a:	4798      	blx	r3
 8009a3c:	6823      	ldr	r3, [r4, #0]
 8009a3e:	4620      	mov	r0, r4
 8009a40:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009a42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009a46:	4718      	bx	r3

08009a48 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 8009a48:	b508      	push	{r3, lr}
 8009a4a:	290d      	cmp	r1, #13
 8009a4c:	d817      	bhi.n	8009a7e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009a4e:	e8df f001 	tbb	[pc, r1]
 8009a52:	090b      	.short	0x090b
 8009a54:	0d0d0d07 	.word	0x0d0d0d07
 8009a58:	1414140d 	.word	0x1414140d
 8009a5c:	0d0d1414 	.word	0x0d0d1414
 8009a60:	2020      	movs	r0, #32
 8009a62:	bd08      	pop	{r3, pc}
 8009a64:	2018      	movs	r0, #24
 8009a66:	e7fc      	b.n	8009a62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a68:	2010      	movs	r0, #16
 8009a6a:	e7fa      	b.n	8009a62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a6c:	4b05      	ldr	r3, [pc, #20]	; (8009a84 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009a6e:	4a06      	ldr	r2, [pc, #24]	; (8009a88 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009a70:	4806      	ldr	r0, [pc, #24]	; (8009a8c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009a72:	f44f 7111 	mov.w	r1, #580	; 0x244
 8009a76:	f010 f9e3 	bl	8019e40 <__assert_func>
 8009a7a:	2008      	movs	r0, #8
 8009a7c:	e7f1      	b.n	8009a62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a7e:	2000      	movs	r0, #0
 8009a80:	e7ef      	b.n	8009a62 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a82:	bf00      	nop
 8009a84:	0801c4fb 	.word	0x0801c4fb
 8009a88:	0801c7d9 	.word	0x0801c7d9
 8009a8c:	0801c402 	.word	0x0801c402

08009a90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009a90:	b570      	push	{r4, r5, r6, lr}
 8009a92:	460d      	mov	r5, r1
 8009a94:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009a98:	4616      	mov	r6, r2
 8009a9a:	461c      	mov	r4, r3
 8009a9c:	f7ff ffd4 	bl	8009a48 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009aa0:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009aa4:	10c0      	asrs	r0, r0, #3
 8009aa6:	fb06 5101 	mla	r1, r6, r1, r5
 8009aaa:	fb00 4001 	mla	r0, r0, r1, r4
 8009aae:	bd70      	pop	{r4, r5, r6, pc}

08009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8009ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ab4:	b08a      	sub	sp, #40	; 0x28
 8009ab6:	f04f 0c00 	mov.w	ip, #0
 8009aba:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8009abe:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009ac2:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8009ac6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009aca:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8009ace:	f8cd c020 	str.w	ip, [sp, #32]
 8009ad2:	f1b8 0f02 	cmp.w	r8, #2
 8009ad6:	4604      	mov	r4, r0
 8009ad8:	469a      	mov	sl, r3
 8009ada:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009ade:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009ae2:	d030      	beq.n	8009b46 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 8009ae4:	2bff      	cmp	r3, #255	; 0xff
 8009ae6:	d12c      	bne.n	8009b42 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8009ae8:	4560      	cmp	r0, ip
 8009aea:	bf14      	ite	ne
 8009aec:	2004      	movne	r0, #4
 8009aee:	2001      	moveq	r0, #1
 8009af0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009af4:	9204      	str	r2, [sp, #16]
 8009af6:	4620      	mov	r0, r4
 8009af8:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009afc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8009b00:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009b04:	f8ad 6018 	strh.w	r6, [sp, #24]
 8009b08:	f8ad 501a 	strh.w	r5, [sp, #26]
 8009b0c:	f7ff ff5e 	bl	80099cc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009b10:	e9cd 9700 	strd	r9, r7, [sp]
 8009b14:	4603      	mov	r3, r0
 8009b16:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009b1a:	4651      	mov	r1, sl
 8009b1c:	4620      	mov	r0, r4
 8009b1e:	f7ff ffb7 	bl	8009a90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009b22:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009b26:	9005      	str	r0, [sp, #20]
 8009b28:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 8009b2c:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8009b30:	b106      	cbz	r6, 8009b34 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 8009b32:	b98d      	cbnz	r5, 8009b58 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 8009b34:	4b12      	ldr	r3, [pc, #72]	; (8009b80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 8009b36:	4a13      	ldr	r2, [pc, #76]	; (8009b84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009b38:	f240 11c3 	movw	r1, #451	; 0x1c3
 8009b3c:	4812      	ldr	r0, [pc, #72]	; (8009b88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8009b3e:	f010 f97f 	bl	8019e40 <__assert_func>
 8009b42:	2004      	movs	r0, #4
 8009b44:	e7d4      	b.n	8009af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009b46:	2bff      	cmp	r3, #255	; 0xff
 8009b48:	d104      	bne.n	8009b54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 8009b4a:	2800      	cmp	r0, #0
 8009b4c:	bf14      	ite	ne
 8009b4e:	2040      	movne	r0, #64	; 0x40
 8009b50:	2020      	moveq	r0, #32
 8009b52:	e7cd      	b.n	8009af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009b54:	2040      	movs	r0, #64	; 0x40
 8009b56:	e7cb      	b.n	8009af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009b58:	6823      	ldr	r3, [r4, #0]
 8009b5a:	9d02      	ldr	r5, [sp, #8]
 8009b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b5e:	4620      	mov	r0, r4
 8009b60:	4798      	blx	r3
 8009b62:	4228      	tst	r0, r5
 8009b64:	d104      	bne.n	8009b70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 8009b66:	4b09      	ldr	r3, [pc, #36]	; (8009b8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009b68:	4a06      	ldr	r2, [pc, #24]	; (8009b84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009b6a:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 8009b6e:	e7e5      	b.n	8009b3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 8009b70:	6860      	ldr	r0, [r4, #4]
 8009b72:	6803      	ldr	r3, [r0, #0]
 8009b74:	a902      	add	r1, sp, #8
 8009b76:	685b      	ldr	r3, [r3, #4]
 8009b78:	4798      	blx	r3
 8009b7a:	b00a      	add	sp, #40	; 0x28
 8009b7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b80:	0801c47e 	.word	0x0801c47e
 8009b84:	0801c67b 	.word	0x0801c67b
 8009b88:	0801c402 	.word	0x0801c402
 8009b8c:	0801c4b6 	.word	0x0801c4b6

08009b90 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 8009b90:	b510      	push	{r4, lr}
 8009b92:	b08a      	sub	sp, #40	; 0x28
 8009b94:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8009b98:	9408      	str	r4, [sp, #32]
 8009b9a:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 8009b9e:	9407      	str	r4, [sp, #28]
 8009ba0:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 8009ba4:	9406      	str	r4, [sp, #24]
 8009ba6:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8009baa:	9405      	str	r4, [sp, #20]
 8009bac:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8009bb0:	9404      	str	r4, [sp, #16]
 8009bb2:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 8009bb6:	9403      	str	r4, [sp, #12]
 8009bb8:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8009bbc:	9402      	str	r4, [sp, #8]
 8009bbe:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009bc2:	e9cd 3400 	strd	r3, r4, [sp]
 8009bc6:	4613      	mov	r3, r2
 8009bc8:	2200      	movs	r2, #0
 8009bca:	f7ff ff71 	bl	8009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009bce:	b00a      	add	sp, #40	; 0x28
 8009bd0:	bd10      	pop	{r4, pc}
	...

08009bd4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009bd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009bd6:	b08b      	sub	sp, #44	; 0x2c
 8009bd8:	4616      	mov	r6, r2
 8009bda:	460d      	mov	r5, r1
 8009bdc:	461f      	mov	r7, r3
 8009bde:	4604      	mov	r4, r0
 8009be0:	f7f7 f904 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009be4:	6803      	ldr	r3, [r0, #0]
 8009be6:	6a1b      	ldr	r3, [r3, #32]
 8009be8:	4798      	blx	r3
 8009bea:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009bee:	4b0d      	ldr	r3, [pc, #52]	; (8009c24 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 8009bf0:	881b      	ldrh	r3, [r3, #0]
 8009bf2:	9306      	str	r3, [sp, #24]
 8009bf4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009bf8:	9305      	str	r3, [sp, #20]
 8009bfa:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009bfe:	9304      	str	r3, [sp, #16]
 8009c00:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009c04:	9303      	str	r3, [sp, #12]
 8009c06:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009c0a:	9302      	str	r3, [sp, #8]
 8009c0c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009c10:	2200      	movs	r2, #0
 8009c12:	e9cd 7300 	strd	r7, r3, [sp]
 8009c16:	4629      	mov	r1, r5
 8009c18:	4633      	mov	r3, r6
 8009c1a:	4620      	mov	r0, r4
 8009c1c:	f7ff ff48 	bl	8009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009c20:	b00b      	add	sp, #44	; 0x2c
 8009c22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c24:	2000a396 	.word	0x2000a396

08009c28 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009c28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009c2c:	461f      	mov	r7, r3
 8009c2e:	4b14      	ldr	r3, [pc, #80]	; (8009c80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009c30:	b08a      	sub	sp, #40	; 0x28
 8009c32:	4616      	mov	r6, r2
 8009c34:	f8b3 8000 	ldrh.w	r8, [r3]
 8009c38:	460d      	mov	r5, r1
 8009c3a:	4604      	mov	r4, r0
 8009c3c:	f7f7 f8d6 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009c40:	6803      	ldr	r3, [r0, #0]
 8009c42:	6a1b      	ldr	r3, [r3, #32]
 8009c44:	4798      	blx	r3
 8009c46:	2302      	movs	r3, #2
 8009c48:	e9cd 8306 	strd	r8, r3, [sp, #24]
 8009c4c:	2301      	movs	r3, #1
 8009c4e:	9305      	str	r3, [sp, #20]
 8009c50:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009c54:	9304      	str	r3, [sp, #16]
 8009c56:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009c5a:	9303      	str	r3, [sp, #12]
 8009c5c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009c60:	9302      	str	r3, [sp, #8]
 8009c62:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009c66:	9008      	str	r0, [sp, #32]
 8009c68:	e9cd 7300 	strd	r7, r3, [sp]
 8009c6c:	2200      	movs	r2, #0
 8009c6e:	4633      	mov	r3, r6
 8009c70:	4629      	mov	r1, r5
 8009c72:	4620      	mov	r0, r4
 8009c74:	f7ff ff1c 	bl	8009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009c78:	b00a      	add	sp, #40	; 0x28
 8009c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c7e:	bf00      	nop
 8009c80:	2000a396 	.word	0x2000a396

08009c84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 8009c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c88:	b08b      	sub	sp, #44	; 0x2c
 8009c8a:	469b      	mov	fp, r3
 8009c8c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8009c90:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8009c94:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8009c98:	2fff      	cmp	r7, #255	; 0xff
 8009c9a:	bf14      	ite	ne
 8009c9c:	2308      	movne	r3, #8
 8009c9e:	2302      	moveq	r3, #2
 8009ca0:	2600      	movs	r6, #0
 8009ca2:	4604      	mov	r4, r0
 8009ca4:	4689      	mov	r9, r1
 8009ca6:	4692      	mov	sl, r2
 8009ca8:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8009cac:	9608      	str	r6, [sp, #32]
 8009cae:	f7ff fe8d 	bl	80099cc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009cb2:	e9cd 8500 	strd	r8, r5, [sp]
 8009cb6:	4603      	mov	r3, r0
 8009cb8:	465a      	mov	r2, fp
 8009cba:	4651      	mov	r1, sl
 8009cbc:	4620      	mov	r0, r4
 8009cbe:	f7ff fee7 	bl	8009a90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009cc2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009cc6:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009cca:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8009cce:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009cd2:	6823      	ldr	r3, [r4, #0]
 8009cd4:	9005      	str	r0, [sp, #20]
 8009cd6:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009cda:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8009cde:	f8ad 601c 	strh.w	r6, [sp, #28]
 8009ce2:	f8ad 801e 	strh.w	r8, [sp, #30]
 8009ce6:	f8cd 9020 	str.w	r9, [sp, #32]
 8009cea:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8009cee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009cf0:	9d02      	ldr	r5, [sp, #8]
 8009cf2:	4620      	mov	r0, r4
 8009cf4:	4798      	blx	r3
 8009cf6:	4228      	tst	r0, r5
 8009cf8:	d106      	bne.n	8009d08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8009cfa:	4b07      	ldr	r3, [pc, #28]	; (8009d18 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8009cfc:	4a07      	ldr	r2, [pc, #28]	; (8009d1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 8009cfe:	4808      	ldr	r0, [pc, #32]	; (8009d20 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 8009d00:	f240 11fb 	movw	r1, #507	; 0x1fb
 8009d04:	f010 f89c 	bl	8019e40 <__assert_func>
 8009d08:	6860      	ldr	r0, [r4, #4]
 8009d0a:	6803      	ldr	r3, [r0, #0]
 8009d0c:	a902      	add	r1, sp, #8
 8009d0e:	685b      	ldr	r3, [r3, #4]
 8009d10:	4798      	blx	r3
 8009d12:	b00b      	add	sp, #44	; 0x2c
 8009d14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d18:	0801c4b6 	.word	0x0801c4b6
 8009d1c:	0801c744 	.word	0x0801c744
 8009d20:	0801c402 	.word	0x0801c402

08009d24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009d24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009d28:	461f      	mov	r7, r3
 8009d2a:	4b0b      	ldr	r3, [pc, #44]	; (8009d58 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009d2c:	460d      	mov	r5, r1
 8009d2e:	f8b3 8000 	ldrh.w	r8, [r3]
 8009d32:	4616      	mov	r6, r2
 8009d34:	4604      	mov	r4, r0
 8009d36:	f7f7 f859 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009d3a:	6803      	ldr	r3, [r0, #0]
 8009d3c:	6a1b      	ldr	r3, [r3, #32]
 8009d3e:	4798      	blx	r3
 8009d40:	463b      	mov	r3, r7
 8009d42:	e9cd 8000 	strd	r8, r0, [sp]
 8009d46:	4632      	mov	r2, r6
 8009d48:	4629      	mov	r1, r5
 8009d4a:	4620      	mov	r0, r4
 8009d4c:	f7ff fea0 	bl	8009a90 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009d50:	b002      	add	sp, #8
 8009d52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d56:	bf00      	nop
 8009d58:	2000a396 	.word	0x2000a396

08009d5c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009d5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d60:	b088      	sub	sp, #32
 8009d62:	4698      	mov	r8, r3
 8009d64:	2300      	movs	r3, #0
 8009d66:	9306      	str	r3, [sp, #24]
 8009d68:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009d6c:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8009d70:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009d74:	f8ad 6010 	strh.w	r6, [sp, #16]
 8009d78:	e9cd 3100 	strd	r3, r1, [sp]
 8009d7c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009d80:	f8ad 3014 	strh.w	r3, [sp, #20]
 8009d84:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8009d88:	f88d 301c 	strb.w	r3, [sp, #28]
 8009d8c:	4617      	mov	r7, r2
 8009d8e:	4604      	mov	r4, r0
 8009d90:	f8ad 5012 	strh.w	r5, [sp, #18]
 8009d94:	f7ff fe1a 	bl	80099cc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009d98:	4642      	mov	r2, r8
 8009d9a:	4603      	mov	r3, r0
 8009d9c:	4639      	mov	r1, r7
 8009d9e:	4620      	mov	r0, r4
 8009da0:	f7ff ffc0 	bl	8009d24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009da4:	4b16      	ldr	r3, [pc, #88]	; (8009e00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 8009da6:	9003      	str	r0, [sp, #12]
 8009da8:	881b      	ldrh	r3, [r3, #0]
 8009daa:	f8ad 3016 	strh.w	r3, [sp, #22]
 8009dae:	f7f7 f81d 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009db2:	6803      	ldr	r3, [r0, #0]
 8009db4:	6a1b      	ldr	r3, [r3, #32]
 8009db6:	4798      	blx	r3
 8009db8:	f88d 001e 	strb.w	r0, [sp, #30]
 8009dbc:	f88d 001d 	strb.w	r0, [sp, #29]
 8009dc0:	b106      	cbz	r6, 8009dc4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 8009dc2:	b935      	cbnz	r5, 8009dd2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 8009dc4:	4b0f      	ldr	r3, [pc, #60]	; (8009e04 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 8009dc6:	4a10      	ldr	r2, [pc, #64]	; (8009e08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009dc8:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8009dcc:	480f      	ldr	r0, [pc, #60]	; (8009e0c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 8009dce:	f010 f837 	bl	8019e40 <__assert_func>
 8009dd2:	6823      	ldr	r3, [r4, #0]
 8009dd4:	9d00      	ldr	r5, [sp, #0]
 8009dd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009dd8:	4620      	mov	r0, r4
 8009dda:	4798      	blx	r3
 8009ddc:	4228      	tst	r0, r5
 8009dde:	d104      	bne.n	8009dea <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 8009de0:	4b0b      	ldr	r3, [pc, #44]	; (8009e10 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 8009de2:	4a09      	ldr	r2, [pc, #36]	; (8009e08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009de4:	f240 11e1 	movw	r1, #481	; 0x1e1
 8009de8:	e7f0      	b.n	8009dcc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8009dea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009dec:	6860      	ldr	r0, [r4, #4]
 8009dee:	9306      	str	r3, [sp, #24]
 8009df0:	6803      	ldr	r3, [r0, #0]
 8009df2:	4669      	mov	r1, sp
 8009df4:	685b      	ldr	r3, [r3, #4]
 8009df6:	4798      	blx	r3
 8009df8:	b008      	add	sp, #32
 8009dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009dfe:	bf00      	nop
 8009e00:	2000a396 	.word	0x2000a396
 8009e04:	0801c47e 	.word	0x0801c47e
 8009e08:	0801c52d 	.word	0x0801c52d
 8009e0c:	0801c402 	.word	0x0801c402
 8009e10:	0801c4b6 	.word	0x0801c4b6

08009e14 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009e14:	b570      	push	{r4, r5, r6, lr}
 8009e16:	b08a      	sub	sp, #40	; 0x28
 8009e18:	466b      	mov	r3, sp
 8009e1a:	e883 0006 	stmia.w	r3, {r1, r2}
 8009e1e:	4b20      	ldr	r3, [pc, #128]	; (8009ea0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 8009e20:	781b      	ldrb	r3, [r3, #0]
 8009e22:	4604      	mov	r4, r0
 8009e24:	b933      	cbnz	r3, 8009e34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8009e26:	4b1f      	ldr	r3, [pc, #124]	; (8009ea4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8009e28:	4a1f      	ldr	r2, [pc, #124]	; (8009ea8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009e2a:	4820      	ldr	r0, [pc, #128]	; (8009eac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009e2c:	f44f 7103 	mov.w	r1, #524	; 0x20c
 8009e30:	f010 f806 	bl	8019e40 <__assert_func>
 8009e34:	2300      	movs	r3, #0
 8009e36:	9308      	str	r3, [sp, #32]
 8009e38:	2301      	movs	r3, #1
 8009e3a:	9302      	str	r3, [sp, #8]
 8009e3c:	6803      	ldr	r3, [r0, #0]
 8009e3e:	f8bd 5000 	ldrh.w	r5, [sp]
 8009e42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e44:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8009e48:	4798      	blx	r3
 8009e4a:	4632      	mov	r2, r6
 8009e4c:	4629      	mov	r1, r5
 8009e4e:	4603      	mov	r3, r0
 8009e50:	4620      	mov	r0, r4
 8009e52:	f7ff ff67 	bl	8009d24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009e56:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009e58:	9305      	str	r3, [sp, #20]
 8009e5a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009e5e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009e62:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009e66:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009e6a:	4b11      	ldr	r3, [pc, #68]	; (8009eb0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009e6c:	9003      	str	r0, [sp, #12]
 8009e6e:	881b      	ldrh	r3, [r3, #0]
 8009e70:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009e74:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009e78:	f7f6 ffb8 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009e7c:	6803      	ldr	r3, [r0, #0]
 8009e7e:	6a1b      	ldr	r3, [r3, #32]
 8009e80:	4798      	blx	r3
 8009e82:	23ff      	movs	r3, #255	; 0xff
 8009e84:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009e88:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009e8c:	6860      	ldr	r0, [r4, #4]
 8009e8e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009e92:	6803      	ldr	r3, [r0, #0]
 8009e94:	a902      	add	r1, sp, #8
 8009e96:	685b      	ldr	r3, [r3, #4]
 8009e98:	4798      	blx	r3
 8009e9a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8009e9c:	b00a      	add	sp, #40	; 0x28
 8009e9e:	bd70      	pop	{r4, r5, r6, pc}
 8009ea0:	2000a39b 	.word	0x2000a39b
 8009ea4:	0801c34f 	.word	0x0801c34f
 8009ea8:	0801c5d1 	.word	0x0801c5d1
 8009eac:	0801c402 	.word	0x0801c402
 8009eb0:	2000a396 	.word	0x2000a396

08009eb4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8009eb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009eb6:	b08b      	sub	sp, #44	; 0x2c
 8009eb8:	466d      	mov	r5, sp
 8009eba:	e885 0006 	stmia.w	r5, {r1, r2}
 8009ebe:	461d      	mov	r5, r3
 8009ec0:	2300      	movs	r3, #0
 8009ec2:	9308      	str	r3, [sp, #32]
 8009ec4:	2301      	movs	r3, #1
 8009ec6:	9302      	str	r3, [sp, #8]
 8009ec8:	6803      	ldr	r3, [r0, #0]
 8009eca:	f8bd 6000 	ldrh.w	r6, [sp]
 8009ece:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009ed0:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009ed4:	4604      	mov	r4, r0
 8009ed6:	4798      	blx	r3
 8009ed8:	463a      	mov	r2, r7
 8009eda:	4631      	mov	r1, r6
 8009edc:	4603      	mov	r3, r0
 8009ede:	4620      	mov	r0, r4
 8009ee0:	f7ff ff20 	bl	8009d24 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009ee4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009ee8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009eec:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009ef0:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009ef4:	4b0e      	ldr	r3, [pc, #56]	; (8009f30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8009ef6:	9003      	str	r0, [sp, #12]
 8009ef8:	881b      	ldrh	r3, [r3, #0]
 8009efa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009efe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009f00:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009f04:	9505      	str	r5, [sp, #20]
 8009f06:	f7f6 ff71 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 8009f0a:	6803      	ldr	r3, [r0, #0]
 8009f0c:	6a1b      	ldr	r3, [r3, #32]
 8009f0e:	4798      	blx	r3
 8009f10:	23ff      	movs	r3, #255	; 0xff
 8009f12:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009f16:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009f1a:	6860      	ldr	r0, [r4, #4]
 8009f1c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009f20:	6803      	ldr	r3, [r0, #0]
 8009f22:	a902      	add	r1, sp, #8
 8009f24:	685b      	ldr	r3, [r3, #4]
 8009f26:	4798      	blx	r3
 8009f28:	4628      	mov	r0, r5
 8009f2a:	b00b      	add	sp, #44	; 0x2c
 8009f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f2e:	bf00      	nop
 8009f30:	2000a396 	.word	0x2000a396

08009f34 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009f34:	b570      	push	{r4, r5, r6, lr}
 8009f36:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8009f3a:	4604      	mov	r4, r0
 8009f3c:	b19b      	cbz	r3, 8009f66 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8009f3e:	2002      	movs	r0, #2
 8009f40:	f7f6 fc46 	bl	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009f44:	2300      	movs	r3, #0
 8009f46:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009f4a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8009f4e:	6823      	ldr	r3, [r4, #0]
 8009f50:	4620      	mov	r0, r4
 8009f52:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 8009f56:	f7ff fd39 	bl	80099cc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f5a:	462b      	mov	r3, r5
 8009f5c:	4601      	mov	r1, r0
 8009f5e:	4620      	mov	r0, r4
 8009f60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f64:	4718      	bx	r3
 8009f66:	bd70      	pop	{r4, r5, r6, pc}

08009f68 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8009f68:	b570      	push	{r4, r5, r6, lr}
 8009f6a:	4605      	mov	r5, r0
 8009f6c:	460c      	mov	r4, r1
 8009f6e:	2003      	movs	r0, #3
 8009f70:	b149      	cbz	r1, 8009f86 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8009f72:	f7f6 fbf5 	bl	8000760 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009f76:	6928      	ldr	r0, [r5, #16]
 8009f78:	b168      	cbz	r0, 8009f96 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009f7a:	6803      	ldr	r3, [r0, #0]
 8009f7c:	695b      	ldr	r3, [r3, #20]
 8009f7e:	2101      	movs	r1, #1
 8009f80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f84:	4718      	bx	r3
 8009f86:	f7f6 fc07 	bl	8000798 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009f8a:	6928      	ldr	r0, [r5, #16]
 8009f8c:	b118      	cbz	r0, 8009f96 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009f8e:	6803      	ldr	r3, [r0, #0]
 8009f90:	4621      	mov	r1, r4
 8009f92:	695b      	ldr	r3, [r3, #20]
 8009f94:	e7f4      	b.n	8009f80 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8009f96:	bd70      	pop	{r4, r5, r6, pc}

08009f98 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 8009f98:	4770      	bx	lr

08009f9a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009f9a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009f9e:	1a13      	subs	r3, r2, r0
 8009fa0:	4258      	negs	r0, r3
 8009fa2:	4158      	adcs	r0, r3
 8009fa4:	4770      	bx	lr

08009fa6 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8009fa6:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009faa:	1a9b      	subs	r3, r3, r2
 8009fac:	2b00      	cmp	r3, #0
 8009fae:	bfdc      	itt	le
 8009fb0:	6882      	ldrle	r2, [r0, #8]
 8009fb2:	189b      	addle	r3, r3, r2
 8009fb4:	2b01      	cmp	r3, #1
 8009fb6:	bfcc      	ite	gt
 8009fb8:	2000      	movgt	r0, #0
 8009fba:	2001      	movle	r0, #1
 8009fbc:	4770      	bx	lr

08009fbe <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009fbe:	6902      	ldr	r2, [r0, #16]
 8009fc0:	6840      	ldr	r0, [r0, #4]
 8009fc2:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8009fc6:	4770      	bx	lr

08009fc8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8009fc8:	6803      	ldr	r3, [r0, #0]
 8009fca:	691b      	ldr	r3, [r3, #16]
 8009fcc:	4718      	bx	r3

08009fce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009fce:	4770      	bx	lr

08009fd0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009fd0:	4770      	bx	lr

08009fd2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009fd2:	4770      	bx	lr

08009fd4 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8009fd4:	b570      	push	{r4, r5, r6, lr}
 8009fd6:	2301      	movs	r3, #1
 8009fd8:	7203      	strb	r3, [r0, #8]
 8009fda:	4604      	mov	r4, r0
 8009fdc:	6840      	ldr	r0, [r0, #4]
 8009fde:	6803      	ldr	r3, [r0, #0]
 8009fe0:	699b      	ldr	r3, [r3, #24]
 8009fe2:	4798      	blx	r3
 8009fe4:	6803      	ldr	r3, [r0, #0]
 8009fe6:	2b08      	cmp	r3, #8
 8009fe8:	4605      	mov	r5, r0
 8009fea:	d01e      	beq.n	800a02a <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 8009fec:	d80b      	bhi.n	800a006 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009fee:	2b02      	cmp	r3, #2
 8009ff0:	d027      	beq.n	800a042 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8009ff2:	2b04      	cmp	r3, #4
 8009ff4:	d011      	beq.n	800a01a <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8009ff6:	2b01      	cmp	r3, #1
 8009ff8:	d028      	beq.n	800a04c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009ffa:	4b17      	ldr	r3, [pc, #92]	; (800a058 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 8009ffc:	4a17      	ldr	r2, [pc, #92]	; (800a05c <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 8009ffe:	4818      	ldr	r0, [pc, #96]	; (800a060 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800a000:	218c      	movs	r1, #140	; 0x8c
 800a002:	f00f ff1d 	bl	8019e40 <__assert_func>
 800a006:	2b40      	cmp	r3, #64	; 0x40
 800a008:	d020      	beq.n	800a04c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a00a:	d801      	bhi.n	800a010 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a00c:	2b20      	cmp	r3, #32
 800a00e:	e7f3      	b.n	8009ff8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a010:	2b80      	cmp	r3, #128	; 0x80
 800a012:	d01b      	beq.n	800a04c <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a014:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a018:	e7ee      	b.n	8009ff8 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800a01a:	6823      	ldr	r3, [r4, #0]
 800a01c:	7f01      	ldrb	r1, [r0, #28]
 800a01e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a020:	4620      	mov	r0, r4
 800a022:	4798      	blx	r3
 800a024:	6823      	ldr	r3, [r4, #0]
 800a026:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a028:	e006      	b.n	800a038 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a02a:	6823      	ldr	r3, [r4, #0]
 800a02c:	7f01      	ldrb	r1, [r0, #28]
 800a02e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a030:	4620      	mov	r0, r4
 800a032:	4798      	blx	r3
 800a034:	6823      	ldr	r3, [r4, #0]
 800a036:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a038:	4629      	mov	r1, r5
 800a03a:	4620      	mov	r0, r4
 800a03c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a040:	4718      	bx	r3
 800a042:	6823      	ldr	r3, [r4, #0]
 800a044:	4620      	mov	r0, r4
 800a046:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a048:	4798      	blx	r3
 800a04a:	e7f3      	b.n	800a034 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800a04c:	6823      	ldr	r3, [r4, #0]
 800a04e:	4620      	mov	r0, r4
 800a050:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a052:	4798      	blx	r3
 800a054:	e7e6      	b.n	800a024 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800a056:	bf00      	nop
 800a058:	0801c822 	.word	0x0801c822
 800a05c:	0801c8e4 	.word	0x0801c8e4
 800a060:	0801c847 	.word	0x0801c847

0800a064 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a064:	b570      	push	{r4, r5, r6, lr}
 800a066:	4604      	mov	r4, r0
 800a068:	460e      	mov	r6, r1
 800a06a:	6860      	ldr	r0, [r4, #4]
 800a06c:	6803      	ldr	r3, [r0, #0]
 800a06e:	685b      	ldr	r3, [r3, #4]
 800a070:	4798      	blx	r3
 800a072:	2800      	cmp	r0, #0
 800a074:	d1f9      	bne.n	800a06a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a076:	4d0d      	ldr	r5, [pc, #52]	; (800a0ac <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a078:	6828      	ldr	r0, [r5, #0]
 800a07a:	6803      	ldr	r3, [r0, #0]
 800a07c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a07e:	4798      	blx	r3
 800a080:	f7f6 fe2a 	bl	8000cd8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a084:	6828      	ldr	r0, [r5, #0]
 800a086:	2101      	movs	r1, #1
 800a088:	f7ff ff86 	bl	8009f98 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 800a08c:	6860      	ldr	r0, [r4, #4]
 800a08e:	6803      	ldr	r3, [r0, #0]
 800a090:	4631      	mov	r1, r6
 800a092:	689b      	ldr	r3, [r3, #8]
 800a094:	4798      	blx	r3
 800a096:	6823      	ldr	r3, [r4, #0]
 800a098:	4620      	mov	r0, r4
 800a09a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a09c:	4798      	blx	r3
 800a09e:	6828      	ldr	r0, [r5, #0]
 800a0a0:	6803      	ldr	r3, [r0, #0]
 800a0a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a0a6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a0a8:	4718      	bx	r3
 800a0aa:	bf00      	nop
 800a0ac:	2000a39c 	.word	0x2000a39c

0800a0b0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a0b0:	b508      	push	{r3, lr}
 800a0b2:	f7f6 fe03 	bl	8000cbc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a0b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a0ba:	f7f6 be07 	b.w	8000ccc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a0be <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a0be:	b510      	push	{r4, lr}
 800a0c0:	2114      	movs	r1, #20
 800a0c2:	4604      	mov	r4, r0
 800a0c4:	f00f fe8d 	bl	8019de2 <_ZdlPvj>
 800a0c8:	4620      	mov	r0, r4
 800a0ca:	bd10      	pop	{r4, pc}

0800a0cc <_ZN8touchgfx13DMA_Interface5startEv>:
 800a0cc:	b510      	push	{r4, lr}
 800a0ce:	4604      	mov	r4, r0
 800a0d0:	6840      	ldr	r0, [r0, #4]
 800a0d2:	6803      	ldr	r3, [r0, #0]
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	4798      	blx	r3
 800a0d8:	b948      	cbnz	r0, 800a0ee <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a0da:	7a63      	ldrb	r3, [r4, #9]
 800a0dc:	b13b      	cbz	r3, 800a0ee <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a0de:	7a23      	ldrb	r3, [r4, #8]
 800a0e0:	b92b      	cbnz	r3, 800a0ee <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a0e2:	6823      	ldr	r3, [r4, #0]
 800a0e4:	4620      	mov	r0, r4
 800a0e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a0e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a0ec:	4718      	bx	r3
 800a0ee:	bd10      	pop	{r4, pc}

0800a0f0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a0f0:	b510      	push	{r4, lr}
 800a0f2:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a0f6:	1b12      	subs	r2, r2, r4
 800a0f8:	2a00      	cmp	r2, #0
 800a0fa:	bfdc      	itt	le
 800a0fc:	6883      	ldrle	r3, [r0, #8]
 800a0fe:	18d2      	addle	r2, r2, r3
 800a100:	2a01      	cmp	r2, #1
 800a102:	dd18      	ble.n	800a136 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a104:	6843      	ldr	r3, [r0, #4]
 800a106:	f101 021c 	add.w	r2, r1, #28
 800a10a:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a10e:	f851 4b04 	ldr.w	r4, [r1], #4
 800a112:	f843 4b04 	str.w	r4, [r3], #4
 800a116:	4291      	cmp	r1, r2
 800a118:	d1f9      	bne.n	800a10e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a11a:	880a      	ldrh	r2, [r1, #0]
 800a11c:	801a      	strh	r2, [r3, #0]
 800a11e:	788a      	ldrb	r2, [r1, #2]
 800a120:	709a      	strb	r2, [r3, #2]
 800a122:	68c3      	ldr	r3, [r0, #12]
 800a124:	6882      	ldr	r2, [r0, #8]
 800a126:	f3bf 8f5b 	dmb	ish
 800a12a:	3301      	adds	r3, #1
 800a12c:	429a      	cmp	r2, r3
 800a12e:	bfd8      	it	le
 800a130:	1a9b      	suble	r3, r3, r2
 800a132:	60c3      	str	r3, [r0, #12]
 800a134:	bd10      	pop	{r4, pc}
 800a136:	4b03      	ldr	r3, [pc, #12]	; (800a144 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a138:	4a03      	ldr	r2, [pc, #12]	; (800a148 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a13a:	4804      	ldr	r0, [pc, #16]	; (800a14c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a13c:	2139      	movs	r1, #57	; 0x39
 800a13e:	f00f fe7f 	bl	8019e40 <__assert_func>
 800a142:	bf00      	nop
 800a144:	0801c86d 	.word	0x0801c86d
 800a148:	0801c914 	.word	0x0801c914
 800a14c:	0801c847 	.word	0x0801c847

0800a150 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a150:	b510      	push	{r4, lr}
 800a152:	6803      	ldr	r3, [r0, #0]
 800a154:	681b      	ldr	r3, [r3, #0]
 800a156:	4604      	mov	r4, r0
 800a158:	4798      	blx	r3
 800a15a:	b128      	cbz	r0, 800a168 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a15c:	4b07      	ldr	r3, [pc, #28]	; (800a17c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a15e:	4a08      	ldr	r2, [pc, #32]	; (800a180 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a160:	4808      	ldr	r0, [pc, #32]	; (800a184 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a162:	213f      	movs	r1, #63	; 0x3f
 800a164:	f00f fe6c 	bl	8019e40 <__assert_func>
 800a168:	6923      	ldr	r3, [r4, #16]
 800a16a:	68a2      	ldr	r2, [r4, #8]
 800a16c:	f3bf 8f5b 	dmb	ish
 800a170:	3301      	adds	r3, #1
 800a172:	429a      	cmp	r2, r3
 800a174:	bfd8      	it	le
 800a176:	1a9b      	suble	r3, r3, r2
 800a178:	6123      	str	r3, [r4, #16]
 800a17a:	bd10      	pop	{r4, pc}
 800a17c:	0801c890 	.word	0x0801c890
 800a180:	0801c962 	.word	0x0801c962
 800a184:	0801c847 	.word	0x0801c847

0800a188 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a188:	b570      	push	{r4, r5, r6, lr}
 800a18a:	4604      	mov	r4, r0
 800a18c:	6840      	ldr	r0, [r0, #4]
 800a18e:	6803      	ldr	r3, [r0, #0]
 800a190:	681b      	ldr	r3, [r3, #0]
 800a192:	4798      	blx	r3
 800a194:	4605      	mov	r5, r0
 800a196:	b930      	cbnz	r0, 800a1a6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a198:	7a23      	ldrb	r3, [r4, #8]
 800a19a:	b123      	cbz	r3, 800a1a6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a19c:	6860      	ldr	r0, [r4, #4]
 800a19e:	6803      	ldr	r3, [r0, #0]
 800a1a0:	695b      	ldr	r3, [r3, #20]
 800a1a2:	4798      	blx	r3
 800a1a4:	7225      	strb	r5, [r4, #8]
 800a1a6:	6860      	ldr	r0, [r4, #4]
 800a1a8:	6803      	ldr	r3, [r0, #0]
 800a1aa:	681b      	ldr	r3, [r3, #0]
 800a1ac:	4798      	blx	r3
 800a1ae:	b928      	cbnz	r0, 800a1bc <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a1b0:	6823      	ldr	r3, [r4, #0]
 800a1b2:	4620      	mov	r0, r4
 800a1b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a1b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1ba:	4718      	bx	r3
 800a1bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1c0:	f7f6 bd92 	b.w	8000ce8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a1c4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a1c4:	b510      	push	{r4, lr}
 800a1c6:	4c04      	ldr	r4, [pc, #16]	; (800a1d8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a1c8:	6082      	str	r2, [r0, #8]
 800a1ca:	2200      	movs	r2, #0
 800a1cc:	e9c0 4100 	strd	r4, r1, [r0]
 800a1d0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a1d4:	bd10      	pop	{r4, pc}
 800a1d6:	bf00      	nop
 800a1d8:	0801c8c8 	.word	0x0801c8c8

0800a1dc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a1dc:	6840      	ldr	r0, [r0, #4]
 800a1de:	6803      	ldr	r3, [r0, #0]
 800a1e0:	681b      	ldr	r3, [r3, #0]
 800a1e2:	4718      	bx	r3

0800a1e4 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800a1e4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800a1e8:	4770      	bx	lr

0800a1ea <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800a1ea:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800a1ee:	4770      	bx	lr

0800a1f0 <_ZN8touchgfx13ScalableImageD1Ev>:
 800a1f0:	4770      	bx	lr

0800a1f2 <_ZN8touchgfx13ScalableImageD0Ev>:
 800a1f2:	b510      	push	{r4, lr}
 800a1f4:	212c      	movs	r1, #44	; 0x2c
 800a1f6:	4604      	mov	r4, r0
 800a1f8:	f00f fdf3 	bl	8019de2 <_ZdlPvj>
 800a1fc:	4620      	mov	r0, r4
 800a1fe:	bd10      	pop	{r4, pc}

0800a200 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800a200:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a202:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800a206:	2bff      	cmp	r3, #255	; 0xff
 800a208:	4605      	mov	r5, r0
 800a20a:	d007      	beq.n	800a21c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x1c>
 800a20c:	2300      	movs	r3, #0
 800a20e:	802b      	strh	r3, [r5, #0]
 800a210:	806b      	strh	r3, [r5, #2]
 800a212:	80ab      	strh	r3, [r5, #4]
 800a214:	80eb      	strh	r3, [r5, #6]
 800a216:	4628      	mov	r0, r5
 800a218:	b004      	add	sp, #16
 800a21a:	bd70      	pop	{r4, r5, r6, pc}
 800a21c:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800a220:	4621      	mov	r1, r4
 800a222:	4668      	mov	r0, sp
 800a224:	f004 f860 	bl	800e2e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a228:	4620      	mov	r0, r4
 800a22a:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800a22e:	f003 ffe7 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a232:	4286      	cmp	r6, r0
 800a234:	d1ea      	bne.n	800a20c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800a236:	4621      	mov	r1, r4
 800a238:	a802      	add	r0, sp, #8
 800a23a:	f004 f855 	bl	800e2e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a23e:	4620      	mov	r0, r4
 800a240:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800a244:	f004 f816 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a248:	4286      	cmp	r6, r0
 800a24a:	d1df      	bne.n	800a20c <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0xc>
 800a24c:	4621      	mov	r1, r4
 800a24e:	4628      	mov	r0, r5
 800a250:	f004 f84a 	bl	800e2e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a254:	e7df      	b.n	800a216 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x16>
	...

0800a258 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800a258:	b538      	push	{r3, r4, r5, lr}
 800a25a:	2300      	movs	r3, #0
 800a25c:	8083      	strh	r3, [r0, #4]
 800a25e:	80c3      	strh	r3, [r0, #6]
 800a260:	8103      	strh	r3, [r0, #8]
 800a262:	8143      	strh	r3, [r0, #10]
 800a264:	8183      	strh	r3, [r0, #12]
 800a266:	81c3      	strh	r3, [r0, #14]
 800a268:	8203      	strh	r3, [r0, #16]
 800a26a:	8243      	strh	r3, [r0, #18]
 800a26c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a270:	61c3      	str	r3, [r0, #28]
 800a272:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800a276:	4b09      	ldr	r3, [pc, #36]	; (800a29c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x44>)
 800a278:	6003      	str	r3, [r0, #0]
 800a27a:	2501      	movs	r5, #1
 800a27c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a280:	4604      	mov	r4, r0
 800a282:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800a286:	84c3      	strh	r3, [r0, #38]	; 0x26
 800a288:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800a28c:	f000 fa90 	bl	800a7b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a290:	4b03      	ldr	r3, [pc, #12]	; (800a2a0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800a292:	6023      	str	r3, [r4, #0]
 800a294:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800a298:	4620      	mov	r0, r4
 800a29a:	bd38      	pop	{r3, r4, r5, pc}
 800a29c:	0801cad4 	.word	0x0801cad4
 800a2a0:	0801c99c 	.word	0x0801c99c

0800a2a4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800a2a4:	4603      	mov	r3, r0
 800a2a6:	3026      	adds	r0, #38	; 0x26
 800a2a8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800a2ac:	b90b      	cbnz	r3, 800a2b2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800a2ae:	f002 bbcf 	b.w	800ca50 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800a2b2:	f002 bbdd 	b.w	800ca70 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800a2b8 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800a2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2bc:	4604      	mov	r4, r0
 800a2be:	469b      	mov	fp, r3
 800a2c0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800a2c4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a2c8:	f9b1 6000 	ldrsh.w	r6, [r1]
 800a2cc:	8888      	ldrh	r0, [r1, #4]
 800a2ce:	b0ab      	sub	sp, #172	; 0xac
 800a2d0:	4430      	add	r0, r6
 800a2d2:	b280      	uxth	r0, r0
 800a2d4:	9206      	str	r2, [sp, #24]
 800a2d6:	fa0f fe80 	sxth.w	lr, r0
 800a2da:	2200      	movs	r2, #0
 800a2dc:	4596      	cmp	lr, r2
 800a2de:	e9dd a934 	ldrd	sl, r9, [sp, #208]	; 0xd0
 800a2e2:	e9dd 8736 	ldrd	r8, r7, [sp, #216]	; 0xd8
 800a2e6:	920e      	str	r2, [sp, #56]	; 0x38
 800a2e8:	f340 80f3 	ble.w	800a4d2 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a2ec:	45b4      	cmp	ip, r6
 800a2ee:	f340 80f0 	ble.w	800a4d2 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a2f2:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a2f6:	88ca      	ldrh	r2, [r1, #6]
 800a2f8:	442a      	add	r2, r5
 800a2fa:	b292      	uxth	r2, r2
 800a2fc:	b211      	sxth	r1, r2
 800a2fe:	2900      	cmp	r1, #0
 800a300:	f340 80e7 	ble.w	800a4d2 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a304:	42ab      	cmp	r3, r5
 800a306:	f340 80e4 	ble.w	800a4d2 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21a>
 800a30a:	45f4      	cmp	ip, lr
 800a30c:	bfb8      	it	lt
 800a30e:	fa1f f08c 	uxthlt.w	r0, ip
 800a312:	428b      	cmp	r3, r1
 800a314:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800a318:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800a31c:	bfb8      	it	lt
 800a31e:	b29a      	uxthlt	r2, r3
 800a320:	1b80      	subs	r0, r0, r6
 800a322:	1b52      	subs	r2, r2, r5
 800a324:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
 800a328:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800a32c:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800a330:	f8ad 503a 	strh.w	r5, [sp, #58]	; 0x3a
 800a334:	ab0e      	add	r3, sp, #56	; 0x38
 800a336:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a33a:	6822      	ldr	r2, [r4, #0]
 800a33c:	9307      	str	r3, [sp, #28]
 800a33e:	ad10      	add	r5, sp, #64	; 0x40
 800a340:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800a342:	e885 0003 	stmia.w	r5, {r0, r1}
 800a346:	4629      	mov	r1, r5
 800a348:	4620      	mov	r0, r4
 800a34a:	4790      	blx	r2
 800a34c:	4621      	mov	r1, r4
 800a34e:	a812      	add	r0, sp, #72	; 0x48
 800a350:	f002 fadf 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a354:	a812      	add	r0, sp, #72	; 0x48
 800a356:	f001 f8f7 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800a35a:	9b07      	ldr	r3, [sp, #28]
 800a35c:	1d26      	adds	r6, r4, #4
 800a35e:	4618      	mov	r0, r3
 800a360:	4631      	mov	r1, r6
 800a362:	f001 f8d9 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800a366:	4628      	mov	r0, r5
 800a368:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800a36c:	f001 f8ec 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800a370:	4628      	mov	r0, r5
 800a372:	f004 f84d 	bl	800e410 <_ZNK8touchgfx6Bitmap7getDataEv>
 800a376:	9007      	str	r0, [sp, #28]
 800a378:	2800      	cmp	r0, #0
 800a37a:	f000 80a7 	beq.w	800a4cc <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x214>
 800a37e:	f8db 2000 	ldr.w	r2, [fp]
 800a382:	9208      	str	r2, [sp, #32]
 800a384:	f8db 2004 	ldr.w	r2, [fp, #4]
 800a388:	9209      	str	r2, [sp, #36]	; 0x24
 800a38a:	f8db 2008 	ldr.w	r2, [fp, #8]
 800a38e:	920a      	str	r2, [sp, #40]	; 0x28
 800a390:	f8da 2000 	ldr.w	r2, [sl]
 800a394:	920b      	str	r2, [sp, #44]	; 0x2c
 800a396:	f8da 2004 	ldr.w	r2, [sl, #4]
 800a39a:	920c      	str	r2, [sp, #48]	; 0x30
 800a39c:	f8da 2008 	ldr.w	r2, [sl, #8]
 800a3a0:	920d      	str	r2, [sp, #52]	; 0x34
 800a3a2:	a90b      	add	r1, sp, #44	; 0x2c
 800a3a4:	4632      	mov	r2, r6
 800a3a6:	a808      	add	r0, sp, #32
 800a3a8:	f001 f89a 	bl	800b4e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800a3ac:	4632      	mov	r2, r6
 800a3ae:	a90c      	add	r1, sp, #48	; 0x30
 800a3b0:	a809      	add	r0, sp, #36	; 0x24
 800a3b2:	f001 f895 	bl	800b4e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800a3b6:	4632      	mov	r2, r6
 800a3b8:	a90d      	add	r1, sp, #52	; 0x34
 800a3ba:	a80a      	add	r0, sp, #40	; 0x28
 800a3bc:	f001 f890 	bl	800b4e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800a3c0:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800a3c4:	ed97 6a00 	vldr	s12, [r7]
 800a3c8:	ed99 5a00 	vldr	s10, [r9]
 800a3cc:	edd8 5a00 	vldr	s11, [r8]
 800a3d0:	edd9 6a01 	vldr	s13, [r9, #4]
 800a3d4:	f8d9 e008 	ldr.w	lr, [r9, #8]
 800a3d8:	f8d8 c008 	ldr.w	ip, [r8, #8]
 800a3dc:	f8d7 a004 	ldr.w	sl, [r7, #4]
 800a3e0:	9b06      	ldr	r3, [sp, #24]
 800a3e2:	f8d8 b004 	ldr.w	fp, [r8, #4]
 800a3e6:	68bf      	ldr	r7, [r7, #8]
 800a3e8:	ed8d 5a1d 	vstr	s10, [sp, #116]	; 0x74
 800a3ec:	eeb0 7a67 	vmov.f32	s14, s15
 800a3f0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a3f4:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800a3f8:	edcd 5a1e 	vstr	s11, [sp, #120]	; 0x78
 800a3fc:	ee17 6a10 	vmov	r6, s14
 800a400:	eeb0 7a67 	vmov.f32	s14, s15
 800a404:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a408:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800a40c:	ed8d 6a1f 	vstr	s12, [sp, #124]	; 0x7c
 800a410:	ee17 0a10 	vmov	r0, s14
 800a414:	eeb0 7a67 	vmov.f32	s14, s15
 800a418:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a41c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800a420:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 800a424:	ee17 1a10 	vmov	r1, s14
 800a428:	eeb0 7a67 	vmov.f32	s14, s15
 800a42c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a430:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800a434:	f8cd e09c 	str.w	lr, [sp, #156]	; 0x9c
 800a438:	ee17 2a10 	vmov	r2, s14
 800a43c:	ed9d 7a08 	vldr	s14, [sp, #32]
 800a440:	9225      	str	r2, [sp, #148]	; 0x94
 800a442:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800a446:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800a44a:	4a23      	ldr	r2, [pc, #140]	; (800a4d8 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 800a44c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 800a450:	e9cd 0120 	strd	r0, r1, [sp, #128]	; 0x80
 800a454:	edcd 7a26 	vstr	s15, [sp, #152]	; 0x98
 800a458:	f8cd c0a0 	str.w	ip, [sp, #160]	; 0xa0
 800a45c:	9314      	str	r3, [sp, #80]	; 0x50
 800a45e:	961c      	str	r6, [sp, #112]	; 0x70
 800a460:	f8cd b08c 	str.w	fp, [sp, #140]	; 0x8c
 800a464:	f8cd a090 	str.w	sl, [sp, #144]	; 0x90
 800a468:	9729      	str	r7, [sp, #164]	; 0xa4
 800a46a:	4628      	mov	r0, r5
 800a46c:	8812      	ldrh	r2, [r2, #0]
 800a46e:	9b07      	ldr	r3, [sp, #28]
 800a470:	9215      	str	r2, [sp, #84]	; 0x54
 800a472:	9316      	str	r3, [sp, #88]	; 0x58
 800a474:	f003 fffe 	bl	800e474 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800a478:	9017      	str	r0, [sp, #92]	; 0x5c
 800a47a:	4628      	mov	r0, r5
 800a47c:	f003 fec0 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a480:	9018      	str	r0, [sp, #96]	; 0x60
 800a482:	4628      	mov	r0, r5
 800a484:	f003 fef6 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a488:	9019      	str	r0, [sp, #100]	; 0x64
 800a48a:	4628      	mov	r0, r5
 800a48c:	f003 feb8 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a490:	4b12      	ldr	r3, [pc, #72]	; (800a4dc <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x224>)
 800a492:	901a      	str	r0, [sp, #104]	; 0x68
 800a494:	681b      	ldr	r3, [r3, #0]
 800a496:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a49a:	b10a      	cbz	r2, 800a4a0 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1e8>
 800a49c:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800a49e:	b905      	cbnz	r5, 800a4a2 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 800a4a0:	689d      	ldr	r5, [r3, #8]
 800a4a2:	682b      	ldr	r3, [r5, #0]
 800a4a4:	4620      	mov	r0, r4
 800a4a6:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800a4a8:	f7ff fefc 	bl	800a2a4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800a4ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a4b0:	9304      	str	r3, [sp, #16]
 800a4b2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a4b6:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800a4ba:	ab10      	add	r3, sp, #64	; 0x40
 800a4bc:	9301      	str	r3, [sp, #4]
 800a4be:	ab12      	add	r3, sp, #72	; 0x48
 800a4c0:	9300      	str	r3, [sp, #0]
 800a4c2:	aa1b      	add	r2, sp, #108	; 0x6c
 800a4c4:	ab16      	add	r3, sp, #88	; 0x58
 800a4c6:	a914      	add	r1, sp, #80	; 0x50
 800a4c8:	4628      	mov	r0, r5
 800a4ca:	47b0      	blx	r6
 800a4cc:	b02b      	add	sp, #172	; 0xac
 800a4ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4d2:	2300      	movs	r3, #0
 800a4d4:	930f      	str	r3, [sp, #60]	; 0x3c
 800a4d6:	e72d      	b.n	800a334 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800a4d8:	2000a396 	.word	0x2000a396
 800a4dc:	2000a39c 	.word	0x2000a39c

0800a4e0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800a4e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a4e4:	ed2d 8b08 	vpush	{d8-d11}
 800a4e8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800a4ec:	b094      	sub	sp, #80	; 0x50
 800a4ee:	4680      	mov	r8, r0
 800a4f0:	4689      	mov	r9, r1
 800a4f2:	2b00      	cmp	r3, #0
 800a4f4:	d07d      	beq.n	800a5f2 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x112>
 800a4f6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800a4fa:	ed9f 8a45 	vldr	s16, [pc, #276]	; 800a610 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x130>
 800a4fe:	ee09 3a10 	vmov	s18, r3
 800a502:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a506:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800a50a:	ee08 3a90 	vmov	s17, r3
 800a50e:	4620      	mov	r0, r4
 800a510:	4b40      	ldr	r3, [pc, #256]	; (800a614 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x134>)
 800a512:	930b      	str	r3, [sp, #44]	; 0x2c
 800a514:	930c      	str	r3, [sp, #48]	; 0x30
 800a516:	930d      	str	r3, [sp, #52]	; 0x34
 800a518:	f003 fe72 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a51c:	ee07 0a90 	vmov	s15, r0
 800a520:	4620      	mov	r0, r4
 800a522:	eeb8 aa67 	vcvt.f32.u32	s20, s15
 800a526:	f003 fea5 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a52a:	4b3b      	ldr	r3, [pc, #236]	; (800a618 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x138>)
 800a52c:	781b      	ldrb	r3, [r3, #0]
 800a52e:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800a532:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800a536:	ee07 0a90 	vmov	s15, r0
 800a53a:	2b01      	cmp	r3, #1
 800a53c:	ee39 9a08 	vadd.f32	s18, s18, s16
 800a540:	ee78 8a88 	vadd.f32	s17, s17, s16
 800a544:	eef8 9a67 	vcvt.f32.u32	s19, s15
 800a548:	d158      	bne.n	800a5fc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x11c>
 800a54a:	eef0 aa4a 	vmov.f32	s21, s20
 800a54e:	eeb0 ba69 	vmov.f32	s22, s19
 800a552:	eef0 ba69 	vmov.f32	s23, s19
 800a556:	ee1a aa10 	vmov	sl, s20
 800a55a:	eef0 9a48 	vmov.f32	s19, s16
 800a55e:	eeb0 aa48 	vmov.f32	s20, s16
 800a562:	af11      	add	r7, sp, #68	; 0x44
 800a564:	ae0e      	add	r6, sp, #56	; 0x38
 800a566:	ad0b      	add	r5, sp, #44	; 0x2c
 800a568:	ac08      	add	r4, sp, #32
 800a56a:	ab05      	add	r3, sp, #20
 800a56c:	2200      	movs	r2, #0
 800a56e:	4649      	mov	r1, r9
 800a570:	4640      	mov	r0, r8
 800a572:	9703      	str	r7, [sp, #12]
 800a574:	9602      	str	r6, [sp, #8]
 800a576:	9501      	str	r5, [sp, #4]
 800a578:	9400      	str	r4, [sp, #0]
 800a57a:	ed8d 8a05 	vstr	s16, [sp, #20]
 800a57e:	ed8d 9a06 	vstr	s18, [sp, #24]
 800a582:	ed8d 9a07 	vstr	s18, [sp, #28]
 800a586:	ed8d 8a08 	vstr	s16, [sp, #32]
 800a58a:	ed8d 8a09 	vstr	s16, [sp, #36]	; 0x24
 800a58e:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800a592:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800a596:	ed8d aa0f 	vstr	s20, [sp, #60]	; 0x3c
 800a59a:	edcd ba10 	vstr	s23, [sp, #64]	; 0x40
 800a59e:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800a5a2:	ed8d 8a12 	vstr	s16, [sp, #72]	; 0x48
 800a5a6:	edcd 9a13 	vstr	s19, [sp, #76]	; 0x4c
 800a5aa:	f7ff fe85 	bl	800a2b8 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800a5ae:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800a5b2:	e9cd 4500 	strd	r4, r5, [sp]
 800a5b6:	ab05      	add	r3, sp, #20
 800a5b8:	2200      	movs	r2, #0
 800a5ba:	4649      	mov	r1, r9
 800a5bc:	4640      	mov	r0, r8
 800a5be:	ed8d 8a05 	vstr	s16, [sp, #20]
 800a5c2:	ed8d 9a06 	vstr	s18, [sp, #24]
 800a5c6:	ed8d 8a07 	vstr	s16, [sp, #28]
 800a5ca:	ed8d 8a08 	vstr	s16, [sp, #32]
 800a5ce:	edcd 8a09 	vstr	s17, [sp, #36]	; 0x24
 800a5d2:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800a5d6:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800a5da:	edcd ba0f 	vstr	s23, [sp, #60]	; 0x3c
 800a5de:	ed8d ba10 	vstr	s22, [sp, #64]	; 0x40
 800a5e2:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 800a5e6:	edcd 9a12 	vstr	s19, [sp, #72]	; 0x48
 800a5ea:	edcd aa13 	vstr	s21, [sp, #76]	; 0x4c
 800a5ee:	f7ff fe63 	bl	800a2b8 <_ZNK8touchgfx13ScalableImage12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800a5f2:	b014      	add	sp, #80	; 0x50
 800a5f4:	ecbd 8b08 	vpop	{d8-d11}
 800a5f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5fc:	eef0 aa69 	vmov.f32	s21, s19
 800a600:	eef0 ba4a 	vmov.f32	s23, s20
 800a604:	eeb0 ba48 	vmov.f32	s22, s16
 800a608:	ee18 aa10 	vmov	sl, s16
 800a60c:	e7a9      	b.n	800a562 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x82>
 800a60e:	bf00      	nop
 800a610:	00000000 	.word	0x00000000
 800a614:	42c80000 	.word	0x42c80000
 800a618:	2000a394 	.word	0x2000a394

0800a61c <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a61c:	2300      	movs	r3, #0
 800a61e:	8083      	strh	r3, [r0, #4]
 800a620:	80c3      	strh	r3, [r0, #6]
 800a622:	8003      	strh	r3, [r0, #0]
 800a624:	8043      	strh	r3, [r0, #2]
 800a626:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a62a:	2bff      	cmp	r3, #255	; 0xff
 800a62c:	bf01      	itttt	eq
 800a62e:	890b      	ldrheq	r3, [r1, #8]
 800a630:	8083      	strheq	r3, [r0, #4]
 800a632:	894b      	ldrheq	r3, [r1, #10]
 800a634:	80c3      	strheq	r3, [r0, #6]
 800a636:	4770      	bx	lr

0800a638 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a638:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a63a:	4604      	mov	r4, r0
 800a63c:	6808      	ldr	r0, [r1, #0]
 800a63e:	6849      	ldr	r1, [r1, #4]
 800a640:	466b      	mov	r3, sp
 800a642:	c303      	stmia	r3!, {r0, r1}
 800a644:	6823      	ldr	r3, [r4, #0]
 800a646:	4669      	mov	r1, sp
 800a648:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a64a:	4620      	mov	r0, r4
 800a64c:	4798      	blx	r3
 800a64e:	4b08      	ldr	r3, [pc, #32]	; (800a670 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a650:	681b      	ldr	r3, [r3, #0]
 800a652:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a656:	b10a      	cbz	r2, 800a65c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a658:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a65a:	b900      	cbnz	r0, 800a65e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a65c:	6898      	ldr	r0, [r3, #8]
 800a65e:	6803      	ldr	r3, [r0, #0]
 800a660:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a662:	699d      	ldr	r5, [r3, #24]
 800a664:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a668:	4669      	mov	r1, sp
 800a66a:	47a8      	blx	r5
 800a66c:	b003      	add	sp, #12
 800a66e:	bd30      	pop	{r4, r5, pc}
 800a670:	2000a39c 	.word	0x2000a39c

0800a674 <_ZN8touchgfx3BoxD1Ev>:
 800a674:	4770      	bx	lr

0800a676 <_ZN8touchgfx3BoxD0Ev>:
 800a676:	b510      	push	{r4, lr}
 800a678:	212c      	movs	r1, #44	; 0x2c
 800a67a:	4604      	mov	r4, r0
 800a67c:	f00f fbb1 	bl	8019de2 <_ZdlPvj>
 800a680:	4620      	mov	r0, r4
 800a682:	bd10      	pop	{r4, pc}

0800a684 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800a684:	4770      	bx	lr

0800a686 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800a686:	b510      	push	{r4, lr}
 800a688:	2134      	movs	r1, #52	; 0x34
 800a68a:	4604      	mov	r4, r0
 800a68c:	f00f fba9 	bl	8019de2 <_ZdlPvj>
 800a690:	4620      	mov	r0, r4
 800a692:	bd10      	pop	{r4, pc}

0800a694 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800a694:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a698:	4604      	mov	r4, r0
 800a69a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800a69c:	8962      	ldrh	r2, [r4, #10]
 800a69e:	b218      	sxth	r0, r3
 800a6a0:	460e      	mov	r6, r1
 800a6a2:	005b      	lsls	r3, r3, #1
 800a6a4:	8921      	ldrh	r1, [r4, #8]
 800a6a6:	b29b      	uxth	r3, r3
 800a6a8:	1ac9      	subs	r1, r1, r3
 800a6aa:	b08e      	sub	sp, #56	; 0x38
 800a6ac:	b209      	sxth	r1, r1
 800a6ae:	1ad3      	subs	r3, r2, r3
 800a6b0:	b21b      	sxth	r3, r3
 800a6b2:	2900      	cmp	r1, #0
 800a6b4:	f8ad 0000 	strh.w	r0, [sp]
 800a6b8:	f8ad 0002 	strh.w	r0, [sp, #2]
 800a6bc:	f8ad 1004 	strh.w	r1, [sp, #4]
 800a6c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a6c4:	dd5e      	ble.n	800a784 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800a6c6:	2b00      	cmp	r3, #0
 800a6c8:	dd5c      	ble.n	800a784 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800a6ca:	6830      	ldr	r0, [r6, #0]
 800a6cc:	6871      	ldr	r1, [r6, #4]
 800a6ce:	ab02      	add	r3, sp, #8
 800a6d0:	c303      	stmia	r3!, {r0, r1}
 800a6d2:	4669      	mov	r1, sp
 800a6d4:	a802      	add	r0, sp, #8
 800a6d6:	f7fe fd97 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800a6da:	4620      	mov	r0, r4
 800a6dc:	a902      	add	r1, sp, #8
 800a6de:	f7ff ffab 	bl	800a638 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800a6e2:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800a6e4:	2800      	cmp	r0, #0
 800a6e6:	d05f      	beq.n	800a7a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800a6e8:	8963      	ldrh	r3, [r4, #10]
 800a6ea:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a6ee:	f8ad 101c 	strh.w	r1, [sp, #28]
 800a6f2:	1a1f      	subs	r7, r3, r0
 800a6f4:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800a6f8:	b202      	sxth	r2, r0
 800a6fa:	2500      	movs	r5, #0
 800a6fc:	b21b      	sxth	r3, r3
 800a6fe:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800a702:	1a09      	subs	r1, r1, r0
 800a704:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800a708:	9506      	str	r5, [sp, #24]
 800a70a:	f8ad 201e 	strh.w	r2, [sp, #30]
 800a70e:	f8ad 5020 	strh.w	r5, [sp, #32]
 800a712:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800a716:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800a71a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800a71e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800a722:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800a726:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800a72a:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800a72e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800a732:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800a736:	af04      	add	r7, sp, #16
 800a738:	ab06      	add	r3, sp, #24
 800a73a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800a73e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a742:	e887 0003 	stmia.w	r7, {r0, r1}
 800a746:	4631      	mov	r1, r6
 800a748:	4638      	mov	r0, r7
 800a74a:	f7fe fd5d 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800a74e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800a752:	2b00      	cmp	r3, #0
 800a754:	dd12      	ble.n	800a77c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800a756:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800a75a:	2b00      	cmp	r3, #0
 800a75c:	dd0e      	ble.n	800a77c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800a75e:	6823      	ldr	r3, [r4, #0]
 800a760:	4639      	mov	r1, r7
 800a762:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a764:	4620      	mov	r0, r4
 800a766:	4798      	blx	r3
 800a768:	f7f6 fb40 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a76c:	6803      	ldr	r3, [r0, #0]
 800a76e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a770:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800a774:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a778:	4639      	mov	r1, r7
 800a77a:	47c0      	blx	r8
 800a77c:	3501      	adds	r5, #1
 800a77e:	2d04      	cmp	r5, #4
 800a780:	d1da      	bne.n	800a738 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800a782:	e011      	b.n	800a7a8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800a784:	6830      	ldr	r0, [r6, #0]
 800a786:	6871      	ldr	r1, [r6, #4]
 800a788:	ab06      	add	r3, sp, #24
 800a78a:	c303      	stmia	r3!, {r0, r1}
 800a78c:	6823      	ldr	r3, [r4, #0]
 800a78e:	a906      	add	r1, sp, #24
 800a790:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a792:	4620      	mov	r0, r4
 800a794:	4798      	blx	r3
 800a796:	f7f6 fb29 	bl	8000dec <_ZN8touchgfx3HAL3lcdEv>
 800a79a:	6803      	ldr	r3, [r0, #0]
 800a79c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a79e:	699d      	ldr	r5, [r3, #24]
 800a7a0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a7a4:	a906      	add	r1, sp, #24
 800a7a6:	47a8      	blx	r5
 800a7a8:	b00e      	add	sp, #56	; 0x38
 800a7aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a7ae <_ZN8touchgfx5ImageD1Ev>:
 800a7ae:	4770      	bx	lr

0800a7b0 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800a7b0:	b570      	push	{r4, r5, r6, lr}
 800a7b2:	880b      	ldrh	r3, [r1, #0]
 800a7b4:	84c3      	strh	r3, [r0, #38]	; 0x26
 800a7b6:	4604      	mov	r4, r0
 800a7b8:	4608      	mov	r0, r1
 800a7ba:	460d      	mov	r5, r1
 800a7bc:	f003 fd20 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a7c0:	4606      	mov	r6, r0
 800a7c2:	4628      	mov	r0, r5
 800a7c4:	f003 fd56 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a7c8:	6823      	ldr	r3, [r4, #0]
 800a7ca:	4605      	mov	r5, r0
 800a7cc:	b231      	sxth	r1, r6
 800a7ce:	4620      	mov	r0, r4
 800a7d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a7d2:	4798      	blx	r3
 800a7d4:	6823      	ldr	r3, [r4, #0]
 800a7d6:	b229      	sxth	r1, r5
 800a7d8:	4620      	mov	r0, r4
 800a7da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a7e0:	4718      	bx	r3

0800a7e2 <_ZN8touchgfx5ImageD0Ev>:
 800a7e2:	b510      	push	{r4, lr}
 800a7e4:	212c      	movs	r1, #44	; 0x2c
 800a7e6:	4604      	mov	r4, r0
 800a7e8:	f00f fafb 	bl	8019de2 <_ZdlPvj>
 800a7ec:	4620      	mov	r0, r4
 800a7ee:	bd10      	pop	{r4, pc}

0800a7f0 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800a7f0:	b510      	push	{r4, lr}
 800a7f2:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800a7f6:	2bff      	cmp	r3, #255	; 0xff
 800a7f8:	4604      	mov	r4, r0
 800a7fa:	d006      	beq.n	800a80a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800a7fc:	2300      	movs	r3, #0
 800a7fe:	8003      	strh	r3, [r0, #0]
 800a800:	8043      	strh	r3, [r0, #2]
 800a802:	8083      	strh	r3, [r0, #4]
 800a804:	80c3      	strh	r3, [r0, #6]
 800a806:	4620      	mov	r0, r4
 800a808:	bd10      	pop	{r4, pc}
 800a80a:	3126      	adds	r1, #38	; 0x26
 800a80c:	f003 fd6c 	bl	800e2e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a810:	e7f9      	b.n	800a806 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800a814 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800a814:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a818:	4604      	mov	r4, r0
 800a81a:	b088      	sub	sp, #32
 800a81c:	f854 3b26 	ldr.w	r3, [r4], #38
 800a820:	2500      	movs	r5, #0
 800a822:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a824:	460f      	mov	r7, r1
 800a826:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800a82a:	a904      	add	r1, sp, #16
 800a82c:	4606      	mov	r6, r0
 800a82e:	4798      	blx	r3
 800a830:	4620      	mov	r0, r4
 800a832:	f003 fce5 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a836:	4680      	mov	r8, r0
 800a838:	4620      	mov	r0, r4
 800a83a:	f003 fd1b 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a83e:	9506      	str	r5, [sp, #24]
 800a840:	ad06      	add	r5, sp, #24
 800a842:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a846:	4639      	mov	r1, r7
 800a848:	4628      	mov	r0, r5
 800a84a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800a84e:	f7fe fcdb 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800a852:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a856:	2b00      	cmp	r3, #0
 800a858:	dd19      	ble.n	800a88e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800a85a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a85e:	2b00      	cmp	r3, #0
 800a860:	dd15      	ble.n	800a88e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800a862:	4b0c      	ldr	r3, [pc, #48]	; (800a894 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800a864:	681b      	ldr	r3, [r3, #0]
 800a866:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a86a:	b10a      	cbz	r2, 800a870 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800a86c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a86e:	b900      	cbnz	r0, 800a872 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800a870:	6898      	ldr	r0, [r3, #8]
 800a872:	6801      	ldr	r1, [r0, #0]
 800a874:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800a878:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800a87c:	2701      	movs	r7, #1
 800a87e:	9702      	str	r7, [sp, #8]
 800a880:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800a884:	e9cd 5600 	strd	r5, r6, [sp]
 800a888:	688d      	ldr	r5, [r1, #8]
 800a88a:	4621      	mov	r1, r4
 800a88c:	47a8      	blx	r5
 800a88e:	b008      	add	sp, #32
 800a890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a894:	2000a39c 	.word	0x2000a39c

0800a898 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800a898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a89c:	b08d      	sub	sp, #52	; 0x34
 800a89e:	4688      	mov	r8, r1
 800a8a0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a8a2:	f8d3 c000 	ldr.w	ip, [r3]
 800a8a6:	680f      	ldr	r7, [r1, #0]
 800a8a8:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800a8ac:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800a8b0:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800a8b4:	edd3 6a07 	vldr	s13, [r3, #28]
 800a8b8:	9918      	ldr	r1, [sp, #96]	; 0x60
 800a8ba:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800a8be:	f9b1 9000 	ldrsh.w	r9, [r1]
 800a8c2:	f9ba 1000 	ldrsh.w	r1, [sl]
 800a8c6:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800a8ca:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800a8ce:	eba7 070c 	sub.w	r7, r7, ip
 800a8d2:	42bc      	cmp	r4, r7
 800a8d4:	bfa8      	it	ge
 800a8d6:	463c      	movge	r4, r7
 800a8d8:	ee07 4a90 	vmov	s15, r4
 800a8dc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800a8e0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800a8e4:	ee25 4a04 	vmul.f32	s8, s10, s8
 800a8e8:	ee65 4a24 	vmul.f32	s9, s10, s9
 800a8ec:	ee25 5a27 	vmul.f32	s10, s10, s15
 800a8f0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800a8f4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800a8f8:	eb09 0e0c 	add.w	lr, r9, ip
 800a8fc:	4571      	cmp	r1, lr
 800a8fe:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800a902:	ee32 1a05 	vadd.f32	s2, s4, s10
 800a906:	ee36 0a84 	vadd.f32	s0, s13, s8
 800a90a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a90e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a912:	f340 808d 	ble.w	800aa30 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800a916:	eba1 060e 	sub.w	r6, r1, lr
 800a91a:	fb96 f5f4 	sdiv	r5, r6, r4
 800a91e:	ee07 5a10 	vmov	s14, r5
 800a922:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800a926:	2d00      	cmp	r5, #0
 800a928:	fb04 6615 	mls	r6, r4, r5, r6
 800a92c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800a930:	eee7 0a24 	vfma.f32	s1, s14, s9
 800a934:	eea7 1a05 	vfma.f32	s2, s14, s10
 800a938:	dd13      	ble.n	800a962 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800a93a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800a93e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800a942:	eef5 6a40 	vcmp.f32	s13, #0.0
 800a946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a94a:	bf18      	it	ne
 800a94c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800a950:	ee31 2a45 	vsub.f32	s4, s2, s10
 800a954:	bf08      	it	eq
 800a956:	eeb0 7a67 	vmoveq.f32	s14, s15
 800a95a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800a95e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800a962:	fb05 f204 	mul.w	r2, r5, r4
 800a966:	1abf      	subs	r7, r7, r2
 800a968:	4494      	add	ip, r2
 800a96a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800a96e:	4411      	add	r1, r2
 800a970:	eb09 020c 	add.w	r2, r9, ip
 800a974:	443a      	add	r2, r7
 800a976:	b209      	sxth	r1, r1
 800a978:	428a      	cmp	r2, r1
 800a97a:	bfc4      	itt	gt
 800a97c:	eba1 0209 	subgt.w	r2, r1, r9
 800a980:	eba2 070c 	subgt.w	r7, r2, ip
 800a984:	2f00      	cmp	r7, #0
 800a986:	dd50      	ble.n	800aa2a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800a988:	fb97 f1f4 	sdiv	r1, r7, r4
 800a98c:	fb04 7211 	mls	r2, r4, r1, r7
 800a990:	b90a      	cbnz	r2, 800a996 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800a992:	3901      	subs	r1, #1
 800a994:	4622      	mov	r2, r4
 800a996:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800a99a:	6840      	ldr	r0, [r0, #4]
 800a99c:	900b      	str	r0, [sp, #44]	; 0x2c
 800a99e:	f8d0 a000 	ldr.w	sl, [r0]
 800a9a2:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800a9a4:	9008      	str	r0, [sp, #32]
 800a9a6:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800a9aa:	9818      	ldr	r0, [sp, #96]	; 0x60
 800a9ac:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800a9b0:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800a9b4:	695b      	ldr	r3, [r3, #20]
 800a9b6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800a9b8:	445b      	add	r3, fp
 800a9ba:	eef0 6a42 	vmov.f32	s13, s4
 800a9be:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800a9c2:	ee21 3a23 	vmul.f32	s6, s2, s7
 800a9c6:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800a9ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800a9ce:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a9d2:	9307      	str	r3, [sp, #28]
 800a9d4:	ee17 7a90 	vmov	r7, s15
 800a9d8:	ee73 7a42 	vsub.f32	s15, s6, s4
 800a9dc:	eeb0 7a61 	vmov.f32	s14, s3
 800a9e0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800a9e4:	ee16 3a90 	vmov	r3, s13
 800a9e8:	fb97 f7f4 	sdiv	r7, r7, r4
 800a9ec:	ee17 ca90 	vmov	ip, s15
 800a9f0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800a9f4:	fb9c fcf4 	sdiv	ip, ip, r4
 800a9f8:	fb0c 3306 	mla	r3, ip, r6, r3
 800a9fc:	9302      	str	r3, [sp, #8]
 800a9fe:	ee17 3a10 	vmov	r3, s14
 800aa02:	44b6      	add	lr, r6
 800aa04:	fb04 e505 	mla	r5, r4, r5, lr
 800aa08:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800aa0c:	fb07 3706 	mla	r7, r7, r6, r3
 800aa10:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800aa14:	e9cd 4700 	strd	r4, r7, [sp]
 800aa18:	2900      	cmp	r1, #0
 800aa1a:	bfcc      	ite	gt
 800aa1c:	46a1      	movgt	r9, r4
 800aa1e:	4691      	movle	r9, r2
 800aa20:	eba9 0306 	sub.w	r3, r9, r6
 800aa24:	f8da 4008 	ldr.w	r4, [sl, #8]
 800aa28:	47a0      	blx	r4
 800aa2a:	b00d      	add	sp, #52	; 0x34
 800aa2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa30:	2500      	movs	r5, #0
 800aa32:	462e      	mov	r6, r5
 800aa34:	e799      	b.n	800a96a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800aa38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800aa38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa3c:	b0db      	sub	sp, #364	; 0x16c
 800aa3e:	461d      	mov	r5, r3
 800aa40:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800aa44:	930a      	str	r3, [sp, #40]	; 0x28
 800aa46:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800aa4a:	930b      	str	r3, [sp, #44]	; 0x2c
 800aa4c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800aa50:	9310      	str	r3, [sp, #64]	; 0x40
 800aa52:	6803      	ldr	r3, [r0, #0]
 800aa54:	910f      	str	r1, [sp, #60]	; 0x3c
 800aa56:	6bdf      	ldr	r7, [r3, #60]	; 0x3c
 800aa58:	9009      	str	r0, [sp, #36]	; 0x24
 800aa5a:	4614      	mov	r4, r2
 800aa5c:	4629      	mov	r1, r5
 800aa5e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800aa62:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800aa66:	47b8      	blx	r7
 800aa68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aa6a:	6058      	str	r0, [r3, #4]
 800aa6c:	2800      	cmp	r0, #0
 800aa6e:	f000 83a1 	beq.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aa72:	682b      	ldr	r3, [r5, #0]
 800aa74:	9314      	str	r3, [sp, #80]	; 0x50
 800aa76:	686b      	ldr	r3, [r5, #4]
 800aa78:	9315      	str	r3, [sp, #84]	; 0x54
 800aa7a:	4bc4      	ldr	r3, [pc, #784]	; (800ad8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800aa7c:	ed94 7a02 	vldr	s14, [r4, #8]
 800aa80:	7819      	ldrb	r1, [r3, #0]
 800aa82:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800aa86:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800aa8a:	2900      	cmp	r1, #0
 800aa8c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800aa90:	bf16      	itet	ne
 800aa92:	4619      	movne	r1, r3
 800aa94:	4611      	moveq	r1, r2
 800aa96:	4613      	movne	r3, r2
 800aa98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa9c:	9116      	str	r1, [sp, #88]	; 0x58
 800aa9e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800aaa2:	f240 8387 	bls.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aaa6:	ed94 7a07 	vldr	s14, [r4, #28]
 800aaaa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800aaae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aab2:	f240 837f 	bls.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aab6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800aaba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800aabe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aac2:	f240 8377 	bls.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aac6:	6822      	ldr	r2, [r4, #0]
 800aac8:	4bb1      	ldr	r3, [pc, #708]	; (800ad90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800aaca:	429a      	cmp	r2, r3
 800aacc:	f2c0 8372 	blt.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aad0:	49b0      	ldr	r1, [pc, #704]	; (800ad94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800aad2:	6963      	ldr	r3, [r4, #20]
 800aad4:	428a      	cmp	r2, r1
 800aad6:	f300 836d 	bgt.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aada:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800aade:	48ae      	ldr	r0, [pc, #696]	; (800ad98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800aae0:	33ff      	adds	r3, #255	; 0xff
 800aae2:	4283      	cmp	r3, r0
 800aae4:	f200 8366 	bhi.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aae8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800aaea:	4dac      	ldr	r5, [pc, #688]	; (800ad9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800aaec:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800aaf0:	33ff      	adds	r3, #255	; 0xff
 800aaf2:	42ab      	cmp	r3, r5
 800aaf4:	f200 835e 	bhi.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800aaf8:	6862      	ldr	r2, [r4, #4]
 800aafa:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800aafe:	33ff      	adds	r3, #255	; 0xff
 800ab00:	4283      	cmp	r3, r0
 800ab02:	f200 8357 	bhi.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ab06:	69a1      	ldr	r1, [r4, #24]
 800ab08:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800ab0c:	33ff      	adds	r3, #255	; 0xff
 800ab0e:	4283      	cmp	r3, r0
 800ab10:	f200 8350 	bhi.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ab14:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ab16:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ab1a:	30ff      	adds	r0, #255	; 0xff
 800ab1c:	42a8      	cmp	r0, r5
 800ab1e:	f200 8349 	bhi.w	800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ab22:	428a      	cmp	r2, r1
 800ab24:	f280 8110 	bge.w	800ad48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ab28:	429a      	cmp	r2, r3
 800ab2a:	f300 8119 	bgt.w	800ad60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ab2e:	4299      	cmp	r1, r3
 800ab30:	f280 811d 	bge.w	800ad6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ab34:	2502      	movs	r5, #2
 800ab36:	2701      	movs	r7, #1
 800ab38:	46a9      	mov	r9, r5
 800ab3a:	46b8      	mov	r8, r7
 800ab3c:	f04f 0a00 	mov.w	sl, #0
 800ab40:	4621      	mov	r1, r4
 800ab42:	a849      	add	r0, sp, #292	; 0x124
 800ab44:	f003 f8aa 	bl	800dc9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ab48:	4622      	mov	r2, r4
 800ab4a:	4653      	mov	r3, sl
 800ab4c:	a949      	add	r1, sp, #292	; 0x124
 800ab4e:	f8cd 9000 	str.w	r9, [sp]
 800ab52:	a819      	add	r0, sp, #100	; 0x64
 800ab54:	f003 f9d2 	bl	800defc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ab58:	4622      	mov	r2, r4
 800ab5a:	4653      	mov	r3, sl
 800ab5c:	a949      	add	r1, sp, #292	; 0x124
 800ab5e:	f8cd 8000 	str.w	r8, [sp]
 800ab62:	a829      	add	r0, sp, #164	; 0xa4
 800ab64:	f003 f9ca 	bl	800defc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ab68:	4643      	mov	r3, r8
 800ab6a:	4622      	mov	r2, r4
 800ab6c:	a949      	add	r1, sp, #292	; 0x124
 800ab6e:	f8cd 9000 	str.w	r9, [sp]
 800ab72:	a839      	add	r0, sp, #228	; 0xe4
 800ab74:	f003 f9c2 	bl	800defc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ab78:	42af      	cmp	r7, r5
 800ab7a:	bfb5      	itete	lt
 800ab7c:	2300      	movlt	r3, #0
 800ab7e:	2301      	movge	r3, #1
 800ab80:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ab82:	930e      	strge	r3, [sp, #56]	; 0x38
 800ab84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ab86:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ab8a:	af12      	add	r7, sp, #72	; 0x48
 800ab8c:	bfb9      	ittee	lt
 800ab8e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800ab90:	ac19      	addlt	r4, sp, #100	; 0x64
 800ab92:	ad19      	addge	r5, sp, #100	; 0x64
 800ab94:	ac29      	addge	r4, sp, #164	; 0xa4
 800ab96:	e887 0003 	stmia.w	r7, {r0, r1}
 800ab9a:	b928      	cbnz	r0, 800aba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800ab9c:	4b80      	ldr	r3, [pc, #512]	; (800ada0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800ab9e:	6818      	ldr	r0, [r3, #0]
 800aba0:	6803      	ldr	r3, [r0, #0]
 800aba2:	6a1b      	ldr	r3, [r3, #32]
 800aba4:	4798      	blx	r3
 800aba6:	6038      	str	r0, [r7, #0]
 800aba8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800abaa:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800abae:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800abb2:	930c      	str	r3, [sp, #48]	; 0x30
 800abb4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800abb6:	6963      	ldr	r3, [r4, #20]
 800abb8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800abba:	440b      	add	r3, r1
 800abbc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800abc0:	4408      	add	r0, r1
 800abc2:	b200      	sxth	r0, r0
 800abc4:	4283      	cmp	r3, r0
 800abc6:	900d      	str	r0, [sp, #52]	; 0x34
 800abc8:	f280 80dd 	bge.w	800ad86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800abcc:	428b      	cmp	r3, r1
 800abce:	da08      	bge.n	800abe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800abd0:	2a00      	cmp	r2, #0
 800abd2:	dd06      	ble.n	800abe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800abd4:	1acb      	subs	r3, r1, r3
 800abd6:	429a      	cmp	r2, r3
 800abd8:	f2c0 80e4 	blt.w	800ada4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800abdc:	2b00      	cmp	r3, #0
 800abde:	f300 80e2 	bgt.w	800ada6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800abe2:	6967      	ldr	r7, [r4, #20]
 800abe4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800abe6:	443b      	add	r3, r7
 800abe8:	461f      	mov	r7, r3
 800abea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800abec:	1bdf      	subs	r7, r3, r7
 800abee:	4297      	cmp	r7, r2
 800abf0:	bfa8      	it	ge
 800abf2:	4617      	movge	r7, r2
 800abf4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800abf8:	2f00      	cmp	r7, #0
 800abfa:	f340 8166 	ble.w	800aeca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800abfe:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ac00:	6829      	ldr	r1, [r5, #0]
 800ac02:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ac06:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ac0a:	6820      	ldr	r0, [r4, #0]
 800ac0c:	4411      	add	r1, r2
 800ac0e:	4299      	cmp	r1, r3
 800ac10:	dd1a      	ble.n	800ac48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ac12:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ac16:	440b      	add	r3, r1
 800ac18:	4402      	add	r2, r0
 800ac1a:	b21b      	sxth	r3, r3
 800ac1c:	429a      	cmp	r2, r3
 800ac1e:	dc13      	bgt.n	800ac48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800ac20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ac24:	681b      	ldr	r3, [r3, #0]
 800ac26:	9206      	str	r2, [sp, #24]
 800ac28:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ac2a:	9205      	str	r2, [sp, #20]
 800ac2c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ac2e:	9500      	str	r5, [sp, #0]
 800ac30:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ac34:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ac36:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ac38:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ac3c:	a912      	add	r1, sp, #72	; 0x48
 800ac3e:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800ac42:	aa49      	add	r2, sp, #292	; 0x124
 800ac44:	4623      	mov	r3, r4
 800ac46:	47c8      	blx	r9
 800ac48:	e9d4 2300 	ldrd	r2, r3, [r4]
 800ac4c:	441a      	add	r2, r3
 800ac4e:	6963      	ldr	r3, [r4, #20]
 800ac50:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ac54:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ac58:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ac5c:	68a1      	ldr	r1, [r4, #8]
 800ac5e:	ed94 6a08 	vldr	s12, [r4, #32]
 800ac62:	6022      	str	r2, [r4, #0]
 800ac64:	3301      	adds	r3, #1
 800ac66:	6163      	str	r3, [r4, #20]
 800ac68:	69a3      	ldr	r3, [r4, #24]
 800ac6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ac6e:	3b01      	subs	r3, #1
 800ac70:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ac74:	61a3      	str	r3, [r4, #24]
 800ac76:	6923      	ldr	r3, [r4, #16]
 800ac78:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ac7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ac80:	edd4 6a07 	vldr	s13, [r4, #28]
 800ac84:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ac88:	440b      	add	r3, r1
 800ac8a:	68e1      	ldr	r1, [r4, #12]
 800ac8c:	6123      	str	r3, [r4, #16]
 800ac8e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ac92:	428b      	cmp	r3, r1
 800ac94:	edc4 6a07 	vstr	s13, [r4, #28]
 800ac98:	db15      	blt.n	800acc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800ac9a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ac9e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800aca2:	3201      	adds	r2, #1
 800aca4:	edc4 6a07 	vstr	s13, [r4, #28]
 800aca8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800acac:	6022      	str	r2, [r4, #0]
 800acae:	ee36 7a87 	vadd.f32	s14, s13, s14
 800acb2:	1a5b      	subs	r3, r3, r1
 800acb4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800acb8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800acbc:	6123      	str	r3, [r4, #16]
 800acbe:	ee77 7a27 	vadd.f32	s15, s14, s15
 800acc2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800acc6:	e9d5 2300 	ldrd	r2, r3, [r5]
 800acca:	441a      	add	r2, r3
 800accc:	696b      	ldr	r3, [r5, #20]
 800acce:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800acd2:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800acd6:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800acda:	68a9      	ldr	r1, [r5, #8]
 800acdc:	ed95 6a08 	vldr	s12, [r5, #32]
 800ace0:	602a      	str	r2, [r5, #0]
 800ace2:	3301      	adds	r3, #1
 800ace4:	616b      	str	r3, [r5, #20]
 800ace6:	69ab      	ldr	r3, [r5, #24]
 800ace8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800acec:	3b01      	subs	r3, #1
 800acee:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800acf2:	61ab      	str	r3, [r5, #24]
 800acf4:	692b      	ldr	r3, [r5, #16]
 800acf6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800acfa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800acfe:	edd5 6a07 	vldr	s13, [r5, #28]
 800ad02:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ad06:	440b      	add	r3, r1
 800ad08:	68e9      	ldr	r1, [r5, #12]
 800ad0a:	612b      	str	r3, [r5, #16]
 800ad0c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ad10:	428b      	cmp	r3, r1
 800ad12:	edc5 6a07 	vstr	s13, [r5, #28]
 800ad16:	db15      	blt.n	800ad44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800ad18:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ad1c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ad20:	3201      	adds	r2, #1
 800ad22:	edc5 6a07 	vstr	s13, [r5, #28]
 800ad26:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ad2a:	602a      	str	r2, [r5, #0]
 800ad2c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ad30:	1a5b      	subs	r3, r3, r1
 800ad32:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ad36:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ad3a:	612b      	str	r3, [r5, #16]
 800ad3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ad40:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ad44:	3f01      	subs	r7, #1
 800ad46:	e757      	b.n	800abf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800ad48:	4299      	cmp	r1, r3
 800ad4a:	dc13      	bgt.n	800ad74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800ad4c:	429a      	cmp	r2, r3
 800ad4e:	da14      	bge.n	800ad7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800ad50:	2502      	movs	r5, #2
 800ad52:	2703      	movs	r7, #3
 800ad54:	46a9      	mov	r9, r5
 800ad56:	f04f 0800 	mov.w	r8, #0
 800ad5a:	f04f 0a01 	mov.w	sl, #1
 800ad5e:	e6ef      	b.n	800ab40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ad60:	2501      	movs	r5, #1
 800ad62:	2700      	movs	r7, #0
 800ad64:	46a9      	mov	r9, r5
 800ad66:	46b8      	mov	r8, r7
 800ad68:	f04f 0a02 	mov.w	sl, #2
 800ad6c:	e6e8      	b.n	800ab40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800ad6e:	2501      	movs	r5, #1
 800ad70:	2702      	movs	r7, #2
 800ad72:	e6e1      	b.n	800ab38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800ad74:	2500      	movs	r5, #0
 800ad76:	2701      	movs	r7, #1
 800ad78:	e7f4      	b.n	800ad64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800ad7a:	2702      	movs	r7, #2
 800ad7c:	2503      	movs	r5, #3
 800ad7e:	f04f 0900 	mov.w	r9, #0
 800ad82:	46b8      	mov	r8, r7
 800ad84:	e7e9      	b.n	800ad5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800ad86:	4613      	mov	r3, r2
 800ad88:	e728      	b.n	800abdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800ad8a:	bf00      	nop
 800ad8c:	2000a394 	.word	0x2000a394
 800ad90:	fffd8f01 	.word	0xfffd8f01
 800ad94:	00027100 	.word	0x00027100
 800ad98:	0004e1ff 	.word	0x0004e1ff
 800ad9c:	0004e1fe 	.word	0x0004e1fe
 800ada0:	2000a39c 	.word	0x2000a39c
 800ada4:	4613      	mov	r3, r2
 800ada6:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ada8:	9111      	str	r1, [sp, #68]	; 0x44
 800adaa:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800adae:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800adb2:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800adb4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800adb8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800adbc:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800adc0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800adc4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800adc8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800adcc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800add0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800add4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800add8:	469e      	mov	lr, r3
 800adda:	469c      	mov	ip, r3
 800addc:	f04f 0900 	mov.w	r9, #0
 800ade0:	f1bc 0f00 	cmp.w	ip, #0
 800ade4:	d147      	bne.n	800ae76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800ade6:	eb03 0c07 	add.w	ip, r3, r7
 800adea:	1ad7      	subs	r7, r2, r3
 800adec:	f1b9 0f00 	cmp.w	r9, #0
 800adf0:	d009      	beq.n	800ae06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800adf2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800adf6:	9029      	str	r0, [sp, #164]	; 0xa4
 800adf8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800adfc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800ae00:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800ae04:	912d      	str	r1, [sp, #180]	; 0xb4
 800ae06:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800ae08:	9111      	str	r1, [sp, #68]	; 0x44
 800ae0a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800ae0e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800ae12:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800ae16:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800ae1a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800ae1e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800ae22:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800ae26:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800ae2a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800ae2e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800ae32:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800ae36:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800ae3a:	f04f 0800 	mov.w	r8, #0
 800ae3e:	f1be 0f00 	cmp.w	lr, #0
 800ae42:	d031      	beq.n	800aea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800ae44:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ae46:	4431      	add	r1, r6
 800ae48:	4549      	cmp	r1, r9
 800ae4a:	4450      	add	r0, sl
 800ae4c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800ae50:	ee37 7a04 	vadd.f32	s14, s14, s8
 800ae54:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ae58:	db08      	blt.n	800ae6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ae5a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ae5e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ae62:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ae66:	3001      	adds	r0, #1
 800ae68:	eba1 0109 	sub.w	r1, r1, r9
 800ae6c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ae70:	f04f 0801 	mov.w	r8, #1
 800ae74:	e7e3      	b.n	800ae3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ae76:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ae78:	4431      	add	r1, r6
 800ae7a:	4541      	cmp	r1, r8
 800ae7c:	4450      	add	r0, sl
 800ae7e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ae82:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ae86:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ae8a:	db08      	blt.n	800ae9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ae8c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ae90:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ae94:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ae98:	3001      	adds	r0, #1
 800ae9a:	eba1 0108 	sub.w	r1, r1, r8
 800ae9e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800aea2:	f04f 0901 	mov.w	r9, #1
 800aea6:	e79b      	b.n	800ade0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800aea8:	449c      	add	ip, r3
 800aeaa:	1aff      	subs	r7, r7, r3
 800aeac:	f1b8 0f00 	cmp.w	r8, #0
 800aeb0:	d009      	beq.n	800aec6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800aeb2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800aeb6:	9019      	str	r0, [sp, #100]	; 0x64
 800aeb8:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800aebc:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800aec0:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800aec4:	911d      	str	r1, [sp, #116]	; 0x74
 800aec6:	1ad2      	subs	r2, r2, r3
 800aec8:	e68b      	b.n	800abe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800aeca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aecc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800aece:	2b00      	cmp	r3, #0
 800aed0:	f000 80d1 	beq.w	800b076 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800aed4:	ad19      	add	r5, sp, #100	; 0x64
 800aed6:	ac39      	add	r4, sp, #228	; 0xe4
 800aed8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800aeda:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800aede:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800aee2:	930c      	str	r3, [sp, #48]	; 0x30
 800aee4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800aee6:	6963      	ldr	r3, [r4, #20]
 800aee8:	440b      	add	r3, r1
 800aeea:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800aeee:	4408      	add	r0, r1
 800aef0:	b200      	sxth	r0, r0
 800aef2:	4283      	cmp	r3, r0
 800aef4:	900d      	str	r0, [sp, #52]	; 0x34
 800aef6:	f280 80c1 	bge.w	800b07c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800aefa:	428b      	cmp	r3, r1
 800aefc:	da08      	bge.n	800af10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800aefe:	2a00      	cmp	r2, #0
 800af00:	dd06      	ble.n	800af10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800af02:	1acb      	subs	r3, r1, r3
 800af04:	429a      	cmp	r2, r3
 800af06:	f2c0 80bb 	blt.w	800b080 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800af0a:	2b00      	cmp	r3, #0
 800af0c:	f300 80b9 	bgt.w	800b082 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800af10:	6967      	ldr	r7, [r4, #20]
 800af12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800af14:	443b      	add	r3, r7
 800af16:	461f      	mov	r7, r3
 800af18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800af1a:	1bdf      	subs	r7, r3, r7
 800af1c:	4297      	cmp	r7, r2
 800af1e:	bfa8      	it	ge
 800af20:	4617      	movge	r7, r2
 800af22:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800af26:	2f00      	cmp	r7, #0
 800af28:	f340 813c 	ble.w	800b1a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800af2c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800af2e:	6829      	ldr	r1, [r5, #0]
 800af30:	f9b3 2000 	ldrsh.w	r2, [r3]
 800af34:	f9bb 3000 	ldrsh.w	r3, [fp]
 800af38:	6820      	ldr	r0, [r4, #0]
 800af3a:	4411      	add	r1, r2
 800af3c:	4299      	cmp	r1, r3
 800af3e:	dd1a      	ble.n	800af76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800af40:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800af44:	440b      	add	r3, r1
 800af46:	4402      	add	r2, r0
 800af48:	b21b      	sxth	r3, r3
 800af4a:	429a      	cmp	r2, r3
 800af4c:	dc13      	bgt.n	800af76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800af4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800af50:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800af52:	681b      	ldr	r3, [r3, #0]
 800af54:	9206      	str	r2, [sp, #24]
 800af56:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800af58:	9205      	str	r2, [sp, #20]
 800af5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800af5c:	9500      	str	r5, [sp, #0]
 800af5e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800af62:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800af64:	9809      	ldr	r0, [sp, #36]	; 0x24
 800af66:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800af6a:	a912      	add	r1, sp, #72	; 0x48
 800af6c:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800af70:	aa49      	add	r2, sp, #292	; 0x124
 800af72:	4623      	mov	r3, r4
 800af74:	47c8      	blx	r9
 800af76:	e9d4 2300 	ldrd	r2, r3, [r4]
 800af7a:	441a      	add	r2, r3
 800af7c:	6963      	ldr	r3, [r4, #20]
 800af7e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800af82:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800af86:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800af8a:	68a1      	ldr	r1, [r4, #8]
 800af8c:	ed94 6a08 	vldr	s12, [r4, #32]
 800af90:	6022      	str	r2, [r4, #0]
 800af92:	3301      	adds	r3, #1
 800af94:	6163      	str	r3, [r4, #20]
 800af96:	69a3      	ldr	r3, [r4, #24]
 800af98:	ee37 7a27 	vadd.f32	s14, s14, s15
 800af9c:	3b01      	subs	r3, #1
 800af9e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800afa2:	61a3      	str	r3, [r4, #24]
 800afa4:	6923      	ldr	r3, [r4, #16]
 800afa6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800afaa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800afae:	edd4 6a07 	vldr	s13, [r4, #28]
 800afb2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800afb6:	440b      	add	r3, r1
 800afb8:	68e1      	ldr	r1, [r4, #12]
 800afba:	6123      	str	r3, [r4, #16]
 800afbc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800afc0:	428b      	cmp	r3, r1
 800afc2:	edc4 6a07 	vstr	s13, [r4, #28]
 800afc6:	db15      	blt.n	800aff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800afc8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800afcc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800afd0:	3201      	adds	r2, #1
 800afd2:	edc4 6a07 	vstr	s13, [r4, #28]
 800afd6:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800afda:	6022      	str	r2, [r4, #0]
 800afdc:	ee36 7a87 	vadd.f32	s14, s13, s14
 800afe0:	1a5b      	subs	r3, r3, r1
 800afe2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800afe6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800afea:	6123      	str	r3, [r4, #16]
 800afec:	ee77 7a27 	vadd.f32	s15, s14, s15
 800aff0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800aff4:	e9d5 2300 	ldrd	r2, r3, [r5]
 800aff8:	441a      	add	r2, r3
 800affa:	696b      	ldr	r3, [r5, #20]
 800affc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b000:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b004:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b008:	68a9      	ldr	r1, [r5, #8]
 800b00a:	ed95 6a08 	vldr	s12, [r5, #32]
 800b00e:	602a      	str	r2, [r5, #0]
 800b010:	3301      	adds	r3, #1
 800b012:	616b      	str	r3, [r5, #20]
 800b014:	69ab      	ldr	r3, [r5, #24]
 800b016:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b01a:	3b01      	subs	r3, #1
 800b01c:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b020:	61ab      	str	r3, [r5, #24]
 800b022:	692b      	ldr	r3, [r5, #16]
 800b024:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b028:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b02c:	edd5 6a07 	vldr	s13, [r5, #28]
 800b030:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b034:	440b      	add	r3, r1
 800b036:	68e9      	ldr	r1, [r5, #12]
 800b038:	612b      	str	r3, [r5, #16]
 800b03a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b03e:	428b      	cmp	r3, r1
 800b040:	edc5 6a07 	vstr	s13, [r5, #28]
 800b044:	db15      	blt.n	800b072 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800b046:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b04a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b04e:	3201      	adds	r2, #1
 800b050:	edc5 6a07 	vstr	s13, [r5, #28]
 800b054:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b058:	602a      	str	r2, [r5, #0]
 800b05a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b05e:	1a5b      	subs	r3, r3, r1
 800b060:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b064:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b068:	612b      	str	r3, [r5, #16]
 800b06a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b06e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b072:	3f01      	subs	r7, #1
 800b074:	e757      	b.n	800af26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800b076:	ad39      	add	r5, sp, #228	; 0xe4
 800b078:	ac19      	add	r4, sp, #100	; 0x64
 800b07a:	e72d      	b.n	800aed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800b07c:	4613      	mov	r3, r2
 800b07e:	e744      	b.n	800af0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800b080:	4613      	mov	r3, r2
 800b082:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800b086:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800b088:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800b08c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800b090:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800b094:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800b098:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800b09c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800b0a0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800b0a4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800b0a6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800b0aa:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800b0ae:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800b0b2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800b0b6:	960e      	str	r6, [sp, #56]	; 0x38
 800b0b8:	469e      	mov	lr, r3
 800b0ba:	461f      	mov	r7, r3
 800b0bc:	f04f 0900 	mov.w	r9, #0
 800b0c0:	2f00      	cmp	r7, #0
 800b0c2:	d146      	bne.n	800b152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800b0c4:	449c      	add	ip, r3
 800b0c6:	1ad7      	subs	r7, r2, r3
 800b0c8:	f1b9 0f00 	cmp.w	r9, #0
 800b0cc:	d009      	beq.n	800b0e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800b0ce:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800b0d2:	9039      	str	r0, [sp, #228]	; 0xe4
 800b0d4:	913d      	str	r1, [sp, #244]	; 0xf4
 800b0d6:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800b0da:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800b0de:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800b0e2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b0e4:	910e      	str	r1, [sp, #56]	; 0x38
 800b0e6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b0ea:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b0ee:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b0f2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b0f6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b0fa:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b0fe:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b102:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b106:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b10a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b10e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b112:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b116:	f04f 0800 	mov.w	r8, #0
 800b11a:	f1be 0f00 	cmp.w	lr, #0
 800b11e:	d030      	beq.n	800b182 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800b120:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b122:	4431      	add	r1, r6
 800b124:	4549      	cmp	r1, r9
 800b126:	4450      	add	r0, sl
 800b128:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b12c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b130:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b134:	db08      	blt.n	800b148 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800b136:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b13a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b13e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b142:	3001      	adds	r0, #1
 800b144:	eba1 0109 	sub.w	r1, r1, r9
 800b148:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b14c:	f04f 0801 	mov.w	r8, #1
 800b150:	e7e3      	b.n	800b11a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800b152:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800b154:	4431      	add	r1, r6
 800b156:	4541      	cmp	r1, r8
 800b158:	4450      	add	r0, sl
 800b15a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b15e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b162:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b166:	db08      	blt.n	800b17a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800b168:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b16c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b170:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b174:	3001      	adds	r0, #1
 800b176:	eba1 0108 	sub.w	r1, r1, r8
 800b17a:	3f01      	subs	r7, #1
 800b17c:	f04f 0901 	mov.w	r9, #1
 800b180:	e79e      	b.n	800b0c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800b182:	449c      	add	ip, r3
 800b184:	1aff      	subs	r7, r7, r3
 800b186:	f1b8 0f00 	cmp.w	r8, #0
 800b18a:	d009      	beq.n	800b1a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800b18c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b190:	9019      	str	r0, [sp, #100]	; 0x64
 800b192:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b196:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b19a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800b19e:	911d      	str	r1, [sp, #116]	; 0x74
 800b1a0:	1ad2      	subs	r2, r2, r3
 800b1a2:	e6b5      	b.n	800af10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800b1a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b1a6:	681b      	ldr	r3, [r3, #0]
 800b1a8:	b923      	cbnz	r3, 800b1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b1aa:	4b04      	ldr	r3, [pc, #16]	; (800b1bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800b1ac:	6818      	ldr	r0, [r3, #0]
 800b1ae:	6803      	ldr	r3, [r0, #0]
 800b1b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b1b2:	4798      	blx	r3
 800b1b4:	b05b      	add	sp, #364	; 0x16c
 800b1b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1ba:	bf00      	nop
 800b1bc:	2000a39c 	.word	0x2000a39c

0800b1c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b1c0:	b510      	push	{r4, lr}
 800b1c2:	2b02      	cmp	r3, #2
 800b1c4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b1c8:	d00b      	beq.n	800b1e2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b1ca:	2b03      	cmp	r3, #3
 800b1cc:	d00e      	beq.n	800b1ec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b1ce:	2b01      	cmp	r3, #1
 800b1d0:	d001      	beq.n	800b1d6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b1d2:	1860      	adds	r0, r4, r1
 800b1d4:	bd10      	pop	{r4, pc}
 800b1d6:	8880      	ldrh	r0, [r0, #4]
 800b1d8:	4420      	add	r0, r4
 800b1da:	b200      	sxth	r0, r0
 800b1dc:	1a80      	subs	r0, r0, r2
 800b1de:	3801      	subs	r0, #1
 800b1e0:	e7f8      	b.n	800b1d4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b1e2:	8880      	ldrh	r0, [r0, #4]
 800b1e4:	4420      	add	r0, r4
 800b1e6:	b200      	sxth	r0, r0
 800b1e8:	1a40      	subs	r0, r0, r1
 800b1ea:	e7f8      	b.n	800b1de <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b1ec:	18a0      	adds	r0, r4, r2
 800b1ee:	e7f1      	b.n	800b1d4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800b1f0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800b1f0:	b510      	push	{r4, lr}
 800b1f2:	2b02      	cmp	r3, #2
 800b1f4:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800b1f8:	d006      	beq.n	800b208 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800b1fa:	2b03      	cmp	r3, #3
 800b1fc:	d00a      	beq.n	800b214 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800b1fe:	2b01      	cmp	r3, #1
 800b200:	bf14      	ite	ne
 800b202:	18a0      	addne	r0, r4, r2
 800b204:	1860      	addeq	r0, r4, r1
 800b206:	bd10      	pop	{r4, pc}
 800b208:	88c0      	ldrh	r0, [r0, #6]
 800b20a:	4420      	add	r0, r4
 800b20c:	b200      	sxth	r0, r0
 800b20e:	1a80      	subs	r0, r0, r2
 800b210:	3801      	subs	r0, #1
 800b212:	e7f8      	b.n	800b206 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800b214:	88c0      	ldrh	r0, [r0, #6]
 800b216:	4420      	add	r0, r4
 800b218:	b200      	sxth	r0, r0
 800b21a:	1a40      	subs	r0, r0, r1
 800b21c:	e7f8      	b.n	800b210 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800b220 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800b220:	4b01      	ldr	r3, [pc, #4]	; (800b228 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800b222:	2200      	movs	r2, #0
 800b224:	601a      	str	r2, [r3, #0]
 800b226:	4770      	bx	lr
 800b228:	2000a3a4 	.word	0x2000a3a4

0800b22c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800b22c:	4603      	mov	r3, r0
 800b22e:	b1c8      	cbz	r0, 800b264 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800b230:	0c02      	lsrs	r2, r0, #16
 800b232:	0412      	lsls	r2, r2, #16
 800b234:	b9a2      	cbnz	r2, 800b260 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800b236:	0403      	lsls	r3, r0, #16
 800b238:	2010      	movs	r0, #16
 800b23a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800b23e:	bf04      	itt	eq
 800b240:	021b      	lsleq	r3, r3, #8
 800b242:	3008      	addeq	r0, #8
 800b244:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800b248:	bf04      	itt	eq
 800b24a:	011b      	lsleq	r3, r3, #4
 800b24c:	3004      	addeq	r0, #4
 800b24e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800b252:	bf04      	itt	eq
 800b254:	009b      	lsleq	r3, r3, #2
 800b256:	3002      	addeq	r0, #2
 800b258:	2b00      	cmp	r3, #0
 800b25a:	db04      	blt.n	800b266 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800b25c:	3001      	adds	r0, #1
 800b25e:	4770      	bx	lr
 800b260:	2000      	movs	r0, #0
 800b262:	e7ea      	b.n	800b23a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800b264:	2020      	movs	r0, #32
 800b266:	4770      	bx	lr

0800b268 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800b268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b26c:	b087      	sub	sp, #28
 800b26e:	4681      	mov	r9, r0
 800b270:	4698      	mov	r8, r3
 800b272:	4610      	mov	r0, r2
 800b274:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800b278:	460d      	mov	r5, r1
 800b27a:	b981      	cbnz	r1, 800b29e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800b27c:	b14b      	cbz	r3, 800b292 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800b27e:	460b      	mov	r3, r1
 800b280:	e9cd 4700 	strd	r4, r7, [sp]
 800b284:	464a      	mov	r2, r9
 800b286:	4641      	mov	r1, r8
 800b288:	f7ff ffee 	bl	800b268 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b28c:	b007      	add	sp, #28
 800b28e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b292:	f04f 33ff 	mov.w	r3, #4294967295
 800b296:	603b      	str	r3, [r7, #0]
 800b298:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800b29c:	e7f6      	b.n	800b28c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800b29e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800b2a2:	d107      	bne.n	800b2b4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800b2a4:	fb09 f602 	mul.w	r6, r9, r2
 800b2a8:	fbb6 f0f4 	udiv	r0, r6, r4
 800b2ac:	fb04 6610 	mls	r6, r4, r0, r6
 800b2b0:	603e      	str	r6, [r7, #0]
 800b2b2:	e7eb      	b.n	800b28c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800b2b4:	2601      	movs	r6, #1
 800b2b6:	408e      	lsls	r6, r1
 800b2b8:	3e01      	subs	r6, #1
 800b2ba:	4016      	ands	r6, r2
 800b2bc:	fa09 fb01 	lsl.w	fp, r9, r1
 800b2c0:	4630      	mov	r0, r6
 800b2c2:	fbbb f3f4 	udiv	r3, fp, r4
 800b2c6:	9302      	str	r3, [sp, #8]
 800b2c8:	fb0a f303 	mul.w	r3, sl, r3
 800b2cc:	9303      	str	r3, [sp, #12]
 800b2ce:	f7ff ffad 	bl	800b22c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800b2d2:	464a      	mov	r2, r9
 800b2d4:	460b      	mov	r3, r1
 800b2d6:	e9cd 4700 	strd	r4, r7, [sp]
 800b2da:	4601      	mov	r1, r0
 800b2dc:	4630      	mov	r0, r6
 800b2de:	f7ff ffc3 	bl	800b268 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b2e2:	9b02      	ldr	r3, [sp, #8]
 800b2e4:	fb04 bb13 	mls	fp, r4, r3, fp
 800b2e8:	4606      	mov	r6, r0
 800b2ea:	4658      	mov	r0, fp
 800b2ec:	eb05 0108 	add.w	r1, r5, r8
 800b2f0:	f7ff ff9c 	bl	800b22c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800b2f4:	ab05      	add	r3, sp, #20
 800b2f6:	e9cd 4300 	strd	r4, r3, [sp]
 800b2fa:	465a      	mov	r2, fp
 800b2fc:	4603      	mov	r3, r0
 800b2fe:	4650      	mov	r0, sl
 800b300:	f7ff ffb2 	bl	800b268 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b304:	6839      	ldr	r1, [r7, #0]
 800b306:	9a05      	ldr	r2, [sp, #20]
 800b308:	9b03      	ldr	r3, [sp, #12]
 800b30a:	4411      	add	r1, r2
 800b30c:	fbb1 f2f4 	udiv	r2, r1, r4
 800b310:	18d3      	adds	r3, r2, r3
 800b312:	441e      	add	r6, r3
 800b314:	fb04 1412 	mls	r4, r4, r2, r1
 800b318:	4430      	add	r0, r6
 800b31a:	603c      	str	r4, [r7, #0]
 800b31c:	e7b6      	b.n	800b28c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800b31e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800b31e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b322:	b085      	sub	sp, #20
 800b324:	f1b0 0900 	subs.w	r9, r0, #0
 800b328:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800b32a:	461d      	mov	r5, r3
 800b32c:	bfbf      	itttt	lt
 800b32e:	6823      	ldrlt	r3, [r4, #0]
 800b330:	425b      	neglt	r3, r3
 800b332:	f1c9 0900 	rsblt	r9, r9, #0
 800b336:	6023      	strlt	r3, [r4, #0]
 800b338:	bfb4      	ite	lt
 800b33a:	f04f 36ff 	movlt.w	r6, #4294967295
 800b33e:	2601      	movge	r6, #1
 800b340:	2a00      	cmp	r2, #0
 800b342:	4617      	mov	r7, r2
 800b344:	da04      	bge.n	800b350 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800b346:	6823      	ldr	r3, [r4, #0]
 800b348:	425b      	negs	r3, r3
 800b34a:	4257      	negs	r7, r2
 800b34c:	4276      	negs	r6, r6
 800b34e:	6023      	str	r3, [r4, #0]
 800b350:	2d00      	cmp	r5, #0
 800b352:	4638      	mov	r0, r7
 800b354:	bfba      	itte	lt
 800b356:	426d      	neglt	r5, r5
 800b358:	f04f 38ff 	movlt.w	r8, #4294967295
 800b35c:	f04f 0801 	movge.w	r8, #1
 800b360:	f7ff ff64 	bl	800b22c <_ZN8touchgfx16TouchCalibration4clzuEm>
 800b364:	ab03      	add	r3, sp, #12
 800b366:	e9cd 5300 	strd	r5, r3, [sp]
 800b36a:	463a      	mov	r2, r7
 800b36c:	4603      	mov	r3, r0
 800b36e:	4648      	mov	r0, r9
 800b370:	f7ff ff7a 	bl	800b268 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800b374:	6823      	ldr	r3, [r4, #0]
 800b376:	9a03      	ldr	r2, [sp, #12]
 800b378:	4546      	cmp	r6, r8
 800b37a:	441a      	add	r2, r3
 800b37c:	fb92 f3f5 	sdiv	r3, r2, r5
 800b380:	4418      	add	r0, r3
 800b382:	bf18      	it	ne
 800b384:	4240      	negne	r0, r0
 800b386:	fb05 2313 	mls	r3, r5, r3, r2
 800b38a:	1c72      	adds	r2, r6, #1
 800b38c:	6023      	str	r3, [r4, #0]
 800b38e:	d105      	bne.n	800b39c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800b390:	2b00      	cmp	r3, #0
 800b392:	f1c3 0200 	rsb	r2, r3, #0
 800b396:	db0b      	blt.n	800b3b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800b398:	6022      	str	r2, [r4, #0]
 800b39a:	e006      	b.n	800b3aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800b39c:	2e01      	cmp	r6, #1
 800b39e:	d104      	bne.n	800b3aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800b3a0:	2b00      	cmp	r3, #0
 800b3a2:	da02      	bge.n	800b3aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800b3a4:	442b      	add	r3, r5
 800b3a6:	3801      	subs	r0, #1
 800b3a8:	6023      	str	r3, [r4, #0]
 800b3aa:	b005      	add	sp, #20
 800b3ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3b0:	3801      	subs	r0, #1
 800b3b2:	1b52      	subs	r2, r2, r5
 800b3b4:	e7f0      	b.n	800b398 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800b3b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800b3b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b3bc:	4c1c      	ldr	r4, [pc, #112]	; (800b430 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800b3be:	6807      	ldr	r7, [r0, #0]
 800b3c0:	69a3      	ldr	r3, [r4, #24]
 800b3c2:	4605      	mov	r5, r0
 800b3c4:	b92b      	cbnz	r3, 800b3d2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800b3c6:	6840      	ldr	r0, [r0, #4]
 800b3c8:	e9c5 7000 	strd	r7, r0, [r5]
 800b3cc:	b004      	add	sp, #16
 800b3ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b3d2:	68a2      	ldr	r2, [r4, #8]
 800b3d4:	6820      	ldr	r0, [r4, #0]
 800b3d6:	ae04      	add	r6, sp, #16
 800b3d8:	f04f 0802 	mov.w	r8, #2
 800b3dc:	fb93 f1f8 	sdiv	r1, r3, r8
 800b3e0:	440a      	add	r2, r1
 800b3e2:	f846 2d04 	str.w	r2, [r6, #-4]!
 800b3e6:	69e1      	ldr	r1, [r4, #28]
 800b3e8:	9600      	str	r6, [sp, #0]
 800b3ea:	463a      	mov	r2, r7
 800b3ec:	f7ff ff97 	bl	800b31e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b3f0:	69a3      	ldr	r3, [r4, #24]
 800b3f2:	686a      	ldr	r2, [r5, #4]
 800b3f4:	6a21      	ldr	r1, [r4, #32]
 800b3f6:	9600      	str	r6, [sp, #0]
 800b3f8:	4607      	mov	r7, r0
 800b3fa:	6860      	ldr	r0, [r4, #4]
 800b3fc:	f7ff ff8f 	bl	800b31e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b400:	6962      	ldr	r2, [r4, #20]
 800b402:	69a3      	ldr	r3, [r4, #24]
 800b404:	fb93 f8f8 	sdiv	r8, r3, r8
 800b408:	4442      	add	r2, r8
 800b40a:	9203      	str	r2, [sp, #12]
 800b40c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b40e:	682a      	ldr	r2, [r5, #0]
 800b410:	9600      	str	r6, [sp, #0]
 800b412:	4407      	add	r7, r0
 800b414:	68e0      	ldr	r0, [r4, #12]
 800b416:	f7ff ff82 	bl	800b31e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b41a:	9600      	str	r6, [sp, #0]
 800b41c:	4680      	mov	r8, r0
 800b41e:	69a3      	ldr	r3, [r4, #24]
 800b420:	686a      	ldr	r2, [r5, #4]
 800b422:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800b424:	6920      	ldr	r0, [r4, #16]
 800b426:	f7ff ff7a 	bl	800b31e <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800b42a:	4440      	add	r0, r8
 800b42c:	e7cc      	b.n	800b3c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800b42e:	bf00      	nop
 800b430:	2000a3a8 	.word	0x2000a3a8

0800b434 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800b434:	b510      	push	{r4, lr}
 800b436:	4b07      	ldr	r3, [pc, #28]	; (800b454 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800b438:	781b      	ldrb	r3, [r3, #0]
 800b43a:	2b01      	cmp	r3, #1
 800b43c:	d108      	bne.n	800b450 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800b43e:	4b06      	ldr	r3, [pc, #24]	; (800b458 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800b440:	880c      	ldrh	r4, [r1, #0]
 800b442:	881b      	ldrh	r3, [r3, #0]
 800b444:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b448:	3b01      	subs	r3, #1
 800b44a:	1b1b      	subs	r3, r3, r4
 800b44c:	8003      	strh	r3, [r0, #0]
 800b44e:	800a      	strh	r2, [r1, #0]
 800b450:	bd10      	pop	{r4, pc}
 800b452:	bf00      	nop
 800b454:	2000a394 	.word	0x2000a394
 800b458:	2000a398 	.word	0x2000a398

0800b45c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800b45c:	b510      	push	{r4, lr}
 800b45e:	4b0a      	ldr	r3, [pc, #40]	; (800b488 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800b460:	781b      	ldrb	r3, [r3, #0]
 800b462:	2b01      	cmp	r3, #1
 800b464:	d10e      	bne.n	800b484 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800b466:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b46a:	8843      	ldrh	r3, [r0, #2]
 800b46c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b470:	8044      	strh	r4, [r0, #2]
 800b472:	18ca      	adds	r2, r1, r3
 800b474:	4b05      	ldr	r3, [pc, #20]	; (800b48c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800b476:	881b      	ldrh	r3, [r3, #0]
 800b478:	1a9b      	subs	r3, r3, r2
 800b47a:	8003      	strh	r3, [r0, #0]
 800b47c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b480:	80c3      	strh	r3, [r0, #6]
 800b482:	8081      	strh	r1, [r0, #4]
 800b484:	bd10      	pop	{r4, pc}
 800b486:	bf00      	nop
 800b488:	2000a394 	.word	0x2000a394
 800b48c:	2000a390 	.word	0x2000a390

0800b490 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800b490:	b510      	push	{r4, lr}
 800b492:	4b07      	ldr	r3, [pc, #28]	; (800b4b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800b494:	781b      	ldrb	r3, [r3, #0]
 800b496:	2b01      	cmp	r3, #1
 800b498:	d108      	bne.n	800b4ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800b49a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b49e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b4a2:	8003      	strh	r3, [r0, #0]
 800b4a4:	8893      	ldrh	r3, [r2, #4]
 800b4a6:	3b01      	subs	r3, #1
 800b4a8:	1b1b      	subs	r3, r3, r4
 800b4aa:	800b      	strh	r3, [r1, #0]
 800b4ac:	bd10      	pop	{r4, pc}
 800b4ae:	bf00      	nop
 800b4b0:	2000a394 	.word	0x2000a394

0800b4b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800b4b4:	b513      	push	{r0, r1, r4, lr}
 800b4b6:	4b08      	ldr	r3, [pc, #32]	; (800b4d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800b4b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4bc:	4b07      	ldr	r3, [pc, #28]	; (800b4dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800b4be:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b4c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b4c6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b4ca:	2400      	movs	r4, #0
 800b4cc:	466a      	mov	r2, sp
 800b4ce:	9400      	str	r4, [sp, #0]
 800b4d0:	f7ff ffde 	bl	800b490 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b4d4:	b002      	add	sp, #8
 800b4d6:	bd10      	pop	{r4, pc}
 800b4d8:	2000a390 	.word	0x2000a390
 800b4dc:	2000a392 	.word	0x2000a392

0800b4e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800b4e0:	4b0b      	ldr	r3, [pc, #44]	; (800b510 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800b4e2:	781b      	ldrb	r3, [r3, #0]
 800b4e4:	2b01      	cmp	r3, #1
 800b4e6:	d111      	bne.n	800b50c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800b4e8:	680b      	ldr	r3, [r1, #0]
 800b4ea:	ed90 7a00 	vldr	s14, [r0]
 800b4ee:	6003      	str	r3, [r0, #0]
 800b4f0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800b4f4:	eddf 6a07 	vldr	s13, [pc, #28]	; 800b514 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800b4f8:	ee07 3a90 	vmov	s15, r3
 800b4fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b500:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800b504:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800b508:	edc1 7a00 	vstr	s15, [r1]
 800b50c:	4770      	bx	lr
 800b50e:	bf00      	nop
 800b510:	2000a394 	.word	0x2000a394
 800b514:	38d1b717 	.word	0x38d1b717

0800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800b518:	b510      	push	{r4, lr}
 800b51a:	4b0a      	ldr	r3, [pc, #40]	; (800b544 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800b51c:	781b      	ldrb	r3, [r3, #0]
 800b51e:	2b01      	cmp	r3, #1
 800b520:	460a      	mov	r2, r1
 800b522:	d10d      	bne.n	800b540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800b524:	8881      	ldrh	r1, [r0, #4]
 800b526:	8803      	ldrh	r3, [r0, #0]
 800b528:	440b      	add	r3, r1
 800b52a:	4601      	mov	r1, r0
 800b52c:	3b01      	subs	r3, #1
 800b52e:	f821 3b02 	strh.w	r3, [r1], #2
 800b532:	f7ff ffad 	bl	800b490 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b536:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b53a:	88c2      	ldrh	r2, [r0, #6]
 800b53c:	8082      	strh	r2, [r0, #4]
 800b53e:	80c3      	strh	r3, [r0, #6]
 800b540:	bd10      	pop	{r4, pc}
 800b542:	bf00      	nop
 800b544:	2000a394 	.word	0x2000a394

0800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800b548:	b507      	push	{r0, r1, r2, lr}
 800b54a:	4b09      	ldr	r3, [pc, #36]	; (800b570 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800b54c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b550:	4b08      	ldr	r3, [pc, #32]	; (800b574 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800b552:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b556:	2100      	movs	r1, #0
 800b558:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b55c:	9100      	str	r1, [sp, #0]
 800b55e:	4669      	mov	r1, sp
 800b560:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b564:	f7ff ffd8 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b568:	b003      	add	sp, #12
 800b56a:	f85d fb04 	ldr.w	pc, [sp], #4
 800b56e:	bf00      	nop
 800b570:	2000a390 	.word	0x2000a390
 800b574:	2000a392 	.word	0x2000a392

0800b578 <_ZN8touchgfx11Application13requestRedrawEv>:
 800b578:	4b06      	ldr	r3, [pc, #24]	; (800b594 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800b57a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b57e:	4b06      	ldr	r3, [pc, #24]	; (800b598 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800b580:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800b584:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b588:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800b58c:	2100      	movs	r1, #0
 800b58e:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800b592:	4770      	bx	lr
 800b594:	2000a390 	.word	0x2000a390
 800b598:	2000a392 	.word	0x2000a392

0800b59c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800b59c:	4b03      	ldr	r3, [pc, #12]	; (800b5ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800b59e:	6818      	ldr	r0, [r3, #0]
 800b5a0:	b110      	cbz	r0, 800b5a8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800b5a2:	6803      	ldr	r3, [r0, #0]
 800b5a4:	699b      	ldr	r3, [r3, #24]
 800b5a6:	4718      	bx	r3
 800b5a8:	4770      	bx	lr
 800b5aa:	bf00      	nop
 800b5ac:	2000a3d8 	.word	0x2000a3d8

0800b5b0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800b5b0:	4770      	bx	lr
	...

0800b5b4 <_ZN8touchgfx11Application4drawEv>:
 800b5b4:	b507      	push	{r0, r1, r2, lr}
 800b5b6:	4b09      	ldr	r3, [pc, #36]	; (800b5dc <_ZN8touchgfx11Application4drawEv+0x28>)
 800b5b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b5bc:	4b08      	ldr	r3, [pc, #32]	; (800b5e0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800b5be:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b5c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b5c6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b5ca:	6803      	ldr	r3, [r0, #0]
 800b5cc:	2100      	movs	r1, #0
 800b5ce:	9100      	str	r1, [sp, #0]
 800b5d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b5d2:	4669      	mov	r1, sp
 800b5d4:	4798      	blx	r3
 800b5d6:	b003      	add	sp, #12
 800b5d8:	f85d fb04 	ldr.w	pc, [sp], #4
 800b5dc:	2000a390 	.word	0x2000a390
 800b5e0:	2000a392 	.word	0x2000a392

0800b5e4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800b5e4:	4b03      	ldr	r3, [pc, #12]	; (800b5f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800b5e6:	6818      	ldr	r0, [r3, #0]
 800b5e8:	b110      	cbz	r0, 800b5f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800b5ea:	6803      	ldr	r3, [r0, #0]
 800b5ec:	69db      	ldr	r3, [r3, #28]
 800b5ee:	4718      	bx	r3
 800b5f0:	4770      	bx	lr
 800b5f2:	bf00      	nop
 800b5f4:	2000a3d8 	.word	0x2000a3d8

0800b5f8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800b5f8:	4b03      	ldr	r3, [pc, #12]	; (800b608 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800b5fa:	6818      	ldr	r0, [r3, #0]
 800b5fc:	b110      	cbz	r0, 800b604 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800b5fe:	6803      	ldr	r3, [r0, #0]
 800b600:	6a1b      	ldr	r3, [r3, #32]
 800b602:	4718      	bx	r3
 800b604:	4770      	bx	lr
 800b606:	bf00      	nop
 800b608:	2000a3d8 	.word	0x2000a3d8

0800b60c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800b60c:	4b03      	ldr	r3, [pc, #12]	; (800b61c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800b60e:	6818      	ldr	r0, [r3, #0]
 800b610:	b110      	cbz	r0, 800b618 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800b612:	6803      	ldr	r3, [r0, #0]
 800b614:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b616:	4718      	bx	r3
 800b618:	4770      	bx	lr
 800b61a:	bf00      	nop
 800b61c:	2000a3d8 	.word	0x2000a3d8

0800b620 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b620:	b570      	push	{r4, r5, r6, lr}
 800b622:	4d34      	ldr	r5, [pc, #208]	; (800b6f4 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800b624:	4604      	mov	r4, r0
 800b626:	6828      	ldr	r0, [r5, #0]
 800b628:	b140      	cbz	r0, 800b63c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b62a:	7a03      	ldrb	r3, [r0, #8]
 800b62c:	b933      	cbnz	r3, 800b63c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b62e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b632:	6803      	ldr	r3, [r0, #0]
 800b634:	689b      	ldr	r3, [r3, #8]
 800b636:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b63a:	4718      	bx	r3
 800b63c:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800b640:	b97b      	cbnz	r3, 800b662 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b642:	b170      	cbz	r0, 800b662 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b644:	7a03      	ldrb	r3, [r0, #8]
 800b646:	b163      	cbz	r3, 800b662 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b648:	4b2b      	ldr	r3, [pc, #172]	; (800b6f8 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b64a:	6818      	ldr	r0, [r3, #0]
 800b64c:	b110      	cbz	r0, 800b654 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800b64e:	6803      	ldr	r3, [r0, #0]
 800b650:	691b      	ldr	r3, [r3, #16]
 800b652:	4798      	blx	r3
 800b654:	6828      	ldr	r0, [r5, #0]
 800b656:	6803      	ldr	r3, [r0, #0]
 800b658:	68db      	ldr	r3, [r3, #12]
 800b65a:	4798      	blx	r3
 800b65c:	2301      	movs	r3, #1
 800b65e:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b662:	2500      	movs	r5, #0
 800b664:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800b668:	42a8      	cmp	r0, r5
 800b66a:	dd0c      	ble.n	800b686 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800b66c:	1963      	adds	r3, r4, r5
 800b66e:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800b672:	b132      	cbz	r2, 800b682 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800b674:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800b678:	4413      	add	r3, r2
 800b67a:	6858      	ldr	r0, [r3, #4]
 800b67c:	6803      	ldr	r3, [r0, #0]
 800b67e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800b680:	4798      	blx	r3
 800b682:	3501      	adds	r5, #1
 800b684:	e7ee      	b.n	800b664 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800b686:	2300      	movs	r3, #0
 800b688:	461a      	mov	r2, r3
 800b68a:	4298      	cmp	r0, r3
 800b68c:	d114      	bne.n	800b6b8 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800b68e:	1d25      	adds	r5, r4, #4
 800b690:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800b694:	1e48      	subs	r0, r1, #1
 800b696:	b280      	uxth	r0, r0
 800b698:	4291      	cmp	r1, r2
 800b69a:	dd24      	ble.n	800b6e6 <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800b69c:	4288      	cmp	r0, r1
 800b69e:	d2fb      	bcs.n	800b698 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800b6a0:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800b6a4:	3304      	adds	r3, #4
 800b6a6:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800b6aa:	428b      	cmp	r3, r1
 800b6ac:	d018      	beq.n	800b6e0 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800b6ae:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800b6b2:	f843 6c04 	str.w	r6, [r3, #-4]
 800b6b6:	e7f8      	b.n	800b6aa <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800b6b8:	18e1      	adds	r1, r4, r3
 800b6ba:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800b6be:	b16d      	cbz	r5, 800b6dc <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800b6c0:	429a      	cmp	r2, r3
 800b6c2:	d00a      	beq.n	800b6da <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800b6c4:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800b6c8:	4431      	add	r1, r6
 800b6ca:	684e      	ldr	r6, [r1, #4]
 800b6cc:	b291      	uxth	r1, r2
 800b6ce:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800b6d2:	604e      	str	r6, [r1, #4]
 800b6d4:	18a1      	adds	r1, r4, r2
 800b6d6:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800b6da:	3201      	adds	r2, #1
 800b6dc:	3301      	adds	r3, #1
 800b6de:	e7d4      	b.n	800b68a <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800b6e0:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800b6e4:	e7d4      	b.n	800b690 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800b6e6:	4b04      	ldr	r3, [pc, #16]	; (800b6f8 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b6e8:	6818      	ldr	r0, [r3, #0]
 800b6ea:	b110      	cbz	r0, 800b6f2 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800b6ec:	6803      	ldr	r3, [r0, #0]
 800b6ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b6f0:	e7a1      	b.n	800b636 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800b6f2:	bd70      	pop	{r4, r5, r6, pc}
 800b6f4:	2000a3dc 	.word	0x2000a3dc
 800b6f8:	2000a3d8 	.word	0x2000a3d8

0800b6fc <_ZN8touchgfx11ApplicationD1Ev>:
 800b6fc:	4770      	bx	lr

0800b6fe <_ZN8touchgfx11ApplicationD0Ev>:
 800b6fe:	b510      	push	{r4, lr}
 800b700:	f44f 719c 	mov.w	r1, #312	; 0x138
 800b704:	4604      	mov	r4, r0
 800b706:	f00e fb6c 	bl	8019de2 <_ZdlPvj>
 800b70a:	4620      	mov	r0, r4
 800b70c:	bd10      	pop	{r4, pc}
	...

0800b710 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800b710:	b570      	push	{r4, r5, r6, lr}
 800b712:	4606      	mov	r6, r0
 800b714:	460c      	mov	r4, r1
 800b716:	b929      	cbnz	r1, 800b724 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800b718:	4b0c      	ldr	r3, [pc, #48]	; (800b74c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800b71a:	4a0d      	ldr	r2, [pc, #52]	; (800b750 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800b71c:	480d      	ldr	r0, [pc, #52]	; (800b754 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800b71e:	2164      	movs	r1, #100	; 0x64
 800b720:	f00e fb8e 	bl	8019e40 <__assert_func>
 800b724:	4d0c      	ldr	r5, [pc, #48]	; (800b758 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800b726:	2300      	movs	r3, #0
 800b728:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b72c:	6828      	ldr	r0, [r5, #0]
 800b72e:	b110      	cbz	r0, 800b736 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800b730:	6803      	ldr	r3, [r0, #0]
 800b732:	695b      	ldr	r3, [r3, #20]
 800b734:	4798      	blx	r3
 800b736:	602c      	str	r4, [r5, #0]
 800b738:	6823      	ldr	r3, [r4, #0]
 800b73a:	4620      	mov	r0, r4
 800b73c:	68db      	ldr	r3, [r3, #12]
 800b73e:	4798      	blx	r3
 800b740:	6833      	ldr	r3, [r6, #0]
 800b742:	4630      	mov	r0, r6
 800b744:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b746:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b74a:	4718      	bx	r3
 800b74c:	0801cb34 	.word	0x0801cb34
 800b750:	0801cc2c 	.word	0x0801cc2c
 800b754:	0801cb3e 	.word	0x0801cb3e
 800b758:	2000a3d8 	.word	0x2000a3d8

0800b75c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800b75c:	b510      	push	{r4, lr}
 800b75e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b762:	888a      	ldrh	r2, [r1, #4]
 800b764:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b768:	4422      	add	r2, r4
 800b76a:	b212      	sxth	r2, r2
 800b76c:	4293      	cmp	r3, r2
 800b76e:	da15      	bge.n	800b79c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b770:	8882      	ldrh	r2, [r0, #4]
 800b772:	4413      	add	r3, r2
 800b774:	b21b      	sxth	r3, r3
 800b776:	429c      	cmp	r4, r3
 800b778:	da10      	bge.n	800b79c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b77a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800b77e:	88c9      	ldrh	r1, [r1, #6]
 800b780:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b784:	4419      	add	r1, r3
 800b786:	b209      	sxth	r1, r1
 800b788:	428a      	cmp	r2, r1
 800b78a:	da07      	bge.n	800b79c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b78c:	88c0      	ldrh	r0, [r0, #6]
 800b78e:	4410      	add	r0, r2
 800b790:	b200      	sxth	r0, r0
 800b792:	4283      	cmp	r3, r0
 800b794:	bfac      	ite	ge
 800b796:	2000      	movge	r0, #0
 800b798:	2001      	movlt	r0, #1
 800b79a:	bd10      	pop	{r4, pc}
 800b79c:	2000      	movs	r0, #0
 800b79e:	e7fc      	b.n	800b79a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800b7a0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800b7a0:	b570      	push	{r4, r5, r6, lr}
 800b7a2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b7a6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b7aa:	42ac      	cmp	r4, r5
 800b7ac:	db18      	blt.n	800b7e0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b7ae:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800b7b2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800b7b6:	429a      	cmp	r2, r3
 800b7b8:	db12      	blt.n	800b7e0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b7ba:	8886      	ldrh	r6, [r0, #4]
 800b7bc:	4435      	add	r5, r6
 800b7be:	888e      	ldrh	r6, [r1, #4]
 800b7c0:	4434      	add	r4, r6
 800b7c2:	b22d      	sxth	r5, r5
 800b7c4:	b224      	sxth	r4, r4
 800b7c6:	42a5      	cmp	r5, r4
 800b7c8:	db0a      	blt.n	800b7e0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b7ca:	88c0      	ldrh	r0, [r0, #6]
 800b7cc:	4418      	add	r0, r3
 800b7ce:	88cb      	ldrh	r3, [r1, #6]
 800b7d0:	441a      	add	r2, r3
 800b7d2:	b200      	sxth	r0, r0
 800b7d4:	b212      	sxth	r2, r2
 800b7d6:	4290      	cmp	r0, r2
 800b7d8:	bfb4      	ite	lt
 800b7da:	2000      	movlt	r0, #0
 800b7dc:	2001      	movge	r0, #1
 800b7de:	bd70      	pop	{r4, r5, r6, pc}
 800b7e0:	2000      	movs	r0, #0
 800b7e2:	e7fc      	b.n	800b7de <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800b7e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800b7e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b7e6:	4604      	mov	r4, r0
 800b7e8:	4608      	mov	r0, r1
 800b7ea:	460d      	mov	r5, r1
 800b7ec:	f7fd fd4f 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b7f0:	b978      	cbnz	r0, 800b812 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800b7f2:	4620      	mov	r0, r4
 800b7f4:	f7fd fd4b 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800b7f8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800b7fc:	b150      	cbz	r0, 800b814 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800b7fe:	8026      	strh	r6, [r4, #0]
 800b800:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800b804:	8063      	strh	r3, [r4, #2]
 800b806:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b80a:	80a3      	strh	r3, [r4, #4]
 800b80c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b810:	80e3      	strh	r3, [r4, #6]
 800b812:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b814:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b818:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800b81c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800b820:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800b824:	88ed      	ldrh	r5, [r5, #6]
 800b826:	42b1      	cmp	r1, r6
 800b828:	460f      	mov	r7, r1
 800b82a:	bfa8      	it	ge
 800b82c:	4637      	movge	r7, r6
 800b82e:	4293      	cmp	r3, r2
 800b830:	4618      	mov	r0, r3
 800b832:	4466      	add	r6, ip
 800b834:	bfa8      	it	ge
 800b836:	4610      	movge	r0, r2
 800b838:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800b83c:	8027      	strh	r7, [r4, #0]
 800b83e:	442a      	add	r2, r5
 800b840:	88e5      	ldrh	r5, [r4, #6]
 800b842:	8060      	strh	r0, [r4, #2]
 800b844:	4461      	add	r1, ip
 800b846:	442b      	add	r3, r5
 800b848:	b236      	sxth	r6, r6
 800b84a:	b209      	sxth	r1, r1
 800b84c:	b212      	sxth	r2, r2
 800b84e:	b21b      	sxth	r3, r3
 800b850:	428e      	cmp	r6, r1
 800b852:	bfac      	ite	ge
 800b854:	ebc7 0106 	rsbge	r1, r7, r6
 800b858:	ebc7 0101 	rsblt	r1, r7, r1
 800b85c:	429a      	cmp	r2, r3
 800b85e:	bfac      	ite	ge
 800b860:	ebc0 0202 	rsbge	r2, r0, r2
 800b864:	ebc0 0203 	rsblt	r2, r0, r3
 800b868:	80a1      	strh	r1, [r4, #4]
 800b86a:	80e2      	strh	r2, [r4, #6]
 800b86c:	e7d1      	b.n	800b812 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800b870 <_ZN8touchgfx11Application11getInstanceEv>:
 800b870:	4b01      	ldr	r3, [pc, #4]	; (800b878 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800b872:	6818      	ldr	r0, [r3, #0]
 800b874:	4770      	bx	lr
 800b876:	bf00      	nop
 800b878:	2000a3e8 	.word	0x2000a3e8

0800b87c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800b87c:	b570      	push	{r4, r5, r6, lr}
 800b87e:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800b882:	1d04      	adds	r4, r0, #4
 800b884:	2200      	movs	r2, #0
 800b886:	b295      	uxth	r5, r2
 800b888:	42ab      	cmp	r3, r5
 800b88a:	d90f      	bls.n	800b8ac <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800b88c:	f854 6b04 	ldr.w	r6, [r4], #4
 800b890:	428e      	cmp	r6, r1
 800b892:	4615      	mov	r5, r2
 800b894:	f102 0201 	add.w	r2, r2, #1
 800b898:	d1f5      	bne.n	800b886 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800b89a:	4428      	add	r0, r5
 800b89c:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800b8a0:	2bff      	cmp	r3, #255	; 0xff
 800b8a2:	d002      	beq.n	800b8aa <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800b8a4:	3301      	adds	r3, #1
 800b8a6:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800b8aa:	bd70      	pop	{r4, r5, r6, pc}
 800b8ac:	2b20      	cmp	r3, #32
 800b8ae:	d106      	bne.n	800b8be <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800b8b0:	4b08      	ldr	r3, [pc, #32]	; (800b8d4 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800b8b2:	4a09      	ldr	r2, [pc, #36]	; (800b8d8 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800b8b4:	4809      	ldr	r0, [pc, #36]	; (800b8dc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800b8b6:	f44f 7117 	mov.w	r1, #604	; 0x25c
 800b8ba:	f00e fac1 	bl	8019e40 <__assert_func>
 800b8be:	18c2      	adds	r2, r0, r3
 800b8c0:	2401      	movs	r4, #1
 800b8c2:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800b8c6:	191a      	adds	r2, r3, r4
 800b8c8:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800b8cc:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800b8d0:	6041      	str	r1, [r0, #4]
 800b8d2:	e7ea      	b.n	800b8aa <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800b8d4:	0801cb68 	.word	0x0801cb68
 800b8d8:	0801cc70 	.word	0x0801cc70
 800b8dc:	0801cb3e 	.word	0x0801cb3e

0800b8e0 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800b8e0:	b570      	push	{r4, r5, r6, lr}
 800b8e2:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800b8e6:	1d04      	adds	r4, r0, #4
 800b8e8:	2300      	movs	r3, #0
 800b8ea:	b29a      	uxth	r2, r3
 800b8ec:	4296      	cmp	r6, r2
 800b8ee:	d90a      	bls.n	800b906 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800b8f0:	f854 2b04 	ldr.w	r2, [r4], #4
 800b8f4:	428a      	cmp	r2, r1
 800b8f6:	d107      	bne.n	800b908 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800b8f8:	18c5      	adds	r5, r0, r3
 800b8fa:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800b8fe:	b11a      	cbz	r2, 800b908 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800b900:	3a01      	subs	r2, #1
 800b902:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800b906:	bd70      	pop	{r4, r5, r6, pc}
 800b908:	3301      	adds	r3, #1
 800b90a:	e7ee      	b.n	800b8ea <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800b90c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800b90c:	2300      	movs	r3, #0
 800b90e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b912:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800b916:	30a8      	adds	r0, #168	; 0xa8
 800b918:	f802 3b01 	strb.w	r3, [r2], #1
 800b91c:	4282      	cmp	r2, r0
 800b91e:	d1fb      	bne.n	800b918 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800b920:	4770      	bx	lr

0800b922 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800b922:	4603      	mov	r3, r0
 800b924:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800b928:	2200      	movs	r2, #0
 800b92a:	801a      	strh	r2, [r3, #0]
 800b92c:	805a      	strh	r2, [r3, #2]
 800b92e:	809a      	strh	r2, [r3, #4]
 800b930:	80da      	strh	r2, [r3, #6]
 800b932:	3308      	adds	r3, #8
 800b934:	428b      	cmp	r3, r1
 800b936:	d1f8      	bne.n	800b92a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800b938:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800b93c:	4770      	bx	lr
	...

0800b940 <_ZN8touchgfx11ApplicationC1Ev>:
 800b940:	b570      	push	{r4, r5, r6, lr}
 800b942:	4b1a      	ldr	r3, [pc, #104]	; (800b9ac <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800b944:	6003      	str	r3, [r0, #0]
 800b946:	2500      	movs	r5, #0
 800b948:	4604      	mov	r4, r0
 800b94a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800b94e:	30a8      	adds	r0, #168	; 0xa8
 800b950:	f7ff ffe7 	bl	800b922 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b954:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800b958:	f7ff ffe3 	bl	800b922 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b95c:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800b960:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800b964:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800b968:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800b96c:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800b970:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800b974:	490e      	ldr	r1, [pc, #56]	; (800b9b0 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800b976:	480f      	ldr	r0, [pc, #60]	; (800b9b4 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800b978:	4e0f      	ldr	r6, [pc, #60]	; (800b9b8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800b97a:	f00e f92b 	bl	8019bd4 <CRC_Lock>
 800b97e:	4b0f      	ldr	r3, [pc, #60]	; (800b9bc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800b980:	b158      	cbz	r0, 800b99a <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800b982:	801d      	strh	r5, [r3, #0]
 800b984:	4a0e      	ldr	r2, [pc, #56]	; (800b9c0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800b986:	2300      	movs	r3, #0
 800b988:	6013      	str	r3, [r2, #0]
 800b98a:	4a0e      	ldr	r2, [pc, #56]	; (800b9c4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800b98c:	6033      	str	r3, [r6, #0]
 800b98e:	4620      	mov	r0, r4
 800b990:	6013      	str	r3, [r2, #0]
 800b992:	f7ff ffbb 	bl	800b90c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800b996:	4620      	mov	r0, r4
 800b998:	bd70      	pop	{r4, r5, r6, pc}
 800b99a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800b99e:	2002      	movs	r0, #2
 800b9a0:	801a      	strh	r2, [r3, #0]
 800b9a2:	6030      	str	r0, [r6, #0]
 800b9a4:	f001 faa0 	bl	800cee8 <_ZN8touchgfx6Screen4drawEv>
 800b9a8:	e7ec      	b.n	800b984 <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800b9aa:	bf00      	nop
 800b9ac:	0801cbf0 	.word	0x0801cbf0
 800b9b0:	b5e8b5cd 	.word	0xb5e8b5cd
 800b9b4:	f407a5c2 	.word	0xf407a5c2
 800b9b8:	2000a3d8 	.word	0x2000a3d8
 800b9bc:	20000060 	.word	0x20000060
 800b9c0:	2000a3e8 	.word	0x2000a3e8
 800b9c4:	2000a3dc 	.word	0x2000a3dc

0800b9c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800b9c8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800b9cc:	428b      	cmp	r3, r1
 800b9ce:	b510      	push	{r4, lr}
 800b9d0:	d90e      	bls.n	800b9f0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800b9d2:	3b01      	subs	r3, #1
 800b9d4:	b29b      	uxth	r3, r3
 800b9d6:	428b      	cmp	r3, r1
 800b9d8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800b9dc:	d908      	bls.n	800b9f0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800b9de:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800b9e2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800b9e6:	681a      	ldr	r2, [r3, #0]
 800b9e8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800b9ec:	685a      	ldr	r2, [r3, #4]
 800b9ee:	6062      	str	r2, [r4, #4]
 800b9f0:	bd10      	pop	{r4, pc}
	...

0800b9f4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800b9f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b9f6:	466b      	mov	r3, sp
 800b9f8:	e883 0006 	stmia.w	r3, {r1, r2}
 800b9fc:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800ba00:	2a07      	cmp	r2, #7
 800ba02:	4604      	mov	r4, r0
 800ba04:	d906      	bls.n	800ba14 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800ba06:	4b09      	ldr	r3, [pc, #36]	; (800ba2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800ba08:	4a09      	ldr	r2, [pc, #36]	; (800ba30 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800ba0a:	480a      	ldr	r0, [pc, #40]	; (800ba34 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800ba0c:	f240 118f 	movw	r1, #399	; 0x18f
 800ba10:	f00e fa16 	bl	8019e40 <__assert_func>
 800ba14:	1c51      	adds	r1, r2, #1
 800ba16:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800ba1a:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800ba1e:	cb03      	ldmia	r3!, {r0, r1}
 800ba20:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800ba24:	6069      	str	r1, [r5, #4]
 800ba26:	b003      	add	sp, #12
 800ba28:	bd30      	pop	{r4, r5, pc}
 800ba2a:	bf00      	nop
 800ba2c:	0801cb90 	.word	0x0801cb90
 800ba30:	0801ccb5 	.word	0x0801ccb5
 800ba34:	0801cbbf 	.word	0x0801cbbf

0800ba38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800ba38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba3c:	b08d      	sub	sp, #52	; 0x34
 800ba3e:	ac08      	add	r4, sp, #32
 800ba40:	4683      	mov	fp, r0
 800ba42:	4620      	mov	r0, r4
 800ba44:	e884 0006 	stmia.w	r4, {r1, r2}
 800ba48:	f7fd fc21 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba4c:	2800      	cmp	r0, #0
 800ba4e:	d16a      	bne.n	800bb26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800ba50:	9402      	str	r4, [sp, #8]
 800ba52:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800ba56:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800ba5a:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800ba5e:	2400      	movs	r4, #0
 800ba60:	9301      	str	r3, [sp, #4]
 800ba62:	36a0      	adds	r6, #160	; 0xa0
 800ba64:	42a5      	cmp	r5, r4
 800ba66:	d00d      	beq.n	800ba84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800ba68:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800ba6c:	9802      	ldr	r0, [sp, #8]
 800ba6e:	f7ff fe97 	bl	800b7a0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800ba72:	b128      	cbz	r0, 800ba80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800ba74:	1e69      	subs	r1, r5, #1
 800ba76:	1b09      	subs	r1, r1, r4
 800ba78:	b289      	uxth	r1, r1
 800ba7a:	9801      	ldr	r0, [sp, #4]
 800ba7c:	f7ff ffa4 	bl	800b9c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ba80:	3401      	adds	r4, #1
 800ba82:	e7ef      	b.n	800ba64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800ba84:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800ba88:	9703      	str	r7, [sp, #12]
 800ba8a:	1e7b      	subs	r3, r7, #1
 800ba8c:	9300      	str	r3, [sp, #0]
 800ba8e:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800ba92:	2400      	movs	r4, #0
 800ba94:	4655      	mov	r5, sl
 800ba96:	9704      	str	r7, [sp, #16]
 800ba98:	4626      	mov	r6, r4
 800ba9a:	9b04      	ldr	r3, [sp, #16]
 800ba9c:	2b00      	cmp	r3, #0
 800ba9e:	d078      	beq.n	800bb92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800baa0:	9902      	ldr	r1, [sp, #8]
 800baa2:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800baa6:	f7ff fe59 	bl	800b75c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800baaa:	b360      	cbz	r0, 800bb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800baac:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800bab0:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800bab4:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800bab8:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800babc:	45e6      	cmp	lr, ip
 800babe:	db35      	blt.n	800bb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800bac0:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800bac4:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800bac8:	4472      	add	r2, lr
 800baca:	4463      	add	r3, ip
 800bacc:	b212      	sxth	r2, r2
 800bace:	b21b      	sxth	r3, r3
 800bad0:	429a      	cmp	r2, r3
 800bad2:	dc2b      	bgt.n	800bb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800bad4:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800bad8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800badc:	fa1f f288 	uxth.w	r2, r8
 800bae0:	4413      	add	r3, r2
 800bae2:	b29b      	uxth	r3, r3
 800bae4:	45c1      	cmp	r9, r8
 800bae6:	fa0f fe83 	sxth.w	lr, r3
 800baea:	fa1f fc89 	uxth.w	ip, r9
 800baee:	db0f      	blt.n	800bb10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800baf0:	eba3 030c 	sub.w	r3, r3, ip
 800baf4:	1ac9      	subs	r1, r1, r3
 800baf6:	b209      	sxth	r1, r1
 800baf8:	2900      	cmp	r1, #0
 800bafa:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800bafe:	dd12      	ble.n	800bb26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800bb00:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800bb04:	4604      	mov	r4, r0
 800bb06:	9b04      	ldr	r3, [sp, #16]
 800bb08:	3b01      	subs	r3, #1
 800bb0a:	9304      	str	r3, [sp, #16]
 800bb0c:	3d08      	subs	r5, #8
 800bb0e:	e7c4      	b.n	800ba9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800bb10:	4461      	add	r1, ip
 800bb12:	b209      	sxth	r1, r1
 800bb14:	4571      	cmp	r1, lr
 800bb16:	dc3a      	bgt.n	800bb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bb18:	eba2 020c 	sub.w	r2, r2, ip
 800bb1c:	b212      	sxth	r2, r2
 800bb1e:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800bb22:	2a00      	cmp	r2, #0
 800bb24:	dcee      	bgt.n	800bb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800bb26:	b00d      	add	sp, #52	; 0x34
 800bb28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb2c:	45c1      	cmp	r9, r8
 800bb2e:	db2e      	blt.n	800bb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bb30:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800bb34:	4499      	add	r9, r3
 800bb36:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800bb3a:	4498      	add	r8, r3
 800bb3c:	fa0f f989 	sxth.w	r9, r9
 800bb40:	fa0f f888 	sxth.w	r8, r8
 800bb44:	45c1      	cmp	r9, r8
 800bb46:	dc22      	bgt.n	800bb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bb48:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800bb4c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800bb50:	fa1f f28c 	uxth.w	r2, ip
 800bb54:	4413      	add	r3, r2
 800bb56:	b29b      	uxth	r3, r3
 800bb58:	45e6      	cmp	lr, ip
 800bb5a:	fa1f f88e 	uxth.w	r8, lr
 800bb5e:	fa0f f983 	sxth.w	r9, r3
 800bb62:	db0a      	blt.n	800bb7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800bb64:	eba3 0308 	sub.w	r3, r3, r8
 800bb68:	1ac9      	subs	r1, r1, r3
 800bb6a:	b209      	sxth	r1, r1
 800bb6c:	2900      	cmp	r1, #0
 800bb6e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800bb72:	ddd8      	ble.n	800bb26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800bb74:	f8ad 9020 	strh.w	r9, [sp, #32]
 800bb78:	e7c4      	b.n	800bb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800bb7a:	4441      	add	r1, r8
 800bb7c:	b209      	sxth	r1, r1
 800bb7e:	4549      	cmp	r1, r9
 800bb80:	dc05      	bgt.n	800bb8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800bb82:	eba2 0208 	sub.w	r2, r2, r8
 800bb86:	b212      	sxth	r2, r2
 800bb88:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800bb8c:	e7c9      	b.n	800bb22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800bb8e:	4606      	mov	r6, r0
 800bb90:	e7b9      	b.n	800bb06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800bb92:	2c00      	cmp	r4, #0
 800bb94:	f47f af7d 	bne.w	800ba92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800bb98:	2e00      	cmp	r6, #0
 800bb9a:	f000 81dd 	beq.w	800bf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800bb9e:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800bba2:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800bba6:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800bbaa:	b2b9      	uxth	r1, r7
 800bbac:	9104      	str	r1, [sp, #16]
 800bbae:	9804      	ldr	r0, [sp, #16]
 800bbb0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800bbb4:	4401      	add	r1, r0
 800bbb6:	b2b3      	uxth	r3, r6
 800bbb8:	b289      	uxth	r1, r1
 800bbba:	441a      	add	r2, r3
 800bbbc:	9105      	str	r1, [sp, #20]
 800bbbe:	b292      	uxth	r2, r2
 800bbc0:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800bbc4:	fa0f f882 	sxth.w	r8, r2
 800bbc8:	4655      	mov	r5, sl
 800bbca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800bbce:	9b03      	ldr	r3, [sp, #12]
 800bbd0:	2b00      	cmp	r3, #0
 800bbd2:	d054      	beq.n	800bc7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800bbd4:	9902      	ldr	r1, [sp, #8]
 800bbd6:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800bbda:	f7ff fdbf 	bl	800b75c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bbde:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800bbe2:	b1d8      	cbz	r0, 800bc1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800bbe4:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800bbe8:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800bbec:	4576      	cmp	r6, lr
 800bbee:	dc26      	bgt.n	800bc3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800bbf0:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800bbf4:	44f4      	add	ip, lr
 800bbf6:	fa0f fc8c 	sxth.w	ip, ip
 800bbfa:	45e0      	cmp	r8, ip
 800bbfc:	db1f      	blt.n	800bc3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800bbfe:	428f      	cmp	r7, r1
 800bc00:	fa1f fc81 	uxth.w	ip, r1
 800bc04:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800bc08:	dc0f      	bgt.n	800bc2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800bc0a:	9805      	ldr	r0, [sp, #20]
 800bc0c:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800bc10:	eba0 0c0c 	sub.w	ip, r0, ip
 800bc14:	eba1 010c 	sub.w	r1, r1, ip
 800bc18:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800bc1c:	4620      	mov	r0, r4
 800bc1e:	9903      	ldr	r1, [sp, #12]
 800bc20:	3901      	subs	r1, #1
 800bc22:	9103      	str	r1, [sp, #12]
 800bc24:	3d08      	subs	r5, #8
 800bc26:	4604      	mov	r4, r0
 800bc28:	e7cf      	b.n	800bbca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800bc2a:	4461      	add	r1, ip
 800bc2c:	b209      	sxth	r1, r1
 800bc2e:	4549      	cmp	r1, r9
 800bc30:	dcf5      	bgt.n	800bc1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800bc32:	9904      	ldr	r1, [sp, #16]
 800bc34:	eba1 0c0c 	sub.w	ip, r1, ip
 800bc38:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800bc3c:	e7ee      	b.n	800bc1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800bc3e:	428f      	cmp	r7, r1
 800bc40:	dced      	bgt.n	800bc1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800bc42:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800bc46:	4461      	add	r1, ip
 800bc48:	b209      	sxth	r1, r1
 800bc4a:	4589      	cmp	r9, r1
 800bc4c:	dbe7      	blt.n	800bc1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800bc4e:	4576      	cmp	r6, lr
 800bc50:	fa1f fc8e 	uxth.w	ip, lr
 800bc54:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800bc58:	dc08      	bgt.n	800bc6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800bc5a:	eba2 0c0c 	sub.w	ip, r2, ip
 800bc5e:	eba1 010c 	sub.w	r1, r1, ip
 800bc62:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800bc66:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800bc6a:	e7d7      	b.n	800bc1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800bc6c:	4461      	add	r1, ip
 800bc6e:	b209      	sxth	r1, r1
 800bc70:	4588      	cmp	r8, r1
 800bc72:	dbd4      	blt.n	800bc1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800bc74:	eba3 0c0c 	sub.w	ip, r3, ip
 800bc78:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800bc7c:	e7ce      	b.n	800bc1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800bc7e:	2c00      	cmp	r4, #0
 800bc80:	f000 816a 	beq.w	800bf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800bc84:	9b00      	ldr	r3, [sp, #0]
 800bc86:	3301      	adds	r3, #1
 800bc88:	f000 8166 	beq.w	800bf58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800bc8c:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800bc90:	4621      	mov	r1, r4
 800bc92:	9802      	ldr	r0, [sp, #8]
 800bc94:	f7ff fd84 	bl	800b7a0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bc98:	b120      	cbz	r0, 800bca4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800bc9a:	f8bd 1000 	ldrh.w	r1, [sp]
 800bc9e:	9801      	ldr	r0, [sp, #4]
 800bca0:	f7ff fe92 	bl	800b9c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bca4:	9902      	ldr	r1, [sp, #8]
 800bca6:	4620      	mov	r0, r4
 800bca8:	f7ff fd58 	bl	800b75c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bcac:	2800      	cmp	r0, #0
 800bcae:	f000 809b 	beq.w	800bde8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800bcb2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800bcb6:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800bcba:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800bcbe:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800bcc2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800bcc6:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800bcca:	fa1f f288 	uxth.w	r2, r8
 800bcce:	19d5      	adds	r5, r2, r7
 800bcd0:	fa1f f985 	uxth.w	r9, r5
 800bcd4:	fa0f f589 	sxth.w	r5, r9
 800bcd8:	b2a1      	uxth	r1, r4
 800bcda:	440b      	add	r3, r1
 800bcdc:	9503      	str	r5, [sp, #12]
 800bcde:	45a0      	cmp	r8, r4
 800bce0:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800bce4:	9507      	str	r5, [sp, #28]
 800bce6:	b29b      	uxth	r3, r3
 800bce8:	f340 809d 	ble.w	800be26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800bcec:	1a52      	subs	r2, r2, r1
 800bcee:	b292      	uxth	r2, r2
 800bcf0:	4584      	cmp	ip, r0
 800bcf2:	fa0f fe83 	sxth.w	lr, r3
 800bcf6:	b215      	sxth	r5, r2
 800bcf8:	dd2f      	ble.n	800bd5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800bcfa:	9e00      	ldr	r6, [sp, #0]
 800bcfc:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800bd00:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800bd04:	9e03      	ldr	r6, [sp, #12]
 800bd06:	eba6 060e 	sub.w	r6, r6, lr
 800bd0a:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800bd0e:	fa1f fc8c 	uxth.w	ip, ip
 800bd12:	b280      	uxth	r0, r0
 800bd14:	ebac 0300 	sub.w	r3, ip, r0
 800bd18:	448c      	add	ip, r1
 800bd1a:	4470      	add	r0, lr
 800bd1c:	b29b      	uxth	r3, r3
 800bd1e:	fa0f fc8c 	sxth.w	ip, ip
 800bd22:	b200      	sxth	r0, r0
 800bd24:	b21c      	sxth	r4, r3
 800bd26:	ebac 0000 	sub.w	r0, ip, r0
 800bd2a:	4366      	muls	r6, r4
 800bd2c:	4368      	muls	r0, r5
 800bd2e:	4286      	cmp	r6, r0
 800bd30:	db09      	blt.n	800bd46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800bd32:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800bd36:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800bd3a:	4417      	add	r7, r2
 800bd3c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bd40:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800bd44:	e685      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800bd46:	440b      	add	r3, r1
 800bd48:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bd4c:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800bd50:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800bd54:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bd58:	e67b      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800bd5a:	9e03      	ldr	r6, [sp, #12]
 800bd5c:	45b6      	cmp	lr, r6
 800bd5e:	da28      	bge.n	800bdb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800bd60:	9b00      	ldr	r3, [sp, #0]
 800bd62:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800bd66:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800bd6a:	eb04 030c 	add.w	r3, r4, ip
 800bd6e:	fa1f f883 	uxth.w	r8, r3
 800bd72:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800bd76:	4403      	add	r3, r0
 800bd78:	eba3 0308 	sub.w	r3, r3, r8
 800bd7c:	b29b      	uxth	r3, r3
 800bd7e:	fa0f f988 	sxth.w	r9, r8
 800bd82:	eba0 000c 	sub.w	r0, r0, ip
 800bd86:	fa0f f883 	sxth.w	r8, r3
 800bd8a:	eba6 060e 	sub.w	r6, r6, lr
 800bd8e:	4368      	muls	r0, r5
 800bd90:	fb08 f606 	mul.w	r6, r8, r6
 800bd94:	42b0      	cmp	r0, r6
 800bd96:	dc06      	bgt.n	800bda6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800bd98:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800bd9c:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800bda0:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800bda4:	e7c9      	b.n	800bd3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800bda6:	4423      	add	r3, r4
 800bda8:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800bdac:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bdb0:	e64f      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800bdb2:	9807      	ldr	r0, [sp, #28]
 800bdb4:	eba3 0309 	sub.w	r3, r3, r9
 800bdb8:	b29b      	uxth	r3, r3
 800bdba:	2806      	cmp	r0, #6
 800bdbc:	fa0f fc83 	sxth.w	ip, r3
 800bdc0:	d818      	bhi.n	800bdf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800bdc2:	4652      	mov	r2, sl
 800bdc4:	ab0a      	add	r3, sp, #40	; 0x28
 800bdc6:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800bdca:	6851      	ldr	r1, [r2, #4]
 800bdcc:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800bdd0:	c303      	stmia	r3!, {r0, r1}
 800bdd2:	9b03      	ldr	r3, [sp, #12]
 800bdd4:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800bdd8:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800bddc:	ab0a      	add	r3, sp, #40	; 0x28
 800bdde:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bde2:	9801      	ldr	r0, [sp, #4]
 800bde4:	f7ff fe06 	bl	800b9f4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bde8:	9b00      	ldr	r3, [sp, #0]
 800bdea:	3b01      	subs	r3, #1
 800bdec:	9300      	str	r3, [sp, #0]
 800bdee:	f1aa 0a08 	sub.w	sl, sl, #8
 800bdf2:	e747      	b.n	800bc84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800bdf4:	9800      	ldr	r0, [sp, #0]
 800bdf6:	45ac      	cmp	ip, r5
 800bdf8:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800bdfc:	db0c      	blt.n	800be18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800bdfe:	4417      	add	r7, r2
 800be00:	b2bf      	uxth	r7, r7
 800be02:	4458      	add	r0, fp
 800be04:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800be08:	440f      	add	r7, r1
 800be0a:	f8ad 4020 	strh.w	r4, [sp, #32]
 800be0e:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800be12:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800be16:	e61c      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800be18:	4458      	add	r0, fp
 800be1a:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800be1e:	443b      	add	r3, r7
 800be20:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800be24:	e615      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800be26:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800be2a:	fa1f f18c 	uxth.w	r1, ip
 800be2e:	eb01 0e05 	add.w	lr, r1, r5
 800be32:	b282      	uxth	r2, r0
 800be34:	fa1f fe8e 	uxth.w	lr, lr
 800be38:	9204      	str	r2, [sp, #16]
 800be3a:	fa0f f28e 	sxth.w	r2, lr
 800be3e:	9205      	str	r2, [sp, #20]
 800be40:	9e04      	ldr	r6, [sp, #16]
 800be42:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800be46:	4432      	add	r2, r6
 800be48:	b292      	uxth	r2, r2
 800be4a:	4584      	cmp	ip, r0
 800be4c:	9206      	str	r2, [sp, #24]
 800be4e:	da26      	bge.n	800be9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800be50:	eba3 0309 	sub.w	r3, r3, r9
 800be54:	eba2 020e 	sub.w	r2, r2, lr
 800be58:	b29b      	uxth	r3, r3
 800be5a:	b292      	uxth	r2, r2
 800be5c:	fa0f fa83 	sxth.w	sl, r3
 800be60:	b211      	sxth	r1, r2
 800be62:	eba0 000c 	sub.w	r0, r0, ip
 800be66:	eba4 0408 	sub.w	r4, r4, r8
 800be6a:	fb0a f000 	mul.w	r0, sl, r0
 800be6e:	434c      	muls	r4, r1
 800be70:	42a0      	cmp	r0, r4
 800be72:	9800      	ldr	r0, [sp, #0]
 800be74:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800be78:	dc06      	bgt.n	800be88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800be7a:	4458      	add	r0, fp
 800be7c:	9a05      	ldr	r2, [sp, #20]
 800be7e:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800be82:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800be86:	e7ca      	b.n	800be1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800be88:	eb0b 0300 	add.w	r3, fp, r0
 800be8c:	9903      	ldr	r1, [sp, #12]
 800be8e:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800be92:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800be96:	442a      	add	r2, r5
 800be98:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800be9c:	e5d9      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800be9e:	9e04      	ldr	r6, [sp, #16]
 800bea0:	9a03      	ldr	r2, [sp, #12]
 800bea2:	1b89      	subs	r1, r1, r6
 800bea4:	b21e      	sxth	r6, r3
 800bea6:	b289      	uxth	r1, r1
 800bea8:	4296      	cmp	r6, r2
 800beaa:	fa0f fc81 	sxth.w	ip, r1
 800beae:	dd26      	ble.n	800befe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800beb0:	eba3 0309 	sub.w	r3, r3, r9
 800beb4:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800beb8:	9e05      	ldr	r6, [sp, #20]
 800beba:	b29b      	uxth	r3, r3
 800bebc:	eba6 0902 	sub.w	r9, r6, r2
 800bec0:	b218      	sxth	r0, r3
 800bec2:	eba4 0408 	sub.w	r4, r4, r8
 800bec6:	fb0c f404 	mul.w	r4, ip, r4
 800beca:	fb00 f909 	mul.w	r9, r0, r9
 800bece:	9a00      	ldr	r2, [sp, #0]
 800bed0:	454c      	cmp	r4, r9
 800bed2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800bed6:	db03      	blt.n	800bee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800bed8:	445a      	add	r2, fp
 800beda:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800bede:	e79e      	b.n	800be1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800bee0:	eb0b 0302 	add.w	r3, fp, r2
 800bee4:	9a03      	ldr	r2, [sp, #12]
 800bee6:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800beea:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800beee:	4429      	add	r1, r5
 800bef0:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800bef4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bef8:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800befc:	e5a9      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800befe:	9b06      	ldr	r3, [sp, #24]
 800bf00:	9c07      	ldr	r4, [sp, #28]
 800bf02:	eba3 020e 	sub.w	r2, r3, lr
 800bf06:	b292      	uxth	r2, r2
 800bf08:	2c06      	cmp	r4, #6
 800bf0a:	b213      	sxth	r3, r2
 800bf0c:	d80d      	bhi.n	800bf2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800bf0e:	4651      	mov	r1, sl
 800bf10:	aa0a      	add	r2, sp, #40	; 0x28
 800bf12:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800bf16:	6849      	ldr	r1, [r1, #4]
 800bf18:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800bf1c:	9b05      	ldr	r3, [sp, #20]
 800bf1e:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800bf22:	c203      	stmia	r2!, {r0, r1}
 800bf24:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800bf28:	e758      	b.n	800bddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800bf2a:	9c00      	ldr	r4, [sp, #0]
 800bf2c:	4563      	cmp	r3, ip
 800bf2e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800bf32:	db0d      	blt.n	800bf50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800bf34:	4429      	add	r1, r5
 800bf36:	9a04      	ldr	r2, [sp, #16]
 800bf38:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800bf3c:	b289      	uxth	r1, r1
 800bf3e:	445c      	add	r4, fp
 800bf40:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800bf44:	4411      	add	r1, r2
 800bf46:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800bf4a:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800bf4e:	e580      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800bf50:	445c      	add	r4, fp
 800bf52:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800bf56:	e79e      	b.n	800be96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800bf58:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800bf5c:	2f07      	cmp	r7, #7
 800bf5e:	d806      	bhi.n	800bf6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800bf60:	ab08      	add	r3, sp, #32
 800bf62:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bf66:	9801      	ldr	r0, [sp, #4]
 800bf68:	f7ff fd44 	bl	800b9f4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bf6c:	e5db      	b.n	800bb26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800bf6e:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800bf72:	f107 39ff 	add.w	r9, r7, #4294967295
 800bf76:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800bf7a:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800bf7e:	f04f 35ff 	mov.w	r5, #4294967295
 800bf82:	2400      	movs	r4, #0
 800bf84:	9304      	str	r3, [sp, #16]
 800bf86:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800bf8a:	9300      	str	r3, [sp, #0]
 800bf8c:	f109 32ff 	add.w	r2, r9, #4294967295
 800bf90:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800bf94:	9303      	str	r3, [sp, #12]
 800bf96:	4690      	mov	r8, r2
 800bf98:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800bf9c:	f1b8 3fff 	cmp.w	r8, #4294967295
 800bfa0:	bf14      	ite	ne
 800bfa2:	9904      	ldrne	r1, [sp, #16]
 800bfa4:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800bfa8:	6818      	ldr	r0, [r3, #0]
 800bfaa:	9206      	str	r2, [sp, #24]
 800bfac:	bf18      	it	ne
 800bfae:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800bfb2:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800bfb6:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800bfba:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800bfbe:	9305      	str	r3, [sp, #20]
 800bfc0:	fb16 f601 	smulbb	r6, r6, r1
 800bfc4:	6859      	ldr	r1, [r3, #4]
 800bfc6:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800bfca:	4671      	mov	r1, lr
 800bfcc:	a80a      	add	r0, sp, #40	; 0x28
 800bfce:	f7ff fc09 	bl	800b7e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bfd2:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800bfd6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800bfda:	9b03      	ldr	r3, [sp, #12]
 800bfdc:	9a00      	ldr	r2, [sp, #0]
 800bfde:	fb11 f100 	smulbb	r1, r1, r0
 800bfe2:	fb02 6603 	mla	r6, r2, r3, r6
 800bfe6:	1b8e      	subs	r6, r1, r6
 800bfe8:	2008      	movs	r0, #8
 800bfea:	fb91 f1f0 	sdiv	r1, r1, r0
 800bfee:	42b1      	cmp	r1, r6
 800bff0:	dc21      	bgt.n	800c036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800bff2:	4556      	cmp	r6, sl
 800bff4:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800bff8:	da03      	bge.n	800c002 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800bffa:	b1e6      	cbz	r6, 800c036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800bffc:	46b2      	mov	sl, r6
 800bffe:	4645      	mov	r5, r8
 800c000:	464c      	mov	r4, r9
 800c002:	f108 38ff 	add.w	r8, r8, #4294967295
 800c006:	f118 0f02 	cmn.w	r8, #2
 800c00a:	d1c7      	bne.n	800bf9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800c00c:	f1b2 3fff 	cmp.w	r2, #4294967295
 800c010:	f1a7 0708 	sub.w	r7, r7, #8
 800c014:	4691      	mov	r9, r2
 800c016:	d1b6      	bne.n	800bf86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800c018:	9b01      	ldr	r3, [sp, #4]
 800c01a:	b2a6      	uxth	r6, r4
 800c01c:	00e4      	lsls	r4, r4, #3
 800c01e:	1918      	adds	r0, r3, r4
 800c020:	1c6b      	adds	r3, r5, #1
 800c022:	d10b      	bne.n	800c03c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800c024:	4601      	mov	r1, r0
 800c026:	9802      	ldr	r0, [sp, #8]
 800c028:	f7ff fbdc 	bl	800b7e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c02c:	4631      	mov	r1, r6
 800c02e:	9801      	ldr	r0, [sp, #4]
 800c030:	f7ff fcca 	bl	800b9c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c034:	e50d      	b.n	800ba52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800c036:	4645      	mov	r5, r8
 800c038:	464c      	mov	r4, r9
 800c03a:	e7ed      	b.n	800c018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800c03c:	9b01      	ldr	r3, [sp, #4]
 800c03e:	00ed      	lsls	r5, r5, #3
 800c040:	1959      	adds	r1, r3, r5
 800c042:	f7ff fbcf 	bl	800b7e4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800c046:	9b02      	ldr	r3, [sp, #8]
 800c048:	cb03      	ldmia	r3!, {r0, r1}
 800c04a:	445d      	add	r5, fp
 800c04c:	445c      	add	r4, fp
 800c04e:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800c052:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800c056:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800c05a:	9b02      	ldr	r3, [sp, #8]
 800c05c:	6861      	ldr	r1, [r4, #4]
 800c05e:	c303      	stmia	r3!, {r0, r1}
 800c060:	e7e4      	b.n	800c02c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800c064 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800c064:	b530      	push	{r4, r5, lr}
 800c066:	4b1d      	ldr	r3, [pc, #116]	; (800c0dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800c068:	b085      	sub	sp, #20
 800c06a:	460c      	mov	r4, r1
 800c06c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c070:	4b1b      	ldr	r3, [pc, #108]	; (800c0e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800c072:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c076:	2100      	movs	r1, #0
 800c078:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c07c:	9100      	str	r1, [sp, #0]
 800c07e:	4605      	mov	r5, r0
 800c080:	6861      	ldr	r1, [r4, #4]
 800c082:	6820      	ldr	r0, [r4, #0]
 800c084:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c088:	ab02      	add	r3, sp, #8
 800c08a:	c303      	stmia	r3!, {r0, r1}
 800c08c:	4669      	mov	r1, sp
 800c08e:	a802      	add	r0, sp, #8
 800c090:	f7fd f8ba 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800c094:	ab02      	add	r3, sp, #8
 800c096:	cb03      	ldmia	r3!, {r0, r1}
 800c098:	4b12      	ldr	r3, [pc, #72]	; (800c0e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800c09a:	6020      	str	r0, [r4, #0]
 800c09c:	6818      	ldr	r0, [r3, #0]
 800c09e:	6061      	str	r1, [r4, #4]
 800c0a0:	b138      	cbz	r0, 800c0b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800c0a2:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800c0a6:	b133      	cbz	r3, 800c0b6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800c0a8:	6821      	ldr	r1, [r4, #0]
 800c0aa:	6862      	ldr	r2, [r4, #4]
 800c0ac:	4628      	mov	r0, r5
 800c0ae:	f7ff fcc3 	bl	800ba38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c0b2:	b005      	add	sp, #20
 800c0b4:	bd30      	pop	{r4, r5, pc}
 800c0b6:	6803      	ldr	r3, [r0, #0]
 800c0b8:	4621      	mov	r1, r4
 800c0ba:	689b      	ldr	r3, [r3, #8]
 800c0bc:	4798      	blx	r3
 800c0be:	4b0a      	ldr	r3, [pc, #40]	; (800c0e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800c0c0:	6818      	ldr	r0, [r3, #0]
 800c0c2:	b118      	cbz	r0, 800c0cc <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800c0c4:	6803      	ldr	r3, [r0, #0]
 800c0c6:	4621      	mov	r1, r4
 800c0c8:	689b      	ldr	r3, [r3, #8]
 800c0ca:	4798      	blx	r3
 800c0cc:	4b07      	ldr	r3, [pc, #28]	; (800c0ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800c0ce:	6818      	ldr	r0, [r3, #0]
 800c0d0:	6803      	ldr	r3, [r0, #0]
 800c0d2:	4621      	mov	r1, r4
 800c0d4:	695b      	ldr	r3, [r3, #20]
 800c0d6:	4798      	blx	r3
 800c0d8:	e7eb      	b.n	800c0b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800c0da:	bf00      	nop
 800c0dc:	2000a390 	.word	0x2000a390
 800c0e0:	2000a392 	.word	0x2000a392
 800c0e4:	2000a3d8 	.word	0x2000a3d8
 800c0e8:	2000a3d4 	.word	0x2000a3d4
 800c0ec:	2000a39c 	.word	0x2000a39c

0800c0f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800c0f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c0f4:	4604      	mov	r4, r0
 800c0f6:	b09b      	sub	sp, #108	; 0x6c
 800c0f8:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800c0fc:	b129      	cbz	r1, 800c10a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800c0fe:	2300      	movs	r3, #0
 800c100:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800c104:	b01b      	add	sp, #108	; 0x6c
 800c106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c10a:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800c10e:	4630      	mov	r0, r6
 800c110:	f7fd f8bd 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c114:	4605      	mov	r5, r0
 800c116:	b940      	cbnz	r0, 800c12a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800c118:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c11c:	4620      	mov	r0, r4
 800c11e:	f7ff fc8b 	bl	800ba38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c122:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c126:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c12a:	4ba6      	ldr	r3, [pc, #664]	; (800c3c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 800c12c:	681b      	ldr	r3, [r3, #0]
 800c12e:	b33b      	cbz	r3, 800c180 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800c130:	4da5      	ldr	r5, [pc, #660]	; (800c3c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800c132:	4628      	mov	r0, r5
 800c134:	f7fd f8ab 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c138:	4606      	mov	r6, r0
 800c13a:	bb08      	cbnz	r0, 800c180 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800c13c:	4628      	mov	r0, r5
 800c13e:	f7ff f98d 	bl	800b45c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c142:	6829      	ldr	r1, [r5, #0]
 800c144:	686a      	ldr	r2, [r5, #4]
 800c146:	4620      	mov	r0, r4
 800c148:	f7ff fc76 	bl	800ba38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c14c:	802e      	strh	r6, [r5, #0]
 800c14e:	806e      	strh	r6, [r5, #2]
 800c150:	80ae      	strh	r6, [r5, #4]
 800c152:	80ee      	strh	r6, [r5, #6]
 800c154:	4f9d      	ldr	r7, [pc, #628]	; (800c3cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800c156:	a809      	add	r0, sp, #36	; 0x24
 800c158:	f7ff fbe3 	bl	800b922 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800c15c:	883d      	ldrh	r5, [r7, #0]
 800c15e:	462e      	mov	r6, r5
 800c160:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c164:	42b3      	cmp	r3, r6
 800c166:	d910      	bls.n	800c18a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800c168:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c16c:	a809      	add	r0, sp, #36	; 0x24
 800c16e:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800c172:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800c176:	3601      	adds	r6, #1
 800c178:	f7ff fc3c 	bl	800b9f4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c17c:	b2b6      	uxth	r6, r6
 800c17e:	e7ef      	b.n	800c160 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800c180:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c184:	2b00      	cmp	r3, #0
 800c186:	d1e5      	bne.n	800c154 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800c188:	e7bc      	b.n	800c104 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c18a:	462e      	mov	r6, r5
 800c18c:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800c190:	42b3      	cmp	r3, r6
 800c192:	d90b      	bls.n	800c1ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800c194:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800c198:	4620      	mov	r0, r4
 800c19a:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800c19e:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800c1a2:	3601      	adds	r6, #1
 800c1a4:	f7ff fc48 	bl	800ba38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800c1a8:	b2b6      	uxth	r6, r6
 800c1aa:	e7ef      	b.n	800c18c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800c1ac:	4a88      	ldr	r2, [pc, #544]	; (800c3d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800c1ae:	6813      	ldr	r3, [r2, #0]
 800c1b0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800c1b4:	2b01      	cmp	r3, #1
 800c1b6:	4690      	mov	r8, r2
 800c1b8:	f040 8093 	bne.w	800c2e2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 800c1bc:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800c1c0:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800c1c4:	33aa      	adds	r3, #170	; 0xaa
 800c1c6:	f04f 0900 	mov.w	r9, #0
 800c1ca:	42a8      	cmp	r0, r5
 800c1cc:	f103 0308 	add.w	r3, r3, #8
 800c1d0:	dd0a      	ble.n	800c1e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800c1d2:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800c1d6:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800c1da:	440a      	add	r2, r1
 800c1dc:	b212      	sxth	r2, r2
 800c1de:	4591      	cmp	r9, r2
 800c1e0:	bfb8      	it	lt
 800c1e2:	4691      	movlt	r9, r2
 800c1e4:	3501      	adds	r5, #1
 800c1e6:	e7f0      	b.n	800c1ca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800c1e8:	4b7a      	ldr	r3, [pc, #488]	; (800c3d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800c1ea:	4e7b      	ldr	r6, [pc, #492]	; (800c3d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800c1ec:	881d      	ldrh	r5, [r3, #0]
 800c1ee:	2300      	movs	r3, #0
 800c1f0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800c1f4:	2d0f      	cmp	r5, #15
 800c1f6:	bf8c      	ite	hi
 800c1f8:	08ed      	lsrhi	r5, r5, #3
 800c1fa:	2501      	movls	r5, #1
 800c1fc:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c200:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c204:	f8d8 0000 	ldr.w	r0, [r8]
 800c208:	440b      	add	r3, r1
 800c20a:	b21b      	sxth	r3, r3
 800c20c:	4599      	cmp	r9, r3
 800c20e:	6802      	ldr	r2, [r0, #0]
 800c210:	dd4a      	ble.n	800c2a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 800c212:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800c216:	4798      	blx	r3
 800c218:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800c21c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800c220:	4413      	add	r3, r2
 800c222:	b21b      	sxth	r3, r3
 800c224:	195a      	adds	r2, r3, r5
 800c226:	4290      	cmp	r0, r2
 800c228:	da07      	bge.n	800c23a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c22a:	4581      	cmp	r9, r0
 800c22c:	dd05      	ble.n	800c23a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800c22e:	4298      	cmp	r0, r3
 800c230:	da33      	bge.n	800c29a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c232:	2b00      	cmp	r3, #0
 800c234:	dd31      	ble.n	800c29a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800c236:	4648      	mov	r0, r9
 800c238:	e004      	b.n	800c244 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800c23a:	4298      	cmp	r0, r3
 800c23c:	dbfb      	blt.n	800c236 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800c23e:	4548      	cmp	r0, r9
 800c240:	bfa8      	it	ge
 800c242:	4648      	movge	r0, r9
 800c244:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c248:	f8b7 a000 	ldrh.w	sl, [r7]
 800c24c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c250:	2100      	movs	r1, #0
 800c252:	1ac0      	subs	r0, r0, r3
 800c254:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c258:	f8ad 2018 	strh.w	r2, [sp, #24]
 800c25c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c260:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c264:	4553      	cmp	r3, sl
 800c266:	d9c9      	bls.n	800c1fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c268:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800c26c:	ab07      	add	r3, sp, #28
 800c26e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c272:	6851      	ldr	r1, [r2, #4]
 800c274:	c303      	stmia	r3!, {r0, r1}
 800c276:	a807      	add	r0, sp, #28
 800c278:	a905      	add	r1, sp, #20
 800c27a:	f7fc ffc5 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800c27e:	a807      	add	r0, sp, #28
 800c280:	f7fd f805 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c284:	b920      	cbnz	r0, 800c290 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800c286:	6823      	ldr	r3, [r4, #0]
 800c288:	a907      	add	r1, sp, #28
 800c28a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c28c:	4620      	mov	r0, r4
 800c28e:	4798      	blx	r3
 800c290:	f10a 0a01 	add.w	sl, sl, #1
 800c294:	fa1f fa8a 	uxth.w	sl, sl
 800c298:	e7e2      	b.n	800c260 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800c29a:	f8d8 0000 	ldr.w	r0, [r8]
 800c29e:	6803      	ldr	r3, [r0, #0]
 800c2a0:	2101      	movs	r1, #1
 800c2a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2a4:	4798      	blx	r3
 800c2a6:	e7a9      	b.n	800c1fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800c2a8:	69d3      	ldr	r3, [r2, #28]
 800c2aa:	4798      	blx	r3
 800c2ac:	4b4b      	ldr	r3, [pc, #300]	; (800c3dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800c2ae:	781b      	ldrb	r3, [r3, #0]
 800c2b0:	2b00      	cmp	r3, #0
 800c2b2:	f43f af27 	beq.w	800c104 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c2b6:	2300      	movs	r3, #0
 800c2b8:	883d      	ldrh	r5, [r7, #0]
 800c2ba:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800c2be:	34ea      	adds	r4, #234	; 0xea
 800c2c0:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800c2c4:	42ab      	cmp	r3, r5
 800c2c6:	f67f af1d 	bls.w	800c104 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800c2ca:	ab1a      	add	r3, sp, #104	; 0x68
 800c2cc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c2d0:	3b44      	subs	r3, #68	; 0x44
 800c2d2:	e893 0006 	ldmia.w	r3, {r1, r2}
 800c2d6:	4620      	mov	r0, r4
 800c2d8:	3501      	adds	r5, #1
 800c2da:	f7ff fb8b 	bl	800b9f4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800c2de:	b2ad      	uxth	r5, r5
 800c2e0:	e7ee      	b.n	800c2c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 800c2e2:	2b02      	cmp	r3, #2
 800c2e4:	f040 813c 	bne.w	800c560 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>
 800c2e8:	4b3d      	ldr	r3, [pc, #244]	; (800c3e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800c2ea:	781b      	ldrb	r3, [r3, #0]
 800c2ec:	2b01      	cmp	r3, #1
 800c2ee:	d02c      	beq.n	800c34a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 800c2f0:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800c2f4:	883a      	ldrh	r2, [r7, #0]
 800c2f6:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800c2fa:	3201      	adds	r2, #1
 800c2fc:	b292      	uxth	r2, r2
 800c2fe:	2900      	cmp	r1, #0
 800c300:	d0d4      	beq.n	800c2ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800c302:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800c306:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800c30a:	441d      	add	r5, r3
 800c30c:	b22d      	sxth	r5, r5
 800c30e:	4610      	mov	r0, r2
 800c310:	f04f 0a00 	mov.w	sl, #0
 800c314:	b283      	uxth	r3, r0
 800c316:	4299      	cmp	r1, r3
 800c318:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800c31c:	f240 80c4 	bls.w	800c4a8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 800c320:	4426      	add	r6, r4
 800c322:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800c326:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800c32a:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800c32e:	4573      	cmp	r3, lr
 800c330:	4684      	mov	ip, r0
 800c332:	f340 80a6 	ble.w	800c482 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 800c336:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800c33a:	4475      	add	r5, lr
 800c33c:	b22d      	sxth	r5, r5
 800c33e:	429d      	cmp	r5, r3
 800c340:	bfa8      	it	ge
 800c342:	461d      	movge	r5, r3
 800c344:	3001      	adds	r0, #1
 800c346:	46e2      	mov	sl, ip
 800c348:	e7e4      	b.n	800c314 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 800c34a:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800c34e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800c352:	f1bb 0f00 	cmp.w	fp, #0
 800c356:	d0a9      	beq.n	800c2ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800c358:	883b      	ldrh	r3, [r7, #0]
 800c35a:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800c35e:	3301      	adds	r3, #1
 800c360:	b29b      	uxth	r3, r3
 800c362:	2600      	movs	r6, #0
 800c364:	b299      	uxth	r1, r3
 800c366:	458b      	cmp	fp, r1
 800c368:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800c36c:	d93a      	bls.n	800c3e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800c36e:	4425      	add	r5, r4
 800c370:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800c374:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800c378:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800c37c:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800c380:	4408      	add	r0, r1
 800c382:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800c386:	4471      	add	r1, lr
 800c388:	b200      	sxth	r0, r0
 800c38a:	b209      	sxth	r1, r1
 800c38c:	4288      	cmp	r0, r1
 800c38e:	469c      	mov	ip, r3
 800c390:	da06      	bge.n	800c3a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b0>
 800c392:	4586      	cmp	lr, r0
 800c394:	4672      	mov	r2, lr
 800c396:	bfb8      	it	lt
 800c398:	4602      	movlt	r2, r0
 800c39a:	3301      	adds	r3, #1
 800c39c:	4666      	mov	r6, ip
 800c39e:	e7e1      	b.n	800c364 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 800c3a0:	d10b      	bne.n	800c3ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ca>
 800c3a2:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800c3a6:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800c3aa:	458c      	cmp	ip, r1
 800c3ac:	bfb4      	ite	lt
 800c3ae:	469c      	movlt	ip, r3
 800c3b0:	46b4      	movge	ip, r6
 800c3b2:	4572      	cmp	r2, lr
 800c3b4:	bfb8      	it	lt
 800c3b6:	4672      	movlt	r2, lr
 800c3b8:	e7ef      	b.n	800c39a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800c3ba:	428a      	cmp	r2, r1
 800c3bc:	bfb8      	it	lt
 800c3be:	460a      	movlt	r2, r1
 800c3c0:	46b4      	mov	ip, r6
 800c3c2:	e7ea      	b.n	800c39a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2aa>
 800c3c4:	2000a3d4 	.word	0x2000a3d4
 800c3c8:	2000a3e0 	.word	0x2000a3e0
 800c3cc:	20000060 	.word	0x20000060
 800c3d0:	2000a39c 	.word	0x2000a39c
 800c3d4:	2000a392 	.word	0x2000a392
 800c3d8:	2000a390 	.word	0x2000a390
 800c3dc:	2000a39a 	.word	0x2000a39a
 800c3e0:	2000a394 	.word	0x2000a394
 800c3e4:	1961      	adds	r1, r4, r5
 800c3e6:	ab07      	add	r3, sp, #28
 800c3e8:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800c3ec:	6849      	ldr	r1, [r1, #4]
 800c3ee:	c303      	stmia	r3!, {r0, r1}
 800c3f0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800c3f4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800c3f8:	2b13      	cmp	r3, #19
 800c3fa:	bfd8      	it	le
 800c3fc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800c400:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c404:	440b      	add	r3, r1
 800c406:	1a9b      	subs	r3, r3, r2
 800c408:	a807      	add	r0, sp, #28
 800c40a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c40e:	f7ff f89b 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c412:	a807      	add	r0, sp, #28
 800c414:	f7fc ff3b 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c418:	2800      	cmp	r0, #0
 800c41a:	d198      	bne.n	800c34e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c41c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800c420:	f8d8 0000 	ldr.w	r0, [r8]
 800c424:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c428:	f8d0 e000 	ldr.w	lr, [r0]
 800c42c:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800c430:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800c434:	f1bc 0f14 	cmp.w	ip, #20
 800c438:	bfa8      	it	ge
 800c43a:	f04f 0c14 	movge.w	ip, #20
 800c43e:	fa1f fc8c 	uxth.w	ip, ip
 800c442:	f8cd c000 	str.w	ip, [sp]
 800c446:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 800c44a:	47d0      	blx	sl
 800c44c:	4682      	mov	sl, r0
 800c44e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c452:	a807      	add	r0, sp, #28
 800c454:	f7ff f802 	bl	800b45c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c458:	6823      	ldr	r3, [r4, #0]
 800c45a:	4425      	add	r5, r4
 800c45c:	4620      	mov	r0, r4
 800c45e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c460:	a907      	add	r1, sp, #28
 800c462:	4798      	blx	r3
 800c464:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800c468:	eba0 000a 	sub.w	r0, r0, sl
 800c46c:	b200      	sxth	r0, r0
 800c46e:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800c472:	2800      	cmp	r0, #0
 800c474:	f47f af6b 	bne.w	800c34e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c478:	b2b1      	uxth	r1, r6
 800c47a:	4648      	mov	r0, r9
 800c47c:	f7ff faa4 	bl	800b9c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c480:	e765      	b.n	800c34e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c482:	d10c      	bne.n	800c49e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 800c484:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800c488:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800c48c:	45b4      	cmp	ip, r6
 800c48e:	bfb4      	ite	lt
 800c490:	4684      	movlt	ip, r0
 800c492:	46d4      	movge	ip, sl
 800c494:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800c498:	4433      	add	r3, r6
 800c49a:	b21b      	sxth	r3, r3
 800c49c:	e74f      	b.n	800c33e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 800c49e:	4575      	cmp	r5, lr
 800c4a0:	bfa8      	it	ge
 800c4a2:	4675      	movge	r5, lr
 800c4a4:	46d4      	mov	ip, sl
 800c4a6:	e74d      	b.n	800c344 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 800c4a8:	eb0b 0006 	add.w	r0, fp, r6
 800c4ac:	4426      	add	r6, r4
 800c4ae:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c4b2:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800c4b6:	f1b9 0f13 	cmp.w	r9, #19
 800c4ba:	bfde      	ittt	le
 800c4bc:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800c4c0:	444d      	addle	r5, r9
 800c4c2:	b22d      	sxthle	r5, r5
 800c4c4:	f7fc fee3 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c4c8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c4cc:	2800      	cmp	r0, #0
 800c4ce:	f47f af16 	bne.w	800c2fe <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 800c4d2:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800c4d6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c4da:	eba5 050c 	sub.w	r5, r5, ip
 800c4de:	fa1f f28c 	uxth.w	r2, ip
 800c4e2:	fa1f f989 	uxth.w	r9, r9
 800c4e6:	eb02 0009 	add.w	r0, r2, r9
 800c4ea:	2d14      	cmp	r5, #20
 800c4ec:	bfa8      	it	ge
 800c4ee:	2514      	movge	r5, #20
 800c4f0:	b200      	sxth	r0, r0
 800c4f2:	fa1f fe85 	uxth.w	lr, r5
 800c4f6:	eba0 000c 	sub.w	r0, r0, ip
 800c4fa:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800c4fe:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800c502:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c506:	4586      	cmp	lr, r0
 800c508:	f8d8 0000 	ldr.w	r0, [r8]
 800c50c:	f8ad c01e 	strh.w	ip, [sp, #30]
 800c510:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c514:	bfb8      	it	lt
 800c516:	46f1      	movlt	r9, lr
 800c518:	6805      	ldr	r5, [r0, #0]
 800c51a:	f8cd 9000 	str.w	r9, [sp]
 800c51e:	b29b      	uxth	r3, r3
 800c520:	b289      	uxth	r1, r1
 800c522:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 800c524:	47a8      	blx	r5
 800c526:	6823      	ldr	r3, [r4, #0]
 800c528:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800c52c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c52e:	a907      	add	r1, sp, #28
 800c530:	4620      	mov	r0, r4
 800c532:	4798      	blx	r3
 800c534:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800c538:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800c53c:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800c540:	1a5b      	subs	r3, r3, r1
 800c542:	440a      	add	r2, r1
 800c544:	b21b      	sxth	r3, r3
 800c546:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800c54a:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800c54e:	2b00      	cmp	r3, #0
 800c550:	f47f aed0 	bne.w	800c2f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800c554:	fa1f f18a 	uxth.w	r1, sl
 800c558:	4658      	mov	r0, fp
 800c55a:	f7ff fa35 	bl	800b9c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c55e:	e6c9      	b.n	800c2f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 800c560:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c564:	42ab      	cmp	r3, r5
 800c566:	f67f aea1 	bls.w	800c2ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 800c56a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800c56e:	ab07      	add	r3, sp, #28
 800c570:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c574:	6851      	ldr	r1, [r2, #4]
 800c576:	c303      	stmia	r3!, {r0, r1}
 800c578:	a807      	add	r0, sp, #28
 800c57a:	f7fc fe88 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 800c57e:	b920      	cbnz	r0, 800c58a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49a>
 800c580:	6823      	ldr	r3, [r4, #0]
 800c582:	a907      	add	r1, sp, #28
 800c584:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c586:	4620      	mov	r0, r4
 800c588:	4798      	blx	r3
 800c58a:	3501      	adds	r5, #1
 800c58c:	b2ad      	uxth	r5, r5
 800c58e:	e7e7      	b.n	800c560 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x470>

0800c590 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c590:	4b03      	ldr	r3, [pc, #12]	; (800c5a0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c592:	2200      	movs	r2, #0
 800c594:	801a      	strh	r2, [r3, #0]
 800c596:	805a      	strh	r2, [r3, #2]
 800c598:	809a      	strh	r2, [r3, #4]
 800c59a:	80da      	strh	r2, [r3, #6]
 800c59c:	4770      	bx	lr
 800c59e:	bf00      	nop
 800c5a0:	2000a3e0 	.word	0x2000a3e0

0800c5a4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5a8:	4607      	mov	r7, r0
 800c5aa:	b099      	sub	sp, #100	; 0x64
 800c5ac:	a802      	add	r0, sp, #8
 800c5ae:	4614      	mov	r4, r2
 800c5b0:	461d      	mov	r5, r3
 800c5b2:	468a      	mov	sl, r1
 800c5b4:	f000 fe14 	bl	800d1e0 <_ZN8touchgfx12TextProviderC1Ev>
 800c5b8:	683b      	ldr	r3, [r7, #0]
 800c5ba:	4638      	mov	r0, r7
 800c5bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c5be:	4798      	blx	r3
 800c5c0:	462a      	mov	r2, r5
 800c5c2:	4603      	mov	r3, r0
 800c5c4:	4621      	mov	r1, r4
 800c5c6:	a802      	add	r0, sp, #8
 800c5c8:	f000 fe4f 	bl	800d26a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c5cc:	2500      	movs	r5, #0
 800c5ce:	462c      	mov	r4, r5
 800c5d0:	46a9      	mov	r9, r5
 800c5d2:	46a8      	mov	r8, r5
 800c5d4:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c5d8:	2300      	movs	r3, #0
 800c5da:	9301      	str	r3, [sp, #4]
 800c5dc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c5e0:	429c      	cmp	r4, r3
 800c5e2:	d002      	beq.n	800c5ea <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800c5e4:	455c      	cmp	r4, fp
 800c5e6:	bf18      	it	ne
 800c5e8:	4625      	movne	r5, r4
 800c5ea:	ab01      	add	r3, sp, #4
 800c5ec:	463a      	mov	r2, r7
 800c5ee:	4651      	mov	r1, sl
 800c5f0:	a802      	add	r0, sp, #8
 800c5f2:	f001 f933 	bl	800d85c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c5f6:	4604      	mov	r4, r0
 800c5f8:	b108      	cbz	r0, 800c5fe <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800c5fa:	280a      	cmp	r0, #10
 800c5fc:	d10a      	bne.n	800c614 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800c5fe:	45c1      	cmp	r9, r8
 800c600:	bf38      	it	cc
 800c602:	46c1      	movcc	r9, r8
 800c604:	f04f 0800 	mov.w	r8, #0
 800c608:	2c00      	cmp	r4, #0
 800c60a:	d1e5      	bne.n	800c5d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c60c:	4648      	mov	r0, r9
 800c60e:	b019      	add	sp, #100	; 0x64
 800c610:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c614:	9a01      	ldr	r2, [sp, #4]
 800c616:	2a00      	cmp	r2, #0
 800c618:	d0de      	beq.n	800c5d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c61a:	7b56      	ldrb	r6, [r2, #13]
 800c61c:	683b      	ldr	r3, [r7, #0]
 800c61e:	8894      	ldrh	r4, [r2, #4]
 800c620:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c622:	0076      	lsls	r6, r6, #1
 800c624:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800c628:	7a96      	ldrb	r6, [r2, #10]
 800c62a:	4629      	mov	r1, r5
 800c62c:	4306      	orrs	r6, r0
 800c62e:	4638      	mov	r0, r7
 800c630:	4798      	blx	r3
 800c632:	4430      	add	r0, r6
 800c634:	4480      	add	r8, r0
 800c636:	fa1f f888 	uxth.w	r8, r8
 800c63a:	e7e5      	b.n	800c608 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800c63c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c63c:	b508      	push	{r3, lr}
 800c63e:	6803      	ldr	r3, [r0, #0]
 800c640:	68db      	ldr	r3, [r3, #12]
 800c642:	4798      	blx	r3
 800c644:	b128      	cbz	r0, 800c652 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c646:	7b43      	ldrb	r3, [r0, #13]
 800c648:	7a80      	ldrb	r0, [r0, #10]
 800c64a:	005b      	lsls	r3, r3, #1
 800c64c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c650:	4318      	orrs	r0, r3
 800c652:	bd08      	pop	{r3, pc}

0800c654 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c654:	b40e      	push	{r1, r2, r3}
 800c656:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c658:	b098      	sub	sp, #96	; 0x60
 800c65a:	ab1d      	add	r3, sp, #116	; 0x74
 800c65c:	4605      	mov	r5, r0
 800c65e:	f853 4b04 	ldr.w	r4, [r3], #4
 800c662:	9300      	str	r3, [sp, #0]
 800c664:	a802      	add	r0, sp, #8
 800c666:	f000 fdbb 	bl	800d1e0 <_ZN8touchgfx12TextProviderC1Ev>
 800c66a:	682b      	ldr	r3, [r5, #0]
 800c66c:	4628      	mov	r0, r5
 800c66e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c670:	4798      	blx	r3
 800c672:	ae18      	add	r6, sp, #96	; 0x60
 800c674:	4603      	mov	r3, r0
 800c676:	4621      	mov	r1, r4
 800c678:	9a00      	ldr	r2, [sp, #0]
 800c67a:	2400      	movs	r4, #0
 800c67c:	a802      	add	r0, sp, #8
 800c67e:	f000 fdf4 	bl	800d26a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c682:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800c686:	462a      	mov	r2, r5
 800c688:	4633      	mov	r3, r6
 800c68a:	4621      	mov	r1, r4
 800c68c:	a802      	add	r0, sp, #8
 800c68e:	f001 f8e5 	bl	800d85c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c692:	b1f0      	cbz	r0, 800c6d2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800c694:	280a      	cmp	r0, #10
 800c696:	d018      	beq.n	800c6ca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c698:	9f01      	ldr	r7, [sp, #4]
 800c69a:	b1b7      	cbz	r7, 800c6ca <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c69c:	7b78      	ldrb	r0, [r7, #13]
 800c69e:	7a3b      	ldrb	r3, [r7, #8]
 800c6a0:	88aa      	ldrh	r2, [r5, #4]
 800c6a2:	00c1      	lsls	r1, r0, #3
 800c6a4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c6a8:	4319      	orrs	r1, r3
 800c6aa:	0643      	lsls	r3, r0, #25
 800c6ac:	bf44      	itt	mi
 800c6ae:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c6b2:	b219      	sxthmi	r1, r3
 800c6b4:	0100      	lsls	r0, r0, #4
 800c6b6:	79fb      	ldrb	r3, [r7, #7]
 800c6b8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c6bc:	4303      	orrs	r3, r0
 800c6be:	4413      	add	r3, r2
 800c6c0:	1a5b      	subs	r3, r3, r1
 800c6c2:	b29b      	uxth	r3, r3
 800c6c4:	42a3      	cmp	r3, r4
 800c6c6:	bfc8      	it	gt
 800c6c8:	b21c      	sxthgt	r4, r3
 800c6ca:	4633      	mov	r3, r6
 800c6cc:	462a      	mov	r2, r5
 800c6ce:	2100      	movs	r1, #0
 800c6d0:	e7dc      	b.n	800c68c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800c6d2:	b2a0      	uxth	r0, r4
 800c6d4:	b018      	add	sp, #96	; 0x60
 800c6d6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c6da:	b003      	add	sp, #12
 800c6dc:	4770      	bx	lr

0800c6de <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c6de:	b40e      	push	{r1, r2, r3}
 800c6e0:	b530      	push	{r4, r5, lr}
 800c6e2:	b098      	sub	sp, #96	; 0x60
 800c6e4:	ab1b      	add	r3, sp, #108	; 0x6c
 800c6e6:	4604      	mov	r4, r0
 800c6e8:	f853 5b04 	ldr.w	r5, [r3], #4
 800c6ec:	9301      	str	r3, [sp, #4]
 800c6ee:	a802      	add	r0, sp, #8
 800c6f0:	f000 fd76 	bl	800d1e0 <_ZN8touchgfx12TextProviderC1Ev>
 800c6f4:	6823      	ldr	r3, [r4, #0]
 800c6f6:	4620      	mov	r0, r4
 800c6f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c6fa:	4798      	blx	r3
 800c6fc:	9a01      	ldr	r2, [sp, #4]
 800c6fe:	4603      	mov	r3, r0
 800c700:	4629      	mov	r1, r5
 800c702:	a802      	add	r0, sp, #8
 800c704:	f000 fdb1 	bl	800d26a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c708:	a802      	add	r0, sp, #8
 800c70a:	f001 f945 	bl	800d998 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c70e:	2401      	movs	r4, #1
 800c710:	b2a3      	uxth	r3, r4
 800c712:	b140      	cbz	r0, 800c726 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800c714:	280a      	cmp	r0, #10
 800c716:	bf08      	it	eq
 800c718:	3301      	addeq	r3, #1
 800c71a:	a802      	add	r0, sp, #8
 800c71c:	bf08      	it	eq
 800c71e:	b21c      	sxtheq	r4, r3
 800c720:	f001 f93a 	bl	800d998 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c724:	e7f4      	b.n	800c710 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800c726:	4618      	mov	r0, r3
 800c728:	b018      	add	sp, #96	; 0x60
 800c72a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c72e:	b003      	add	sp, #12
 800c730:	4770      	bx	lr

0800c732 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c732:	b40e      	push	{r1, r2, r3}
 800c734:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c736:	b098      	sub	sp, #96	; 0x60
 800c738:	ab1d      	add	r3, sp, #116	; 0x74
 800c73a:	4604      	mov	r4, r0
 800c73c:	f853 5b04 	ldr.w	r5, [r3], #4
 800c740:	9300      	str	r3, [sp, #0]
 800c742:	a802      	add	r0, sp, #8
 800c744:	f000 fd4c 	bl	800d1e0 <_ZN8touchgfx12TextProviderC1Ev>
 800c748:	6823      	ldr	r3, [r4, #0]
 800c74a:	4620      	mov	r0, r4
 800c74c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c74e:	4798      	blx	r3
 800c750:	4629      	mov	r1, r5
 800c752:	4603      	mov	r3, r0
 800c754:	9a00      	ldr	r2, [sp, #0]
 800c756:	a802      	add	r0, sp, #8
 800c758:	ad18      	add	r5, sp, #96	; 0x60
 800c75a:	f000 fd86 	bl	800d26a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c75e:	2100      	movs	r1, #0
 800c760:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800c764:	4622      	mov	r2, r4
 800c766:	462b      	mov	r3, r5
 800c768:	a802      	add	r0, sp, #8
 800c76a:	f001 f877 	bl	800d85c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c76e:	26ff      	movs	r6, #255	; 0xff
 800c770:	b1d8      	cbz	r0, 800c7aa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c772:	280a      	cmp	r0, #10
 800c774:	d012      	beq.n	800c79c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c776:	9801      	ldr	r0, [sp, #4]
 800c778:	b180      	cbz	r0, 800c79c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c77a:	7b47      	ldrb	r7, [r0, #13]
 800c77c:	7922      	ldrb	r2, [r4, #4]
 800c77e:	00fb      	lsls	r3, r7, #3
 800c780:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c784:	7a03      	ldrb	r3, [r0, #8]
 800c786:	430b      	orrs	r3, r1
 800c788:	0679      	lsls	r1, r7, #25
 800c78a:	bf44      	itt	mi
 800c78c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c790:	b21b      	sxthmi	r3, r3
 800c792:	1ad3      	subs	r3, r2, r3
 800c794:	b2db      	uxtb	r3, r3
 800c796:	429e      	cmp	r6, r3
 800c798:	bf28      	it	cs
 800c79a:	461e      	movcs	r6, r3
 800c79c:	462b      	mov	r3, r5
 800c79e:	4622      	mov	r2, r4
 800c7a0:	2100      	movs	r1, #0
 800c7a2:	a802      	add	r0, sp, #8
 800c7a4:	f001 f85a 	bl	800d85c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c7a8:	e7e2      	b.n	800c770 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800c7aa:	4630      	mov	r0, r6
 800c7ac:	b018      	add	sp, #96	; 0x60
 800c7ae:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c7b2:	b003      	add	sp, #12
 800c7b4:	4770      	bx	lr

0800c7b6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c7b6:	b513      	push	{r0, r1, r4, lr}
 800c7b8:	1d01      	adds	r1, r0, #4
 800c7ba:	4603      	mov	r3, r0
 800c7bc:	c903      	ldmia	r1, {r0, r1}
 800c7be:	466a      	mov	r2, sp
 800c7c0:	e882 0003 	stmia.w	r2, {r0, r1}
 800c7c4:	2100      	movs	r1, #0
 800c7c6:	9100      	str	r1, [sp, #0]
 800c7c8:	6819      	ldr	r1, [r3, #0]
 800c7ca:	4618      	mov	r0, r3
 800c7cc:	690c      	ldr	r4, [r1, #16]
 800c7ce:	4611      	mov	r1, r2
 800c7d0:	47a0      	blx	r4
 800c7d2:	b002      	add	sp, #8
 800c7d4:	bd10      	pop	{r4, pc}

0800c7d6 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c7d6:	b538      	push	{r3, r4, r5, lr}
 800c7d8:	680b      	ldr	r3, [r1, #0]
 800c7da:	460c      	mov	r4, r1
 800c7dc:	68db      	ldr	r3, [r3, #12]
 800c7de:	4605      	mov	r5, r0
 800c7e0:	4798      	blx	r3
 800c7e2:	6823      	ldr	r3, [r4, #0]
 800c7e4:	4620      	mov	r0, r4
 800c7e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c7e8:	4629      	mov	r1, r5
 800c7ea:	4798      	blx	r3
 800c7ec:	4628      	mov	r0, r5
 800c7ee:	bd38      	pop	{r3, r4, r5, pc}

0800c7f0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c7f0:	b410      	push	{r4}
 800c7f2:	880a      	ldrh	r2, [r1, #0]
 800c7f4:	8884      	ldrh	r4, [r0, #4]
 800c7f6:	4422      	add	r2, r4
 800c7f8:	800a      	strh	r2, [r1, #0]
 800c7fa:	88c4      	ldrh	r4, [r0, #6]
 800c7fc:	884a      	ldrh	r2, [r1, #2]
 800c7fe:	4422      	add	r2, r4
 800c800:	804a      	strh	r2, [r1, #2]
 800c802:	6940      	ldr	r0, [r0, #20]
 800c804:	b120      	cbz	r0, 800c810 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800c806:	6803      	ldr	r3, [r0, #0]
 800c808:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c80c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c80e:	4718      	bx	r3
 800c810:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c814:	4770      	bx	lr

0800c816 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c816:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c818:	460b      	mov	r3, r1
 800c81a:	b085      	sub	sp, #20
 800c81c:	4604      	mov	r4, r0
 800c81e:	b901      	cbnz	r1, 800c822 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800c820:	b322      	cbz	r2, 800c86c <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800c822:	1d27      	adds	r7, r4, #4
 800c824:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c828:	466e      	mov	r6, sp
 800c82a:	e886 0003 	stmia.w	r6, {r0, r1}
 800c82e:	88a1      	ldrh	r1, [r4, #4]
 800c830:	88e5      	ldrh	r5, [r4, #6]
 800c832:	4419      	add	r1, r3
 800c834:	6823      	ldr	r3, [r4, #0]
 800c836:	442a      	add	r2, r5
 800c838:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c83a:	b209      	sxth	r1, r1
 800c83c:	4620      	mov	r0, r4
 800c83e:	b215      	sxth	r5, r2
 800c840:	4798      	blx	r3
 800c842:	6823      	ldr	r3, [r4, #0]
 800c844:	4629      	mov	r1, r5
 800c846:	4620      	mov	r0, r4
 800c848:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c84a:	4798      	blx	r3
 800c84c:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c850:	ad02      	add	r5, sp, #8
 800c852:	e885 0003 	stmia.w	r5, {r0, r1}
 800c856:	6960      	ldr	r0, [r4, #20]
 800c858:	b150      	cbz	r0, 800c870 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800c85a:	6803      	ldr	r3, [r0, #0]
 800c85c:	4631      	mov	r1, r6
 800c85e:	691b      	ldr	r3, [r3, #16]
 800c860:	4798      	blx	r3
 800c862:	6960      	ldr	r0, [r4, #20]
 800c864:	6803      	ldr	r3, [r0, #0]
 800c866:	691b      	ldr	r3, [r3, #16]
 800c868:	4629      	mov	r1, r5
 800c86a:	4798      	blx	r3
 800c86c:	b005      	add	sp, #20
 800c86e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c870:	f7fe fffe 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 800c874:	6803      	ldr	r3, [r0, #0]
 800c876:	4631      	mov	r1, r6
 800c878:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c87a:	4798      	blx	r3
 800c87c:	f7fe fff8 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 800c880:	6803      	ldr	r3, [r0, #0]
 800c882:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c884:	e7f0      	b.n	800c868 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800c886 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c886:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c888:	8882      	ldrh	r2, [r0, #4]
 800c88a:	880b      	ldrh	r3, [r1, #0]
 800c88c:	4413      	add	r3, r2
 800c88e:	800b      	strh	r3, [r1, #0]
 800c890:	88c2      	ldrh	r2, [r0, #6]
 800c892:	884b      	ldrh	r3, [r1, #2]
 800c894:	4413      	add	r3, r2
 800c896:	4602      	mov	r2, r0
 800c898:	804b      	strh	r3, [r1, #2]
 800c89a:	4605      	mov	r5, r0
 800c89c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c8a0:	460c      	mov	r4, r1
 800c8a2:	6851      	ldr	r1, [r2, #4]
 800c8a4:	466b      	mov	r3, sp
 800c8a6:	c303      	stmia	r3!, {r0, r1}
 800c8a8:	4621      	mov	r1, r4
 800c8aa:	4668      	mov	r0, sp
 800c8ac:	f7fc fcac 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800c8b0:	466b      	mov	r3, sp
 800c8b2:	cb03      	ldmia	r3!, {r0, r1}
 800c8b4:	6020      	str	r0, [r4, #0]
 800c8b6:	6061      	str	r1, [r4, #4]
 800c8b8:	6968      	ldr	r0, [r5, #20]
 800c8ba:	b128      	cbz	r0, 800c8c8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800c8bc:	6803      	ldr	r3, [r0, #0]
 800c8be:	691b      	ldr	r3, [r3, #16]
 800c8c0:	4621      	mov	r1, r4
 800c8c2:	4798      	blx	r3
 800c8c4:	b003      	add	sp, #12
 800c8c6:	bd30      	pop	{r4, r5, pc}
 800c8c8:	f7fe ffd2 	bl	800b870 <_ZN8touchgfx11Application11getInstanceEv>
 800c8cc:	6803      	ldr	r3, [r0, #0]
 800c8ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c8d0:	e7f6      	b.n	800c8c0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800c8d2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c8d2:	b570      	push	{r4, r5, r6, lr}
 800c8d4:	8882      	ldrh	r2, [r0, #4]
 800c8d6:	880b      	ldrh	r3, [r1, #0]
 800c8d8:	4413      	add	r3, r2
 800c8da:	800b      	strh	r3, [r1, #0]
 800c8dc:	88c2      	ldrh	r2, [r0, #6]
 800c8de:	884b      	ldrh	r3, [r1, #2]
 800c8e0:	460c      	mov	r4, r1
 800c8e2:	4413      	add	r3, r2
 800c8e4:	804b      	strh	r3, [r1, #2]
 800c8e6:	4605      	mov	r5, r0
 800c8e8:	1d01      	adds	r1, r0, #4
 800c8ea:	4620      	mov	r0, r4
 800c8ec:	f7fc fc8c 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800c8f0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c8f4:	2b00      	cmp	r3, #0
 800c8f6:	dd0b      	ble.n	800c910 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c8f8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c8fc:	2b00      	cmp	r3, #0
 800c8fe:	dd07      	ble.n	800c910 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c900:	6968      	ldr	r0, [r5, #20]
 800c902:	b128      	cbz	r0, 800c910 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c904:	6803      	ldr	r3, [r0, #0]
 800c906:	4621      	mov	r1, r4
 800c908:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c90a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c90e:	4718      	bx	r3
 800c910:	bd70      	pop	{r4, r5, r6, pc}

0800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c912:	b510      	push	{r4, lr}
 800c914:	4604      	mov	r4, r0
 800c916:	4608      	mov	r0, r1
 800c918:	2300      	movs	r3, #0
 800c91a:	8023      	strh	r3, [r4, #0]
 800c91c:	8063      	strh	r3, [r4, #2]
 800c91e:	6803      	ldr	r3, [r0, #0]
 800c920:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c924:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800c928:	80a1      	strh	r1, [r4, #4]
 800c92a:	80e2      	strh	r2, [r4, #6]
 800c92c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c92e:	4621      	mov	r1, r4
 800c930:	4798      	blx	r3
 800c932:	4620      	mov	r0, r4
 800c934:	bd10      	pop	{r4, pc}
	...

0800c938 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800c938:	b530      	push	{r4, r5, lr}
 800c93a:	8083      	strh	r3, [r0, #4]
 800c93c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c940:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800c944:	7183      	strb	r3, [r0, #6]
 800c946:	79c3      	ldrb	r3, [r0, #7]
 800c948:	6101      	str	r1, [r0, #16]
 800c94a:	f365 0306 	bfi	r3, r5, #0, #7
 800c94e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800c952:	8282      	strh	r2, [r0, #20]
 800c954:	f365 13c7 	bfi	r3, r5, #7, #1
 800c958:	71c3      	strb	r3, [r0, #7]
 800c95a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c95e:	7203      	strb	r3, [r0, #8]
 800c960:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800c964:	7243      	strb	r3, [r0, #9]
 800c966:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c96a:	8143      	strh	r3, [r0, #10]
 800c96c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800c970:	8183      	strh	r3, [r0, #12]
 800c972:	4b01      	ldr	r3, [pc, #4]	; (800c978 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800c974:	6003      	str	r3, [r0, #0]
 800c976:	bd30      	pop	{r4, r5, pc}
 800c978:	0801cd24 	.word	0x0801cd24

0800c97c <_ZNK8touchgfx9ConstFont4findEt>:
 800c97c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c97e:	6904      	ldr	r4, [r0, #16]
 800c980:	b3bc      	cbz	r4, 800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c982:	88a3      	ldrh	r3, [r4, #4]
 800c984:	8a82      	ldrh	r2, [r0, #20]
 800c986:	1acb      	subs	r3, r1, r3
 800c988:	f102 32ff 	add.w	r2, r2, #4294967295
 800c98c:	d431      	bmi.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c98e:	4293      	cmp	r3, r2
 800c990:	dd0c      	ble.n	800c9ac <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800c992:	230e      	movs	r3, #14
 800c994:	fb03 4302 	mla	r3, r3, r2, r4
 800c998:	889b      	ldrh	r3, [r3, #4]
 800c99a:	1a5b      	subs	r3, r3, r1
 800c99c:	1ad3      	subs	r3, r2, r3
 800c99e:	429a      	cmp	r2, r3
 800c9a0:	db27      	blt.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	bfbc      	itt	lt
 800c9a6:	2302      	movlt	r3, #2
 800c9a8:	fb92 f3f3 	sdivlt	r3, r2, r3
 800c9ac:	2500      	movs	r5, #0
 800c9ae:	260e      	movs	r6, #14
 800c9b0:	4295      	cmp	r5, r2
 800c9b2:	dc1e      	bgt.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c9b4:	fb06 4003 	mla	r0, r6, r3, r4
 800c9b8:	8887      	ldrh	r7, [r0, #4]
 800c9ba:	42b9      	cmp	r1, r7
 800c9bc:	d01a      	beq.n	800c9f4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800c9be:	d20d      	bcs.n	800c9dc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800c9c0:	1e5a      	subs	r2, r3, #1
 800c9c2:	4295      	cmp	r5, r2
 800c9c4:	dc15      	bgt.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c9c6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800c9ca:	1a5b      	subs	r3, r3, r1
 800c9cc:	1ad3      	subs	r3, r2, r3
 800c9ce:	429a      	cmp	r2, r3
 800c9d0:	db0f      	blt.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c9d2:	429d      	cmp	r5, r3
 800c9d4:	ddec      	ble.n	800c9b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c9d6:	1953      	adds	r3, r2, r5
 800c9d8:	105b      	asrs	r3, r3, #1
 800c9da:	e7e9      	b.n	800c9b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c9dc:	1c5d      	adds	r5, r3, #1
 800c9de:	42aa      	cmp	r2, r5
 800c9e0:	db07      	blt.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c9e2:	8a43      	ldrh	r3, [r0, #18]
 800c9e4:	1acb      	subs	r3, r1, r3
 800c9e6:	442b      	add	r3, r5
 800c9e8:	429d      	cmp	r5, r3
 800c9ea:	dc02      	bgt.n	800c9f2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c9ec:	429a      	cmp	r2, r3
 800c9ee:	dadf      	bge.n	800c9b0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800c9f0:	e7f1      	b.n	800c9d6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800c9f2:	2000      	movs	r0, #0
 800c9f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c9f6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800c9f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c9f8:	4604      	mov	r4, r0
 800c9fa:	4617      	mov	r7, r2
 800c9fc:	461e      	mov	r6, r3
 800c9fe:	b911      	cbnz	r1, 800ca06 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800ca00:	2500      	movs	r5, #0
 800ca02:	4628      	mov	r0, r5
 800ca04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ca06:	290a      	cmp	r1, #10
 800ca08:	d0fa      	beq.n	800ca00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca0a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800ca0e:	4291      	cmp	r1, r2
 800ca10:	d0f6      	beq.n	800ca00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca12:	f242 020b 	movw	r2, #8203	; 0x200b
 800ca16:	4291      	cmp	r1, r2
 800ca18:	d0f2      	beq.n	800ca00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca1a:	f7ff ffaf 	bl	800c97c <_ZNK8touchgfx9ConstFont4findEt>
 800ca1e:	4605      	mov	r5, r0
 800ca20:	b950      	cbnz	r0, 800ca38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800ca22:	6823      	ldr	r3, [r4, #0]
 800ca24:	4620      	mov	r0, r4
 800ca26:	691b      	ldr	r3, [r3, #16]
 800ca28:	4798      	blx	r3
 800ca2a:	4601      	mov	r1, r0
 800ca2c:	4620      	mov	r0, r4
 800ca2e:	f7ff ffa5 	bl	800c97c <_ZNK8touchgfx9ConstFont4findEt>
 800ca32:	4605      	mov	r5, r0
 800ca34:	2800      	cmp	r0, #0
 800ca36:	d0e3      	beq.n	800ca00 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800ca38:	6823      	ldr	r3, [r4, #0]
 800ca3a:	4629      	mov	r1, r5
 800ca3c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ca3e:	4620      	mov	r0, r4
 800ca40:	4798      	blx	r3
 800ca42:	6038      	str	r0, [r7, #0]
 800ca44:	6823      	ldr	r3, [r4, #0]
 800ca46:	4620      	mov	r0, r4
 800ca48:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ca4a:	4798      	blx	r3
 800ca4c:	7030      	strb	r0, [r6, #0]
 800ca4e:	e7d8      	b.n	800ca02 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800ca50 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800ca50:	b538      	push	{r3, r4, r5, lr}
 800ca52:	4605      	mov	r5, r0
 800ca54:	f001 fd66 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ca58:	4604      	mov	r4, r0
 800ca5a:	4628      	mov	r0, r5
 800ca5c:	f001 fc9e 	bl	800e39c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800ca60:	2800      	cmp	r0, #0
 800ca62:	bf14      	ite	ne
 800ca64:	2002      	movne	r0, #2
 800ca66:	2000      	moveq	r0, #0
 800ca68:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800ca6c:	b280      	uxth	r0, r0
 800ca6e:	bd38      	pop	{r3, r4, r5, pc}

0800ca70 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800ca70:	b538      	push	{r3, r4, r5, lr}
 800ca72:	4605      	mov	r5, r0
 800ca74:	f001 fd56 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ca78:	4604      	mov	r4, r0
 800ca7a:	4628      	mov	r0, r5
 800ca7c:	f001 fc8e 	bl	800e39c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800ca80:	2800      	cmp	r0, #0
 800ca82:	bf14      	ite	ne
 800ca84:	2002      	movne	r0, #2
 800ca86:	2000      	moveq	r0, #0
 800ca88:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800ca8c:	f040 0001 	orr.w	r0, r0, #1
 800ca90:	b280      	uxth	r0, r0
 800ca92:	bd38      	pop	{r3, r4, r5, pc}

0800ca94 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800ca94:	2000      	movs	r0, #0
 800ca96:	4770      	bx	lr

0800ca98 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800ca98:	2001      	movs	r0, #1
 800ca9a:	4770      	bx	lr

0800ca9c <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800ca9c:	2002      	movs	r0, #2
 800ca9e:	4770      	bx	lr

0800caa0 <_ZN8touchgfx6ScreenD1Ev>:
 800caa0:	4770      	bx	lr

0800caa2 <_ZN8touchgfx12GestureEventD1Ev>:
 800caa2:	4770      	bx	lr

0800caa4 <_ZN8touchgfx9DragEventD1Ev>:
 800caa4:	4770      	bx	lr

0800caa6 <_ZN8touchgfx10ClickEventD1Ev>:
 800caa6:	4770      	bx	lr

0800caa8 <_ZN8touchgfx10ClickEventD0Ev>:
 800caa8:	b510      	push	{r4, lr}
 800caaa:	210c      	movs	r1, #12
 800caac:	4604      	mov	r4, r0
 800caae:	f00d f998 	bl	8019de2 <_ZdlPvj>
 800cab2:	4620      	mov	r0, r4
 800cab4:	bd10      	pop	{r4, pc}

0800cab6 <_ZN8touchgfx9DragEventD0Ev>:
 800cab6:	b510      	push	{r4, lr}
 800cab8:	2110      	movs	r1, #16
 800caba:	4604      	mov	r4, r0
 800cabc:	f00d f991 	bl	8019de2 <_ZdlPvj>
 800cac0:	4620      	mov	r0, r4
 800cac2:	bd10      	pop	{r4, pc}

0800cac4 <_ZN8touchgfx12GestureEventD0Ev>:
 800cac4:	b510      	push	{r4, lr}
 800cac6:	210c      	movs	r1, #12
 800cac8:	4604      	mov	r4, r0
 800caca:	f00d f98a 	bl	8019de2 <_ZdlPvj>
 800cace:	4620      	mov	r0, r4
 800cad0:	bd10      	pop	{r4, pc}

0800cad2 <_ZN8touchgfx6ScreenD0Ev>:
 800cad2:	b510      	push	{r4, lr}
 800cad4:	213c      	movs	r1, #60	; 0x3c
 800cad6:	4604      	mov	r4, r0
 800cad8:	f00d f983 	bl	8019de2 <_ZdlPvj>
 800cadc:	4620      	mov	r0, r4
 800cade:	bd10      	pop	{r4, pc}

0800cae0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800cae0:	b530      	push	{r4, r5, lr}
 800cae2:	460d      	mov	r5, r1
 800cae4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800cae6:	b087      	sub	sp, #28
 800cae8:	4604      	mov	r4, r0
 800caea:	b301      	cbz	r1, 800cb2e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800caec:	a801      	add	r0, sp, #4
 800caee:	f7ff ff10 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800caf2:	892a      	ldrh	r2, [r5, #8]
 800caf4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800caf8:	7928      	ldrb	r0, [r5, #4]
 800cafa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800cafe:	f88d 0010 	strb.w	r0, [sp, #16]
 800cb02:	1ad2      	subs	r2, r2, r3
 800cb04:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800cb06:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800cb08:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cb0c:	441a      	add	r2, r3
 800cb0e:	896b      	ldrh	r3, [r5, #10]
 800cb10:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800cb14:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cb18:	1b5b      	subs	r3, r3, r5
 800cb1a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800cb1c:	442b      	add	r3, r5
 800cb1e:	4d05      	ldr	r5, [pc, #20]	; (800cb34 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800cb20:	9503      	str	r5, [sp, #12]
 800cb22:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cb26:	6803      	ldr	r3, [r0, #0]
 800cb28:	a903      	add	r1, sp, #12
 800cb2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cb2c:	4798      	blx	r3
 800cb2e:	b007      	add	sp, #28
 800cb30:	bd30      	pop	{r4, r5, pc}
 800cb32:	bf00      	nop
 800cb34:	0801cda0 	.word	0x0801cda0

0800cb38 <_ZNK8touchgfx4Rect9intersectEss>:
 800cb38:	b510      	push	{r4, lr}
 800cb3a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cb3e:	428b      	cmp	r3, r1
 800cb40:	dc10      	bgt.n	800cb64 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cb42:	8884      	ldrh	r4, [r0, #4]
 800cb44:	4423      	add	r3, r4
 800cb46:	b21b      	sxth	r3, r3
 800cb48:	4299      	cmp	r1, r3
 800cb4a:	da0b      	bge.n	800cb64 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cb4c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cb50:	4293      	cmp	r3, r2
 800cb52:	dc07      	bgt.n	800cb64 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800cb54:	88c0      	ldrh	r0, [r0, #6]
 800cb56:	4418      	add	r0, r3
 800cb58:	b200      	sxth	r0, r0
 800cb5a:	4282      	cmp	r2, r0
 800cb5c:	bfac      	ite	ge
 800cb5e:	2000      	movge	r0, #0
 800cb60:	2001      	movlt	r0, #1
 800cb62:	bd10      	pop	{r4, pc}
 800cb64:	2000      	movs	r0, #0
 800cb66:	e7fc      	b.n	800cb62 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800cb68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800cb68:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cb6a:	460c      	mov	r4, r1
 800cb6c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800cb6e:	b089      	sub	sp, #36	; 0x24
 800cb70:	4605      	mov	r5, r0
 800cb72:	2900      	cmp	r1, #0
 800cb74:	d054      	beq.n	800cc20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800cb76:	4668      	mov	r0, sp
 800cb78:	f7ff fecb 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cb7c:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800cb7e:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800cb80:	8922      	ldrh	r2, [r4, #8]
 800cb82:	88e1      	ldrh	r1, [r4, #6]
 800cb84:	443a      	add	r2, r7
 800cb86:	4431      	add	r1, r6
 800cb88:	b212      	sxth	r2, r2
 800cb8a:	b209      	sxth	r1, r1
 800cb8c:	4668      	mov	r0, sp
 800cb8e:	f7ff ffd3 	bl	800cb38 <_ZNK8touchgfx4Rect9intersectEss>
 800cb92:	b1d0      	cbz	r0, 800cbca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800cb94:	89a2      	ldrh	r2, [r4, #12]
 800cb96:	8961      	ldrh	r1, [r4, #10]
 800cb98:	443a      	add	r2, r7
 800cb9a:	4431      	add	r1, r6
 800cb9c:	b212      	sxth	r2, r2
 800cb9e:	b209      	sxth	r1, r1
 800cba0:	4668      	mov	r0, sp
 800cba2:	f7ff ffc9 	bl	800cb38 <_ZNK8touchgfx4Rect9intersectEss>
 800cba6:	4603      	mov	r3, r0
 800cba8:	b978      	cbnz	r0, 800cbca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800cbaa:	4a1e      	ldr	r2, [pc, #120]	; (800cc24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800cbac:	9204      	str	r2, [sp, #16]
 800cbae:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800cbb0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cbb4:	2202      	movs	r2, #2
 800cbb6:	f88d 2014 	strb.w	r2, [sp, #20]
 800cbba:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cbbe:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cbc2:	6803      	ldr	r3, [r0, #0]
 800cbc4:	a904      	add	r1, sp, #16
 800cbc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cbc8:	4798      	blx	r3
 800cbca:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800cbcc:	a802      	add	r0, sp, #8
 800cbce:	f7ff fea0 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cbd2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800cbd6:	88e0      	ldrh	r0, [r4, #6]
 800cbd8:	8961      	ldrh	r1, [r4, #10]
 800cbda:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800cbde:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800cbe2:	8923      	ldrh	r3, [r4, #8]
 800cbe4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800cbe6:	7927      	ldrb	r7, [r4, #4]
 800cbe8:	f88d 7014 	strb.w	r7, [sp, #20]
 800cbec:	1a80      	subs	r0, r0, r2
 800cbee:	1a89      	subs	r1, r1, r2
 800cbf0:	89a2      	ldrh	r2, [r4, #12]
 800cbf2:	4c0d      	ldr	r4, [pc, #52]	; (800cc28 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800cbf4:	9404      	str	r4, [sp, #16]
 800cbf6:	4460      	add	r0, ip
 800cbf8:	eba3 030e 	sub.w	r3, r3, lr
 800cbfc:	eba2 020e 	sub.w	r2, r2, lr
 800cc00:	f8ad 0016 	strh.w	r0, [sp, #22]
 800cc04:	4433      	add	r3, r6
 800cc06:	4461      	add	r1, ip
 800cc08:	4432      	add	r2, r6
 800cc0a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800cc0c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800cc10:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cc14:	f8ad 201c 	strh.w	r2, [sp, #28]
 800cc18:	6803      	ldr	r3, [r0, #0]
 800cc1a:	a904      	add	r1, sp, #16
 800cc1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800cc1e:	4798      	blx	r3
 800cc20:	b009      	add	sp, #36	; 0x24
 800cc22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cc24:	0801cd78 	.word	0x0801cd78
 800cc28:	0801cd8c 	.word	0x0801cd8c

0800cc2c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800cc2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc30:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800cc34:	790b      	ldrb	r3, [r1, #4]
 800cc36:	b0a1      	sub	sp, #132	; 0x84
 800cc38:	4604      	mov	r4, r0
 800cc3a:	460d      	mov	r5, r1
 800cc3c:	f1b9 0f00 	cmp.w	r9, #0
 800cc40:	d00f      	beq.n	800cc62 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800cc42:	2b00      	cmp	r3, #0
 800cc44:	f040 80a0 	bne.w	800cd88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800cc48:	b021      	add	sp, #132	; 0x84
 800cc4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc4e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800cc52:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cc56:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800cc5a:	1d20      	adds	r0, r4, #4
 800cc5c:	f7fc fa1a 	bl	8009094 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800cc60:	e092      	b.n	800cd88 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800cc62:	2b00      	cmp	r3, #0
 800cc64:	d1f0      	bne.n	800cc48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cc66:	4b5e      	ldr	r3, [pc, #376]	; (800cde0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800cc68:	681b      	ldr	r3, [r3, #0]
 800cc6a:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800cc6e:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800cc72:	f1ba 0f03 	cmp.w	sl, #3
 800cc76:	ddea      	ble.n	800cc4e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800cc78:	f1ba 0f0c 	cmp.w	sl, #12
 800cc7c:	f04f 0303 	mov.w	r3, #3
 800cc80:	bfdc      	itt	le
 800cc82:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800cc86:	fb92 f3f3 	sdivle	r3, r2, r3
 800cc8a:	9301      	str	r3, [sp, #4]
 800cc8c:	4b55      	ldr	r3, [pc, #340]	; (800cde4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800cc8e:	4956      	ldr	r1, [pc, #344]	; (800cde8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800cc90:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cc94:	4b55      	ldr	r3, [pc, #340]	; (800cdec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800cc96:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800cc9a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cc9e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800cca2:	ab0e      	add	r3, sp, #56	; 0x38
 800cca4:	2248      	movs	r2, #72	; 0x48
 800cca6:	2600      	movs	r6, #0
 800cca8:	4618      	mov	r0, r3
 800ccaa:	960a      	str	r6, [sp, #40]	; 0x28
 800ccac:	f00d f946 	bl	8019f3c <memcpy>
 800ccb0:	f04f 32ff 	mov.w	r2, #4294967295
 800ccb4:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800ccb8:	f8cd a008 	str.w	sl, [sp, #8]
 800ccbc:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ccc0:	fb93 f3f2 	sdiv	r3, r3, r2
 800ccc4:	b29b      	uxth	r3, r3
 800ccc6:	46b3      	mov	fp, r6
 800ccc8:	9303      	str	r3, [sp, #12]
 800ccca:	2300      	movs	r3, #0
 800cccc:	9309      	str	r3, [sp, #36]	; 0x24
 800ccce:	9b07      	ldr	r3, [sp, #28]
 800ccd0:	9a03      	ldr	r2, [sp, #12]
 800ccd2:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800ccd6:	88ef      	ldrh	r7, [r5, #6]
 800ccd8:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800ccdc:	fb13 f302 	smulbb	r3, r3, r2
 800cce0:	b29b      	uxth	r3, r3
 800cce2:	9304      	str	r3, [sp, #16]
 800cce4:	9b07      	ldr	r3, [sp, #28]
 800cce6:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800ccea:	a80a      	add	r0, sp, #40	; 0x28
 800ccec:	685b      	ldr	r3, [r3, #4]
 800ccee:	fb13 f302 	smulbb	r3, r3, r2
 800ccf2:	b29b      	uxth	r3, r3
 800ccf4:	9305      	str	r3, [sp, #20]
 800ccf6:	9b04      	ldr	r3, [sp, #16]
 800ccf8:	441f      	add	r7, r3
 800ccfa:	9b05      	ldr	r3, [sp, #20]
 800ccfc:	4498      	add	r8, r3
 800ccfe:	b23f      	sxth	r7, r7
 800cd00:	fa0f f888 	sxth.w	r8, r8
 800cd04:	4642      	mov	r2, r8
 800cd06:	4639      	mov	r1, r7
 800cd08:	f7ff ff16 	bl	800cb38 <_ZNK8touchgfx4Rect9intersectEss>
 800cd0c:	b380      	cbz	r0, 800cd70 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cd0e:	4639      	mov	r1, r7
 800cd10:	ab09      	add	r3, sp, #36	; 0x24
 800cd12:	4642      	mov	r2, r8
 800cd14:	1d20      	adds	r0, r4, #4
 800cd16:	f7fc f9bd 	bl	8009094 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800cd1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800cd1c:	b341      	cbz	r1, 800cd70 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cd1e:	4549      	cmp	r1, r9
 800cd20:	d026      	beq.n	800cd70 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cd22:	a80c      	add	r0, sp, #48	; 0x30
 800cd24:	f7ff fdf5 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cd28:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800cd2c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cd30:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800cd34:	2002      	movs	r0, #2
 800cd36:	fb92 f2f0 	sdiv	r2, r2, r0
 800cd3a:	440a      	add	r2, r1
 800cd3c:	1a99      	subs	r1, r3, r2
 800cd3e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800cd42:	fb93 f3f0 	sdiv	r3, r3, r0
 800cd46:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800cd4a:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800cd4e:	4403      	add	r3, r0
 800cd50:	1ad3      	subs	r3, r2, r3
 800cd52:	435b      	muls	r3, r3
 800cd54:	9a06      	ldr	r2, [sp, #24]
 800cd56:	fb01 3301 	mla	r3, r1, r1, r3
 800cd5a:	4293      	cmp	r3, r2
 800cd5c:	d208      	bcs.n	800cd70 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800cd5e:	9a04      	ldr	r2, [sp, #16]
 800cd60:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800cd64:	86a2      	strh	r2, [r4, #52]	; 0x34
 800cd66:	9a05      	ldr	r2, [sp, #20]
 800cd68:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800cd6c:	86e2      	strh	r2, [r4, #54]	; 0x36
 800cd6e:	9306      	str	r3, [sp, #24]
 800cd70:	f10b 0b02 	add.w	fp, fp, #2
 800cd74:	f1bb 0f08 	cmp.w	fp, #8
 800cd78:	dda7      	ble.n	800ccca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800cd7a:	9b02      	ldr	r3, [sp, #8]
 800cd7c:	4453      	add	r3, sl
 800cd7e:	9302      	str	r3, [sp, #8]
 800cd80:	9b01      	ldr	r3, [sp, #4]
 800cd82:	3601      	adds	r6, #1
 800cd84:	42b3      	cmp	r3, r6
 800cd86:	d199      	bne.n	800ccbc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800cd88:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd8a:	2900      	cmp	r1, #0
 800cd8c:	f43f af5c 	beq.w	800cc48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cd90:	a80c      	add	r0, sp, #48	; 0x30
 800cd92:	f7ff fdbe 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800cd96:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800cd9a:	88ea      	ldrh	r2, [r5, #6]
 800cd9c:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800cda0:	7929      	ldrb	r1, [r5, #4]
 800cda2:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800cda6:	1ad2      	subs	r2, r2, r3
 800cda8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800cdaa:	441a      	add	r2, r3
 800cdac:	892b      	ldrh	r3, [r5, #8]
 800cdae:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800cdb2:	1a1b      	subs	r3, r3, r0
 800cdb4:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800cdb6:	4403      	add	r3, r0
 800cdb8:	480d      	ldr	r0, [pc, #52]	; (800cdf0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800cdba:	900e      	str	r0, [sp, #56]	; 0x38
 800cdbc:	2600      	movs	r6, #0
 800cdbe:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800cdc0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800cdc4:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800cdc8:	6803      	ldr	r3, [r0, #0]
 800cdca:	a90e      	add	r1, sp, #56	; 0x38
 800cdcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800cdce:	4798      	blx	r3
 800cdd0:	792b      	ldrb	r3, [r5, #4]
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	f43f af38 	beq.w	800cc48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cdd8:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800cddc:	e734      	b.n	800cc48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800cdde:	bf00      	nop
 800cde0:	2000a39c 	.word	0x2000a39c
 800cde4:	2000a390 	.word	0x2000a390
 800cde8:	0801afb8 	.word	0x0801afb8
 800cdec:	2000a392 	.word	0x2000a392
 800cdf0:	0801cd78 	.word	0x0801cd78

0800cdf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800cdf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cdf6:	4604      	mov	r4, r0
 800cdf8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800cdfc:	3201      	adds	r2, #1
 800cdfe:	d112      	bne.n	800ce26 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800ce00:	6803      	ldr	r3, [r0, #0]
 800ce02:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800ce06:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800ce0a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800ce0e:	2500      	movs	r5, #0
 800ce10:	9500      	str	r5, [sp, #0]
 800ce12:	466d      	mov	r5, sp
 800ce14:	4629      	mov	r1, r5
 800ce16:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ce1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce1c:	4798      	blx	r3
 800ce1e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ce22:	e884 0003 	stmia.w	r4, {r0, r1}
 800ce26:	4620      	mov	r0, r4
 800ce28:	b003      	add	sp, #12
 800ce2a:	bd30      	pop	{r4, r5, pc}

0800ce2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ce2c:	b513      	push	{r0, r1, r4, lr}
 800ce2e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ce32:	3301      	adds	r3, #1
 800ce34:	4604      	mov	r4, r0
 800ce36:	d109      	bne.n	800ce4c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ce38:	4601      	mov	r1, r0
 800ce3a:	4668      	mov	r0, sp
 800ce3c:	f7ff fd69 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ce40:	f8bd 3000 	ldrh.w	r3, [sp]
 800ce44:	8423      	strh	r3, [r4, #32]
 800ce46:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ce4a:	8463      	strh	r3, [r4, #34]	; 0x22
 800ce4c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ce50:	b002      	add	sp, #8
 800ce52:	bd10      	pop	{r4, pc}

0800ce54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ce54:	b513      	push	{r0, r1, r4, lr}
 800ce56:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ce5a:	3301      	adds	r3, #1
 800ce5c:	4604      	mov	r4, r0
 800ce5e:	d109      	bne.n	800ce74 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ce60:	4601      	mov	r1, r0
 800ce62:	4668      	mov	r0, sp
 800ce64:	f7ff fd55 	bl	800c912 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ce68:	f8bd 3000 	ldrh.w	r3, [sp]
 800ce6c:	8423      	strh	r3, [r4, #32]
 800ce6e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ce72:	8463      	strh	r3, [r4, #34]	; 0x22
 800ce74:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ce78:	b002      	add	sp, #8
 800ce7a:	bd10      	pop	{r4, pc}

0800ce7c <_ZN8touchgfx6ScreenC1Ev>:
 800ce7c:	b570      	push	{r4, r5, r6, lr}
 800ce7e:	4605      	mov	r5, r0
 800ce80:	4b15      	ldr	r3, [pc, #84]	; (800ced8 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 800ce82:	f845 3b04 	str.w	r3, [r5], #4
 800ce86:	2300      	movs	r3, #0
 800ce88:	8103      	strh	r3, [r0, #8]
 800ce8a:	8143      	strh	r3, [r0, #10]
 800ce8c:	8183      	strh	r3, [r0, #12]
 800ce8e:	81c3      	strh	r3, [r0, #14]
 800ce90:	8203      	strh	r3, [r0, #16]
 800ce92:	8243      	strh	r3, [r0, #18]
 800ce94:	8283      	strh	r3, [r0, #20]
 800ce96:	82c3      	strh	r3, [r0, #22]
 800ce98:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800ce9c:	6203      	str	r3, [r0, #32]
 800ce9e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800cea2:	4a0e      	ldr	r2, [pc, #56]	; (800cedc <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800cea4:	6343      	str	r3, [r0, #52]	; 0x34
 800cea6:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800ceaa:	4b0d      	ldr	r3, [pc, #52]	; (800cee0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ceac:	6042      	str	r2, [r0, #4]
 800ceae:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ceb2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800ceb4:	4a0b      	ldr	r2, [pc, #44]	; (800cee4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ceb6:	4604      	mov	r4, r0
 800ceb8:	2101      	movs	r1, #1
 800ceba:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800cebe:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800cec2:	f9b2 1000 	ldrsh.w	r1, [r2]
 800cec6:	4628      	mov	r0, r5
 800cec8:	4798      	blx	r3
 800ceca:	6863      	ldr	r3, [r4, #4]
 800cecc:	4628      	mov	r0, r5
 800cece:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ced0:	4631      	mov	r1, r6
 800ced2:	4798      	blx	r3
 800ced4:	4620      	mov	r0, r4
 800ced6:	bd70      	pop	{r4, r5, r6, pc}
 800ced8:	0801cdb4 	.word	0x0801cdb4
 800cedc:	0801c294 	.word	0x0801c294
 800cee0:	2000a392 	.word	0x2000a392
 800cee4:	2000a390 	.word	0x2000a390

0800cee8 <_ZN8touchgfx6Screen4drawEv>:
 800cee8:	b507      	push	{r0, r1, r2, lr}
 800ceea:	4b09      	ldr	r3, [pc, #36]	; (800cf10 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800ceec:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cef0:	4b08      	ldr	r3, [pc, #32]	; (800cf14 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800cef2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cef6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cefa:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cefe:	6803      	ldr	r3, [r0, #0]
 800cf00:	2100      	movs	r1, #0
 800cf02:	9100      	str	r1, [sp, #0]
 800cf04:	689b      	ldr	r3, [r3, #8]
 800cf06:	4669      	mov	r1, sp
 800cf08:	4798      	blx	r3
 800cf0a:	b003      	add	sp, #12
 800cf0c:	f85d fb04 	ldr.w	pc, [sp], #4
 800cf10:	2000a390 	.word	0x2000a390
 800cf14:	2000a392 	.word	0x2000a392

0800cf18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800cf18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf1c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cf20:	2b00      	cmp	r3, #0
 800cf22:	b089      	sub	sp, #36	; 0x24
 800cf24:	4680      	mov	r8, r0
 800cf26:	460c      	mov	r4, r1
 800cf28:	4615      	mov	r5, r2
 800cf2a:	dd0e      	ble.n	800cf4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cf2c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cf30:	2b00      	cmp	r3, #0
 800cf32:	dd0a      	ble.n	800cf4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cf34:	4628      	mov	r0, r5
 800cf36:	f7ff ff5d 	bl	800cdf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cf3a:	4621      	mov	r1, r4
 800cf3c:	f7fe fc0e 	bl	800b75c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cf40:	69eb      	ldr	r3, [r5, #28]
 800cf42:	b928      	cbnz	r0, 800cf50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800cf44:	461d      	mov	r5, r3
 800cf46:	2b00      	cmp	r3, #0
 800cf48:	d1f4      	bne.n	800cf34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800cf4a:	b009      	add	sp, #36	; 0x24
 800cf4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf50:	ae04      	add	r6, sp, #16
 800cf52:	2b00      	cmp	r3, #0
 800cf54:	f000 80b5 	beq.w	800d0c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800cf58:	682b      	ldr	r3, [r5, #0]
 800cf5a:	4629      	mov	r1, r5
 800cf5c:	68db      	ldr	r3, [r3, #12]
 800cf5e:	a802      	add	r0, sp, #8
 800cf60:	4798      	blx	r3
 800cf62:	4628      	mov	r0, r5
 800cf64:	f7ff ff62 	bl	800ce2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cf68:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800cf6c:	4407      	add	r7, r0
 800cf6e:	4628      	mov	r0, r5
 800cf70:	f7ff ff70 	bl	800ce54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800cf74:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cf78:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800cf7c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cf80:	4418      	add	r0, r3
 800cf82:	4621      	mov	r1, r4
 800cf84:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cf88:	f8ad 0012 	strh.w	r0, [sp, #18]
 800cf8c:	b23f      	sxth	r7, r7
 800cf8e:	4630      	mov	r0, r6
 800cf90:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cf94:	f8ad 7010 	strh.w	r7, [sp, #16]
 800cf98:	f7fc f936 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800cf9c:	4628      	mov	r0, r5
 800cf9e:	f7ff ff29 	bl	800cdf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cfa2:	4602      	mov	r2, r0
 800cfa4:	e896 0003 	ldmia.w	r6, {r0, r1}
 800cfa8:	ab06      	add	r3, sp, #24
 800cfaa:	e883 0003 	stmia.w	r3, {r0, r1}
 800cfae:	4611      	mov	r1, r2
 800cfb0:	4618      	mov	r0, r3
 800cfb2:	f7fc f929 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800cfb6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cfba:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cfbe:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800cfc2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800cfc6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800cfca:	4299      	cmp	r1, r3
 800cfcc:	d10b      	bne.n	800cfe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800cfce:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cfd2:	4552      	cmp	r2, sl
 800cfd4:	d107      	bne.n	800cfe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800cfd6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cfda:	455a      	cmp	r2, fp
 800cfdc:	d103      	bne.n	800cfe6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800cfde:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cfe2:	454a      	cmp	r2, r9
 800cfe4:	d06d      	beq.n	800d0c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800cfe6:	f1bb 0f00 	cmp.w	fp, #0
 800cfea:	dd65      	ble.n	800d0b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800cfec:	f1b9 0f00 	cmp.w	r9, #0
 800cff0:	dd62      	ble.n	800d0b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800cff2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cff6:	fa1f f08a 	uxth.w	r0, sl
 800cffa:	4552      	cmp	r2, sl
 800cffc:	9000      	str	r0, [sp, #0]
 800cffe:	da12      	bge.n	800d026 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800d000:	9301      	str	r3, [sp, #4]
 800d002:	9b00      	ldr	r3, [sp, #0]
 800d004:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800d008:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d00c:	1a9a      	subs	r2, r3, r2
 800d00e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800d012:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d016:	f8ad 2016 	strh.w	r2, [sp, #22]
 800d01a:	69ea      	ldr	r2, [r5, #28]
 800d01c:	4631      	mov	r1, r6
 800d01e:	4640      	mov	r0, r8
 800d020:	f7ff ff7a 	bl	800cf18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d024:	9b01      	ldr	r3, [sp, #4]
 800d026:	f9b4 2000 	ldrsh.w	r2, [r4]
 800d02a:	429a      	cmp	r2, r3
 800d02c:	b29f      	uxth	r7, r3
 800d02e:	da0d      	bge.n	800d04c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800d030:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d034:	1aba      	subs	r2, r7, r2
 800d036:	f8ad a012 	strh.w	sl, [sp, #18]
 800d03a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d03e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d042:	69ea      	ldr	r2, [r5, #28]
 800d044:	4631      	mov	r1, r6
 800d046:	4640      	mov	r0, r8
 800d048:	f7ff ff66 	bl	800cf18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d04c:	8822      	ldrh	r2, [r4, #0]
 800d04e:	88a3      	ldrh	r3, [r4, #4]
 800d050:	445f      	add	r7, fp
 800d052:	4413      	add	r3, r2
 800d054:	b29b      	uxth	r3, r3
 800d056:	b2bf      	uxth	r7, r7
 800d058:	b23a      	sxth	r2, r7
 800d05a:	b219      	sxth	r1, r3
 800d05c:	4291      	cmp	r1, r2
 800d05e:	dd0d      	ble.n	800d07c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800d060:	1bdb      	subs	r3, r3, r7
 800d062:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d066:	f8ad a012 	strh.w	sl, [sp, #18]
 800d06a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d06e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800d072:	69ea      	ldr	r2, [r5, #28]
 800d074:	4631      	mov	r1, r6
 800d076:	4640      	mov	r0, r8
 800d078:	f7ff ff4e 	bl	800cf18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d07c:	88e2      	ldrh	r2, [r4, #6]
 800d07e:	8863      	ldrh	r3, [r4, #2]
 800d080:	4413      	add	r3, r2
 800d082:	9a00      	ldr	r2, [sp, #0]
 800d084:	444a      	add	r2, r9
 800d086:	b29b      	uxth	r3, r3
 800d088:	fa1f f982 	uxth.w	r9, r2
 800d08c:	fa0f f289 	sxth.w	r2, r9
 800d090:	b219      	sxth	r1, r3
 800d092:	428a      	cmp	r2, r1
 800d094:	da15      	bge.n	800d0c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800d096:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d09a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d09e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d0a2:	eba3 0309 	sub.w	r3, r3, r9
 800d0a6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d0aa:	f8ad 2012 	strh.w	r2, [sp, #18]
 800d0ae:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d0b2:	69ea      	ldr	r2, [r5, #28]
 800d0b4:	4631      	mov	r1, r6
 800d0b6:	e001      	b.n	800d0bc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800d0b8:	69ea      	ldr	r2, [r5, #28]
 800d0ba:	4621      	mov	r1, r4
 800d0bc:	4640      	mov	r0, r8
 800d0be:	f7ff ff2b 	bl	800cf18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d0c2:	4628      	mov	r0, r5
 800d0c4:	f7ff fe96 	bl	800cdf4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800d0c8:	6861      	ldr	r1, [r4, #4]
 800d0ca:	4602      	mov	r2, r0
 800d0cc:	6820      	ldr	r0, [r4, #0]
 800d0ce:	4633      	mov	r3, r6
 800d0d0:	c303      	stmia	r3!, {r0, r1}
 800d0d2:	4611      	mov	r1, r2
 800d0d4:	4630      	mov	r0, r6
 800d0d6:	f7fc f897 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800d0da:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800d0de:	2b00      	cmp	r3, #0
 800d0e0:	f77f af33 	ble.w	800cf4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d0e4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d0e8:	2b00      	cmp	r3, #0
 800d0ea:	f77f af2e 	ble.w	800cf4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800d0ee:	4628      	mov	r0, r5
 800d0f0:	f7ff fe9c 	bl	800ce2c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800d0f4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d0f8:	1a18      	subs	r0, r3, r0
 800d0fa:	f8ad 0010 	strh.w	r0, [sp, #16]
 800d0fe:	4628      	mov	r0, r5
 800d100:	f7ff fea8 	bl	800ce54 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800d104:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d108:	1a18      	subs	r0, r3, r0
 800d10a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800d10e:	682b      	ldr	r3, [r5, #0]
 800d110:	4631      	mov	r1, r6
 800d112:	689b      	ldr	r3, [r3, #8]
 800d114:	4628      	mov	r0, r5
 800d116:	4798      	blx	r3
 800d118:	e717      	b.n	800cf4a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800d11a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800d11a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d11c:	aa02      	add	r2, sp, #8
 800d11e:	2300      	movs	r3, #0
 800d120:	f842 3d04 	str.w	r3, [r2, #-4]!
 800d124:	4604      	mov	r4, r0
 800d126:	3004      	adds	r0, #4
 800d128:	460d      	mov	r5, r1
 800d12a:	f7fc f945 	bl	80093b8 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800d12e:	9a01      	ldr	r2, [sp, #4]
 800d130:	b11a      	cbz	r2, 800d13a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800d132:	4629      	mov	r1, r5
 800d134:	4620      	mov	r0, r4
 800d136:	f7ff feef 	bl	800cf18 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800d13a:	b003      	add	sp, #12
 800d13c:	bd30      	pop	{r4, r5, pc}

0800d13e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800d13e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d140:	4602      	mov	r2, r0
 800d142:	4604      	mov	r4, r0
 800d144:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800d148:	460d      	mov	r5, r1
 800d14a:	6851      	ldr	r1, [r2, #4]
 800d14c:	466b      	mov	r3, sp
 800d14e:	c303      	stmia	r3!, {r0, r1}
 800d150:	4629      	mov	r1, r5
 800d152:	4668      	mov	r0, sp
 800d154:	f7fc f858 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 800d158:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800d15c:	4669      	mov	r1, sp
 800d15e:	b123      	cbz	r3, 800d16a <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800d160:	4620      	mov	r0, r4
 800d162:	f7ff ffda 	bl	800d11a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800d166:	b003      	add	sp, #12
 800d168:	bd30      	pop	{r4, r5, pc}
 800d16a:	1d20      	adds	r0, r4, #4
 800d16c:	f7fc f8eb 	bl	8009346 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800d170:	e7f9      	b.n	800d166 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800d172 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800d172:	680a      	ldr	r2, [r1, #0]
 800d174:	460b      	mov	r3, r1
 800d176:	6992      	ldr	r2, [r2, #24]
 800d178:	1d01      	adds	r1, r0, #4
 800d17a:	4618      	mov	r0, r3
 800d17c:	4710      	bx	r2

0800d17e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800d17e:	b510      	push	{r4, lr}
 800d180:	4298      	cmp	r0, r3
 800d182:	eb01 0402 	add.w	r4, r1, r2
 800d186:	b224      	sxth	r4, r4
 800d188:	d226      	bcs.n	800d1d8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800d18a:	b32b      	cbz	r3, 800d1d8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x5a>
 800d18c:	ee07 2a90 	vmov	s15, r2
 800d190:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800d194:	ee07 0a90 	vmov	s15, r0
 800d198:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800d19c:	ee07 3a90 	vmov	s15, r3
 800d1a0:	ee67 6a26 	vmul.f32	s13, s14, s13
 800d1a4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 800d1a8:	ee07 1a90 	vmov	s15, r1
 800d1ac:	ee86 7a86 	vdiv.f32	s14, s13, s12
 800d1b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d1b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800d1b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800d1bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d1c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d1c4:	bfcc      	ite	gt
 800d1c6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 800d1ca:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800d1ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d1d2:	ee17 3a90 	vmov	r3, s15
 800d1d6:	b21c      	sxth	r4, r3
 800d1d8:	4620      	mov	r0, r4
 800d1da:	bd10      	pop	{r4, pc}

0800d1dc <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 800d1dc:	f7ff bfcf 	b.w	800d17e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

0800d1e0 <_ZN8touchgfx12TextProviderC1Ev>:
 800d1e0:	b510      	push	{r4, lr}
 800d1e2:	2300      	movs	r3, #0
 800d1e4:	2201      	movs	r2, #1
 800d1e6:	4604      	mov	r4, r0
 800d1e8:	e9c0 3300 	strd	r3, r3, [r0]
 800d1ec:	60c3      	str	r3, [r0, #12]
 800d1ee:	7403      	strb	r3, [r0, #16]
 800d1f0:	82c3      	strh	r3, [r0, #22]
 800d1f2:	8303      	strh	r3, [r0, #24]
 800d1f4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800d1f6:	8603      	strh	r3, [r0, #48]	; 0x30
 800d1f8:	86c3      	strh	r3, [r0, #54]	; 0x36
 800d1fa:	8703      	strh	r3, [r0, #56]	; 0x38
 800d1fc:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d1fe:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d202:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d206:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800d20a:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800d20e:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800d212:	f7f5 fc39 	bl	8002a88 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800d216:	4620      	mov	r0, r4
 800d218:	bd10      	pop	{r4, pc}

0800d21a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800d21a:	b530      	push	{r4, r5, lr}
 800d21c:	2500      	movs	r5, #0
 800d21e:	2401      	movs	r4, #1
 800d220:	6843      	ldr	r3, [r0, #4]
 800d222:	b913      	cbnz	r3, 800d22a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800d224:	6803      	ldr	r3, [r0, #0]
 800d226:	b1f3      	cbz	r3, 800d266 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800d228:	6043      	str	r3, [r0, #4]
 800d22a:	7c03      	ldrb	r3, [r0, #16]
 800d22c:	b143      	cbz	r3, 800d240 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800d22e:	68c3      	ldr	r3, [r0, #12]
 800d230:	b12b      	cbz	r3, 800d23e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d232:	881a      	ldrh	r2, [r3, #0]
 800d234:	b11a      	cbz	r2, 800d23e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800d236:	1c9a      	adds	r2, r3, #2
 800d238:	60c2      	str	r2, [r0, #12]
 800d23a:	8818      	ldrh	r0, [r3, #0]
 800d23c:	bd30      	pop	{r4, r5, pc}
 800d23e:	7405      	strb	r5, [r0, #16]
 800d240:	6843      	ldr	r3, [r0, #4]
 800d242:	8819      	ldrh	r1, [r3, #0]
 800d244:	b179      	cbz	r1, 800d266 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800d246:	1c9a      	adds	r2, r3, #2
 800d248:	2902      	cmp	r1, #2
 800d24a:	6042      	str	r2, [r0, #4]
 800d24c:	d1f5      	bne.n	800d23a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800d24e:	6883      	ldr	r3, [r0, #8]
 800d250:	1d1a      	adds	r2, r3, #4
 800d252:	6082      	str	r2, [r0, #8]
 800d254:	681b      	ldr	r3, [r3, #0]
 800d256:	60c3      	str	r3, [r0, #12]
 800d258:	2b00      	cmp	r3, #0
 800d25a:	d0e1      	beq.n	800d220 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d25c:	881b      	ldrh	r3, [r3, #0]
 800d25e:	2b00      	cmp	r3, #0
 800d260:	d0de      	beq.n	800d220 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d262:	7404      	strb	r4, [r0, #16]
 800d264:	e7dc      	b.n	800d220 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800d266:	2000      	movs	r0, #0
 800d268:	e7e8      	b.n	800d23c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800d26a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800d26a:	b410      	push	{r4}
 800d26c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d26e:	2300      	movs	r3, #0
 800d270:	6082      	str	r2, [r0, #8]
 800d272:	6001      	str	r1, [r0, #0]
 800d274:	6043      	str	r3, [r0, #4]
 800d276:	60c3      	str	r3, [r0, #12]
 800d278:	7403      	strb	r3, [r0, #16]
 800d27a:	8603      	strh	r3, [r0, #48]	; 0x30
 800d27c:	8303      	strh	r3, [r0, #24]
 800d27e:	8703      	strh	r3, [r0, #56]	; 0x38
 800d280:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d284:	f7f5 bc00 	b.w	8002a88 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800d288 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800d288:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d28a:	4605      	mov	r5, r0
 800d28c:	4608      	mov	r0, r1
 800d28e:	b1e9      	cbz	r1, 800d2cc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800d290:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800d294:	460b      	mov	r3, r1
 800d296:	f101 0708 	add.w	r7, r1, #8
 800d29a:	4622      	mov	r2, r4
 800d29c:	6818      	ldr	r0, [r3, #0]
 800d29e:	6859      	ldr	r1, [r3, #4]
 800d2a0:	4626      	mov	r6, r4
 800d2a2:	c603      	stmia	r6!, {r0, r1}
 800d2a4:	3308      	adds	r3, #8
 800d2a6:	42bb      	cmp	r3, r7
 800d2a8:	4634      	mov	r4, r6
 800d2aa:	d1f7      	bne.n	800d29c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800d2ac:	6818      	ldr	r0, [r3, #0]
 800d2ae:	6030      	str	r0, [r6, #0]
 800d2b0:	889b      	ldrh	r3, [r3, #4]
 800d2b2:	80b3      	strh	r3, [r6, #4]
 800d2b4:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800d2b8:	015b      	lsls	r3, r3, #5
 800d2ba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d2be:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800d2c2:	430b      	orrs	r3, r1
 800d2c4:	425b      	negs	r3, r3
 800d2c6:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800d2ca:	4610      	mov	r0, r2
 800d2cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d2ce <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800d2ce:	b538      	push	{r3, r4, r5, lr}
 800d2d0:	460c      	mov	r4, r1
 800d2d2:	6811      	ldr	r1, [r2, #0]
 800d2d4:	4610      	mov	r0, r2
 800d2d6:	68cd      	ldr	r5, [r1, #12]
 800d2d8:	4619      	mov	r1, r3
 800d2da:	47a8      	blx	r5
 800d2dc:	2800      	cmp	r0, #0
 800d2de:	bf08      	it	eq
 800d2e0:	4620      	moveq	r0, r4
 800d2e2:	bd38      	pop	{r3, r4, r5, pc}

0800d2e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800d2e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d2e6:	4604      	mov	r4, r0
 800d2e8:	4615      	mov	r5, r2
 800d2ea:	4608      	mov	r0, r1
 800d2ec:	b93a      	cbnz	r2, 800d2fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800d2ee:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d2f2:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800d2f6:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800d2fa:	4628      	mov	r0, r5
 800d2fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d2fe:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800d302:	8893      	ldrh	r3, [r2, #4]
 800d304:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800d308:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d30c:	79ee      	ldrb	r6, [r5, #7]
 800d30e:	4316      	orrs	r6, r2
 800d310:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800d314:	189a      	adds	r2, r3, r2
 800d316:	b291      	uxth	r1, r2
 800d318:	291d      	cmp	r1, #29
 800d31a:	b2b7      	uxth	r7, r6
 800d31c:	f200 8083 	bhi.w	800d426 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d320:	2201      	movs	r2, #1
 800d322:	408a      	lsls	r2, r1
 800d324:	4978      	ldr	r1, [pc, #480]	; (800d508 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800d326:	420a      	tst	r2, r1
 800d328:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800d32c:	d12d      	bne.n	800d38a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800d32e:	f412 7f60 	tst.w	r2, #896	; 0x380
 800d332:	d078      	beq.n	800d426 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800d334:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800d338:	462b      	mov	r3, r5
 800d33a:	f105 0e08 	add.w	lr, r5, #8
 800d33e:	4615      	mov	r5, r2
 800d340:	6818      	ldr	r0, [r3, #0]
 800d342:	6859      	ldr	r1, [r3, #4]
 800d344:	4694      	mov	ip, r2
 800d346:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d34a:	3308      	adds	r3, #8
 800d34c:	4573      	cmp	r3, lr
 800d34e:	4662      	mov	r2, ip
 800d350:	d1f6      	bne.n	800d340 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800d352:	6818      	ldr	r0, [r3, #0]
 800d354:	f8cc 0000 	str.w	r0, [ip]
 800d358:	889b      	ldrh	r3, [r3, #4]
 800d35a:	f8ac 3004 	strh.w	r3, [ip, #4]
 800d35e:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800d362:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800d366:	b2b3      	uxth	r3, r6
 800d368:	1aca      	subs	r2, r1, r3
 800d36a:	b292      	uxth	r2, r2
 800d36c:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800d370:	10d2      	asrs	r2, r2, #3
 800d372:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800d376:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800d37a:	4302      	orrs	r2, r0
 800d37c:	1bcf      	subs	r7, r1, r7
 800d37e:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800d382:	1afb      	subs	r3, r7, r3
 800d384:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800d388:	e7b7      	b.n	800d2fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d38a:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d38c:	b92b      	cbnz	r3, 800d39a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800d38e:	4b5f      	ldr	r3, [pc, #380]	; (800d50c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800d390:	4a5f      	ldr	r2, [pc, #380]	; (800d510 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800d392:	4860      	ldr	r0, [pc, #384]	; (800d514 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800d394:	21c0      	movs	r1, #192	; 0xc0
 800d396:	f00c fd53 	bl	8019e40 <__assert_func>
 800d39a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d39c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d3a0:	8b59      	ldrh	r1, [r3, #26]
 800d3a2:	f640 6333 	movw	r3, #3635	; 0xe33
 800d3a6:	4299      	cmp	r1, r3
 800d3a8:	d110      	bne.n	800d3cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800d3aa:	6803      	ldr	r3, [r0, #0]
 800d3ac:	68db      	ldr	r3, [r3, #12]
 800d3ae:	4798      	blx	r3
 800d3b0:	7b41      	ldrb	r1, [r0, #13]
 800d3b2:	00cb      	lsls	r3, r1, #3
 800d3b4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3b8:	7a03      	ldrb	r3, [r0, #8]
 800d3ba:	0648      	lsls	r0, r1, #25
 800d3bc:	ea43 0302 	orr.w	r3, r3, r2
 800d3c0:	bf44      	itt	mi
 800d3c2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d3c6:	b21b      	sxthmi	r3, r3
 800d3c8:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d3cc:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800d3d0:	443b      	add	r3, r7
 800d3d2:	4433      	add	r3, r6
 800d3d4:	b29b      	uxth	r3, r3
 800d3d6:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800d3da:	462a      	mov	r2, r5
 800d3dc:	f105 0c08 	add.w	ip, r5, #8
 800d3e0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d3e4:	4635      	mov	r5, r6
 800d3e6:	6810      	ldr	r0, [r2, #0]
 800d3e8:	6851      	ldr	r1, [r2, #4]
 800d3ea:	4637      	mov	r7, r6
 800d3ec:	c703      	stmia	r7!, {r0, r1}
 800d3ee:	3208      	adds	r2, #8
 800d3f0:	4562      	cmp	r2, ip
 800d3f2:	463e      	mov	r6, r7
 800d3f4:	d1f7      	bne.n	800d3e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800d3f6:	6810      	ldr	r0, [r2, #0]
 800d3f8:	6038      	str	r0, [r7, #0]
 800d3fa:	8892      	ldrh	r2, [r2, #4]
 800d3fc:	80ba      	strh	r2, [r7, #4]
 800d3fe:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d402:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d406:	10db      	asrs	r3, r3, #3
 800d408:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d40c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d410:	4313      	orrs	r3, r2
 800d412:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d416:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800d41a:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800d41e:	1a9b      	subs	r3, r3, r2
 800d420:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800d424:	e769      	b.n	800d2fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800d426:	f023 0204 	bic.w	r2, r3, #4
 800d42a:	f640 611b 	movw	r1, #3611	; 0xe1b
 800d42e:	428a      	cmp	r2, r1
 800d430:	d003      	beq.n	800d43a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800d432:	f640 621d 	movw	r2, #3613	; 0xe1d
 800d436:	4293      	cmp	r3, r2
 800d438:	d120      	bne.n	800d47c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800d43a:	3b01      	subs	r3, #1
 800d43c:	4602      	mov	r2, r0
 800d43e:	b29b      	uxth	r3, r3
 800d440:	4629      	mov	r1, r5
 800d442:	4620      	mov	r0, r4
 800d444:	f7ff ff43 	bl	800d2ce <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d448:	7b41      	ldrb	r1, [r0, #13]
 800d44a:	00cb      	lsls	r3, r1, #3
 800d44c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d450:	7a03      	ldrb	r3, [r0, #8]
 800d452:	0649      	lsls	r1, r1, #25
 800d454:	ea43 0302 	orr.w	r3, r3, r2
 800d458:	bf44      	itt	mi
 800d45a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d45e:	b21b      	sxthmi	r3, r3
 800d460:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d464:	7b6b      	ldrb	r3, [r5, #13]
 800d466:	7aaa      	ldrb	r2, [r5, #10]
 800d468:	005b      	lsls	r3, r3, #1
 800d46a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d46e:	4313      	orrs	r3, r2
 800d470:	115a      	asrs	r2, r3, #5
 800d472:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800d476:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d47a:	e036      	b.n	800d4ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800d47c:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800d480:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800d484:	7a2a      	ldrb	r2, [r5, #8]
 800d486:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d48a:	ea42 0201 	orr.w	r2, r2, r1
 800d48e:	bf1c      	itt	ne
 800d490:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800d494:	b212      	sxthne	r2, r2
 800d496:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d49a:	f640 6109 	movw	r1, #3593	; 0xe09
 800d49e:	f023 0210 	bic.w	r2, r3, #16
 800d4a2:	428a      	cmp	r2, r1
 800d4a4:	d003      	beq.n	800d4ae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800d4a6:	f640 6213 	movw	r2, #3603	; 0xe13
 800d4aa:	4293      	cmp	r3, r2
 800d4ac:	d12a      	bne.n	800d504 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800d4ae:	7b6e      	ldrb	r6, [r5, #13]
 800d4b0:	0076      	lsls	r6, r6, #1
 800d4b2:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d4b6:	7aae      	ldrb	r6, [r5, #10]
 800d4b8:	4316      	orrs	r6, r2
 800d4ba:	f640 6213 	movw	r2, #3603	; 0xe13
 800d4be:	4293      	cmp	r3, r2
 800d4c0:	bf18      	it	ne
 800d4c2:	f103 33ff 	addne.w	r3, r3, #4294967295
 800d4c6:	4602      	mov	r2, r0
 800d4c8:	bf14      	ite	ne
 800d4ca:	b29b      	uxthne	r3, r3
 800d4cc:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800d4d0:	4629      	mov	r1, r5
 800d4d2:	4620      	mov	r0, r4
 800d4d4:	f7ff fefb 	bl	800d2ce <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d4d8:	7b43      	ldrb	r3, [r0, #13]
 800d4da:	7a82      	ldrb	r2, [r0, #10]
 800d4dc:	005b      	lsls	r3, r3, #1
 800d4de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d4e2:	4313      	orrs	r3, r2
 800d4e4:	1af6      	subs	r6, r6, r3
 800d4e6:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800d4ea:	7b69      	ldrb	r1, [r5, #13]
 800d4ec:	00cb      	lsls	r3, r1, #3
 800d4ee:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d4f2:	7a2b      	ldrb	r3, [r5, #8]
 800d4f4:	4313      	orrs	r3, r2
 800d4f6:	064a      	lsls	r2, r1, #25
 800d4f8:	bf44      	itt	mi
 800d4fa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d4fe:	b21b      	sxthmi	r3, r3
 800d500:	1bdb      	subs	r3, r3, r7
 800d502:	e73f      	b.n	800d384 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800d504:	2300      	movs	r3, #0
 800d506:	e7b6      	b.n	800d476 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800d508:	3fc00079 	.word	0x3fc00079
 800d50c:	0801bb90 	.word	0x0801bb90
 800d510:	0801d00f 	.word	0x0801d00f
 800d514:	0801bc62 	.word	0x0801bc62

0800d518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d518:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d51c:	4604      	mov	r4, r0
 800d51e:	b942      	cbnz	r2, 800d532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800d520:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d524:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d528:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d52c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d530:	e046      	b.n	800d5c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d532:	7b51      	ldrb	r1, [r2, #13]
 800d534:	8893      	ldrh	r3, [r2, #4]
 800d536:	010f      	lsls	r7, r1, #4
 800d538:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d53c:	79d7      	ldrb	r7, [r2, #7]
 800d53e:	4307      	orrs	r7, r0
 800d540:	2f04      	cmp	r7, #4
 800d542:	b2bd      	uxth	r5, r7
 800d544:	bfcc      	ite	gt
 800d546:	08bf      	lsrgt	r7, r7, #2
 800d548:	2701      	movle	r7, #1
 800d54a:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800d54e:	f200 80ab 	bhi.w	800d6a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d552:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800d556:	4283      	cmp	r3, r0
 800d558:	d216      	bcs.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d55a:	f240 605b 	movw	r0, #1627	; 0x65b
 800d55e:	4283      	cmp	r3, r0
 800d560:	d859      	bhi.n	800d616 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800d562:	f240 6057 	movw	r0, #1623	; 0x657
 800d566:	4283      	cmp	r3, r0
 800d568:	d20e      	bcs.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d56a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d56e:	d24a      	bcs.n	800d606 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800d570:	f240 604e 	movw	r0, #1614	; 0x64e
 800d574:	4283      	cmp	r3, r0
 800d576:	d207      	bcs.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d578:	f240 601a 	movw	r0, #1562	; 0x61a
 800d57c:	4283      	cmp	r3, r0
 800d57e:	d02a      	beq.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d580:	d821      	bhi.n	800d5c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800d582:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800d586:	d35b      	bcc.n	800d640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d588:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800d58c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d590:	f040 80d0 	bne.w	800d734 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d594:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800d598:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d59c:	f040 80ca 	bne.w	800d734 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d5a0:	00cb      	lsls	r3, r1, #3
 800d5a2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d5a6:	7a13      	ldrb	r3, [r2, #8]
 800d5a8:	0649      	lsls	r1, r1, #25
 800d5aa:	ea43 0300 	orr.w	r3, r3, r0
 800d5ae:	bf44      	itt	mi
 800d5b0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d5b4:	b21b      	sxthmi	r3, r3
 800d5b6:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d5ba:	1b5d      	subs	r5, r3, r5
 800d5bc:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d5c0:	4610      	mov	r0, r2
 800d5c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d5c6:	f240 604b 	movw	r0, #1611	; 0x64b
 800d5ca:	4283      	cmp	r3, r0
 800d5cc:	d338      	bcc.n	800d640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d5ce:	f240 604c 	movw	r0, #1612	; 0x64c
 800d5d2:	4283      	cmp	r3, r0
 800d5d4:	d9d8      	bls.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d5d6:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800d5da:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800d5de:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d5e2:	f040 80f1 	bne.w	800d7c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d5e6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d5ea:	f040 80ed 	bne.w	800d7c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d5ee:	00cb      	lsls	r3, r1, #3
 800d5f0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d5f4:	7a13      	ldrb	r3, [r2, #8]
 800d5f6:	064e      	lsls	r6, r1, #25
 800d5f8:	ea43 0300 	orr.w	r3, r3, r0
 800d5fc:	bf44      	itt	mi
 800d5fe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d602:	b21b      	sxthmi	r3, r3
 800d604:	e7d9      	b.n	800d5ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800d606:	f240 6054 	movw	r0, #1620	; 0x654
 800d60a:	4283      	cmp	r3, r0
 800d60c:	d8e3      	bhi.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d60e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d612:	d9e0      	bls.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d614:	e7b8      	b.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d616:	f240 6074 	movw	r0, #1652	; 0x674
 800d61a:	4283      	cmp	r3, r0
 800d61c:	d0b4      	beq.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d61e:	d82d      	bhi.n	800d67c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800d620:	f240 605e 	movw	r0, #1630	; 0x65e
 800d624:	4283      	cmp	r3, r0
 800d626:	d804      	bhi.n	800d632 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800d628:	f240 605d 	movw	r0, #1629	; 0x65d
 800d62c:	4283      	cmp	r3, r0
 800d62e:	d3d2      	bcc.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d630:	e7aa      	b.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d632:	f240 605f 	movw	r0, #1631	; 0x65f
 800d636:	4283      	cmp	r3, r0
 800d638:	d0cd      	beq.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d63a:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800d63e:	d0a3      	beq.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d640:	00cb      	lsls	r3, r1, #3
 800d642:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d646:	7a13      	ldrb	r3, [r2, #8]
 800d648:	0649      	lsls	r1, r1, #25
 800d64a:	ea43 0300 	orr.w	r3, r3, r0
 800d64e:	bf44      	itt	mi
 800d650:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d654:	b21b      	sxthmi	r3, r3
 800d656:	1b5d      	subs	r5, r3, r5
 800d658:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d65c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d660:	7b53      	ldrb	r3, [r2, #13]
 800d662:	015b      	lsls	r3, r3, #5
 800d664:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d668:	7993      	ldrb	r3, [r2, #6]
 800d66a:	430b      	orrs	r3, r1
 800d66c:	005b      	lsls	r3, r3, #1
 800d66e:	2105      	movs	r1, #5
 800d670:	fb93 f3f1 	sdiv	r3, r3, r1
 800d674:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d678:	440b      	add	r3, r1
 800d67a:	e757      	b.n	800d52c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d67c:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d680:	4283      	cmp	r3, r0
 800d682:	d809      	bhi.n	800d698 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d684:	f240 60df 	movw	r0, #1759	; 0x6df
 800d688:	4283      	cmp	r3, r0
 800d68a:	f4bf af7d 	bcs.w	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d68e:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d692:	2b05      	cmp	r3, #5
 800d694:	d8d4      	bhi.n	800d640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d696:	e777      	b.n	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d698:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800d69c:	4283      	cmp	r3, r0
 800d69e:	d09a      	beq.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d6a0:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800d6a4:	4283      	cmp	r3, r0
 800d6a6:	e7ca      	b.n	800d63e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800d6a8:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800d6ac:	d22b      	bcs.n	800d706 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800d6ae:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800d6b2:	4283      	cmp	r3, r0
 800d6b4:	d28f      	bcs.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d6b6:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800d6ba:	4283      	cmp	r3, r0
 800d6bc:	d816      	bhi.n	800d6ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800d6be:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800d6c2:	4283      	cmp	r3, r0
 800d6c4:	f4bf af60 	bcs.w	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d6c8:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800d6cc:	4283      	cmp	r3, r0
 800d6ce:	d80a      	bhi.n	800d6e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d6d0:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800d6d4:	4283      	cmp	r3, r0
 800d6d6:	f4bf af57 	bcs.w	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d6da:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800d6de:	4283      	cmp	r3, r0
 800d6e0:	f43f af79 	beq.w	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d6e4:	e7ac      	b.n	800d640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d6e6:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800d6ea:	e7f8      	b.n	800d6de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800d6ec:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800d6f0:	4283      	cmp	r3, r0
 800d6f2:	d802      	bhi.n	800d6fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800d6f4:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800d6f8:	e798      	b.n	800d62c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800d6fa:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800d6fe:	4283      	cmp	r3, r0
 800d700:	f47f af42 	bne.w	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d704:	e767      	b.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d706:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800d70a:	4283      	cmp	r3, r0
 800d70c:	f43f af63 	beq.w	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d710:	d802      	bhi.n	800d718 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800d712:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800d716:	e7f2      	b.n	800d6fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d718:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800d71c:	4283      	cmp	r3, r0
 800d71e:	d805      	bhi.n	800d72c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800d720:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800d724:	4283      	cmp	r3, r0
 800d726:	f4ff af2f 	bcc.w	800d588 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d72a:	e754      	b.n	800d5d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d72c:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800d730:	4283      	cmp	r3, r0
 800d732:	e7af      	b.n	800d694 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800d734:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800d738:	4617      	mov	r7, r2
 800d73a:	f102 0808 	add.w	r8, r2, #8
 800d73e:	4666      	mov	r6, ip
 800d740:	6838      	ldr	r0, [r7, #0]
 800d742:	6879      	ldr	r1, [r7, #4]
 800d744:	46e6      	mov	lr, ip
 800d746:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800d74a:	3708      	adds	r7, #8
 800d74c:	4547      	cmp	r7, r8
 800d74e:	46f4      	mov	ip, lr
 800d750:	d1f6      	bne.n	800d740 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800d752:	6838      	ldr	r0, [r7, #0]
 800d754:	f8ce 0000 	str.w	r0, [lr]
 800d758:	88b9      	ldrh	r1, [r7, #4]
 800d75a:	f8ae 1004 	strh.w	r1, [lr, #4]
 800d75e:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d762:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d766:	d009      	beq.n	800d77c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800d768:	7b51      	ldrb	r1, [r2, #13]
 800d76a:	7992      	ldrb	r2, [r2, #6]
 800d76c:	0149      	lsls	r1, r1, #5
 800d76e:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d772:	4311      	orrs	r1, r2
 800d774:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d778:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d77c:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d780:	d00d      	beq.n	800d79e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800d782:	442b      	add	r3, r5
 800d784:	b29b      	uxth	r3, r3
 800d786:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d78a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d78e:	10db      	asrs	r3, r3, #3
 800d790:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d794:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d798:	4313      	orrs	r3, r2
 800d79a:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d79e:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d7a2:	00cb      	lsls	r3, r1, #3
 800d7a4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d7a8:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d7ac:	064f      	lsls	r7, r1, #25
 800d7ae:	ea43 0302 	orr.w	r3, r3, r2
 800d7b2:	bf44      	itt	mi
 800d7b4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d7b8:	b21b      	sxthmi	r3, r3
 800d7ba:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d7be:	1b5d      	subs	r5, r3, r5
 800d7c0:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d7c4:	4632      	mov	r2, r6
 800d7c6:	e6fb      	b.n	800d5c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d7c8:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800d7cc:	4694      	mov	ip, r2
 800d7ce:	f102 0908 	add.w	r9, r2, #8
 800d7d2:	4676      	mov	r6, lr
 800d7d4:	f8dc 0000 	ldr.w	r0, [ip]
 800d7d8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d7dc:	46f0      	mov	r8, lr
 800d7de:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800d7e2:	f10c 0c08 	add.w	ip, ip, #8
 800d7e6:	45cc      	cmp	ip, r9
 800d7e8:	46c6      	mov	lr, r8
 800d7ea:	d1f3      	bne.n	800d7d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800d7ec:	f8dc 0000 	ldr.w	r0, [ip]
 800d7f0:	f8c8 0000 	str.w	r0, [r8]
 800d7f4:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800d7f8:	f8a8 1004 	strh.w	r1, [r8, #4]
 800d7fc:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d800:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d804:	d009      	beq.n	800d81a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800d806:	7b51      	ldrb	r1, [r2, #13]
 800d808:	7992      	ldrb	r2, [r2, #6]
 800d80a:	0149      	lsls	r1, r1, #5
 800d80c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d810:	4311      	orrs	r1, r2
 800d812:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d816:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d81a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d81e:	d00d      	beq.n	800d83c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800d820:	1bdb      	subs	r3, r3, r7
 800d822:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d826:	b29b      	uxth	r3, r3
 800d828:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d82c:	10db      	asrs	r3, r3, #3
 800d82e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d832:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d836:	4313      	orrs	r3, r2
 800d838:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d83c:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d840:	00cb      	lsls	r3, r1, #3
 800d842:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d846:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d84a:	0648      	lsls	r0, r1, #25
 800d84c:	ea43 0302 	orr.w	r3, r3, r2
 800d850:	bf44      	itt	mi
 800d852:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d856:	b21b      	sxthmi	r3, r3
 800d858:	e7b1      	b.n	800d7be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800d85c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d85c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d860:	461e      	mov	r6, r3
 800d862:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d864:	4604      	mov	r4, r0
 800d866:	4617      	mov	r7, r2
 800d868:	b92b      	cbnz	r3, 800d876 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800d86a:	4b25      	ldr	r3, [pc, #148]	; (800d900 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d86c:	4a25      	ldr	r2, [pc, #148]	; (800d904 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d86e:	4826      	ldr	r0, [pc, #152]	; (800d908 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800d870:	21c0      	movs	r1, #192	; 0xc0
 800d872:	f00c fae5 	bl	8019e40 <__assert_func>
 800d876:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d878:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d87c:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d880:	f7f5 f8c0 	bl	8002a04 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d884:	4605      	mov	r5, r0
 800d886:	b918      	cbnz	r0, 800d890 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800d888:	6030      	str	r0, [r6, #0]
 800d88a:	4628      	mov	r0, r5
 800d88c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d890:	683b      	ldr	r3, [r7, #0]
 800d892:	4601      	mov	r1, r0
 800d894:	68db      	ldr	r3, [r3, #12]
 800d896:	4638      	mov	r0, r7
 800d898:	4798      	blx	r3
 800d89a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d89e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d8a2:	4602      	mov	r2, r0
 800d8a4:	6030      	str	r0, [r6, #0]
 800d8a6:	d213      	bcs.n	800d8d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800d8a8:	4643      	mov	r3, r8
 800d8aa:	4639      	mov	r1, r7
 800d8ac:	4620      	mov	r0, r4
 800d8ae:	f7ff fe33 	bl	800d518 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d8b2:	6030      	str	r0, [r6, #0]
 800d8b4:	6833      	ldr	r3, [r6, #0]
 800d8b6:	b143      	cbz	r3, 800d8ca <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800d8b8:	7b5a      	ldrb	r2, [r3, #13]
 800d8ba:	7a9b      	ldrb	r3, [r3, #10]
 800d8bc:	0052      	lsls	r2, r2, #1
 800d8be:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d8c2:	4313      	orrs	r3, r2
 800d8c4:	bf0c      	ite	eq
 800d8c6:	2301      	moveq	r3, #1
 800d8c8:	2300      	movne	r3, #0
 800d8ca:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d8ce:	e7dc      	b.n	800d88a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800d8d0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d8d4:	b29b      	uxth	r3, r3
 800d8d6:	2b7f      	cmp	r3, #127	; 0x7f
 800d8d8:	d804      	bhi.n	800d8e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800d8da:	4639      	mov	r1, r7
 800d8dc:	4620      	mov	r0, r4
 800d8de:	f7ff fd01 	bl	800d2e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d8e2:	e7e6      	b.n	800d8b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d8e4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d8e8:	2b00      	cmp	r3, #0
 800d8ea:	d0e3      	beq.n	800d8b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d8ec:	f640 1302 	movw	r3, #2306	; 0x902
 800d8f0:	429d      	cmp	r5, r3
 800d8f2:	d1df      	bne.n	800d8b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d8f4:	4601      	mov	r1, r0
 800d8f6:	4620      	mov	r0, r4
 800d8f8:	f7ff fcc6 	bl	800d288 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d8fc:	e7d9      	b.n	800d8b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d8fe:	bf00      	nop
 800d900:	0801bb90 	.word	0x0801bb90
 800d904:	0801d00f 	.word	0x0801d00f
 800d908:	0801bc62 	.word	0x0801bc62

0800d90c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d90c:	b510      	push	{r4, lr}
 800d90e:	4604      	mov	r4, r0
 800d910:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d912:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d914:	b9d9      	cbnz	r1, 800d94e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800d916:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d918:	2b0a      	cmp	r3, #10
 800d91a:	d036      	beq.n	800d98a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d91c:	4620      	mov	r0, r4
 800d91e:	f7ff fc7c 	bl	800d21a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d922:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d924:	2b09      	cmp	r3, #9
 800d926:	d906      	bls.n	800d936 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800d928:	4b18      	ldr	r3, [pc, #96]	; (800d98c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800d92a:	4a19      	ldr	r2, [pc, #100]	; (800d990 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800d92c:	4819      	ldr	r0, [pc, #100]	; (800d994 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800d92e:	f44f 7182 	mov.w	r1, #260	; 0x104
 800d932:	f00c fa85 	bl	8019e40 <__assert_func>
 800d936:	1c5a      	adds	r2, r3, #1
 800d938:	8622      	strh	r2, [r4, #48]	; 0x30
 800d93a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d93c:	4413      	add	r3, r2
 800d93e:	b29b      	uxth	r3, r3
 800d940:	2b09      	cmp	r3, #9
 800d942:	bf88      	it	hi
 800d944:	3b0a      	subhi	r3, #10
 800d946:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d94a:	8358      	strh	r0, [r3, #26]
 800d94c:	e7e3      	b.n	800d916 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800d94e:	2b0a      	cmp	r3, #10
 800d950:	d01b      	beq.n	800d98a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d952:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d954:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800d958:	3901      	subs	r1, #1
 800d95a:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800d95c:	8721      	strh	r1, [r4, #56]	; 0x38
 800d95e:	1c51      	adds	r1, r2, #1
 800d960:	b289      	uxth	r1, r1
 800d962:	2901      	cmp	r1, #1
 800d964:	bf8a      	itet	hi
 800d966:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800d96a:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800d96c:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800d96e:	2b09      	cmp	r3, #9
 800d970:	d8da      	bhi.n	800d928 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800d972:	1c5a      	adds	r2, r3, #1
 800d974:	8622      	strh	r2, [r4, #48]	; 0x30
 800d976:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d978:	4413      	add	r3, r2
 800d97a:	b29b      	uxth	r3, r3
 800d97c:	2b09      	cmp	r3, #9
 800d97e:	bf88      	it	hi
 800d980:	3b0a      	subhi	r3, #10
 800d982:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d986:	8358      	strh	r0, [r3, #26]
 800d988:	e7c2      	b.n	800d910 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800d98a:	bd10      	pop	{r4, pc}
 800d98c:	0801cde0 	.word	0x0801cde0
 800d990:	0801d165 	.word	0x0801d165
 800d994:	0801bc62 	.word	0x0801bc62

0800d998 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d998:	b538      	push	{r3, r4, r5, lr}
 800d99a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800d99c:	4604      	mov	r4, r0
 800d99e:	b92a      	cbnz	r2, 800d9ac <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800d9a0:	4b13      	ldr	r3, [pc, #76]	; (800d9f0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800d9a2:	4a14      	ldr	r2, [pc, #80]	; (800d9f4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800d9a4:	4814      	ldr	r0, [pc, #80]	; (800d9f8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800d9a6:	21d5      	movs	r1, #213	; 0xd5
 800d9a8:	f00c fa4a 	bl	8019e40 <__assert_func>
 800d9ac:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d9ae:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800d9b2:	3a01      	subs	r2, #1
 800d9b4:	8b4d      	ldrh	r5, [r1, #26]
 800d9b6:	8602      	strh	r2, [r0, #48]	; 0x30
 800d9b8:	1c5a      	adds	r2, r3, #1
 800d9ba:	b292      	uxth	r2, r2
 800d9bc:	2a09      	cmp	r2, #9
 800d9be:	bf86      	itte	hi
 800d9c0:	3b09      	subhi	r3, #9
 800d9c2:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800d9c4:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800d9c6:	f7ff ffa1 	bl	800d90c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d9ca:	8b23      	ldrh	r3, [r4, #24]
 800d9cc:	2b01      	cmp	r3, #1
 800d9ce:	bf9c      	itt	ls
 800d9d0:	3301      	addls	r3, #1
 800d9d2:	8323      	strhls	r3, [r4, #24]
 800d9d4:	8ae3      	ldrh	r3, [r4, #22]
 800d9d6:	b90b      	cbnz	r3, 800d9dc <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800d9d8:	2302      	movs	r3, #2
 800d9da:	82e3      	strh	r3, [r4, #22]
 800d9dc:	8ae3      	ldrh	r3, [r4, #22]
 800d9de:	3b01      	subs	r3, #1
 800d9e0:	b29b      	uxth	r3, r3
 800d9e2:	82e3      	strh	r3, [r4, #22]
 800d9e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d9e8:	4628      	mov	r0, r5
 800d9ea:	8265      	strh	r5, [r4, #18]
 800d9ec:	bd38      	pop	{r3, r4, r5, pc}
 800d9ee:	bf00      	nop
 800d9f0:	0801bb90 	.word	0x0801bb90
 800d9f4:	0801d0ba 	.word	0x0801d0ba
 800d9f8:	0801bc62 	.word	0x0801bc62

0800d9fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d9fc:	b538      	push	{r3, r4, r5, lr}
 800d9fe:	428a      	cmp	r2, r1
 800da00:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800da02:	d90c      	bls.n	800da1e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800da04:	b92c      	cbnz	r4, 800da12 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800da06:	4b1c      	ldr	r3, [pc, #112]	; (800da78 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800da08:	4a1c      	ldr	r2, [pc, #112]	; (800da7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800da0a:	21e1      	movs	r1, #225	; 0xe1
 800da0c:	481c      	ldr	r0, [pc, #112]	; (800da80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800da0e:	f00c fa17 	bl	8019e40 <__assert_func>
 800da12:	3c01      	subs	r4, #1
 800da14:	8604      	strh	r4, [r0, #48]	; 0x30
 800da16:	4b1b      	ldr	r3, [pc, #108]	; (800da84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800da18:	4a1b      	ldr	r2, [pc, #108]	; (800da88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800da1a:	21c5      	movs	r1, #197	; 0xc5
 800da1c:	e7f6      	b.n	800da0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800da1e:	428c      	cmp	r4, r1
 800da20:	d203      	bcs.n	800da2a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800da22:	4b1a      	ldr	r3, [pc, #104]	; (800da8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800da24:	4a1a      	ldr	r2, [pc, #104]	; (800da90 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800da26:	21cb      	movs	r1, #203	; 0xcb
 800da28:	e7f0      	b.n	800da0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800da2a:	1a64      	subs	r4, r4, r1
 800da2c:	8604      	strh	r4, [r0, #48]	; 0x30
 800da2e:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800da30:	4421      	add	r1, r4
 800da32:	b289      	uxth	r1, r1
 800da34:	2909      	cmp	r1, #9
 800da36:	bf88      	it	hi
 800da38:	390a      	subhi	r1, #10
 800da3a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800da3c:	250a      	movs	r5, #10
 800da3e:	b1ba      	cbz	r2, 800da70 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800da40:	3a01      	subs	r2, #1
 800da42:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800da44:	b292      	uxth	r2, r2
 800da46:	2909      	cmp	r1, #9
 800da48:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800da4c:	d903      	bls.n	800da56 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800da4e:	4b11      	ldr	r3, [pc, #68]	; (800da94 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800da50:	4a11      	ldr	r2, [pc, #68]	; (800da98 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800da52:	21e6      	movs	r1, #230	; 0xe6
 800da54:	e7da      	b.n	800da0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800da56:	3101      	adds	r1, #1
 800da58:	8601      	strh	r1, [r0, #48]	; 0x30
 800da5a:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800da5c:	b901      	cbnz	r1, 800da60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800da5e:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800da60:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800da62:	3901      	subs	r1, #1
 800da64:	b289      	uxth	r1, r1
 800da66:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800da68:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800da6c:	834c      	strh	r4, [r1, #26]
 800da6e:	e7e6      	b.n	800da3e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800da70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800da74:	f7ff bf4a 	b.w	800d90c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800da78:	0801bb90 	.word	0x0801bb90
 800da7c:	0801ce93 	.word	0x0801ce93
 800da80:	0801bc62 	.word	0x0801bc62
 800da84:	0801bc8e 	.word	0x0801bc8e
 800da88:	0801cf3d 	.word	0x0801cf3d
 800da8c:	0801cdec 	.word	0x0801cdec
 800da90:	0801d214 	.word	0x0801d214
 800da94:	0801cdf8 	.word	0x0801cdf8
 800da98:	0801ce0b 	.word	0x0801ce0b

0800da9c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800da9c:	3a01      	subs	r2, #1
 800da9e:	b570      	push	{r4, r5, r6, lr}
 800daa0:	b292      	uxth	r2, r2
 800daa2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800daa6:	42b2      	cmp	r2, r6
 800daa8:	d019      	beq.n	800dade <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800daaa:	8b04      	ldrh	r4, [r0, #24]
 800daac:	f831 5b02 	ldrh.w	r5, [r1], #2
 800dab0:	4294      	cmp	r4, r2
 800dab2:	d805      	bhi.n	800dac0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800dab4:	4b19      	ldr	r3, [pc, #100]	; (800db1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800dab6:	4a1a      	ldr	r2, [pc, #104]	; (800db20 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800dab8:	481a      	ldr	r0, [pc, #104]	; (800db24 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800daba:	21c5      	movs	r1, #197	; 0xc5
 800dabc:	f00c f9c0 	bl	8019e40 <__assert_func>
 800dac0:	8ac4      	ldrh	r4, [r0, #22]
 800dac2:	4414      	add	r4, r2
 800dac4:	b2a4      	uxth	r4, r4
 800dac6:	2c01      	cmp	r4, #1
 800dac8:	bf88      	it	hi
 800daca:	3c02      	subhi	r4, #2
 800dacc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800dad0:	3a01      	subs	r2, #1
 800dad2:	8a64      	ldrh	r4, [r4, #18]
 800dad4:	42ac      	cmp	r4, r5
 800dad6:	b292      	uxth	r2, r2
 800dad8:	d0e5      	beq.n	800daa6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800dada:	2000      	movs	r0, #0
 800dadc:	bd70      	pop	{r4, r5, r6, pc}
 800dade:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800dae2:	2400      	movs	r4, #0
 800dae4:	4413      	add	r3, r2
 800dae6:	b2a2      	uxth	r2, r4
 800dae8:	429a      	cmp	r2, r3
 800daea:	da14      	bge.n	800db16 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800daec:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800daee:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800daf2:	4296      	cmp	r6, r2
 800daf4:	d802      	bhi.n	800dafc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800daf6:	4b09      	ldr	r3, [pc, #36]	; (800db1c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800daf8:	4a0b      	ldr	r2, [pc, #44]	; (800db28 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800dafa:	e7dd      	b.n	800dab8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800dafc:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800dafe:	4432      	add	r2, r6
 800db00:	b292      	uxth	r2, r2
 800db02:	2a09      	cmp	r2, #9
 800db04:	bf88      	it	hi
 800db06:	3a0a      	subhi	r2, #10
 800db08:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800db0c:	3401      	adds	r4, #1
 800db0e:	8b52      	ldrh	r2, [r2, #26]
 800db10:	42aa      	cmp	r2, r5
 800db12:	d0e8      	beq.n	800dae6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800db14:	e7e1      	b.n	800dada <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800db16:	2001      	movs	r0, #1
 800db18:	e7e0      	b.n	800dadc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800db1a:	bf00      	nop
 800db1c:	0801bc8e 	.word	0x0801bc8e
 800db20:	0801d298 	.word	0x0801d298
 800db24:	0801bc62 	.word	0x0801bc62
 800db28:	0801cf3d 	.word	0x0801cf3d

0800db2c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800db2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db30:	4605      	mov	r5, r0
 800db32:	4616      	mov	r6, r2
 800db34:	1c8c      	adds	r4, r1, #2
 800db36:	8809      	ldrh	r1, [r1, #0]
 800db38:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800db3c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800db40:	42b3      	cmp	r3, r6
 800db42:	d124      	bne.n	800db8e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800db44:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800db48:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800db4c:	f001 070f 	and.w	r7, r1, #15
 800db50:	f8cd 8000 	str.w	r8, [sp]
 800db54:	464b      	mov	r3, r9
 800db56:	4652      	mov	r2, sl
 800db58:	4621      	mov	r1, r4
 800db5a:	4628      	mov	r0, r5
 800db5c:	f7ff ff9e 	bl	800da9c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800db60:	4683      	mov	fp, r0
 800db62:	b168      	cbz	r0, 800db80 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800db64:	eb0a 0109 	add.w	r1, sl, r9
 800db68:	4441      	add	r1, r8
 800db6a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800db6e:	463a      	mov	r2, r7
 800db70:	4649      	mov	r1, r9
 800db72:	4628      	mov	r0, r5
 800db74:	f7ff ff42 	bl	800d9fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800db78:	4658      	mov	r0, fp
 800db7a:	b003      	add	sp, #12
 800db7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db80:	eb07 010a 	add.w	r1, r7, sl
 800db84:	4449      	add	r1, r9
 800db86:	4441      	add	r1, r8
 800db88:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800db8c:	e7d2      	b.n	800db34 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800db8e:	f04f 0b00 	mov.w	fp, #0
 800db92:	e7f1      	b.n	800db78 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800db94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800db94:	b570      	push	{r4, r5, r6, lr}
 800db96:	8810      	ldrh	r0, [r2, #0]
 800db98:	4298      	cmp	r0, r3
 800db9a:	d817      	bhi.n	800dbcc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800db9c:	1e48      	subs	r0, r1, #1
 800db9e:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800dba2:	4298      	cmp	r0, r3
 800dba4:	d312      	bcc.n	800dbcc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dba6:	2400      	movs	r4, #0
 800dba8:	428c      	cmp	r4, r1
 800dbaa:	d20f      	bcs.n	800dbcc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800dbac:	1860      	adds	r0, r4, r1
 800dbae:	1040      	asrs	r0, r0, #1
 800dbb0:	0085      	lsls	r5, r0, #2
 800dbb2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800dbb6:	42b3      	cmp	r3, r6
 800dbb8:	d902      	bls.n	800dbc0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800dbba:	3001      	adds	r0, #1
 800dbbc:	b284      	uxth	r4, r0
 800dbbe:	e7f3      	b.n	800dba8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800dbc0:	d201      	bcs.n	800dbc6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800dbc2:	b281      	uxth	r1, r0
 800dbc4:	e7f0      	b.n	800dba8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800dbc6:	442a      	add	r2, r5
 800dbc8:	8850      	ldrh	r0, [r2, #2]
 800dbca:	bd70      	pop	{r4, r5, r6, pc}
 800dbcc:	2000      	movs	r0, #0
 800dbce:	e7fc      	b.n	800dbca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800dbd0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800dbd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dbd4:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800dbd6:	886f      	ldrh	r7, [r5, #2]
 800dbd8:	4604      	mov	r4, r0
 800dbda:	087f      	lsrs	r7, r7, #1
 800dbdc:	260b      	movs	r6, #11
 800dbde:	3e01      	subs	r6, #1
 800dbe0:	d01b      	beq.n	800dc1a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800dbe2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800dbe4:	b92b      	cbnz	r3, 800dbf2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800dbe6:	4b0e      	ldr	r3, [pc, #56]	; (800dc20 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800dbe8:	4a0e      	ldr	r2, [pc, #56]	; (800dc24 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800dbea:	480f      	ldr	r0, [pc, #60]	; (800dc28 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800dbec:	21c0      	movs	r1, #192	; 0xc0
 800dbee:	f00c f927 	bl	8019e40 <__assert_func>
 800dbf2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800dbf4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800dbf8:	462a      	mov	r2, r5
 800dbfa:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800dbfe:	4639      	mov	r1, r7
 800dc00:	4643      	mov	r3, r8
 800dc02:	4620      	mov	r0, r4
 800dc04:	f7ff ffc6 	bl	800db94 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800dc08:	b138      	cbz	r0, 800dc1a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800dc0a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800dc0e:	4642      	mov	r2, r8
 800dc10:	4620      	mov	r0, r4
 800dc12:	f7ff ff8b 	bl	800db2c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800dc16:	2800      	cmp	r0, #0
 800dc18:	d1e1      	bne.n	800dbde <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800dc1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc1e:	bf00      	nop
 800dc20:	0801bb90 	.word	0x0801bb90
 800dc24:	0801d00f 	.word	0x0801d00f
 800dc28:	0801bc62 	.word	0x0801bc62

0800dc2c <_ZN8touchgfx8ceil28_4El>:
 800dc2c:	f110 030f 	adds.w	r3, r0, #15
 800dc30:	d401      	bmi.n	800dc36 <_ZN8touchgfx8ceil28_4El+0xa>
 800dc32:	1118      	asrs	r0, r3, #4
 800dc34:	4770      	bx	lr
 800dc36:	f1c0 0001 	rsb	r0, r0, #1
 800dc3a:	f010 000f 	ands.w	r0, r0, #15
 800dc3e:	bf18      	it	ne
 800dc40:	2001      	movne	r0, #1
 800dc42:	2210      	movs	r2, #16
 800dc44:	fb93 f3f2 	sdiv	r3, r3, r2
 800dc48:	1a18      	subs	r0, r3, r0
 800dc4a:	4770      	bx	lr

0800dc4c <_ZN8touchgfx11floorDivModEllRlS0_>:
 800dc4c:	2900      	cmp	r1, #0
 800dc4e:	b538      	push	{r3, r4, r5, lr}
 800dc50:	dc05      	bgt.n	800dc5e <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800dc52:	4b0f      	ldr	r3, [pc, #60]	; (800dc90 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800dc54:	4a0f      	ldr	r2, [pc, #60]	; (800dc94 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800dc56:	4810      	ldr	r0, [pc, #64]	; (800dc98 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800dc58:	21fa      	movs	r1, #250	; 0xfa
 800dc5a:	f00c f8f1 	bl	8019e40 <__assert_func>
 800dc5e:	2800      	cmp	r0, #0
 800dc60:	db06      	blt.n	800dc70 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800dc62:	fb90 f4f1 	sdiv	r4, r0, r1
 800dc66:	6014      	str	r4, [r2, #0]
 800dc68:	fb01 0114 	mls	r1, r1, r4, r0
 800dc6c:	6019      	str	r1, [r3, #0]
 800dc6e:	bd38      	pop	{r3, r4, r5, pc}
 800dc70:	4240      	negs	r0, r0
 800dc72:	fb90 f4f1 	sdiv	r4, r0, r1
 800dc76:	4265      	negs	r5, r4
 800dc78:	fb01 0014 	mls	r0, r1, r4, r0
 800dc7c:	6015      	str	r5, [r2, #0]
 800dc7e:	6018      	str	r0, [r3, #0]
 800dc80:	2800      	cmp	r0, #0
 800dc82:	d0f4      	beq.n	800dc6e <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800dc84:	6810      	ldr	r0, [r2, #0]
 800dc86:	3801      	subs	r0, #1
 800dc88:	6010      	str	r0, [r2, #0]
 800dc8a:	6818      	ldr	r0, [r3, #0]
 800dc8c:	1a09      	subs	r1, r1, r0
 800dc8e:	e7ed      	b.n	800dc6c <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800dc90:	0801d369 	.word	0x0801d369
 800dc94:	0801d3a8 	.word	0x0801d3a8
 800dc98:	0801d379 	.word	0x0801d379

0800dc9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800dc9c:	b570      	push	{r4, r5, r6, lr}
 800dc9e:	694a      	ldr	r2, [r1, #20]
 800dca0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800dca2:	684b      	ldr	r3, [r1, #4]
 800dca4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800dca6:	1b54      	subs	r4, r2, r5
 800dca8:	f000 8106 	beq.w	800deb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800dcac:	1b9b      	subs	r3, r3, r6
 800dcae:	d003      	beq.n	800dcb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800dcb0:	4363      	muls	r3, r4
 800dcb2:	2210      	movs	r2, #16
 800dcb4:	fb93 f3f2 	sdiv	r3, r3, r2
 800dcb8:	680c      	ldr	r4, [r1, #0]
 800dcba:	698a      	ldr	r2, [r1, #24]
 800dcbc:	1b65      	subs	r5, r4, r5
 800dcbe:	f000 80fd 	beq.w	800debc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800dcc2:	1b92      	subs	r2, r2, r6
 800dcc4:	d003      	beq.n	800dcce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800dcc6:	436a      	muls	r2, r5
 800dcc8:	2410      	movs	r4, #16
 800dcca:	fb92 f2f4 	sdiv	r2, r2, r4
 800dcce:	1a9b      	subs	r3, r3, r2
 800dcd0:	ee07 3a90 	vmov	s15, r3
 800dcd4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800def8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800dcd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dcdc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800dce0:	ee67 7a84 	vmul.f32	s15, s15, s8
 800dce4:	460a      	mov	r2, r1
 800dce6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800dcea:	4603      	mov	r3, r0
 800dcec:	f100 040c 	add.w	r4, r0, #12
 800dcf0:	eeb1 6a43 	vneg.f32	s12, s6
 800dcf4:	edd2 7a02 	vldr	s15, [r2, #8]
 800dcf8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800dcfc:	3214      	adds	r2, #20
 800dcfe:	ece3 6a01 	vstmia	r3!, {s13}
 800dd02:	ed52 7a02 	vldr	s15, [r2, #-8]
 800dd06:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800dd0a:	429c      	cmp	r4, r3
 800dd0c:	edc3 7a02 	vstr	s15, [r3, #8]
 800dd10:	ed52 7a01 	vldr	s15, [r2, #-4]
 800dd14:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800dd18:	edc3 7a05 	vstr	s15, [r3, #20]
 800dd1c:	d1ea      	bne.n	800dcf4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800dd1e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800dd20:	698b      	ldr	r3, [r1, #24]
 800dd22:	edd0 4a02 	vldr	s9, [r0, #8]
 800dd26:	edd0 3a00 	vldr	s7, [r0]
 800dd2a:	edd0 6a01 	vldr	s13, [r0, #4]
 800dd2e:	ed90 5a05 	vldr	s10, [r0, #20]
 800dd32:	ed90 2a03 	vldr	s4, [r0, #12]
 800dd36:	edd0 5a04 	vldr	s11, [r0, #16]
 800dd3a:	ed90 1a07 	vldr	s2, [r0, #28]
 800dd3e:	edd0 2a06 	vldr	s5, [r0, #24]
 800dd42:	1a9b      	subs	r3, r3, r2
 800dd44:	ee07 3a90 	vmov	s15, r3
 800dd48:	684b      	ldr	r3, [r1, #4]
 800dd4a:	1a9b      	subs	r3, r3, r2
 800dd4c:	ee07 3a10 	vmov	s14, r3
 800dd50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dd54:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800dd58:	ee67 7a84 	vmul.f32	s15, s15, s8
 800dd5c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800dd60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dd64:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800dd68:	ee27 7a04 	vmul.f32	s14, s14, s8
 800dd6c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800dd70:	eee6 7a87 	vfma.f32	s15, s13, s14
 800dd74:	ee32 5a45 	vsub.f32	s10, s4, s10
 800dd78:	ee67 7a83 	vmul.f32	s15, s15, s6
 800dd7c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800dd80:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800dd82:	694a      	ldr	r2, [r1, #20]
 800dd84:	1b13      	subs	r3, r2, r4
 800dd86:	ee07 3a10 	vmov	s14, r3
 800dd8a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dd8e:	680b      	ldr	r3, [r1, #0]
 800dd90:	ee27 7a04 	vmul.f32	s14, s14, s8
 800dd94:	1b1b      	subs	r3, r3, r4
 800dd96:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800dd9a:	ee07 3a10 	vmov	s14, r3
 800dd9e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dda2:	ee27 7a04 	vmul.f32	s14, s14, s8
 800dda6:	eee6 4a87 	vfma.f32	s9, s13, s14
 800ddaa:	ee64 4a86 	vmul.f32	s9, s9, s12
 800ddae:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800ddb2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ddb4:	698b      	ldr	r3, [r1, #24]
 800ddb6:	1a9b      	subs	r3, r3, r2
 800ddb8:	ee06 3a90 	vmov	s13, r3
 800ddbc:	684b      	ldr	r3, [r1, #4]
 800ddbe:	1a9b      	subs	r3, r3, r2
 800ddc0:	ee07 3a10 	vmov	s14, r3
 800ddc4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800ddc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ddcc:	ee66 6a84 	vmul.f32	s13, s13, s8
 800ddd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ddd4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800ddd8:	eee5 6a87 	vfma.f32	s13, s11, s14
 800dddc:	ee66 6a83 	vmul.f32	s13, s13, s6
 800dde0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800dde4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800dde6:	694a      	ldr	r2, [r1, #20]
 800dde8:	1b13      	subs	r3, r2, r4
 800ddea:	ee07 3a10 	vmov	s14, r3
 800ddee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ddf2:	680b      	ldr	r3, [r1, #0]
 800ddf4:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ddf8:	1b1b      	subs	r3, r3, r4
 800ddfa:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800ddfe:	ee07 3a10 	vmov	s14, r3
 800de02:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800de06:	ee27 7a04 	vmul.f32	s14, s14, s8
 800de0a:	eea5 5a87 	vfma.f32	s10, s11, s14
 800de0e:	edd0 5a08 	vldr	s11, [r0, #32]
 800de12:	ee25 5a06 	vmul.f32	s10, s10, s12
 800de16:	ee31 1a65 	vsub.f32	s2, s2, s11
 800de1a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800de1e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800de20:	698b      	ldr	r3, [r1, #24]
 800de22:	1a9b      	subs	r3, r3, r2
 800de24:	ee07 3a10 	vmov	s14, r3
 800de28:	684b      	ldr	r3, [r1, #4]
 800de2a:	1a9b      	subs	r3, r3, r2
 800de2c:	ee01 3a90 	vmov	s3, r3
 800de30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800de34:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800de38:	ee27 7a04 	vmul.f32	s14, s14, s8
 800de3c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800de40:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800de44:	ee61 1a84 	vmul.f32	s3, s3, s8
 800de48:	eea1 7a21 	vfma.f32	s14, s2, s3
 800de4c:	ee27 7a03 	vmul.f32	s14, s14, s6
 800de50:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800de54:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800de56:	694a      	ldr	r2, [r1, #20]
 800de58:	1b13      	subs	r3, r2, r4
 800de5a:	ee03 3a10 	vmov	s6, r3
 800de5e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800de62:	680b      	ldr	r3, [r1, #0]
 800de64:	ee23 3a04 	vmul.f32	s6, s6, s8
 800de68:	1b1b      	subs	r3, r3, r4
 800de6a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800de6e:	ee03 3a10 	vmov	s6, r3
 800de72:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800de76:	ee23 4a04 	vmul.f32	s8, s6, s8
 800de7a:	eee1 5a04 	vfma.f32	s11, s2, s8
 800de7e:	ee25 6a86 	vmul.f32	s12, s11, s12
 800de82:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800de86:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800de8a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800de8e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800de92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800de96:	dd13      	ble.n	800dec0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800de98:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800de9c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800dea0:	63c3      	str	r3, [r0, #60]	; 0x3c
 800dea2:	eee3 7a87 	vfma.f32	s15, s7, s14
 800dea6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800deaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800deae:	dd15      	ble.n	800dedc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800deb0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800deb4:	6403      	str	r3, [r0, #64]	; 0x40
 800deb6:	bd70      	pop	{r4, r5, r6, pc}
 800deb8:	4623      	mov	r3, r4
 800deba:	e6fd      	b.n	800dcb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800debc:	462a      	mov	r2, r5
 800debe:	e706      	b.n	800dcce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800dec0:	d502      	bpl.n	800dec8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800dec2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800dec6:	e7e9      	b.n	800de9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800dec8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800decc:	eea3 2a85 	vfma.f32	s4, s7, s10
 800ded0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800ded4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ded8:	dade      	bge.n	800de98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800deda:	e7f2      	b.n	800dec2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800dedc:	d502      	bpl.n	800dee4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800dede:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800dee2:	e7e7      	b.n	800deb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800dee4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800dee8:	eee3 4a86 	vfma.f32	s9, s7, s12
 800deec:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800def0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800def4:	dadc      	bge.n	800deb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800def6:	e7f2      	b.n	800dede <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800def8:	3d800000 	.word	0x3d800000

0800defc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800defc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df00:	f04f 0814 	mov.w	r8, #20
 800df04:	fb08 f903 	mul.w	r9, r8, r3
 800df08:	eb02 0a09 	add.w	sl, r2, r9
 800df0c:	4604      	mov	r4, r0
 800df0e:	f8da 0004 	ldr.w	r0, [sl, #4]
 800df12:	4617      	mov	r7, r2
 800df14:	460d      	mov	r5, r1
 800df16:	461e      	mov	r6, r3
 800df18:	f7ff fe88 	bl	800dc2c <_ZN8touchgfx8ceil28_4El>
 800df1c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800df1e:	6160      	str	r0, [r4, #20]
 800df20:	fb08 f803 	mul.w	r8, r8, r3
 800df24:	eb07 0b08 	add.w	fp, r7, r8
 800df28:	9001      	str	r0, [sp, #4]
 800df2a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800df2e:	f7ff fe7d 	bl	800dc2c <_ZN8touchgfx8ceil28_4El>
 800df32:	9a01      	ldr	r2, [sp, #4]
 800df34:	1a80      	subs	r0, r0, r2
 800df36:	61a0      	str	r0, [r4, #24]
 800df38:	2800      	cmp	r0, #0
 800df3a:	f000 8088 	beq.w	800e04e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800df3e:	f857 3009 	ldr.w	r3, [r7, r9]
 800df42:	f857 c008 	ldr.w	ip, [r7, r8]
 800df46:	f8da 1004 	ldr.w	r1, [sl, #4]
 800df4a:	f8db 0004 	ldr.w	r0, [fp, #4]
 800df4e:	ebac 0c03 	sub.w	ip, ip, r3
 800df52:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800df56:	fb0b f202 	mul.w	r2, fp, r2
 800df5a:	fb0c 2211 	mls	r2, ip, r1, r2
 800df5e:	1a40      	subs	r0, r0, r1
 800df60:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800df64:	fb00 2003 	mla	r0, r0, r3, r2
 800df68:	3801      	subs	r0, #1
 800df6a:	f104 0310 	add.w	r3, r4, #16
 800df6e:	4622      	mov	r2, r4
 800df70:	4641      	mov	r1, r8
 800df72:	4440      	add	r0, r8
 800df74:	f7ff fe6a 	bl	800dc4c <_ZN8touchgfx11floorDivModEllRlS0_>
 800df78:	f104 0308 	add.w	r3, r4, #8
 800df7c:	1d22      	adds	r2, r4, #4
 800df7e:	4641      	mov	r1, r8
 800df80:	4658      	mov	r0, fp
 800df82:	f7ff fe63 	bl	800dc4c <_ZN8touchgfx11floorDivModEllRlS0_>
 800df86:	f8c4 800c 	str.w	r8, [r4, #12]
 800df8a:	f8da 3004 	ldr.w	r3, [sl, #4]
 800df8e:	6962      	ldr	r2, [r4, #20]
 800df90:	eddf 6a31 	vldr	s13, [pc, #196]	; 800e058 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800df94:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800df98:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800df9c:	ee07 3a10 	vmov	s14, r3
 800dfa0:	6822      	ldr	r2, [r4, #0]
 800dfa2:	f857 3009 	ldr.w	r3, [r7, r9]
 800dfa6:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800dfaa:	ee07 3a90 	vmov	s15, r3
 800dfae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800dfb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800dfb6:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800dfba:	ee27 7a26 	vmul.f32	s14, s14, s13
 800dfbe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800dfc2:	edd3 6a00 	vldr	s13, [r3]
 800dfc6:	eee6 6a07 	vfma.f32	s13, s12, s14
 800dfca:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800dfce:	eee6 6a27 	vfma.f32	s13, s12, s15
 800dfd2:	edc4 6a07 	vstr	s13, [r4, #28]
 800dfd6:	edd4 6a01 	vldr	s13, [r4, #4]
 800dfda:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800dfde:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800dfe2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800dfe6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800dfea:	ed84 6a08 	vstr	s12, [r4, #32]
 800dfee:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800dff0:	6262      	str	r2, [r4, #36]	; 0x24
 800dff2:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800dff6:	ed93 6a03 	vldr	s12, [r3, #12]
 800dffa:	eea5 6a87 	vfma.f32	s12, s11, s14
 800dffe:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800e002:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800e006:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800e00a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800e00e:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800e012:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800e016:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800e01a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800e01c:	6322      	str	r2, [r4, #48]	; 0x30
 800e01e:	ed93 6a06 	vldr	s12, [r3, #24]
 800e022:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800e026:	eea5 6a87 	vfma.f32	s12, s11, s14
 800e02a:	eeb0 7a46 	vmov.f32	s14, s12
 800e02e:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800e032:	eea6 7a27 	vfma.f32	s14, s12, s15
 800e036:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800e03a:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800e03e:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800e042:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e046:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800e04a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800e04c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800e04e:	4620      	mov	r0, r4
 800e050:	b003      	add	sp, #12
 800e052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e056:	bf00      	nop
 800e058:	3d800000 	.word	0x3d800000

0800e05c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800e05c:	4b01      	ldr	r3, [pc, #4]	; (800e064 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800e05e:	6018      	str	r0, [r3, #0]
 800e060:	4770      	bx	lr
 800e062:	bf00      	nop
 800e064:	2000a3fc 	.word	0x2000a3fc

0800e068 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800e068:	4b06      	ldr	r3, [pc, #24]	; (800e084 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800e06a:	881a      	ldrh	r2, [r3, #0]
 800e06c:	4282      	cmp	r2, r0
 800e06e:	d807      	bhi.n	800e080 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800e070:	4b05      	ldr	r3, [pc, #20]	; (800e088 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800e072:	881b      	ldrh	r3, [r3, #0]
 800e074:	4413      	add	r3, r2
 800e076:	4298      	cmp	r0, r3
 800e078:	bfac      	ite	ge
 800e07a:	2000      	movge	r0, #0
 800e07c:	2001      	movlt	r0, #1
 800e07e:	4770      	bx	lr
 800e080:	2000      	movs	r0, #0
 800e082:	4770      	bx	lr
 800e084:	2000a41c 	.word	0x2000a41c
 800e088:	2000a420 	.word	0x2000a420

0800e08c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800e08c:	b508      	push	{r3, lr}
 800e08e:	4601      	mov	r1, r0
 800e090:	f7ff ffea 	bl	800e068 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800e094:	b118      	cbz	r0, 800e09e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800e096:	4b02      	ldr	r3, [pc, #8]	; (800e0a0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800e098:	681b      	ldr	r3, [r3, #0]
 800e09a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800e09e:	bd08      	pop	{r3, pc}
 800e0a0:	2000a400 	.word	0x2000a400

0800e0a4 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800e0a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0a8:	4d28      	ldr	r5, [pc, #160]	; (800e14c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800e0aa:	682b      	ldr	r3, [r5, #0]
 800e0ac:	2b00      	cmp	r3, #0
 800e0ae:	d04a      	beq.n	800e146 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e0b0:	4a27      	ldr	r2, [pc, #156]	; (800e150 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800e0b2:	4e28      	ldr	r6, [pc, #160]	; (800e154 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800e0b4:	8810      	ldrh	r0, [r2, #0]
 800e0b6:	f8b6 8000 	ldrh.w	r8, [r6]
 800e0ba:	4c27      	ldr	r4, [pc, #156]	; (800e158 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800e0bc:	4f27      	ldr	r7, [pc, #156]	; (800e15c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800e0be:	4440      	add	r0, r8
 800e0c0:	1c41      	adds	r1, r0, #1
 800e0c2:	f021 0101 	bic.w	r1, r1, #1
 800e0c6:	0409      	lsls	r1, r1, #16
 800e0c8:	0c09      	lsrs	r1, r1, #16
 800e0ca:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800e0ce:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800e0d2:	eb03 020e 	add.w	r2, r3, lr
 800e0d6:	eb0e 010c 	add.w	r1, lr, ip
 800e0da:	6022      	str	r2, [r4, #0]
 800e0dc:	185a      	adds	r2, r3, r1
 800e0de:	603a      	str	r2, [r7, #0]
 800e0e0:	220e      	movs	r2, #14
 800e0e2:	fb02 f208 	mul.w	r2, r2, r8
 800e0e6:	3203      	adds	r2, #3
 800e0e8:	f022 0203 	bic.w	r2, r2, #3
 800e0ec:	4411      	add	r1, r2
 800e0ee:	440b      	add	r3, r1
 800e0f0:	491b      	ldr	r1, [pc, #108]	; (800e160 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800e0f2:	600b      	str	r3, [r1, #0]
 800e0f4:	491b      	ldr	r1, [pc, #108]	; (800e164 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800e0f6:	2300      	movs	r3, #0
 800e0f8:	800b      	strh	r3, [r1, #0]
 800e0fa:	491b      	ldr	r1, [pc, #108]	; (800e168 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800e0fc:	6809      	ldr	r1, [r1, #0]
 800e0fe:	eba1 010e 	sub.w	r1, r1, lr
 800e102:	eba1 010c 	sub.w	r1, r1, ip
 800e106:	1a8a      	subs	r2, r1, r2
 800e108:	4918      	ldr	r1, [pc, #96]	; (800e16c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800e10a:	600a      	str	r2, [r1, #0]
 800e10c:	4a18      	ldr	r2, [pc, #96]	; (800e170 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800e10e:	469c      	mov	ip, r3
 800e110:	8013      	strh	r3, [r2, #0]
 800e112:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e116:	4283      	cmp	r3, r0
 800e118:	d10d      	bne.n	800e136 <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800e11a:	8835      	ldrh	r5, [r6, #0]
 800e11c:	6838      	ldr	r0, [r7, #0]
 800e11e:	2300      	movs	r3, #0
 800e120:	240e      	movs	r4, #14
 800e122:	429d      	cmp	r5, r3
 800e124:	d90f      	bls.n	800e146 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e126:	fb04 0203 	mla	r2, r4, r3, r0
 800e12a:	3301      	adds	r3, #1
 800e12c:	7b11      	ldrb	r1, [r2, #12]
 800e12e:	f36f 1145 	bfc	r1, #5, #1
 800e132:	7311      	strb	r1, [r2, #12]
 800e134:	e7f5      	b.n	800e122 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800e136:	682a      	ldr	r2, [r5, #0]
 800e138:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800e13c:	6822      	ldr	r2, [r4, #0]
 800e13e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800e142:	3301      	adds	r3, #1
 800e144:	e7e7      	b.n	800e116 <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800e146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e14a:	bf00      	nop
 800e14c:	2000a400 	.word	0x2000a400
 800e150:	2000a41c 	.word	0x2000a41c
 800e154:	2000a420 	.word	0x2000a420
 800e158:	2000a414 	.word	0x2000a414
 800e15c:	2000a404 	.word	0x2000a404
 800e160:	2000a40c 	.word	0x2000a40c
 800e164:	2000a41e 	.word	0x2000a41e
 800e168:	2000a408 	.word	0x2000a408
 800e16c:	2000a418 	.word	0x2000a418
 800e170:	2000a410 	.word	0x2000a410

0800e174 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800e174:	b510      	push	{r4, lr}
 800e176:	4b10      	ldr	r3, [pc, #64]	; (800e1b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800e178:	681b      	ldr	r3, [r3, #0]
 800e17a:	b9db      	cbnz	r3, 800e1b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e17c:	b1d1      	cbz	r1, 800e1b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e17e:	4b0f      	ldr	r3, [pc, #60]	; (800e1bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800e180:	801a      	strh	r2, [r3, #0]
 800e182:	4b0f      	ldr	r3, [pc, #60]	; (800e1c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800e184:	881b      	ldrh	r3, [r3, #0]
 800e186:	b292      	uxth	r2, r2
 800e188:	240e      	movs	r4, #14
 800e18a:	4413      	add	r3, r2
 800e18c:	4362      	muls	r2, r4
 800e18e:	2406      	movs	r4, #6
 800e190:	fb04 2203 	mla	r2, r4, r3, r2
 800e194:	428a      	cmp	r2, r1
 800e196:	d305      	bcc.n	800e1a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800e198:	4b0a      	ldr	r3, [pc, #40]	; (800e1c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800e19a:	4a0b      	ldr	r2, [pc, #44]	; (800e1c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800e19c:	480b      	ldr	r0, [pc, #44]	; (800e1cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800e19e:	2137      	movs	r1, #55	; 0x37
 800e1a0:	f00b fe4e 	bl	8019e40 <__assert_func>
 800e1a4:	4b0a      	ldr	r3, [pc, #40]	; (800e1d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800e1a6:	6019      	str	r1, [r3, #0]
 800e1a8:	4b0a      	ldr	r3, [pc, #40]	; (800e1d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800e1aa:	6018      	str	r0, [r3, #0]
 800e1ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1b0:	f7ff bf78 	b.w	800e0a4 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800e1b4:	bd10      	pop	{r4, pc}
 800e1b6:	bf00      	nop
 800e1b8:	2000a40c 	.word	0x2000a40c
 800e1bc:	2000a420 	.word	0x2000a420
 800e1c0:	2000a41c 	.word	0x2000a41c
 800e1c4:	0801d446 	.word	0x0801d446
 800e1c8:	0801d4db 	.word	0x0801d4db
 800e1cc:	0801d421 	.word	0x0801d421
 800e1d0:	2000a408 	.word	0x2000a408
 800e1d4:	2000a400 	.word	0x2000a400

0800e1d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800e1d8:	b470      	push	{r4, r5, r6}
 800e1da:	4c07      	ldr	r4, [pc, #28]	; (800e1f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800e1dc:	6826      	ldr	r6, [r4, #0]
 800e1de:	4605      	mov	r5, r0
 800e1e0:	4610      	mov	r0, r2
 800e1e2:	9a03      	ldr	r2, [sp, #12]
 800e1e4:	b936      	cbnz	r6, 800e1f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800e1e6:	6025      	str	r5, [r4, #0]
 800e1e8:	4c04      	ldr	r4, [pc, #16]	; (800e1fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800e1ea:	8021      	strh	r1, [r4, #0]
 800e1ec:	bc70      	pop	{r4, r5, r6}
 800e1ee:	4619      	mov	r1, r3
 800e1f0:	f7ff bfc0 	b.w	800e174 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800e1f4:	bc70      	pop	{r4, r5, r6}
 800e1f6:	4770      	bx	lr
 800e1f8:	2000a424 	.word	0x2000a424
 800e1fc:	2000a41c 	.word	0x2000a41c

0800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800e200:	b508      	push	{r3, lr}
 800e202:	4b14      	ldr	r3, [pc, #80]	; (800e254 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800e204:	6819      	ldr	r1, [r3, #0]
 800e206:	b931      	cbnz	r1, 800e216 <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800e208:	4b13      	ldr	r3, [pc, #76]	; (800e258 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800e20a:	4a14      	ldr	r2, [pc, #80]	; (800e25c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800e20c:	4814      	ldr	r0, [pc, #80]	; (800e260 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800e20e:	f240 3187 	movw	r1, #903	; 0x387
 800e212:	f00b fe15 	bl	8019e40 <__assert_func>
 800e216:	4a13      	ldr	r2, [pc, #76]	; (800e264 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800e218:	8803      	ldrh	r3, [r0, #0]
 800e21a:	8812      	ldrh	r2, [r2, #0]
 800e21c:	4293      	cmp	r3, r2
 800e21e:	d204      	bcs.n	800e22a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800e220:	2214      	movs	r2, #20
 800e222:	fb02 1303 	mla	r3, r2, r3, r1
 800e226:	8918      	ldrh	r0, [r3, #8]
 800e228:	bd08      	pop	{r3, pc}
 800e22a:	490f      	ldr	r1, [pc, #60]	; (800e268 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800e22c:	8809      	ldrh	r1, [r1, #0]
 800e22e:	4411      	add	r1, r2
 800e230:	428b      	cmp	r3, r1
 800e232:	da06      	bge.n	800e242 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800e234:	1a9b      	subs	r3, r3, r2
 800e236:	4a0d      	ldr	r2, [pc, #52]	; (800e26c <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800e238:	6812      	ldr	r2, [r2, #0]
 800e23a:	210e      	movs	r1, #14
 800e23c:	fb01 2303 	mla	r3, r1, r3, r2
 800e240:	e7f1      	b.n	800e226 <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800e242:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e246:	4293      	cmp	r3, r2
 800e248:	bf0a      	itet	eq
 800e24a:	4b09      	ldreq	r3, [pc, #36]	; (800e270 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800e24c:	2000      	movne	r0, #0
 800e24e:	8818      	ldrheq	r0, [r3, #0]
 800e250:	e7ea      	b.n	800e228 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800e252:	bf00      	nop
 800e254:	2000a424 	.word	0x2000a424
 800e258:	0801d49f 	.word	0x0801d49f
 800e25c:	0801d588 	.word	0x0801d588
 800e260:	0801d421 	.word	0x0801d421
 800e264:	2000a41c 	.word	0x2000a41c
 800e268:	2000a420 	.word	0x2000a420
 800e26c:	2000a404 	.word	0x2000a404
 800e270:	2000a390 	.word	0x2000a390

0800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800e274:	b508      	push	{r3, lr}
 800e276:	4b14      	ldr	r3, [pc, #80]	; (800e2c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800e278:	6819      	ldr	r1, [r3, #0]
 800e27a:	b931      	cbnz	r1, 800e28a <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800e27c:	4b13      	ldr	r3, [pc, #76]	; (800e2cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800e27e:	4a14      	ldr	r2, [pc, #80]	; (800e2d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800e280:	4814      	ldr	r0, [pc, #80]	; (800e2d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800e282:	f240 319b 	movw	r1, #923	; 0x39b
 800e286:	f00b fddb 	bl	8019e40 <__assert_func>
 800e28a:	4a13      	ldr	r2, [pc, #76]	; (800e2d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800e28c:	8803      	ldrh	r3, [r0, #0]
 800e28e:	8812      	ldrh	r2, [r2, #0]
 800e290:	4293      	cmp	r3, r2
 800e292:	d204      	bcs.n	800e29e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800e294:	2214      	movs	r2, #20
 800e296:	fb02 1303 	mla	r3, r2, r3, r1
 800e29a:	8958      	ldrh	r0, [r3, #10]
 800e29c:	bd08      	pop	{r3, pc}
 800e29e:	490f      	ldr	r1, [pc, #60]	; (800e2dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800e2a0:	8809      	ldrh	r1, [r1, #0]
 800e2a2:	4411      	add	r1, r2
 800e2a4:	428b      	cmp	r3, r1
 800e2a6:	da06      	bge.n	800e2b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800e2a8:	1a9b      	subs	r3, r3, r2
 800e2aa:	4a0d      	ldr	r2, [pc, #52]	; (800e2e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800e2ac:	6812      	ldr	r2, [r2, #0]
 800e2ae:	210e      	movs	r1, #14
 800e2b0:	fb01 2303 	mla	r3, r1, r3, r2
 800e2b4:	e7f1      	b.n	800e29a <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800e2b6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e2ba:	4293      	cmp	r3, r2
 800e2bc:	bf0a      	itet	eq
 800e2be:	4b09      	ldreq	r3, [pc, #36]	; (800e2e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800e2c0:	2000      	movne	r0, #0
 800e2c2:	8818      	ldrheq	r0, [r3, #0]
 800e2c4:	e7ea      	b.n	800e29c <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800e2c6:	bf00      	nop
 800e2c8:	2000a424 	.word	0x2000a424
 800e2cc:	0801d49f 	.word	0x0801d49f
 800e2d0:	0801d5b4 	.word	0x0801d5b4
 800e2d4:	0801d421 	.word	0x0801d421
 800e2d8:	2000a41c 	.word	0x2000a41c
 800e2dc:	2000a420 	.word	0x2000a420
 800e2e0:	2000a404 	.word	0x2000a404
 800e2e4:	2000a392 	.word	0x2000a392

0800e2e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800e2e8:	b510      	push	{r4, lr}
 800e2ea:	4b23      	ldr	r3, [pc, #140]	; (800e378 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800e2ec:	681c      	ldr	r4, [r3, #0]
 800e2ee:	b934      	cbnz	r4, 800e2fe <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800e2f0:	4b22      	ldr	r3, [pc, #136]	; (800e37c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800e2f2:	4a23      	ldr	r2, [pc, #140]	; (800e380 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800e2f4:	4823      	ldr	r0, [pc, #140]	; (800e384 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800e2f6:	f240 31af 	movw	r1, #943	; 0x3af
 800e2fa:	f00b fda1 	bl	8019e40 <__assert_func>
 800e2fe:	4a22      	ldr	r2, [pc, #136]	; (800e388 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800e300:	880b      	ldrh	r3, [r1, #0]
 800e302:	8812      	ldrh	r2, [r2, #0]
 800e304:	4293      	cmp	r3, r2
 800e306:	d211      	bcs.n	800e32c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800e308:	2214      	movs	r2, #20
 800e30a:	fb02 4303 	mla	r3, r2, r3, r4
 800e30e:	8a1a      	ldrh	r2, [r3, #16]
 800e310:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800e314:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800e318:	8a5b      	ldrh	r3, [r3, #18]
 800e31a:	8004      	strh	r4, [r0, #0]
 800e31c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e320:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800e324:	8041      	strh	r1, [r0, #2]
 800e326:	8082      	strh	r2, [r0, #4]
 800e328:	80c3      	strh	r3, [r0, #6]
 800e32a:	e00e      	b.n	800e34a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800e32c:	4917      	ldr	r1, [pc, #92]	; (800e38c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800e32e:	8809      	ldrh	r1, [r1, #0]
 800e330:	4411      	add	r1, r2
 800e332:	428b      	cmp	r3, r1
 800e334:	da0a      	bge.n	800e34c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800e336:	1a9b      	subs	r3, r3, r2
 800e338:	4a15      	ldr	r2, [pc, #84]	; (800e390 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800e33a:	6812      	ldr	r2, [r2, #0]
 800e33c:	210e      	movs	r1, #14
 800e33e:	fb01 2303 	mla	r3, r1, r3, r2
 800e342:	681a      	ldr	r2, [r3, #0]
 800e344:	6002      	str	r2, [r0, #0]
 800e346:	685a      	ldr	r2, [r3, #4]
 800e348:	6042      	str	r2, [r0, #4]
 800e34a:	bd10      	pop	{r4, pc}
 800e34c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e350:	4293      	cmp	r3, r2
 800e352:	d10b      	bne.n	800e36c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800e354:	4b0f      	ldr	r3, [pc, #60]	; (800e394 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800e356:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e35a:	4b0f      	ldr	r3, [pc, #60]	; (800e398 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800e35c:	8081      	strh	r1, [r0, #4]
 800e35e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e362:	80c2      	strh	r2, [r0, #6]
 800e364:	2300      	movs	r3, #0
 800e366:	8003      	strh	r3, [r0, #0]
 800e368:	8043      	strh	r3, [r0, #2]
 800e36a:	e7ee      	b.n	800e34a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800e36c:	2300      	movs	r3, #0
 800e36e:	8003      	strh	r3, [r0, #0]
 800e370:	8043      	strh	r3, [r0, #2]
 800e372:	8083      	strh	r3, [r0, #4]
 800e374:	e7d8      	b.n	800e328 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800e376:	bf00      	nop
 800e378:	2000a424 	.word	0x2000a424
 800e37c:	0801d49f 	.word	0x0801d49f
 800e380:	0801d521 	.word	0x0801d521
 800e384:	0801d421 	.word	0x0801d421
 800e388:	2000a41c 	.word	0x2000a41c
 800e38c:	2000a420 	.word	0x2000a420
 800e390:	2000a404 	.word	0x2000a404
 800e394:	2000a390 	.word	0x2000a390
 800e398:	2000a392 	.word	0x2000a392

0800e39c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800e39c:	4b18      	ldr	r3, [pc, #96]	; (800e400 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800e39e:	681b      	ldr	r3, [r3, #0]
 800e3a0:	b34b      	cbz	r3, 800e3f6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800e3a2:	4a18      	ldr	r2, [pc, #96]	; (800e404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800e3a4:	8800      	ldrh	r0, [r0, #0]
 800e3a6:	8812      	ldrh	r2, [r2, #0]
 800e3a8:	4290      	cmp	r0, r2
 800e3aa:	d211      	bcs.n	800e3d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800e3ac:	2214      	movs	r2, #20
 800e3ae:	fb02 3300 	mla	r3, r2, r0, r3
 800e3b2:	8a1a      	ldrh	r2, [r3, #16]
 800e3b4:	8919      	ldrh	r1, [r3, #8]
 800e3b6:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e3ba:	428a      	cmp	r2, r1
 800e3bc:	db1d      	blt.n	800e3fa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800e3be:	8a58      	ldrh	r0, [r3, #18]
 800e3c0:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800e3c4:	895b      	ldrh	r3, [r3, #10]
 800e3c6:	4298      	cmp	r0, r3
 800e3c8:	bfac      	ite	ge
 800e3ca:	2000      	movge	r0, #0
 800e3cc:	2001      	movlt	r0, #1
 800e3ce:	4770      	bx	lr
 800e3d0:	4b0d      	ldr	r3, [pc, #52]	; (800e408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800e3d2:	881b      	ldrh	r3, [r3, #0]
 800e3d4:	4413      	add	r3, r2
 800e3d6:	4298      	cmp	r0, r3
 800e3d8:	da0d      	bge.n	800e3f6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800e3da:	4b0c      	ldr	r3, [pc, #48]	; (800e40c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800e3dc:	681b      	ldr	r3, [r3, #0]
 800e3de:	1a80      	subs	r0, r0, r2
 800e3e0:	220e      	movs	r2, #14
 800e3e2:	fb02 3300 	mla	r3, r2, r0, r3
 800e3e6:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800e3ea:	891a      	ldrh	r2, [r3, #8]
 800e3ec:	4291      	cmp	r1, r2
 800e3ee:	db04      	blt.n	800e3fa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800e3f0:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800e3f4:	e7e6      	b.n	800e3c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800e3f6:	2000      	movs	r0, #0
 800e3f8:	4770      	bx	lr
 800e3fa:	2001      	movs	r0, #1
 800e3fc:	4770      	bx	lr
 800e3fe:	bf00      	nop
 800e400:	2000a424 	.word	0x2000a424
 800e404:	2000a41c 	.word	0x2000a41c
 800e408:	2000a420 	.word	0x2000a420
 800e40c:	2000a404 	.word	0x2000a404

0800e410 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800e410:	b508      	push	{r3, lr}
 800e412:	4b12      	ldr	r3, [pc, #72]	; (800e45c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800e414:	6819      	ldr	r1, [r3, #0]
 800e416:	b931      	cbnz	r1, 800e426 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800e418:	4b11      	ldr	r3, [pc, #68]	; (800e460 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e41a:	4a12      	ldr	r2, [pc, #72]	; (800e464 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800e41c:	4812      	ldr	r0, [pc, #72]	; (800e468 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800e41e:	f240 31d3 	movw	r1, #979	; 0x3d3
 800e422:	f00b fd0d 	bl	8019e40 <__assert_func>
 800e426:	8803      	ldrh	r3, [r0, #0]
 800e428:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e42c:	4293      	cmp	r3, r2
 800e42e:	d012      	beq.n	800e456 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800e430:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e434:	4293      	cmp	r3, r2
 800e436:	d103      	bne.n	800e440 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800e438:	4b0c      	ldr	r3, [pc, #48]	; (800e46c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800e43a:	681b      	ldr	r3, [r3, #0]
 800e43c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800e43e:	bd08      	pop	{r3, pc}
 800e440:	4a0b      	ldr	r2, [pc, #44]	; (800e470 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800e442:	6812      	ldr	r2, [r2, #0]
 800e444:	b11a      	cbz	r2, 800e44e <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800e446:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800e44a:	2800      	cmp	r0, #0
 800e44c:	d1f7      	bne.n	800e43e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e44e:	2214      	movs	r2, #20
 800e450:	4353      	muls	r3, r2
 800e452:	58c8      	ldr	r0, [r1, r3]
 800e454:	e7f3      	b.n	800e43e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e456:	2000      	movs	r0, #0
 800e458:	e7f1      	b.n	800e43e <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e45a:	bf00      	nop
 800e45c:	2000a424 	.word	0x2000a424
 800e460:	0801d49f 	.word	0x0801d49f
 800e464:	0801d557 	.word	0x0801d557
 800e468:	0801d421 	.word	0x0801d421
 800e46c:	2000a39c 	.word	0x2000a39c
 800e470:	2000a400 	.word	0x2000a400

0800e474 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800e474:	8802      	ldrh	r2, [r0, #0]
 800e476:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800e47a:	429a      	cmp	r2, r3
 800e47c:	d845      	bhi.n	800e50a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800e47e:	4b24      	ldr	r3, [pc, #144]	; (800e510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800e480:	8818      	ldrh	r0, [r3, #0]
 800e482:	4282      	cmp	r2, r0
 800e484:	d221      	bcs.n	800e4ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800e486:	4b23      	ldr	r3, [pc, #140]	; (800e514 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800e488:	6819      	ldr	r1, [r3, #0]
 800e48a:	2314      	movs	r3, #20
 800e48c:	fb03 1302 	mla	r3, r3, r2, r1
 800e490:	6858      	ldr	r0, [r3, #4]
 800e492:	2800      	cmp	r0, #0
 800e494:	d03a      	beq.n	800e50c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800e496:	4920      	ldr	r1, [pc, #128]	; (800e518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800e498:	6809      	ldr	r1, [r1, #0]
 800e49a:	2900      	cmp	r1, #0
 800e49c:	d036      	beq.n	800e50c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800e49e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800e4a2:	2900      	cmp	r1, #0
 800e4a4:	d032      	beq.n	800e50c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800e4a6:	891a      	ldrh	r2, [r3, #8]
 800e4a8:	8958      	ldrh	r0, [r3, #10]
 800e4aa:	4350      	muls	r0, r2
 800e4ac:	7c5a      	ldrb	r2, [r3, #17]
 800e4ae:	7cdb      	ldrb	r3, [r3, #19]
 800e4b0:	0952      	lsrs	r2, r2, #5
 800e4b2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800e4b6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800e4ba:	2b0b      	cmp	r3, #11
 800e4bc:	bf18      	it	ne
 800e4be:	0040      	lslne	r0, r0, #1
 800e4c0:	3003      	adds	r0, #3
 800e4c2:	f020 0003 	bic.w	r0, r0, #3
 800e4c6:	4408      	add	r0, r1
 800e4c8:	4770      	bx	lr
 800e4ca:	4b14      	ldr	r3, [pc, #80]	; (800e51c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800e4cc:	881b      	ldrh	r3, [r3, #0]
 800e4ce:	4403      	add	r3, r0
 800e4d0:	429a      	cmp	r2, r3
 800e4d2:	da1a      	bge.n	800e50a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800e4d4:	4b12      	ldr	r3, [pc, #72]	; (800e520 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800e4d6:	681b      	ldr	r3, [r3, #0]
 800e4d8:	1a10      	subs	r0, r2, r0
 800e4da:	210e      	movs	r1, #14
 800e4dc:	fb01 3000 	mla	r0, r1, r0, r3
 800e4e0:	7b03      	ldrb	r3, [r0, #12]
 800e4e2:	f003 031f 	and.w	r3, r3, #31
 800e4e6:	2b0b      	cmp	r3, #11
 800e4e8:	d10b      	bne.n	800e502 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e4ea:	8903      	ldrh	r3, [r0, #8]
 800e4ec:	8940      	ldrh	r0, [r0, #10]
 800e4ee:	4358      	muls	r0, r3
 800e4f0:	4b09      	ldr	r3, [pc, #36]	; (800e518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800e4f2:	6819      	ldr	r1, [r3, #0]
 800e4f4:	3003      	adds	r0, #3
 800e4f6:	f020 0303 	bic.w	r3, r0, #3
 800e4fa:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800e4fe:	4418      	add	r0, r3
 800e500:	4770      	bx	lr
 800e502:	2b0d      	cmp	r3, #13
 800e504:	d101      	bne.n	800e50a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800e506:	300d      	adds	r0, #13
 800e508:	4770      	bx	lr
 800e50a:	2000      	movs	r0, #0
 800e50c:	4770      	bx	lr
 800e50e:	bf00      	nop
 800e510:	2000a41c 	.word	0x2000a41c
 800e514:	2000a424 	.word	0x2000a424
 800e518:	2000a400 	.word	0x2000a400
 800e51c:	2000a420 	.word	0x2000a420
 800e520:	2000a404 	.word	0x2000a404

0800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800e524:	4b19      	ldr	r3, [pc, #100]	; (800e58c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800e526:	6819      	ldr	r1, [r3, #0]
 800e528:	8803      	ldrh	r3, [r0, #0]
 800e52a:	b1e9      	cbz	r1, 800e568 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800e52c:	4a18      	ldr	r2, [pc, #96]	; (800e590 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800e52e:	8812      	ldrh	r2, [r2, #0]
 800e530:	429a      	cmp	r2, r3
 800e532:	d90a      	bls.n	800e54a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800e534:	2214      	movs	r2, #20
 800e536:	fb02 1303 	mla	r3, r2, r3, r1
 800e53a:	7c58      	ldrb	r0, [r3, #17]
 800e53c:	0942      	lsrs	r2, r0, #5
 800e53e:	7cd8      	ldrb	r0, [r3, #19]
 800e540:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800e544:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800e548:	4770      	bx	lr
 800e54a:	4912      	ldr	r1, [pc, #72]	; (800e594 <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800e54c:	8809      	ldrh	r1, [r1, #0]
 800e54e:	4411      	add	r1, r2
 800e550:	428b      	cmp	r3, r1
 800e552:	da09      	bge.n	800e568 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800e554:	1a9b      	subs	r3, r3, r2
 800e556:	4a10      	ldr	r2, [pc, #64]	; (800e598 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800e558:	6812      	ldr	r2, [r2, #0]
 800e55a:	210e      	movs	r1, #14
 800e55c:	fb01 2303 	mla	r3, r1, r3, r2
 800e560:	7b18      	ldrb	r0, [r3, #12]
 800e562:	f000 001f 	and.w	r0, r0, #31
 800e566:	4770      	bx	lr
 800e568:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e56c:	4293      	cmp	r3, r2
 800e56e:	d10a      	bne.n	800e586 <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800e570:	4b0a      	ldr	r3, [pc, #40]	; (800e59c <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800e572:	681b      	ldr	r3, [r3, #0]
 800e574:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e578:	b10a      	cbz	r2, 800e57e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800e57a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e57c:	b900      	cbnz	r0, 800e580 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800e57e:	6898      	ldr	r0, [r3, #8]
 800e580:	6803      	ldr	r3, [r0, #0]
 800e582:	6a1b      	ldr	r3, [r3, #32]
 800e584:	4718      	bx	r3
 800e586:	2000      	movs	r0, #0
 800e588:	4770      	bx	lr
 800e58a:	bf00      	nop
 800e58c:	2000a424 	.word	0x2000a424
 800e590:	2000a41c 	.word	0x2000a41c
 800e594:	2000a420 	.word	0x2000a420
 800e598:	2000a404 	.word	0x2000a404
 800e59c:	2000a39c 	.word	0x2000a39c

0800e5a0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800e5a0:	2010      	movs	r0, #16
 800e5a2:	4770      	bx	lr

0800e5a4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800e5a4:	2000      	movs	r0, #0
 800e5a6:	4770      	bx	lr

0800e5a8 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800e5a8:	00d2      	lsls	r2, r2, #3
 800e5aa:	0209      	lsls	r1, r1, #8
 800e5ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800e5b0:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800e5b4:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800e5b8:	4310      	orrs	r0, r2
 800e5ba:	4770      	bx	lr

0800e5bc <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800e5bc:	0a09      	lsrs	r1, r1, #8
 800e5be:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800e5c2:	4770      	bx	lr

0800e5c4 <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800e5c4:	08c9      	lsrs	r1, r1, #3
 800e5c6:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800e5ca:	4770      	bx	lr

0800e5cc <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800e5cc:	00c9      	lsls	r1, r1, #3
 800e5ce:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800e5d2:	4770      	bx	lr

0800e5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800e5d4:	2bff      	cmp	r3, #255	; 0xff
 800e5d6:	d050      	beq.n	800e67a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800e5d8:	2a0b      	cmp	r2, #11
 800e5da:	d04a      	beq.n	800e672 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e5dc:	d80e      	bhi.n	800e5fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800e5de:	2a03      	cmp	r2, #3
 800e5e0:	d03f      	beq.n	800e662 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800e5e2:	d804      	bhi.n	800e5ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800e5e4:	2a01      	cmp	r2, #1
 800e5e6:	d03e      	beq.n	800e666 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800e5e8:	d93f      	bls.n	800e66a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800e5ea:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800e5ec:	4770      	bx	lr
 800e5ee:	2a09      	cmp	r2, #9
 800e5f0:	d03f      	beq.n	800e672 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e5f2:	d83c      	bhi.n	800e66e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e5f4:	2a08      	cmp	r2, #8
 800e5f6:	d03a      	beq.n	800e66e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e5f8:	2000      	movs	r0, #0
 800e5fa:	4770      	bx	lr
 800e5fc:	2a2f      	cmp	r2, #47	; 0x2f
 800e5fe:	d024      	beq.n	800e64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800e600:	d80d      	bhi.n	800e61e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800e602:	2a2d      	cmp	r2, #45	; 0x2d
 800e604:	d014      	beq.n	800e630 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800e606:	d826      	bhi.n	800e656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800e608:	2a2c      	cmp	r2, #44	; 0x2c
 800e60a:	d1f5      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e60c:	684b      	ldr	r3, [r1, #4]
 800e60e:	781b      	ldrb	r3, [r3, #0]
 800e610:	2b01      	cmp	r3, #1
 800e612:	d018      	beq.n	800e646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800e614:	d323      	bcc.n	800e65e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800e616:	2b02      	cmp	r3, #2
 800e618:	d1ee      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e61a:	6880      	ldr	r0, [r0, #8]
 800e61c:	4770      	bx	lr
 800e61e:	2a31      	cmp	r2, #49	; 0x31
 800e620:	d004      	beq.n	800e62c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800e622:	d328      	bcc.n	800e676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800e624:	2a32      	cmp	r2, #50	; 0x32
 800e626:	d026      	beq.n	800e676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800e628:	2a33      	cmp	r2, #51	; 0x33
 800e62a:	d1e5      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e62c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800e62e:	4770      	bx	lr
 800e630:	684b      	ldr	r3, [r1, #4]
 800e632:	781b      	ldrb	r3, [r3, #0]
 800e634:	2b01      	cmp	r3, #1
 800e636:	d004      	beq.n	800e642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800e638:	d30b      	bcc.n	800e652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800e63a:	2b02      	cmp	r3, #2
 800e63c:	d1dc      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e63e:	6900      	ldr	r0, [r0, #16]
 800e640:	4770      	bx	lr
 800e642:	6a00      	ldr	r0, [r0, #32]
 800e644:	4770      	bx	lr
 800e646:	6980      	ldr	r0, [r0, #24]
 800e648:	4770      	bx	lr
 800e64a:	684b      	ldr	r3, [r1, #4]
 800e64c:	781b      	ldrb	r3, [r3, #0]
 800e64e:	2b00      	cmp	r3, #0
 800e650:	d1d2      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e652:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e654:	4770      	bx	lr
 800e656:	684b      	ldr	r3, [r1, #4]
 800e658:	781b      	ldrb	r3, [r3, #0]
 800e65a:	2b00      	cmp	r3, #0
 800e65c:	d1cc      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e65e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e660:	4770      	bx	lr
 800e662:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800e664:	4770      	bx	lr
 800e666:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800e668:	4770      	bx	lr
 800e66a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800e66c:	4770      	bx	lr
 800e66e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800e670:	4770      	bx	lr
 800e672:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800e674:	4770      	bx	lr
 800e676:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800e678:	4770      	bx	lr
 800e67a:	2a0b      	cmp	r2, #11
 800e67c:	d049      	beq.n	800e712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e67e:	d80e      	bhi.n	800e69e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800e680:	2a03      	cmp	r2, #3
 800e682:	d040      	beq.n	800e706 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800e684:	d804      	bhi.n	800e690 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800e686:	2a01      	cmp	r2, #1
 800e688:	d03f      	beq.n	800e70a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800e68a:	d940      	bls.n	800e70e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800e68c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800e68e:	4770      	bx	lr
 800e690:	2a09      	cmp	r2, #9
 800e692:	d03e      	beq.n	800e712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e694:	d801      	bhi.n	800e69a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800e696:	2a08      	cmp	r2, #8
 800e698:	d1ae      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e69a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800e69c:	4770      	bx	lr
 800e69e:	2a2f      	cmp	r2, #47	; 0x2f
 800e6a0:	d024      	beq.n	800e6ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800e6a2:	d80d      	bhi.n	800e6c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800e6a4:	2a2d      	cmp	r2, #45	; 0x2d
 800e6a6:	d014      	beq.n	800e6d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800e6a8:	d826      	bhi.n	800e6f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800e6aa:	2a2c      	cmp	r2, #44	; 0x2c
 800e6ac:	d1a4      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e6ae:	684b      	ldr	r3, [r1, #4]
 800e6b0:	781b      	ldrb	r3, [r3, #0]
 800e6b2:	2b01      	cmp	r3, #1
 800e6b4:	d018      	beq.n	800e6e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800e6b6:	d324      	bcc.n	800e702 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800e6b8:	2b02      	cmp	r3, #2
 800e6ba:	d19d      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e6bc:	68c0      	ldr	r0, [r0, #12]
 800e6be:	4770      	bx	lr
 800e6c0:	2a31      	cmp	r2, #49	; 0x31
 800e6c2:	d004      	beq.n	800e6ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800e6c4:	d327      	bcc.n	800e716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e6c6:	2a32      	cmp	r2, #50	; 0x32
 800e6c8:	d025      	beq.n	800e716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e6ca:	2a33      	cmp	r2, #51	; 0x33
 800e6cc:	d194      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e6ce:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800e6d0:	4770      	bx	lr
 800e6d2:	684b      	ldr	r3, [r1, #4]
 800e6d4:	781b      	ldrb	r3, [r3, #0]
 800e6d6:	2b01      	cmp	r3, #1
 800e6d8:	d004      	beq.n	800e6e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800e6da:	d30b      	bcc.n	800e6f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800e6dc:	2b02      	cmp	r3, #2
 800e6de:	d18b      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e6e0:	6940      	ldr	r0, [r0, #20]
 800e6e2:	4770      	bx	lr
 800e6e4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e6e6:	4770      	bx	lr
 800e6e8:	69c0      	ldr	r0, [r0, #28]
 800e6ea:	4770      	bx	lr
 800e6ec:	684b      	ldr	r3, [r1, #4]
 800e6ee:	781b      	ldrb	r3, [r3, #0]
 800e6f0:	2b00      	cmp	r3, #0
 800e6f2:	d181      	bne.n	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e6f4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800e6f6:	4770      	bx	lr
 800e6f8:	684b      	ldr	r3, [r1, #4]
 800e6fa:	781b      	ldrb	r3, [r3, #0]
 800e6fc:	2b00      	cmp	r3, #0
 800e6fe:	f47f af7b 	bne.w	800e5f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e702:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800e704:	4770      	bx	lr
 800e706:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e708:	4770      	bx	lr
 800e70a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800e70c:	4770      	bx	lr
 800e70e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800e710:	4770      	bx	lr
 800e712:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800e714:	4770      	bx	lr
 800e716:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800e718:	4770      	bx	lr

0800e71a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e71a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e71e:	b087      	sub	sp, #28
 800e720:	9815      	ldr	r0, [sp, #84]	; 0x54
 800e722:	9205      	str	r2, [sp, #20]
 800e724:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800e728:	9202      	str	r2, [sp, #8]
 800e72a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e72e:	9101      	str	r1, [sp, #4]
 800e730:	6841      	ldr	r1, [r0, #4]
 800e732:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800e736:	fb01 2404 	mla	r4, r1, r4, r2
 800e73a:	6802      	ldr	r2, [r0, #0]
 800e73c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e740:	f8de 2000 	ldr.w	r2, [lr]
 800e744:	9203      	str	r2, [sp, #12]
 800e746:	f8de 2004 	ldr.w	r2, [lr, #4]
 800e74a:	3204      	adds	r2, #4
 800e74c:	9204      	str	r2, [sp, #16]
 800e74e:	9a02      	ldr	r2, [sp, #8]
 800e750:	43d6      	mvns	r6, r2
 800e752:	b2f6      	uxtb	r6, r6
 800e754:	9a01      	ldr	r2, [sp, #4]
 800e756:	2a00      	cmp	r2, #0
 800e758:	dc03      	bgt.n	800e762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800e75a:	9a05      	ldr	r2, [sp, #20]
 800e75c:	2a00      	cmp	r2, #0
 800e75e:	f340 8129 	ble.w	800e9b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800e762:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e764:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800e768:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800e76c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e770:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e772:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e776:	2b00      	cmp	r3, #0
 800e778:	dd0e      	ble.n	800e798 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e77a:	1408      	asrs	r0, r1, #16
 800e77c:	d405      	bmi.n	800e78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e77e:	4560      	cmp	r0, ip
 800e780:	da03      	bge.n	800e78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e782:	1410      	asrs	r0, r2, #16
 800e784:	d401      	bmi.n	800e78a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e786:	42b8      	cmp	r0, r7
 800e788:	db07      	blt.n	800e79a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800e78a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e78c:	4401      	add	r1, r0
 800e78e:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e790:	3b01      	subs	r3, #1
 800e792:	4402      	add	r2, r0
 800e794:	3402      	adds	r4, #2
 800e796:	e7ee      	b.n	800e776 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800e798:	d071      	beq.n	800e87e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800e79a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e79c:	1e58      	subs	r0, r3, #1
 800e79e:	fb05 1500 	mla	r5, r5, r0, r1
 800e7a2:	142d      	asrs	r5, r5, #16
 800e7a4:	d45f      	bmi.n	800e866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e7a6:	4565      	cmp	r5, ip
 800e7a8:	da5d      	bge.n	800e866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e7aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e7ac:	fb05 2000 	mla	r0, r5, r0, r2
 800e7b0:	1400      	asrs	r0, r0, #16
 800e7b2:	d458      	bmi.n	800e866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e7b4:	42b8      	cmp	r0, r7
 800e7b6:	da56      	bge.n	800e866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800e7b8:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800e7bc:	4699      	mov	r9, r3
 800e7be:	46a2      	mov	sl, r4
 800e7c0:	f1b9 0f00 	cmp.w	r9, #0
 800e7c4:	dd57      	ble.n	800e876 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800e7c6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800e7ca:	9803      	ldr	r0, [sp, #12]
 800e7cc:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800e7d0:	140d      	asrs	r5, r1, #16
 800e7d2:	fb07 000c 	mla	r0, r7, ip, r0
 800e7d6:	f109 39ff 	add.w	r9, r9, #4294967295
 800e7da:	5d40      	ldrb	r0, [r0, r5]
 800e7dc:	9d04      	ldr	r5, [sp, #16]
 800e7de:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800e7e2:	f8ba 5000 	ldrh.w	r5, [sl]
 800e7e6:	122f      	asrs	r7, r5, #8
 800e7e8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e7ec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e7f0:	fb17 f706 	smulbb	r7, r7, r6
 800e7f4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800e7f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e7fc:	00ed      	lsls	r5, r5, #3
 800e7fe:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800e802:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800e806:	10c7      	asrs	r7, r0, #3
 800e808:	b2ed      	uxtb	r5, r5
 800e80a:	00c0      	lsls	r0, r0, #3
 800e80c:	fb18 f806 	smulbb	r8, r8, r6
 800e810:	fb15 f506 	smulbb	r5, r5, r6
 800e814:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e818:	b2c0      	uxtb	r0, r0
 800e81a:	fa1f fc8c 	uxth.w	ip, ip
 800e81e:	fb07 870b 	mla	r7, r7, fp, r8
 800e822:	fb00 500b 	mla	r0, r0, fp, r5
 800e826:	b280      	uxth	r0, r0
 800e828:	b2bf      	uxth	r7, r7
 800e82a:	f10c 0501 	add.w	r5, ip, #1
 800e82e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e832:	f107 0801 	add.w	r8, r7, #1
 800e836:	1c45      	adds	r5, r0, #1
 800e838:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e83c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800e840:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e842:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e846:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e84a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800e84e:	ea4c 0c05 	orr.w	ip, ip, r5
 800e852:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800e856:	4401      	add	r1, r0
 800e858:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e85a:	ea4c 0c08 	orr.w	ip, ip, r8
 800e85e:	f82a cb02 	strh.w	ip, [sl], #2
 800e862:	4402      	add	r2, r0
 800e864:	e7ac      	b.n	800e7c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800e866:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800e86a:	f04f 0800 	mov.w	r8, #0
 800e86e:	eb03 0008 	add.w	r0, r3, r8
 800e872:	2800      	cmp	r0, #0
 800e874:	dc41      	bgt.n	800e8fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e876:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e87a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e87e:	9b01      	ldr	r3, [sp, #4]
 800e880:	2b00      	cmp	r3, #0
 800e882:	f340 8097 	ble.w	800e9b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800e886:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e88a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e88e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e892:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e894:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e898:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e89c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e8a0:	eef0 6a62 	vmov.f32	s13, s5
 800e8a4:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e8a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e8ac:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e8b0:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e8b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e8b8:	eef0 6a43 	vmov.f32	s13, s6
 800e8bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e8c0:	ee12 2a90 	vmov	r2, s5
 800e8c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e8c8:	fb92 f3f3 	sdiv	r3, r2, r3
 800e8cc:	ee13 2a10 	vmov	r2, s6
 800e8d0:	9313      	str	r3, [sp, #76]	; 0x4c
 800e8d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8d4:	fb92 f3f3 	sdiv	r3, r2, r3
 800e8d8:	9314      	str	r3, [sp, #80]	; 0x50
 800e8da:	9b01      	ldr	r3, [sp, #4]
 800e8dc:	9a05      	ldr	r2, [sp, #20]
 800e8de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e8e2:	3b01      	subs	r3, #1
 800e8e4:	9301      	str	r3, [sp, #4]
 800e8e6:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e8ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e8ec:	eeb0 3a67 	vmov.f32	s6, s15
 800e8f0:	bf08      	it	eq
 800e8f2:	4613      	moveq	r3, r2
 800e8f4:	eef0 2a47 	vmov.f32	s5, s14
 800e8f8:	e72c      	b.n	800e754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800e8fa:	140f      	asrs	r7, r1, #16
 800e8fc:	d453      	bmi.n	800e9a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e8fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 800e902:	42bd      	cmp	r5, r7
 800e904:	dd4f      	ble.n	800e9a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e906:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800e90a:	d44c      	bmi.n	800e9a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e90c:	f8de 000c 	ldr.w	r0, [lr, #12]
 800e910:	4560      	cmp	r0, ip
 800e912:	dd48      	ble.n	800e9a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800e914:	9803      	ldr	r0, [sp, #12]
 800e916:	b22d      	sxth	r5, r5
 800e918:	fb0c 0505 	mla	r5, ip, r5, r0
 800e91c:	5de8      	ldrb	r0, [r5, r7]
 800e91e:	9d04      	ldr	r5, [sp, #16]
 800e920:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800e924:	f06f 0501 	mvn.w	r5, #1
 800e928:	fb05 fb08 	mul.w	fp, r5, r8
 800e92c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e930:	f834 500b 	ldrh.w	r5, [r4, fp]
 800e934:	122f      	asrs	r7, r5, #8
 800e936:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e93a:	fb17 f706 	smulbb	r7, r7, r6
 800e93e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800e942:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e946:	00ed      	lsls	r5, r5, #3
 800e948:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800e94c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e950:	10c7      	asrs	r7, r0, #3
 800e952:	b2ed      	uxtb	r5, r5
 800e954:	00c0      	lsls	r0, r0, #3
 800e956:	fb19 f906 	smulbb	r9, r9, r6
 800e95a:	fb15 f506 	smulbb	r5, r5, r6
 800e95e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e962:	b2c0      	uxtb	r0, r0
 800e964:	fa1f fc8c 	uxth.w	ip, ip
 800e968:	fb07 970a 	mla	r7, r7, sl, r9
 800e96c:	fb00 500a 	mla	r0, r0, sl, r5
 800e970:	b2bf      	uxth	r7, r7
 800e972:	b280      	uxth	r0, r0
 800e974:	f10c 0501 	add.w	r5, ip, #1
 800e978:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e97c:	f107 0901 	add.w	r9, r7, #1
 800e980:	1c45      	adds	r5, r0, #1
 800e982:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e986:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e98a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e98e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800e992:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e996:	ea4c 0c05 	orr.w	ip, ip, r5
 800e99a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e99e:	ea4c 0c09 	orr.w	ip, ip, r9
 800e9a2:	f824 c00b 	strh.w	ip, [r4, fp]
 800e9a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e9a8:	4401      	add	r1, r0
 800e9aa:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e9ac:	f108 38ff 	add.w	r8, r8, #4294967295
 800e9b0:	4402      	add	r2, r0
 800e9b2:	e75c      	b.n	800e86e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800e9b4:	b007      	add	sp, #28
 800e9b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e9ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e9ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9be:	b085      	sub	sp, #20
 800e9c0:	4693      	mov	fp, r2
 800e9c2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e9c4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800e9c6:	6870      	ldr	r0, [r6, #4]
 800e9c8:	9100      	str	r1, [sp, #0]
 800e9ca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e9ce:	fb00 2404 	mla	r4, r0, r4, r2
 800e9d2:	6832      	ldr	r2, [r6, #0]
 800e9d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e9d8:	682a      	ldr	r2, [r5, #0]
 800e9da:	9201      	str	r2, [sp, #4]
 800e9dc:	686a      	ldr	r2, [r5, #4]
 800e9de:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800e9e2:	3204      	adds	r2, #4
 800e9e4:	9202      	str	r2, [sp, #8]
 800e9e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e9ea:	9a00      	ldr	r2, [sp, #0]
 800e9ec:	2a00      	cmp	r2, #0
 800e9ee:	dc03      	bgt.n	800e9f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800e9f0:	f1bb 0f00 	cmp.w	fp, #0
 800e9f4:	f340 80a0 	ble.w	800eb38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800e9f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e9fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e9fe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800ea02:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ea06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ea08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ea0c:	2b00      	cmp	r3, #0
 800ea0e:	dd0c      	ble.n	800ea2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ea10:	1406      	asrs	r6, r0, #16
 800ea12:	d405      	bmi.n	800ea20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ea14:	454e      	cmp	r6, r9
 800ea16:	da03      	bge.n	800ea20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ea18:	1416      	asrs	r6, r2, #16
 800ea1a:	d401      	bmi.n	800ea20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ea1c:	4546      	cmp	r6, r8
 800ea1e:	db05      	blt.n	800ea2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ea20:	4470      	add	r0, lr
 800ea22:	4462      	add	r2, ip
 800ea24:	3b01      	subs	r3, #1
 800ea26:	3402      	adds	r4, #2
 800ea28:	e7f0      	b.n	800ea0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800ea2a:	d00f      	beq.n	800ea4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800ea2c:	1e5e      	subs	r6, r3, #1
 800ea2e:	fb0e 0706 	mla	r7, lr, r6, r0
 800ea32:	143f      	asrs	r7, r7, #16
 800ea34:	d541      	bpl.n	800eaba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800ea36:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800ea3a:	4698      	mov	r8, r3
 800ea3c:	9603      	str	r6, [sp, #12]
 800ea3e:	f1b8 0f00 	cmp.w	r8, #0
 800ea42:	dc59      	bgt.n	800eaf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800ea44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ea48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ea4c:	9b00      	ldr	r3, [sp, #0]
 800ea4e:	2b00      	cmp	r3, #0
 800ea50:	dd72      	ble.n	800eb38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800ea52:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ea56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ea5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ea5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ea60:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ea64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ea68:	eeb0 6a62 	vmov.f32	s12, s5
 800ea6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ea70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ea74:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ea78:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ea7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ea80:	eeb0 6a43 	vmov.f32	s12, s6
 800ea84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ea88:	ee12 2a90 	vmov	r2, s5
 800ea8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ea90:	fb92 fef3 	sdiv	lr, r2, r3
 800ea94:	ee13 2a10 	vmov	r2, s6
 800ea98:	fb92 fcf3 	sdiv	ip, r2, r3
 800ea9c:	9b00      	ldr	r3, [sp, #0]
 800ea9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eaa2:	3b01      	subs	r3, #1
 800eaa4:	9300      	str	r3, [sp, #0]
 800eaa6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800eaaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800eaac:	eeb0 3a67 	vmov.f32	s6, s15
 800eab0:	bf08      	it	eq
 800eab2:	465b      	moveq	r3, fp
 800eab4:	eef0 2a47 	vmov.f32	s5, s14
 800eab8:	e797      	b.n	800e9ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800eaba:	454f      	cmp	r7, r9
 800eabc:	dabb      	bge.n	800ea36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800eabe:	fb0c 2606 	mla	r6, ip, r6, r2
 800eac2:	1436      	asrs	r6, r6, #16
 800eac4:	d4b7      	bmi.n	800ea36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800eac6:	4546      	cmp	r6, r8
 800eac8:	dab5      	bge.n	800ea36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800eaca:	461e      	mov	r6, r3
 800eacc:	46a0      	mov	r8, r4
 800eace:	2e00      	cmp	r6, #0
 800ead0:	ddb8      	ble.n	800ea44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800ead2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800ead6:	9901      	ldr	r1, [sp, #4]
 800ead8:	1417      	asrs	r7, r2, #16
 800eada:	ea4f 4920 	mov.w	r9, r0, asr #16
 800eade:	fb0a 1707 	mla	r7, sl, r7, r1
 800eae2:	9902      	ldr	r1, [sp, #8]
 800eae4:	f817 7009 	ldrb.w	r7, [r7, r9]
 800eae8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800eaec:	f828 7b02 	strh.w	r7, [r8], #2
 800eaf0:	4470      	add	r0, lr
 800eaf2:	4462      	add	r2, ip
 800eaf4:	3e01      	subs	r6, #1
 800eaf6:	e7ea      	b.n	800eace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800eaf8:	ea5f 4920 	movs.w	r9, r0, asr #16
 800eafc:	d417      	bmi.n	800eb2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eafe:	68ae      	ldr	r6, [r5, #8]
 800eb00:	454e      	cmp	r6, r9
 800eb02:	dd14      	ble.n	800eb2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eb04:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800eb08:	d411      	bmi.n	800eb2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eb0a:	68ef      	ldr	r7, [r5, #12]
 800eb0c:	4557      	cmp	r7, sl
 800eb0e:	dd0e      	ble.n	800eb2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800eb10:	9f01      	ldr	r7, [sp, #4]
 800eb12:	b236      	sxth	r6, r6
 800eb14:	fb0a 7606 	mla	r6, sl, r6, r7
 800eb18:	9f02      	ldr	r7, [sp, #8]
 800eb1a:	f816 6009 	ldrb.w	r6, [r6, r9]
 800eb1e:	f06f 0101 	mvn.w	r1, #1
 800eb22:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800eb26:	fb01 f608 	mul.w	r6, r1, r8
 800eb2a:	9903      	ldr	r1, [sp, #12]
 800eb2c:	538f      	strh	r7, [r1, r6]
 800eb2e:	4470      	add	r0, lr
 800eb30:	4462      	add	r2, ip
 800eb32:	f108 38ff 	add.w	r8, r8, #4294967295
 800eb36:	e782      	b.n	800ea3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800eb38:	b005      	add	sp, #20
 800eb3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800eb3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800eb3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb42:	b087      	sub	sp, #28
 800eb44:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800eb46:	9205      	str	r2, [sp, #20]
 800eb48:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800eb4c:	9203      	str	r2, [sp, #12]
 800eb4e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800eb52:	9102      	str	r1, [sp, #8]
 800eb54:	6861      	ldr	r1, [r4, #4]
 800eb56:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800eb5a:	fb01 2000 	mla	r0, r1, r0, r2
 800eb5e:	6822      	ldr	r2, [r4, #0]
 800eb60:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800eb64:	9200      	str	r2, [sp, #0]
 800eb66:	f8dc 2000 	ldr.w	r2, [ip]
 800eb6a:	9204      	str	r2, [sp, #16]
 800eb6c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800eb70:	3204      	adds	r2, #4
 800eb72:	9201      	str	r2, [sp, #4]
 800eb74:	9a03      	ldr	r2, [sp, #12]
 800eb76:	43d5      	mvns	r5, r2
 800eb78:	b2ed      	uxtb	r5, r5
 800eb7a:	9a02      	ldr	r2, [sp, #8]
 800eb7c:	2a00      	cmp	r2, #0
 800eb7e:	dc03      	bgt.n	800eb88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800eb80:	9a05      	ldr	r2, [sp, #20]
 800eb82:	2a00      	cmp	r2, #0
 800eb84:	f340 812c 	ble.w	800ede0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800eb88:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800eb8a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800eb8e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800eb92:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800eb96:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800eb98:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800eb9c:	2b00      	cmp	r3, #0
 800eb9e:	dd10      	ble.n	800ebc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800eba0:	140c      	asrs	r4, r1, #16
 800eba2:	d405      	bmi.n	800ebb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800eba4:	4574      	cmp	r4, lr
 800eba6:	da03      	bge.n	800ebb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800eba8:	1414      	asrs	r4, r2, #16
 800ebaa:	d401      	bmi.n	800ebb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ebac:	42bc      	cmp	r4, r7
 800ebae:	db09      	blt.n	800ebc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800ebb0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ebb2:	9800      	ldr	r0, [sp, #0]
 800ebb4:	4421      	add	r1, r4
 800ebb6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800ebb8:	3002      	adds	r0, #2
 800ebba:	4422      	add	r2, r4
 800ebbc:	3b01      	subs	r3, #1
 800ebbe:	9000      	str	r0, [sp, #0]
 800ebc0:	e7ec      	b.n	800eb9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800ebc2:	d071      	beq.n	800eca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800ebc4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ebc6:	1e5c      	subs	r4, r3, #1
 800ebc8:	fb06 1604 	mla	r6, r6, r4, r1
 800ebcc:	1436      	asrs	r6, r6, #16
 800ebce:	d45d      	bmi.n	800ec8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ebd0:	4576      	cmp	r6, lr
 800ebd2:	da5b      	bge.n	800ec8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ebd4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800ebd6:	fb06 2404 	mla	r4, r6, r4, r2
 800ebda:	1424      	asrs	r4, r4, #16
 800ebdc:	d456      	bmi.n	800ec8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ebde:	42bc      	cmp	r4, r7
 800ebe0:	da54      	bge.n	800ec8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800ebe2:	f8dd 9000 	ldr.w	r9, [sp]
 800ebe6:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800ebea:	4698      	mov	r8, r3
 800ebec:	f1b8 0f00 	cmp.w	r8, #0
 800ebf0:	dd54      	ble.n	800ec9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800ebf2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800ebf6:	9804      	ldr	r0, [sp, #16]
 800ebf8:	1414      	asrs	r4, r2, #16
 800ebfa:	fb07 0404 	mla	r4, r7, r4, r0
 800ebfe:	140e      	asrs	r6, r1, #16
 800ec00:	9801      	ldr	r0, [sp, #4]
 800ec02:	f814 e006 	ldrb.w	lr, [r4, r6]
 800ec06:	f8b9 4000 	ldrh.w	r4, [r9]
 800ec0a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800ec0e:	eb00 0b0e 	add.w	fp, r0, lr
 800ec12:	1227      	asrs	r7, r4, #8
 800ec14:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800ec18:	f89b b001 	ldrb.w	fp, [fp, #1]
 800ec1c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 800ec20:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ec22:	fb16 f60a 	smulbb	r6, r6, sl
 800ec26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ec2a:	fb07 6705 	mla	r7, r7, r5, r6
 800ec2e:	10e6      	asrs	r6, r4, #3
 800ec30:	00e4      	lsls	r4, r4, #3
 800ec32:	b2e4      	uxtb	r4, r4
 800ec34:	fb1b fb0a 	smulbb	fp, fp, sl
 800ec38:	fb14 f405 	smulbb	r4, r4, r5
 800ec3c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ec40:	b2bf      	uxth	r7, r7
 800ec42:	fb06 b605 	mla	r6, r6, r5, fp
 800ec46:	fb0e 4e0a 	mla	lr, lr, sl, r4
 800ec4a:	b2b6      	uxth	r6, r6
 800ec4c:	fa1f fe8e 	uxth.w	lr, lr
 800ec50:	1c7c      	adds	r4, r7, #1
 800ec52:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800ec56:	f106 0b01 	add.w	fp, r6, #1
 800ec5a:	f10e 0401 	add.w	r4, lr, #1
 800ec5e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 800ec62:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800ec66:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ec6a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800ec6e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ec72:	4327      	orrs	r7, r4
 800ec74:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ec78:	4401      	add	r1, r0
 800ec7a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ec7c:	ea47 070b 	orr.w	r7, r7, fp
 800ec80:	f829 7b02 	strh.w	r7, [r9], #2
 800ec84:	4402      	add	r2, r0
 800ec86:	f108 38ff 	add.w	r8, r8, #4294967295
 800ec8a:	e7af      	b.n	800ebec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 800ec8c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 800ec90:	f04f 0e00 	mov.w	lr, #0
 800ec94:	eb03 040e 	add.w	r4, r3, lr
 800ec98:	2c00      	cmp	r4, #0
 800ec9a:	dc43      	bgt.n	800ed24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800ec9c:	9a00      	ldr	r2, [sp, #0]
 800ec9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800eca2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800eca6:	9300      	str	r3, [sp, #0]
 800eca8:	9b02      	ldr	r3, [sp, #8]
 800ecaa:	2b00      	cmp	r3, #0
 800ecac:	f340 8098 	ble.w	800ede0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800ecb0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ecb4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ecb8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800ecbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ecc2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ecc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ecca:	eef0 6a62 	vmov.f32	s13, s5
 800ecce:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ecd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ecd6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ecda:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800ecde:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ece2:	eef0 6a43 	vmov.f32	s13, s6
 800ece6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ecea:	ee12 2a90 	vmov	r2, s5
 800ecee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ecf2:	fb92 f3f3 	sdiv	r3, r2, r3
 800ecf6:	ee13 2a10 	vmov	r2, s6
 800ecfa:	9313      	str	r3, [sp, #76]	; 0x4c
 800ecfc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ecfe:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed02:	9314      	str	r3, [sp, #80]	; 0x50
 800ed04:	9b02      	ldr	r3, [sp, #8]
 800ed06:	9a05      	ldr	r2, [sp, #20]
 800ed08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800ed0c:	3b01      	subs	r3, #1
 800ed0e:	9302      	str	r3, [sp, #8]
 800ed10:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800ed14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ed16:	eeb0 3a67 	vmov.f32	s6, s15
 800ed1a:	bf08      	it	eq
 800ed1c:	4613      	moveq	r3, r2
 800ed1e:	eef0 2a47 	vmov.f32	s5, s14
 800ed22:	e72a      	b.n	800eb7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800ed24:	140f      	asrs	r7, r1, #16
 800ed26:	d454      	bmi.n	800edd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800ed28:	f8dc 6008 	ldr.w	r6, [ip, #8]
 800ed2c:	42be      	cmp	r6, r7
 800ed2e:	dd50      	ble.n	800edd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800ed30:	ea5f 4822 	movs.w	r8, r2, asr #16
 800ed34:	d44d      	bmi.n	800edd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800ed36:	f8dc 400c 	ldr.w	r4, [ip, #12]
 800ed3a:	4544      	cmp	r4, r8
 800ed3c:	dd49      	ble.n	800edd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800ed3e:	9c04      	ldr	r4, [sp, #16]
 800ed40:	b236      	sxth	r6, r6
 800ed42:	fb08 4606 	mla	r6, r8, r6, r4
 800ed46:	f06f 0001 	mvn.w	r0, #1
 800ed4a:	f816 8007 	ldrb.w	r8, [r6, r7]
 800ed4e:	9c01      	ldr	r4, [sp, #4]
 800ed50:	fb00 fa0e 	mul.w	sl, r0, lr
 800ed54:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800ed58:	9800      	ldr	r0, [sp, #0]
 800ed5a:	eb04 0b08 	add.w	fp, r4, r8
 800ed5e:	f830 400a 	ldrh.w	r4, [r0, sl]
 800ed62:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800ed66:	9801      	ldr	r0, [sp, #4]
 800ed68:	f89b b001 	ldrb.w	fp, [fp, #1]
 800ed6c:	f810 8008 	ldrb.w	r8, [r0, r8]
 800ed70:	9800      	ldr	r0, [sp, #0]
 800ed72:	1227      	asrs	r7, r4, #8
 800ed74:	fb16 f609 	smulbb	r6, r6, r9
 800ed78:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ed7c:	fb07 6705 	mla	r7, r7, r5, r6
 800ed80:	10e6      	asrs	r6, r4, #3
 800ed82:	00e4      	lsls	r4, r4, #3
 800ed84:	b2e4      	uxtb	r4, r4
 800ed86:	fb1b fb09 	smulbb	fp, fp, r9
 800ed8a:	fb14 f405 	smulbb	r4, r4, r5
 800ed8e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ed92:	b2bf      	uxth	r7, r7
 800ed94:	fb06 b605 	mla	r6, r6, r5, fp
 800ed98:	fb08 4809 	mla	r8, r8, r9, r4
 800ed9c:	b2b6      	uxth	r6, r6
 800ed9e:	fa1f f888 	uxth.w	r8, r8
 800eda2:	1c7c      	adds	r4, r7, #1
 800eda4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800eda8:	f106 0b01 	add.w	fp, r6, #1
 800edac:	f108 0401 	add.w	r4, r8, #1
 800edb0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 800edb4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800edb8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800edbc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800edc0:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800edc4:	4327      	orrs	r7, r4
 800edc6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800edca:	ea47 070b 	orr.w	r7, r7, fp
 800edce:	f820 700a 	strh.w	r7, [r0, sl]
 800edd2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800edd4:	4401      	add	r1, r0
 800edd6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800edd8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800eddc:	4402      	add	r2, r0
 800edde:	e759      	b.n	800ec94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800ede0:	b007      	add	sp, #28
 800ede2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800ede8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ede8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edec:	b085      	sub	sp, #20
 800edee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800edf2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800edf4:	9203      	str	r2, [sp, #12]
 800edf6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800edfa:	6870      	ldr	r0, [r6, #4]
 800edfc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800edfe:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800ee02:	686f      	ldr	r7, [r5, #4]
 800ee04:	9101      	str	r1, [sp, #4]
 800ee06:	fb00 2404 	mla	r4, r0, r4, r2
 800ee0a:	6832      	ldr	r2, [r6, #0]
 800ee0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ee10:	682a      	ldr	r2, [r5, #0]
 800ee12:	9202      	str	r2, [sp, #8]
 800ee14:	3704      	adds	r7, #4
 800ee16:	9a01      	ldr	r2, [sp, #4]
 800ee18:	2a00      	cmp	r2, #0
 800ee1a:	dc03      	bgt.n	800ee24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800ee1c:	9a03      	ldr	r2, [sp, #12]
 800ee1e:	2a00      	cmp	r2, #0
 800ee20:	f340 80cc 	ble.w	800efbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800ee24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ee26:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800ee2a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800ee2e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ee32:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ee34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ee38:	2b00      	cmp	r3, #0
 800ee3a:	dd0d      	ble.n	800ee58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800ee3c:	1406      	asrs	r6, r0, #16
 800ee3e:	d405      	bmi.n	800ee4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800ee40:	454e      	cmp	r6, r9
 800ee42:	da03      	bge.n	800ee4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800ee44:	1416      	asrs	r6, r2, #16
 800ee46:	d401      	bmi.n	800ee4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800ee48:	4546      	cmp	r6, r8
 800ee4a:	db06      	blt.n	800ee5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800ee4c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800ee4e:	4460      	add	r0, ip
 800ee50:	4432      	add	r2, r6
 800ee52:	3b01      	subs	r3, #1
 800ee54:	3402      	adds	r4, #2
 800ee56:	e7ef      	b.n	800ee38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 800ee58:	d00f      	beq.n	800ee7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800ee5a:	1e5e      	subs	r6, r3, #1
 800ee5c:	fb0c 0e06 	mla	lr, ip, r6, r0
 800ee60:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800ee64:	d543      	bpl.n	800eeee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 800ee66:	4698      	mov	r8, r3
 800ee68:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 800ee6c:	f1b8 0f00 	cmp.w	r8, #0
 800ee70:	dc71      	bgt.n	800ef56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 800ee72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ee76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ee7a:	9b01      	ldr	r3, [sp, #4]
 800ee7c:	2b00      	cmp	r3, #0
 800ee7e:	f340 809d 	ble.w	800efbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800ee82:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ee86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ee8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ee8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ee90:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ee94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ee98:	eeb0 6a62 	vmov.f32	s12, s5
 800ee9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800eea0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eea4:	ee77 2a62 	vsub.f32	s5, s14, s5
 800eea8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800eeac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800eeb0:	eeb0 6a43 	vmov.f32	s12, s6
 800eeb4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eeb8:	ee12 2a90 	vmov	r2, s5
 800eebc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800eec0:	fb92 fcf3 	sdiv	ip, r2, r3
 800eec4:	ee13 2a10 	vmov	r2, s6
 800eec8:	fb92 f3f3 	sdiv	r3, r2, r3
 800eecc:	9312      	str	r3, [sp, #72]	; 0x48
 800eece:	9b01      	ldr	r3, [sp, #4]
 800eed0:	9a03      	ldr	r2, [sp, #12]
 800eed2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eed6:	3b01      	subs	r3, #1
 800eed8:	9301      	str	r3, [sp, #4]
 800eeda:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800eede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800eee0:	eeb0 3a67 	vmov.f32	s6, s15
 800eee4:	bf08      	it	eq
 800eee6:	4613      	moveq	r3, r2
 800eee8:	eef0 2a47 	vmov.f32	s5, s14
 800eeec:	e793      	b.n	800ee16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 800eeee:	45ce      	cmp	lr, r9
 800eef0:	dab9      	bge.n	800ee66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800eef2:	9912      	ldr	r1, [sp, #72]	; 0x48
 800eef4:	fb01 2606 	mla	r6, r1, r6, r2
 800eef8:	1436      	asrs	r6, r6, #16
 800eefa:	d4b4      	bmi.n	800ee66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800eefc:	4546      	cmp	r6, r8
 800eefe:	dab2      	bge.n	800ee66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ef00:	4698      	mov	r8, r3
 800ef02:	46a2      	mov	sl, r4
 800ef04:	f1b8 0f00 	cmp.w	r8, #0
 800ef08:	ddb3      	ble.n	800ee72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800ef0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800ef0e:	9902      	ldr	r1, [sp, #8]
 800ef10:	1416      	asrs	r6, r2, #16
 800ef12:	fb09 1606 	mla	r6, r9, r6, r1
 800ef16:	ea4f 4e20 	mov.w	lr, r0, asr #16
 800ef1a:	492a      	ldr	r1, [pc, #168]	; (800efc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 800ef1c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 800ef20:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800ef24:	eb07 0b0e 	add.w	fp, r7, lr
 800ef28:	4460      	add	r0, ip
 800ef2a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800ef2e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800ef32:	00f6      	lsls	r6, r6, #3
 800ef34:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800ef38:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800ef3c:	ea49 0606 	orr.w	r6, r9, r6
 800ef40:	f817 900e 	ldrb.w	r9, [r7, lr]
 800ef44:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ef46:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800ef4a:	f82a 6b02 	strh.w	r6, [sl], #2
 800ef4e:	440a      	add	r2, r1
 800ef50:	f108 38ff 	add.w	r8, r8, #4294967295
 800ef54:	e7d6      	b.n	800ef04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800ef56:	ea5f 4920 	movs.w	r9, r0, asr #16
 800ef5a:	d429      	bmi.n	800efb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ef5c:	68ae      	ldr	r6, [r5, #8]
 800ef5e:	454e      	cmp	r6, r9
 800ef60:	dd26      	ble.n	800efb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ef62:	ea5f 4b22 	movs.w	fp, r2, asr #16
 800ef66:	d423      	bmi.n	800efb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ef68:	68e9      	ldr	r1, [r5, #12]
 800ef6a:	4559      	cmp	r1, fp
 800ef6c:	dd20      	ble.n	800efb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800ef6e:	9902      	ldr	r1, [sp, #8]
 800ef70:	fa0f fe86 	sxth.w	lr, r6
 800ef74:	fb0b 1e0e 	mla	lr, fp, lr, r1
 800ef78:	f06f 0101 	mvn.w	r1, #1
 800ef7c:	f81e e009 	ldrb.w	lr, [lr, r9]
 800ef80:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800ef84:	eb07 060e 	add.w	r6, r7, lr
 800ef88:	fb01 f908 	mul.w	r9, r1, r8
 800ef8c:	f896 b002 	ldrb.w	fp, [r6, #2]
 800ef90:	7876      	ldrb	r6, [r6, #1]
 800ef92:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800ef96:	00f6      	lsls	r6, r6, #3
 800ef98:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 800ef9c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800efa0:	ea4b 0606 	orr.w	r6, fp, r6
 800efa4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 800efa8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 800efac:	f82a 6009 	strh.w	r6, [sl, r9]
 800efb0:	9912      	ldr	r1, [sp, #72]	; 0x48
 800efb2:	4460      	add	r0, ip
 800efb4:	440a      	add	r2, r1
 800efb6:	f108 38ff 	add.w	r8, r8, #4294967295
 800efba:	e757      	b.n	800ee6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800efbc:	b005      	add	sp, #20
 800efbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800efc2:	bf00      	nop
 800efc4:	fffff800 	.word	0xfffff800

0800efc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800efc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efcc:	b087      	sub	sp, #28
 800efce:	468b      	mov	fp, r1
 800efd0:	9815      	ldr	r0, [sp, #84]	; 0x54
 800efd2:	9204      	str	r2, [sp, #16]
 800efd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800efd8:	9205      	str	r2, [sp, #20]
 800efda:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800efde:	6841      	ldr	r1, [r0, #4]
 800efe0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800efe4:	fb01 2404 	mla	r4, r1, r4, r2
 800efe8:	6802      	ldr	r2, [r0, #0]
 800efea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800efee:	f8dc 2000 	ldr.w	r2, [ip]
 800eff2:	9201      	str	r2, [sp, #4]
 800eff4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800eff8:	3204      	adds	r2, #4
 800effa:	9202      	str	r2, [sp, #8]
 800effc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f000:	f1bb 0f00 	cmp.w	fp, #0
 800f004:	dc03      	bgt.n	800f00e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 800f006:	9a04      	ldr	r2, [sp, #16]
 800f008:	2a00      	cmp	r2, #0
 800f00a:	f340 8138 	ble.w	800f27e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800f00e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f010:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800f014:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 800f018:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f01c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f01e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f022:	2b00      	cmp	r3, #0
 800f024:	dd0e      	ble.n	800f044 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f026:	1402      	asrs	r2, r0, #16
 800f028:	d405      	bmi.n	800f036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f02a:	42ba      	cmp	r2, r7
 800f02c:	da03      	bge.n	800f036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f02e:	140a      	asrs	r2, r1, #16
 800f030:	d401      	bmi.n	800f036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f032:	42b2      	cmp	r2, r6
 800f034:	db07      	blt.n	800f046 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f036:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f038:	4410      	add	r0, r2
 800f03a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f03c:	3b01      	subs	r3, #1
 800f03e:	4411      	add	r1, r2
 800f040:	3402      	adds	r4, #2
 800f042:	e7ee      	b.n	800f022 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 800f044:	d019      	beq.n	800f07a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800f046:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f048:	1e5a      	subs	r2, r3, #1
 800f04a:	fb05 0502 	mla	r5, r5, r2, r0
 800f04e:	142d      	asrs	r5, r5, #16
 800f050:	d409      	bmi.n	800f066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f052:	42bd      	cmp	r5, r7
 800f054:	da07      	bge.n	800f066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f056:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f058:	fb05 1202 	mla	r2, r5, r2, r1
 800f05c:	1412      	asrs	r2, r2, #16
 800f05e:	d402      	bmi.n	800f066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f060:	42b2      	cmp	r2, r6
 800f062:	f2c0 80ac 	blt.w	800f1be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 800f066:	f04f 0e00 	mov.w	lr, #0
 800f06a:	eb03 020e 	add.w	r2, r3, lr
 800f06e:	2a00      	cmp	r2, #0
 800f070:	dc3e      	bgt.n	800f0f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800f072:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f076:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f07a:	f1bb 0f00 	cmp.w	fp, #0
 800f07e:	f340 80fe 	ble.w	800f27e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800f082:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f086:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f08a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f08e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f090:	f1bb 0b01 	subs.w	fp, fp, #1
 800f094:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f098:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f09c:	eeb0 6a62 	vmov.f32	s12, s5
 800f0a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f0a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f0a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f0ac:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f0b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f0b4:	eeb0 6a43 	vmov.f32	s12, s6
 800f0b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f0bc:	ee12 2a90 	vmov	r2, s5
 800f0c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f0c4:	fb92 f3f3 	sdiv	r3, r2, r3
 800f0c8:	ee13 2a10 	vmov	r2, s6
 800f0cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f0d0:	9313      	str	r3, [sp, #76]	; 0x4c
 800f0d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0d4:	fb92 f3f3 	sdiv	r3, r2, r3
 800f0d8:	9a04      	ldr	r2, [sp, #16]
 800f0da:	9314      	str	r3, [sp, #80]	; 0x50
 800f0dc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f0e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0e2:	eeb0 3a67 	vmov.f32	s6, s15
 800f0e6:	bf08      	it	eq
 800f0e8:	4613      	moveq	r3, r2
 800f0ea:	eef0 2a47 	vmov.f32	s5, s14
 800f0ee:	e787      	b.n	800f000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800f0f0:	1406      	asrs	r6, r0, #16
 800f0f2:	d45d      	bmi.n	800f1b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f0f4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800f0f8:	42b5      	cmp	r5, r6
 800f0fa:	dd59      	ble.n	800f1b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f0fc:	140f      	asrs	r7, r1, #16
 800f0fe:	d457      	bmi.n	800f1b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f100:	f8dc 200c 	ldr.w	r2, [ip, #12]
 800f104:	42ba      	cmp	r2, r7
 800f106:	dd53      	ble.n	800f1b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f108:	9a01      	ldr	r2, [sp, #4]
 800f10a:	b22d      	sxth	r5, r5
 800f10c:	fb07 2505 	mla	r5, r7, r5, r2
 800f110:	5daa      	ldrb	r2, [r5, r6]
 800f112:	9d02      	ldr	r5, [sp, #8]
 800f114:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f118:	0e2e      	lsrs	r6, r5, #24
 800f11a:	d049      	beq.n	800f1b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800f11c:	f06f 0201 	mvn.w	r2, #1
 800f120:	fb02 f20e 	mul.w	r2, r2, lr
 800f124:	9203      	str	r2, [sp, #12]
 800f126:	f834 8002 	ldrh.w	r8, [r4, r2]
 800f12a:	9a05      	ldr	r2, [sp, #20]
 800f12c:	4356      	muls	r6, r2
 800f12e:	1c72      	adds	r2, r6, #1
 800f130:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f134:	1212      	asrs	r2, r2, #8
 800f136:	fa1f f982 	uxth.w	r9, r2
 800f13a:	ea4f 2728 	mov.w	r7, r8, asr #8
 800f13e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f142:	43d2      	mvns	r2, r2
 800f144:	b2d2      	uxtb	r2, r2
 800f146:	fb16 f609 	smulbb	r6, r6, r9
 800f14a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f14e:	fb07 6702 	mla	r7, r7, r2, r6
 800f152:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f156:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800f15a:	b2ed      	uxtb	r5, r5
 800f15c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f160:	fa5f f888 	uxtb.w	r8, r8
 800f164:	fb15 f509 	smulbb	r5, r5, r9
 800f168:	fb08 5502 	mla	r5, r8, r2, r5
 800f16c:	b2bf      	uxth	r7, r7
 800f16e:	fb1a fa09 	smulbb	sl, sl, r9
 800f172:	b2ad      	uxth	r5, r5
 800f174:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f178:	fb06 a602 	mla	r6, r6, r2, sl
 800f17c:	1c7a      	adds	r2, r7, #1
 800f17e:	f105 0a01 	add.w	sl, r5, #1
 800f182:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f186:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f18a:	b2b6      	uxth	r6, r6
 800f18c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f190:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f194:	ea47 070a 	orr.w	r7, r7, sl
 800f198:	f106 0a01 	add.w	sl, r6, #1
 800f19c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f1a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f1a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f1a8:	9a03      	ldr	r2, [sp, #12]
 800f1aa:	ea47 070a 	orr.w	r7, r7, sl
 800f1ae:	52a7      	strh	r7, [r4, r2]
 800f1b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f1b2:	4410      	add	r0, r2
 800f1b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f1b6:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f1ba:	4411      	add	r1, r2
 800f1bc:	e755      	b.n	800f06a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f1be:	f04f 0800 	mov.w	r8, #0
 800f1c2:	eba3 0208 	sub.w	r2, r3, r8
 800f1c6:	2a00      	cmp	r2, #0
 800f1c8:	f77f af53 	ble.w	800f072 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800f1cc:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 800f1d0:	9f01      	ldr	r7, [sp, #4]
 800f1d2:	140a      	asrs	r2, r1, #16
 800f1d4:	1405      	asrs	r5, r0, #16
 800f1d6:	fb06 7202 	mla	r2, r6, r2, r7
 800f1da:	5d52      	ldrb	r2, [r2, r5]
 800f1dc:	9d02      	ldr	r5, [sp, #8]
 800f1de:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f1e2:	0e2e      	lsrs	r6, r5, #24
 800f1e4:	d044      	beq.n	800f270 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 800f1e6:	9a05      	ldr	r2, [sp, #20]
 800f1e8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 800f1ec:	4356      	muls	r6, r2
 800f1ee:	1c72      	adds	r2, r6, #1
 800f1f0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f1f4:	1212      	asrs	r2, r2, #8
 800f1f6:	fa1f f982 	uxth.w	r9, r2
 800f1fa:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f1fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f202:	43d2      	mvns	r2, r2
 800f204:	b2d2      	uxtb	r2, r2
 800f206:	fb16 f609 	smulbb	r6, r6, r9
 800f20a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f20e:	fb07 6702 	mla	r7, r7, r2, r6
 800f212:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f216:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f21a:	b2ed      	uxtb	r5, r5
 800f21c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f220:	fa5f fe8e 	uxtb.w	lr, lr
 800f224:	fb15 f509 	smulbb	r5, r5, r9
 800f228:	fb0e 5502 	mla	r5, lr, r2, r5
 800f22c:	b2bf      	uxth	r7, r7
 800f22e:	fb1a fa09 	smulbb	sl, sl, r9
 800f232:	b2ad      	uxth	r5, r5
 800f234:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f238:	fb06 a602 	mla	r6, r6, r2, sl
 800f23c:	1c7a      	adds	r2, r7, #1
 800f23e:	f105 0a01 	add.w	sl, r5, #1
 800f242:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f246:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f24a:	b2b6      	uxth	r6, r6
 800f24c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f250:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f254:	ea47 070a 	orr.w	r7, r7, sl
 800f258:	f106 0a01 	add.w	sl, r6, #1
 800f25c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f260:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f264:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f268:	ea47 070a 	orr.w	r7, r7, sl
 800f26c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f270:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f272:	4410      	add	r0, r2
 800f274:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f276:	f108 0801 	add.w	r8, r8, #1
 800f27a:	4411      	add	r1, r2
 800f27c:	e7a1      	b.n	800f1c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 800f27e:	b007      	add	sp, #28
 800f280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f284 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f288:	b085      	sub	sp, #20
 800f28a:	468b      	mov	fp, r1
 800f28c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f28e:	9203      	str	r2, [sp, #12]
 800f290:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f294:	6841      	ldr	r1, [r0, #4]
 800f296:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800f29a:	fb01 2404 	mla	r4, r1, r4, r2
 800f29e:	6802      	ldr	r2, [r0, #0]
 800f2a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f2a4:	f8de 2000 	ldr.w	r2, [lr]
 800f2a8:	9200      	str	r2, [sp, #0]
 800f2aa:	f8de 2004 	ldr.w	r2, [lr, #4]
 800f2ae:	3204      	adds	r2, #4
 800f2b0:	9201      	str	r2, [sp, #4]
 800f2b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f2b6:	f1bb 0f00 	cmp.w	fp, #0
 800f2ba:	dc03      	bgt.n	800f2c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800f2bc:	9a03      	ldr	r2, [sp, #12]
 800f2be:	2a00      	cmp	r2, #0
 800f2c0:	f340 8153 	ble.w	800f56a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800f2c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f2c6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f2ca:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800f2ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f2d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f2d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f2d8:	2b00      	cmp	r3, #0
 800f2da:	dd0e      	ble.n	800f2fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f2dc:	1408      	asrs	r0, r1, #16
 800f2de:	d405      	bmi.n	800f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f2e0:	42b8      	cmp	r0, r7
 800f2e2:	da03      	bge.n	800f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f2e4:	1410      	asrs	r0, r2, #16
 800f2e6:	d401      	bmi.n	800f2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800f2e8:	42b0      	cmp	r0, r6
 800f2ea:	db07      	blt.n	800f2fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800f2ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f2ee:	4401      	add	r1, r0
 800f2f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f2f2:	3b01      	subs	r3, #1
 800f2f4:	4402      	add	r2, r0
 800f2f6:	3402      	adds	r4, #2
 800f2f8:	e7ee      	b.n	800f2d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800f2fa:	d017      	beq.n	800f32c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800f2fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f2fe:	1e58      	subs	r0, r3, #1
 800f300:	fb05 1500 	mla	r5, r5, r0, r1
 800f304:	142d      	asrs	r5, r5, #16
 800f306:	d409      	bmi.n	800f31c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f308:	42bd      	cmp	r5, r7
 800f30a:	da07      	bge.n	800f31c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f30c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f30e:	fb05 2000 	mla	r0, r5, r0, r2
 800f312:	1400      	asrs	r0, r0, #16
 800f314:	d402      	bmi.n	800f31c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f316:	42b0      	cmp	r0, r6
 800f318:	f2c0 80bc 	blt.w	800f494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 800f31c:	2600      	movs	r6, #0
 800f31e:	1998      	adds	r0, r3, r6
 800f320:	2800      	cmp	r0, #0
 800f322:	dc3e      	bgt.n	800f3a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 800f324:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f328:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f32c:	f1bb 0f00 	cmp.w	fp, #0
 800f330:	f340 811b 	ble.w	800f56a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800f334:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f338:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f33c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f340:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f342:	f1bb 0b01 	subs.w	fp, fp, #1
 800f346:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f34a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f34e:	eeb0 6a62 	vmov.f32	s12, s5
 800f352:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f356:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f35a:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f35e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f362:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f366:	eeb0 6a43 	vmov.f32	s12, s6
 800f36a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f36e:	ee12 2a90 	vmov	r2, s5
 800f372:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f376:	fb92 f3f3 	sdiv	r3, r2, r3
 800f37a:	ee13 2a10 	vmov	r2, s6
 800f37e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f382:	9311      	str	r3, [sp, #68]	; 0x44
 800f384:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f386:	fb92 f3f3 	sdiv	r3, r2, r3
 800f38a:	9a03      	ldr	r2, [sp, #12]
 800f38c:	9312      	str	r3, [sp, #72]	; 0x48
 800f38e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f392:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f394:	eeb0 3a67 	vmov.f32	s6, s15
 800f398:	bf08      	it	eq
 800f39a:	4613      	moveq	r3, r2
 800f39c:	eef0 2a47 	vmov.f32	s5, s14
 800f3a0:	e789      	b.n	800f2b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800f3a2:	140f      	asrs	r7, r1, #16
 800f3a4:	d45e      	bmi.n	800f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f3a6:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f3aa:	42bd      	cmp	r5, r7
 800f3ac:	dd5a      	ble.n	800f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f3ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f3b2:	d457      	bmi.n	800f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f3b4:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f3b8:	4560      	cmp	r0, ip
 800f3ba:	dd53      	ble.n	800f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f3bc:	9800      	ldr	r0, [sp, #0]
 800f3be:	b22d      	sxth	r5, r5
 800f3c0:	fb0c 0505 	mla	r5, ip, r5, r0
 800f3c4:	5de8      	ldrb	r0, [r5, r7]
 800f3c6:	9d01      	ldr	r5, [sp, #4]
 800f3c8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f3cc:	0e07      	lsrs	r7, r0, #24
 800f3ce:	2fff      	cmp	r7, #255	; 0xff
 800f3d0:	d04e      	beq.n	800f470 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 800f3d2:	b2fd      	uxtb	r5, r7
 800f3d4:	2f00      	cmp	r7, #0
 800f3d6:	d045      	beq.n	800f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f3d8:	f06f 0701 	mvn.w	r7, #1
 800f3dc:	4377      	muls	r7, r6
 800f3de:	fa1f f985 	uxth.w	r9, r5
 800f3e2:	f834 8007 	ldrh.w	r8, [r4, r7]
 800f3e6:	9702      	str	r7, [sp, #8]
 800f3e8:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800f3ec:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800f3f0:	43ed      	mvns	r5, r5
 800f3f2:	b2ed      	uxtb	r5, r5
 800f3f4:	fb17 f709 	smulbb	r7, r7, r9
 800f3f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f3fc:	fb0c 7c05 	mla	ip, ip, r5, r7
 800f400:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f404:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800f408:	b2c0      	uxtb	r0, r0
 800f40a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f40e:	fa5f f888 	uxtb.w	r8, r8
 800f412:	fb10 f009 	smulbb	r0, r0, r9
 800f416:	fb08 0005 	mla	r0, r8, r5, r0
 800f41a:	b280      	uxth	r0, r0
 800f41c:	fa1f fc8c 	uxth.w	ip, ip
 800f420:	fb1a fa09 	smulbb	sl, sl, r9
 800f424:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f428:	fb07 a705 	mla	r7, r7, r5, sl
 800f42c:	f100 0a01 	add.w	sl, r0, #1
 800f430:	f10c 0501 	add.w	r5, ip, #1
 800f434:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f438:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f43c:	b2bf      	uxth	r7, r7
 800f43e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f442:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f446:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f44a:	f107 0a01 	add.w	sl, r7, #1
 800f44e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f452:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f456:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f45a:	9802      	ldr	r0, [sp, #8]
 800f45c:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f460:	f824 c000 	strh.w	ip, [r4, r0]
 800f464:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f466:	4401      	add	r1, r0
 800f468:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f46a:	3e01      	subs	r6, #1
 800f46c:	4402      	add	r2, r0
 800f46e:	e756      	b.n	800f31e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800f470:	f06f 0501 	mvn.w	r5, #1
 800f474:	fb05 f706 	mul.w	r7, r5, r6
 800f478:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800f47c:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800f480:	0945      	lsrs	r5, r0, #5
 800f482:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f486:	ea4c 0505 	orr.w	r5, ip, r5
 800f48a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f48e:	4305      	orrs	r5, r0
 800f490:	53e5      	strh	r5, [r4, r7]
 800f492:	e7e7      	b.n	800f464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f494:	f04f 0800 	mov.w	r8, #0
 800f498:	eba3 0008 	sub.w	r0, r3, r8
 800f49c:	2800      	cmp	r0, #0
 800f49e:	f77f af41 	ble.w	800f324 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f4a2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800f4a6:	9f00      	ldr	r7, [sp, #0]
 800f4a8:	1410      	asrs	r0, r2, #16
 800f4aa:	140d      	asrs	r5, r1, #16
 800f4ac:	fb06 7000 	mla	r0, r6, r0, r7
 800f4b0:	5d40      	ldrb	r0, [r0, r5]
 800f4b2:	9d01      	ldr	r5, [sp, #4]
 800f4b4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f4b8:	0e06      	lsrs	r6, r0, #24
 800f4ba:	2eff      	cmp	r6, #255	; 0xff
 800f4bc:	d048      	beq.n	800f550 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 800f4be:	b2f5      	uxtb	r5, r6
 800f4c0:	2e00      	cmp	r6, #0
 800f4c2:	d03e      	beq.n	800f542 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800f4c4:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800f4c8:	fa1f f985 	uxth.w	r9, r5
 800f4cc:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f4d0:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800f4d4:	43ed      	mvns	r5, r5
 800f4d6:	b2ed      	uxtb	r5, r5
 800f4d8:	fb16 f609 	smulbb	r6, r6, r9
 800f4dc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f4e0:	fb07 6705 	mla	r7, r7, r5, r6
 800f4e4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f4e8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f4ec:	b2c0      	uxtb	r0, r0
 800f4ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f4f2:	fa5f fc8c 	uxtb.w	ip, ip
 800f4f6:	fb10 f009 	smulbb	r0, r0, r9
 800f4fa:	fb0c 0005 	mla	r0, ip, r5, r0
 800f4fe:	b2bf      	uxth	r7, r7
 800f500:	fb1a fa09 	smulbb	sl, sl, r9
 800f504:	b280      	uxth	r0, r0
 800f506:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f50a:	fb06 a605 	mla	r6, r6, r5, sl
 800f50e:	1c7d      	adds	r5, r7, #1
 800f510:	f100 0a01 	add.w	sl, r0, #1
 800f514:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f518:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f51c:	b2b6      	uxth	r6, r6
 800f51e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f522:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f526:	ea47 070a 	orr.w	r7, r7, sl
 800f52a:	f106 0a01 	add.w	sl, r6, #1
 800f52e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f532:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f536:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f53a:	ea47 070a 	orr.w	r7, r7, sl
 800f53e:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f542:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f544:	4401      	add	r1, r0
 800f546:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f548:	f108 0801 	add.w	r8, r8, #1
 800f54c:	4402      	add	r2, r0
 800f54e:	e7a3      	b.n	800f498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800f550:	4d07      	ldr	r5, [pc, #28]	; (800f570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 800f552:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800f556:	0945      	lsrs	r5, r0, #5
 800f558:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f55c:	4335      	orrs	r5, r6
 800f55e:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f562:	4305      	orrs	r5, r0
 800f564:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 800f568:	e7eb      	b.n	800f542 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800f56a:	b005      	add	sp, #20
 800f56c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f570:	fffff800 	.word	0xfffff800

0800f574 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f578:	b087      	sub	sp, #28
 800f57a:	468b      	mov	fp, r1
 800f57c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800f57e:	9204      	str	r2, [sp, #16]
 800f580:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f584:	9205      	str	r2, [sp, #20]
 800f586:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f58a:	6861      	ldr	r1, [r4, #4]
 800f58c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800f590:	fb01 2000 	mla	r0, r1, r0, r2
 800f594:	6822      	ldr	r2, [r4, #0]
 800f596:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f59a:	f8de 2000 	ldr.w	r2, [lr]
 800f59e:	9201      	str	r2, [sp, #4]
 800f5a0:	f8de 2004 	ldr.w	r2, [lr, #4]
 800f5a4:	9202      	str	r2, [sp, #8]
 800f5a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f5aa:	f1bb 0f00 	cmp.w	fp, #0
 800f5ae:	dc03      	bgt.n	800f5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800f5b0:	9a04      	ldr	r2, [sp, #16]
 800f5b2:	2a00      	cmp	r2, #0
 800f5b4:	f340 8142 	ble.w	800f83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800f5b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f5ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f5be:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800f5c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f5c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f5c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f5cc:	2b00      	cmp	r3, #0
 800f5ce:	dd0e      	ble.n	800f5ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800f5d0:	140c      	asrs	r4, r1, #16
 800f5d2:	d405      	bmi.n	800f5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f5d4:	42bc      	cmp	r4, r7
 800f5d6:	da03      	bge.n	800f5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f5d8:	1414      	asrs	r4, r2, #16
 800f5da:	d401      	bmi.n	800f5e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f5dc:	42b4      	cmp	r4, r6
 800f5de:	db07      	blt.n	800f5f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800f5e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f5e2:	4421      	add	r1, r4
 800f5e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f5e6:	3b01      	subs	r3, #1
 800f5e8:	4422      	add	r2, r4
 800f5ea:	3002      	adds	r0, #2
 800f5ec:	e7ee      	b.n	800f5cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800f5ee:	d019      	beq.n	800f624 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 800f5f0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f5f2:	1e5c      	subs	r4, r3, #1
 800f5f4:	fb05 1504 	mla	r5, r5, r4, r1
 800f5f8:	142d      	asrs	r5, r5, #16
 800f5fa:	d409      	bmi.n	800f610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f5fc:	42bd      	cmp	r5, r7
 800f5fe:	da07      	bge.n	800f610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f600:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f602:	fb05 2404 	mla	r4, r5, r4, r2
 800f606:	1424      	asrs	r4, r4, #16
 800f608:	d402      	bmi.n	800f610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800f60a:	42b4      	cmp	r4, r6
 800f60c:	f2c0 80b1 	blt.w	800f772 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800f610:	f04f 0800 	mov.w	r8, #0
 800f614:	eb03 0408 	add.w	r4, r3, r8
 800f618:	2c00      	cmp	r4, #0
 800f61a:	dc3e      	bgt.n	800f69a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 800f61c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f620:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f624:	f1bb 0f00 	cmp.w	fp, #0
 800f628:	f340 8108 	ble.w	800f83c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800f62c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f630:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f634:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f638:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f63a:	f1bb 0b01 	subs.w	fp, fp, #1
 800f63e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f642:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f646:	eeb0 6a62 	vmov.f32	s12, s5
 800f64a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f64e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f652:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f656:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f65a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f65e:	eeb0 6a43 	vmov.f32	s12, s6
 800f662:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f666:	ee12 2a90 	vmov	r2, s5
 800f66a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f66e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f672:	ee13 2a10 	vmov	r2, s6
 800f676:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f67a:	9313      	str	r3, [sp, #76]	; 0x4c
 800f67c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f67e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f682:	9a04      	ldr	r2, [sp, #16]
 800f684:	9314      	str	r3, [sp, #80]	; 0x50
 800f686:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f68a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f68c:	eeb0 3a67 	vmov.f32	s6, s15
 800f690:	bf08      	it	eq
 800f692:	4613      	moveq	r3, r2
 800f694:	eef0 2a47 	vmov.f32	s5, s14
 800f698:	e787      	b.n	800f5aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800f69a:	140e      	asrs	r6, r1, #16
 800f69c:	d462      	bmi.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f69e:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f6a2:	42b5      	cmp	r5, r6
 800f6a4:	dd5e      	ble.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f6a6:	1417      	asrs	r7, r2, #16
 800f6a8:	d45c      	bmi.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f6aa:	f8de 400c 	ldr.w	r4, [lr, #12]
 800f6ae:	42bc      	cmp	r4, r7
 800f6b0:	dd58      	ble.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f6b2:	b22d      	sxth	r5, r5
 800f6b4:	fb07 6505 	mla	r5, r7, r5, r6
 800f6b8:	9c02      	ldr	r4, [sp, #8]
 800f6ba:	5d66      	ldrb	r6, [r4, r5]
 800f6bc:	2e00      	cmp	r6, #0
 800f6be:	d051      	beq.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800f6c0:	9c01      	ldr	r4, [sp, #4]
 800f6c2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 800f6c6:	f06f 0401 	mvn.w	r4, #1
 800f6ca:	fb04 f408 	mul.w	r4, r4, r8
 800f6ce:	9403      	str	r4, [sp, #12]
 800f6d0:	5b05      	ldrh	r5, [r0, r4]
 800f6d2:	9c05      	ldr	r4, [sp, #20]
 800f6d4:	4366      	muls	r6, r4
 800f6d6:	1c74      	adds	r4, r6, #1
 800f6d8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800f6dc:	1224      	asrs	r4, r4, #8
 800f6de:	b2a7      	uxth	r7, r4
 800f6e0:	122e      	asrs	r6, r5, #8
 800f6e2:	43e4      	mvns	r4, r4
 800f6e4:	b2e4      	uxtb	r4, r4
 800f6e6:	ea4f 2c29 	mov.w	ip, r9, asr #8
 800f6ea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f6ee:	fb16 f604 	smulbb	r6, r6, r4
 800f6f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f6f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f6fa:	00ed      	lsls	r5, r5, #3
 800f6fc:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f700:	b2ed      	uxtb	r5, r5
 800f702:	ea4f 06e9 	mov.w	r6, r9, asr #3
 800f706:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800f70a:	fb15 f504 	smulbb	r5, r5, r4
 800f70e:	fa5f f989 	uxtb.w	r9, r9
 800f712:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f716:	fb09 5507 	mla	r5, r9, r7, r5
 800f71a:	fb1a fa04 	smulbb	sl, sl, r4
 800f71e:	fa1f fc8c 	uxth.w	ip, ip
 800f722:	b2ad      	uxth	r5, r5
 800f724:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f728:	fb06 a607 	mla	r6, r6, r7, sl
 800f72c:	f10c 0401 	add.w	r4, ip, #1
 800f730:	f105 0a01 	add.w	sl, r5, #1
 800f734:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f738:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f73c:	b2b6      	uxth	r6, r6
 800f73e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f742:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f746:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f74a:	f106 0a01 	add.w	sl, r6, #1
 800f74e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f752:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f756:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f75a:	9c03      	ldr	r4, [sp, #12]
 800f75c:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f760:	f820 c004 	strh.w	ip, [r0, r4]
 800f764:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f766:	4421      	add	r1, r4
 800f768:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f76a:	f108 38ff 	add.w	r8, r8, #4294967295
 800f76e:	4422      	add	r2, r4
 800f770:	e750      	b.n	800f614 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f772:	f04f 0900 	mov.w	r9, #0
 800f776:	eba3 0409 	sub.w	r4, r3, r9
 800f77a:	2c00      	cmp	r4, #0
 800f77c:	f77f af4e 	ble.w	800f61c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800f780:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800f784:	140d      	asrs	r5, r1, #16
 800f786:	1414      	asrs	r4, r2, #16
 800f788:	fb06 5404 	mla	r4, r6, r4, r5
 800f78c:	9d02      	ldr	r5, [sp, #8]
 800f78e:	5d2e      	ldrb	r6, [r5, r4]
 800f790:	2e00      	cmp	r6, #0
 800f792:	d04c      	beq.n	800f82e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 800f794:	9d01      	ldr	r5, [sp, #4]
 800f796:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 800f79a:	9c05      	ldr	r4, [sp, #20]
 800f79c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800f7a0:	4366      	muls	r6, r4
 800f7a2:	1c74      	adds	r4, r6, #1
 800f7a4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800f7a8:	1224      	asrs	r4, r4, #8
 800f7aa:	b2a7      	uxth	r7, r4
 800f7ac:	122e      	asrs	r6, r5, #8
 800f7ae:	43e4      	mvns	r4, r4
 800f7b0:	b2e4      	uxtb	r4, r4
 800f7b2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800f7b6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f7ba:	fb16 f604 	smulbb	r6, r6, r4
 800f7be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f7c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f7c6:	00ed      	lsls	r5, r5, #3
 800f7c8:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f7cc:	b2ed      	uxtb	r5, r5
 800f7ce:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800f7d2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f7d6:	fb15 f504 	smulbb	r5, r5, r4
 800f7da:	fa5f f888 	uxtb.w	r8, r8
 800f7de:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f7e2:	fb08 5507 	mla	r5, r8, r7, r5
 800f7e6:	fb1a fa04 	smulbb	sl, sl, r4
 800f7ea:	fa1f fc8c 	uxth.w	ip, ip
 800f7ee:	b2ad      	uxth	r5, r5
 800f7f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f7f4:	fb06 a607 	mla	r6, r6, r7, sl
 800f7f8:	f10c 0401 	add.w	r4, ip, #1
 800f7fc:	f105 0a01 	add.w	sl, r5, #1
 800f800:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f804:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f808:	b2b6      	uxth	r6, r6
 800f80a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f80e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f812:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f816:	f106 0a01 	add.w	sl, r6, #1
 800f81a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f81e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f822:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f826:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f82a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800f82e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f830:	4421      	add	r1, r4
 800f832:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f834:	f109 0901 	add.w	r9, r9, #1
 800f838:	4422      	add	r2, r4
 800f83a:	e79c      	b.n	800f776 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 800f83c:	b007      	add	sp, #28
 800f83e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f842 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f846:	b085      	sub	sp, #20
 800f848:	468b      	mov	fp, r1
 800f84a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f84c:	9203      	str	r2, [sp, #12]
 800f84e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 800f852:	6861      	ldr	r1, [r4, #4]
 800f854:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800f858:	fb01 2000 	mla	r0, r1, r0, r2
 800f85c:	6822      	ldr	r2, [r4, #0]
 800f85e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f862:	f8d8 2000 	ldr.w	r2, [r8]
 800f866:	9200      	str	r2, [sp, #0]
 800f868:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800f86c:	9201      	str	r2, [sp, #4]
 800f86e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f872:	f1bb 0f00 	cmp.w	fp, #0
 800f876:	dc03      	bgt.n	800f880 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800f878:	9a03      	ldr	r2, [sp, #12]
 800f87a:	2a00      	cmp	r2, #0
 800f87c:	f340 8146 	ble.w	800fb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800f880:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f882:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800f886:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800f88a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f88e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f890:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f894:	2b00      	cmp	r3, #0
 800f896:	dd0e      	ble.n	800f8b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800f898:	140c      	asrs	r4, r1, #16
 800f89a:	d405      	bmi.n	800f8a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f89c:	42bc      	cmp	r4, r7
 800f89e:	da03      	bge.n	800f8a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f8a0:	1414      	asrs	r4, r2, #16
 800f8a2:	d401      	bmi.n	800f8a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f8a4:	42b4      	cmp	r4, r6
 800f8a6:	db07      	blt.n	800f8b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f8a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f8aa:	4421      	add	r1, r4
 800f8ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f8ae:	3b01      	subs	r3, #1
 800f8b0:	4422      	add	r2, r4
 800f8b2:	3002      	adds	r0, #2
 800f8b4:	e7ee      	b.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800f8b6:	d017      	beq.n	800f8e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800f8b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f8ba:	1e5c      	subs	r4, r3, #1
 800f8bc:	fb05 1504 	mla	r5, r5, r4, r1
 800f8c0:	142d      	asrs	r5, r5, #16
 800f8c2:	d409      	bmi.n	800f8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f8c4:	42bd      	cmp	r5, r7
 800f8c6:	da07      	bge.n	800f8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f8c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f8ca:	fb05 2404 	mla	r4, r5, r4, r2
 800f8ce:	1424      	asrs	r4, r4, #16
 800f8d0:	d402      	bmi.n	800f8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f8d2:	42b4      	cmp	r4, r6
 800f8d4:	f2c0 80b3 	blt.w	800fa3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800f8d8:	2600      	movs	r6, #0
 800f8da:	199c      	adds	r4, r3, r6
 800f8dc:	2c00      	cmp	r4, #0
 800f8de:	dc3e      	bgt.n	800f95e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800f8e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f8e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f8e8:	f1bb 0f00 	cmp.w	fp, #0
 800f8ec:	f340 810e 	ble.w	800fb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800f8f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f8f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f8f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f8fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f8fe:	f1bb 0b01 	subs.w	fp, fp, #1
 800f902:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f906:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f90a:	eeb0 6a62 	vmov.f32	s12, s5
 800f90e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f912:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f916:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f91a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f91e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f922:	eeb0 6a43 	vmov.f32	s12, s6
 800f926:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f92a:	ee12 2a90 	vmov	r2, s5
 800f92e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f932:	fb92 f3f3 	sdiv	r3, r2, r3
 800f936:	ee13 2a10 	vmov	r2, s6
 800f93a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f93e:	9311      	str	r3, [sp, #68]	; 0x44
 800f940:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f942:	fb92 f3f3 	sdiv	r3, r2, r3
 800f946:	9a03      	ldr	r2, [sp, #12]
 800f948:	9312      	str	r3, [sp, #72]	; 0x48
 800f94a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f94e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f950:	eeb0 3a67 	vmov.f32	s6, s15
 800f954:	bf08      	it	eq
 800f956:	4613      	moveq	r3, r2
 800f958:	eef0 2a47 	vmov.f32	s5, s14
 800f95c:	e789      	b.n	800f872 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800f95e:	140f      	asrs	r7, r1, #16
 800f960:	d45f      	bmi.n	800fa22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f962:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800f966:	42bd      	cmp	r5, r7
 800f968:	dd5b      	ble.n	800fa22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f96a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f96e:	d458      	bmi.n	800fa22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f970:	f8d8 400c 	ldr.w	r4, [r8, #12]
 800f974:	4564      	cmp	r4, ip
 800f976:	dd54      	ble.n	800fa22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f978:	b22d      	sxth	r5, r5
 800f97a:	fb0c 7505 	mla	r5, ip, r5, r7
 800f97e:	9c01      	ldr	r4, [sp, #4]
 800f980:	5d64      	ldrb	r4, [r4, r5]
 800f982:	2cff      	cmp	r4, #255	; 0xff
 800f984:	d053      	beq.n	800fa2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 800f986:	2c00      	cmp	r4, #0
 800f988:	d04b      	beq.n	800fa22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800f98a:	9f00      	ldr	r7, [sp, #0]
 800f98c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 800f990:	f06f 0501 	mvn.w	r5, #1
 800f994:	4375      	muls	r5, r6
 800f996:	9502      	str	r5, [sp, #8]
 800f998:	5b45      	ldrh	r5, [r0, r5]
 800f99a:	fa1f fc84 	uxth.w	ip, r4
 800f99e:	122f      	asrs	r7, r5, #8
 800f9a0:	43e4      	mvns	r4, r4
 800f9a2:	b2e4      	uxtb	r4, r4
 800f9a4:	ea4f 2e29 	mov.w	lr, r9, asr #8
 800f9a8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f9ac:	fb17 f704 	smulbb	r7, r7, r4
 800f9b0:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f9b4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f9b8:	00ed      	lsls	r5, r5, #3
 800f9ba:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800f9be:	b2ed      	uxtb	r5, r5
 800f9c0:	ea4f 07e9 	mov.w	r7, r9, asr #3
 800f9c4:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800f9c8:	fb15 f504 	smulbb	r5, r5, r4
 800f9cc:	fa5f f989 	uxtb.w	r9, r9
 800f9d0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f9d4:	fb09 550c 	mla	r5, r9, ip, r5
 800f9d8:	fb1a fa04 	smulbb	sl, sl, r4
 800f9dc:	fa1f fe8e 	uxth.w	lr, lr
 800f9e0:	b2ad      	uxth	r5, r5
 800f9e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f9e6:	fb07 a70c 	mla	r7, r7, ip, sl
 800f9ea:	f10e 0401 	add.w	r4, lr, #1
 800f9ee:	f105 0a01 	add.w	sl, r5, #1
 800f9f2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800f9f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f9fa:	b2bf      	uxth	r7, r7
 800f9fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fa00:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800fa04:	ea4e 0e0a 	orr.w	lr, lr, sl
 800fa08:	f107 0a01 	add.w	sl, r7, #1
 800fa0c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fa10:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fa14:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fa18:	9c02      	ldr	r4, [sp, #8]
 800fa1a:	ea4e 0e0a 	orr.w	lr, lr, sl
 800fa1e:	f820 e004 	strh.w	lr, [r0, r4]
 800fa22:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800fa24:	4421      	add	r1, r4
 800fa26:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800fa28:	3e01      	subs	r6, #1
 800fa2a:	4422      	add	r2, r4
 800fa2c:	e755      	b.n	800f8da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800fa2e:	9c00      	ldr	r4, [sp, #0]
 800fa30:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800fa34:	f06f 0401 	mvn.w	r4, #1
 800fa38:	4374      	muls	r4, r6
 800fa3a:	5305      	strh	r5, [r0, r4]
 800fa3c:	e7f1      	b.n	800fa22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800fa3e:	f04f 0900 	mov.w	r9, #0
 800fa42:	eba3 0409 	sub.w	r4, r3, r9
 800fa46:	2c00      	cmp	r4, #0
 800fa48:	f77f af4a 	ble.w	800f8e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800fa4c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800fa50:	1414      	asrs	r4, r2, #16
 800fa52:	140d      	asrs	r5, r1, #16
 800fa54:	fb06 5504 	mla	r5, r6, r4, r5
 800fa58:	9c01      	ldr	r4, [sp, #4]
 800fa5a:	5d64      	ldrb	r4, [r4, r5]
 800fa5c:	2cff      	cmp	r4, #255	; 0xff
 800fa5e:	d04f      	beq.n	800fb00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800fa60:	2c00      	cmp	r4, #0
 800fa62:	d046      	beq.n	800faf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800fa64:	9e00      	ldr	r6, [sp, #0]
 800fa66:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800fa6a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800fa6e:	b2a7      	uxth	r7, r4
 800fa70:	122e      	asrs	r6, r5, #8
 800fa72:	43e4      	mvns	r4, r4
 800fa74:	b2e4      	uxtb	r4, r4
 800fa76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fa7a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fa7e:	fb16 f604 	smulbb	r6, r6, r4
 800fa82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800fa86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fa8a:	00ed      	lsls	r5, r5, #3
 800fa8c:	fb0c 6c07 	mla	ip, ip, r7, r6
 800fa90:	b2ed      	uxtb	r5, r5
 800fa92:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800fa96:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fa9a:	fb15 f504 	smulbb	r5, r5, r4
 800fa9e:	fa5f fe8e 	uxtb.w	lr, lr
 800faa2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800faa6:	fb0e 5507 	mla	r5, lr, r7, r5
 800faaa:	fb1a fa04 	smulbb	sl, sl, r4
 800faae:	fa1f fc8c 	uxth.w	ip, ip
 800fab2:	b2ad      	uxth	r5, r5
 800fab4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fab8:	fb06 a607 	mla	r6, r6, r7, sl
 800fabc:	f10c 0401 	add.w	r4, ip, #1
 800fac0:	f105 0a01 	add.w	sl, r5, #1
 800fac4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800fac8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800facc:	b2b6      	uxth	r6, r6
 800face:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fad2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fad6:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fada:	f106 0a01 	add.w	sl, r6, #1
 800fade:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800fae2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fae6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800faea:	ea4c 0c0a 	orr.w	ip, ip, sl
 800faee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800faf2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800faf4:	4421      	add	r1, r4
 800faf6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800faf8:	f109 0901 	add.w	r9, r9, #1
 800fafc:	4422      	add	r2, r4
 800fafe:	e7a0      	b.n	800fa42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 800fb00:	9c00      	ldr	r4, [sp, #0]
 800fb02:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800fb06:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 800fb0a:	e7f2      	b.n	800faf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800fb0c:	b005      	add	sp, #20
 800fb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fb12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fb12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb16:	b085      	sub	sp, #20
 800fb18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fb1a:	9203      	str	r2, [sp, #12]
 800fb1c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800fb20:	9201      	str	r2, [sp, #4]
 800fb22:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fb26:	9100      	str	r1, [sp, #0]
 800fb28:	6841      	ldr	r1, [r0, #4]
 800fb2a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800fb2e:	fb01 2404 	mla	r4, r1, r4, r2
 800fb32:	6802      	ldr	r2, [r0, #0]
 800fb34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fb38:	f8de 2000 	ldr.w	r2, [lr]
 800fb3c:	9202      	str	r2, [sp, #8]
 800fb3e:	9a01      	ldr	r2, [sp, #4]
 800fb40:	43d6      	mvns	r6, r2
 800fb42:	b2f6      	uxtb	r6, r6
 800fb44:	9a00      	ldr	r2, [sp, #0]
 800fb46:	2a00      	cmp	r2, #0
 800fb48:	dc03      	bgt.n	800fb52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800fb4a:	9a03      	ldr	r2, [sp, #12]
 800fb4c:	2a00      	cmp	r2, #0
 800fb4e:	f340 8124 	ble.w	800fd9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800fb52:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fb54:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800fb58:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800fb5c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fb60:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fb62:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fb66:	2b00      	cmp	r3, #0
 800fb68:	dd0e      	ble.n	800fb88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fb6a:	1408      	asrs	r0, r1, #16
 800fb6c:	d405      	bmi.n	800fb7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800fb6e:	4560      	cmp	r0, ip
 800fb70:	da03      	bge.n	800fb7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800fb72:	1410      	asrs	r0, r2, #16
 800fb74:	d401      	bmi.n	800fb7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800fb76:	42b8      	cmp	r0, r7
 800fb78:	db07      	blt.n	800fb8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800fb7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fb7c:	4401      	add	r1, r0
 800fb7e:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fb80:	3b01      	subs	r3, #1
 800fb82:	4402      	add	r2, r0
 800fb84:	3402      	adds	r4, #2
 800fb86:	e7ee      	b.n	800fb66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800fb88:	d06e      	beq.n	800fc68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800fb8a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fb8c:	1e58      	subs	r0, r3, #1
 800fb8e:	fb05 1500 	mla	r5, r5, r0, r1
 800fb92:	142d      	asrs	r5, r5, #16
 800fb94:	d45c      	bmi.n	800fc50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800fb96:	4565      	cmp	r5, ip
 800fb98:	da5a      	bge.n	800fc50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800fb9a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fb9c:	fb05 2000 	mla	r0, r5, r0, r2
 800fba0:	1400      	asrs	r0, r0, #16
 800fba2:	d455      	bmi.n	800fc50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800fba4:	42b8      	cmp	r0, r7
 800fba6:	da53      	bge.n	800fc50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800fba8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 800fbac:	4699      	mov	r9, r3
 800fbae:	46a2      	mov	sl, r4
 800fbb0:	f1b9 0f00 	cmp.w	r9, #0
 800fbb4:	dd54      	ble.n	800fc60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800fbb6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800fbba:	140d      	asrs	r5, r1, #16
 800fbbc:	1410      	asrs	r0, r2, #16
 800fbbe:	fb07 5000 	mla	r0, r7, r0, r5
 800fbc2:	9d02      	ldr	r5, [sp, #8]
 800fbc4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800fbc8:	f8ba 5000 	ldrh.w	r5, [sl]
 800fbcc:	122f      	asrs	r7, r5, #8
 800fbce:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fbd2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fbd6:	fb17 f706 	smulbb	r7, r7, r6
 800fbda:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800fbde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fbe2:	00ed      	lsls	r5, r5, #3
 800fbe4:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800fbe8:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800fbec:	10c7      	asrs	r7, r0, #3
 800fbee:	b2ed      	uxtb	r5, r5
 800fbf0:	00c0      	lsls	r0, r0, #3
 800fbf2:	fb18 f806 	smulbb	r8, r8, r6
 800fbf6:	fb15 f506 	smulbb	r5, r5, r6
 800fbfa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fbfe:	b2c0      	uxtb	r0, r0
 800fc00:	fa1f fc8c 	uxth.w	ip, ip
 800fc04:	fb07 870b 	mla	r7, r7, fp, r8
 800fc08:	fb00 500b 	mla	r0, r0, fp, r5
 800fc0c:	b280      	uxth	r0, r0
 800fc0e:	b2bf      	uxth	r7, r7
 800fc10:	f10c 0501 	add.w	r5, ip, #1
 800fc14:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fc18:	f107 0801 	add.w	r8, r7, #1
 800fc1c:	1c45      	adds	r5, r0, #1
 800fc1e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fc22:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800fc26:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fc28:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fc2c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fc30:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800fc34:	ea4c 0c05 	orr.w	ip, ip, r5
 800fc38:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800fc3c:	4401      	add	r1, r0
 800fc3e:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fc40:	ea4c 0c08 	orr.w	ip, ip, r8
 800fc44:	f82a cb02 	strh.w	ip, [sl], #2
 800fc48:	4402      	add	r2, r0
 800fc4a:	f109 39ff 	add.w	r9, r9, #4294967295
 800fc4e:	e7af      	b.n	800fbb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800fc50:	f8bd a004 	ldrh.w	sl, [sp, #4]
 800fc54:	f04f 0800 	mov.w	r8, #0
 800fc58:	eb03 0008 	add.w	r0, r3, r8
 800fc5c:	2800      	cmp	r0, #0
 800fc5e:	dc41      	bgt.n	800fce4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 800fc60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fc68:	9b00      	ldr	r3, [sp, #0]
 800fc6a:	2b00      	cmp	r3, #0
 800fc6c:	f340 8095 	ble.w	800fd9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800fc70:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc74:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fc78:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fc7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fc7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fc82:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fc86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fc8a:	eef0 6a62 	vmov.f32	s13, s5
 800fc8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fc92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fc96:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fc9a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800fc9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fca2:	eef0 6a43 	vmov.f32	s13, s6
 800fca6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fcaa:	ee12 2a90 	vmov	r2, s5
 800fcae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fcb2:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcb6:	ee13 2a10 	vmov	r2, s6
 800fcba:	9311      	str	r3, [sp, #68]	; 0x44
 800fcbc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fcbe:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcc2:	9312      	str	r3, [sp, #72]	; 0x48
 800fcc4:	9b00      	ldr	r3, [sp, #0]
 800fcc6:	9a03      	ldr	r2, [sp, #12]
 800fcc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fccc:	3b01      	subs	r3, #1
 800fcce:	9300      	str	r3, [sp, #0]
 800fcd0:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800fcd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fcd6:	eeb0 3a67 	vmov.f32	s6, s15
 800fcda:	bf08      	it	eq
 800fcdc:	4613      	moveq	r3, r2
 800fcde:	eef0 2a47 	vmov.f32	s5, s14
 800fce2:	e72f      	b.n	800fb44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800fce4:	140f      	asrs	r7, r1, #16
 800fce6:	d451      	bmi.n	800fd8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800fce8:	f8de 5008 	ldr.w	r5, [lr, #8]
 800fcec:	42bd      	cmp	r5, r7
 800fcee:	dd4d      	ble.n	800fd8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800fcf0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800fcf4:	d44a      	bmi.n	800fd8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800fcf6:	f8de 000c 	ldr.w	r0, [lr, #12]
 800fcfa:	4560      	cmp	r0, ip
 800fcfc:	dd46      	ble.n	800fd8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800fcfe:	b22d      	sxth	r5, r5
 800fd00:	fb0c 7505 	mla	r5, ip, r5, r7
 800fd04:	9802      	ldr	r0, [sp, #8]
 800fd06:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 800fd0a:	f06f 0501 	mvn.w	r5, #1
 800fd0e:	fb05 fb08 	mul.w	fp, r5, r8
 800fd12:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fd16:	f834 500b 	ldrh.w	r5, [r4, fp]
 800fd1a:	122f      	asrs	r7, r5, #8
 800fd1c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fd20:	fb17 f706 	smulbb	r7, r7, r6
 800fd24:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800fd28:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fd2c:	00ed      	lsls	r5, r5, #3
 800fd2e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800fd32:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fd36:	10c7      	asrs	r7, r0, #3
 800fd38:	b2ed      	uxtb	r5, r5
 800fd3a:	00c0      	lsls	r0, r0, #3
 800fd3c:	fb19 f906 	smulbb	r9, r9, r6
 800fd40:	fb15 f506 	smulbb	r5, r5, r6
 800fd44:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fd48:	b2c0      	uxtb	r0, r0
 800fd4a:	fa1f fc8c 	uxth.w	ip, ip
 800fd4e:	fb07 970a 	mla	r7, r7, sl, r9
 800fd52:	fb00 500a 	mla	r0, r0, sl, r5
 800fd56:	b2bf      	uxth	r7, r7
 800fd58:	b280      	uxth	r0, r0
 800fd5a:	f10c 0501 	add.w	r5, ip, #1
 800fd5e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800fd62:	f107 0901 	add.w	r9, r7, #1
 800fd66:	1c45      	adds	r5, r0, #1
 800fd68:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800fd6c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800fd70:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fd74:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fd78:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800fd7c:	ea4c 0c05 	orr.w	ip, ip, r5
 800fd80:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800fd84:	ea4c 0c09 	orr.w	ip, ip, r9
 800fd88:	f824 c00b 	strh.w	ip, [r4, fp]
 800fd8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fd8e:	4401      	add	r1, r0
 800fd90:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fd92:	f108 38ff 	add.w	r8, r8, #4294967295
 800fd96:	4402      	add	r2, r0
 800fd98:	e75e      	b.n	800fc58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 800fd9a:	b005      	add	sp, #20
 800fd9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fda0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fda0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fda4:	b085      	sub	sp, #20
 800fda6:	4693      	mov	fp, r2
 800fda8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fdaa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800fdac:	6870      	ldr	r0, [r6, #4]
 800fdae:	9101      	str	r1, [sp, #4]
 800fdb0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fdb4:	fb00 2404 	mla	r4, r0, r4, r2
 800fdb8:	6832      	ldr	r2, [r6, #0]
 800fdba:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800fdbe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fdc2:	682a      	ldr	r2, [r5, #0]
 800fdc4:	9202      	str	r2, [sp, #8]
 800fdc6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fdca:	9a01      	ldr	r2, [sp, #4]
 800fdcc:	2a00      	cmp	r2, #0
 800fdce:	dc03      	bgt.n	800fdd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800fdd0:	f1bb 0f00 	cmp.w	fp, #0
 800fdd4:	f340 809a 	ble.w	800ff0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800fdd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fdda:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800fdde:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800fde2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fde6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fde8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fdec:	2b00      	cmp	r3, #0
 800fdee:	dd0c      	ble.n	800fe0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 800fdf0:	1406      	asrs	r6, r0, #16
 800fdf2:	d405      	bmi.n	800fe00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800fdf4:	454e      	cmp	r6, r9
 800fdf6:	da03      	bge.n	800fe00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800fdf8:	1416      	asrs	r6, r2, #16
 800fdfa:	d401      	bmi.n	800fe00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800fdfc:	4546      	cmp	r6, r8
 800fdfe:	db05      	blt.n	800fe0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fe00:	4470      	add	r0, lr
 800fe02:	4462      	add	r2, ip
 800fe04:	3b01      	subs	r3, #1
 800fe06:	3402      	adds	r4, #2
 800fe08:	e7f0      	b.n	800fdec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800fe0a:	d00f      	beq.n	800fe2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 800fe0c:	1e5e      	subs	r6, r3, #1
 800fe0e:	fb0e 0706 	mla	r7, lr, r6, r0
 800fe12:	143f      	asrs	r7, r7, #16
 800fe14:	d541      	bpl.n	800fe9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 800fe16:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800fe1a:	4698      	mov	r8, r3
 800fe1c:	9603      	str	r6, [sp, #12]
 800fe1e:	f1b8 0f00 	cmp.w	r8, #0
 800fe22:	dc56      	bgt.n	800fed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 800fe24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe2c:	9b01      	ldr	r3, [sp, #4]
 800fe2e:	2b00      	cmp	r3, #0
 800fe30:	dd6c      	ble.n	800ff0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800fe32:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe3a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fe3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe40:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe48:	eeb0 6a62 	vmov.f32	s12, s5
 800fe4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe54:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe58:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fe5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe60:	eeb0 6a43 	vmov.f32	s12, s6
 800fe64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe68:	ee12 2a90 	vmov	r2, s5
 800fe6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe70:	fb92 fef3 	sdiv	lr, r2, r3
 800fe74:	ee13 2a10 	vmov	r2, s6
 800fe78:	fb92 fcf3 	sdiv	ip, r2, r3
 800fe7c:	9b01      	ldr	r3, [sp, #4]
 800fe7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe82:	3b01      	subs	r3, #1
 800fe84:	9301      	str	r3, [sp, #4]
 800fe86:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fe8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe8c:	eeb0 3a67 	vmov.f32	s6, s15
 800fe90:	bf08      	it	eq
 800fe92:	465b      	moveq	r3, fp
 800fe94:	eef0 2a47 	vmov.f32	s5, s14
 800fe98:	e797      	b.n	800fdca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800fe9a:	454f      	cmp	r7, r9
 800fe9c:	dabb      	bge.n	800fe16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fe9e:	fb0c 2606 	mla	r6, ip, r6, r2
 800fea2:	1436      	asrs	r6, r6, #16
 800fea4:	d4b7      	bmi.n	800fe16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800fea6:	4546      	cmp	r6, r8
 800fea8:	dab5      	bge.n	800fe16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800feaa:	461e      	mov	r6, r3
 800feac:	46a0      	mov	r8, r4
 800feae:	2e00      	cmp	r6, #0
 800feb0:	ddb8      	ble.n	800fe24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800feb2:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800feb6:	9902      	ldr	r1, [sp, #8]
 800feb8:	1417      	asrs	r7, r2, #16
 800feba:	ea4f 4920 	mov.w	r9, r0, asr #16
 800febe:	fb0a 9707 	mla	r7, sl, r7, r9
 800fec2:	4470      	add	r0, lr
 800fec4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800fec8:	f828 7b02 	strh.w	r7, [r8], #2
 800fecc:	4462      	add	r2, ip
 800fece:	3e01      	subs	r6, #1
 800fed0:	e7ed      	b.n	800feae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 800fed2:	ea5f 4920 	movs.w	r9, r0, asr #16
 800fed6:	d414      	bmi.n	800ff02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fed8:	68ae      	ldr	r6, [r5, #8]
 800feda:	454e      	cmp	r6, r9
 800fedc:	dd11      	ble.n	800ff02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fede:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800fee2:	d40e      	bmi.n	800ff02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800fee4:	68ef      	ldr	r7, [r5, #12]
 800fee6:	4557      	cmp	r7, sl
 800fee8:	dd0b      	ble.n	800ff02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800feea:	b236      	sxth	r6, r6
 800feec:	fb0a 9606 	mla	r6, sl, r6, r9
 800fef0:	9f02      	ldr	r7, [sp, #8]
 800fef2:	f06f 0101 	mvn.w	r1, #1
 800fef6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800fefa:	fb01 f608 	mul.w	r6, r1, r8
 800fefe:	9903      	ldr	r1, [sp, #12]
 800ff00:	538f      	strh	r7, [r1, r6]
 800ff02:	4470      	add	r0, lr
 800ff04:	4462      	add	r2, ip
 800ff06:	f108 38ff 	add.w	r8, r8, #4294967295
 800ff0a:	e788      	b.n	800fe1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800ff0c:	b005      	add	sp, #20
 800ff0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ff12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ff12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff16:	b085      	sub	sp, #20
 800ff18:	468b      	mov	fp, r1
 800ff1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ff1c:	9202      	str	r2, [sp, #8]
 800ff1e:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800ff22:	9203      	str	r2, [sp, #12]
 800ff24:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ff28:	6841      	ldr	r1, [r0, #4]
 800ff2a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800ff2e:	fb01 2404 	mla	r4, r1, r4, r2
 800ff32:	6802      	ldr	r2, [r0, #0]
 800ff34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff38:	f8d8 2000 	ldr.w	r2, [r8]
 800ff3c:	9200      	str	r2, [sp, #0]
 800ff3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ff42:	f1bb 0f00 	cmp.w	fp, #0
 800ff46:	dc03      	bgt.n	800ff50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800ff48:	9a02      	ldr	r2, [sp, #8]
 800ff4a:	2a00      	cmp	r2, #0
 800ff4c:	f340 8134 	ble.w	80101b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 800ff50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ff52:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800ff56:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800ff5a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ff5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ff60:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ff64:	2b00      	cmp	r3, #0
 800ff66:	dd0e      	ble.n	800ff86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800ff68:	1402      	asrs	r2, r0, #16
 800ff6a:	d405      	bmi.n	800ff78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ff6c:	42ba      	cmp	r2, r7
 800ff6e:	da03      	bge.n	800ff78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ff70:	140a      	asrs	r2, r1, #16
 800ff72:	d401      	bmi.n	800ff78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ff74:	42b2      	cmp	r2, r6
 800ff76:	db07      	blt.n	800ff88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800ff78:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ff7a:	4410      	add	r0, r2
 800ff7c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ff7e:	3b01      	subs	r3, #1
 800ff80:	4411      	add	r1, r2
 800ff82:	3402      	adds	r4, #2
 800ff84:	e7ee      	b.n	800ff64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800ff86:	d019      	beq.n	800ffbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800ff88:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ff8a:	1e5a      	subs	r2, r3, #1
 800ff8c:	fb05 0502 	mla	r5, r5, r2, r0
 800ff90:	142d      	asrs	r5, r5, #16
 800ff92:	d409      	bmi.n	800ffa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800ff94:	42bd      	cmp	r5, r7
 800ff96:	da07      	bge.n	800ffa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800ff98:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ff9a:	fb05 1202 	mla	r2, r5, r2, r1
 800ff9e:	1412      	asrs	r2, r2, #16
 800ffa0:	d402      	bmi.n	800ffa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800ffa2:	42b2      	cmp	r2, r6
 800ffa4:	f2c0 80aa 	blt.w	80100fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 800ffa8:	f04f 0c00 	mov.w	ip, #0
 800ffac:	eb03 020c 	add.w	r2, r3, ip
 800ffb0:	2a00      	cmp	r2, #0
 800ffb2:	dc3e      	bgt.n	8010032 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 800ffb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ffb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ffbc:	f1bb 0f00 	cmp.w	fp, #0
 800ffc0:	f340 80fa 	ble.w	80101b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 800ffc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ffc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ffcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ffd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ffd2:	f1bb 0b01 	subs.w	fp, fp, #1
 800ffd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ffda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ffde:	eeb0 6a62 	vmov.f32	s12, s5
 800ffe2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ffe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ffea:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ffee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fff2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fff6:	eeb0 6a43 	vmov.f32	s12, s6
 800fffa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fffe:	ee12 2a90 	vmov	r2, s5
 8010002:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010006:	fb92 f3f3 	sdiv	r3, r2, r3
 801000a:	ee13 2a10 	vmov	r2, s6
 801000e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010012:	9311      	str	r3, [sp, #68]	; 0x44
 8010014:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010016:	fb92 f3f3 	sdiv	r3, r2, r3
 801001a:	9a02      	ldr	r2, [sp, #8]
 801001c:	9312      	str	r3, [sp, #72]	; 0x48
 801001e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010022:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010024:	eeb0 3a67 	vmov.f32	s6, s15
 8010028:	bf08      	it	eq
 801002a:	4613      	moveq	r3, r2
 801002c:	eef0 2a47 	vmov.f32	s5, s14
 8010030:	e787      	b.n	800ff42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8010032:	1406      	asrs	r6, r0, #16
 8010034:	d45b      	bmi.n	80100ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8010036:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801003a:	42b5      	cmp	r5, r6
 801003c:	dd57      	ble.n	80100ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801003e:	140f      	asrs	r7, r1, #16
 8010040:	d455      	bmi.n	80100ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 8010042:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8010046:	42ba      	cmp	r2, r7
 8010048:	dd51      	ble.n	80100ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801004a:	b22d      	sxth	r5, r5
 801004c:	fb07 6505 	mla	r5, r7, r5, r6
 8010050:	9a00      	ldr	r2, [sp, #0]
 8010052:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 8010056:	0e2e      	lsrs	r6, r5, #24
 8010058:	d049      	beq.n	80100ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 801005a:	f06f 0201 	mvn.w	r2, #1
 801005e:	fb02 f20c 	mul.w	r2, r2, ip
 8010062:	9201      	str	r2, [sp, #4]
 8010064:	f834 e002 	ldrh.w	lr, [r4, r2]
 8010068:	9a03      	ldr	r2, [sp, #12]
 801006a:	4356      	muls	r6, r2
 801006c:	1c72      	adds	r2, r6, #1
 801006e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010072:	1212      	asrs	r2, r2, #8
 8010074:	fa1f f982 	uxth.w	r9, r2
 8010078:	ea4f 272e 	mov.w	r7, lr, asr #8
 801007c:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010080:	43d2      	mvns	r2, r2
 8010082:	b2d2      	uxtb	r2, r2
 8010084:	fb16 f609 	smulbb	r6, r6, r9
 8010088:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801008c:	fb07 6702 	mla	r7, r7, r2, r6
 8010090:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010094:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010098:	b2ed      	uxtb	r5, r5
 801009a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801009e:	fa5f fe8e 	uxtb.w	lr, lr
 80100a2:	fb15 f509 	smulbb	r5, r5, r9
 80100a6:	fb0e 5502 	mla	r5, lr, r2, r5
 80100aa:	b2bf      	uxth	r7, r7
 80100ac:	fb1a fa09 	smulbb	sl, sl, r9
 80100b0:	b2ad      	uxth	r5, r5
 80100b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80100b6:	fb06 a602 	mla	r6, r6, r2, sl
 80100ba:	1c7a      	adds	r2, r7, #1
 80100bc:	f105 0a01 	add.w	sl, r5, #1
 80100c0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80100c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80100c8:	b2b6      	uxth	r6, r6
 80100ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80100ce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80100d2:	ea47 070a 	orr.w	r7, r7, sl
 80100d6:	f106 0a01 	add.w	sl, r6, #1
 80100da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80100de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80100e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80100e6:	9a01      	ldr	r2, [sp, #4]
 80100e8:	ea47 070a 	orr.w	r7, r7, sl
 80100ec:	52a7      	strh	r7, [r4, r2]
 80100ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80100f0:	4410      	add	r0, r2
 80100f2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80100f4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80100f8:	4411      	add	r1, r2
 80100fa:	e757      	b.n	800ffac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80100fc:	f04f 0e00 	mov.w	lr, #0
 8010100:	eba3 020e 	sub.w	r2, r3, lr
 8010104:	2a00      	cmp	r2, #0
 8010106:	f77f af55 	ble.w	800ffb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801010a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801010e:	1405      	asrs	r5, r0, #16
 8010110:	140a      	asrs	r2, r1, #16
 8010112:	fb06 5202 	mla	r2, r6, r2, r5
 8010116:	9d00      	ldr	r5, [sp, #0]
 8010118:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801011c:	0e2e      	lsrs	r6, r5, #24
 801011e:	d044      	beq.n	80101aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8010120:	9a03      	ldr	r2, [sp, #12]
 8010122:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010126:	4356      	muls	r6, r2
 8010128:	1c72      	adds	r2, r6, #1
 801012a:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801012e:	1212      	asrs	r2, r2, #8
 8010130:	fa1f f982 	uxth.w	r9, r2
 8010134:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010138:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801013c:	43d2      	mvns	r2, r2
 801013e:	b2d2      	uxtb	r2, r2
 8010140:	fb16 f609 	smulbb	r6, r6, r9
 8010144:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010148:	fb07 6702 	mla	r7, r7, r2, r6
 801014c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010150:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010154:	b2ed      	uxtb	r5, r5
 8010156:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801015a:	fa5f fc8c 	uxtb.w	ip, ip
 801015e:	fb15 f509 	smulbb	r5, r5, r9
 8010162:	fb0c 5502 	mla	r5, ip, r2, r5
 8010166:	b2bf      	uxth	r7, r7
 8010168:	fb1a fa09 	smulbb	sl, sl, r9
 801016c:	b2ad      	uxth	r5, r5
 801016e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010172:	fb06 a602 	mla	r6, r6, r2, sl
 8010176:	1c7a      	adds	r2, r7, #1
 8010178:	f105 0a01 	add.w	sl, r5, #1
 801017c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010180:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010184:	b2b6      	uxth	r6, r6
 8010186:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801018a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801018e:	ea47 070a 	orr.w	r7, r7, sl
 8010192:	f106 0a01 	add.w	sl, r6, #1
 8010196:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801019a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801019e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80101a2:	ea47 070a 	orr.w	r7, r7, sl
 80101a6:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80101aa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80101ac:	4410      	add	r0, r2
 80101ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80101b0:	f10e 0e01 	add.w	lr, lr, #1
 80101b4:	4411      	add	r1, r2
 80101b6:	e7a3      	b.n	8010100 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80101b8:	b005      	add	sp, #20
 80101ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080101c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80101c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101c4:	b085      	sub	sp, #20
 80101c6:	468b      	mov	fp, r1
 80101c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80101ca:	9203      	str	r2, [sp, #12]
 80101cc:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80101d0:	6861      	ldr	r1, [r4, #4]
 80101d2:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 80101d6:	fb01 2000 	mla	r0, r1, r0, r2
 80101da:	6822      	ldr	r2, [r4, #0]
 80101dc:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80101e0:	f8d9 2000 	ldr.w	r2, [r9]
 80101e4:	9200      	str	r2, [sp, #0]
 80101e6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80101ea:	f1bb 0f00 	cmp.w	fp, #0
 80101ee:	dc03      	bgt.n	80101f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80101f0:	9a03      	ldr	r2, [sp, #12]
 80101f2:	2a00      	cmp	r2, #0
 80101f4:	f340 8154 	ble.w	80104a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80101f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80101fa:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80101fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8010202:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010206:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010208:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801020c:	2b00      	cmp	r3, #0
 801020e:	dd0e      	ble.n	801022e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010210:	140c      	asrs	r4, r1, #16
 8010212:	d405      	bmi.n	8010220 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8010214:	42bc      	cmp	r4, r7
 8010216:	da03      	bge.n	8010220 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8010218:	1414      	asrs	r4, r2, #16
 801021a:	d401      	bmi.n	8010220 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801021c:	42b4      	cmp	r4, r6
 801021e:	db07      	blt.n	8010230 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010220:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8010222:	4421      	add	r1, r4
 8010224:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010226:	3b01      	subs	r3, #1
 8010228:	4422      	add	r2, r4
 801022a:	3002      	adds	r0, #2
 801022c:	e7ee      	b.n	801020c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801022e:	d017      	beq.n	8010260 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010230:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010232:	1e5c      	subs	r4, r3, #1
 8010234:	fb05 1504 	mla	r5, r5, r4, r1
 8010238:	142d      	asrs	r5, r5, #16
 801023a:	d409      	bmi.n	8010250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801023c:	42bd      	cmp	r5, r7
 801023e:	da07      	bge.n	8010250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8010240:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010242:	fb05 2404 	mla	r4, r5, r4, r2
 8010246:	1424      	asrs	r4, r4, #16
 8010248:	d402      	bmi.n	8010250 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801024a:	42b4      	cmp	r4, r6
 801024c:	f2c0 80c0 	blt.w	80103d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010250:	2700      	movs	r7, #0
 8010252:	19dc      	adds	r4, r3, r7
 8010254:	2c00      	cmp	r4, #0
 8010256:	dc3e      	bgt.n	80102d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8010258:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801025c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010260:	f1bb 0f00 	cmp.w	fp, #0
 8010264:	f340 811c 	ble.w	80104a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8010268:	ee30 0a04 	vadd.f32	s0, s0, s8
 801026c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010270:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010274:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010276:	f1bb 0b01 	subs.w	fp, fp, #1
 801027a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801027e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010282:	eeb0 6a62 	vmov.f32	s12, s5
 8010286:	ee61 7a27 	vmul.f32	s15, s2, s15
 801028a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801028e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010292:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010296:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801029a:	eeb0 6a43 	vmov.f32	s12, s6
 801029e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80102a2:	ee12 2a90 	vmov	r2, s5
 80102a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80102aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80102ae:	ee13 2a10 	vmov	r2, s6
 80102b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102b6:	9311      	str	r3, [sp, #68]	; 0x44
 80102b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80102ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80102be:	9a03      	ldr	r2, [sp, #12]
 80102c0:	9312      	str	r3, [sp, #72]	; 0x48
 80102c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80102c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80102c8:	eeb0 3a67 	vmov.f32	s6, s15
 80102cc:	bf08      	it	eq
 80102ce:	4613      	moveq	r3, r2
 80102d0:	eef0 2a47 	vmov.f32	s5, s14
 80102d4:	e789      	b.n	80101ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80102d6:	140e      	asrs	r6, r1, #16
 80102d8:	d461      	bmi.n	801039e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80102da:	f8d9 5008 	ldr.w	r5, [r9, #8]
 80102de:	42b5      	cmp	r5, r6
 80102e0:	dd5d      	ble.n	801039e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80102e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80102e6:	d45a      	bmi.n	801039e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80102e8:	f8d9 400c 	ldr.w	r4, [r9, #12]
 80102ec:	4564      	cmp	r4, ip
 80102ee:	dd56      	ble.n	801039e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80102f0:	b22d      	sxth	r5, r5
 80102f2:	fb0c 6505 	mla	r5, ip, r5, r6
 80102f6:	9c00      	ldr	r4, [sp, #0]
 80102f8:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 80102fc:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8010300:	d04d      	beq.n	801039e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8010302:	0a26      	lsrs	r6, r4, #8
 8010304:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8010308:	fa5f f58e 	uxtb.w	r5, lr
 801030c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010310:	9601      	str	r6, [sp, #4]
 8010312:	d04a      	beq.n	80103aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8010314:	f06f 0601 	mvn.w	r6, #1
 8010318:	437e      	muls	r6, r7
 801031a:	fa1f fa85 	uxth.w	sl, r5
 801031e:	f830 8006 	ldrh.w	r8, [r0, r6]
 8010322:	9602      	str	r6, [sp, #8]
 8010324:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010328:	43ed      	mvns	r5, r5
 801032a:	fa5f fc8c 	uxtb.w	ip, ip
 801032e:	b2ed      	uxtb	r5, r5
 8010330:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010334:	fb1c fc0a 	smulbb	ip, ip, sl
 8010338:	fb0e cc05 	mla	ip, lr, r5, ip
 801033c:	b2e4      	uxtb	r4, r4
 801033e:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8010342:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010346:	f89d 6004 	ldrb.w	r6, [sp, #4]
 801034a:	fa5f f888 	uxtb.w	r8, r8
 801034e:	fb14 f40a 	smulbb	r4, r4, sl
 8010352:	fb08 4405 	mla	r4, r8, r5, r4
 8010356:	b2a4      	uxth	r4, r4
 8010358:	fa1f fc8c 	uxth.w	ip, ip
 801035c:	fb16 f60a 	smulbb	r6, r6, sl
 8010360:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8010364:	fb0e 6e05 	mla	lr, lr, r5, r6
 8010368:	1c66      	adds	r6, r4, #1
 801036a:	f10c 0501 	add.w	r5, ip, #1
 801036e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8010372:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010376:	fa1f fe8e 	uxth.w	lr, lr
 801037a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801037e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010382:	ea4c 0c06 	orr.w	ip, ip, r6
 8010386:	f10e 0601 	add.w	r6, lr, #1
 801038a:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 801038e:	0976      	lsrs	r6, r6, #5
 8010390:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010394:	9c02      	ldr	r4, [sp, #8]
 8010396:	ea4c 0c06 	orr.w	ip, ip, r6
 801039a:	f820 c004 	strh.w	ip, [r0, r4]
 801039e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80103a0:	4421      	add	r1, r4
 80103a2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80103a4:	3f01      	subs	r7, #1
 80103a6:	4422      	add	r2, r4
 80103a8:	e753      	b.n	8010252 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80103aa:	4e3f      	ldr	r6, [pc, #252]	; (80104a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 80103ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80103b0:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80103b4:	ea4c 0c04 	orr.w	ip, ip, r4
 80103b8:	9c01      	ldr	r4, [sp, #4]
 80103ba:	f06f 0501 	mvn.w	r5, #1
 80103be:	00e6      	lsls	r6, r4, #3
 80103c0:	437d      	muls	r5, r7
 80103c2:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80103c6:	ea4c 0c04 	orr.w	ip, ip, r4
 80103ca:	f820 c005 	strh.w	ip, [r0, r5]
 80103ce:	e7e6      	b.n	801039e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80103d0:	f04f 0800 	mov.w	r8, #0
 80103d4:	eba3 0408 	sub.w	r4, r3, r8
 80103d8:	2c00      	cmp	r4, #0
 80103da:	f77f af3d 	ble.w	8010258 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80103de:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80103e2:	140d      	asrs	r5, r1, #16
 80103e4:	1414      	asrs	r4, r2, #16
 80103e6:	fb06 5404 	mla	r4, r6, r4, r5
 80103ea:	9d00      	ldr	r5, [sp, #0]
 80103ec:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 80103f0:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 80103f4:	d042      	beq.n	801047c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 80103f6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80103fa:	fa5f f58c 	uxtb.w	r5, ip
 80103fe:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8010402:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8010406:	d040      	beq.n	801048a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8010408:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801040c:	fa1f fa85 	uxth.w	sl, r5
 8010410:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010414:	43ed      	mvns	r5, r5
 8010416:	b2ff      	uxtb	r7, r7
 8010418:	b2ed      	uxtb	r5, r5
 801041a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801041e:	fb17 f70a 	smulbb	r7, r7, sl
 8010422:	fb0c 7705 	mla	r7, ip, r5, r7
 8010426:	b2e4      	uxtb	r4, r4
 8010428:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801042c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010430:	fa5f fe8e 	uxtb.w	lr, lr
 8010434:	fb14 f40a 	smulbb	r4, r4, sl
 8010438:	fb0e 4405 	mla	r4, lr, r5, r4
 801043c:	b2f6      	uxtb	r6, r6
 801043e:	b2bf      	uxth	r7, r7
 8010440:	fb16 f60a 	smulbb	r6, r6, sl
 8010444:	b2a4      	uxth	r4, r4
 8010446:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801044a:	fb0c 6c05 	mla	ip, ip, r5, r6
 801044e:	1c7d      	adds	r5, r7, #1
 8010450:	1c66      	adds	r6, r4, #1
 8010452:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010456:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801045a:	fa1f fc8c 	uxth.w	ip, ip
 801045e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010462:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010466:	4337      	orrs	r7, r6
 8010468:	f10c 0601 	add.w	r6, ip, #1
 801046c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8010470:	0976      	lsrs	r6, r6, #5
 8010472:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010476:	4337      	orrs	r7, r6
 8010478:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 801047c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801047e:	4421      	add	r1, r4
 8010480:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8010482:	f108 0801 	add.w	r8, r8, #1
 8010486:	4422      	add	r2, r4
 8010488:	e7a4      	b.n	80103d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801048a:	4d07      	ldr	r5, [pc, #28]	; (80104a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 801048c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8010490:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8010494:	00f6      	lsls	r6, r6, #3
 8010496:	4327      	orrs	r7, r4
 8010498:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 801049c:	4327      	orrs	r7, r4
 801049e:	e7eb      	b.n	8010478 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 80104a0:	b005      	add	sp, #20
 80104a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104a6:	bf00      	nop
 80104a8:	fffff800 	.word	0xfffff800

080104ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80104ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104b0:	b087      	sub	sp, #28
 80104b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80104b6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80104b8:	9204      	str	r2, [sp, #16]
 80104ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80104be:	9205      	str	r2, [sp, #20]
 80104c0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80104c4:	9101      	str	r1, [sp, #4]
 80104c6:	6841      	ldr	r1, [r0, #4]
 80104c8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80104cc:	fb01 2404 	mla	r4, r1, r4, r2
 80104d0:	6802      	ldr	r2, [r0, #0]
 80104d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80104d6:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80104da:	3201      	adds	r2, #1
 80104dc:	f022 0201 	bic.w	r2, r2, #1
 80104e0:	9202      	str	r2, [sp, #8]
 80104e2:	f8d8 2000 	ldr.w	r2, [r8]
 80104e6:	9203      	str	r2, [sp, #12]
 80104e8:	9a01      	ldr	r2, [sp, #4]
 80104ea:	2a00      	cmp	r2, #0
 80104ec:	dc03      	bgt.n	80104f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80104ee:	9a04      	ldr	r2, [sp, #16]
 80104f0:	2a00      	cmp	r2, #0
 80104f2:	f340 814d 	ble.w	8010790 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80104f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80104f8:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80104fc:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8010500:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010504:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010506:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801050a:	2b00      	cmp	r3, #0
 801050c:	dd0e      	ble.n	801052c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801050e:	1402      	asrs	r2, r0, #16
 8010510:	d405      	bmi.n	801051e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010512:	42ba      	cmp	r2, r7
 8010514:	da03      	bge.n	801051e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010516:	140a      	asrs	r2, r1, #16
 8010518:	d401      	bmi.n	801051e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801051a:	42b2      	cmp	r2, r6
 801051c:	db07      	blt.n	801052e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801051e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010520:	4410      	add	r0, r2
 8010522:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010524:	3b01      	subs	r3, #1
 8010526:	4411      	add	r1, r2
 8010528:	3402      	adds	r4, #2
 801052a:	e7ee      	b.n	801050a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801052c:	d019      	beq.n	8010562 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801052e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010530:	1e5a      	subs	r2, r3, #1
 8010532:	fb05 0502 	mla	r5, r5, r2, r0
 8010536:	142d      	asrs	r5, r5, #16
 8010538:	d409      	bmi.n	801054e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801053a:	42bd      	cmp	r5, r7
 801053c:	da07      	bge.n	801054e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801053e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010540:	fb05 1202 	mla	r2, r5, r2, r1
 8010544:	1412      	asrs	r2, r2, #16
 8010546:	d402      	bmi.n	801054e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010548:	42b2      	cmp	r2, r6
 801054a:	f2c0 80b7 	blt.w	80106bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801054e:	f04f 0c00 	mov.w	ip, #0
 8010552:	eb03 020c 	add.w	r2, r3, ip
 8010556:	2a00      	cmp	r2, #0
 8010558:	dc3f      	bgt.n	80105da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 801055a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801055e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010562:	9b01      	ldr	r3, [sp, #4]
 8010564:	2b00      	cmp	r3, #0
 8010566:	f340 8113 	ble.w	8010790 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801056a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801056e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010572:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010576:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010578:	ee31 1a05 	vadd.f32	s2, s2, s10
 801057c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010580:	eeb0 6a62 	vmov.f32	s12, s5
 8010584:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010588:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801058c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010590:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010594:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010598:	eeb0 6a43 	vmov.f32	s12, s6
 801059c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80105a0:	ee12 2a90 	vmov	r2, s5
 80105a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80105a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80105ac:	ee13 2a10 	vmov	r2, s6
 80105b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80105b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80105b8:	9314      	str	r3, [sp, #80]	; 0x50
 80105ba:	9b01      	ldr	r3, [sp, #4]
 80105bc:	9a04      	ldr	r2, [sp, #16]
 80105be:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105c2:	3b01      	subs	r3, #1
 80105c4:	9301      	str	r3, [sp, #4]
 80105c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80105ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105cc:	eeb0 3a67 	vmov.f32	s6, s15
 80105d0:	bf08      	it	eq
 80105d2:	4613      	moveq	r3, r2
 80105d4:	eef0 2a47 	vmov.f32	s5, s14
 80105d8:	e786      	b.n	80104e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80105da:	1405      	asrs	r5, r0, #16
 80105dc:	d467      	bmi.n	80106ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80105de:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80105e2:	42aa      	cmp	r2, r5
 80105e4:	dd63      	ble.n	80106ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80105e6:	140e      	asrs	r6, r1, #16
 80105e8:	d461      	bmi.n	80106ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80105ea:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80105ee:	42b2      	cmp	r2, r6
 80105f0:	dd5d      	ble.n	80106ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80105f2:	9a02      	ldr	r2, [sp, #8]
 80105f4:	fb06 5502 	mla	r5, r6, r2, r5
 80105f8:	086a      	lsrs	r2, r5, #1
 80105fa:	9e03      	ldr	r6, [sp, #12]
 80105fc:	5cb2      	ldrb	r2, [r6, r2]
 80105fe:	07ee      	lsls	r6, r5, #31
 8010600:	bf54      	ite	pl
 8010602:	f002 020f 	andpl.w	r2, r2, #15
 8010606:	1112      	asrmi	r2, r2, #4
 8010608:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801060c:	b2d2      	uxtb	r2, r2
 801060e:	2a00      	cmp	r2, #0
 8010610:	d04d      	beq.n	80106ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8010612:	f06f 0601 	mvn.w	r6, #1
 8010616:	fb06 fb0c 	mul.w	fp, r6, ip
 801061a:	9e05      	ldr	r6, [sp, #20]
 801061c:	4d5e      	ldr	r5, [pc, #376]	; (8010798 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801061e:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8010622:	682d      	ldr	r5, [r5, #0]
 8010624:	4372      	muls	r2, r6
 8010626:	1c56      	adds	r6, r2, #1
 8010628:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801062c:	1212      	asrs	r2, r2, #8
 801062e:	0a2f      	lsrs	r7, r5, #8
 8010630:	fa1f fa82 	uxth.w	sl, r2
 8010634:	ea4f 262e 	mov.w	r6, lr, asr #8
 8010638:	43d2      	mvns	r2, r2
 801063a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801063e:	b2d2      	uxtb	r2, r2
 8010640:	fb17 f70a 	smulbb	r7, r7, sl
 8010644:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8010648:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801064c:	fb06 7602 	mla	r6, r6, r2, r7
 8010650:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010654:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8010658:	fb19 f90a 	smulbb	r9, r9, sl
 801065c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010660:	00ed      	lsls	r5, r5, #3
 8010662:	fb07 9702 	mla	r7, r7, r2, r9
 8010666:	b2ed      	uxtb	r5, r5
 8010668:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801066c:	b2bf      	uxth	r7, r7
 801066e:	fa5f fe8e 	uxtb.w	lr, lr
 8010672:	fb15 f50a 	smulbb	r5, r5, sl
 8010676:	b2b6      	uxth	r6, r6
 8010678:	fb0e 5502 	mla	r5, lr, r2, r5
 801067c:	f107 0901 	add.w	r9, r7, #1
 8010680:	b2ad      	uxth	r5, r5
 8010682:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8010686:	f106 0901 	add.w	r9, r6, #1
 801068a:	097f      	lsrs	r7, r7, #5
 801068c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8010690:	f105 0e01 	add.w	lr, r5, #1
 8010694:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8010698:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801069c:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 80106a0:	4337      	orrs	r7, r6
 80106a2:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80106a6:	ea47 070e 	orr.w	r7, r7, lr
 80106aa:	f824 700b 	strh.w	r7, [r4, fp]
 80106ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80106b0:	4410      	add	r0, r2
 80106b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80106b4:	f10c 3cff 	add.w	ip, ip, #4294967295
 80106b8:	4411      	add	r1, r2
 80106ba:	e74a      	b.n	8010552 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80106bc:	f04f 0e00 	mov.w	lr, #0
 80106c0:	eba3 020e 	sub.w	r2, r3, lr
 80106c4:	2a00      	cmp	r2, #0
 80106c6:	f77f af48 	ble.w	801055a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80106ca:	9e02      	ldr	r6, [sp, #8]
 80106cc:	1402      	asrs	r2, r0, #16
 80106ce:	140d      	asrs	r5, r1, #16
 80106d0:	fb06 2505 	mla	r5, r6, r5, r2
 80106d4:	086a      	lsrs	r2, r5, #1
 80106d6:	9e03      	ldr	r6, [sp, #12]
 80106d8:	5cb2      	ldrb	r2, [r6, r2]
 80106da:	07ed      	lsls	r5, r5, #31
 80106dc:	bf54      	ite	pl
 80106de:	f002 020f 	andpl.w	r2, r2, #15
 80106e2:	1112      	asrmi	r2, r2, #4
 80106e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80106e8:	b2d2      	uxtb	r2, r2
 80106ea:	2a00      	cmp	r2, #0
 80106ec:	d049      	beq.n	8010782 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80106ee:	9e05      	ldr	r6, [sp, #20]
 80106f0:	4d29      	ldr	r5, [pc, #164]	; (8010798 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80106f2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80106f6:	682d      	ldr	r5, [r5, #0]
 80106f8:	4372      	muls	r2, r6
 80106fa:	1c56      	adds	r6, r2, #1
 80106fc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8010700:	1212      	asrs	r2, r2, #8
 8010702:	0a2f      	lsrs	r7, r5, #8
 8010704:	fa1f fa82 	uxth.w	sl, r2
 8010708:	ea4f 262c 	mov.w	r6, ip, asr #8
 801070c:	43d2      	mvns	r2, r2
 801070e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010712:	b2d2      	uxtb	r2, r2
 8010714:	fb17 f70a 	smulbb	r7, r7, sl
 8010718:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 801071c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010720:	fb06 7602 	mla	r6, r6, r2, r7
 8010724:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010728:	ea4f 07ec 	mov.w	r7, ip, asr #3
 801072c:	fb19 f90a 	smulbb	r9, r9, sl
 8010730:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010734:	00ed      	lsls	r5, r5, #3
 8010736:	fb07 9702 	mla	r7, r7, r2, r9
 801073a:	b2ed      	uxtb	r5, r5
 801073c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010740:	b2bf      	uxth	r7, r7
 8010742:	fa5f fc8c 	uxtb.w	ip, ip
 8010746:	fb15 f50a 	smulbb	r5, r5, sl
 801074a:	b2b6      	uxth	r6, r6
 801074c:	fb0c 5502 	mla	r5, ip, r2, r5
 8010750:	f107 0901 	add.w	r9, r7, #1
 8010754:	b2ad      	uxth	r5, r5
 8010756:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801075a:	f106 0b01 	add.w	fp, r6, #1
 801075e:	097f      	lsrs	r7, r7, #5
 8010760:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8010764:	f105 0c01 	add.w	ip, r5, #1
 8010768:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801076c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8010770:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8010774:	4337      	orrs	r7, r6
 8010776:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801077a:	ea47 070c 	orr.w	r7, r7, ip
 801077e:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010782:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010784:	4410      	add	r0, r2
 8010786:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010788:	f10e 0e01 	add.w	lr, lr, #1
 801078c:	4411      	add	r1, r2
 801078e:	e797      	b.n	80106c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010790:	b007      	add	sp, #28
 8010792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010796:	bf00      	nop
 8010798:	2000a3a4 	.word	0x2000a3a4

0801079c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801079c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107a0:	b087      	sub	sp, #28
 80107a2:	468b      	mov	fp, r1
 80107a4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80107a6:	9205      	str	r2, [sp, #20]
 80107a8:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80107ac:	6841      	ldr	r1, [r0, #4]
 80107ae:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80107b2:	fb01 2404 	mla	r4, r1, r4, r2
 80107b6:	6802      	ldr	r2, [r0, #0]
 80107b8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80107bc:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80107c0:	3201      	adds	r2, #1
 80107c2:	f022 0201 	bic.w	r2, r2, #1
 80107c6:	9201      	str	r2, [sp, #4]
 80107c8:	f8d8 2000 	ldr.w	r2, [r8]
 80107cc:	9202      	str	r2, [sp, #8]
 80107ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80107d2:	f1bb 0f00 	cmp.w	fp, #0
 80107d6:	dc03      	bgt.n	80107e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80107d8:	9a05      	ldr	r2, [sp, #20]
 80107da:	2a00      	cmp	r2, #0
 80107dc:	f340 8156 	ble.w	8010a8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80107e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80107e2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80107e6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80107ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80107ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80107f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80107f4:	2b00      	cmp	r3, #0
 80107f6:	dd0e      	ble.n	8010816 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80107f8:	1402      	asrs	r2, r0, #16
 80107fa:	d405      	bmi.n	8010808 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80107fc:	42ba      	cmp	r2, r7
 80107fe:	da03      	bge.n	8010808 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010800:	140a      	asrs	r2, r1, #16
 8010802:	d401      	bmi.n	8010808 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010804:	42b2      	cmp	r2, r6
 8010806:	db07      	blt.n	8010818 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010808:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801080a:	4410      	add	r0, r2
 801080c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801080e:	3b01      	subs	r3, #1
 8010810:	4411      	add	r1, r2
 8010812:	3402      	adds	r4, #2
 8010814:	e7ee      	b.n	80107f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8010816:	d017      	beq.n	8010848 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8010818:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801081a:	1e5a      	subs	r2, r3, #1
 801081c:	fb05 0502 	mla	r5, r5, r2, r0
 8010820:	142d      	asrs	r5, r5, #16
 8010822:	d409      	bmi.n	8010838 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010824:	42bd      	cmp	r5, r7
 8010826:	da07      	bge.n	8010838 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010828:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801082a:	fb05 1202 	mla	r2, r5, r2, r1
 801082e:	1412      	asrs	r2, r2, #16
 8010830:	d402      	bmi.n	8010838 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8010832:	42b2      	cmp	r2, r6
 8010834:	f2c0 80be 	blt.w	80109b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8010838:	2600      	movs	r6, #0
 801083a:	199a      	adds	r2, r3, r6
 801083c:	2a00      	cmp	r2, #0
 801083e:	dc3e      	bgt.n	80108be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8010840:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010844:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010848:	f1bb 0f00 	cmp.w	fp, #0
 801084c:	f340 811e 	ble.w	8010a8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8010850:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010854:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010858:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801085c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801085e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010862:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010866:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801086a:	eeb0 6a62 	vmov.f32	s12, s5
 801086e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010872:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010876:	ee77 2a62 	vsub.f32	s5, s14, s5
 801087a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801087e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010882:	eeb0 6a43 	vmov.f32	s12, s6
 8010886:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801088a:	ee12 2a90 	vmov	r2, s5
 801088e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010892:	fb92 f3f3 	sdiv	r3, r2, r3
 8010896:	ee13 2a10 	vmov	r2, s6
 801089a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801089e:	9313      	str	r3, [sp, #76]	; 0x4c
 80108a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80108a6:	9a05      	ldr	r2, [sp, #20]
 80108a8:	9314      	str	r3, [sp, #80]	; 0x50
 80108aa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80108ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108b0:	eeb0 3a67 	vmov.f32	s6, s15
 80108b4:	bf08      	it	eq
 80108b6:	4613      	moveq	r3, r2
 80108b8:	eef0 2a47 	vmov.f32	s5, s14
 80108bc:	e789      	b.n	80107d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80108be:	1405      	asrs	r5, r0, #16
 80108c0:	d465      	bmi.n	801098e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80108c2:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80108c6:	42aa      	cmp	r2, r5
 80108c8:	dd61      	ble.n	801098e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80108ca:	140f      	asrs	r7, r1, #16
 80108cc:	d45f      	bmi.n	801098e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80108ce:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80108d2:	42ba      	cmp	r2, r7
 80108d4:	dd5b      	ble.n	801098e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80108d6:	9a01      	ldr	r2, [sp, #4]
 80108d8:	fb07 5502 	mla	r5, r7, r2, r5
 80108dc:	086a      	lsrs	r2, r5, #1
 80108de:	9f02      	ldr	r7, [sp, #8]
 80108e0:	5cba      	ldrb	r2, [r7, r2]
 80108e2:	07ef      	lsls	r7, r5, #31
 80108e4:	bf54      	ite	pl
 80108e6:	f002 020f 	andpl.w	r2, r2, #15
 80108ea:	1112      	asrmi	r2, r2, #4
 80108ec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80108f0:	b2d2      	uxtb	r2, r2
 80108f2:	2a00      	cmp	r2, #0
 80108f4:	d04b      	beq.n	801098e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80108f6:	4d67      	ldr	r5, [pc, #412]	; (8010a94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 80108f8:	682f      	ldr	r7, [r5, #0]
 80108fa:	08fd      	lsrs	r5, r7, #3
 80108fc:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8010900:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010904:	00ff      	lsls	r7, r7, #3
 8010906:	2aff      	cmp	r2, #255	; 0xff
 8010908:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801090c:	9503      	str	r5, [sp, #12]
 801090e:	b2ff      	uxtb	r7, r7
 8010910:	d043      	beq.n	801099a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8010912:	f06f 0501 	mvn.w	r5, #1
 8010916:	4375      	muls	r5, r6
 8010918:	fa1f fa82 	uxth.w	sl, r2
 801091c:	f834 e005 	ldrh.w	lr, [r4, r5]
 8010920:	9504      	str	r5, [sp, #16]
 8010922:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010926:	43d2      	mvns	r2, r2
 8010928:	b2d2      	uxtb	r2, r2
 801092a:	fb19 f90a 	smulbb	r9, r9, sl
 801092e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010932:	9d03      	ldr	r5, [sp, #12]
 8010934:	fb0c 9c02 	mla	ip, ip, r2, r9
 8010938:	ea4f 09ee 	mov.w	r9, lr, asr #3
 801093c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010940:	fb15 f50a 	smulbb	r5, r5, sl
 8010944:	fb09 5502 	mla	r5, r9, r2, r5
 8010948:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801094c:	b2ad      	uxth	r5, r5
 801094e:	fa5f fe8e 	uxtb.w	lr, lr
 8010952:	fb17 f70a 	smulbb	r7, r7, sl
 8010956:	fa1f fc8c 	uxth.w	ip, ip
 801095a:	fb0e 7702 	mla	r7, lr, r2, r7
 801095e:	f105 0901 	add.w	r9, r5, #1
 8010962:	b2bf      	uxth	r7, r7
 8010964:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8010968:	f10c 0901 	add.w	r9, ip, #1
 801096c:	1c7a      	adds	r2, r7, #1
 801096e:	096d      	lsrs	r5, r5, #5
 8010970:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010974:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010978:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801097c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010980:	ea45 050c 	orr.w	r5, r5, ip
 8010984:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8010988:	9a04      	ldr	r2, [sp, #16]
 801098a:	433d      	orrs	r5, r7
 801098c:	52a5      	strh	r5, [r4, r2]
 801098e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010990:	4410      	add	r0, r2
 8010992:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010994:	3e01      	subs	r6, #1
 8010996:	4411      	add	r1, r2
 8010998:	e74f      	b.n	801083a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801099a:	f06f 0201 	mvn.w	r2, #1
 801099e:	fb02 fe06 	mul.w	lr, r2, r6
 80109a2:	9a03      	ldr	r2, [sp, #12]
 80109a4:	00d5      	lsls	r5, r2, #3
 80109a6:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 80109aa:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 80109ae:	f824 500e 	strh.w	r5, [r4, lr]
 80109b2:	e7ec      	b.n	801098e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 80109b4:	f04f 0e00 	mov.w	lr, #0
 80109b8:	eba3 020e 	sub.w	r2, r3, lr
 80109bc:	2a00      	cmp	r2, #0
 80109be:	f77f af3f 	ble.w	8010840 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80109c2:	9e01      	ldr	r6, [sp, #4]
 80109c4:	1402      	asrs	r2, r0, #16
 80109c6:	140d      	asrs	r5, r1, #16
 80109c8:	fb06 2505 	mla	r5, r6, r5, r2
 80109cc:	086a      	lsrs	r2, r5, #1
 80109ce:	9e02      	ldr	r6, [sp, #8]
 80109d0:	5cb2      	ldrb	r2, [r6, r2]
 80109d2:	07ed      	lsls	r5, r5, #31
 80109d4:	bf54      	ite	pl
 80109d6:	f002 020f 	andpl.w	r2, r2, #15
 80109da:	1112      	asrmi	r2, r2, #4
 80109dc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80109e0:	b2d2      	uxtb	r2, r2
 80109e2:	2a00      	cmp	r2, #0
 80109e4:	d045      	beq.n	8010a72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80109e6:	4d2b      	ldr	r5, [pc, #172]	; (8010a94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f8>)
 80109e8:	682e      	ldr	r6, [r5, #0]
 80109ea:	2aff      	cmp	r2, #255	; 0xff
 80109ec:	ea4f 2916 	mov.w	r9, r6, lsr #8
 80109f0:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 80109f4:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 80109f8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80109fc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010a00:	b2f6      	uxtb	r6, r6
 8010a02:	d03d      	beq.n	8010a80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8010a04:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010a08:	fa1f fa82 	uxth.w	sl, r2
 8010a0c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010a10:	43d2      	mvns	r2, r2
 8010a12:	b2d2      	uxtb	r2, r2
 8010a14:	fb19 f90a 	smulbb	r9, r9, sl
 8010a18:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010a1c:	fb07 9702 	mla	r7, r7, r2, r9
 8010a20:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8010a24:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010a28:	fb15 f50a 	smulbb	r5, r5, sl
 8010a2c:	fb09 5502 	mla	r5, r9, r2, r5
 8010a30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010a34:	b2ad      	uxth	r5, r5
 8010a36:	fa5f fc8c 	uxtb.w	ip, ip
 8010a3a:	fb16 f60a 	smulbb	r6, r6, sl
 8010a3e:	b2bf      	uxth	r7, r7
 8010a40:	fb0c 6602 	mla	r6, ip, r2, r6
 8010a44:	f105 0901 	add.w	r9, r5, #1
 8010a48:	b2b6      	uxth	r6, r6
 8010a4a:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8010a4e:	f107 0901 	add.w	r9, r7, #1
 8010a52:	096d      	lsrs	r5, r5, #5
 8010a54:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8010a58:	1c72      	adds	r2, r6, #1
 8010a5a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010a5e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010a62:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010a66:	433d      	orrs	r5, r7
 8010a68:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010a6c:	4335      	orrs	r5, r6
 8010a6e:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8010a72:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a74:	4410      	add	r0, r2
 8010a76:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a78:	f10e 0e01 	add.w	lr, lr, #1
 8010a7c:	4411      	add	r1, r2
 8010a7e:	e79b      	b.n	80109b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8010a80:	00ed      	lsls	r5, r5, #3
 8010a82:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8010a86:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 8010a8a:	e7f0      	b.n	8010a6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8010a8c:	b007      	add	sp, #28
 8010a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a92:	bf00      	nop
 8010a94:	2000a3a4 	.word	0x2000a3a4

08010a98 <_ZN8touchgfx8LCD16bppD1Ev>:
 8010a98:	4770      	bx	lr

08010a9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8010a9a:	4770      	bx	lr

08010a9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8010a9c:	4770      	bx	lr

08010a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8010a9e:	4770      	bx	lr

08010aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8010aa0:	4770      	bx	lr

08010aa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010aa2:	4770      	bx	lr

08010aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010aa4:	4770      	bx	lr

08010aa6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010aa6:	4770      	bx	lr

08010aa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010aa8:	4770      	bx	lr

08010aaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010aaa:	4770      	bx	lr

08010aac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010aac:	4770      	bx	lr

08010aae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010aae:	4770      	bx	lr

08010ab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010ab0:	4770      	bx	lr

08010ab2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010ab2:	4770      	bx	lr

08010ab4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010ab4:	4770      	bx	lr

08010ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010ab6:	4770      	bx	lr

08010ab8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010ab8:	4770      	bx	lr

08010aba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8010aba:	4770      	bx	lr

08010abc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8010abc:	4770      	bx	lr

08010abe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8010abe:	4770      	bx	lr

08010ac0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010ac0:	4770      	bx	lr

08010ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010ac2:	4770      	bx	lr

08010ac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8010ac4:	4770      	bx	lr

08010ac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010ac6:	4770      	bx	lr

08010ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8010ac8:	4770      	bx	lr

08010aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010aca:	4770      	bx	lr

08010acc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8010acc:	4770      	bx	lr

08010ace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010ace:	4770      	bx	lr

08010ad0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010ad0:	4770      	bx	lr
	...

08010ad4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010ad4:	b508      	push	{r3, lr}
 8010ad6:	4b06      	ldr	r3, [pc, #24]	; (8010af0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8010ad8:	8818      	ldrh	r0, [r3, #0]
 8010ada:	b928      	cbnz	r0, 8010ae8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8010adc:	4b05      	ldr	r3, [pc, #20]	; (8010af4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8010ade:	4a06      	ldr	r2, [pc, #24]	; (8010af8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8010ae0:	4806      	ldr	r0, [pc, #24]	; (8010afc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8010ae2:	2154      	movs	r1, #84	; 0x54
 8010ae4:	f009 f9ac 	bl	8019e40 <__assert_func>
 8010ae8:	0040      	lsls	r0, r0, #1
 8010aea:	b280      	uxth	r0, r0
 8010aec:	bd08      	pop	{r3, pc}
 8010aee:	bf00      	nop
 8010af0:	2000a396 	.word	0x2000a396
 8010af4:	0801d9ae 	.word	0x0801d9ae
 8010af8:	0801df33 	.word	0x0801df33
 8010afc:	0801d9f0 	.word	0x0801d9f0

08010b00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8010b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b04:	b08b      	sub	sp, #44	; 0x2c
 8010b06:	460f      	mov	r7, r1
 8010b08:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8010b0c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8010b10:	4616      	mov	r6, r2
 8010b12:	f1bb 0f00 	cmp.w	fp, #0
 8010b16:	d046      	beq.n	8010ba6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8010b18:	6810      	ldr	r0, [r2, #0]
 8010b1a:	6851      	ldr	r1, [r2, #4]
 8010b1c:	ad06      	add	r5, sp, #24
 8010b1e:	c503      	stmia	r5!, {r0, r1}
 8010b20:	6818      	ldr	r0, [r3, #0]
 8010b22:	6859      	ldr	r1, [r3, #4]
 8010b24:	ad08      	add	r5, sp, #32
 8010b26:	c503      	stmia	r5!, {r0, r1}
 8010b28:	a806      	add	r0, sp, #24
 8010b2a:	f7fa fd0d 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010b2e:	4631      	mov	r1, r6
 8010b30:	a808      	add	r0, sp, #32
 8010b32:	f7fa fcf1 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010b36:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010b3a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8010b3e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8010b42:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8010b46:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8010b4a:	fb16 2103 	smlabb	r1, r6, r3, r2
 8010b4e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8010b52:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8010b56:	4f5d      	ldr	r7, [pc, #372]	; (8010ccc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8010b58:	440a      	add	r2, r1
 8010b5a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010b5e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010b62:	6838      	ldr	r0, [r7, #0]
 8010b64:	4413      	add	r3, r2
 8010b66:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010b6a:	6803      	ldr	r3, [r0, #0]
 8010b6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010b6e:	4798      	blx	r3
 8010b70:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010b74:	46b9      	mov	r9, r7
 8010b76:	d019      	beq.n	8010bac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8010b78:	f010 0f04 	tst.w	r0, #4
 8010b7c:	d01a      	beq.n	8010bb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8010b7e:	f8d9 0000 	ldr.w	r0, [r9]
 8010b82:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8010b86:	6801      	ldr	r1, [r0, #0]
 8010b88:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8010b8c:	e9cd b403 	strd	fp, r4, [sp, #12]
 8010b90:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8010b94:	9402      	str	r4, [sp, #8]
 8010b96:	b2ad      	uxth	r5, r5
 8010b98:	fa1f f488 	uxth.w	r4, r8
 8010b9c:	9501      	str	r5, [sp, #4]
 8010b9e:	9400      	str	r4, [sp, #0]
 8010ba0:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8010ba2:	4631      	mov	r1, r6
 8010ba4:	47a0      	blx	r4
 8010ba6:	b00b      	add	sp, #44	; 0x2c
 8010ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bac:	b914      	cbnz	r4, 8010bb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8010bae:	f010 0f01 	tst.w	r0, #1
 8010bb2:	e7e3      	b.n	8010b7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8010bb4:	f8d9 0000 	ldr.w	r0, [r9]
 8010bb8:	6803      	ldr	r3, [r0, #0]
 8010bba:	6a1b      	ldr	r3, [r3, #32]
 8010bbc:	4798      	blx	r3
 8010bbe:	4b44      	ldr	r3, [pc, #272]	; (8010cd0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8010bc0:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8010bc4:	881a      	ldrh	r2, [r3, #0]
 8010bc6:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010bca:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8010bce:	fb02 1404 	mla	r4, r2, r4, r1
 8010bd2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010bd6:	469a      	mov	sl, r3
 8010bd8:	fb05 f502 	mul.w	r5, r5, r2
 8010bdc:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8010be0:	d058      	beq.n	8010c94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 8010be2:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8010be6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010bea:	fa1f f28b 	uxth.w	r2, fp
 8010bee:	fa1f f989 	uxth.w	r9, r9
 8010bf2:	469e      	mov	lr, r3
 8010bf4:	42ac      	cmp	r4, r5
 8010bf6:	d263      	bcs.n	8010cc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8010bf8:	eb04 0a07 	add.w	sl, r4, r7
 8010bfc:	4554      	cmp	r4, sl
 8010bfe:	d23c      	bcs.n	8010c7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8010c00:	8821      	ldrh	r1, [r4, #0]
 8010c02:	f836 3b02 	ldrh.w	r3, [r6], #2
 8010c06:	1208      	asrs	r0, r1, #8
 8010c08:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8010c0c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8010c10:	fb10 f009 	smulbb	r0, r0, r9
 8010c14:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8010c18:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c1c:	00c9      	lsls	r1, r1, #3
 8010c1e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8010c22:	b2c9      	uxtb	r1, r1
 8010c24:	10d8      	asrs	r0, r3, #3
 8010c26:	00db      	lsls	r3, r3, #3
 8010c28:	fb11 f109 	smulbb	r1, r1, r9
 8010c2c:	b2db      	uxtb	r3, r3
 8010c2e:	fa1f fc8c 	uxth.w	ip, ip
 8010c32:	fb03 1302 	mla	r3, r3, r2, r1
 8010c36:	b29b      	uxth	r3, r3
 8010c38:	f10c 0101 	add.w	r1, ip, #1
 8010c3c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8010c40:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8010c44:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8010c48:	fb1b fb09 	smulbb	fp, fp, r9
 8010c4c:	1c59      	adds	r1, r3, #1
 8010c4e:	fb00 b002 	mla	r0, r0, r2, fp
 8010c52:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8010c56:	b280      	uxth	r0, r0
 8010c58:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8010c5c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010c60:	ea4c 0c03 	orr.w	ip, ip, r3
 8010c64:	1c43      	adds	r3, r0, #1
 8010c66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8010c6a:	0940      	lsrs	r0, r0, #5
 8010c6c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010c70:	ea4c 0c00 	orr.w	ip, ip, r0
 8010c74:	f824 cb02 	strh.w	ip, [r4], #2
 8010c78:	e7c0      	b.n	8010bfc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8010c7a:	f8be 3000 	ldrh.w	r3, [lr]
 8010c7e:	eba3 0308 	sub.w	r3, r3, r8
 8010c82:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010c86:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010c8a:	eba3 0308 	sub.w	r3, r3, r8
 8010c8e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010c92:	e7af      	b.n	8010bf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 8010c94:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8010c98:	f8d9 0000 	ldr.w	r0, [r9]
 8010c9c:	42ac      	cmp	r4, r5
 8010c9e:	6803      	ldr	r3, [r0, #0]
 8010ca0:	d20e      	bcs.n	8010cc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8010ca2:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 8010ca6:	4632      	mov	r2, r6
 8010ca8:	463b      	mov	r3, r7
 8010caa:	4621      	mov	r1, r4
 8010cac:	47c0      	blx	r8
 8010cae:	f8ba 3000 	ldrh.w	r3, [sl]
 8010cb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010cb6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8010cba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010cbe:	e7eb      	b.n	8010c98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8010cc0:	4b02      	ldr	r3, [pc, #8]	; (8010ccc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8010cc2:	6818      	ldr	r0, [r3, #0]
 8010cc4:	6803      	ldr	r3, [r0, #0]
 8010cc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010cc8:	4798      	blx	r3
 8010cca:	e76c      	b.n	8010ba6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8010ccc:	2000a39c 	.word	0x2000a39c
 8010cd0:	2000a396 	.word	0x2000a396

08010cd4 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010cd4:	b510      	push	{r4, lr}
 8010cd6:	2178      	movs	r1, #120	; 0x78
 8010cd8:	4604      	mov	r4, r0
 8010cda:	f009 f882 	bl	8019de2 <_ZdlPvj>
 8010cde:	4620      	mov	r0, r4
 8010ce0:	bd10      	pop	{r4, pc}

08010ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010ce2:	b510      	push	{r4, lr}
 8010ce4:	2104      	movs	r1, #4
 8010ce6:	4604      	mov	r4, r0
 8010ce8:	f009 f87b 	bl	8019de2 <_ZdlPvj>
 8010cec:	4620      	mov	r0, r4
 8010cee:	bd10      	pop	{r4, pc}

08010cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010cf0:	b510      	push	{r4, lr}
 8010cf2:	2104      	movs	r1, #4
 8010cf4:	4604      	mov	r4, r0
 8010cf6:	f009 f874 	bl	8019de2 <_ZdlPvj>
 8010cfa:	4620      	mov	r0, r4
 8010cfc:	bd10      	pop	{r4, pc}

08010cfe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010cfe:	b510      	push	{r4, lr}
 8010d00:	2104      	movs	r1, #4
 8010d02:	4604      	mov	r4, r0
 8010d04:	f009 f86d 	bl	8019de2 <_ZdlPvj>
 8010d08:	4620      	mov	r0, r4
 8010d0a:	bd10      	pop	{r4, pc}

08010d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010d0c:	b510      	push	{r4, lr}
 8010d0e:	2104      	movs	r1, #4
 8010d10:	4604      	mov	r4, r0
 8010d12:	f009 f866 	bl	8019de2 <_ZdlPvj>
 8010d16:	4620      	mov	r0, r4
 8010d18:	bd10      	pop	{r4, pc}

08010d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010d1a:	b510      	push	{r4, lr}
 8010d1c:	2104      	movs	r1, #4
 8010d1e:	4604      	mov	r4, r0
 8010d20:	f009 f85f 	bl	8019de2 <_ZdlPvj>
 8010d24:	4620      	mov	r0, r4
 8010d26:	bd10      	pop	{r4, pc}

08010d28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8010d28:	b510      	push	{r4, lr}
 8010d2a:	2104      	movs	r1, #4
 8010d2c:	4604      	mov	r4, r0
 8010d2e:	f009 f858 	bl	8019de2 <_ZdlPvj>
 8010d32:	4620      	mov	r0, r4
 8010d34:	bd10      	pop	{r4, pc}

08010d36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010d36:	b510      	push	{r4, lr}
 8010d38:	2104      	movs	r1, #4
 8010d3a:	4604      	mov	r4, r0
 8010d3c:	f009 f851 	bl	8019de2 <_ZdlPvj>
 8010d40:	4620      	mov	r0, r4
 8010d42:	bd10      	pop	{r4, pc}

08010d44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010d44:	b510      	push	{r4, lr}
 8010d46:	2104      	movs	r1, #4
 8010d48:	4604      	mov	r4, r0
 8010d4a:	f009 f84a 	bl	8019de2 <_ZdlPvj>
 8010d4e:	4620      	mov	r0, r4
 8010d50:	bd10      	pop	{r4, pc}

08010d52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010d52:	b510      	push	{r4, lr}
 8010d54:	2104      	movs	r1, #4
 8010d56:	4604      	mov	r4, r0
 8010d58:	f009 f843 	bl	8019de2 <_ZdlPvj>
 8010d5c:	4620      	mov	r0, r4
 8010d5e:	bd10      	pop	{r4, pc}

08010d60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010d60:	b510      	push	{r4, lr}
 8010d62:	2104      	movs	r1, #4
 8010d64:	4604      	mov	r4, r0
 8010d66:	f009 f83c 	bl	8019de2 <_ZdlPvj>
 8010d6a:	4620      	mov	r0, r4
 8010d6c:	bd10      	pop	{r4, pc}

08010d6e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010d6e:	b510      	push	{r4, lr}
 8010d70:	2104      	movs	r1, #4
 8010d72:	4604      	mov	r4, r0
 8010d74:	f009 f835 	bl	8019de2 <_ZdlPvj>
 8010d78:	4620      	mov	r0, r4
 8010d7a:	bd10      	pop	{r4, pc}

08010d7c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010d7c:	b510      	push	{r4, lr}
 8010d7e:	2104      	movs	r1, #4
 8010d80:	4604      	mov	r4, r0
 8010d82:	f009 f82e 	bl	8019de2 <_ZdlPvj>
 8010d86:	4620      	mov	r0, r4
 8010d88:	bd10      	pop	{r4, pc}

08010d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010d8a:	b510      	push	{r4, lr}
 8010d8c:	2104      	movs	r1, #4
 8010d8e:	4604      	mov	r4, r0
 8010d90:	f009 f827 	bl	8019de2 <_ZdlPvj>
 8010d94:	4620      	mov	r0, r4
 8010d96:	bd10      	pop	{r4, pc}

08010d98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010d98:	b510      	push	{r4, lr}
 8010d9a:	2104      	movs	r1, #4
 8010d9c:	4604      	mov	r4, r0
 8010d9e:	f009 f820 	bl	8019de2 <_ZdlPvj>
 8010da2:	4620      	mov	r0, r4
 8010da4:	bd10      	pop	{r4, pc}

08010da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010da6:	b510      	push	{r4, lr}
 8010da8:	2104      	movs	r1, #4
 8010daa:	4604      	mov	r4, r0
 8010dac:	f009 f819 	bl	8019de2 <_ZdlPvj>
 8010db0:	4620      	mov	r0, r4
 8010db2:	bd10      	pop	{r4, pc}

08010db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010db4:	b510      	push	{r4, lr}
 8010db6:	2104      	movs	r1, #4
 8010db8:	4604      	mov	r4, r0
 8010dba:	f009 f812 	bl	8019de2 <_ZdlPvj>
 8010dbe:	4620      	mov	r0, r4
 8010dc0:	bd10      	pop	{r4, pc}

08010dc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010dc2:	b510      	push	{r4, lr}
 8010dc4:	2104      	movs	r1, #4
 8010dc6:	4604      	mov	r4, r0
 8010dc8:	f009 f80b 	bl	8019de2 <_ZdlPvj>
 8010dcc:	4620      	mov	r0, r4
 8010dce:	bd10      	pop	{r4, pc}

08010dd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010dd0:	b510      	push	{r4, lr}
 8010dd2:	2104      	movs	r1, #4
 8010dd4:	4604      	mov	r4, r0
 8010dd6:	f009 f804 	bl	8019de2 <_ZdlPvj>
 8010dda:	4620      	mov	r0, r4
 8010ddc:	bd10      	pop	{r4, pc}

08010dde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010dde:	b510      	push	{r4, lr}
 8010de0:	2104      	movs	r1, #4
 8010de2:	4604      	mov	r4, r0
 8010de4:	f008 fffd 	bl	8019de2 <_ZdlPvj>
 8010de8:	4620      	mov	r0, r4
 8010dea:	bd10      	pop	{r4, pc}

08010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010dec:	b510      	push	{r4, lr}
 8010dee:	2104      	movs	r1, #4
 8010df0:	4604      	mov	r4, r0
 8010df2:	f008 fff6 	bl	8019de2 <_ZdlPvj>
 8010df6:	4620      	mov	r0, r4
 8010df8:	bd10      	pop	{r4, pc}

08010dfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010dfa:	b510      	push	{r4, lr}
 8010dfc:	2104      	movs	r1, #4
 8010dfe:	4604      	mov	r4, r0
 8010e00:	f008 ffef 	bl	8019de2 <_ZdlPvj>
 8010e04:	4620      	mov	r0, r4
 8010e06:	bd10      	pop	{r4, pc}

08010e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010e08:	b510      	push	{r4, lr}
 8010e0a:	2104      	movs	r1, #4
 8010e0c:	4604      	mov	r4, r0
 8010e0e:	f008 ffe8 	bl	8019de2 <_ZdlPvj>
 8010e12:	4620      	mov	r0, r4
 8010e14:	bd10      	pop	{r4, pc}

08010e16 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010e16:	b510      	push	{r4, lr}
 8010e18:	2104      	movs	r1, #4
 8010e1a:	4604      	mov	r4, r0
 8010e1c:	f008 ffe1 	bl	8019de2 <_ZdlPvj>
 8010e20:	4620      	mov	r0, r4
 8010e22:	bd10      	pop	{r4, pc}

08010e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010e24:	b510      	push	{r4, lr}
 8010e26:	2104      	movs	r1, #4
 8010e28:	4604      	mov	r4, r0
 8010e2a:	f008 ffda 	bl	8019de2 <_ZdlPvj>
 8010e2e:	4620      	mov	r0, r4
 8010e30:	bd10      	pop	{r4, pc}

08010e32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8010e32:	b510      	push	{r4, lr}
 8010e34:	2104      	movs	r1, #4
 8010e36:	4604      	mov	r4, r0
 8010e38:	f008 ffd3 	bl	8019de2 <_ZdlPvj>
 8010e3c:	4620      	mov	r0, r4
 8010e3e:	bd10      	pop	{r4, pc}

08010e40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010e40:	b510      	push	{r4, lr}
 8010e42:	2104      	movs	r1, #4
 8010e44:	4604      	mov	r4, r0
 8010e46:	f008 ffcc 	bl	8019de2 <_ZdlPvj>
 8010e4a:	4620      	mov	r0, r4
 8010e4c:	bd10      	pop	{r4, pc}

08010e4e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8010e4e:	b510      	push	{r4, lr}
 8010e50:	2104      	movs	r1, #4
 8010e52:	4604      	mov	r4, r0
 8010e54:	f008 ffc5 	bl	8019de2 <_ZdlPvj>
 8010e58:	4620      	mov	r0, r4
 8010e5a:	bd10      	pop	{r4, pc}

08010e5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8010e5c:	b510      	push	{r4, lr}
 8010e5e:	2104      	movs	r1, #4
 8010e60:	4604      	mov	r4, r0
 8010e62:	f008 ffbe 	bl	8019de2 <_ZdlPvj>
 8010e66:	4620      	mov	r0, r4
 8010e68:	bd10      	pop	{r4, pc}
	...

08010e6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8010e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e70:	460d      	mov	r5, r1
 8010e72:	b087      	sub	sp, #28
 8010e74:	4614      	mov	r4, r2
 8010e76:	4698      	mov	r8, r3
 8010e78:	b333      	cbz	r3, 8010ec8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8010e7a:	4608      	mov	r0, r1
 8010e7c:	f7f8 fa07 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 8010e80:	bb10      	cbnz	r0, 8010ec8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8010e82:	6828      	ldr	r0, [r5, #0]
 8010e84:	6869      	ldr	r1, [r5, #4]
 8010e86:	4e73      	ldr	r6, [pc, #460]	; (8011054 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 8010e88:	ab04      	add	r3, sp, #16
 8010e8a:	c303      	stmia	r3!, {r0, r1}
 8010e8c:	a804      	add	r0, sp, #16
 8010e8e:	f7fa fb5b 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010e92:	6830      	ldr	r0, [r6, #0]
 8010e94:	6803      	ldr	r3, [r0, #0]
 8010e96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010e98:	4798      	blx	r3
 8010e9a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8010e9e:	d016      	beq.n	8010ece <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8010ea0:	f010 0f08 	tst.w	r0, #8
 8010ea4:	d016      	beq.n	8010ed4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 8010ea6:	6830      	ldr	r0, [r6, #0]
 8010ea8:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 8010eac:	6801      	ldr	r1, [r0, #0]
 8010eae:	9501      	str	r5, [sp, #4]
 8010eb0:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8010eb4:	f8cd 8008 	str.w	r8, [sp, #8]
 8010eb8:	9500      	str	r5, [sp, #0]
 8010eba:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 8010ebc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010ec0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8010ec4:	4621      	mov	r1, r4
 8010ec6:	47a8      	blx	r5
 8010ec8:	b007      	add	sp, #28
 8010eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ece:	f010 0f02 	tst.w	r0, #2
 8010ed2:	e7e7      	b.n	8010ea4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 8010ed4:	6830      	ldr	r0, [r6, #0]
 8010ed6:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8010eda:	6803      	ldr	r3, [r0, #0]
 8010edc:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010ee0:	6a1b      	ldr	r3, [r3, #32]
 8010ee2:	4798      	blx	r3
 8010ee4:	495c      	ldr	r1, [pc, #368]	; (8011058 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 8010ee6:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8010eea:	880b      	ldrh	r3, [r1, #0]
 8010eec:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8010ef0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8010ef4:	fb03 c202 	mla	r2, r3, r2, ip
 8010ef8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010efc:	468e      	mov	lr, r1
 8010efe:	fb07 f203 	mul.w	r2, r7, r3
 8010f02:	d053      	beq.n	8010fac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8010f04:	fa1f f388 	uxth.w	r3, r8
 8010f08:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 8010f0c:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8010f10:	ea4f 2814 	mov.w	r8, r4, lsr #8
 8010f14:	00e4      	lsls	r4, r4, #3
 8010f16:	b2e4      	uxtb	r4, r4
 8010f18:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8010f1c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010f20:	fb08 f803 	mul.w	r8, r8, r3
 8010f24:	fb09 f903 	mul.w	r9, r9, r3
 8010f28:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 8010f2c:	4363      	muls	r3, r4
 8010f2e:	006d      	lsls	r5, r5, #1
 8010f30:	b2bc      	uxth	r4, r7
 8010f32:	4288      	cmp	r0, r1
 8010f34:	f080 8088 	bcs.w	8011048 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8010f38:	eb00 0a05 	add.w	sl, r0, r5
 8010f3c:	4550      	cmp	r0, sl
 8010f3e:	d22f      	bcs.n	8010fa0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 8010f40:	8802      	ldrh	r2, [r0, #0]
 8010f42:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8010f46:	10d7      	asrs	r7, r2, #3
 8010f48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010f4c:	00d2      	lsls	r2, r2, #3
 8010f4e:	fb1c fc04 	smulbb	ip, ip, r4
 8010f52:	b2d2      	uxtb	r2, r2
 8010f54:	44c4      	add	ip, r8
 8010f56:	fb12 f204 	smulbb	r2, r2, r4
 8010f5a:	fa1f fc8c 	uxth.w	ip, ip
 8010f5e:	441a      	add	r2, r3
 8010f60:	b292      	uxth	r2, r2
 8010f62:	f10c 0b01 	add.w	fp, ip, #1
 8010f66:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010f6a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8010f6e:	fb17 f704 	smulbb	r7, r7, r4
 8010f72:	f102 0b01 	add.w	fp, r2, #1
 8010f76:	444f      	add	r7, r9
 8010f78:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8010f7c:	b2bf      	uxth	r7, r7
 8010f7e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010f82:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010f86:	ea4c 0202 	orr.w	r2, ip, r2
 8010f8a:	f107 0c01 	add.w	ip, r7, #1
 8010f8e:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8010f92:	097f      	lsrs	r7, r7, #5
 8010f94:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8010f98:	433a      	orrs	r2, r7
 8010f9a:	f820 2b02 	strh.w	r2, [r0], #2
 8010f9e:	e7cd      	b.n	8010f3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 8010fa0:	f8be 2000 	ldrh.w	r2, [lr]
 8010fa4:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8010fa8:	4410      	add	r0, r2
 8010faa:	e7c2      	b.n	8010f32 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 8010fac:	07db      	lsls	r3, r3, #31
 8010fae:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010fb2:	d50e      	bpl.n	8010fd2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 8010fb4:	006d      	lsls	r5, r5, #1
 8010fb6:	4290      	cmp	r0, r2
 8010fb8:	d246      	bcs.n	8011048 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8010fba:	1943      	adds	r3, r0, r5
 8010fbc:	4298      	cmp	r0, r3
 8010fbe:	d202      	bcs.n	8010fc6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 8010fc0:	f820 4b02 	strh.w	r4, [r0], #2
 8010fc4:	e7fa      	b.n	8010fbc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 8010fc6:	f8be 3000 	ldrh.w	r3, [lr]
 8010fca:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 8010fce:	4418      	add	r0, r3
 8010fd0:	e7f1      	b.n	8010fb6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 8010fd2:	0787      	lsls	r7, r0, #30
 8010fd4:	462b      	mov	r3, r5
 8010fd6:	d00a      	beq.n	8010fee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8010fd8:	4603      	mov	r3, r0
 8010fda:	4293      	cmp	r3, r2
 8010fdc:	d205      	bcs.n	8010fea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 8010fde:	801c      	strh	r4, [r3, #0]
 8010fe0:	f8be 1000 	ldrh.w	r1, [lr]
 8010fe4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8010fe8:	e7f7      	b.n	8010fda <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 8010fea:	3002      	adds	r0, #2
 8010fec:	1e6b      	subs	r3, r5, #1
 8010fee:	07dd      	lsls	r5, r3, #31
 8010ff0:	d50d      	bpl.n	801100e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 8010ff2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8010ff6:	3901      	subs	r1, #1
 8010ff8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8010ffc:	4291      	cmp	r1, r2
 8010ffe:	d205      	bcs.n	801100c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8011000:	800c      	strh	r4, [r1, #0]
 8011002:	f8be 5000 	ldrh.w	r5, [lr]
 8011006:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 801100a:	e7f7      	b.n	8010ffc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 801100c:	3b01      	subs	r3, #1
 801100e:	b1db      	cbz	r3, 8011048 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8011010:	b2a1      	uxth	r1, r4
 8011012:	105b      	asrs	r3, r3, #1
 8011014:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8011018:	009b      	lsls	r3, r3, #2
 801101a:	4290      	cmp	r0, r2
 801101c:	d214      	bcs.n	8011048 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 801101e:	0781      	lsls	r1, r0, #30
 8011020:	d006      	beq.n	8011030 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 8011022:	4b0e      	ldr	r3, [pc, #56]	; (801105c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 8011024:	4a0e      	ldr	r2, [pc, #56]	; (8011060 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 8011026:	480f      	ldr	r0, [pc, #60]	; (8011064 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 8011028:	f44f 7162 	mov.w	r1, #904	; 0x388
 801102c:	f008 ff08 	bl	8019e40 <__assert_func>
 8011030:	18c5      	adds	r5, r0, r3
 8011032:	4601      	mov	r1, r0
 8011034:	42a9      	cmp	r1, r5
 8011036:	d202      	bcs.n	801103e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 8011038:	f841 4b04 	str.w	r4, [r1], #4
 801103c:	e7fa      	b.n	8011034 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 801103e:	f8be 1000 	ldrh.w	r1, [lr]
 8011042:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8011046:	e7e8      	b.n	801101a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 8011048:	6830      	ldr	r0, [r6, #0]
 801104a:	6803      	ldr	r3, [r0, #0]
 801104c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801104e:	4798      	blx	r3
 8011050:	e73a      	b.n	8010ec8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8011052:	bf00      	nop
 8011054:	2000a39c 	.word	0x2000a39c
 8011058:	2000a396 	.word	0x2000a396
 801105c:	0801d94d 	.word	0x0801d94d
 8011060:	0801e100 	.word	0x0801e100
 8011064:	0801d97c 	.word	0x0801d97c

08011068 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801106c:	4f97      	ldr	r7, [pc, #604]	; (80112cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 801106e:	4616      	mov	r6, r2
 8011070:	683a      	ldr	r2, [r7, #0]
 8011072:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011076:	2a02      	cmp	r2, #2
 8011078:	b08f      	sub	sp, #60	; 0x3c
 801107a:	4604      	mov	r4, r0
 801107c:	4689      	mov	r9, r1
 801107e:	d106      	bne.n	801108e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011080:	4b93      	ldr	r3, [pc, #588]	; (80112d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 8011082:	4a94      	ldr	r2, [pc, #592]	; (80112d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8011084:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 8011088:	4893      	ldr	r0, [pc, #588]	; (80112d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 801108a:	f008 fed9 	bl	8019e40 <__assert_func>
 801108e:	ad0e      	add	r5, sp, #56	; 0x38
 8011090:	f825 3d24 	strh.w	r3, [r5, #-36]!
 8011094:	4628      	mov	r0, r5
 8011096:	f7fd fa45 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801109a:	6823      	ldr	r3, [r4, #0]
 801109c:	4680      	mov	r8, r0
 801109e:	6a1b      	ldr	r3, [r3, #32]
 80110a0:	4620      	mov	r0, r4
 80110a2:	4798      	blx	r3
 80110a4:	4580      	cmp	r8, r0
 80110a6:	d004      	beq.n	80110b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80110a8:	4b8c      	ldr	r3, [pc, #560]	; (80112dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 80110aa:	4a8a      	ldr	r2, [pc, #552]	; (80112d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80110ac:	f240 21ca 	movw	r1, #714	; 0x2ca
 80110b0:	e7ea      	b.n	8011088 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80110b2:	4628      	mov	r0, r5
 80110b4:	f7fd f9ac 	bl	800e410 <_ZNK8touchgfx6Bitmap7getDataEv>
 80110b8:	4680      	mov	r8, r0
 80110ba:	b920      	cbnz	r0, 80110c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80110bc:	4b88      	ldr	r3, [pc, #544]	; (80112e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 80110be:	4a85      	ldr	r2, [pc, #532]	; (80112d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80110c0:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 80110c4:	e7e0      	b.n	8011088 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80110c6:	6830      	ldr	r0, [r6, #0]
 80110c8:	6871      	ldr	r1, [r6, #4]
 80110ca:	f9b6 a000 	ldrsh.w	sl, [r6]
 80110ce:	ab06      	add	r3, sp, #24
 80110d0:	c303      	stmia	r3!, {r0, r1}
 80110d2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80110d6:	f8d9 0000 	ldr.w	r0, [r9]
 80110da:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80110de:	ab08      	add	r3, sp, #32
 80110e0:	c303      	stmia	r3!, {r0, r1}
 80110e2:	4628      	mov	r0, r5
 80110e4:	f7fd f88c 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80110e8:	4606      	mov	r6, r0
 80110ea:	4628      	mov	r0, r5
 80110ec:	f7fd f8c2 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80110f0:	f10d 0b20 	add.w	fp, sp, #32
 80110f4:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 80110f8:	a806      	add	r0, sp, #24
 80110fa:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80110fe:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011102:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011106:	f7fa fa1f 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801110a:	4658      	mov	r0, fp
 801110c:	f7fa fa1c 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011110:	a80a      	add	r0, sp, #40	; 0x28
 8011112:	f7fa fa19 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011116:	4d73      	ldr	r5, [pc, #460]	; (80112e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011118:	4b73      	ldr	r3, [pc, #460]	; (80112e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801111a:	f9b5 2000 	ldrsh.w	r2, [r5]
 801111e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011122:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011126:	2100      	movs	r1, #0
 8011128:	910c      	str	r1, [sp, #48]	; 0x30
 801112a:	4658      	mov	r0, fp
 801112c:	a90c      	add	r1, sp, #48	; 0x30
 801112e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011132:	f7f8 f869 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 8011136:	4658      	mov	r0, fp
 8011138:	f7f8 f8a9 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 801113c:	2800      	cmp	r0, #0
 801113e:	f040 8099 	bne.w	8011274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8011142:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8011146:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801114a:	4288      	cmp	r0, r1
 801114c:	db37      	blt.n	80111be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801114e:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8011152:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011156:	429a      	cmp	r2, r3
 8011158:	db31      	blt.n	80111be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801115a:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 801115e:	4430      	add	r0, r6
 8011160:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8011164:	4431      	add	r1, r6
 8011166:	b200      	sxth	r0, r0
 8011168:	b209      	sxth	r1, r1
 801116a:	4288      	cmp	r0, r1
 801116c:	dc27      	bgt.n	80111be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 801116e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8011172:	440a      	add	r2, r1
 8011174:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8011178:	440b      	add	r3, r1
 801117a:	b212      	sxth	r2, r2
 801117c:	b21b      	sxth	r3, r3
 801117e:	429a      	cmp	r2, r3
 8011180:	dc1d      	bgt.n	80111be <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 8011182:	6823      	ldr	r3, [r4, #0]
 8011184:	4620      	mov	r0, r4
 8011186:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011188:	4798      	blx	r3
 801118a:	4682      	mov	sl, r0
 801118c:	6838      	ldr	r0, [r7, #0]
 801118e:	6803      	ldr	r3, [r0, #0]
 8011190:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011192:	4798      	blx	r3
 8011194:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8011198:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801119c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80111a0:	1a5b      	subs	r3, r3, r1
 80111a2:	b29b      	uxth	r3, r3
 80111a4:	b21c      	sxth	r4, r3
 80111a6:	2c00      	cmp	r4, #0
 80111a8:	dc0e      	bgt.n	80111c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 80111aa:	bf1f      	itttt	ne
 80111ac:	f8ad 1020 	strhne.w	r1, [sp, #32]
 80111b0:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 80111b4:	185b      	addne	r3, r3, r1
 80111b6:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80111ba:	4644      	mov	r4, r8
 80111bc:	e009      	b.n	80111d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 80111be:	4b4b      	ldr	r3, [pc, #300]	; (80112ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80111c0:	4a44      	ldr	r2, [pc, #272]	; (80112d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80111c2:	f240 21da 	movw	r1, #730	; 0x2da
 80111c6:	e75f      	b.n	8011088 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80111c8:	1ad3      	subs	r3, r2, r3
 80111ca:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80111ce:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80111d2:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 80111d6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80111da:	1b9b      	subs	r3, r3, r6
 80111dc:	b29b      	uxth	r3, r3
 80111de:	b219      	sxth	r1, r3
 80111e0:	2900      	cmp	r1, #0
 80111e2:	dd4b      	ble.n	801127c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 80111e4:	4351      	muls	r1, r2
 80111e6:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80111ea:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80111ee:	1acb      	subs	r3, r1, r3
 80111f0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80111f4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80111f8:	2e00      	cmp	r6, #0
 80111fa:	dd3b      	ble.n	8011274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80111fc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8011200:	2b00      	cmp	r3, #0
 8011202:	dd37      	ble.n	8011274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8011204:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011208:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801120c:	fb0a f90c 	mul.w	r9, sl, ip
 8011210:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 8011214:	4481      	add	r9, r0
 8011216:	8828      	ldrh	r0, [r5, #0]
 8011218:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 801121c:	42ae      	cmp	r6, r5
 801121e:	bfa8      	it	ge
 8011220:	462e      	movge	r6, r5
 8011222:	1a41      	subs	r1, r0, r1
 8011224:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8011228:	428e      	cmp	r6, r1
 801122a:	bfa8      	it	ge
 801122c:	460e      	movge	r6, r1
 801122e:	429d      	cmp	r5, r3
 8011230:	bfa8      	it	ge
 8011232:	461d      	movge	r5, r3
 8011234:	4b2c      	ldr	r3, [pc, #176]	; (80112e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8011236:	881b      	ldrh	r3, [r3, #0]
 8011238:	eba3 030c 	sub.w	r3, r3, ip
 801123c:	429d      	cmp	r5, r3
 801123e:	bfa8      	it	ge
 8011240:	461d      	movge	r5, r3
 8011242:	42b0      	cmp	r0, r6
 8011244:	d12c      	bne.n	80112a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 8011246:	4290      	cmp	r0, r2
 8011248:	d12a      	bne.n	80112a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801124a:	6838      	ldr	r0, [r7, #0]
 801124c:	9203      	str	r2, [sp, #12]
 801124e:	6803      	ldr	r3, [r0, #0]
 8011250:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011252:	4798      	blx	r3
 8011254:	07c3      	lsls	r3, r0, #31
 8011256:	d51a      	bpl.n	801128e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 8011258:	9a03      	ldr	r2, [sp, #12]
 801125a:	6838      	ldr	r0, [r7, #0]
 801125c:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 8011260:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8011264:	6803      	ldr	r3, [r0, #0]
 8011266:	9200      	str	r2, [sp, #0]
 8011268:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 801126a:	e89b 0006 	ldmia.w	fp, {r1, r2}
 801126e:	4623      	mov	r3, r4
 8011270:	47a8      	blx	r5
 8011272:	4680      	mov	r8, r0
 8011274:	4640      	mov	r0, r8
 8011276:	b00f      	add	sp, #60	; 0x3c
 8011278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801127c:	bf1f      	itttt	ne
 801127e:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 8011282:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8011286:	185b      	addne	r3, r3, r1
 8011288:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 801128c:	e7b2      	b.n	80111f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 801128e:	6838      	ldr	r0, [r7, #0]
 8011290:	6803      	ldr	r3, [r0, #0]
 8011292:	464a      	mov	r2, r9
 8011294:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8011296:	4621      	mov	r1, r4
 8011298:	fb05 f30a 	mul.w	r3, r5, sl
 801129c:	47b0      	blx	r6
 801129e:	e7e9      	b.n	8011274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80112a0:	4355      	muls	r5, r2
 80112a2:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 80112a6:	9303      	str	r3, [sp, #12]
 80112a8:	0076      	lsls	r6, r6, #1
 80112aa:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80112ae:	9b03      	ldr	r3, [sp, #12]
 80112b0:	429c      	cmp	r4, r3
 80112b2:	d2df      	bcs.n	8011274 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80112b4:	6838      	ldr	r0, [r7, #0]
 80112b6:	6803      	ldr	r3, [r0, #0]
 80112b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112ba:	464a      	mov	r2, r9
 80112bc:	461d      	mov	r5, r3
 80112be:	4621      	mov	r1, r4
 80112c0:	4633      	mov	r3, r6
 80112c2:	47a8      	blx	r5
 80112c4:	44d1      	add	r9, sl
 80112c6:	445c      	add	r4, fp
 80112c8:	e7f1      	b.n	80112ae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 80112ca:	bf00      	nop
 80112cc:	2000a39c 	.word	0x2000a39c
 80112d0:	0801d773 	.word	0x0801d773
 80112d4:	0801dfe3 	.word	0x0801dfe3
 80112d8:	0801d97c 	.word	0x0801d97c
 80112dc:	0801d825 	.word	0x0801d825
 80112e0:	0801d87a 	.word	0x0801d87a
 80112e4:	2000a396 	.word	0x2000a396
 80112e8:	2000a398 	.word	0x2000a398
 80112ec:	0801d8b8 	.word	0x0801d8b8

080112f0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80112f0:	2200      	movs	r2, #0
 80112f2:	4910      	ldr	r1, [pc, #64]	; (8011334 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80112f4:	6042      	str	r2, [r0, #4]
 80112f6:	6001      	str	r1, [r0, #0]
 80112f8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80112fc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8011300:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8011304:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8011308:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801130c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8011310:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8011314:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8011318:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801131c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8011320:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011324:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011328:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801132c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8011330:	4770      	bx	lr
 8011332:	bf00      	nop
 8011334:	0801dc5c 	.word	0x0801dc5c

08011338 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8011338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801133c:	460d      	mov	r5, r1
 801133e:	b08b      	sub	sp, #44	; 0x2c
 8011340:	4604      	mov	r4, r0
 8011342:	6808      	ldr	r0, [r1, #0]
 8011344:	6849      	ldr	r1, [r1, #4]
 8011346:	4699      	mov	r9, r3
 8011348:	ab06      	add	r3, sp, #24
 801134a:	c303      	stmia	r3!, {r0, r1}
 801134c:	6810      	ldr	r0, [r2, #0]
 801134e:	6851      	ldr	r1, [r2, #4]
 8011350:	ab08      	add	r3, sp, #32
 8011352:	c303      	stmia	r3!, {r0, r1}
 8011354:	a806      	add	r0, sp, #24
 8011356:	f7fa f8f7 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801135a:	4629      	mov	r1, r5
 801135c:	a808      	add	r0, sp, #32
 801135e:	f7fa f8db 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011362:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011366:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801136a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801136e:	4d5f      	ldr	r5, [pc, #380]	; (80114ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 8011370:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011374:	6828      	ldr	r0, [r5, #0]
 8011376:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801137a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801137e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8011382:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8011386:	440a      	add	r2, r1
 8011388:	f8ad 2020 	strh.w	r2, [sp, #32]
 801138c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011390:	4413      	add	r3, r2
 8011392:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011396:	6803      	ldr	r3, [r0, #0]
 8011398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801139a:	4798      	blx	r3
 801139c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80113a0:	d118      	bne.n	80113d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 80113a2:	f010 0f20 	tst.w	r0, #32
 80113a6:	6828      	ldr	r0, [r5, #0]
 80113a8:	d017      	beq.n	80113da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 80113aa:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 80113ae:	6801      	ldr	r1, [r0, #0]
 80113b0:	9502      	str	r5, [sp, #8]
 80113b2:	b2b6      	uxth	r6, r6
 80113b4:	fa1f f588 	uxth.w	r5, r8
 80113b8:	f8cd 900c 	str.w	r9, [sp, #12]
 80113bc:	9601      	str	r6, [sp, #4]
 80113be:	9500      	str	r5, [sp, #0]
 80113c0:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80113c2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80113c6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80113ca:	4621      	mov	r1, r4
 80113cc:	47a8      	blx	r5
 80113ce:	b00b      	add	sp, #44	; 0x2c
 80113d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113d4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80113d8:	e7e5      	b.n	80113a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80113da:	6803      	ldr	r3, [r0, #0]
 80113dc:	6a1b      	ldr	r3, [r3, #32]
 80113de:	4798      	blx	r3
 80113e0:	4a43      	ldr	r2, [pc, #268]	; (80114f0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80113e2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80113e6:	f8b2 e000 	ldrh.w	lr, [r2]
 80113ea:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80113ee:	fb0e 1303 	mla	r3, lr, r3, r1
 80113f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80113f6:	fb0e fe06 	mul.w	lr, lr, r6
 80113fa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80113fe:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 8011402:	9305      	str	r3, [sp, #20]
 8011404:	4692      	mov	sl, r2
 8011406:	4570      	cmp	r0, lr
 8011408:	d26a      	bcs.n	80114e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 801140a:	9b05      	ldr	r3, [sp, #20]
 801140c:	4621      	mov	r1, r4
 801140e:	eb00 0b03 	add.w	fp, r0, r3
 8011412:	4558      	cmp	r0, fp
 8011414:	d257      	bcs.n	80114c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 8011416:	f851 4b04 	ldr.w	r4, [r1], #4
 801141a:	0e22      	lsrs	r2, r4, #24
 801141c:	d012      	beq.n	8011444 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 801141e:	2aff      	cmp	r2, #255	; 0xff
 8011420:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8011424:	d110      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 8011426:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801142a:	d10d      	bne.n	8011448 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 801142c:	0963      	lsrs	r3, r4, #5
 801142e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8011432:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011436:	f027 0707 	bic.w	r7, r7, #7
 801143a:	431f      	orrs	r7, r3
 801143c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011440:	433c      	orrs	r4, r7
 8011442:	8004      	strh	r4, [r0, #0]
 8011444:	3002      	adds	r0, #2
 8011446:	e7e4      	b.n	8011412 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 8011448:	fb09 f302 	mul.w	r3, r9, r2
 801144c:	1c5a      	adds	r2, r3, #1
 801144e:	f8b0 c000 	ldrh.w	ip, [r0]
 8011452:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8011456:	1212      	asrs	r2, r2, #8
 8011458:	b293      	uxth	r3, r2
 801145a:	ea4f 262c 	mov.w	r6, ip, asr #8
 801145e:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8011462:	43d2      	mvns	r2, r2
 8011464:	b2d2      	uxtb	r2, r2
 8011466:	fb15 f503 	smulbb	r5, r5, r3
 801146a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801146e:	fb06 5602 	mla	r6, r6, r2, r5
 8011472:	b2ff      	uxtb	r7, r7
 8011474:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011478:	b2e4      	uxtb	r4, r4
 801147a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801147e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011482:	fb17 f703 	smulbb	r7, r7, r3
 8011486:	fa5f fc8c 	uxtb.w	ip, ip
 801148a:	fb14 f403 	smulbb	r4, r4, r3
 801148e:	fb05 7702 	mla	r7, r5, r2, r7
 8011492:	fb0c 4202 	mla	r2, ip, r2, r4
 8011496:	b2b6      	uxth	r6, r6
 8011498:	b2bf      	uxth	r7, r7
 801149a:	b292      	uxth	r2, r2
 801149c:	1c73      	adds	r3, r6, #1
 801149e:	f102 0c01 	add.w	ip, r2, #1
 80114a2:	1c7d      	adds	r5, r7, #1
 80114a4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80114a8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80114ac:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80114b0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80114b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80114b8:	097f      	lsrs	r7, r7, #5
 80114ba:	4316      	orrs	r6, r2
 80114bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80114c0:	433e      	orrs	r6, r7
 80114c2:	8006      	strh	r6, [r0, #0]
 80114c4:	e7be      	b.n	8011444 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 80114c6:	f8ba 3000 	ldrh.w	r3, [sl]
 80114ca:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 80114ce:	eba3 0308 	sub.w	r3, r3, r8
 80114d2:	eba4 0408 	sub.w	r4, r4, r8
 80114d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80114da:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80114de:	e792      	b.n	8011406 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80114e0:	4b02      	ldr	r3, [pc, #8]	; (80114ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 80114e2:	6818      	ldr	r0, [r3, #0]
 80114e4:	6803      	ldr	r3, [r0, #0]
 80114e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80114e8:	4798      	blx	r3
 80114ea:	e770      	b.n	80113ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 80114ec:	2000a39c 	.word	0x2000a39c
 80114f0:	2000a396 	.word	0x2000a396

080114f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80114f4:	b570      	push	{r4, r5, r6, lr}
 80114f6:	9d04      	ldr	r5, [sp, #16]
 80114f8:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80114fc:	460c      	mov	r4, r1
 80114fe:	4619      	mov	r1, r3
 8011500:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011504:	2a0d      	cmp	r2, #13
 8011506:	d820      	bhi.n	801154a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8011508:	e8df f002 	tbb	[pc, r2]
 801150c:	18121807 	.word	0x18121807
 8011510:	18181818 	.word	0x18181818
 8011514:	18181818 	.word	0x18181818
 8011518:	1818      	.short	0x1818
 801151a:	6802      	ldr	r2, [r0, #0]
 801151c:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8011520:	68d6      	ldr	r6, [r2, #12]
 8011522:	462b      	mov	r3, r5
 8011524:	460a      	mov	r2, r1
 8011526:	46b4      	mov	ip, r6
 8011528:	4621      	mov	r1, r4
 801152a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801152e:	4760      	bx	ip
 8011530:	462a      	mov	r2, r5
 8011532:	4620      	mov	r0, r4
 8011534:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011538:	f7ff befe 	b.w	8011338 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801153c:	4b03      	ldr	r3, [pc, #12]	; (801154c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 801153e:	4a04      	ldr	r2, [pc, #16]	; (8011550 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8011540:	4804      	ldr	r0, [pc, #16]	; (8011554 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8011542:	f240 21c1 	movw	r1, #705	; 0x2c1
 8011546:	f008 fc7b 	bl	8019e40 <__assert_func>
 801154a:	bd70      	pop	{r4, r5, r6, pc}
 801154c:	0801d918 	.word	0x0801d918
 8011550:	0801e069 	.word	0x0801e069
 8011554:	0801d97c 	.word	0x0801d97c

08011558 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8011558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801155c:	b093      	sub	sp, #76	; 0x4c
 801155e:	880f      	ldrh	r7, [r1, #0]
 8011560:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8011564:	4604      	mov	r4, r0
 8011566:	4688      	mov	r8, r1
 8011568:	4616      	mov	r6, r2
 801156a:	b12f      	cbz	r7, 8011578 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 801156c:	4b6f      	ldr	r3, [pc, #444]	; (801172c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 801156e:	4a70      	ldr	r2, [pc, #448]	; (8011730 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8011570:	4870      	ldr	r0, [pc, #448]	; (8011734 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011572:	21e2      	movs	r1, #226	; 0xe2
 8011574:	f008 fc64 	bl	8019e40 <__assert_func>
 8011578:	6810      	ldr	r0, [r2, #0]
 801157a:	6851      	ldr	r1, [r2, #4]
 801157c:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 801173c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 8011580:	ad0e      	add	r5, sp, #56	; 0x38
 8011582:	c503      	stmia	r5!, {r0, r1}
 8011584:	6818      	ldr	r0, [r3, #0]
 8011586:	6859      	ldr	r1, [r3, #4]
 8011588:	ad10      	add	r5, sp, #64	; 0x40
 801158a:	c503      	stmia	r5!, {r0, r1}
 801158c:	a80e      	add	r0, sp, #56	; 0x38
 801158e:	f7f9 ffdb 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011592:	4631      	mov	r1, r6
 8011594:	a810      	add	r0, sp, #64	; 0x40
 8011596:	f7f9 ffbf 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801159a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801159e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80115a2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80115a6:	f8db 0000 	ldr.w	r0, [fp]
 80115aa:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 80115ae:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80115b2:	4e61      	ldr	r6, [pc, #388]	; (8011738 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 80115b4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80115b8:	440c      	add	r4, r1
 80115ba:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80115be:	440a      	add	r2, r1
 80115c0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80115c4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80115c8:	4413      	add	r3, r2
 80115ca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80115ce:	6803      	ldr	r3, [r0, #0]
 80115d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80115d4:	4798      	blx	r3
 80115d6:	2801      	cmp	r0, #1
 80115d8:	d11d      	bne.n	8011616 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 80115da:	220b      	movs	r2, #11
 80115dc:	9708      	str	r7, [sp, #32]
 80115de:	9207      	str	r2, [sp, #28]
 80115e0:	8832      	ldrh	r2, [r6, #0]
 80115e2:	f8cd a010 	str.w	sl, [sp, #16]
 80115e6:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80115ea:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80115ee:	9203      	str	r2, [sp, #12]
 80115f0:	fa1f f289 	uxth.w	r2, r9
 80115f4:	9201      	str	r2, [sp, #4]
 80115f6:	b2ad      	uxth	r5, r5
 80115f8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80115fc:	9200      	str	r2, [sp, #0]
 80115fe:	9502      	str	r5, [sp, #8]
 8011600:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011604:	f8db 0000 	ldr.w	r0, [fp]
 8011608:	4642      	mov	r2, r8
 801160a:	4621      	mov	r1, r4
 801160c:	f7f8 fa50 	bl	8009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8011610:	b013      	add	sp, #76	; 0x4c
 8011612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011616:	f8db 0000 	ldr.w	r0, [fp]
 801161a:	6803      	ldr	r3, [r0, #0]
 801161c:	6a1b      	ldr	r3, [r3, #32]
 801161e:	4798      	blx	r3
 8011620:	8832      	ldrh	r2, [r6, #0]
 8011622:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8011626:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801162a:	960d      	str	r6, [sp, #52]	; 0x34
 801162c:	fb02 1303 	mla	r3, r2, r3, r1
 8011630:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011634:	4355      	muls	r5, r2
 8011636:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 801163a:	930c      	str	r3, [sp, #48]	; 0x30
 801163c:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8011640:	930b      	str	r3, [sp, #44]	; 0x2c
 8011642:	f04f 0e04 	mov.w	lr, #4
 8011646:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011648:	4298      	cmp	r0, r3
 801164a:	d269      	bcs.n	8011720 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 801164c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801164e:	4621      	mov	r1, r4
 8011650:	eb00 0b03 	add.w	fp, r0, r3
 8011654:	4558      	cmp	r0, fp
 8011656:	460b      	mov	r3, r1
 8011658:	d256      	bcs.n	8011708 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 801165a:	781b      	ldrb	r3, [r3, #0]
 801165c:	fb1e e303 	smlabb	r3, lr, r3, lr
 8011660:	3101      	adds	r1, #1
 8011662:	f858 2003 	ldr.w	r2, [r8, r3]
 8011666:	0e14      	lsrs	r4, r2, #24
 8011668:	d012      	beq.n	8011690 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 801166a:	2cff      	cmp	r4, #255	; 0xff
 801166c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8011670:	d110      	bne.n	8011694 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8011672:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011676:	d10d      	bne.n	8011694 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8011678:	0953      	lsrs	r3, r2, #5
 801167a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801167e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011682:	f026 0607 	bic.w	r6, r6, #7
 8011686:	431e      	orrs	r6, r3
 8011688:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801168c:	4332      	orrs	r2, r6
 801168e:	8002      	strh	r2, [r0, #0]
 8011690:	3002      	adds	r0, #2
 8011692:	e7df      	b.n	8011654 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 8011694:	fb0a f404 	mul.w	r4, sl, r4
 8011698:	1c63      	adds	r3, r4, #1
 801169a:	8807      	ldrh	r7, [r0, #0]
 801169c:	eb03 2324 	add.w	r3, r3, r4, asr #8
 80116a0:	121b      	asrs	r3, r3, #8
 80116a2:	fa1f fc83 	uxth.w	ip, r3
 80116a6:	123d      	asrs	r5, r7, #8
 80116a8:	f3c2 4407 	ubfx	r4, r2, #16, #8
 80116ac:	43db      	mvns	r3, r3
 80116ae:	b2db      	uxtb	r3, r3
 80116b0:	fb14 f40c 	smulbb	r4, r4, ip
 80116b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80116b8:	fb05 4503 	mla	r5, r5, r3, r4
 80116bc:	b2d2      	uxtb	r2, r2
 80116be:	10fc      	asrs	r4, r7, #3
 80116c0:	00ff      	lsls	r7, r7, #3
 80116c2:	b2ff      	uxtb	r7, r7
 80116c4:	fb12 f20c 	smulbb	r2, r2, ip
 80116c8:	fb07 2203 	mla	r2, r7, r3, r2
 80116cc:	b2f6      	uxtb	r6, r6
 80116ce:	b2ad      	uxth	r5, r5
 80116d0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80116d4:	b292      	uxth	r2, r2
 80116d6:	fb16 f60c 	smulbb	r6, r6, ip
 80116da:	fb04 6603 	mla	r6, r4, r3, r6
 80116de:	1c6b      	adds	r3, r5, #1
 80116e0:	1c54      	adds	r4, r2, #1
 80116e2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80116e6:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80116ea:	b2b6      	uxth	r6, r6
 80116ec:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80116f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80116f4:	4325      	orrs	r5, r4
 80116f6:	1c74      	adds	r4, r6, #1
 80116f8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80116fc:	0976      	lsrs	r6, r6, #5
 80116fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011702:	4335      	orrs	r5, r6
 8011704:	8005      	strh	r5, [r0, #0]
 8011706:	e7c3      	b.n	8011690 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8011708:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801170a:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 801170e:	881b      	ldrh	r3, [r3, #0]
 8011710:	eba4 0409 	sub.w	r4, r4, r9
 8011714:	eba3 0309 	sub.w	r3, r3, r9
 8011718:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801171c:	440c      	add	r4, r1
 801171e:	e792      	b.n	8011646 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8011720:	4b06      	ldr	r3, [pc, #24]	; (801173c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8011722:	6818      	ldr	r0, [r3, #0]
 8011724:	6803      	ldr	r3, [r0, #0]
 8011726:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011728:	4798      	blx	r3
 801172a:	e771      	b.n	8011610 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 801172c:	0801d723 	.word	0x0801d723
 8011730:	0801de3a 	.word	0x0801de3a
 8011734:	0801d97c 	.word	0x0801d97c
 8011738:	2000a396 	.word	0x2000a396
 801173c:	2000a39c 	.word	0x2000a39c

08011740 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8011740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011744:	4614      	mov	r4, r2
 8011746:	880a      	ldrh	r2, [r1, #0]
 8011748:	b091      	sub	sp, #68	; 0x44
 801174a:	2a02      	cmp	r2, #2
 801174c:	4607      	mov	r7, r0
 801174e:	4689      	mov	r9, r1
 8011750:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8011754:	d006      	beq.n	8011764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8011756:	4b77      	ldr	r3, [pc, #476]	; (8011934 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 8011758:	4a77      	ldr	r2, [pc, #476]	; (8011938 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 801175a:	4878      	ldr	r0, [pc, #480]	; (801193c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 801175c:	f240 113b 	movw	r1, #315	; 0x13b
 8011760:	f008 fb6e 	bl	8019e40 <__assert_func>
 8011764:	2e00      	cmp	r6, #0
 8011766:	d04b      	beq.n	8011800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011768:	6820      	ldr	r0, [r4, #0]
 801176a:	6861      	ldr	r1, [r4, #4]
 801176c:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8011944 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 8011770:	ad0c      	add	r5, sp, #48	; 0x30
 8011772:	c503      	stmia	r5!, {r0, r1}
 8011774:	6818      	ldr	r0, [r3, #0]
 8011776:	6859      	ldr	r1, [r3, #4]
 8011778:	ad0e      	add	r5, sp, #56	; 0x38
 801177a:	c503      	stmia	r5!, {r0, r1}
 801177c:	a80c      	add	r0, sp, #48	; 0x30
 801177e:	f7f9 fee3 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011782:	4621      	mov	r1, r4
 8011784:	a80e      	add	r0, sp, #56	; 0x38
 8011786:	f7f9 fec7 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801178a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801178e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8011792:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8011796:	f8da 0000 	ldr.w	r0, [sl]
 801179a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801179e:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 80117a2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80117a6:	187c      	adds	r4, r7, r1
 80117a8:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80117ac:	4f64      	ldr	r7, [pc, #400]	; (8011940 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 80117ae:	440a      	add	r2, r1
 80117b0:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80117b4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80117b8:	4413      	add	r3, r2
 80117ba:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80117be:	6803      	ldr	r3, [r0, #0]
 80117c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80117c4:	4798      	blx	r3
 80117c6:	2801      	cmp	r0, #1
 80117c8:	d11d      	bne.n	8011806 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 80117ca:	2200      	movs	r2, #0
 80117cc:	210b      	movs	r1, #11
 80117ce:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80117d2:	8839      	ldrh	r1, [r7, #0]
 80117d4:	9604      	str	r6, [sp, #16]
 80117d6:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80117da:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80117de:	9203      	str	r2, [sp, #12]
 80117e0:	fa1f f288 	uxth.w	r2, r8
 80117e4:	9201      	str	r2, [sp, #4]
 80117e6:	b2ad      	uxth	r5, r5
 80117e8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80117ec:	9200      	str	r2, [sp, #0]
 80117ee:	9502      	str	r5, [sp, #8]
 80117f0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80117f4:	f8da 0000 	ldr.w	r0, [sl]
 80117f8:	464a      	mov	r2, r9
 80117fa:	4621      	mov	r1, r4
 80117fc:	f7f8 f958 	bl	8009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8011800:	b011      	add	sp, #68	; 0x44
 8011802:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011806:	f8da 0000 	ldr.w	r0, [sl]
 801180a:	6803      	ldr	r3, [r0, #0]
 801180c:	6a1b      	ldr	r3, [r3, #32]
 801180e:	4798      	blx	r3
 8011810:	8839      	ldrh	r1, [r7, #0]
 8011812:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8011816:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801181a:	2eff      	cmp	r6, #255	; 0xff
 801181c:	fb01 2303 	mla	r3, r1, r3, r2
 8011820:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011824:	f109 0204 	add.w	r2, r9, #4
 8011828:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 801182c:	fb05 f501 	mul.w	r5, r5, r1
 8011830:	d05f      	beq.n	80118f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 8011832:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8011836:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801183a:	b2b6      	uxth	r6, r6
 801183c:	fa1f f989 	uxth.w	r9, r9
 8011840:	970b      	str	r7, [sp, #44]	; 0x2c
 8011842:	42a8      	cmp	r0, r5
 8011844:	d26f      	bcs.n	8011926 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8011846:	eb00 010b 	add.w	r1, r0, fp
 801184a:	4288      	cmp	r0, r1
 801184c:	4623      	mov	r3, r4
 801184e:	d244      	bcs.n	80118da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 8011850:	781b      	ldrb	r3, [r3, #0]
 8011852:	8807      	ldrh	r7, [r0, #0]
 8011854:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8011858:	ea4f 2c27 	mov.w	ip, r7, asr #8
 801185c:	ea4f 2e23 	mov.w	lr, r3, asr #8
 8011860:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011864:	fb1c fc09 	smulbb	ip, ip, r9
 8011868:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 801186c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011870:	00ff      	lsls	r7, r7, #3
 8011872:	fb0e ce06 	mla	lr, lr, r6, ip
 8011876:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801187a:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 801187e:	b2ff      	uxtb	r7, r7
 8011880:	00db      	lsls	r3, r3, #3
 8011882:	fa1f fe8e 	uxth.w	lr, lr
 8011886:	fb1a fa09 	smulbb	sl, sl, r9
 801188a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801188e:	b2db      	uxtb	r3, r3
 8011890:	fb17 f709 	smulbb	r7, r7, r9
 8011894:	fb0c ac06 	mla	ip, ip, r6, sl
 8011898:	fb03 7306 	mla	r3, r3, r6, r7
 801189c:	f10e 0a01 	add.w	sl, lr, #1
 80118a0:	b29b      	uxth	r3, r3
 80118a2:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 80118a6:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 80118aa:	f103 0e01 	add.w	lr, r3, #1
 80118ae:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 80118b2:	fa1f fc8c 	uxth.w	ip, ip
 80118b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80118ba:	ea4a 0e03 	orr.w	lr, sl, r3
 80118be:	f10c 0a01 	add.w	sl, ip, #1
 80118c2:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 80118c6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80118ca:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80118ce:	ea4e 0e0c 	orr.w	lr, lr, ip
 80118d2:	3401      	adds	r4, #1
 80118d4:	f820 eb02 	strh.w	lr, [r0], #2
 80118d8:	e7b7      	b.n	801184a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 80118da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80118dc:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 80118e0:	881b      	ldrh	r3, [r3, #0]
 80118e2:	eba1 0108 	sub.w	r1, r1, r8
 80118e6:	eba3 0308 	sub.w	r3, r3, r8
 80118ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80118ee:	440c      	add	r4, r1
 80118f0:	e7a7      	b.n	8011842 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 80118f2:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80118f6:	42a8      	cmp	r0, r5
 80118f8:	d215      	bcs.n	8011926 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 80118fa:	eb00 010b 	add.w	r1, r0, fp
 80118fe:	4288      	cmp	r0, r1
 8011900:	d206      	bcs.n	8011910 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 8011902:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011906:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 801190a:	f820 3b02 	strh.w	r3, [r0], #2
 801190e:	e7f6      	b.n	80118fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8011910:	883b      	ldrh	r3, [r7, #0]
 8011912:	eba3 0308 	sub.w	r3, r3, r8
 8011916:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801191a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801191e:	eba3 0308 	sub.w	r3, r3, r8
 8011922:	441c      	add	r4, r3
 8011924:	e7e7      	b.n	80118f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 8011926:	4b07      	ldr	r3, [pc, #28]	; (8011944 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8011928:	6818      	ldr	r0, [r3, #0]
 801192a:	6803      	ldr	r3, [r0, #0]
 801192c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801192e:	4798      	blx	r3
 8011930:	e766      	b.n	8011800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011932:	bf00      	nop
 8011934:	0801d5e1 	.word	0x0801d5e1
 8011938:	0801dca4 	.word	0x0801dca4
 801193c:	0801d97c 	.word	0x0801d97c
 8011940:	2000a396 	.word	0x2000a396
 8011944:	2000a39c 	.word	0x2000a39c

08011948 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8011948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801194c:	4614      	mov	r4, r2
 801194e:	880a      	ldrh	r2, [r1, #0]
 8011950:	b091      	sub	sp, #68	; 0x44
 8011952:	2a01      	cmp	r2, #1
 8011954:	4606      	mov	r6, r0
 8011956:	4688      	mov	r8, r1
 8011958:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 801195c:	d006      	beq.n	801196c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 801195e:	4b7c      	ldr	r3, [pc, #496]	; (8011b50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 8011960:	4a7c      	ldr	r2, [pc, #496]	; (8011b54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 8011962:	487d      	ldr	r0, [pc, #500]	; (8011b58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 8011964:	f240 1197 	movw	r1, #407	; 0x197
 8011968:	f008 fa6a 	bl	8019e40 <__assert_func>
 801196c:	2f00      	cmp	r7, #0
 801196e:	d04b      	beq.n	8011a08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8011970:	6820      	ldr	r0, [r4, #0]
 8011972:	6861      	ldr	r1, [r4, #4]
 8011974:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8011b64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8011978:	ad0c      	add	r5, sp, #48	; 0x30
 801197a:	c503      	stmia	r5!, {r0, r1}
 801197c:	6818      	ldr	r0, [r3, #0]
 801197e:	6859      	ldr	r1, [r3, #4]
 8011980:	ad0e      	add	r5, sp, #56	; 0x38
 8011982:	c503      	stmia	r5!, {r0, r1}
 8011984:	a80c      	add	r0, sp, #48	; 0x30
 8011986:	f7f9 fddf 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801198a:	4621      	mov	r1, r4
 801198c:	a80e      	add	r0, sp, #56	; 0x38
 801198e:	f7f9 fdc3 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011992:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8011996:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801199a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801199e:	f8da 0000 	ldr.w	r0, [sl]
 80119a2:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 80119a6:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 80119aa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80119ae:	1874      	adds	r4, r6, r1
 80119b0:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80119b4:	4e69      	ldr	r6, [pc, #420]	; (8011b5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 80119b6:	440a      	add	r2, r1
 80119b8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80119bc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80119c0:	4413      	add	r3, r2
 80119c2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80119c6:	6803      	ldr	r3, [r0, #0]
 80119c8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80119cc:	4798      	blx	r3
 80119ce:	2801      	cmp	r0, #1
 80119d0:	d11d      	bne.n	8011a0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 80119d2:	220b      	movs	r2, #11
 80119d4:	2100      	movs	r1, #0
 80119d6:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80119da:	8832      	ldrh	r2, [r6, #0]
 80119dc:	9704      	str	r7, [sp, #16]
 80119de:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80119e2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80119e6:	9203      	str	r2, [sp, #12]
 80119e8:	fa1f f289 	uxth.w	r2, r9
 80119ec:	9202      	str	r2, [sp, #8]
 80119ee:	b2ad      	uxth	r5, r5
 80119f0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80119f4:	9200      	str	r2, [sp, #0]
 80119f6:	9501      	str	r5, [sp, #4]
 80119f8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80119fc:	f8da 0000 	ldr.w	r0, [sl]
 8011a00:	4642      	mov	r2, r8
 8011a02:	4621      	mov	r1, r4
 8011a04:	f7f8 f854 	bl	8009ab0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8011a08:	b011      	add	sp, #68	; 0x44
 8011a0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a0e:	f8da 0000 	ldr.w	r0, [sl]
 8011a12:	6803      	ldr	r3, [r0, #0]
 8011a14:	6a1b      	ldr	r3, [r3, #32]
 8011a16:	4798      	blx	r3
 8011a18:	8832      	ldrh	r2, [r6, #0]
 8011a1a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8011a1e:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8011a22:	2fff      	cmp	r7, #255	; 0xff
 8011a24:	fb02 1303 	mla	r3, r2, r3, r1
 8011a28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011a2c:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 8011a30:	fb09 f902 	mul.w	r9, r9, r2
 8011a34:	d056      	beq.n	8011ae4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8011a36:	ea6f 0c07 	mvn.w	ip, r7
 8011a3a:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8011a3e:	b2bb      	uxth	r3, r7
 8011a40:	fa5f fc8c 	uxtb.w	ip, ip
 8011a44:	960b      	str	r6, [sp, #44]	; 0x2c
 8011a46:	4548      	cmp	r0, r9
 8011a48:	d27b      	bcs.n	8011b42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8011a4a:	eb00 0a0e 	add.w	sl, r0, lr
 8011a4e:	4550      	cmp	r0, sl
 8011a50:	4622      	mov	r2, r4
 8011a52:	d23d      	bcs.n	8011ad0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 8011a54:	7811      	ldrb	r1, [r2, #0]
 8011a56:	2604      	movs	r6, #4
 8011a58:	2203      	movs	r2, #3
 8011a5a:	fb12 6101 	smlabb	r1, r2, r1, r6
 8011a5e:	eb08 0b01 	add.w	fp, r8, r1
 8011a62:	8802      	ldrh	r2, [r0, #0]
 8011a64:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011a68:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011a6c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8011a70:	1217      	asrs	r7, r2, #8
 8011a72:	fb16 f603 	smulbb	r6, r6, r3
 8011a76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011a7a:	fb07 670c 	mla	r7, r7, ip, r6
 8011a7e:	10d6      	asrs	r6, r2, #3
 8011a80:	00d2      	lsls	r2, r2, #3
 8011a82:	b2d2      	uxtb	r2, r2
 8011a84:	fb1b fb03 	smulbb	fp, fp, r3
 8011a88:	fb12 f20c 	smulbb	r2, r2, ip
 8011a8c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011a90:	b2bf      	uxth	r7, r7
 8011a92:	fb06 b60c 	mla	r6, r6, ip, fp
 8011a96:	fb01 2103 	mla	r1, r1, r3, r2
 8011a9a:	b2b6      	uxth	r6, r6
 8011a9c:	b289      	uxth	r1, r1
 8011a9e:	1c7a      	adds	r2, r7, #1
 8011aa0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011aa4:	f106 0b01 	add.w	fp, r6, #1
 8011aa8:	1c4a      	adds	r2, r1, #1
 8011aaa:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8011aae:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011ab2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ab6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011aba:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011abe:	4317      	orrs	r7, r2
 8011ac0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011ac4:	ea47 070b 	orr.w	r7, r7, fp
 8011ac8:	3401      	adds	r4, #1
 8011aca:	f820 7b02 	strh.w	r7, [r0], #2
 8011ace:	e7be      	b.n	8011a4e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8011ad0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8011ad2:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8011ad6:	8812      	ldrh	r2, [r2, #0]
 8011ad8:	1b49      	subs	r1, r1, r5
 8011ada:	1b52      	subs	r2, r2, r5
 8011adc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8011ae0:	440c      	add	r4, r1
 8011ae2:	e7b0      	b.n	8011a46 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 8011ae4:	491e      	ldr	r1, [pc, #120]	; (8011b60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8011ae6:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8011aea:	2203      	movs	r2, #3
 8011aec:	2704      	movs	r7, #4
 8011aee:	4548      	cmp	r0, r9
 8011af0:	d227      	bcs.n	8011b42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8011af2:	eb00 0c0e 	add.w	ip, r0, lr
 8011af6:	4560      	cmp	r0, ip
 8011af8:	4623      	mov	r3, r4
 8011afa:	d219      	bcs.n	8011b30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8011afc:	f893 a000 	ldrb.w	sl, [r3]
 8011b00:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 8011b04:	eb08 0b0a 	add.w	fp, r8, sl
 8011b08:	f818 a00a 	ldrb.w	sl, [r8, sl]
 8011b0c:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8011b10:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011b14:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8011b18:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8011b1c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011b20:	ea43 030b 	orr.w	r3, r3, fp
 8011b24:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 8011b28:	3401      	adds	r4, #1
 8011b2a:	f820 3b02 	strh.w	r3, [r0], #2
 8011b2e:	e7e2      	b.n	8011af6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 8011b30:	8833      	ldrh	r3, [r6, #0]
 8011b32:	1b5b      	subs	r3, r3, r5
 8011b34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011b38:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8011b3c:	1b5b      	subs	r3, r3, r5
 8011b3e:	441c      	add	r4, r3
 8011b40:	e7d5      	b.n	8011aee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 8011b42:	4b08      	ldr	r3, [pc, #32]	; (8011b64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8011b44:	6818      	ldr	r0, [r3, #0]
 8011b46:	6803      	ldr	r3, [r0, #0]
 8011b48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b4a:	4798      	blx	r3
 8011b4c:	e75c      	b.n	8011a08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8011b4e:	bf00      	nop
 8011b50:	0801d62f 	.word	0x0801d62f
 8011b54:	0801dd2d 	.word	0x0801dd2d
 8011b58:	0801d97c 	.word	0x0801d97c
 8011b5c:	2000a396 	.word	0x2000a396
 8011b60:	fffff800 	.word	0xfffff800
 8011b64:	2000a39c 	.word	0x2000a39c

08011b68 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8011b68:	b430      	push	{r4, r5}
 8011b6a:	780d      	ldrb	r5, [r1, #0]
 8011b6c:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8011b70:	2d01      	cmp	r5, #1
 8011b72:	d00a      	beq.n	8011b8a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8011b74:	d305      	bcc.n	8011b82 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8011b76:	2d02      	cmp	r5, #2
 8011b78:	d10b      	bne.n	8011b92 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8011b7a:	9402      	str	r4, [sp, #8]
 8011b7c:	bc30      	pop	{r4, r5}
 8011b7e:	f7ff bddf 	b.w	8011740 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8011b82:	9402      	str	r4, [sp, #8]
 8011b84:	bc30      	pop	{r4, r5}
 8011b86:	f7ff bce7 	b.w	8011558 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8011b8a:	9402      	str	r4, [sp, #8]
 8011b8c:	bc30      	pop	{r4, r5}
 8011b8e:	f7ff bedb 	b.w	8011948 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8011b92:	bc30      	pop	{r4, r5}
 8011b94:	4770      	bx	lr
	...

08011b98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8011b98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b9c:	4604      	mov	r4, r0
 8011b9e:	b087      	sub	sp, #28
 8011ba0:	6810      	ldr	r0, [r2, #0]
 8011ba2:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8011ba6:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8011de0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8011baa:	460e      	mov	r6, r1
 8011bac:	6851      	ldr	r1, [r2, #4]
 8011bae:	ad02      	add	r5, sp, #8
 8011bb0:	c503      	stmia	r5!, {r0, r1}
 8011bb2:	6818      	ldr	r0, [r3, #0]
 8011bb4:	6859      	ldr	r1, [r3, #4]
 8011bb6:	ad04      	add	r5, sp, #16
 8011bb8:	4617      	mov	r7, r2
 8011bba:	c503      	stmia	r5!, {r0, r1}
 8011bbc:	a802      	add	r0, sp, #8
 8011bbe:	f7f9 fcc3 	bl	800b548 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011bc2:	4639      	mov	r1, r7
 8011bc4:	a804      	add	r0, sp, #16
 8011bc6:	f7f9 fca7 	bl	800b518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011bca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011bce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011bd2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8011bd6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8011bda:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8011bde:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011be2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8011be6:	440e      	add	r6, r1
 8011be8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011bec:	440a      	add	r2, r1
 8011bee:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011bf2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011bf6:	4413      	add	r3, r2
 8011bf8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011bfc:	4b77      	ldr	r3, [pc, #476]	; (8011ddc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8011bfe:	6818      	ldr	r0, [r3, #0]
 8011c00:	6803      	ldr	r3, [r0, #0]
 8011c02:	6a1b      	ldr	r3, [r3, #32]
 8011c04:	4798      	blx	r3
 8011c06:	f8b9 b000 	ldrh.w	fp, [r9]
 8011c0a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011c0e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011c12:	fb0b 2303 	mla	r3, fp, r3, r2
 8011c16:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011c1a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011c1e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8011c22:	fb05 f50b 	mul.w	r5, r5, fp
 8011c26:	9300      	str	r3, [sp, #0]
 8011c28:	d068      	beq.n	8011cfc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 8011c2a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8011c2e:	4558      	cmp	r0, fp
 8011c30:	f080 80cc 	bcs.w	8011dcc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8011c34:	9b00      	ldr	r3, [sp, #0]
 8011c36:	18c3      	adds	r3, r0, r3
 8011c38:	9301      	str	r3, [sp, #4]
 8011c3a:	4631      	mov	r1, r6
 8011c3c:	9b01      	ldr	r3, [sp, #4]
 8011c3e:	4298      	cmp	r0, r3
 8011c40:	d24e      	bcs.n	8011ce0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 8011c42:	f811 2b01 	ldrb.w	r2, [r1], #1
 8011c46:	2a00      	cmp	r2, #0
 8011c48:	d047      	beq.n	8011cda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 8011c4a:	fb0a f202 	mul.w	r2, sl, r2
 8011c4e:	1c53      	adds	r3, r2, #1
 8011c50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8011c54:	121b      	asrs	r3, r3, #8
 8011c56:	d040      	beq.n	8011cda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 8011c58:	8802      	ldrh	r2, [r0, #0]
 8011c5a:	f8b4 c000 	ldrh.w	ip, [r4]
 8011c5e:	b29e      	uxth	r6, r3
 8011c60:	1215      	asrs	r5, r2, #8
 8011c62:	43db      	mvns	r3, r3
 8011c64:	b2db      	uxtb	r3, r3
 8011c66:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011c6a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8011c6e:	fb15 f503 	smulbb	r5, r5, r3
 8011c72:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8011c76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c7a:	00d2      	lsls	r2, r2, #3
 8011c7c:	fb07 5706 	mla	r7, r7, r6, r5
 8011c80:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011c84:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8011c88:	b2d2      	uxtb	r2, r2
 8011c8a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011c8e:	fb1e fe03 	smulbb	lr, lr, r3
 8011c92:	fb12 f203 	smulbb	r2, r2, r3
 8011c96:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011c9a:	fa5f fc8c 	uxtb.w	ip, ip
 8011c9e:	fb05 e506 	mla	r5, r5, r6, lr
 8011ca2:	fb0c 2c06 	mla	ip, ip, r6, r2
 8011ca6:	b2bf      	uxth	r7, r7
 8011ca8:	b2ad      	uxth	r5, r5
 8011caa:	fa1f fc8c 	uxth.w	ip, ip
 8011cae:	1c7b      	adds	r3, r7, #1
 8011cb0:	f10c 0601 	add.w	r6, ip, #1
 8011cb4:	f105 0e01 	add.w	lr, r5, #1
 8011cb8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8011cbc:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8011cc0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8011cc4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011cc8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8011ccc:	096d      	lsrs	r5, r5, #5
 8011cce:	ea47 070c 	orr.w	r7, r7, ip
 8011cd2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011cd6:	432f      	orrs	r7, r5
 8011cd8:	8007      	strh	r7, [r0, #0]
 8011cda:	3002      	adds	r0, #2
 8011cdc:	3402      	adds	r4, #2
 8011cde:	e7ad      	b.n	8011c3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8011ce0:	f8b9 3000 	ldrh.w	r3, [r9]
 8011ce4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8011ce8:	eba3 0308 	sub.w	r3, r3, r8
 8011cec:	eba6 0608 	sub.w	r6, r6, r8
 8011cf0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011cf4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011cf8:	440e      	add	r6, r1
 8011cfa:	e798      	b.n	8011c2e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8011cfc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011d00:	42a8      	cmp	r0, r5
 8011d02:	d263      	bcs.n	8011dcc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8011d04:	9b00      	ldr	r3, [sp, #0]
 8011d06:	4631      	mov	r1, r6
 8011d08:	eb00 0b03 	add.w	fp, r0, r3
 8011d0c:	4558      	cmp	r0, fp
 8011d0e:	d24f      	bcs.n	8011db0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8011d10:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011d14:	b12b      	cbz	r3, 8011d22 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8011d16:	2bff      	cmp	r3, #255	; 0xff
 8011d18:	f8b4 e000 	ldrh.w	lr, [r4]
 8011d1c:	d104      	bne.n	8011d28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 8011d1e:	f8a0 e000 	strh.w	lr, [r0]
 8011d22:	3002      	adds	r0, #2
 8011d24:	3402      	adds	r4, #2
 8011d26:	e7f1      	b.n	8011d0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 8011d28:	8802      	ldrh	r2, [r0, #0]
 8011d2a:	b29f      	uxth	r7, r3
 8011d2c:	1216      	asrs	r6, r2, #8
 8011d2e:	43db      	mvns	r3, r3
 8011d30:	b2db      	uxtb	r3, r3
 8011d32:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011d36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011d3a:	fb16 f603 	smulbb	r6, r6, r3
 8011d3e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8011d42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011d46:	00d2      	lsls	r2, r2, #3
 8011d48:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011d4c:	b2d2      	uxtb	r2, r2
 8011d4e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011d52:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011d56:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011d5a:	fb1a fa03 	smulbb	sl, sl, r3
 8011d5e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011d62:	fb12 f303 	smulbb	r3, r2, r3
 8011d66:	fa5f fe8e 	uxtb.w	lr, lr
 8011d6a:	fb06 a607 	mla	r6, r6, r7, sl
 8011d6e:	fb0e 3e07 	mla	lr, lr, r7, r3
 8011d72:	fa1f fc8c 	uxth.w	ip, ip
 8011d76:	b2b6      	uxth	r6, r6
 8011d78:	fa1f fe8e 	uxth.w	lr, lr
 8011d7c:	f10c 0201 	add.w	r2, ip, #1
 8011d80:	f10e 0301 	add.w	r3, lr, #1
 8011d84:	f106 0a01 	add.w	sl, r6, #1
 8011d88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011d8c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8011d90:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8011d94:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011d98:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011d9c:	0976      	lsrs	r6, r6, #5
 8011d9e:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011da2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011da6:	ea4c 0c06 	orr.w	ip, ip, r6
 8011daa:	f8a0 c000 	strh.w	ip, [r0]
 8011dae:	e7b8      	b.n	8011d22 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8011db0:	f8b9 3000 	ldrh.w	r3, [r9]
 8011db4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8011db8:	eba3 0308 	sub.w	r3, r3, r8
 8011dbc:	eba6 0608 	sub.w	r6, r6, r8
 8011dc0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011dc4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011dc8:	440e      	add	r6, r1
 8011dca:	e799      	b.n	8011d00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 8011dcc:	4b03      	ldr	r3, [pc, #12]	; (8011ddc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8011dce:	6818      	ldr	r0, [r3, #0]
 8011dd0:	6803      	ldr	r3, [r0, #0]
 8011dd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011dd4:	4798      	blx	r3
 8011dd6:	b007      	add	sp, #28
 8011dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ddc:	2000a39c 	.word	0x2000a39c
 8011de0:	2000a396 	.word	0x2000a396

08011de4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8011de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011de8:	b089      	sub	sp, #36	; 0x24
 8011dea:	4682      	mov	sl, r0
 8011dec:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8011df0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011df2:	460d      	mov	r5, r1
 8011df4:	4691      	mov	r9, r2
 8011df6:	4698      	mov	r8, r3
 8011df8:	b3ae      	cbz	r6, 8011e66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011dfa:	4608      	mov	r0, r1
 8011dfc:	f7fc fa00 	bl	800e200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e00:	4607      	mov	r7, r0
 8011e02:	4628      	mov	r0, r5
 8011e04:	f7fc fa36 	bl	800e274 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e08:	f8ad 000e 	strh.w	r0, [sp, #14]
 8011e0c:	4628      	mov	r0, r5
 8011e0e:	f8ad 9008 	strh.w	r9, [sp, #8]
 8011e12:	f8ad 800a 	strh.w	r8, [sp, #10]
 8011e16:	f8ad 700c 	strh.w	r7, [sp, #12]
 8011e1a:	f7fc fb83 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011e1e:	b178      	cbz	r0, 8011e40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011e20:	4628      	mov	r0, r5
 8011e22:	f7fc fb7f 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011e26:	2802      	cmp	r0, #2
 8011e28:	d00a      	beq.n	8011e40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011e2a:	4628      	mov	r0, r5
 8011e2c:	f7fc fb7a 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011e30:	280b      	cmp	r0, #11
 8011e32:	d005      	beq.n	8011e40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011e34:	4b69      	ldr	r3, [pc, #420]	; (8011fdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8011e36:	4a6a      	ldr	r2, [pc, #424]	; (8011fe0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8011e38:	486a      	ldr	r0, [pc, #424]	; (8011fe4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8011e3a:	214b      	movs	r1, #75	; 0x4b
 8011e3c:	f008 f800 	bl	8019e40 <__assert_func>
 8011e40:	4628      	mov	r0, r5
 8011e42:	f7fc fae5 	bl	800e410 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011e46:	4607      	mov	r7, r0
 8011e48:	4628      	mov	r0, r5
 8011e4a:	f7fc fb13 	bl	800e474 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8011e4e:	4681      	mov	r9, r0
 8011e50:	4628      	mov	r0, r5
 8011e52:	f7fc fb67 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011e56:	2802      	cmp	r0, #2
 8011e58:	d108      	bne.n	8011e6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8011e5a:	4633      	mov	r3, r6
 8011e5c:	4622      	mov	r2, r4
 8011e5e:	a902      	add	r1, sp, #8
 8011e60:	4638      	mov	r0, r7
 8011e62:	f7ff fa69 	bl	8011338 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011e66:	b009      	add	sp, #36	; 0x24
 8011e68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e6c:	4628      	mov	r0, r5
 8011e6e:	f7fc fb59 	bl	800e524 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011e72:	280b      	cmp	r0, #11
 8011e74:	d107      	bne.n	8011e86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8011e76:	9600      	str	r6, [sp, #0]
 8011e78:	4623      	mov	r3, r4
 8011e7a:	aa02      	add	r2, sp, #8
 8011e7c:	4649      	mov	r1, r9
 8011e7e:	4638      	mov	r0, r7
 8011e80:	f7ff fe72 	bl	8011b68 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8011e84:	e7ef      	b.n	8011e66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011e86:	4628      	mov	r0, r5
 8011e88:	f7fc fa88 	bl	800e39c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011e8c:	b950      	cbnz	r0, 8011ea4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8011e8e:	e9cd 6000 	strd	r6, r0, [sp]
 8011e92:	f8da 3000 	ldr.w	r3, [sl]
 8011e96:	aa02      	add	r2, sp, #8
 8011e98:	68dd      	ldr	r5, [r3, #12]
 8011e9a:	4639      	mov	r1, r7
 8011e9c:	4623      	mov	r3, r4
 8011e9e:	4650      	mov	r0, sl
 8011ea0:	47a8      	blx	r5
 8011ea2:	e7e0      	b.n	8011e66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011ea4:	f10d 0818 	add.w	r8, sp, #24
 8011ea8:	4629      	mov	r1, r5
 8011eaa:	4640      	mov	r0, r8
 8011eac:	f7fc fa1c 	bl	800e2e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011eb0:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011eb4:	ad04      	add	r5, sp, #16
 8011eb6:	e885 0003 	stmia.w	r5, {r0, r1}
 8011eba:	4628      	mov	r0, r5
 8011ebc:	4621      	mov	r1, r4
 8011ebe:	f7f7 f9a3 	bl	8009208 <_ZN8touchgfx4RectaNERKS0_>
 8011ec2:	4628      	mov	r0, r5
 8011ec4:	f7f7 f9e3 	bl	800928e <_ZNK8touchgfx4Rect7isEmptyEv>
 8011ec8:	b138      	cbz	r0, 8011eda <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8011eca:	9600      	str	r6, [sp, #0]
 8011ecc:	4623      	mov	r3, r4
 8011ece:	aa02      	add	r2, sp, #8
 8011ed0:	4649      	mov	r1, r9
 8011ed2:	4638      	mov	r0, r7
 8011ed4:	f7ff fe60 	bl	8011b98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011ed8:	e7c5      	b.n	8011e66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011eda:	e9cd 6000 	strd	r6, r0, [sp]
 8011ede:	f8da 3000 	ldr.w	r3, [sl]
 8011ee2:	aa02      	add	r2, sp, #8
 8011ee4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8011ee8:	4639      	mov	r1, r7
 8011eea:	462b      	mov	r3, r5
 8011eec:	4650      	mov	r0, sl
 8011eee:	47d8      	blx	fp
 8011ef0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011ef4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011ef8:	4293      	cmp	r3, r2
 8011efa:	dd13      	ble.n	8011f24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8011efc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011f00:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011f04:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011f08:	1a9b      	subs	r3, r3, r2
 8011f0a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8011f0e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011f12:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011f16:	9600      	str	r6, [sp, #0]
 8011f18:	4643      	mov	r3, r8
 8011f1a:	aa02      	add	r2, sp, #8
 8011f1c:	4649      	mov	r1, r9
 8011f1e:	4638      	mov	r0, r7
 8011f20:	f7ff fe3a 	bl	8011b98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011f24:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8011f28:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011f2c:	4293      	cmp	r3, r2
 8011f2e:	dd13      	ble.n	8011f58 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8011f30:	1a9b      	subs	r3, r3, r2
 8011f32:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8011f36:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8011f3a:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011f3e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011f42:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011f46:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011f4a:	9600      	str	r6, [sp, #0]
 8011f4c:	4643      	mov	r3, r8
 8011f4e:	aa02      	add	r2, sp, #8
 8011f50:	4649      	mov	r1, r9
 8011f52:	4638      	mov	r0, r7
 8011f54:	f7ff fe20 	bl	8011b98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011f58:	88a2      	ldrh	r2, [r4, #4]
 8011f5a:	8823      	ldrh	r3, [r4, #0]
 8011f5c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8011f60:	4413      	add	r3, r2
 8011f62:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011f66:	440a      	add	r2, r1
 8011f68:	b29b      	uxth	r3, r3
 8011f6a:	b292      	uxth	r2, r2
 8011f6c:	b211      	sxth	r1, r2
 8011f6e:	b218      	sxth	r0, r3
 8011f70:	4288      	cmp	r0, r1
 8011f72:	dd13      	ble.n	8011f9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8011f74:	1a9b      	subs	r3, r3, r2
 8011f76:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8011f7a:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8011f7e:	f8ad 1018 	strh.w	r1, [sp, #24]
 8011f82:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011f86:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011f8a:	9600      	str	r6, [sp, #0]
 8011f8c:	4643      	mov	r3, r8
 8011f8e:	aa02      	add	r2, sp, #8
 8011f90:	4649      	mov	r1, r9
 8011f92:	4638      	mov	r0, r7
 8011f94:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011f98:	f7ff fdfe 	bl	8011b98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011f9c:	88e2      	ldrh	r2, [r4, #6]
 8011f9e:	8863      	ldrh	r3, [r4, #2]
 8011fa0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8011fa4:	4413      	add	r3, r2
 8011fa6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011faa:	440a      	add	r2, r1
 8011fac:	b29b      	uxth	r3, r3
 8011fae:	b292      	uxth	r2, r2
 8011fb0:	b211      	sxth	r1, r2
 8011fb2:	b218      	sxth	r0, r3
 8011fb4:	4288      	cmp	r0, r1
 8011fb6:	f77f af56 	ble.w	8011e66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011fba:	f9b4 5000 	ldrsh.w	r5, [r4]
 8011fbe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011fc2:	f8ad 5018 	strh.w	r5, [sp, #24]
 8011fc6:	1a9b      	subs	r3, r3, r2
 8011fc8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011fcc:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011fd0:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011fd4:	9600      	str	r6, [sp, #0]
 8011fd6:	4643      	mov	r3, r8
 8011fd8:	e779      	b.n	8011ece <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8011fda:	bf00      	nop
 8011fdc:	0801d67d 	.word	0x0801d67d
 8011fe0:	0801ddb6 	.word	0x0801ddb6
 8011fe4:	0801d97c 	.word	0x0801d97c

08011fe8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8011fe8:	b508      	push	{r3, lr}
 8011fea:	b180      	cbz	r0, 801200e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8011fec:	2902      	cmp	r1, #2
 8011fee:	d014      	beq.n	801201a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8011ff0:	2903      	cmp	r1, #3
 8011ff2:	d01d      	beq.n	8012030 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011ff4:	2901      	cmp	r1, #1
 8011ff6:	d101      	bne.n	8011ffc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8011ff8:	2001      	movs	r0, #1
 8011ffa:	bd08      	pop	{r3, pc}
 8011ffc:	4b0e      	ldr	r3, [pc, #56]	; (8012038 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011ffe:	8818      	ldrh	r0, [r3, #0]
 8012000:	b990      	cbnz	r0, 8012028 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8012002:	4b0e      	ldr	r3, [pc, #56]	; (801203c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8012004:	4a0e      	ldr	r2, [pc, #56]	; (8012040 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8012006:	480f      	ldr	r0, [pc, #60]	; (8012044 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8012008:	2154      	movs	r1, #84	; 0x54
 801200a:	f007 ff19 	bl	8019e40 <__assert_func>
 801200e:	2902      	cmp	r1, #2
 8012010:	d00e      	beq.n	8012030 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012012:	2903      	cmp	r1, #3
 8012014:	d0f2      	beq.n	8011ffc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012016:	2901      	cmp	r1, #1
 8012018:	d1ee      	bne.n	8011ff8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 801201a:	4b07      	ldr	r3, [pc, #28]	; (8012038 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801201c:	8818      	ldrh	r0, [r3, #0]
 801201e:	2800      	cmp	r0, #0
 8012020:	d0ef      	beq.n	8012002 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8012022:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012026:	e7e8      	b.n	8011ffa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012028:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801202c:	4240      	negs	r0, r0
 801202e:	e7e4      	b.n	8011ffa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012030:	f04f 30ff 	mov.w	r0, #4294967295
 8012034:	e7e1      	b.n	8011ffa <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012036:	bf00      	nop
 8012038:	2000a396 	.word	0x2000a396
 801203c:	0801d9ae 	.word	0x0801d9ae
 8012040:	0801df33 	.word	0x0801df33
 8012044:	0801d9f0 	.word	0x0801d9f0

08012048 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012048:	b508      	push	{r3, lr}
 801204a:	b180      	cbz	r0, 801206e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 801204c:	2902      	cmp	r1, #2
 801204e:	d014      	beq.n	801207a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012050:	2903      	cmp	r1, #3
 8012052:	d018      	beq.n	8012086 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012054:	2901      	cmp	r1, #1
 8012056:	d001      	beq.n	801205c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012058:	2001      	movs	r0, #1
 801205a:	e013      	b.n	8012084 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801205c:	4b0e      	ldr	r3, [pc, #56]	; (8012098 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801205e:	8818      	ldrh	r0, [r3, #0]
 8012060:	b970      	cbnz	r0, 8012080 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012062:	4b0e      	ldr	r3, [pc, #56]	; (801209c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012064:	4a0e      	ldr	r2, [pc, #56]	; (80120a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012066:	480f      	ldr	r0, [pc, #60]	; (80120a4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012068:	2154      	movs	r1, #84	; 0x54
 801206a:	f007 fee9 	bl	8019e40 <__assert_func>
 801206e:	2902      	cmp	r1, #2
 8012070:	d009      	beq.n	8012086 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012072:	2903      	cmp	r1, #3
 8012074:	d0f0      	beq.n	8012058 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012076:	2901      	cmp	r1, #1
 8012078:	d1f0      	bne.n	801205c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 801207a:	f04f 30ff 	mov.w	r0, #4294967295
 801207e:	e001      	b.n	8012084 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012080:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012084:	bd08      	pop	{r3, pc}
 8012086:	4b04      	ldr	r3, [pc, #16]	; (8012098 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012088:	8818      	ldrh	r0, [r3, #0]
 801208a:	2800      	cmp	r0, #0
 801208c:	d0e9      	beq.n	8012062 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 801208e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012092:	4240      	negs	r0, r0
 8012094:	e7f6      	b.n	8012084 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012096:	bf00      	nop
 8012098:	2000a396 	.word	0x2000a396
 801209c:	0801d9ae 	.word	0x0801d9ae
 80120a0:	0801df33 	.word	0x0801df33
 80120a4:	0801d9f0 	.word	0x0801d9f0

080120a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80120a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120ac:	b099      	sub	sp, #100	; 0x64
 80120ae:	910b      	str	r1, [sp, #44]	; 0x2c
 80120b0:	a914      	add	r1, sp, #80	; 0x50
 80120b2:	e881 000c 	stmia.w	r1, {r2, r3}
 80120b6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80120ba:	9308      	str	r3, [sp, #32]
 80120bc:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 80120c0:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 80120c4:	f893 b00d 	ldrb.w	fp, [r3, #13]
 80120c8:	910c      	str	r1, [sp, #48]	; 0x30
 80120ca:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 80120ce:	910d      	str	r1, [sp, #52]	; 0x34
 80120d0:	7998      	ldrb	r0, [r3, #6]
 80120d2:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 80120d6:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 80120da:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 80120de:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80120e2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80120e6:	ea4f 114b 	mov.w	r1, fp, lsl #5
 80120ea:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80120ee:	4301      	orrs	r1, r0
 80120f0:	9109      	str	r1, [sp, #36]	; 0x24
 80120f2:	f000 81e2 	beq.w	80124ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 80120f6:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 80120fa:	79d9      	ldrb	r1, [r3, #7]
 80120fc:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8012100:	ea51 0b0b 	orrs.w	fp, r1, fp
 8012104:	f000 81d9 	beq.w	80124ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8012108:	f993 3009 	ldrsb.w	r3, [r3, #9]
 801210c:	b29b      	uxth	r3, r3
 801210e:	2e00      	cmp	r6, #0
 8012110:	f000 80fc 	beq.w	801230c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x264>
 8012114:	1af6      	subs	r6, r6, r3
 8012116:	b2b6      	uxth	r6, r6
 8012118:	0433      	lsls	r3, r6, #16
 801211a:	d502      	bpl.n	8012122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801211c:	1bad      	subs	r5, r5, r6
 801211e:	b22d      	sxth	r5, r5
 8012120:	2600      	movs	r6, #0
 8012122:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012126:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801212a:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 801212e:	428d      	cmp	r5, r1
 8012130:	b28b      	uxth	r3, r1
 8012132:	bfbf      	itttt	lt
 8012134:	18f6      	addlt	r6, r6, r3
 8012136:	1b75      	sublt	r5, r6, r5
 8012138:	b2ae      	uxthlt	r6, r5
 801213a:	460d      	movlt	r5, r1
 801213c:	8891      	ldrh	r1, [r2, #4]
 801213e:	440b      	add	r3, r1
 8012140:	b21b      	sxth	r3, r3
 8012142:	9311      	str	r3, [sp, #68]	; 0x44
 8012144:	8853      	ldrh	r3, [r2, #2]
 8012146:	88d2      	ldrh	r2, [r2, #6]
 8012148:	4413      	add	r3, r2
 801214a:	b21b      	sxth	r3, r3
 801214c:	9310      	str	r3, [sp, #64]	; 0x40
 801214e:	4bb2      	ldr	r3, [pc, #712]	; (8012418 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x370>)
 8012150:	9a08      	ldr	r2, [sp, #32]
 8012152:	f893 9000 	ldrb.w	r9, [r3]
 8012156:	f109 3cff 	add.w	ip, r9, #4294967295
 801215a:	f1dc 0300 	rsbs	r3, ip, #0
 801215e:	eb43 030c 	adc.w	r3, r3, ip
 8012162:	930f      	str	r3, [sp, #60]	; 0x3c
 8012164:	4629      	mov	r1, r5
 8012166:	4653      	mov	r3, sl
 8012168:	a814      	add	r0, sp, #80	; 0x50
 801216a:	f7f9 f829 	bl	800b1c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801216e:	4629      	mov	r1, r5
 8012170:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8012174:	4653      	mov	r3, sl
 8012176:	9a08      	ldr	r2, [sp, #32]
 8012178:	a814      	add	r0, sp, #80	; 0x50
 801217a:	f7f9 f839 	bl	800b1f0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801217e:	a918      	add	r1, sp, #96	; 0x60
 8012180:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8012184:	a817      	add	r0, sp, #92	; 0x5c
 8012186:	f7f9 f995 	bl	800b4b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801218a:	f1ba 0f00 	cmp.w	sl, #0
 801218e:	f040 80c0 	bne.w	8012312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8012192:	f1b9 0f01 	cmp.w	r9, #1
 8012196:	f040 80c4 	bne.w	8012322 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27a>
 801219a:	2301      	movs	r3, #1
 801219c:	fa03 f308 	lsl.w	r3, r3, r8
 80121a0:	3b01      	subs	r3, #1
 80121a2:	b2db      	uxtb	r3, r3
 80121a4:	f1b8 0f01 	cmp.w	r8, #1
 80121a8:	930a      	str	r3, [sp, #40]	; 0x28
 80121aa:	f000 80e5 	beq.w	8012378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d0>
 80121ae:	f1b8 0f02 	cmp.w	r8, #2
 80121b2:	f000 80e4 	beq.w	801237e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d6>
 80121b6:	f1b8 0f04 	cmp.w	r8, #4
 80121ba:	bf15      	itete	ne
 80121bc:	46c1      	movne	r9, r8
 80121be:	f04f 0904 	moveq.w	r9, #4
 80121c2:	2301      	movne	r3, #1
 80121c4:	2311      	moveq	r3, #17
 80121c6:	9307      	str	r3, [sp, #28]
 80121c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80121ca:	b153      	cbz	r3, 80121e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13a>
 80121cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80121ce:	2408      	movs	r4, #8
 80121d0:	fb94 f3f9 	sdiv	r3, r4, r9
 80121d4:	1e5c      	subs	r4, r3, #1
 80121d6:	4414      	add	r4, r2
 80121d8:	fb94 f4f3 	sdiv	r4, r4, r3
 80121dc:	fb14 f403 	smulbb	r4, r4, r3
 80121e0:	b2a4      	uxth	r4, r4
 80121e2:	b906      	cbnz	r6, 80121e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 80121e4:	b16f      	cbz	r7, 8012202 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 80121e6:	fb07 6304 	mla	r3, r7, r4, r6
 80121ea:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80121ec:	fb08 f303 	mul.w	r3, r8, r3
 80121f0:	4639      	mov	r1, r7
 80121f2:	f003 0707 	and.w	r7, r3, #7
 80121f6:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 80121fa:	9328      	str	r3, [sp, #160]	; 0xa0
 80121fc:	ebab 0301 	sub.w	r3, fp, r1
 8012200:	930e      	str	r3, [sp, #56]	; 0x38
 8012202:	4651      	mov	r1, sl
 8012204:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012206:	f7ff feef 	bl	8011fe8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801220a:	4651      	mov	r1, sl
 801220c:	4683      	mov	fp, r0
 801220e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8012210:	f7ff ff1a 	bl	8012048 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8012214:	9a08      	ldr	r2, [sp, #32]
 8012216:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012218:	1a9b      	subs	r3, r3, r2
 801221a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801221c:	429a      	cmp	r2, r3
 801221e:	bfa8      	it	ge
 8012220:	461a      	movge	r2, r3
 8012222:	2a00      	cmp	r2, #0
 8012224:	4682      	mov	sl, r0
 8012226:	9208      	str	r2, [sp, #32]
 8012228:	f340 8147 	ble.w	80124ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801222c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801222e:	1bad      	subs	r5, r5, r6
 8012230:	1b5d      	subs	r5, r3, r5
 8012232:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012234:	429d      	cmp	r5, r3
 8012236:	bfd4      	ite	le
 8012238:	ebc6 0605 	rsble	r6, r6, r5
 801223c:	ebc6 0603 	rsbgt	r6, r6, r3
 8012240:	2e00      	cmp	r6, #0
 8012242:	f340 813a 	ble.w	80124ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 8012246:	1ba4      	subs	r4, r4, r6
 8012248:	fb09 f304 	mul.w	r3, r9, r4
 801224c:	930e      	str	r3, [sp, #56]	; 0x38
 801224e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012250:	2b00      	cmp	r3, #0
 8012252:	f040 809d 	bne.w	8012390 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>
 8012256:	4b71      	ldr	r3, [pc, #452]	; (801241c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 8012258:	6818      	ldr	r0, [r3, #0]
 801225a:	6803      	ldr	r3, [r0, #0]
 801225c:	6a1b      	ldr	r3, [r3, #32]
 801225e:	4798      	blx	r3
 8012260:	496f      	ldr	r1, [pc, #444]	; (8012420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8012262:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8012266:	880c      	ldrh	r4, [r1, #0]
 8012268:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 801226c:	fb04 1303 	mla	r3, r4, r3, r1
 8012270:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012274:	9309      	str	r3, [sp, #36]	; 0x24
 8012276:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012278:	7819      	ldrb	r1, [r3, #0]
 801227a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801227c:	0a1b      	lsrs	r3, r3, #8
 801227e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012282:	930f      	str	r3, [sp, #60]	; 0x3c
 8012284:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012286:	08db      	lsrs	r3, r3, #3
 8012288:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801228c:	9310      	str	r3, [sp, #64]	; 0x40
 801228e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012290:	00db      	lsls	r3, r3, #3
 8012292:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012296:	9311      	str	r3, [sp, #68]	; 0x44
 8012298:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801229c:	fb0b ab16 	mls	fp, fp, r6, sl
 80122a0:	fb03 fa06 	mul.w	sl, r3, r6
 80122a4:	930c      	str	r3, [sp, #48]	; 0x30
 80122a6:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 80122aa:	9312      	str	r3, [sp, #72]	; 0x48
 80122ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80122ae:	4139      	asrs	r1, r7
 80122b0:	b29b      	uxth	r3, r3
 80122b2:	b2c9      	uxtb	r1, r1
 80122b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80122b6:	9b08      	ldr	r3, [sp, #32]
 80122b8:	3b01      	subs	r3, #1
 80122ba:	9308      	str	r3, [sp, #32]
 80122bc:	3301      	adds	r3, #1
 80122be:	f000 80c3 	beq.w	8012448 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80122c2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80122c6:	46b2      	mov	sl, r6
 80122c8:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80122cc:	f0c0 80aa 	bcc.w	8012424 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80122d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80122d2:	400b      	ands	r3, r1
 80122d4:	d00a      	beq.n	80122ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x244>
 80122d6:	9807      	ldr	r0, [sp, #28]
 80122d8:	fb13 f300 	smulbb	r3, r3, r0
 80122dc:	2bfe      	cmp	r3, #254	; 0xfe
 80122de:	dd59      	ble.n	8012394 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 80122e0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80122e2:	28ff      	cmp	r0, #255	; 0xff
 80122e4:	d156      	bne.n	8012394 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>
 80122e6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80122e8:	f8ae 4000 	strh.w	r4, [lr]
 80122ec:	4447      	add	r7, r8
 80122ee:	b2bf      	uxth	r7, r7
 80122f0:	2f07      	cmp	r7, #7
 80122f2:	bf81      	itttt	hi
 80122f4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80122f6:	7859      	ldrbhi	r1, [r3, #1]
 80122f8:	3301      	addhi	r3, #1
 80122fa:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80122fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80122fe:	bf9a      	itte	ls
 8012300:	fa41 f109 	asrls.w	r1, r1, r9
 8012304:	b2c9      	uxtbls	r1, r1
 8012306:	2700      	movhi	r7, #0
 8012308:	449e      	add	lr, r3
 801230a:	e7dd      	b.n	80122c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x220>
 801230c:	441d      	add	r5, r3
 801230e:	b22d      	sxth	r5, r5
 8012310:	e707      	b.n	8012122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8012312:	f1ba 0f01 	cmp.w	sl, #1
 8012316:	f47f af40 	bne.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801231a:	f1b9 0f01 	cmp.w	r9, #1
 801231e:	f47f af3c 	bne.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8012322:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 801241c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>
 8012326:	f8d9 0000 	ldr.w	r0, [r9]
 801232a:	6803      	ldr	r3, [r0, #0]
 801232c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801232e:	4798      	blx	r3
 8012330:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 8012334:	464a      	mov	r2, r9
 8012336:	d006      	beq.n	8012346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8012338:	f1b8 0f04 	cmp.w	r8, #4
 801233c:	d11a      	bne.n	8012374 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
 801233e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012340:	3300      	adds	r3, #0
 8012342:	bf18      	it	ne
 8012344:	2301      	movne	r3, #1
 8012346:	05c0      	lsls	r0, r0, #23
 8012348:	f140 8087 	bpl.w	801245a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 801234c:	f1b8 0f08 	cmp.w	r8, #8
 8012350:	f040 8083 	bne.w	801245a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b2>
 8012354:	2b00      	cmp	r3, #0
 8012356:	bf14      	ite	ne
 8012358:	2180      	movne	r1, #128	; 0x80
 801235a:	f44f 7180 	moveq.w	r1, #256	; 0x100
 801235e:	2e00      	cmp	r6, #0
 8012360:	f040 80ae 	bne.w	80124c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x418>
 8012364:	2f00      	cmp	r7, #0
 8012366:	f000 8082 	beq.w	801246e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 801236a:	23ff      	movs	r3, #255	; 0xff
 801236c:	930a      	str	r3, [sp, #40]	; 0x28
 801236e:	46c1      	mov	r9, r8
 8012370:	2301      	movs	r3, #1
 8012372:	e728      	b.n	80121c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8012374:	2300      	movs	r3, #0
 8012376:	e7e6      	b.n	8012346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29e>
 8012378:	46c1      	mov	r9, r8
 801237a:	23ff      	movs	r3, #255	; 0xff
 801237c:	e723      	b.n	80121c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 801237e:	46c1      	mov	r9, r8
 8012380:	2355      	movs	r3, #85	; 0x55
 8012382:	e720      	b.n	80121c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x11e>
 8012384:	23ff      	movs	r3, #255	; 0xff
 8012386:	930a      	str	r3, [sp, #40]	; 0x28
 8012388:	2301      	movs	r3, #1
 801238a:	46c1      	mov	r9, r8
 801238c:	9307      	str	r3, [sp, #28]
 801238e:	e71d      	b.n	80121cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x124>
 8012390:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8012392:	e765      	b.n	8012260 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1b8>
 8012394:	980d      	ldr	r0, [sp, #52]	; 0x34
 8012396:	f8be 5000 	ldrh.w	r5, [lr]
 801239a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801239c:	fb10 f303 	smulbb	r3, r0, r3
 80123a0:	b29b      	uxth	r3, r3
 80123a2:	1c58      	adds	r0, r3, #1
 80123a4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80123a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80123ac:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80123ae:	fa1f fc83 	uxth.w	ip, r3
 80123b2:	122c      	asrs	r4, r5, #8
 80123b4:	43db      	mvns	r3, r3
 80123b6:	b2db      	uxtb	r3, r3
 80123b8:	fb1c fb02 	smulbb	fp, ip, r2
 80123bc:	fb10 f00c 	smulbb	r0, r0, ip
 80123c0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80123c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80123c6:	fb04 0403 	mla	r4, r4, r3, r0
 80123ca:	10e8      	asrs	r0, r5, #3
 80123cc:	00ed      	lsls	r5, r5, #3
 80123ce:	b2ed      	uxtb	r5, r5
 80123d0:	fb1c fc02 	smulbb	ip, ip, r2
 80123d4:	fb05 cc03 	mla	ip, r5, r3, ip
 80123d8:	b2a4      	uxth	r4, r4
 80123da:	fa1f fc8c 	uxth.w	ip, ip
 80123de:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80123e2:	fb00 b003 	mla	r0, r0, r3, fp
 80123e6:	1c63      	adds	r3, r4, #1
 80123e8:	f10c 0b01 	add.w	fp, ip, #1
 80123ec:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80123f0:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 80123f4:	b280      	uxth	r0, r0
 80123f6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80123fa:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80123fe:	ea44 040b 	orr.w	r4, r4, fp
 8012402:	f100 0b01 	add.w	fp, r0, #1
 8012406:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801240a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801240e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8012412:	ea44 040b 	orr.w	r4, r4, fp
 8012416:	e767      	b.n	80122e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x240>
 8012418:	2000a394 	.word	0x2000a394
 801241c:	2000a39c 	.word	0x2000a39c
 8012420:	2000a396 	.word	0x2000a396
 8012424:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012426:	b153      	cbz	r3, 801243e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8012428:	441f      	add	r7, r3
 801242a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801242c:	b2bf      	uxth	r7, r7
 801242e:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8012432:	f007 0707 	and.w	r7, r7, #7
 8012436:	7819      	ldrb	r1, [r3, #0]
 8012438:	9328      	str	r3, [sp, #160]	; 0xa0
 801243a:	4139      	asrs	r1, r7
 801243c:	b2c9      	uxtb	r1, r1
 801243e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012440:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012442:	441a      	add	r2, r3
 8012444:	9209      	str	r2, [sp, #36]	; 0x24
 8012446:	e736      	b.n	80122b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20e>
 8012448:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801244a:	2b00      	cmp	r3, #0
 801244c:	d135      	bne.n	80124ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801244e:	4b21      	ldr	r3, [pc, #132]	; (80124d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x42c>)
 8012450:	6818      	ldr	r0, [r3, #0]
 8012452:	6803      	ldr	r3, [r0, #0]
 8012454:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012456:	4798      	blx	r3
 8012458:	e02f      	b.n	80124ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x412>
 801245a:	2b00      	cmp	r3, #0
 801245c:	f43f ae9d 	beq.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8012460:	2e00      	cmp	r6, #0
 8012462:	f47f ae9a 	bne.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8012466:	2f00      	cmp	r7, #0
 8012468:	f47f ae97 	bne.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801246c:	2180      	movs	r1, #128	; 0x80
 801246e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012470:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012472:	18eb      	adds	r3, r5, r3
 8012474:	4283      	cmp	r3, r0
 8012476:	f73f ae90 	bgt.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 801247a:	9b08      	ldr	r3, [sp, #32]
 801247c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801247e:	445b      	add	r3, fp
 8012480:	4283      	cmp	r3, r0
 8012482:	f73f ae8a 	bgt.w	801219a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8012486:	6810      	ldr	r0, [r2, #0]
 8012488:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801248c:	6805      	ldr	r5, [r0, #0]
 801248e:	9105      	str	r1, [sp, #20]
 8012490:	f1b8 0f08 	cmp.w	r8, #8
 8012494:	bf18      	it	ne
 8012496:	3401      	addne	r4, #1
 8012498:	990d      	ldr	r1, [sp, #52]	; 0x34
 801249a:	9104      	str	r1, [sp, #16]
 801249c:	bf18      	it	ne
 801249e:	f024 0401 	bicne.w	r4, r4, #1
 80124a2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80124a4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80124a8:	bf18      	it	ne
 80124aa:	b2a4      	uxthne	r4, r4
 80124ac:	e9cd 4102 	strd	r4, r1, [sp, #8]
 80124b0:	e9cd 4b00 	strd	r4, fp, [sp]
 80124b4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80124b6:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 80124b8:	47a0      	blx	r4
 80124ba:	b019      	add	sp, #100	; 0x64
 80124bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80124c2:	2b00      	cmp	r3, #0
 80124c4:	f47f af5e 	bne.w	8012384 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 80124c8:	23ff      	movs	r3, #255	; 0xff
 80124ca:	930a      	str	r3, [sp, #40]	; 0x28
 80124cc:	2301      	movs	r3, #1
 80124ce:	46c1      	mov	r9, r8
 80124d0:	9307      	str	r3, [sp, #28]
 80124d2:	e688      	b.n	80121e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 80124d4:	2000a39c 	.word	0x2000a39c

080124d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80124d8:	b538      	push	{r3, r4, r5, lr}
 80124da:	4c15      	ldr	r4, [pc, #84]	; (8012530 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80124dc:	7823      	ldrb	r3, [r4, #0]
 80124de:	f3bf 8f5b 	dmb	ish
 80124e2:	07da      	lsls	r2, r3, #31
 80124e4:	4605      	mov	r5, r0
 80124e6:	d40b      	bmi.n	8012500 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80124e8:	4620      	mov	r0, r4
 80124ea:	f007 fc7c 	bl	8019de6 <__cxa_guard_acquire>
 80124ee:	b138      	cbz	r0, 8012500 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80124f0:	4620      	mov	r0, r4
 80124f2:	f007 fc84 	bl	8019dfe <__cxa_guard_release>
 80124f6:	4a0f      	ldr	r2, [pc, #60]	; (8012534 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80124f8:	490f      	ldr	r1, [pc, #60]	; (8012538 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80124fa:	4810      	ldr	r0, [pc, #64]	; (801253c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80124fc:	f007 fc6c 	bl	8019dd8 <__aeabi_atexit>
 8012500:	4c0f      	ldr	r4, [pc, #60]	; (8012540 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8012502:	7823      	ldrb	r3, [r4, #0]
 8012504:	f3bf 8f5b 	dmb	ish
 8012508:	07db      	lsls	r3, r3, #31
 801250a:	d40b      	bmi.n	8012524 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801250c:	4620      	mov	r0, r4
 801250e:	f007 fc6a 	bl	8019de6 <__cxa_guard_acquire>
 8012512:	b138      	cbz	r0, 8012524 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8012514:	4620      	mov	r0, r4
 8012516:	f007 fc72 	bl	8019dfe <__cxa_guard_release>
 801251a:	4a06      	ldr	r2, [pc, #24]	; (8012534 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801251c:	4909      	ldr	r1, [pc, #36]	; (8012544 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801251e:	480a      	ldr	r0, [pc, #40]	; (8012548 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8012520:	f007 fc5a 	bl	8019dd8 <__aeabi_atexit>
 8012524:	4b05      	ldr	r3, [pc, #20]	; (801253c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8012526:	612b      	str	r3, [r5, #16]
 8012528:	4b07      	ldr	r3, [pc, #28]	; (8012548 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801252a:	616b      	str	r3, [r5, #20]
 801252c:	bd38      	pop	{r3, r4, r5, pc}
 801252e:	bf00      	nop
 8012530:	2000a468 	.word	0x2000a468
 8012534:	20000000 	.word	0x20000000
 8012538:	08010acd 	.word	0x08010acd
 801253c:	200000a4 	.word	0x200000a4
 8012540:	2000a46c 	.word	0x2000a46c
 8012544:	08010acb 	.word	0x08010acb
 8012548:	200000a8 	.word	0x200000a8

0801254c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801254c:	b538      	push	{r3, r4, r5, lr}
 801254e:	4c15      	ldr	r4, [pc, #84]	; (80125a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8012550:	7823      	ldrb	r3, [r4, #0]
 8012552:	f3bf 8f5b 	dmb	ish
 8012556:	07da      	lsls	r2, r3, #31
 8012558:	4605      	mov	r5, r0
 801255a:	d40b      	bmi.n	8012574 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801255c:	4620      	mov	r0, r4
 801255e:	f007 fc42 	bl	8019de6 <__cxa_guard_acquire>
 8012562:	b138      	cbz	r0, 8012574 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8012564:	4620      	mov	r0, r4
 8012566:	f007 fc4a 	bl	8019dfe <__cxa_guard_release>
 801256a:	4a0f      	ldr	r2, [pc, #60]	; (80125a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801256c:	490f      	ldr	r1, [pc, #60]	; (80125ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801256e:	4810      	ldr	r0, [pc, #64]	; (80125b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012570:	f007 fc32 	bl	8019dd8 <__aeabi_atexit>
 8012574:	4c0f      	ldr	r4, [pc, #60]	; (80125b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8012576:	7823      	ldrb	r3, [r4, #0]
 8012578:	f3bf 8f5b 	dmb	ish
 801257c:	07db      	lsls	r3, r3, #31
 801257e:	d40b      	bmi.n	8012598 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012580:	4620      	mov	r0, r4
 8012582:	f007 fc30 	bl	8019de6 <__cxa_guard_acquire>
 8012586:	b138      	cbz	r0, 8012598 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012588:	4620      	mov	r0, r4
 801258a:	f007 fc38 	bl	8019dfe <__cxa_guard_release>
 801258e:	4a06      	ldr	r2, [pc, #24]	; (80125a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012590:	4909      	ldr	r1, [pc, #36]	; (80125b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8012592:	480a      	ldr	r0, [pc, #40]	; (80125bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012594:	f007 fc20 	bl	8019dd8 <__aeabi_atexit>
 8012598:	4b05      	ldr	r3, [pc, #20]	; (80125b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801259a:	60ab      	str	r3, [r5, #8]
 801259c:	4b07      	ldr	r3, [pc, #28]	; (80125bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801259e:	60eb      	str	r3, [r5, #12]
 80125a0:	bd38      	pop	{r3, r4, r5, pc}
 80125a2:	bf00      	nop
 80125a4:	2000a440 	.word	0x2000a440
 80125a8:	20000000 	.word	0x20000000
 80125ac:	08010ad1 	.word	0x08010ad1
 80125b0:	2000007c 	.word	0x2000007c
 80125b4:	2000a444 	.word	0x2000a444
 80125b8:	08010acf 	.word	0x08010acf
 80125bc:	20000080 	.word	0x20000080

080125c0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80125c0:	b510      	push	{r4, lr}
 80125c2:	4604      	mov	r4, r0
 80125c4:	f7ff ff88 	bl	80124d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80125c8:	4620      	mov	r0, r4
 80125ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125ce:	f7ff bfbd 	b.w	801254c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080125d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80125d4:	b538      	push	{r3, r4, r5, lr}
 80125d6:	4c15      	ldr	r4, [pc, #84]	; (801262c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80125d8:	7823      	ldrb	r3, [r4, #0]
 80125da:	f3bf 8f5b 	dmb	ish
 80125de:	07da      	lsls	r2, r3, #31
 80125e0:	4605      	mov	r5, r0
 80125e2:	d40b      	bmi.n	80125fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80125e4:	4620      	mov	r0, r4
 80125e6:	f007 fbfe 	bl	8019de6 <__cxa_guard_acquire>
 80125ea:	b138      	cbz	r0, 80125fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80125ec:	4620      	mov	r0, r4
 80125ee:	f007 fc06 	bl	8019dfe <__cxa_guard_release>
 80125f2:	4a0f      	ldr	r2, [pc, #60]	; (8012630 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80125f4:	490f      	ldr	r1, [pc, #60]	; (8012634 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80125f6:	4810      	ldr	r0, [pc, #64]	; (8012638 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80125f8:	f007 fbee 	bl	8019dd8 <__aeabi_atexit>
 80125fc:	4c0f      	ldr	r4, [pc, #60]	; (801263c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80125fe:	7823      	ldrb	r3, [r4, #0]
 8012600:	f3bf 8f5b 	dmb	ish
 8012604:	07db      	lsls	r3, r3, #31
 8012606:	d40b      	bmi.n	8012620 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012608:	4620      	mov	r0, r4
 801260a:	f007 fbec 	bl	8019de6 <__cxa_guard_acquire>
 801260e:	b138      	cbz	r0, 8012620 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012610:	4620      	mov	r0, r4
 8012612:	f007 fbf4 	bl	8019dfe <__cxa_guard_release>
 8012616:	4a06      	ldr	r2, [pc, #24]	; (8012630 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8012618:	4909      	ldr	r1, [pc, #36]	; (8012640 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801261a:	480a      	ldr	r0, [pc, #40]	; (8012644 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801261c:	f007 fbdc 	bl	8019dd8 <__aeabi_atexit>
 8012620:	4b05      	ldr	r3, [pc, #20]	; (8012638 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8012622:	622b      	str	r3, [r5, #32]
 8012624:	4b07      	ldr	r3, [pc, #28]	; (8012644 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8012626:	626b      	str	r3, [r5, #36]	; 0x24
 8012628:	bd38      	pop	{r3, r4, r5, pc}
 801262a:	bf00      	nop
 801262c:	2000a470 	.word	0x2000a470
 8012630:	20000000 	.word	0x20000000
 8012634:	08010ac5 	.word	0x08010ac5
 8012638:	200000ac 	.word	0x200000ac
 801263c:	2000a474 	.word	0x2000a474
 8012640:	08010ac3 	.word	0x08010ac3
 8012644:	200000b0 	.word	0x200000b0

08012648 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8012648:	b538      	push	{r3, r4, r5, lr}
 801264a:	4c15      	ldr	r4, [pc, #84]	; (80126a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801264c:	7823      	ldrb	r3, [r4, #0]
 801264e:	f3bf 8f5b 	dmb	ish
 8012652:	07da      	lsls	r2, r3, #31
 8012654:	4605      	mov	r5, r0
 8012656:	d40b      	bmi.n	8012670 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012658:	4620      	mov	r0, r4
 801265a:	f007 fbc4 	bl	8019de6 <__cxa_guard_acquire>
 801265e:	b138      	cbz	r0, 8012670 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8012660:	4620      	mov	r0, r4
 8012662:	f007 fbcc 	bl	8019dfe <__cxa_guard_release>
 8012666:	4a0f      	ldr	r2, [pc, #60]	; (80126a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8012668:	490f      	ldr	r1, [pc, #60]	; (80126a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801266a:	4810      	ldr	r0, [pc, #64]	; (80126ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801266c:	f007 fbb4 	bl	8019dd8 <__aeabi_atexit>
 8012670:	4c0f      	ldr	r4, [pc, #60]	; (80126b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8012672:	7823      	ldrb	r3, [r4, #0]
 8012674:	f3bf 8f5b 	dmb	ish
 8012678:	07db      	lsls	r3, r3, #31
 801267a:	d40b      	bmi.n	8012694 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801267c:	4620      	mov	r0, r4
 801267e:	f007 fbb2 	bl	8019de6 <__cxa_guard_acquire>
 8012682:	b138      	cbz	r0, 8012694 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012684:	4620      	mov	r0, r4
 8012686:	f007 fbba 	bl	8019dfe <__cxa_guard_release>
 801268a:	4a06      	ldr	r2, [pc, #24]	; (80126a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801268c:	4909      	ldr	r1, [pc, #36]	; (80126b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801268e:	480a      	ldr	r0, [pc, #40]	; (80126b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012690:	f007 fba2 	bl	8019dd8 <__aeabi_atexit>
 8012694:	4b05      	ldr	r3, [pc, #20]	; (80126ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012696:	61ab      	str	r3, [r5, #24]
 8012698:	4b07      	ldr	r3, [pc, #28]	; (80126b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801269a:	61eb      	str	r3, [r5, #28]
 801269c:	bd38      	pop	{r3, r4, r5, pc}
 801269e:	bf00      	nop
 80126a0:	2000a448 	.word	0x2000a448
 80126a4:	20000000 	.word	0x20000000
 80126a8:	08010ac9 	.word	0x08010ac9
 80126ac:	20000084 	.word	0x20000084
 80126b0:	2000a44c 	.word	0x2000a44c
 80126b4:	08010ac7 	.word	0x08010ac7
 80126b8:	20000088 	.word	0x20000088

080126bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80126bc:	b510      	push	{r4, lr}
 80126be:	4604      	mov	r4, r0
 80126c0:	f7ff ff88 	bl	80125d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80126c4:	4620      	mov	r0, r4
 80126c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126ca:	f7ff bfbd 	b.w	8012648 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080126d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80126d0:	b538      	push	{r3, r4, r5, lr}
 80126d2:	4c15      	ldr	r4, [pc, #84]	; (8012728 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80126d4:	7823      	ldrb	r3, [r4, #0]
 80126d6:	f3bf 8f5b 	dmb	ish
 80126da:	07da      	lsls	r2, r3, #31
 80126dc:	4605      	mov	r5, r0
 80126de:	d40b      	bmi.n	80126f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80126e0:	4620      	mov	r0, r4
 80126e2:	f007 fb80 	bl	8019de6 <__cxa_guard_acquire>
 80126e6:	b138      	cbz	r0, 80126f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80126e8:	4620      	mov	r0, r4
 80126ea:	f007 fb88 	bl	8019dfe <__cxa_guard_release>
 80126ee:	4a0f      	ldr	r2, [pc, #60]	; (801272c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80126f0:	490f      	ldr	r1, [pc, #60]	; (8012730 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80126f2:	4810      	ldr	r0, [pc, #64]	; (8012734 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80126f4:	f007 fb70 	bl	8019dd8 <__aeabi_atexit>
 80126f8:	4c0f      	ldr	r4, [pc, #60]	; (8012738 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80126fa:	7823      	ldrb	r3, [r4, #0]
 80126fc:	f3bf 8f5b 	dmb	ish
 8012700:	07db      	lsls	r3, r3, #31
 8012702:	d40b      	bmi.n	801271c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8012704:	4620      	mov	r0, r4
 8012706:	f007 fb6e 	bl	8019de6 <__cxa_guard_acquire>
 801270a:	b138      	cbz	r0, 801271c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801270c:	4620      	mov	r0, r4
 801270e:	f007 fb76 	bl	8019dfe <__cxa_guard_release>
 8012712:	4a06      	ldr	r2, [pc, #24]	; (801272c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8012714:	4909      	ldr	r1, [pc, #36]	; (801273c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8012716:	480a      	ldr	r0, [pc, #40]	; (8012740 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8012718:	f007 fb5e 	bl	8019dd8 <__aeabi_atexit>
 801271c:	4b05      	ldr	r3, [pc, #20]	; (8012734 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801271e:	632b      	str	r3, [r5, #48]	; 0x30
 8012720:	4b07      	ldr	r3, [pc, #28]	; (8012740 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8012722:	636b      	str	r3, [r5, #52]	; 0x34
 8012724:	bd38      	pop	{r3, r4, r5, pc}
 8012726:	bf00      	nop
 8012728:	2000a480 	.word	0x2000a480
 801272c:	20000000 	.word	0x20000000
 8012730:	08010abd 	.word	0x08010abd
 8012734:	200000bc 	.word	0x200000bc
 8012738:	2000a484 	.word	0x2000a484
 801273c:	08010abb 	.word	0x08010abb
 8012740:	200000c0 	.word	0x200000c0

08012744 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8012744:	b538      	push	{r3, r4, r5, lr}
 8012746:	4c15      	ldr	r4, [pc, #84]	; (801279c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8012748:	7823      	ldrb	r3, [r4, #0]
 801274a:	f3bf 8f5b 	dmb	ish
 801274e:	07da      	lsls	r2, r3, #31
 8012750:	4605      	mov	r5, r0
 8012752:	d40b      	bmi.n	801276c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8012754:	4620      	mov	r0, r4
 8012756:	f007 fb46 	bl	8019de6 <__cxa_guard_acquire>
 801275a:	b138      	cbz	r0, 801276c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801275c:	4620      	mov	r0, r4
 801275e:	f007 fb4e 	bl	8019dfe <__cxa_guard_release>
 8012762:	4a0f      	ldr	r2, [pc, #60]	; (80127a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012764:	490f      	ldr	r1, [pc, #60]	; (80127a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8012766:	4810      	ldr	r0, [pc, #64]	; (80127a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012768:	f007 fb36 	bl	8019dd8 <__aeabi_atexit>
 801276c:	4c0f      	ldr	r4, [pc, #60]	; (80127ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801276e:	7823      	ldrb	r3, [r4, #0]
 8012770:	f3bf 8f5b 	dmb	ish
 8012774:	07db      	lsls	r3, r3, #31
 8012776:	d40b      	bmi.n	8012790 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012778:	4620      	mov	r0, r4
 801277a:	f007 fb34 	bl	8019de6 <__cxa_guard_acquire>
 801277e:	b138      	cbz	r0, 8012790 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012780:	4620      	mov	r0, r4
 8012782:	f007 fb3c 	bl	8019dfe <__cxa_guard_release>
 8012786:	4a06      	ldr	r2, [pc, #24]	; (80127a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012788:	4909      	ldr	r1, [pc, #36]	; (80127b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801278a:	480a      	ldr	r0, [pc, #40]	; (80127b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801278c:	f007 fb24 	bl	8019dd8 <__aeabi_atexit>
 8012790:	4b05      	ldr	r3, [pc, #20]	; (80127a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012792:	62ab      	str	r3, [r5, #40]	; 0x28
 8012794:	4b07      	ldr	r3, [pc, #28]	; (80127b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012796:	62eb      	str	r3, [r5, #44]	; 0x2c
 8012798:	bd38      	pop	{r3, r4, r5, pc}
 801279a:	bf00      	nop
 801279c:	2000a450 	.word	0x2000a450
 80127a0:	20000000 	.word	0x20000000
 80127a4:	08010ac1 	.word	0x08010ac1
 80127a8:	2000008c 	.word	0x2000008c
 80127ac:	2000a454 	.word	0x2000a454
 80127b0:	08010abf 	.word	0x08010abf
 80127b4:	20000090 	.word	0x20000090

080127b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80127b8:	b510      	push	{r4, lr}
 80127ba:	4604      	mov	r4, r0
 80127bc:	f7ff ff88 	bl	80126d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80127c0:	4620      	mov	r0, r4
 80127c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80127c6:	f7ff bfbd 	b.w	8012744 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080127cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80127cc:	b538      	push	{r3, r4, r5, lr}
 80127ce:	4c15      	ldr	r4, [pc, #84]	; (8012824 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80127d0:	7823      	ldrb	r3, [r4, #0]
 80127d2:	f3bf 8f5b 	dmb	ish
 80127d6:	07da      	lsls	r2, r3, #31
 80127d8:	4605      	mov	r5, r0
 80127da:	d40b      	bmi.n	80127f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80127dc:	4620      	mov	r0, r4
 80127de:	f007 fb02 	bl	8019de6 <__cxa_guard_acquire>
 80127e2:	b138      	cbz	r0, 80127f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80127e4:	4620      	mov	r0, r4
 80127e6:	f007 fb0a 	bl	8019dfe <__cxa_guard_release>
 80127ea:	4a0f      	ldr	r2, [pc, #60]	; (8012828 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80127ec:	490f      	ldr	r1, [pc, #60]	; (801282c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80127ee:	4810      	ldr	r0, [pc, #64]	; (8012830 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80127f0:	f007 faf2 	bl	8019dd8 <__aeabi_atexit>
 80127f4:	4c0f      	ldr	r4, [pc, #60]	; (8012834 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80127f6:	7823      	ldrb	r3, [r4, #0]
 80127f8:	f3bf 8f5b 	dmb	ish
 80127fc:	07db      	lsls	r3, r3, #31
 80127fe:	d40b      	bmi.n	8012818 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012800:	4620      	mov	r0, r4
 8012802:	f007 faf0 	bl	8019de6 <__cxa_guard_acquire>
 8012806:	b138      	cbz	r0, 8012818 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012808:	4620      	mov	r0, r4
 801280a:	f007 faf8 	bl	8019dfe <__cxa_guard_release>
 801280e:	4a06      	ldr	r2, [pc, #24]	; (8012828 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8012810:	4909      	ldr	r1, [pc, #36]	; (8012838 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8012812:	480a      	ldr	r0, [pc, #40]	; (801283c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8012814:	f007 fae0 	bl	8019dd8 <__aeabi_atexit>
 8012818:	4b05      	ldr	r3, [pc, #20]	; (8012830 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801281a:	652b      	str	r3, [r5, #80]	; 0x50
 801281c:	4b07      	ldr	r3, [pc, #28]	; (801283c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801281e:	656b      	str	r3, [r5, #84]	; 0x54
 8012820:	bd38      	pop	{r3, r4, r5, pc}
 8012822:	bf00      	nop
 8012824:	2000a488 	.word	0x2000a488
 8012828:	20000000 	.word	0x20000000
 801282c:	08010aad 	.word	0x08010aad
 8012830:	200000c4 	.word	0x200000c4
 8012834:	2000a48c 	.word	0x2000a48c
 8012838:	08010aab 	.word	0x08010aab
 801283c:	200000c8 	.word	0x200000c8

08012840 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8012840:	b538      	push	{r3, r4, r5, lr}
 8012842:	4c15      	ldr	r4, [pc, #84]	; (8012898 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8012844:	7823      	ldrb	r3, [r4, #0]
 8012846:	f3bf 8f5b 	dmb	ish
 801284a:	07da      	lsls	r2, r3, #31
 801284c:	4605      	mov	r5, r0
 801284e:	d40b      	bmi.n	8012868 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012850:	4620      	mov	r0, r4
 8012852:	f007 fac8 	bl	8019de6 <__cxa_guard_acquire>
 8012856:	b138      	cbz	r0, 8012868 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8012858:	4620      	mov	r0, r4
 801285a:	f007 fad0 	bl	8019dfe <__cxa_guard_release>
 801285e:	4a0f      	ldr	r2, [pc, #60]	; (801289c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012860:	490f      	ldr	r1, [pc, #60]	; (80128a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8012862:	4810      	ldr	r0, [pc, #64]	; (80128a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8012864:	f007 fab8 	bl	8019dd8 <__aeabi_atexit>
 8012868:	4c0f      	ldr	r4, [pc, #60]	; (80128a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801286a:	7823      	ldrb	r3, [r4, #0]
 801286c:	f3bf 8f5b 	dmb	ish
 8012870:	07db      	lsls	r3, r3, #31
 8012872:	d40b      	bmi.n	801288c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012874:	4620      	mov	r0, r4
 8012876:	f007 fab6 	bl	8019de6 <__cxa_guard_acquire>
 801287a:	b138      	cbz	r0, 801288c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801287c:	4620      	mov	r0, r4
 801287e:	f007 fabe 	bl	8019dfe <__cxa_guard_release>
 8012882:	4a06      	ldr	r2, [pc, #24]	; (801289c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012884:	4909      	ldr	r1, [pc, #36]	; (80128ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8012886:	480a      	ldr	r0, [pc, #40]	; (80128b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012888:	f007 faa6 	bl	8019dd8 <__aeabi_atexit>
 801288c:	4b05      	ldr	r3, [pc, #20]	; (80128a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801288e:	64ab      	str	r3, [r5, #72]	; 0x48
 8012890:	4b07      	ldr	r3, [pc, #28]	; (80128b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012892:	64eb      	str	r3, [r5, #76]	; 0x4c
 8012894:	bd38      	pop	{r3, r4, r5, pc}
 8012896:	bf00      	nop
 8012898:	2000a490 	.word	0x2000a490
 801289c:	20000000 	.word	0x20000000
 80128a0:	08010ab1 	.word	0x08010ab1
 80128a4:	200000cc 	.word	0x200000cc
 80128a8:	2000a494 	.word	0x2000a494
 80128ac:	08010aaf 	.word	0x08010aaf
 80128b0:	200000d0 	.word	0x200000d0

080128b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80128b4:	b538      	push	{r3, r4, r5, lr}
 80128b6:	4c15      	ldr	r4, [pc, #84]	; (801290c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80128b8:	7823      	ldrb	r3, [r4, #0]
 80128ba:	f3bf 8f5b 	dmb	ish
 80128be:	07da      	lsls	r2, r3, #31
 80128c0:	4605      	mov	r5, r0
 80128c2:	d40b      	bmi.n	80128dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80128c4:	4620      	mov	r0, r4
 80128c6:	f007 fa8e 	bl	8019de6 <__cxa_guard_acquire>
 80128ca:	b138      	cbz	r0, 80128dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80128cc:	4620      	mov	r0, r4
 80128ce:	f007 fa96 	bl	8019dfe <__cxa_guard_release>
 80128d2:	4a0f      	ldr	r2, [pc, #60]	; (8012910 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80128d4:	490f      	ldr	r1, [pc, #60]	; (8012914 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80128d6:	4810      	ldr	r0, [pc, #64]	; (8012918 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80128d8:	f007 fa7e 	bl	8019dd8 <__aeabi_atexit>
 80128dc:	4c0f      	ldr	r4, [pc, #60]	; (801291c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80128de:	7823      	ldrb	r3, [r4, #0]
 80128e0:	f3bf 8f5b 	dmb	ish
 80128e4:	07db      	lsls	r3, r3, #31
 80128e6:	d40b      	bmi.n	8012900 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80128e8:	4620      	mov	r0, r4
 80128ea:	f007 fa7c 	bl	8019de6 <__cxa_guard_acquire>
 80128ee:	b138      	cbz	r0, 8012900 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80128f0:	4620      	mov	r0, r4
 80128f2:	f007 fa84 	bl	8019dfe <__cxa_guard_release>
 80128f6:	4a06      	ldr	r2, [pc, #24]	; (8012910 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80128f8:	4909      	ldr	r1, [pc, #36]	; (8012920 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80128fa:	480a      	ldr	r0, [pc, #40]	; (8012924 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80128fc:	f007 fa6c 	bl	8019dd8 <__aeabi_atexit>
 8012900:	4b05      	ldr	r3, [pc, #20]	; (8012918 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012902:	642b      	str	r3, [r5, #64]	; 0x40
 8012904:	4b07      	ldr	r3, [pc, #28]	; (8012924 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012906:	646b      	str	r3, [r5, #68]	; 0x44
 8012908:	bd38      	pop	{r3, r4, r5, pc}
 801290a:	bf00      	nop
 801290c:	2000a458 	.word	0x2000a458
 8012910:	20000000 	.word	0x20000000
 8012914:	08010ab5 	.word	0x08010ab5
 8012918:	20000094 	.word	0x20000094
 801291c:	2000a45c 	.word	0x2000a45c
 8012920:	08010ab3 	.word	0x08010ab3
 8012924:	20000098 	.word	0x20000098

08012928 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8012928:	b538      	push	{r3, r4, r5, lr}
 801292a:	4c15      	ldr	r4, [pc, #84]	; (8012980 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801292c:	7823      	ldrb	r3, [r4, #0]
 801292e:	f3bf 8f5b 	dmb	ish
 8012932:	07da      	lsls	r2, r3, #31
 8012934:	4605      	mov	r5, r0
 8012936:	d40b      	bmi.n	8012950 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012938:	4620      	mov	r0, r4
 801293a:	f007 fa54 	bl	8019de6 <__cxa_guard_acquire>
 801293e:	b138      	cbz	r0, 8012950 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8012940:	4620      	mov	r0, r4
 8012942:	f007 fa5c 	bl	8019dfe <__cxa_guard_release>
 8012946:	4a0f      	ldr	r2, [pc, #60]	; (8012984 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8012948:	490f      	ldr	r1, [pc, #60]	; (8012988 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801294a:	4810      	ldr	r0, [pc, #64]	; (801298c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801294c:	f007 fa44 	bl	8019dd8 <__aeabi_atexit>
 8012950:	4c0f      	ldr	r4, [pc, #60]	; (8012990 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8012952:	7823      	ldrb	r3, [r4, #0]
 8012954:	f3bf 8f5b 	dmb	ish
 8012958:	07db      	lsls	r3, r3, #31
 801295a:	d40b      	bmi.n	8012974 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801295c:	4620      	mov	r0, r4
 801295e:	f007 fa42 	bl	8019de6 <__cxa_guard_acquire>
 8012962:	b138      	cbz	r0, 8012974 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8012964:	4620      	mov	r0, r4
 8012966:	f007 fa4a 	bl	8019dfe <__cxa_guard_release>
 801296a:	4a06      	ldr	r2, [pc, #24]	; (8012984 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801296c:	4909      	ldr	r1, [pc, #36]	; (8012994 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801296e:	480a      	ldr	r0, [pc, #40]	; (8012998 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012970:	f007 fa32 	bl	8019dd8 <__aeabi_atexit>
 8012974:	4b05      	ldr	r3, [pc, #20]	; (801298c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012976:	63ab      	str	r3, [r5, #56]	; 0x38
 8012978:	4b07      	ldr	r3, [pc, #28]	; (8012998 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801297a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801297c:	bd38      	pop	{r3, r4, r5, pc}
 801297e:	bf00      	nop
 8012980:	2000a478 	.word	0x2000a478
 8012984:	20000000 	.word	0x20000000
 8012988:	08010ab9 	.word	0x08010ab9
 801298c:	200000b4 	.word	0x200000b4
 8012990:	2000a47c 	.word	0x2000a47c
 8012994:	08010ab7 	.word	0x08010ab7
 8012998:	200000b8 	.word	0x200000b8

0801299c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801299c:	b510      	push	{r4, lr}
 801299e:	4604      	mov	r4, r0
 80129a0:	f7ff ff14 	bl	80127cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80129a4:	4620      	mov	r0, r4
 80129a6:	f7ff ff85 	bl	80128b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80129aa:	4620      	mov	r0, r4
 80129ac:	f7ff ff48 	bl	8012840 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80129b0:	4620      	mov	r0, r4
 80129b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80129b6:	f7ff bfb7 	b.w	8012928 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080129bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80129bc:	b538      	push	{r3, r4, r5, lr}
 80129be:	4c15      	ldr	r4, [pc, #84]	; (8012a14 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80129c0:	7823      	ldrb	r3, [r4, #0]
 80129c2:	f3bf 8f5b 	dmb	ish
 80129c6:	07da      	lsls	r2, r3, #31
 80129c8:	4605      	mov	r5, r0
 80129ca:	d40b      	bmi.n	80129e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80129cc:	4620      	mov	r0, r4
 80129ce:	f007 fa0a 	bl	8019de6 <__cxa_guard_acquire>
 80129d2:	b138      	cbz	r0, 80129e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80129d4:	4620      	mov	r0, r4
 80129d6:	f007 fa12 	bl	8019dfe <__cxa_guard_release>
 80129da:	4a0f      	ldr	r2, [pc, #60]	; (8012a18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80129dc:	490f      	ldr	r1, [pc, #60]	; (8012a1c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80129de:	4810      	ldr	r0, [pc, #64]	; (8012a20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80129e0:	f007 f9fa 	bl	8019dd8 <__aeabi_atexit>
 80129e4:	4c0f      	ldr	r4, [pc, #60]	; (8012a24 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80129e6:	7823      	ldrb	r3, [r4, #0]
 80129e8:	f3bf 8f5b 	dmb	ish
 80129ec:	07db      	lsls	r3, r3, #31
 80129ee:	d40b      	bmi.n	8012a08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80129f0:	4620      	mov	r0, r4
 80129f2:	f007 f9f8 	bl	8019de6 <__cxa_guard_acquire>
 80129f6:	b138      	cbz	r0, 8012a08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80129f8:	4620      	mov	r0, r4
 80129fa:	f007 fa00 	bl	8019dfe <__cxa_guard_release>
 80129fe:	4a06      	ldr	r2, [pc, #24]	; (8012a18 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012a00:	4909      	ldr	r1, [pc, #36]	; (8012a28 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8012a02:	480a      	ldr	r0, [pc, #40]	; (8012a2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012a04:	f007 f9e8 	bl	8019dd8 <__aeabi_atexit>
 8012a08:	4b05      	ldr	r3, [pc, #20]	; (8012a20 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012a0a:	662b      	str	r3, [r5, #96]	; 0x60
 8012a0c:	4b07      	ldr	r3, [pc, #28]	; (8012a2c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012a0e:	666b      	str	r3, [r5, #100]	; 0x64
 8012a10:	bd38      	pop	{r3, r4, r5, pc}
 8012a12:	bf00      	nop
 8012a14:	2000a460 	.word	0x2000a460
 8012a18:	20000000 	.word	0x20000000
 8012a1c:	08010aa5 	.word	0x08010aa5
 8012a20:	2000009c 	.word	0x2000009c
 8012a24:	2000a464 	.word	0x2000a464
 8012a28:	08010aa3 	.word	0x08010aa3
 8012a2c:	200000a0 	.word	0x200000a0

08012a30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8012a30:	b538      	push	{r3, r4, r5, lr}
 8012a32:	4c15      	ldr	r4, [pc, #84]	; (8012a88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8012a34:	7823      	ldrb	r3, [r4, #0]
 8012a36:	f3bf 8f5b 	dmb	ish
 8012a3a:	07da      	lsls	r2, r3, #31
 8012a3c:	4605      	mov	r5, r0
 8012a3e:	d40b      	bmi.n	8012a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012a40:	4620      	mov	r0, r4
 8012a42:	f007 f9d0 	bl	8019de6 <__cxa_guard_acquire>
 8012a46:	b138      	cbz	r0, 8012a58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012a48:	4620      	mov	r0, r4
 8012a4a:	f007 f9d8 	bl	8019dfe <__cxa_guard_release>
 8012a4e:	4a0f      	ldr	r2, [pc, #60]	; (8012a8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012a50:	490f      	ldr	r1, [pc, #60]	; (8012a90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8012a52:	4810      	ldr	r0, [pc, #64]	; (8012a94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8012a54:	f007 f9c0 	bl	8019dd8 <__aeabi_atexit>
 8012a58:	4c0f      	ldr	r4, [pc, #60]	; (8012a98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8012a5a:	7823      	ldrb	r3, [r4, #0]
 8012a5c:	f3bf 8f5b 	dmb	ish
 8012a60:	07db      	lsls	r3, r3, #31
 8012a62:	d40b      	bmi.n	8012a7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8012a64:	4620      	mov	r0, r4
 8012a66:	f007 f9be 	bl	8019de6 <__cxa_guard_acquire>
 8012a6a:	b138      	cbz	r0, 8012a7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8012a6c:	4620      	mov	r0, r4
 8012a6e:	f007 f9c6 	bl	8019dfe <__cxa_guard_release>
 8012a72:	4a06      	ldr	r2, [pc, #24]	; (8012a8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012a74:	4909      	ldr	r1, [pc, #36]	; (8012a9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8012a76:	480a      	ldr	r0, [pc, #40]	; (8012aa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012a78:	f007 f9ae 	bl	8019dd8 <__aeabi_atexit>
 8012a7c:	4b05      	ldr	r3, [pc, #20]	; (8012a94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8012a7e:	65ab      	str	r3, [r5, #88]	; 0x58
 8012a80:	4b07      	ldr	r3, [pc, #28]	; (8012aa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012a82:	65eb      	str	r3, [r5, #92]	; 0x5c
 8012a84:	bd38      	pop	{r3, r4, r5, pc}
 8012a86:	bf00      	nop
 8012a88:	2000a438 	.word	0x2000a438
 8012a8c:	20000000 	.word	0x20000000
 8012a90:	08010aa9 	.word	0x08010aa9
 8012a94:	20000074 	.word	0x20000074
 8012a98:	2000a43c 	.word	0x2000a43c
 8012a9c:	08010aa7 	.word	0x08010aa7
 8012aa0:	20000078 	.word	0x20000078

08012aa4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8012aa4:	b510      	push	{r4, lr}
 8012aa6:	4604      	mov	r4, r0
 8012aa8:	f7ff ff88 	bl	80129bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8012aac:	4620      	mov	r0, r4
 8012aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ab2:	f7ff bfbd 	b.w	8012a30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08012ab8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8012ab8:	b538      	push	{r3, r4, r5, lr}
 8012aba:	4c15      	ldr	r4, [pc, #84]	; (8012b10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8012abc:	7823      	ldrb	r3, [r4, #0]
 8012abe:	f3bf 8f5b 	dmb	ish
 8012ac2:	07da      	lsls	r2, r3, #31
 8012ac4:	4605      	mov	r5, r0
 8012ac6:	d40b      	bmi.n	8012ae0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012ac8:	4620      	mov	r0, r4
 8012aca:	f007 f98c 	bl	8019de6 <__cxa_guard_acquire>
 8012ace:	b138      	cbz	r0, 8012ae0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012ad0:	4620      	mov	r0, r4
 8012ad2:	f007 f994 	bl	8019dfe <__cxa_guard_release>
 8012ad6:	4a0f      	ldr	r2, [pc, #60]	; (8012b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012ad8:	490f      	ldr	r1, [pc, #60]	; (8012b18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8012ada:	4810      	ldr	r0, [pc, #64]	; (8012b1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012adc:	f007 f97c 	bl	8019dd8 <__aeabi_atexit>
 8012ae0:	4c0f      	ldr	r4, [pc, #60]	; (8012b20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8012ae2:	7823      	ldrb	r3, [r4, #0]
 8012ae4:	f3bf 8f5b 	dmb	ish
 8012ae8:	07db      	lsls	r3, r3, #31
 8012aea:	d40b      	bmi.n	8012b04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012aec:	4620      	mov	r0, r4
 8012aee:	f007 f97a 	bl	8019de6 <__cxa_guard_acquire>
 8012af2:	b138      	cbz	r0, 8012b04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012af4:	4620      	mov	r0, r4
 8012af6:	f007 f982 	bl	8019dfe <__cxa_guard_release>
 8012afa:	4a06      	ldr	r2, [pc, #24]	; (8012b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012afc:	4909      	ldr	r1, [pc, #36]	; (8012b24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8012afe:	480a      	ldr	r0, [pc, #40]	; (8012b28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012b00:	f007 f96a 	bl	8019dd8 <__aeabi_atexit>
 8012b04:	4b05      	ldr	r3, [pc, #20]	; (8012b1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012b06:	672b      	str	r3, [r5, #112]	; 0x70
 8012b08:	4b07      	ldr	r3, [pc, #28]	; (8012b28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012b0a:	676b      	str	r3, [r5, #116]	; 0x74
 8012b0c:	bd38      	pop	{r3, r4, r5, pc}
 8012b0e:	bf00      	nop
 8012b10:	2000a430 	.word	0x2000a430
 8012b14:	20000000 	.word	0x20000000
 8012b18:	08010a9d 	.word	0x08010a9d
 8012b1c:	2000006c 	.word	0x2000006c
 8012b20:	2000a434 	.word	0x2000a434
 8012b24:	08010a9b 	.word	0x08010a9b
 8012b28:	20000070 	.word	0x20000070

08012b2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8012b2c:	b538      	push	{r3, r4, r5, lr}
 8012b2e:	4c15      	ldr	r4, [pc, #84]	; (8012b84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8012b30:	7823      	ldrb	r3, [r4, #0]
 8012b32:	f3bf 8f5b 	dmb	ish
 8012b36:	07da      	lsls	r2, r3, #31
 8012b38:	4605      	mov	r5, r0
 8012b3a:	d40b      	bmi.n	8012b54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012b3c:	4620      	mov	r0, r4
 8012b3e:	f007 f952 	bl	8019de6 <__cxa_guard_acquire>
 8012b42:	b138      	cbz	r0, 8012b54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012b44:	4620      	mov	r0, r4
 8012b46:	f007 f95a 	bl	8019dfe <__cxa_guard_release>
 8012b4a:	4a0f      	ldr	r2, [pc, #60]	; (8012b88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012b4c:	490f      	ldr	r1, [pc, #60]	; (8012b8c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8012b4e:	4810      	ldr	r0, [pc, #64]	; (8012b90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8012b50:	f007 f942 	bl	8019dd8 <__aeabi_atexit>
 8012b54:	4c0f      	ldr	r4, [pc, #60]	; (8012b94 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8012b56:	7823      	ldrb	r3, [r4, #0]
 8012b58:	f3bf 8f5b 	dmb	ish
 8012b5c:	07db      	lsls	r3, r3, #31
 8012b5e:	d40b      	bmi.n	8012b78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8012b60:	4620      	mov	r0, r4
 8012b62:	f007 f940 	bl	8019de6 <__cxa_guard_acquire>
 8012b66:	b138      	cbz	r0, 8012b78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8012b68:	4620      	mov	r0, r4
 8012b6a:	f007 f948 	bl	8019dfe <__cxa_guard_release>
 8012b6e:	4a06      	ldr	r2, [pc, #24]	; (8012b88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012b70:	4909      	ldr	r1, [pc, #36]	; (8012b98 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8012b72:	480a      	ldr	r0, [pc, #40]	; (8012b9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8012b74:	f007 f930 	bl	8019dd8 <__aeabi_atexit>
 8012b78:	4b05      	ldr	r3, [pc, #20]	; (8012b90 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8012b7a:	66ab      	str	r3, [r5, #104]	; 0x68
 8012b7c:	4b07      	ldr	r3, [pc, #28]	; (8012b9c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8012b7e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8012b80:	bd38      	pop	{r3, r4, r5, pc}
 8012b82:	bf00      	nop
 8012b84:	2000a428 	.word	0x2000a428
 8012b88:	20000000 	.word	0x20000000
 8012b8c:	08010aa1 	.word	0x08010aa1
 8012b90:	20000064 	.word	0x20000064
 8012b94:	2000a42c 	.word	0x2000a42c
 8012b98:	08010a9f 	.word	0x08010a9f
 8012b9c:	20000068 	.word	0x20000068

08012ba0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8012ba0:	b510      	push	{r4, lr}
 8012ba2:	4604      	mov	r4, r0
 8012ba4:	f7ff ff88 	bl	8012ab8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8012ba8:	4620      	mov	r0, r4
 8012baa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bae:	f7ff bfbd 	b.w	8012b2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08012bb2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8012bb2:	b510      	push	{r4, lr}
 8012bb4:	4604      	mov	r4, r0
 8012bb6:	f7ff fff3 	bl	8012ba0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8012bba:	4620      	mov	r0, r4
 8012bbc:	f7ff ff72 	bl	8012aa4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8012bc0:	4620      	mov	r0, r4
 8012bc2:	f7ff fdf9 	bl	80127b8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8012bc6:	4620      	mov	r0, r4
 8012bc8:	f7ff fcfa 	bl	80125c0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8012bcc:	4620      	mov	r0, r4
 8012bce:	f7ff fd75 	bl	80126bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8012bd2:	4620      	mov	r0, r4
 8012bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bd8:	f7ff bee0 	b.w	801299c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08012bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8012bdc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012be0:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8012be4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8012be8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012bec:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012bf0:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8012bf4:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8012bf8:	8808      	ldrh	r0, [r1, #0]
 8012bfa:	fb0e 4708 	mla	r7, lr, r8, r4
 8012bfe:	f1be 0f00 	cmp.w	lr, #0
 8012c02:	eb02 0a07 	add.w	sl, r2, r7
 8012c06:	db37      	blt.n	8012c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012c08:	45f3      	cmp	fp, lr
 8012c0a:	dd35      	ble.n	8012c78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012c0c:	2c00      	cmp	r4, #0
 8012c0e:	db31      	blt.n	8012c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012c10:	45a0      	cmp	r8, r4
 8012c12:	dd2f      	ble.n	8012c74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012c14:	5dd2      	ldrb	r2, [r2, r7]
 8012c16:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8012c1a:	1c62      	adds	r2, r4, #1
 8012c1c:	d42f      	bmi.n	8012c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012c1e:	4590      	cmp	r8, r2
 8012c20:	dd2d      	ble.n	8012c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012c22:	b366      	cbz	r6, 8012c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012c24:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012c28:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012c2c:	f11e 0e01 	adds.w	lr, lr, #1
 8012c30:	d429      	bmi.n	8012c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8012c32:	45f3      	cmp	fp, lr
 8012c34:	dd27      	ble.n	8012c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8012c36:	f1bc 0f00 	cmp.w	ip, #0
 8012c3a:	f000 80a0 	beq.w	8012d7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8012c3e:	2c00      	cmp	r4, #0
 8012c40:	db1f      	blt.n	8012c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8012c42:	45a0      	cmp	r8, r4
 8012c44:	dd1d      	ble.n	8012c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8012c46:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8012c4a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8012c4e:	3401      	adds	r4, #1
 8012c50:	d41c      	bmi.n	8012c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8012c52:	45a0      	cmp	r8, r4
 8012c54:	dd1a      	ble.n	8012c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8012c56:	b1de      	cbz	r6, 8012c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8012c58:	44d0      	add	r8, sl
 8012c5a:	f898 2001 	ldrb.w	r2, [r8, #1]
 8012c5e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8012c62:	2e0f      	cmp	r6, #15
 8012c64:	d915      	bls.n	8012c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8012c66:	4b49      	ldr	r3, [pc, #292]	; (8012d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8012c68:	4a49      	ldr	r2, [pc, #292]	; (8012d90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8012c6a:	484a      	ldr	r0, [pc, #296]	; (8012d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8012c6c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8012c70:	f007 f8e6 	bl	8019e40 <__assert_func>
 8012c74:	4681      	mov	r9, r0
 8012c76:	e7d0      	b.n	8012c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8012c78:	4607      	mov	r7, r0
 8012c7a:	4681      	mov	r9, r0
 8012c7c:	e7d6      	b.n	8012c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8012c7e:	4607      	mov	r7, r0
 8012c80:	e7d4      	b.n	8012c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8012c82:	4686      	mov	lr, r0
 8012c84:	e7e3      	b.n	8012c4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8012c86:	4603      	mov	r3, r0
 8012c88:	4686      	mov	lr, r0
 8012c8a:	e7ea      	b.n	8012c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012c8c:	4603      	mov	r3, r0
 8012c8e:	e7e8      	b.n	8012c62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012c90:	4603      	mov	r3, r0
 8012c92:	f1bc 0f0f 	cmp.w	ip, #15
 8012c96:	d8e6      	bhi.n	8012c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012c98:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8012c9c:	fb16 f80c 	smulbb	r8, r6, ip
 8012ca0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012ca4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8012ca8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8012cac:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8012cb0:	ea44 0909 	orr.w	r9, r4, r9
 8012cb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8012cb8:	f1cc 0410 	rsb	r4, ip, #16
 8012cbc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012cc0:	1ba4      	subs	r4, r4, r6
 8012cc2:	041a      	lsls	r2, r3, #16
 8012cc4:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8012cc8:	ea4a 0707 	orr.w	r7, sl, r7
 8012ccc:	4377      	muls	r7, r6
 8012cce:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012cd2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8012cd6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012cda:	fb04 7409 	mla	r4, r4, r9, r7
 8012cde:	4313      	orrs	r3, r2
 8012ce0:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8012ce4:	fb08 4303 	mla	r3, r8, r3, r4
 8012ce8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012cec:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8012cf0:	4322      	orrs	r2, r4
 8012cf2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8012cf6:	fb0c 3202 	mla	r2, ip, r2, r3
 8012cfa:	0d53      	lsrs	r3, r2, #21
 8012cfc:	0952      	lsrs	r2, r2, #5
 8012cfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012d02:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012d06:	431a      	orrs	r2, r3
 8012d08:	b293      	uxth	r3, r2
 8012d0a:	b2af      	uxth	r7, r5
 8012d0c:	1202      	asrs	r2, r0, #8
 8012d0e:	43ed      	mvns	r5, r5
 8012d10:	b2ed      	uxtb	r5, r5
 8012d12:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012d16:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012d1a:	fb12 f205 	smulbb	r2, r2, r5
 8012d1e:	10c6      	asrs	r6, r0, #3
 8012d20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012d24:	fb0c 2c07 	mla	ip, ip, r7, r2
 8012d28:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012d2c:	10da      	asrs	r2, r3, #3
 8012d2e:	fb16 f605 	smulbb	r6, r6, r5
 8012d32:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012d36:	fb02 6207 	mla	r2, r2, r7, r6
 8012d3a:	b296      	uxth	r6, r2
 8012d3c:	00c2      	lsls	r2, r0, #3
 8012d3e:	00dc      	lsls	r4, r3, #3
 8012d40:	b2d2      	uxtb	r2, r2
 8012d42:	b2e4      	uxtb	r4, r4
 8012d44:	fb12 f205 	smulbb	r2, r2, r5
 8012d48:	fb04 2207 	mla	r2, r4, r7, r2
 8012d4c:	fa1f fc8c 	uxth.w	ip, ip
 8012d50:	b292      	uxth	r2, r2
 8012d52:	f10c 0301 	add.w	r3, ip, #1
 8012d56:	1c50      	adds	r0, r2, #1
 8012d58:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8012d5c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8012d60:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012d64:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012d68:	4313      	orrs	r3, r2
 8012d6a:	1c72      	adds	r2, r6, #1
 8012d6c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8012d70:	0952      	lsrs	r2, r2, #5
 8012d72:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012d76:	4313      	orrs	r3, r2
 8012d78:	800b      	strh	r3, [r1, #0]
 8012d7a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d7e:	2e0f      	cmp	r6, #15
 8012d80:	f63f af71 	bhi.w	8012c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012d84:	4603      	mov	r3, r0
 8012d86:	4686      	mov	lr, r0
 8012d88:	e786      	b.n	8012c98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8012d8a:	bf00      	nop
 8012d8c:	0801d907 	.word	0x0801d907
 8012d90:	0801df6e 	.word	0x0801df6e
 8012d94:	0801d9f0 	.word	0x0801d9f0

08012d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d9c:	ed2d 8b08 	vpush	{d8-d11}
 8012da0:	b099      	sub	sp, #100	; 0x64
 8012da2:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 8012da6:	9215      	str	r2, [sp, #84]	; 0x54
 8012da8:	9309      	str	r3, [sp, #36]	; 0x24
 8012daa:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012dac:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8012db0:	930d      	str	r3, [sp, #52]	; 0x34
 8012db2:	910c      	str	r1, [sp, #48]	; 0x30
 8012db4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8012db8:	9016      	str	r0, [sp, #88]	; 0x58
 8012dba:	6850      	ldr	r0, [r2, #4]
 8012dbc:	6812      	ldr	r2, [r2, #0]
 8012dbe:	fb00 1303 	mla	r3, r0, r3, r1
 8012dc2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8012dc6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012dc8:	681b      	ldr	r3, [r3, #0]
 8012dca:	930b      	str	r3, [sp, #44]	; 0x2c
 8012dcc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012dce:	685e      	ldr	r6, [r3, #4]
 8012dd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012dd2:	43db      	mvns	r3, r3
 8012dd4:	b2db      	uxtb	r3, r3
 8012dd6:	eeb0 aa40 	vmov.f32	s20, s0
 8012dda:	eef0 9a60 	vmov.f32	s19, s1
 8012dde:	eeb0 9a41 	vmov.f32	s18, s2
 8012de2:	eeb0 8a62 	vmov.f32	s16, s5
 8012de6:	eef0 8a43 	vmov.f32	s17, s6
 8012dea:	eef0 ba44 	vmov.f32	s23, s8
 8012dee:	eeb0 ba64 	vmov.f32	s22, s9
 8012df2:	eef0 aa45 	vmov.f32	s21, s10
 8012df6:	3604      	adds	r6, #4
 8012df8:	930a      	str	r3, [sp, #40]	; 0x28
 8012dfa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012dfc:	2b00      	cmp	r3, #0
 8012dfe:	dc03      	bgt.n	8012e08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e00:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012e02:	2b00      	cmp	r3, #0
 8012e04:	f340 8226 	ble.w	8013254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8012e08:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012e0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8012e0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8012e12:	1e48      	subs	r0, r1, #1
 8012e14:	1e57      	subs	r7, r2, #1
 8012e16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012e18:	2b00      	cmp	r3, #0
 8012e1a:	f340 80e4 	ble.w	8012fe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8012e1e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8012e22:	ea4f 4325 	mov.w	r3, r5, asr #16
 8012e26:	d406      	bmi.n	8012e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012e28:	4584      	cmp	ip, r0
 8012e2a:	da04      	bge.n	8012e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012e2c:	2b00      	cmp	r3, #0
 8012e2e:	db02      	blt.n	8012e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012e30:	42bb      	cmp	r3, r7
 8012e32:	f2c0 80d9 	blt.w	8012fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8012e36:	f11c 0c01 	adds.w	ip, ip, #1
 8012e3a:	f100 80ca 	bmi.w	8012fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8012e3e:	4561      	cmp	r1, ip
 8012e40:	f2c0 80c7 	blt.w	8012fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8012e44:	3301      	adds	r3, #1
 8012e46:	f100 80c4 	bmi.w	8012fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8012e4a:	429a      	cmp	r2, r3
 8012e4c:	f2c0 80c1 	blt.w	8012fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8012e50:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8012e54:	4647      	mov	r7, r8
 8012e56:	f1bb 0f00 	cmp.w	fp, #0
 8012e5a:	f340 80e4 	ble.w	8013026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8012e5e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8012e60:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012e62:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8012e66:	689b      	ldr	r3, [r3, #8]
 8012e68:	ea5f 422a 	movs.w	r2, sl, asr #16
 8012e6c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8012e70:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8012e74:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8012e78:	f100 8122 	bmi.w	80130c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8012e7c:	f103 39ff 	add.w	r9, r3, #4294967295
 8012e80:	454a      	cmp	r2, r9
 8012e82:	f280 811d 	bge.w	80130c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8012e86:	f1bc 0f00 	cmp.w	ip, #0
 8012e8a:	f2c0 8119 	blt.w	80130c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8012e8e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8012e92:	45cc      	cmp	ip, r9
 8012e94:	f280 8114 	bge.w	80130c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8012e98:	b21b      	sxth	r3, r3
 8012e9a:	fb0c 2203 	mla	r2, ip, r3, r2
 8012e9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8012ea0:	eb04 0902 	add.w	r9, r4, r2
 8012ea4:	5ca2      	ldrb	r2, [r4, r2]
 8012ea6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8012eaa:	2800      	cmp	r0, #0
 8012eac:	f000 80ff 	beq.w	80130ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8012eb0:	f899 2001 	ldrb.w	r2, [r9, #1]
 8012eb4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8012eb8:	9211      	str	r2, [sp, #68]	; 0x44
 8012eba:	b151      	cbz	r1, 8012ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8012ebc:	eb09 0203 	add.w	r2, r9, r3
 8012ec0:	f819 3003 	ldrb.w	r3, [r9, r3]
 8012ec4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012ec8:	930f      	str	r3, [sp, #60]	; 0x3c
 8012eca:	7853      	ldrb	r3, [r2, #1]
 8012ecc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012ed0:	9312      	str	r3, [sp, #72]	; 0x48
 8012ed2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012ed4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012ed6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012eda:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012ede:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012ee2:	ea4c 0c03 	orr.w	ip, ip, r3
 8012ee6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012ee8:	041b      	lsls	r3, r3, #16
 8012eea:	fb10 f201 	smulbb	r2, r0, r1
 8012eee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8012ef2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012ef6:	10d2      	asrs	r2, r2, #3
 8012ef8:	4323      	orrs	r3, r4
 8012efa:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8012efe:	4353      	muls	r3, r2
 8012f00:	fb09 330c 	mla	r3, r9, ip, r3
 8012f04:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012f08:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012f0c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012f10:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012f14:	f1c1 0c10 	rsb	ip, r1, #16
 8012f18:	ebac 0c00 	sub.w	ip, ip, r0
 8012f1c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012f20:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012f24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012f26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012f28:	0418      	lsls	r0, r3, #16
 8012f2a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012f2e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012f32:	4318      	orrs	r0, r3
 8012f34:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012f38:	fb02 c200 	mla	r2, r2, r0, ip
 8012f3c:	0d53      	lsrs	r3, r2, #21
 8012f3e:	0952      	lsrs	r2, r2, #5
 8012f40:	f8b7 c000 	ldrh.w	ip, [r7]
 8012f44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012f48:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012f4c:	431a      	orrs	r2, r3
 8012f4e:	b292      	uxth	r2, r2
 8012f50:	ea4f 212c 	mov.w	r1, ip, asr #8
 8012f54:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8012f58:	1210      	asrs	r0, r2, #8
 8012f5a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012f5e:	fb11 f104 	smulbb	r1, r1, r4
 8012f62:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8012f66:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012f6a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012f6e:	fb00 1003 	mla	r0, r0, r3, r1
 8012f72:	fa5f fc8c 	uxtb.w	ip, ip
 8012f76:	10d1      	asrs	r1, r2, #3
 8012f78:	00d2      	lsls	r2, r2, #3
 8012f7a:	fb1c fc04 	smulbb	ip, ip, r4
 8012f7e:	b2d2      	uxtb	r2, r2
 8012f80:	fb02 c203 	mla	r2, r2, r3, ip
 8012f84:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012f88:	b280      	uxth	r0, r0
 8012f8a:	b292      	uxth	r2, r2
 8012f8c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012f90:	fb1e fe04 	smulbb	lr, lr, r4
 8012f94:	fb01 e103 	mla	r1, r1, r3, lr
 8012f98:	f102 0c01 	add.w	ip, r2, #1
 8012f9c:	1c43      	adds	r3, r0, #1
 8012f9e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8012fa2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012fa6:	b289      	uxth	r1, r1
 8012fa8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012fac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012fb0:	4313      	orrs	r3, r2
 8012fb2:	1c4a      	adds	r2, r1, #1
 8012fb4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012fb8:	0949      	lsrs	r1, r1, #5
 8012fba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012fbe:	430b      	orrs	r3, r1
 8012fc0:	803b      	strh	r3, [r7, #0]
 8012fc2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012fc4:	449a      	add	sl, r3
 8012fc6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012fc8:	3702      	adds	r7, #2
 8012fca:	441d      	add	r5, r3
 8012fcc:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012fd0:	e741      	b.n	8012e56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8012fd2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8012fd4:	449a      	add	sl, r3
 8012fd6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012fd8:	441d      	add	r5, r3
 8012fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fdc:	3b01      	subs	r3, #1
 8012fde:	9309      	str	r3, [sp, #36]	; 0x24
 8012fe0:	f108 0802 	add.w	r8, r8, #2
 8012fe4:	e717      	b.n	8012e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012fe6:	d023      	beq.n	8013030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8012fe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fea:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8012fec:	3b01      	subs	r3, #1
 8012fee:	fb00 a003 	mla	r0, r0, r3, sl
 8012ff2:	1400      	asrs	r0, r0, #16
 8012ff4:	f53f af2c 	bmi.w	8012e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012ff8:	3901      	subs	r1, #1
 8012ffa:	4288      	cmp	r0, r1
 8012ffc:	f6bf af28 	bge.w	8012e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8013000:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8013002:	fb01 5303 	mla	r3, r1, r3, r5
 8013006:	141b      	asrs	r3, r3, #16
 8013008:	f53f af22 	bmi.w	8012e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801300c:	3a01      	subs	r2, #1
 801300e:	4293      	cmp	r3, r2
 8013010:	f6bf af1e 	bge.w	8012e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8013014:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013018:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801301c:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8013020:	f1be 0f00 	cmp.w	lr, #0
 8013024:	dc6c      	bgt.n	8013100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8013026:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013028:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801302c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8013030:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013032:	2b00      	cmp	r3, #0
 8013034:	f340 810e 	ble.w	8013254 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8013038:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801303c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013040:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013044:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013046:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801304a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801304e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013052:	eef0 6a48 	vmov.f32	s13, s16
 8013056:	ee69 7a27 	vmul.f32	s15, s18, s15
 801305a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801305e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013062:	ee16 aa90 	vmov	sl, s13
 8013066:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801306a:	eef0 6a68 	vmov.f32	s13, s17
 801306e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013072:	ee18 2a10 	vmov	r2, s16
 8013076:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801307a:	fb92 f3f3 	sdiv	r3, r2, r3
 801307e:	ee18 2a90 	vmov	r2, s17
 8013082:	932d      	str	r3, [sp, #180]	; 0xb4
 8013084:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013086:	fb92 f3f3 	sdiv	r3, r2, r3
 801308a:	932e      	str	r3, [sp, #184]	; 0xb8
 801308c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801308e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8013090:	3b01      	subs	r3, #1
 8013092:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013096:	930c      	str	r3, [sp, #48]	; 0x30
 8013098:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801309a:	bf08      	it	eq
 801309c:	4613      	moveq	r3, r2
 801309e:	ee16 5a90 	vmov	r5, s13
 80130a2:	9309      	str	r3, [sp, #36]	; 0x24
 80130a4:	eef0 8a67 	vmov.f32	s17, s15
 80130a8:	eeb0 8a47 	vmov.f32	s16, s14
 80130ac:	e6a5      	b.n	8012dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80130ae:	2900      	cmp	r1, #0
 80130b0:	f43f af0f 	beq.w	8012ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80130b4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80130b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80130bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80130be:	e708      	b.n	8012ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80130c0:	f112 0901 	adds.w	r9, r2, #1
 80130c4:	f53f af7d 	bmi.w	8012fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80130c8:	454b      	cmp	r3, r9
 80130ca:	f6ff af7a 	blt.w	8012fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80130ce:	f11c 0901 	adds.w	r9, ip, #1
 80130d2:	f53f af76 	bmi.w	8012fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80130d6:	45ce      	cmp	lr, r9
 80130d8:	f6ff af73 	blt.w	8012fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80130dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80130de:	9202      	str	r2, [sp, #8]
 80130e0:	b21b      	sxth	r3, r3
 80130e2:	fa0f f28e 	sxth.w	r2, lr
 80130e6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80130ea:	e9cd c003 	strd	ip, r0, [sp, #12]
 80130ee:	9201      	str	r2, [sp, #4]
 80130f0:	9300      	str	r3, [sp, #0]
 80130f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80130f4:	9816      	ldr	r0, [sp, #88]	; 0x58
 80130f6:	4633      	mov	r3, r6
 80130f8:	4639      	mov	r1, r7
 80130fa:	f7ff fd6f 	bl	8012bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80130fe:	e760      	b.n	8012fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8013100:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013102:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8013104:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8013108:	ea4f 422a 	mov.w	r2, sl, asr #16
 801310c:	1429      	asrs	r1, r5, #16
 801310e:	fb03 2101 	mla	r1, r3, r1, r2
 8013112:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013114:	440a      	add	r2, r1
 8013116:	5c61      	ldrb	r1, [r4, r1]
 8013118:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801311c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8013120:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8013124:	f1bc 0f00 	cmp.w	ip, #0
 8013128:	f000 808c 	beq.w	8013244 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801312c:	7857      	ldrb	r7, [r2, #1]
 801312e:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8013132:	9413      	str	r4, [sp, #76]	; 0x4c
 8013134:	b140      	cbz	r0, 8013148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8013136:	18d7      	adds	r7, r2, r3
 8013138:	5cd3      	ldrb	r3, [r2, r3]
 801313a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801313e:	9310      	str	r3, [sp, #64]	; 0x40
 8013140:	787b      	ldrb	r3, [r7, #1]
 8013142:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013146:	9314      	str	r3, [sp, #80]	; 0x50
 8013148:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801314a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801314c:	fb1c f200 	smulbb	r2, ip, r0
 8013150:	041f      	lsls	r7, r3, #16
 8013152:	10d2      	asrs	r2, r2, #3
 8013154:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013158:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801315c:	431f      	orrs	r7, r3
 801315e:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013162:	9317      	str	r3, [sp, #92]	; 0x5c
 8013164:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013166:	041b      	lsls	r3, r3, #16
 8013168:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801316c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013170:	ea43 030b 	orr.w	r3, r3, fp
 8013174:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8013176:	4353      	muls	r3, r2
 8013178:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801317c:	fb04 3707 	mla	r7, r4, r7, r3
 8013180:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013184:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013188:	ea43 0b01 	orr.w	fp, r3, r1
 801318c:	f1c0 0110 	rsb	r1, r0, #16
 8013190:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013192:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013194:	eba1 0c0c 	sub.w	ip, r1, ip
 8013198:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801319c:	fb0c 770b 	mla	r7, ip, fp, r7
 80131a0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80131a4:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80131a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80131ac:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80131b0:	ea4c 0c0b 	orr.w	ip, ip, fp
 80131b4:	fb02 770c 	mla	r7, r2, ip, r7
 80131b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80131ba:	0d79      	lsrs	r1, r7, #21
 80131bc:	097f      	lsrs	r7, r7, #5
 80131be:	8812      	ldrh	r2, [r2, #0]
 80131c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80131c4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80131c8:	430f      	orrs	r7, r1
 80131ca:	b2bb      	uxth	r3, r7
 80131cc:	1211      	asrs	r1, r2, #8
 80131ce:	1218      	asrs	r0, r3, #8
 80131d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80131d4:	fb11 f104 	smulbb	r1, r1, r4
 80131d8:	10d7      	asrs	r7, r2, #3
 80131da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80131de:	00d2      	lsls	r2, r2, #3
 80131e0:	fb00 1009 	mla	r0, r0, r9, r1
 80131e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80131e8:	10d9      	asrs	r1, r3, #3
 80131ea:	b2d2      	uxtb	r2, r2
 80131ec:	00db      	lsls	r3, r3, #3
 80131ee:	fb17 f704 	smulbb	r7, r7, r4
 80131f2:	fb12 f204 	smulbb	r2, r2, r4
 80131f6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80131fa:	b2db      	uxtb	r3, r3
 80131fc:	b280      	uxth	r0, r0
 80131fe:	fb01 7109 	mla	r1, r1, r9, r7
 8013202:	fb03 2309 	mla	r3, r3, r9, r2
 8013206:	b29b      	uxth	r3, r3
 8013208:	b289      	uxth	r1, r1
 801320a:	1c42      	adds	r2, r0, #1
 801320c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8013210:	1c4f      	adds	r7, r1, #1
 8013212:	1c5a      	adds	r2, r3, #1
 8013214:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8013218:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801321c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013220:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013224:	0949      	lsrs	r1, r1, #5
 8013226:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013228:	4310      	orrs	r0, r2
 801322a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801322e:	4308      	orrs	r0, r1
 8013230:	f823 0b02 	strh.w	r0, [r3], #2
 8013234:	930e      	str	r3, [sp, #56]	; 0x38
 8013236:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013238:	449a      	add	sl, r3
 801323a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801323c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013240:	441d      	add	r5, r3
 8013242:	e6ed      	b.n	8013020 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013244:	2800      	cmp	r0, #0
 8013246:	f43f af7f 	beq.w	8013148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801324a:	5cd3      	ldrb	r3, [r2, r3]
 801324c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013250:	9310      	str	r3, [sp, #64]	; 0x40
 8013252:	e779      	b.n	8013148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8013254:	b019      	add	sp, #100	; 0x64
 8013256:	ecbd 8b08 	vpop	{d8-d11}
 801325a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8013260:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013264:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8013268:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801326c:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8013270:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8013274:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8013278:	8808      	ldrh	r0, [r1, #0]
 801327a:	fb06 570e 	mla	r7, r6, lr, r5
 801327e:	2e00      	cmp	r6, #0
 8013280:	eb02 0807 	add.w	r8, r2, r7
 8013284:	db38      	blt.n	80132f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8013286:	45b1      	cmp	r9, r6
 8013288:	dd36      	ble.n	80132f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801328a:	2d00      	cmp	r5, #0
 801328c:	db32      	blt.n	80132f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 801328e:	45ae      	cmp	lr, r5
 8013290:	dd30      	ble.n	80132f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013292:	5dd2      	ldrb	r2, [r2, r7]
 8013294:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013298:	1c6a      	adds	r2, r5, #1
 801329a:	d430      	bmi.n	80132fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 801329c:	4596      	cmp	lr, r2
 801329e:	dd2e      	ble.n	80132fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80132a0:	b36c      	cbz	r4, 80132fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80132a2:	f898 2001 	ldrb.w	r2, [r8, #1]
 80132a6:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80132aa:	3601      	adds	r6, #1
 80132ac:	d42b      	bmi.n	8013306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80132ae:	45b1      	cmp	r9, r6
 80132b0:	dd29      	ble.n	8013306 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80132b2:	f1bc 0f00 	cmp.w	ip, #0
 80132b6:	d028      	beq.n	801330a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80132b8:	2d00      	cmp	r5, #0
 80132ba:	db22      	blt.n	8013302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80132bc:	45ae      	cmp	lr, r5
 80132be:	dd20      	ble.n	8013302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80132c0:	f818 600e 	ldrb.w	r6, [r8, lr]
 80132c4:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80132c8:	3501      	adds	r5, #1
 80132ca:	d407      	bmi.n	80132dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80132cc:	45ae      	cmp	lr, r5
 80132ce:	dd05      	ble.n	80132dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80132d0:	b134      	cbz	r4, 80132e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80132d2:	44c6      	add	lr, r8
 80132d4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80132d8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80132dc:	2c0f      	cmp	r4, #15
 80132de:	d802      	bhi.n	80132e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80132e0:	f1bc 0f0f 	cmp.w	ip, #15
 80132e4:	d914      	bls.n	8013310 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 80132e6:	4b26      	ldr	r3, [pc, #152]	; (8013380 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 80132e8:	4a26      	ldr	r2, [pc, #152]	; (8013384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 80132ea:	4827      	ldr	r0, [pc, #156]	; (8013388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80132ec:	f240 11ef 	movw	r1, #495	; 0x1ef
 80132f0:	f006 fda6 	bl	8019e40 <__assert_func>
 80132f4:	4607      	mov	r7, r0
 80132f6:	e7cf      	b.n	8013298 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80132f8:	4602      	mov	r2, r0
 80132fa:	4607      	mov	r7, r0
 80132fc:	e7d5      	b.n	80132aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80132fe:	4602      	mov	r2, r0
 8013300:	e7d3      	b.n	80132aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013302:	4606      	mov	r6, r0
 8013304:	e7e0      	b.n	80132c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8013306:	4606      	mov	r6, r0
 8013308:	e7e8      	b.n	80132dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801330a:	2c0f      	cmp	r4, #15
 801330c:	d8eb      	bhi.n	80132e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 801330e:	4606      	mov	r6, r0
 8013310:	043d      	lsls	r5, r7, #16
 8013312:	fb14 f30c 	smulbb	r3, r4, ip
 8013316:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801331a:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801331e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013322:	10db      	asrs	r3, r3, #3
 8013324:	432f      	orrs	r7, r5
 8013326:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801332a:	f1cc 0510 	rsb	r5, ip, #16
 801332e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013332:	1b2d      	subs	r5, r5, r4
 8013334:	ea4e 0202 	orr.w	r2, lr, r2
 8013338:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 801333c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8013340:	4354      	muls	r4, r2
 8013342:	fb05 4507 	mla	r5, r5, r7, r4
 8013346:	0404      	lsls	r4, r0, #16
 8013348:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801334c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013350:	4320      	orrs	r0, r4
 8013352:	fb03 5400 	mla	r4, r3, r0, r5
 8013356:	0430      	lsls	r0, r6, #16
 8013358:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801335c:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8013360:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8013364:	4330      	orrs	r0, r6
 8013366:	fb03 4000 	mla	r0, r3, r0, r4
 801336a:	0d43      	lsrs	r3, r0, #21
 801336c:	0940      	lsrs	r0, r0, #5
 801336e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013372:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8013376:	4318      	orrs	r0, r3
 8013378:	8008      	strh	r0, [r1, #0]
 801337a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801337e:	bf00      	nop
 8013380:	0801d907 	.word	0x0801d907
 8013384:	0801df6e 	.word	0x0801df6e
 8013388:	0801d9f0 	.word	0x0801d9f0

0801338c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801338c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013390:	ed2d 8b0a 	vpush	{d8-d12}
 8013394:	b093      	sub	sp, #76	; 0x4c
 8013396:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801339a:	920f      	str	r2, [sp, #60]	; 0x3c
 801339c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801339e:	9108      	str	r1, [sp, #32]
 80133a0:	9306      	str	r3, [sp, #24]
 80133a2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80133a6:	9010      	str	r0, [sp, #64]	; 0x40
 80133a8:	6850      	ldr	r0, [r2, #4]
 80133aa:	6812      	ldr	r2, [r2, #0]
 80133ac:	fb00 1303 	mla	r3, r0, r3, r1
 80133b0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80133b4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80133b6:	681b      	ldr	r3, [r3, #0]
 80133b8:	9307      	str	r3, [sp, #28]
 80133ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80133bc:	685f      	ldr	r7, [r3, #4]
 80133be:	eeb0 aa40 	vmov.f32	s20, s0
 80133c2:	eef0 9a60 	vmov.f32	s19, s1
 80133c6:	eeb0 9a41 	vmov.f32	s18, s2
 80133ca:	eeb0 8a62 	vmov.f32	s16, s5
 80133ce:	eef0 8a43 	vmov.f32	s17, s6
 80133d2:	eeb0 ca44 	vmov.f32	s24, s8
 80133d6:	eef0 ba64 	vmov.f32	s23, s9
 80133da:	eeb0 ba45 	vmov.f32	s22, s10
 80133de:	3704      	adds	r7, #4
 80133e0:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80133e4:	9b08      	ldr	r3, [sp, #32]
 80133e6:	2b00      	cmp	r3, #0
 80133e8:	dc03      	bgt.n	80133f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80133ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80133ec:	2b00      	cmp	r3, #0
 80133ee:	f340 81b2 	ble.w	8013756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80133f2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80133f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80133f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80133fc:	1e48      	subs	r0, r1, #1
 80133fe:	f102 3cff 	add.w	ip, r2, #4294967295
 8013402:	9b06      	ldr	r3, [sp, #24]
 8013404:	2b00      	cmp	r3, #0
 8013406:	f340 80a9 	ble.w	801355c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 801340a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801340e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8013412:	d406      	bmi.n	8013422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013414:	4586      	cmp	lr, r0
 8013416:	da04      	bge.n	8013422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013418:	2b00      	cmp	r3, #0
 801341a:	db02      	blt.n	8013422 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801341c:	4563      	cmp	r3, ip
 801341e:	f2c0 809e 	blt.w	801355e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8013422:	f11e 0e01 	adds.w	lr, lr, #1
 8013426:	f100 808f 	bmi.w	8013548 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801342a:	4571      	cmp	r1, lr
 801342c:	f2c0 808c 	blt.w	8013548 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8013430:	3301      	adds	r3, #1
 8013432:	f100 8089 	bmi.w	8013548 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8013436:	429a      	cmp	r2, r3
 8013438:	f2c0 8086 	blt.w	8013548 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801343c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8013440:	46c8      	mov	r8, r9
 8013442:	f1bb 0f00 	cmp.w	fp, #0
 8013446:	f340 80a6 	ble.w	8013596 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 801344a:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801344c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801344e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8013452:	689b      	ldr	r3, [r3, #8]
 8013454:	1422      	asrs	r2, r4, #16
 8013456:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801345a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801345e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8013462:	f100 80e3 	bmi.w	801362c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013466:	f103 3aff 	add.w	sl, r3, #4294967295
 801346a:	4552      	cmp	r2, sl
 801346c:	f280 80de 	bge.w	801362c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013470:	f1bc 0f00 	cmp.w	ip, #0
 8013474:	f2c0 80da 	blt.w	801362c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013478:	f10e 3aff 	add.w	sl, lr, #4294967295
 801347c:	45d4      	cmp	ip, sl
 801347e:	f280 80d5 	bge.w	801362c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8013482:	b21b      	sxth	r3, r3
 8013484:	fb0c 2203 	mla	r2, ip, r3, r2
 8013488:	9d07      	ldr	r5, [sp, #28]
 801348a:	eb05 0a02 	add.w	sl, r5, r2
 801348e:	5caa      	ldrb	r2, [r5, r2]
 8013490:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8013494:	2800      	cmp	r0, #0
 8013496:	f000 80c0 	beq.w	801361a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 801349a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801349e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80134a2:	920b      	str	r2, [sp, #44]	; 0x2c
 80134a4:	b151      	cbz	r1, 80134bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 80134a6:	eb0a 0203 	add.w	r2, sl, r3
 80134aa:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80134ae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80134b2:	9309      	str	r3, [sp, #36]	; 0x24
 80134b4:	7853      	ldrb	r3, [r2, #1]
 80134b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80134ba:	930c      	str	r3, [sp, #48]	; 0x30
 80134bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80134be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80134c0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80134c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80134c8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80134cc:	ea4c 0c03 	orr.w	ip, ip, r3
 80134d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80134d2:	041b      	lsls	r3, r3, #16
 80134d4:	fb10 f201 	smulbb	r2, r0, r1
 80134d8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80134dc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80134e0:	10d2      	asrs	r2, r2, #3
 80134e2:	432b      	orrs	r3, r5
 80134e4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80134e8:	4353      	muls	r3, r2
 80134ea:	fb0a 330c 	mla	r3, sl, ip, r3
 80134ee:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80134f2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80134f6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80134fa:	ea4c 0e0e 	orr.w	lr, ip, lr
 80134fe:	f1c1 0c10 	rsb	ip, r1, #16
 8013502:	ebac 0c00 	sub.w	ip, ip, r0
 8013506:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801350a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801350e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013510:	0418      	lsls	r0, r3, #16
 8013512:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013516:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801351a:	4318      	orrs	r0, r3
 801351c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013520:	fb02 c200 	mla	r2, r2, r0, ip
 8013524:	0d53      	lsrs	r3, r2, #21
 8013526:	0952      	lsrs	r2, r2, #5
 8013528:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801352c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013530:	431a      	orrs	r2, r3
 8013532:	f8a8 2000 	strh.w	r2, [r8]
 8013536:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013538:	441c      	add	r4, r3
 801353a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801353c:	f108 0802 	add.w	r8, r8, #2
 8013540:	441e      	add	r6, r3
 8013542:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013546:	e77c      	b.n	8013442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013548:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801354a:	441c      	add	r4, r3
 801354c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801354e:	441e      	add	r6, r3
 8013550:	9b06      	ldr	r3, [sp, #24]
 8013552:	3b01      	subs	r3, #1
 8013554:	9306      	str	r3, [sp, #24]
 8013556:	f109 0902 	add.w	r9, r9, #2
 801355a:	e752      	b.n	8013402 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801355c:	d020      	beq.n	80135a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801355e:	9b06      	ldr	r3, [sp, #24]
 8013560:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8013562:	3b01      	subs	r3, #1
 8013564:	fb00 4003 	mla	r0, r0, r3, r4
 8013568:	1400      	asrs	r0, r0, #16
 801356a:	f53f af67 	bmi.w	801343c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801356e:	3901      	subs	r1, #1
 8013570:	4288      	cmp	r0, r1
 8013572:	f6bf af63 	bge.w	801343c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013576:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013578:	fb01 6303 	mla	r3, r1, r3, r6
 801357c:	141b      	asrs	r3, r3, #16
 801357e:	f53f af5d 	bmi.w	801343c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013582:	3a01      	subs	r2, #1
 8013584:	4293      	cmp	r3, r2
 8013586:	f6bf af59 	bge.w	801343c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801358a:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801358e:	46ca      	mov	sl, r9
 8013590:	f1b8 0f00 	cmp.w	r8, #0
 8013594:	dc67      	bgt.n	8013666 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8013596:	9b06      	ldr	r3, [sp, #24]
 8013598:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801359c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80135a0:	9b08      	ldr	r3, [sp, #32]
 80135a2:	2b00      	cmp	r3, #0
 80135a4:	f340 80d7 	ble.w	8013756 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 80135a8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80135ac:	ee79 9aab 	vadd.f32	s19, s19, s23
 80135b0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80135b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80135b6:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80135ba:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80135be:	eef0 6a48 	vmov.f32	s13, s16
 80135c2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80135c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80135ca:	ee37 8a48 	vsub.f32	s16, s14, s16
 80135ce:	ee16 4a90 	vmov	r4, s13
 80135d2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80135d6:	eef0 6a68 	vmov.f32	s13, s17
 80135da:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80135de:	ee18 2a10 	vmov	r2, s16
 80135e2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80135e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80135ea:	ee18 2a90 	vmov	r2, s17
 80135ee:	9329      	str	r3, [sp, #164]	; 0xa4
 80135f0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80135f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80135f6:	932a      	str	r3, [sp, #168]	; 0xa8
 80135f8:	9b08      	ldr	r3, [sp, #32]
 80135fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80135fc:	3b01      	subs	r3, #1
 80135fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013602:	9308      	str	r3, [sp, #32]
 8013604:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013606:	bf08      	it	eq
 8013608:	4613      	moveq	r3, r2
 801360a:	ee16 6a90 	vmov	r6, s13
 801360e:	9306      	str	r3, [sp, #24]
 8013610:	eef0 8a67 	vmov.f32	s17, s15
 8013614:	eeb0 8a47 	vmov.f32	s16, s14
 8013618:	e6e4      	b.n	80133e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801361a:	2900      	cmp	r1, #0
 801361c:	f43f af4e 	beq.w	80134bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8013620:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8013624:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013628:	9309      	str	r3, [sp, #36]	; 0x24
 801362a:	e747      	b.n	80134bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 801362c:	f112 0a01 	adds.w	sl, r2, #1
 8013630:	d481      	bmi.n	8013536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013632:	4553      	cmp	r3, sl
 8013634:	f6ff af7f 	blt.w	8013536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013638:	f11c 0a01 	adds.w	sl, ip, #1
 801363c:	f53f af7b 	bmi.w	8013536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013640:	45d6      	cmp	lr, sl
 8013642:	f6ff af78 	blt.w	8013536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013646:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801364a:	b21b      	sxth	r3, r3
 801364c:	fa0f f28e 	sxth.w	r2, lr
 8013650:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013654:	9201      	str	r2, [sp, #4]
 8013656:	9300      	str	r3, [sp, #0]
 8013658:	9a07      	ldr	r2, [sp, #28]
 801365a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801365c:	463b      	mov	r3, r7
 801365e:	4641      	mov	r1, r8
 8013660:	f7ff fdfe 	bl	8013260 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8013664:	e767      	b.n	8013536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8013666:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013668:	9d07      	ldr	r5, [sp, #28]
 801366a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801366e:	1422      	asrs	r2, r4, #16
 8013670:	1431      	asrs	r1, r6, #16
 8013672:	fb03 2101 	mla	r1, r3, r1, r2
 8013676:	9a07      	ldr	r2, [sp, #28]
 8013678:	440a      	add	r2, r1
 801367a:	5c69      	ldrb	r1, [r5, r1]
 801367c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8013680:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8013684:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8013688:	f1be 0f00 	cmp.w	lr, #0
 801368c:	d05c      	beq.n	8013748 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801368e:	f892 c001 	ldrb.w	ip, [r2, #1]
 8013692:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8013696:	950d      	str	r5, [sp, #52]	; 0x34
 8013698:	b150      	cbz	r0, 80136b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801369a:	eb02 0c03 	add.w	ip, r2, r3
 801369e:	5cd3      	ldrb	r3, [r2, r3]
 80136a0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80136a4:	930a      	str	r3, [sp, #40]	; 0x28
 80136a6:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80136aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80136ae:	930e      	str	r3, [sp, #56]	; 0x38
 80136b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80136b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80136b4:	fb1e f200 	smulbb	r2, lr, r0
 80136b8:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80136bc:	10d2      	asrs	r2, r2, #3
 80136be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80136c2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80136c6:	ea4c 0c03 	orr.w	ip, ip, r3
 80136ca:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80136ce:	9311      	str	r3, [sp, #68]	; 0x44
 80136d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80136d2:	041b      	lsls	r3, r3, #16
 80136d4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80136d8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80136dc:	ea43 030b 	orr.w	r3, r3, fp
 80136e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80136e2:	4353      	muls	r3, r2
 80136e4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80136e8:	fb05 3c0c 	mla	ip, r5, ip, r3
 80136ec:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80136f0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80136f4:	ea43 0b01 	orr.w	fp, r3, r1
 80136f8:	f1c0 0110 	rsb	r1, r0, #16
 80136fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80136fe:	eba1 0e0e 	sub.w	lr, r1, lr
 8013702:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8013706:	fb0e cc0b 	mla	ip, lr, fp, ip
 801370a:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801370e:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8013712:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8013716:	ea4b 0e0e 	orr.w	lr, fp, lr
 801371a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801371e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8013722:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8013726:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801372a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801372e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8013732:	ea43 0c0c 	orr.w	ip, r3, ip
 8013736:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013738:	f82a cb02 	strh.w	ip, [sl], #2
 801373c:	441c      	add	r4, r3
 801373e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013740:	f108 38ff 	add.w	r8, r8, #4294967295
 8013744:	441e      	add	r6, r3
 8013746:	e723      	b.n	8013590 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8013748:	2800      	cmp	r0, #0
 801374a:	d0b1      	beq.n	80136b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 801374c:	5cd3      	ldrb	r3, [r2, r3]
 801374e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013752:	930a      	str	r3, [sp, #40]	; 0x28
 8013754:	e7ac      	b.n	80136b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8013756:	b013      	add	sp, #76	; 0x4c
 8013758:	ecbd 8b0a 	vpop	{d8-d12}
 801375c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8013760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013764:	468b      	mov	fp, r1
 8013766:	8809      	ldrh	r1, [r1, #0]
 8013768:	b089      	sub	sp, #36	; 0x24
 801376a:	10cd      	asrs	r5, r1, #3
 801376c:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8013770:	ea4f 2921 	mov.w	r9, r1, asr #8
 8013774:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013778:	00c9      	lsls	r1, r1, #3
 801377a:	9500      	str	r5, [sp, #0]
 801377c:	b2c9      	uxtb	r1, r1
 801377e:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8013782:	9101      	str	r1, [sp, #4]
 8013784:	9900      	ldr	r1, [sp, #0]
 8013786:	9202      	str	r2, [sp, #8]
 8013788:	fb04 650e 	mla	r5, r4, lr, r6
 801378c:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8013790:	eb02 0805 	add.w	r8, r2, r5
 8013794:	0209      	lsls	r1, r1, #8
 8013796:	9a01      	ldr	r2, [sp, #4]
 8013798:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 801379c:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80137a0:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80137a4:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80137a8:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80137ac:	4311      	orrs	r1, r2
 80137ae:	2c00      	cmp	r4, #0
 80137b0:	9107      	str	r1, [sp, #28]
 80137b2:	db43      	blt.n	801383c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80137b4:	45a2      	cmp	sl, r4
 80137b6:	dd41      	ble.n	801383c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80137b8:	2e00      	cmp	r6, #0
 80137ba:	db3d      	blt.n	8013838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80137bc:	45b6      	cmp	lr, r6
 80137be:	dd3b      	ble.n	8013838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80137c0:	9a02      	ldr	r2, [sp, #8]
 80137c2:	5d55      	ldrb	r5, [r2, r5]
 80137c4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80137c8:	441d      	add	r5, r3
 80137ca:	1c72      	adds	r2, r6, #1
 80137cc:	d439      	bmi.n	8013842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80137ce:	4596      	cmp	lr, r2
 80137d0:	dd37      	ble.n	8013842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80137d2:	2f00      	cmp	r7, #0
 80137d4:	d035      	beq.n	8013842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 80137d6:	f898 1001 	ldrb.w	r1, [r8, #1]
 80137da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80137de:	4419      	add	r1, r3
 80137e0:	3401      	adds	r4, #1
 80137e2:	d432      	bmi.n	801384a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80137e4:	45a2      	cmp	sl, r4
 80137e6:	dd30      	ble.n	801384a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80137e8:	b378      	cbz	r0, 801384a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 80137ea:	2e00      	cmp	r6, #0
 80137ec:	db2b      	blt.n	8013846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80137ee:	45b6      	cmp	lr, r6
 80137f0:	dd29      	ble.n	8013846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 80137f2:	f818 400e 	ldrb.w	r4, [r8, lr]
 80137f6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80137fa:	441c      	add	r4, r3
 80137fc:	3601      	adds	r6, #1
 80137fe:	d427      	bmi.n	8013850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013800:	45b6      	cmp	lr, r6
 8013802:	dd25      	ble.n	8013850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013804:	b327      	cbz	r7, 8013850 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013806:	44c6      	add	lr, r8
 8013808:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801380c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013810:	4413      	add	r3, r2
 8013812:	782a      	ldrb	r2, [r5, #0]
 8013814:	9202      	str	r2, [sp, #8]
 8013816:	780a      	ldrb	r2, [r1, #0]
 8013818:	9203      	str	r2, [sp, #12]
 801381a:	7822      	ldrb	r2, [r4, #0]
 801381c:	9204      	str	r2, [sp, #16]
 801381e:	2f0f      	cmp	r7, #15
 8013820:	781a      	ldrb	r2, [r3, #0]
 8013822:	9205      	str	r2, [sp, #20]
 8013824:	d801      	bhi.n	801382a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8013826:	280f      	cmp	r0, #15
 8013828:	d914      	bls.n	8013854 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 801382a:	4b3f      	ldr	r3, [pc, #252]	; (8013928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 801382c:	4a3f      	ldr	r2, [pc, #252]	; (801392c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801382e:	4840      	ldr	r0, [pc, #256]	; (8013930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8013830:	f240 210d 	movw	r1, #525	; 0x20d
 8013834:	f006 fb04 	bl	8019e40 <__assert_func>
 8013838:	ad07      	add	r5, sp, #28
 801383a:	e7c6      	b.n	80137ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 801383c:	a907      	add	r1, sp, #28
 801383e:	460d      	mov	r5, r1
 8013840:	e7ce      	b.n	80137e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013842:	a907      	add	r1, sp, #28
 8013844:	e7cc      	b.n	80137e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013846:	ac07      	add	r4, sp, #28
 8013848:	e7d8      	b.n	80137fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 801384a:	ab07      	add	r3, sp, #28
 801384c:	461c      	mov	r4, r3
 801384e:	e7e0      	b.n	8013812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013850:	ab07      	add	r3, sp, #28
 8013852:	e7de      	b.n	8013812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8013854:	b2ba      	uxth	r2, r7
 8013856:	b280      	uxth	r0, r0
 8013858:	fb02 fa00 	mul.w	sl, r2, r0
 801385c:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8013860:	0112      	lsls	r2, r2, #4
 8013862:	b280      	uxth	r0, r0
 8013864:	f891 8002 	ldrb.w	r8, [r1, #2]
 8013868:	7849      	ldrb	r1, [r1, #1]
 801386a:	78ae      	ldrb	r6, [r5, #2]
 801386c:	786d      	ldrb	r5, [r5, #1]
 801386e:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8013872:	eba2 020a 	sub.w	r2, r2, sl
 8013876:	b292      	uxth	r2, r2
 8013878:	ebae 0e00 	sub.w	lr, lr, r0
 801387c:	fa1f fe8e 	uxth.w	lr, lr
 8013880:	4351      	muls	r1, r2
 8013882:	fb02 f808 	mul.w	r8, r2, r8
 8013886:	fb0e 8806 	mla	r8, lr, r6, r8
 801388a:	fb0e 1505 	mla	r5, lr, r5, r1
 801388e:	78a6      	ldrb	r6, [r4, #2]
 8013890:	7861      	ldrb	r1, [r4, #1]
 8013892:	fa1f f78c 	uxth.w	r7, ip
 8013896:	fb00 8806 	mla	r8, r0, r6, r8
 801389a:	fb00 5501 	mla	r5, r0, r1, r5
 801389e:	789e      	ldrb	r6, [r3, #2]
 80138a0:	7859      	ldrb	r1, [r3, #1]
 80138a2:	9b00      	ldr	r3, [sp, #0]
 80138a4:	ea6f 0c0c 	mvn.w	ip, ip
 80138a8:	fa5f fc8c 	uxtb.w	ip, ip
 80138ac:	fb0a 5101 	mla	r1, sl, r1, r5
 80138b0:	fb13 f50c 	smulbb	r5, r3, ip
 80138b4:	9b03      	ldr	r3, [sp, #12]
 80138b6:	435a      	muls	r2, r3
 80138b8:	9b02      	ldr	r3, [sp, #8]
 80138ba:	fb0e 2203 	mla	r2, lr, r3, r2
 80138be:	9b04      	ldr	r3, [sp, #16]
 80138c0:	fb00 2003 	mla	r0, r0, r3, r2
 80138c4:	9b05      	ldr	r3, [sp, #20]
 80138c6:	fb0a 8606 	mla	r6, sl, r6, r8
 80138ca:	fb0a 0a03 	mla	sl, sl, r3, r0
 80138ce:	9b01      	ldr	r3, [sp, #4]
 80138d0:	fb19 f90c 	smulbb	r9, r9, ip
 80138d4:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 80138d8:	fb13 fc0c 	smulbb	ip, r3, ip
 80138dc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80138e0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80138e4:	fb06 9607 	mla	r6, r6, r7, r9
 80138e8:	fb01 5107 	mla	r1, r1, r7, r5
 80138ec:	fb0a c707 	mla	r7, sl, r7, ip
 80138f0:	b2b6      	uxth	r6, r6
 80138f2:	b289      	uxth	r1, r1
 80138f4:	b2bf      	uxth	r7, r7
 80138f6:	f106 0901 	add.w	r9, r6, #1
 80138fa:	f107 0c01 	add.w	ip, r7, #1
 80138fe:	1c4d      	adds	r5, r1, #1
 8013900:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013904:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8013908:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 801390c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013910:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013914:	0949      	lsrs	r1, r1, #5
 8013916:	433e      	orrs	r6, r7
 8013918:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801391c:	430e      	orrs	r6, r1
 801391e:	f8ab 6000 	strh.w	r6, [fp]
 8013922:	b009      	add	sp, #36	; 0x24
 8013924:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013928:	0801d907 	.word	0x0801d907
 801392c:	0801dec5 	.word	0x0801dec5
 8013930:	0801d9f0 	.word	0x0801d9f0

08013934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013938:	ed2d 8b08 	vpush	{d8-d11}
 801393c:	b095      	sub	sp, #84	; 0x54
 801393e:	eeb0 aa40 	vmov.f32	s20, s0
 8013942:	9212      	str	r2, [sp, #72]	; 0x48
 8013944:	9309      	str	r3, [sp, #36]	; 0x24
 8013946:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013948:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801394c:	930f      	str	r3, [sp, #60]	; 0x3c
 801394e:	910e      	str	r1, [sp, #56]	; 0x38
 8013950:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8013954:	9013      	str	r0, [sp, #76]	; 0x4c
 8013956:	6850      	ldr	r0, [r2, #4]
 8013958:	6812      	ldr	r2, [r2, #0]
 801395a:	fb00 1303 	mla	r3, r0, r3, r1
 801395e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013962:	930a      	str	r3, [sp, #40]	; 0x28
 8013964:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013966:	681b      	ldr	r3, [r3, #0]
 8013968:	930d      	str	r3, [sp, #52]	; 0x34
 801396a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801396c:	685c      	ldr	r4, [r3, #4]
 801396e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013970:	43db      	mvns	r3, r3
 8013972:	b2db      	uxtb	r3, r3
 8013974:	eef0 9a60 	vmov.f32	s19, s1
 8013978:	eeb0 9a41 	vmov.f32	s18, s2
 801397c:	eeb0 8a62 	vmov.f32	s16, s5
 8013980:	eef0 8a43 	vmov.f32	s17, s6
 8013984:	eef0 ba44 	vmov.f32	s23, s8
 8013988:	eeb0 ba64 	vmov.f32	s22, s9
 801398c:	eef0 aa45 	vmov.f32	s21, s10
 8013990:	3404      	adds	r4, #4
 8013992:	930b      	str	r3, [sp, #44]	; 0x2c
 8013994:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013996:	2b00      	cmp	r3, #0
 8013998:	dc03      	bgt.n	80139a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801399a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801399c:	2b00      	cmp	r3, #0
 801399e:	f340 8258 	ble.w	8013e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 80139a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80139a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80139a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80139ac:	1e48      	subs	r0, r1, #1
 80139ae:	1e55      	subs	r5, r2, #1
 80139b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139b2:	2b00      	cmp	r3, #0
 80139b4:	f340 80fc 	ble.w	8013bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80139b8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 80139ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139bc:	1436      	asrs	r6, r6, #16
 80139be:	ea4f 4323 	mov.w	r3, r3, asr #16
 80139c2:	d406      	bmi.n	80139d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80139c4:	4286      	cmp	r6, r0
 80139c6:	da04      	bge.n	80139d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80139c8:	2b00      	cmp	r3, #0
 80139ca:	db02      	blt.n	80139d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80139cc:	42ab      	cmp	r3, r5
 80139ce:	f2c0 80f0 	blt.w	8013bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80139d2:	3601      	adds	r6, #1
 80139d4:	f100 80dd 	bmi.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80139d8:	42b1      	cmp	r1, r6
 80139da:	f2c0 80da 	blt.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80139de:	3301      	adds	r3, #1
 80139e0:	f100 80d7 	bmi.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80139e4:	429a      	cmp	r2, r3
 80139e6:	f2c0 80d4 	blt.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 80139ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139ec:	9311      	str	r3, [sp, #68]	; 0x44
 80139ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80139f0:	930c      	str	r3, [sp, #48]	; 0x30
 80139f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80139f4:	2b00      	cmp	r3, #0
 80139f6:	f340 80fd 	ble.w	8013bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 80139fa:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80139fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139fe:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013a00:	68c6      	ldr	r6, [r0, #12]
 8013a02:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8013a04:	141d      	asrs	r5, r3, #16
 8013a06:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013a0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013a0c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013a0e:	1400      	asrs	r0, r0, #16
 8013a10:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013a14:	6892      	ldr	r2, [r2, #8]
 8013a16:	f100 8141 	bmi.w	8013c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8013a1a:	1e57      	subs	r7, r2, #1
 8013a1c:	42b8      	cmp	r0, r7
 8013a1e:	f280 813d 	bge.w	8013c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8013a22:	2d00      	cmp	r5, #0
 8013a24:	f2c0 813a 	blt.w	8013c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8013a28:	1e77      	subs	r7, r6, #1
 8013a2a:	42bd      	cmp	r5, r7
 8013a2c:	f280 8136 	bge.w	8013c9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8013a30:	b212      	sxth	r2, r2
 8013a32:	fb05 0002 	mla	r0, r5, r2, r0
 8013a36:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013a38:	f815 a000 	ldrb.w	sl, [r5, r0]
 8013a3c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8013a40:	182e      	adds	r6, r5, r0
 8013a42:	eb04 050a 	add.w	r5, r4, sl
 8013a46:	2b00      	cmp	r3, #0
 8013a48:	f000 811a 	beq.w	8013c80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8013a4c:	f896 c001 	ldrb.w	ip, [r6, #1]
 8013a50:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013a54:	44a4      	add	ip, r4
 8013a56:	2900      	cmp	r1, #0
 8013a58:	f000 811a 	beq.w	8013c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8013a5c:	18b0      	adds	r0, r6, r2
 8013a5e:	5cb2      	ldrb	r2, [r6, r2]
 8013a60:	7840      	ldrb	r0, [r0, #1]
 8013a62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a66:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013a6a:	4422      	add	r2, r4
 8013a6c:	4420      	add	r0, r4
 8013a6e:	b29b      	uxth	r3, r3
 8013a70:	b289      	uxth	r1, r1
 8013a72:	fb03 f901 	mul.w	r9, r3, r1
 8013a76:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013a7a:	011b      	lsls	r3, r3, #4
 8013a7c:	b289      	uxth	r1, r1
 8013a7e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8013a82:	f895 b002 	ldrb.w	fp, [r5, #2]
 8013a86:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8013a88:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8013a8c:	f8b6 e000 	ldrh.w	lr, [r6]
 8013a90:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8013a94:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8013a98:	eba3 0309 	sub.w	r3, r3, r9
 8013a9c:	b29b      	uxth	r3, r3
 8013a9e:	eba8 0801 	sub.w	r8, r8, r1
 8013aa2:	fa1f f888 	uxth.w	r8, r8
 8013aa6:	435f      	muls	r7, r3
 8013aa8:	fb08 770b 	mla	r7, r8, fp, r7
 8013aac:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013ab0:	9310      	str	r3, [sp, #64]	; 0x40
 8013ab2:	fb01 770b 	mla	r7, r1, fp, r7
 8013ab6:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013aba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013abc:	fb09 770b 	mla	r7, r9, fp, r7
 8013ac0:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8013ac4:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013ac8:	fb1b fb03 	smulbb	fp, fp, r3
 8013acc:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013ad0:	fb07 b706 	mla	r7, r7, r6, fp
 8013ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ad6:	f895 b001 	ldrb.w	fp, [r5, #1]
 8013ada:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8013ade:	f89c c000 	ldrb.w	ip, [ip]
 8013ae2:	435d      	muls	r5, r3
 8013ae4:	fb08 550b 	mla	r5, r8, fp, r5
 8013ae8:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013aec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013aee:	fb01 550b 	mla	r5, r1, fp, r5
 8013af2:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013af6:	fb09 550b 	mla	r5, r9, fp, r5
 8013afa:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8013afe:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013b02:	fb1b fb03 	smulbb	fp, fp, r3
 8013b06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013b08:	fb03 f30c 	mul.w	r3, r3, ip
 8013b0c:	f892 c000 	ldrb.w	ip, [r2]
 8013b10:	fb08 330a 	mla	r3, r8, sl, r3
 8013b14:	fb01 330c 	mla	r3, r1, ip, r3
 8013b18:	f890 c000 	ldrb.w	ip, [r0]
 8013b1c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013b20:	fb09 3c0c 	mla	ip, r9, ip, r3
 8013b24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013b26:	fa5f fe8e 	uxtb.w	lr, lr
 8013b2a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8013b2e:	fb1e fe03 	smulbb	lr, lr, r3
 8013b32:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8013b36:	fb05 b506 	mla	r5, r5, r6, fp
 8013b3a:	fb0c ee06 	mla	lr, ip, r6, lr
 8013b3e:	b2bf      	uxth	r7, r7
 8013b40:	b2ad      	uxth	r5, r5
 8013b42:	fa1f fe8e 	uxth.w	lr, lr
 8013b46:	1c7a      	adds	r2, r7, #1
 8013b48:	f10e 0c01 	add.w	ip, lr, #1
 8013b4c:	f105 0b01 	add.w	fp, r5, #1
 8013b50:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013b54:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 8013b58:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8013b5c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013b60:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013b64:	096d      	lsrs	r5, r5, #5
 8013b66:	ea47 070e 	orr.w	r7, r7, lr
 8013b6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013b6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b70:	433d      	orrs	r5, r7
 8013b72:	801d      	strh	r5, [r3, #0]
 8013b74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b76:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013b78:	3302      	adds	r3, #2
 8013b7a:	930c      	str	r3, [sp, #48]	; 0x30
 8013b7c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013b7e:	4413      	add	r3, r2
 8013b80:	9327      	str	r3, [sp, #156]	; 0x9c
 8013b82:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013b84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013b86:	4413      	add	r3, r2
 8013b88:	9328      	str	r3, [sp, #160]	; 0xa0
 8013b8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013b8c:	3b01      	subs	r3, #1
 8013b8e:	9311      	str	r3, [sp, #68]	; 0x44
 8013b90:	e72f      	b.n	80139f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8013b92:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013b94:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8013b96:	4433      	add	r3, r6
 8013b98:	9327      	str	r3, [sp, #156]	; 0x9c
 8013b9a:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8013b9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013b9e:	4433      	add	r3, r6
 8013ba0:	9328      	str	r3, [sp, #160]	; 0xa0
 8013ba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ba4:	3b01      	subs	r3, #1
 8013ba6:	9309      	str	r3, [sp, #36]	; 0x24
 8013ba8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013baa:	3302      	adds	r3, #2
 8013bac:	930a      	str	r3, [sp, #40]	; 0x28
 8013bae:	e6ff      	b.n	80139b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013bb0:	d027      	beq.n	8013c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8013bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bb4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8013bb6:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8013bb8:	3b01      	subs	r3, #1
 8013bba:	fb00 5003 	mla	r0, r0, r3, r5
 8013bbe:	1400      	asrs	r0, r0, #16
 8013bc0:	f53f af13 	bmi.w	80139ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013bc4:	3901      	subs	r1, #1
 8013bc6:	4288      	cmp	r0, r1
 8013bc8:	f6bf af0f 	bge.w	80139ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013bcc:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013bce:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8013bd0:	fb01 0303 	mla	r3, r1, r3, r0
 8013bd4:	141b      	asrs	r3, r3, #16
 8013bd6:	f53f af08 	bmi.w	80139ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013bda:	3a01      	subs	r2, #1
 8013bdc:	4293      	cmp	r3, r2
 8013bde:	f6bf af04 	bge.w	80139ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013be4:	9311      	str	r3, [sp, #68]	; 0x44
 8013be6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8013bea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013bec:	930c      	str	r3, [sp, #48]	; 0x30
 8013bee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013bf0:	2b00      	cmp	r3, #0
 8013bf2:	dc70      	bgt.n	8013cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 8013bf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013bf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013bf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013bfc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013c00:	930a      	str	r3, [sp, #40]	; 0x28
 8013c02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c04:	2b00      	cmp	r3, #0
 8013c06:	f340 8124 	ble.w	8013e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8013c0a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013c0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013c12:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013c16:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c18:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013c1c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013c20:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013c24:	eef0 6a48 	vmov.f32	s13, s16
 8013c28:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013c2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c30:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013c34:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8013c38:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013c3c:	eef0 6a68 	vmov.f32	s13, s17
 8013c40:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013c44:	ee18 2a10 	vmov	r2, s16
 8013c48:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013c4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c50:	ee18 2a90 	vmov	r2, s17
 8013c54:	9329      	str	r3, [sp, #164]	; 0xa4
 8013c56:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c58:	fb92 f3f3 	sdiv	r3, r2, r3
 8013c5c:	932a      	str	r3, [sp, #168]	; 0xa8
 8013c5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c60:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013c62:	3b01      	subs	r3, #1
 8013c64:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013c68:	930e      	str	r3, [sp, #56]	; 0x38
 8013c6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c6c:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8013c70:	bf08      	it	eq
 8013c72:	4613      	moveq	r3, r2
 8013c74:	9309      	str	r3, [sp, #36]	; 0x24
 8013c76:	eef0 8a67 	vmov.f32	s17, s15
 8013c7a:	eeb0 8a47 	vmov.f32	s16, s14
 8013c7e:	e689      	b.n	8013994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8013c80:	b149      	cbz	r1, 8013c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013c82:	5cb2      	ldrb	r2, [r6, r2]
 8013c84:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013c88:	4422      	add	r2, r4
 8013c8a:	4628      	mov	r0, r5
 8013c8c:	46ac      	mov	ip, r5
 8013c8e:	e6ee      	b.n	8013a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013c90:	4628      	mov	r0, r5
 8013c92:	462a      	mov	r2, r5
 8013c94:	e6eb      	b.n	8013a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8013c96:	4628      	mov	r0, r5
 8013c98:	462a      	mov	r2, r5
 8013c9a:	e7f7      	b.n	8013c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8013c9c:	1c47      	adds	r7, r0, #1
 8013c9e:	f53f af69 	bmi.w	8013b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8013ca2:	42ba      	cmp	r2, r7
 8013ca4:	f6ff af66 	blt.w	8013b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8013ca8:	1c6f      	adds	r7, r5, #1
 8013caa:	f53f af63 	bmi.w	8013b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8013cae:	42be      	cmp	r6, r7
 8013cb0:	f6ff af60 	blt.w	8013b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8013cb4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013cb6:	9002      	str	r0, [sp, #8]
 8013cb8:	b236      	sxth	r6, r6
 8013cba:	b212      	sxth	r2, r2
 8013cbc:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8013cc0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8013cc4:	9200      	str	r2, [sp, #0]
 8013cc6:	9601      	str	r6, [sp, #4]
 8013cc8:	4623      	mov	r3, r4
 8013cca:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8013cce:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8013cd0:	f7ff fd46 	bl	8013760 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8013cd4:	e74e      	b.n	8013b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8013cd6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013cd8:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8013cda:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8013cdc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013cde:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013ce2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013ce4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8013ce8:	142d      	asrs	r5, r5, #16
 8013cea:	1400      	asrs	r0, r0, #16
 8013cec:	fb02 5000 	mla	r0, r2, r0, r5
 8013cf0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013cf2:	f815 9000 	ldrb.w	r9, [r5, r0]
 8013cf6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013cfa:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8013cfe:	182e      	adds	r6, r5, r0
 8013d00:	eb04 0509 	add.w	r5, r4, r9
 8013d04:	2b00      	cmp	r3, #0
 8013d06:	f000 8096 	beq.w	8013e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 8013d0a:	7877      	ldrb	r7, [r6, #1]
 8013d0c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013d10:	4427      	add	r7, r4
 8013d12:	2900      	cmp	r1, #0
 8013d14:	f000 8097 	beq.w	8013e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8013d18:	18b0      	adds	r0, r6, r2
 8013d1a:	5cb2      	ldrb	r2, [r6, r2]
 8013d1c:	7840      	ldrb	r0, [r0, #1]
 8013d1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013d22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013d26:	4422      	add	r2, r4
 8013d28:	4420      	add	r0, r4
 8013d2a:	b29b      	uxth	r3, r3
 8013d2c:	b289      	uxth	r1, r1
 8013d2e:	fb03 f801 	mul.w	r8, r3, r1
 8013d32:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8013d34:	f895 b002 	ldrb.w	fp, [r5, #2]
 8013d38:	f8b6 c000 	ldrh.w	ip, [r6]
 8013d3c:	78be      	ldrb	r6, [r7, #2]
 8013d3e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8013d42:	011b      	lsls	r3, r3, #4
 8013d44:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8013d48:	b289      	uxth	r1, r1
 8013d4a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013d4e:	eba3 0308 	sub.w	r3, r3, r8
 8013d52:	b29b      	uxth	r3, r3
 8013d54:	ebae 0e01 	sub.w	lr, lr, r1
 8013d58:	fa1f fe8e 	uxth.w	lr, lr
 8013d5c:	435e      	muls	r6, r3
 8013d5e:	fb0e 660b 	mla	r6, lr, fp, r6
 8013d62:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013d66:	9310      	str	r3, [sp, #64]	; 0x40
 8013d68:	fb01 660b 	mla	r6, r1, fp, r6
 8013d6c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013d70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013d72:	fb08 660b 	mla	r6, r8, fp, r6
 8013d76:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8013d7a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013d7e:	fb1b fb03 	smulbb	fp, fp, r3
 8013d82:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013d86:	fb06 b60a 	mla	r6, r6, sl, fp
 8013d8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013d8c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8013d90:	787d      	ldrb	r5, [r7, #1]
 8013d92:	783f      	ldrb	r7, [r7, #0]
 8013d94:	435d      	muls	r5, r3
 8013d96:	fb0e 550b 	mla	r5, lr, fp, r5
 8013d9a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013d9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013da0:	fb01 550b 	mla	r5, r1, fp, r5
 8013da4:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013da8:	fb08 550b 	mla	r5, r8, fp, r5
 8013dac:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8013db0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013db4:	fb1b fb03 	smulbb	fp, fp, r3
 8013db8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013dba:	437b      	muls	r3, r7
 8013dbc:	7817      	ldrb	r7, [r2, #0]
 8013dbe:	fb0e 3309 	mla	r3, lr, r9, r3
 8013dc2:	fb01 3307 	mla	r3, r1, r7, r3
 8013dc6:	7807      	ldrb	r7, [r0, #0]
 8013dc8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013dcc:	fb08 3707 	mla	r7, r8, r7, r3
 8013dd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013dd2:	fa5f fc8c 	uxtb.w	ip, ip
 8013dd6:	fb1c fc03 	smulbb	ip, ip, r3
 8013dda:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8013dde:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013de2:	fb05 b50a 	mla	r5, r5, sl, fp
 8013de6:	fb07 c70a 	mla	r7, r7, sl, ip
 8013dea:	b2b6      	uxth	r6, r6
 8013dec:	b2ad      	uxth	r5, r5
 8013dee:	b2bf      	uxth	r7, r7
 8013df0:	1c73      	adds	r3, r6, #1
 8013df2:	1c7a      	adds	r2, r7, #1
 8013df4:	f105 0b01 	add.w	fp, r5, #1
 8013df8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8013dfc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8013e00:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8013e04:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013e08:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013e0c:	096d      	lsrs	r5, r5, #5
 8013e0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013e10:	4316      	orrs	r6, r2
 8013e12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013e16:	432e      	orrs	r6, r5
 8013e18:	f823 6b02 	strh.w	r6, [r3], #2
 8013e1c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013e1e:	930c      	str	r3, [sp, #48]	; 0x30
 8013e20:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013e22:	4413      	add	r3, r2
 8013e24:	9327      	str	r3, [sp, #156]	; 0x9c
 8013e26:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013e28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013e2a:	4413      	add	r3, r2
 8013e2c:	9328      	str	r3, [sp, #160]	; 0xa0
 8013e2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013e30:	3b01      	subs	r3, #1
 8013e32:	9311      	str	r3, [sp, #68]	; 0x44
 8013e34:	e6db      	b.n	8013bee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013e36:	b149      	cbz	r1, 8013e4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8013e38:	5cb2      	ldrb	r2, [r6, r2]
 8013e3a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013e3e:	4422      	add	r2, r4
 8013e40:	4628      	mov	r0, r5
 8013e42:	462f      	mov	r7, r5
 8013e44:	e771      	b.n	8013d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8013e46:	4628      	mov	r0, r5
 8013e48:	462a      	mov	r2, r5
 8013e4a:	e76e      	b.n	8013d2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8013e4c:	4628      	mov	r0, r5
 8013e4e:	462a      	mov	r2, r5
 8013e50:	e7f7      	b.n	8013e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 8013e52:	b015      	add	sp, #84	; 0x54
 8013e54:	ecbd 8b08 	vpop	{d8-d11}
 8013e58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8013e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e60:	880e      	ldrh	r6, [r1, #0]
 8013e62:	b085      	sub	sp, #20
 8013e64:	0230      	lsls	r0, r6, #8
 8013e66:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8013e6a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8013e6e:	0170      	lsls	r0, r6, #5
 8013e70:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013e74:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8013e78:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8013e7c:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8013e80:	00f6      	lsls	r6, r6, #3
 8013e82:	ea4b 0000 	orr.w	r0, fp, r0
 8013e86:	b2f6      	uxtb	r6, r6
 8013e88:	4691      	mov	r9, r2
 8013e8a:	fb05 7a0c 	mla	sl, r5, ip, r7
 8013e8e:	4306      	orrs	r6, r0
 8013e90:	2d00      	cmp	r5, #0
 8013e92:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8013e96:	9603      	str	r6, [sp, #12]
 8013e98:	eb09 0e0a 	add.w	lr, r9, sl
 8013e9c:	db42      	blt.n	8013f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8013e9e:	45a8      	cmp	r8, r5
 8013ea0:	dd40      	ble.n	8013f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8013ea2:	2f00      	cmp	r7, #0
 8013ea4:	db3c      	blt.n	8013f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8013ea6:	45bc      	cmp	ip, r7
 8013ea8:	dd3a      	ble.n	8013f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8013eaa:	f819 600a 	ldrb.w	r6, [r9, sl]
 8013eae:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013eb2:	441e      	add	r6, r3
 8013eb4:	1c78      	adds	r0, r7, #1
 8013eb6:	d438      	bmi.n	8013f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013eb8:	4584      	cmp	ip, r0
 8013eba:	dd36      	ble.n	8013f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013ebc:	b3aa      	cbz	r2, 8013f2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013ebe:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013ec2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013ec6:	4418      	add	r0, r3
 8013ec8:	3501      	adds	r5, #1
 8013eca:	d432      	bmi.n	8013f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013ecc:	45a8      	cmp	r8, r5
 8013ece:	dd30      	ble.n	8013f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013ed0:	b37c      	cbz	r4, 8013f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013ed2:	2f00      	cmp	r7, #0
 8013ed4:	db2b      	blt.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8013ed6:	45bc      	cmp	ip, r7
 8013ed8:	dd29      	ble.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8013eda:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8013ede:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013ee2:	441d      	add	r5, r3
 8013ee4:	3701      	adds	r7, #1
 8013ee6:	d427      	bmi.n	8013f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013ee8:	45bc      	cmp	ip, r7
 8013eea:	dd25      	ble.n	8013f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013eec:	b322      	cbz	r2, 8013f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013eee:	44f4      	add	ip, lr
 8013ef0:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8013ef4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013ef8:	443b      	add	r3, r7
 8013efa:	781f      	ldrb	r7, [r3, #0]
 8013efc:	f896 a000 	ldrb.w	sl, [r6]
 8013f00:	f890 b000 	ldrb.w	fp, [r0]
 8013f04:	f895 9000 	ldrb.w	r9, [r5]
 8013f08:	9700      	str	r7, [sp, #0]
 8013f0a:	2a0f      	cmp	r2, #15
 8013f0c:	d801      	bhi.n	8013f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8013f0e:	2c0f      	cmp	r4, #15
 8013f10:	d914      	bls.n	8013f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8013f12:	4b2c      	ldr	r3, [pc, #176]	; (8013fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8013f14:	4a2c      	ldr	r2, [pc, #176]	; (8013fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8013f16:	482d      	ldr	r0, [pc, #180]	; (8013fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8013f18:	f240 210d 	movw	r1, #525	; 0x20d
 8013f1c:	f005 ff90 	bl	8019e40 <__assert_func>
 8013f20:	ae03      	add	r6, sp, #12
 8013f22:	e7c7      	b.n	8013eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8013f24:	a803      	add	r0, sp, #12
 8013f26:	4606      	mov	r6, r0
 8013f28:	e7ce      	b.n	8013ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8013f2a:	a803      	add	r0, sp, #12
 8013f2c:	e7cc      	b.n	8013ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8013f2e:	ad03      	add	r5, sp, #12
 8013f30:	e7d8      	b.n	8013ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8013f32:	ab03      	add	r3, sp, #12
 8013f34:	461d      	mov	r5, r3
 8013f36:	e7e0      	b.n	8013efa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013f38:	ab03      	add	r3, sp, #12
 8013f3a:	e7de      	b.n	8013efa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013f3c:	b292      	uxth	r2, r2
 8013f3e:	b2a4      	uxth	r4, r4
 8013f40:	fb02 f804 	mul.w	r8, r2, r4
 8013f44:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8013f48:	0112      	lsls	r2, r2, #4
 8013f4a:	b2a4      	uxth	r4, r4
 8013f4c:	f890 e002 	ldrb.w	lr, [r0, #2]
 8013f50:	78b7      	ldrb	r7, [r6, #2]
 8013f52:	7840      	ldrb	r0, [r0, #1]
 8013f54:	7876      	ldrb	r6, [r6, #1]
 8013f56:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8013f5a:	eba2 0208 	sub.w	r2, r2, r8
 8013f5e:	b292      	uxth	r2, r2
 8013f60:	ebac 0c04 	sub.w	ip, ip, r4
 8013f64:	fa1f fc8c 	uxth.w	ip, ip
 8013f68:	fb02 fe0e 	mul.w	lr, r2, lr
 8013f6c:	fb0c ee07 	mla	lr, ip, r7, lr
 8013f70:	78af      	ldrb	r7, [r5, #2]
 8013f72:	fb04 ee07 	mla	lr, r4, r7, lr
 8013f76:	789f      	ldrb	r7, [r3, #2]
 8013f78:	785b      	ldrb	r3, [r3, #1]
 8013f7a:	fb08 e707 	mla	r7, r8, r7, lr
 8013f7e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013f82:	fb02 fe0b 	mul.w	lr, r2, fp
 8013f86:	4342      	muls	r2, r0
 8013f88:	7868      	ldrb	r0, [r5, #1]
 8013f8a:	9701      	str	r7, [sp, #4]
 8013f8c:	fb0c ee0a 	mla	lr, ip, sl, lr
 8013f90:	9f00      	ldr	r7, [sp, #0]
 8013f92:	fb0c 2206 	mla	r2, ip, r6, r2
 8013f96:	fb04 ee09 	mla	lr, r4, r9, lr
 8013f9a:	fb04 2400 	mla	r4, r4, r0, r2
 8013f9e:	fb08 ee07 	mla	lr, r8, r7, lr
 8013fa2:	9f01      	ldr	r7, [sp, #4]
 8013fa4:	fb08 4803 	mla	r8, r8, r3, r4
 8013fa8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013fac:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013fb0:	ea47 070e 	orr.w	r7, r7, lr
 8013fb4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013fb8:	ea47 0708 	orr.w	r7, r7, r8
 8013fbc:	800f      	strh	r7, [r1, #0]
 8013fbe:	b005      	add	sp, #20
 8013fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013fc4:	0801d907 	.word	0x0801d907
 8013fc8:	0801dec5 	.word	0x0801dec5
 8013fcc:	0801d9f0 	.word	0x0801d9f0

08013fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013fd4:	ed2d 8b08 	vpush	{d8-d11}
 8013fd8:	b08f      	sub	sp, #60	; 0x3c
 8013fda:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8013fde:	920c      	str	r2, [sp, #48]	; 0x30
 8013fe0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013fe2:	910a      	str	r1, [sp, #40]	; 0x28
 8013fe4:	9306      	str	r3, [sp, #24]
 8013fe6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8013fea:	900d      	str	r0, [sp, #52]	; 0x34
 8013fec:	6850      	ldr	r0, [r2, #4]
 8013fee:	6812      	ldr	r2, [r2, #0]
 8013ff0:	fb00 1303 	mla	r3, r0, r3, r1
 8013ff4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013ff8:	9307      	str	r3, [sp, #28]
 8013ffa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013ffc:	681b      	ldr	r3, [r3, #0]
 8013ffe:	9308      	str	r3, [sp, #32]
 8014000:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014002:	685c      	ldr	r4, [r3, #4]
 8014004:	eeb0 aa40 	vmov.f32	s20, s0
 8014008:	eef0 9a60 	vmov.f32	s19, s1
 801400c:	eeb0 9a41 	vmov.f32	s18, s2
 8014010:	eeb0 8a62 	vmov.f32	s16, s5
 8014014:	eef0 8a43 	vmov.f32	s17, s6
 8014018:	eef0 ba44 	vmov.f32	s23, s8
 801401c:	eeb0 ba64 	vmov.f32	s22, s9
 8014020:	eef0 aa45 	vmov.f32	s21, s10
 8014024:	3404      	adds	r4, #4
 8014026:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014028:	2b00      	cmp	r3, #0
 801402a:	dc03      	bgt.n	8014034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801402c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801402e:	2b00      	cmp	r3, #0
 8014030:	f340 81d6 	ble.w	80143e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8014034:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014036:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801403a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801403e:	1e48      	subs	r0, r1, #1
 8014040:	1e56      	subs	r6, r2, #1
 8014042:	9b06      	ldr	r3, [sp, #24]
 8014044:	2b00      	cmp	r3, #0
 8014046:	f340 80b7 	ble.w	80141b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801404a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801404e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014052:	d406      	bmi.n	8014062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014054:	4287      	cmp	r7, r0
 8014056:	da04      	bge.n	8014062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014058:	2b00      	cmp	r3, #0
 801405a:	db02      	blt.n	8014062 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801405c:	42b3      	cmp	r3, r6
 801405e:	f2c0 80ac 	blt.w	80141ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8014062:	3701      	adds	r7, #1
 8014064:	f100 809d 	bmi.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014068:	42b9      	cmp	r1, r7
 801406a:	f2c0 809a 	blt.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801406e:	3301      	adds	r3, #1
 8014070:	f100 8097 	bmi.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8014074:	429a      	cmp	r2, r3
 8014076:	f2c0 8094 	blt.w	80141a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801407a:	9b06      	ldr	r3, [sp, #24]
 801407c:	930b      	str	r3, [sp, #44]	; 0x2c
 801407e:	9b07      	ldr	r3, [sp, #28]
 8014080:	9309      	str	r3, [sp, #36]	; 0x24
 8014082:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014084:	2b00      	cmp	r3, #0
 8014086:	f340 80b5 	ble.w	80141f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801408a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801408c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801408e:	68c7      	ldr	r7, [r0, #12]
 8014090:	6892      	ldr	r2, [r2, #8]
 8014092:	ea5f 402b 	movs.w	r0, fp, asr #16
 8014096:	ea4f 4625 	mov.w	r6, r5, asr #16
 801409a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801409e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80140a2:	f100 80fb 	bmi.w	801429c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80140a6:	f102 3cff 	add.w	ip, r2, #4294967295
 80140aa:	4560      	cmp	r0, ip
 80140ac:	f280 80f6 	bge.w	801429c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80140b0:	2e00      	cmp	r6, #0
 80140b2:	f2c0 80f3 	blt.w	801429c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80140b6:	f107 3cff 	add.w	ip, r7, #4294967295
 80140ba:	4566      	cmp	r6, ip
 80140bc:	f280 80ee 	bge.w	801429c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80140c0:	b212      	sxth	r2, r2
 80140c2:	fb06 0002 	mla	r0, r6, r2, r0
 80140c6:	9e08      	ldr	r6, [sp, #32]
 80140c8:	1837      	adds	r7, r6, r0
 80140ca:	5c30      	ldrb	r0, [r6, r0]
 80140cc:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80140d0:	eb04 0c08 	add.w	ip, r4, r8
 80140d4:	2b00      	cmp	r3, #0
 80140d6:	f000 80d3 	beq.w	8014280 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 80140da:	787e      	ldrb	r6, [r7, #1]
 80140dc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80140e0:	4426      	add	r6, r4
 80140e2:	2900      	cmp	r1, #0
 80140e4:	f000 80d4 	beq.w	8014290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 80140e8:	18b8      	adds	r0, r7, r2
 80140ea:	5cba      	ldrb	r2, [r7, r2]
 80140ec:	7840      	ldrb	r0, [r0, #1]
 80140ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80140f2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80140f6:	4422      	add	r2, r4
 80140f8:	4420      	add	r0, r4
 80140fa:	b29b      	uxth	r3, r3
 80140fc:	b289      	uxth	r1, r1
 80140fe:	fb03 f901 	mul.w	r9, r3, r1
 8014102:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014106:	011b      	lsls	r3, r3, #4
 8014108:	b289      	uxth	r1, r1
 801410a:	78b7      	ldrb	r7, [r6, #2]
 801410c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014110:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014114:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014118:	eba3 0309 	sub.w	r3, r3, r9
 801411c:	b29b      	uxth	r3, r3
 801411e:	ebae 0e01 	sub.w	lr, lr, r1
 8014122:	fa1f fe8e 	uxth.w	lr, lr
 8014126:	435f      	muls	r7, r3
 8014128:	fb0e 770a 	mla	r7, lr, sl, r7
 801412c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014130:	fb01 770a 	mla	r7, r1, sl, r7
 8014134:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014138:	fb09 7a0a 	mla	sl, r9, sl, r7
 801413c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014140:	f896 8000 	ldrb.w	r8, [r6]
 8014144:	7876      	ldrb	r6, [r6, #1]
 8014146:	fb03 f808 	mul.w	r8, r3, r8
 801414a:	fb0e 8807 	mla	r8, lr, r7, r8
 801414e:	7817      	ldrb	r7, [r2, #0]
 8014150:	fb01 8807 	mla	r8, r1, r7, r8
 8014154:	7807      	ldrb	r7, [r0, #0]
 8014156:	fb09 8707 	mla	r7, r9, r7, r8
 801415a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801415e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014162:	ea4a 0707 	orr.w	r7, sl, r7
 8014166:	4373      	muls	r3, r6
 8014168:	f892 a001 	ldrb.w	sl, [r2, #1]
 801416c:	fb0e 330c 	mla	r3, lr, ip, r3
 8014170:	fb01 310a 	mla	r1, r1, sl, r3
 8014174:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014178:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801417a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801417e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014182:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014186:	ea47 070a 	orr.w	r7, r7, sl
 801418a:	801f      	strh	r7, [r3, #0]
 801418c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801418e:	3302      	adds	r3, #2
 8014190:	9309      	str	r3, [sp, #36]	; 0x24
 8014192:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8014194:	449b      	add	fp, r3
 8014196:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014198:	441d      	add	r5, r3
 801419a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801419c:	3b01      	subs	r3, #1
 801419e:	930b      	str	r3, [sp, #44]	; 0x2c
 80141a0:	e76f      	b.n	8014082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80141a2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80141a4:	449b      	add	fp, r3
 80141a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80141a8:	441d      	add	r5, r3
 80141aa:	9b06      	ldr	r3, [sp, #24]
 80141ac:	3b01      	subs	r3, #1
 80141ae:	9306      	str	r3, [sp, #24]
 80141b0:	9b07      	ldr	r3, [sp, #28]
 80141b2:	3302      	adds	r3, #2
 80141b4:	9307      	str	r3, [sp, #28]
 80141b6:	e744      	b.n	8014042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80141b8:	d023      	beq.n	8014202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80141ba:	9b06      	ldr	r3, [sp, #24]
 80141bc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80141be:	3b01      	subs	r3, #1
 80141c0:	fb00 b003 	mla	r0, r0, r3, fp
 80141c4:	1400      	asrs	r0, r0, #16
 80141c6:	f53f af58 	bmi.w	801407a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80141ca:	3901      	subs	r1, #1
 80141cc:	4288      	cmp	r0, r1
 80141ce:	f6bf af54 	bge.w	801407a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80141d2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80141d4:	fb01 5303 	mla	r3, r1, r3, r5
 80141d8:	141b      	asrs	r3, r3, #16
 80141da:	f53f af4e 	bmi.w	801407a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80141de:	3a01      	subs	r2, #1
 80141e0:	4293      	cmp	r3, r2
 80141e2:	f6bf af4a 	bge.w	801407a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80141e6:	9b06      	ldr	r3, [sp, #24]
 80141e8:	9309      	str	r3, [sp, #36]	; 0x24
 80141ea:	9b07      	ldr	r3, [sp, #28]
 80141ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80141ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141f0:	2b00      	cmp	r3, #0
 80141f2:	dc70      	bgt.n	80142d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80141f4:	9b06      	ldr	r3, [sp, #24]
 80141f6:	9a07      	ldr	r2, [sp, #28]
 80141f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80141fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014200:	9307      	str	r3, [sp, #28]
 8014202:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014204:	2b00      	cmp	r3, #0
 8014206:	f340 80eb 	ble.w	80143e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801420a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801420e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014212:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014216:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014218:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801421c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014220:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014224:	eef0 6a48 	vmov.f32	s13, s16
 8014228:	ee69 7a27 	vmul.f32	s15, s18, s15
 801422c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014230:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014234:	ee16 ba90 	vmov	fp, s13
 8014238:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801423c:	eef0 6a68 	vmov.f32	s13, s17
 8014240:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014244:	ee18 2a10 	vmov	r2, s16
 8014248:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801424c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014250:	ee18 2a90 	vmov	r2, s17
 8014254:	9323      	str	r3, [sp, #140]	; 0x8c
 8014256:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014258:	fb92 f3f3 	sdiv	r3, r2, r3
 801425c:	9324      	str	r3, [sp, #144]	; 0x90
 801425e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014260:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014262:	3b01      	subs	r3, #1
 8014264:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014268:	930a      	str	r3, [sp, #40]	; 0x28
 801426a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801426c:	bf08      	it	eq
 801426e:	4613      	moveq	r3, r2
 8014270:	ee16 5a90 	vmov	r5, s13
 8014274:	9306      	str	r3, [sp, #24]
 8014276:	eef0 8a67 	vmov.f32	s17, s15
 801427a:	eeb0 8a47 	vmov.f32	s16, s14
 801427e:	e6d2      	b.n	8014026 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8014280:	b149      	cbz	r1, 8014296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 8014282:	5cba      	ldrb	r2, [r7, r2]
 8014284:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014288:	4422      	add	r2, r4
 801428a:	4660      	mov	r0, ip
 801428c:	4666      	mov	r6, ip
 801428e:	e734      	b.n	80140fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8014290:	4660      	mov	r0, ip
 8014292:	4662      	mov	r2, ip
 8014294:	e731      	b.n	80140fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 8014296:	4660      	mov	r0, ip
 8014298:	4662      	mov	r2, ip
 801429a:	e7f7      	b.n	801428c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 801429c:	f110 0c01 	adds.w	ip, r0, #1
 80142a0:	f53f af74 	bmi.w	801418c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80142a4:	4562      	cmp	r2, ip
 80142a6:	f6ff af71 	blt.w	801418c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80142aa:	f116 0c01 	adds.w	ip, r6, #1
 80142ae:	f53f af6d 	bmi.w	801418c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80142b2:	4567      	cmp	r7, ip
 80142b4:	f6ff af6a 	blt.w	801418c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80142b8:	b23f      	sxth	r7, r7
 80142ba:	b212      	sxth	r2, r2
 80142bc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80142c0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80142c4:	9200      	str	r2, [sp, #0]
 80142c6:	9701      	str	r7, [sp, #4]
 80142c8:	4623      	mov	r3, r4
 80142ca:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80142ce:	980d      	ldr	r0, [sp, #52]	; 0x34
 80142d0:	f7ff fdc4 	bl	8013e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80142d4:	e75a      	b.n	801418c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80142d6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80142d8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80142dc:	ea4f 462b 	mov.w	r6, fp, asr #16
 80142e0:	1428      	asrs	r0, r5, #16
 80142e2:	fb02 6000 	mla	r0, r2, r0, r6
 80142e6:	9e08      	ldr	r6, [sp, #32]
 80142e8:	f816 8000 	ldrb.w	r8, [r6, r0]
 80142ec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80142f0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80142f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80142f8:	1837      	adds	r7, r6, r0
 80142fa:	eb04 0c08 	add.w	ip, r4, r8
 80142fe:	2b00      	cmp	r3, #0
 8014300:	d060      	beq.n	80143c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8014302:	787e      	ldrb	r6, [r7, #1]
 8014304:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014308:	4426      	add	r6, r4
 801430a:	2900      	cmp	r1, #0
 801430c:	d062      	beq.n	80143d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 801430e:	18b8      	adds	r0, r7, r2
 8014310:	5cba      	ldrb	r2, [r7, r2]
 8014312:	7840      	ldrb	r0, [r0, #1]
 8014314:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014318:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801431c:	4422      	add	r2, r4
 801431e:	4420      	add	r0, r4
 8014320:	b29b      	uxth	r3, r3
 8014322:	b289      	uxth	r1, r1
 8014324:	fb03 f901 	mul.w	r9, r3, r1
 8014328:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801432c:	011b      	lsls	r3, r3, #4
 801432e:	b289      	uxth	r1, r1
 8014330:	78b7      	ldrb	r7, [r6, #2]
 8014332:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014336:	f89c c001 	ldrb.w	ip, [ip, #1]
 801433a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801433e:	eba3 0309 	sub.w	r3, r3, r9
 8014342:	b29b      	uxth	r3, r3
 8014344:	ebae 0e01 	sub.w	lr, lr, r1
 8014348:	fa1f fe8e 	uxth.w	lr, lr
 801434c:	435f      	muls	r7, r3
 801434e:	fb0e 770a 	mla	r7, lr, sl, r7
 8014352:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014356:	fb01 770a 	mla	r7, r1, sl, r7
 801435a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801435e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014362:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014366:	f896 8000 	ldrb.w	r8, [r6]
 801436a:	7876      	ldrb	r6, [r6, #1]
 801436c:	fb03 f808 	mul.w	r8, r3, r8
 8014370:	fb0e 8807 	mla	r8, lr, r7, r8
 8014374:	7817      	ldrb	r7, [r2, #0]
 8014376:	fb01 8807 	mla	r8, r1, r7, r8
 801437a:	7807      	ldrb	r7, [r0, #0]
 801437c:	fb09 8707 	mla	r7, r9, r7, r8
 8014380:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014384:	4373      	muls	r3, r6
 8014386:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801438a:	7856      	ldrb	r6, [r2, #1]
 801438c:	ea4a 0707 	orr.w	r7, sl, r7
 8014390:	fb0e 330c 	mla	r3, lr, ip, r3
 8014394:	f890 a001 	ldrb.w	sl, [r0, #1]
 8014398:	fb01 3306 	mla	r3, r1, r6, r3
 801439c:	fb09 3a0a 	mla	sl, r9, sl, r3
 80143a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80143a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80143a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80143aa:	ea47 070a 	orr.w	r7, r7, sl
 80143ae:	f823 7b02 	strh.w	r7, [r3], #2
 80143b2:	930b      	str	r3, [sp, #44]	; 0x2c
 80143b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80143b6:	449b      	add	fp, r3
 80143b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80143ba:	441d      	add	r5, r3
 80143bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143be:	3b01      	subs	r3, #1
 80143c0:	9309      	str	r3, [sp, #36]	; 0x24
 80143c2:	e714      	b.n	80141ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80143c4:	b149      	cbz	r1, 80143da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80143c6:	5cba      	ldrb	r2, [r7, r2]
 80143c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80143cc:	4422      	add	r2, r4
 80143ce:	4660      	mov	r0, ip
 80143d0:	4666      	mov	r6, ip
 80143d2:	e7a5      	b.n	8014320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80143d4:	4660      	mov	r0, ip
 80143d6:	4662      	mov	r2, ip
 80143d8:	e7a2      	b.n	8014320 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80143da:	4660      	mov	r0, ip
 80143dc:	4662      	mov	r2, ip
 80143de:	e7f7      	b.n	80143d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 80143e0:	b00f      	add	sp, #60	; 0x3c
 80143e2:	ecbd 8b08 	vpop	{d8-d11}
 80143e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080143ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80143ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143f0:	880e      	ldrh	r6, [r1, #0]
 80143f2:	b085      	sub	sp, #20
 80143f4:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80143f8:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 80143fc:	4691      	mov	r9, r2
 80143fe:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014402:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014406:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801440a:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801440e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8014412:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8014416:	9200      	str	r2, [sp, #0]
 8014418:	00f6      	lsls	r6, r6, #3
 801441a:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 801441e:	9201      	str	r2, [sp, #4]
 8014420:	2c00      	cmp	r4, #0
 8014422:	b2f2      	uxtb	r2, r6
 8014424:	fb04 560c 	mla	r6, r4, ip, r5
 8014428:	9202      	str	r2, [sp, #8]
 801442a:	eb09 0e06 	add.w	lr, r9, r6
 801442e:	db3e      	blt.n	80144ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8014430:	45a0      	cmp	r8, r4
 8014432:	dd3c      	ble.n	80144ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8014434:	2d00      	cmp	r5, #0
 8014436:	db38      	blt.n	80144aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8014438:	45ac      	cmp	ip, r5
 801443a:	dd36      	ble.n	80144aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801443c:	f819 2006 	ldrb.w	r2, [r9, r6]
 8014440:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8014444:	1c6e      	adds	r6, r5, #1
 8014446:	d435      	bmi.n	80144b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8014448:	45b4      	cmp	ip, r6
 801444a:	dd33      	ble.n	80144b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 801444c:	b3a0      	cbz	r0, 80144b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801444e:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014452:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8014456:	3401      	adds	r4, #1
 8014458:	d432      	bmi.n	80144c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 801445a:	45a0      	cmp	r8, r4
 801445c:	dd30      	ble.n	80144c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 801445e:	b397      	cbz	r7, 80144c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8014460:	2d00      	cmp	r5, #0
 8014462:	db2b      	blt.n	80144bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014464:	45ac      	cmp	ip, r5
 8014466:	dd29      	ble.n	80144bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014468:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801446c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8014470:	3501      	adds	r5, #1
 8014472:	d42b      	bmi.n	80144cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8014474:	45ac      	cmp	ip, r5
 8014476:	dd29      	ble.n	80144cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8014478:	b350      	cbz	r0, 80144d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 801447a:	44f4      	add	ip, lr
 801447c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8014480:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8014484:	280f      	cmp	r0, #15
 8014486:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801448a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801448e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014492:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8014496:	d801      	bhi.n	801449c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8014498:	2f0f      	cmp	r7, #15
 801449a:	d91b      	bls.n	80144d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 801449c:	4b84      	ldr	r3, [pc, #528]	; (80146b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 801449e:	4a85      	ldr	r2, [pc, #532]	; (80146b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 80144a0:	4885      	ldr	r0, [pc, #532]	; (80146b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 80144a2:	f240 210d 	movw	r1, #525	; 0x20d
 80144a6:	f005 fccb 	bl	8019e40 <__assert_func>
 80144aa:	2200      	movs	r2, #0
 80144ac:	e7ca      	b.n	8014444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 80144ae:	2600      	movs	r6, #0
 80144b0:	4632      	mov	r2, r6
 80144b2:	e7d0      	b.n	8014456 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 80144b4:	2600      	movs	r6, #0
 80144b6:	e7ce      	b.n	8014456 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 80144b8:	4606      	mov	r6, r0
 80144ba:	e7cc      	b.n	8014456 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 80144bc:	2400      	movs	r4, #0
 80144be:	e7d7      	b.n	8014470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 80144c0:	2300      	movs	r3, #0
 80144c2:	461c      	mov	r4, r3
 80144c4:	e7de      	b.n	8014484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80144c6:	463b      	mov	r3, r7
 80144c8:	463c      	mov	r4, r7
 80144ca:	e7db      	b.n	8014484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80144cc:	2300      	movs	r3, #0
 80144ce:	e7d9      	b.n	8014484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80144d0:	4603      	mov	r3, r0
 80144d2:	e7d7      	b.n	8014484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 80144d4:	b280      	uxth	r0, r0
 80144d6:	b2bf      	uxth	r7, r7
 80144d8:	fb00 fe07 	mul.w	lr, r0, r7
 80144dc:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80144e0:	0100      	lsls	r0, r0, #4
 80144e2:	eba0 0c0e 	sub.w	ip, r0, lr
 80144e6:	b2bf      	uxth	r7, r7
 80144e8:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80144ec:	fa1f fc8c 	uxth.w	ip, ip
 80144f0:	1bed      	subs	r5, r5, r7
 80144f2:	b2ad      	uxth	r5, r5
 80144f4:	fb0c f00a 	mul.w	r0, ip, sl
 80144f8:	fb05 000b 	mla	r0, r5, fp, r0
 80144fc:	fb07 0009 	mla	r0, r7, r9, r0
 8014500:	fb0e 0008 	mla	r0, lr, r8, r0
 8014504:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014508:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801450c:	9003      	str	r0, [sp, #12]
 801450e:	d018      	beq.n	8014542 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8014510:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014514:	fb0b f000 	mul.w	r0, fp, r0
 8014518:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801451c:	fb0b fb02 	mul.w	fp, fp, r2
 8014520:	0a02      	lsrs	r2, r0, #8
 8014522:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014526:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 801452a:	4402      	add	r2, r0
 801452c:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8014530:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8014534:	0a12      	lsrs	r2, r2, #8
 8014536:	0a00      	lsrs	r0, r0, #8
 8014538:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801453c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014540:	4302      	orrs	r2, r0
 8014542:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014546:	d019      	beq.n	801457c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8014548:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801454c:	fb0a fb0b 	mul.w	fp, sl, fp
 8014550:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014554:	fb0a fa06 	mul.w	sl, sl, r6
 8014558:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801455c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014560:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014564:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8014568:	445e      	add	r6, fp
 801456a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801456e:	0a36      	lsrs	r6, r6, #8
 8014570:	0a00      	lsrs	r0, r0, #8
 8014572:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014576:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801457a:	4306      	orrs	r6, r0
 801457c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014580:	d019      	beq.n	80145b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8014582:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014586:	fb09 fa0a 	mul.w	sl, r9, sl
 801458a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801458e:	fb09 f904 	mul.w	r9, r9, r4
 8014592:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014596:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801459a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801459e:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80145a2:	4454      	add	r4, sl
 80145a4:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80145a8:	0a24      	lsrs	r4, r4, #8
 80145aa:	0a00      	lsrs	r0, r0, #8
 80145ac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80145b0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80145b4:	4304      	orrs	r4, r0
 80145b6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80145ba:	d019      	beq.n	80145f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 80145bc:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80145c0:	fb08 f909 	mul.w	r9, r8, r9
 80145c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80145c8:	fb08 f803 	mul.w	r8, r8, r3
 80145cc:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80145d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80145d4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80145d8:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80145dc:	444b      	add	r3, r9
 80145de:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80145e2:	0a1b      	lsrs	r3, r3, #8
 80145e4:	0a00      	lsrs	r0, r0, #8
 80145e6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80145ea:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80145ee:	4303      	orrs	r3, r0
 80145f0:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80145f4:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80145f8:	fb0c f808 	mul.w	r8, ip, r8
 80145fc:	fb05 8800 	mla	r8, r5, r0, r8
 8014600:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8014604:	fb07 8800 	mla	r8, r7, r0, r8
 8014608:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801460c:	fb0e 8000 	mla	r0, lr, r0, r8
 8014610:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014614:	fb0c f606 	mul.w	r6, ip, r6
 8014618:	0a00      	lsrs	r0, r0, #8
 801461a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801461e:	fb05 6202 	mla	r2, r5, r2, r6
 8014622:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8014626:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 801462a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801462e:	fb07 2700 	mla	r7, r7, r0, r2
 8014632:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8014636:	9b03      	ldr	r3, [sp, #12]
 8014638:	9c00      	ldr	r4, [sp, #0]
 801463a:	b2ad      	uxth	r5, r5
 801463c:	436b      	muls	r3, r5
 801463e:	fb0e 7000 	mla	r0, lr, r0, r7
 8014642:	1c5a      	adds	r2, r3, #1
 8014644:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8014648:	0a00      	lsrs	r0, r0, #8
 801464a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801464e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8014652:	ea48 0000 	orr.w	r0, r8, r0
 8014656:	b2d2      	uxtb	r2, r2
 8014658:	fb14 f602 	smulbb	r6, r4, r2
 801465c:	0c03      	lsrs	r3, r0, #16
 801465e:	fb03 6305 	mla	r3, r3, r5, r6
 8014662:	b29e      	uxth	r6, r3
 8014664:	9b01      	ldr	r3, [sp, #4]
 8014666:	f3c0 2407 	ubfx	r4, r0, #8, #8
 801466a:	fb13 f302 	smulbb	r3, r3, r2
 801466e:	fb04 3405 	mla	r4, r4, r5, r3
 8014672:	9b02      	ldr	r3, [sp, #8]
 8014674:	b2c0      	uxtb	r0, r0
 8014676:	fb13 f202 	smulbb	r2, r3, r2
 801467a:	fb00 2005 	mla	r0, r0, r5, r2
 801467e:	b280      	uxth	r0, r0
 8014680:	b2a4      	uxth	r4, r4
 8014682:	1c42      	adds	r2, r0, #1
 8014684:	1c73      	adds	r3, r6, #1
 8014686:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801468a:	1c62      	adds	r2, r4, #1
 801468c:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8014690:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8014694:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8014698:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801469c:	0952      	lsrs	r2, r2, #5
 801469e:	4303      	orrs	r3, r0
 80146a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80146a4:	4313      	orrs	r3, r2
 80146a6:	800b      	strh	r3, [r1, #0]
 80146a8:	b005      	add	sp, #20
 80146aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146ae:	bf00      	nop
 80146b0:	0801d907 	.word	0x0801d907
 80146b4:	0801dec5 	.word	0x0801dec5
 80146b8:	0801d9f0 	.word	0x0801d9f0

080146bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80146bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146c0:	ed2d 8b08 	vpush	{d8-d11}
 80146c4:	b09f      	sub	sp, #124	; 0x7c
 80146c6:	eeb0 aa40 	vmov.f32	s20, s0
 80146ca:	921b      	str	r2, [sp, #108]	; 0x6c
 80146cc:	9309      	str	r3, [sp, #36]	; 0x24
 80146ce:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 80146d0:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 80146d4:	931c      	str	r3, [sp, #112]	; 0x70
 80146d6:	9119      	str	r1, [sp, #100]	; 0x64
 80146d8:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 80146dc:	901d      	str	r0, [sp, #116]	; 0x74
 80146de:	6850      	ldr	r0, [r2, #4]
 80146e0:	6812      	ldr	r2, [r2, #0]
 80146e2:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 80146e4:	fb00 1303 	mla	r3, r0, r3, r1
 80146e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80146ec:	930c      	str	r3, [sp, #48]	; 0x30
 80146ee:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80146f0:	681b      	ldr	r3, [r3, #0]
 80146f2:	9312      	str	r3, [sp, #72]	; 0x48
 80146f4:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80146f6:	685e      	ldr	r6, [r3, #4]
 80146f8:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80146fc:	930d      	str	r3, [sp, #52]	; 0x34
 80146fe:	eef0 9a60 	vmov.f32	s19, s1
 8014702:	eeb0 9a41 	vmov.f32	s18, s2
 8014706:	eeb0 8a62 	vmov.f32	s16, s5
 801470a:	eef0 8a43 	vmov.f32	s17, s6
 801470e:	eef0 ba44 	vmov.f32	s23, s8
 8014712:	eeb0 ba64 	vmov.f32	s22, s9
 8014716:	eef0 aa45 	vmov.f32	s21, s10
 801471a:	3604      	adds	r6, #4
 801471c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801471e:	2b00      	cmp	r3, #0
 8014720:	dc03      	bgt.n	801472a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014722:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8014724:	2b00      	cmp	r3, #0
 8014726:	f340 838e 	ble.w	8014e46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 801472a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801472c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014730:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014734:	1e48      	subs	r0, r1, #1
 8014736:	1e57      	subs	r7, r2, #1
 8014738:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801473a:	2b00      	cmp	r3, #0
 801473c:	f340 819b 	ble.w	8014a76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8014740:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014742:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8014746:	ea4f 4325 	mov.w	r3, r5, asr #16
 801474a:	d406      	bmi.n	801475a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801474c:	4584      	cmp	ip, r0
 801474e:	da04      	bge.n	801475a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014750:	2b00      	cmp	r3, #0
 8014752:	db02      	blt.n	801475a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014754:	42bb      	cmp	r3, r7
 8014756:	f2c0 818f 	blt.w	8014a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 801475a:	f11c 0c01 	adds.w	ip, ip, #1
 801475e:	f100 817d 	bmi.w	8014a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8014762:	4561      	cmp	r1, ip
 8014764:	f2c0 817a 	blt.w	8014a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8014768:	3301      	adds	r3, #1
 801476a:	f100 8177 	bmi.w	8014a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 801476e:	429a      	cmp	r2, r3
 8014770:	f2c0 8174 	blt.w	8014a5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a0>
 8014774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014776:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8014778:	931a      	str	r3, [sp, #104]	; 0x68
 801477a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801477c:	2b00      	cmp	r3, #0
 801477e:	f340 8199 	ble.w	8014ab4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8014782:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014784:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014788:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801478a:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801478e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014790:	141b      	asrs	r3, r3, #16
 8014792:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014796:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801479a:	f100 81dc 	bmi.w	8014b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801479e:	f100 38ff 	add.w	r8, r0, #4294967295
 80147a2:	4543      	cmp	r3, r8
 80147a4:	f280 81d7 	bge.w	8014b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80147a8:	f1bc 0f00 	cmp.w	ip, #0
 80147ac:	f2c0 81d3 	blt.w	8014b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80147b0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80147b4:	45c4      	cmp	ip, r8
 80147b6:	f280 81ce 	bge.w	8014b56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80147ba:	b200      	sxth	r0, r0
 80147bc:	fb0c 3300 	mla	r3, ip, r0, r3
 80147c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80147c2:	eb04 0803 	add.w	r8, r4, r3
 80147c6:	5ce3      	ldrb	r3, [r4, r3]
 80147c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80147cc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80147d0:	2a00      	cmp	r2, #0
 80147d2:	f000 81b5 	beq.w	8014b40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80147d6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80147da:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80147de:	940e      	str	r4, [sp, #56]	; 0x38
 80147e0:	0e24      	lsrs	r4, r4, #24
 80147e2:	9415      	str	r4, [sp, #84]	; 0x54
 80147e4:	b179      	cbz	r1, 8014806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80147e6:	eb08 0c00 	add.w	ip, r8, r0
 80147ea:	f818 0000 	ldrb.w	r0, [r8, r0]
 80147ee:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80147f2:	900a      	str	r0, [sp, #40]	; 0x28
 80147f4:	0e00      	lsrs	r0, r0, #24
 80147f6:	9013      	str	r0, [sp, #76]	; 0x4c
 80147f8:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80147fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8014800:	900f      	str	r0, [sp, #60]	; 0x3c
 8014802:	0e00      	lsrs	r0, r0, #24
 8014804:	9016      	str	r0, [sp, #88]	; 0x58
 8014806:	b292      	uxth	r2, r2
 8014808:	b289      	uxth	r1, r1
 801480a:	fb02 f901 	mul.w	r9, r2, r1
 801480e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014812:	0112      	lsls	r2, r2, #4
 8014814:	eba2 0809 	sub.w	r8, r2, r9
 8014818:	b289      	uxth	r1, r1
 801481a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801481e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014820:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014822:	fa1f f888 	uxth.w	r8, r8
 8014826:	1a52      	subs	r2, r2, r1
 8014828:	b292      	uxth	r2, r2
 801482a:	fb08 f000 	mul.w	r0, r8, r0
 801482e:	fb02 000e 	mla	r0, r2, lr, r0
 8014832:	fb01 0004 	mla	r0, r1, r4, r0
 8014836:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014838:	fb09 0004 	mla	r0, r9, r4, r0
 801483c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014840:	2800      	cmp	r0, #0
 8014842:	f000 8100 	beq.w	8014a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014846:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801484a:	d01b      	beq.n	8014884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801484c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8014850:	fb0e fa0a 	mul.w	sl, lr, sl
 8014854:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014858:	fb0e fe03 	mul.w	lr, lr, r3
 801485c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8014860:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014864:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014868:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801486c:	4453      	add	r3, sl
 801486e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8014872:	0a1b      	lsrs	r3, r3, #8
 8014874:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014878:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801487c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014880:	ea43 030c 	orr.w	r3, r3, ip
 8014884:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014886:	2cff      	cmp	r4, #255	; 0xff
 8014888:	d021      	beq.n	80148ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801488a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801488c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014890:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014892:	fb04 fb0b 	mul.w	fp, r4, fp
 8014896:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014898:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801489c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801489e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80148a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80148a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80148aa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80148ae:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80148b2:	44de      	add	lr, fp
 80148b4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80148b8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80148bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80148c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80148c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80148c8:	ea4e 040a 	orr.w	r4, lr, sl
 80148cc:	940e      	str	r4, [sp, #56]	; 0x38
 80148ce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80148d0:	2cff      	cmp	r4, #255	; 0xff
 80148d2:	d021      	beq.n	8014918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 80148d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80148d6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80148da:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80148dc:	fb04 fb0b 	mul.w	fp, r4, fp
 80148e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80148e2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80148e6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80148e8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80148ec:	fb04 fa0a 	mul.w	sl, r4, sl
 80148f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80148f4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80148f8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80148fc:	44de      	add	lr, fp
 80148fe:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014902:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014906:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801490a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801490e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014912:	ea4e 040a 	orr.w	r4, lr, sl
 8014916:	940a      	str	r4, [sp, #40]	; 0x28
 8014918:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801491a:	2cff      	cmp	r4, #255	; 0xff
 801491c:	d021      	beq.n	8014962 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801491e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014920:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014924:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014926:	fb04 fb0b 	mul.w	fp, r4, fp
 801492a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801492c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014930:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8014932:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014936:	fb04 fa0a 	mul.w	sl, r4, sl
 801493a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801493e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014942:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014946:	44de      	add	lr, fp
 8014948:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801494c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014950:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014954:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014958:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801495c:	ea4e 040a 	orr.w	r4, lr, sl
 8014960:	940f      	str	r4, [sp, #60]	; 0x3c
 8014962:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014964:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014968:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801496a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801496e:	fb08 fc0c 	mul.w	ip, r8, ip
 8014972:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014976:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801497a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801497c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8014980:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8014984:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014986:	fb09 cc0e 	mla	ip, r9, lr, ip
 801498a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801498e:	fb08 f80e 	mul.w	r8, r8, lr
 8014992:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014996:	fb02 8303 	mla	r3, r2, r3, r8
 801499a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801499c:	f8b7 e000 	ldrh.w	lr, [r7]
 80149a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80149a2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80149a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80149a8:	fb01 330a 	mla	r3, r1, sl, r3
 80149ac:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80149b0:	fb09 3901 	mla	r9, r9, r1, r3
 80149b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80149b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80149b8:	4343      	muls	r3, r0
 80149ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80149be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80149c2:	1c58      	adds	r0, r3, #1
 80149c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80149c8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80149cc:	ea4c 0c09 	orr.w	ip, ip, r9
 80149d0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80149d4:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80149d8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80149dc:	ea4f 232e 	mov.w	r3, lr, asr #8
 80149e0:	b2c0      	uxtb	r0, r0
 80149e2:	fb11 f102 	smulbb	r1, r1, r2
 80149e6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80149ea:	fb03 1300 	mla	r3, r3, r0, r1
 80149ee:	b299      	uxth	r1, r3
 80149f0:	ea4f 02ee 	mov.w	r2, lr, asr #3
 80149f4:	f3cc 2307 	ubfx	r3, ip, #8, #8
 80149f8:	fb13 f304 	smulbb	r3, r3, r4
 80149fc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014a00:	fb02 3200 	mla	r2, r2, r0, r3
 8014a04:	fa5f fc8c 	uxtb.w	ip, ip
 8014a08:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8014a0c:	b2db      	uxtb	r3, r3
 8014a0e:	fb1c fc04 	smulbb	ip, ip, r4
 8014a12:	fb03 cc00 	mla	ip, r3, r0, ip
 8014a16:	b292      	uxth	r2, r2
 8014a18:	fa1f fc8c 	uxth.w	ip, ip
 8014a1c:	1c4b      	adds	r3, r1, #1
 8014a1e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8014a22:	f10c 0001 	add.w	r0, ip, #1
 8014a26:	1c51      	adds	r1, r2, #1
 8014a28:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8014a2c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014a30:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014a34:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014a38:	0952      	lsrs	r2, r2, #5
 8014a3a:	ea43 030c 	orr.w	r3, r3, ip
 8014a3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014a42:	4313      	orrs	r3, r2
 8014a44:	803b      	strh	r3, [r7, #0]
 8014a46:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014a48:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014a4a:	441a      	add	r2, r3
 8014a4c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014a4e:	9231      	str	r2, [sp, #196]	; 0xc4
 8014a50:	441d      	add	r5, r3
 8014a52:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014a54:	3b01      	subs	r3, #1
 8014a56:	3702      	adds	r7, #2
 8014a58:	931a      	str	r3, [sp, #104]	; 0x68
 8014a5a:	e68e      	b.n	801477a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014a5c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014a5e:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014a60:	441c      	add	r4, r3
 8014a62:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014a64:	9431      	str	r4, [sp, #196]	; 0xc4
 8014a66:	441d      	add	r5, r3
 8014a68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a6a:	3b01      	subs	r3, #1
 8014a6c:	9309      	str	r3, [sp, #36]	; 0x24
 8014a6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014a70:	3302      	adds	r3, #2
 8014a72:	930c      	str	r3, [sp, #48]	; 0x30
 8014a74:	e660      	b.n	8014738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014a76:	d024      	beq.n	8014ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8014a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a7a:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8014a7c:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014a7e:	3b01      	subs	r3, #1
 8014a80:	fb00 4003 	mla	r0, r0, r3, r4
 8014a84:	1400      	asrs	r0, r0, #16
 8014a86:	f53f ae75 	bmi.w	8014774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a8a:	3901      	subs	r1, #1
 8014a8c:	4288      	cmp	r0, r1
 8014a8e:	f6bf ae71 	bge.w	8014774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a92:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8014a94:	fb01 5303 	mla	r3, r1, r3, r5
 8014a98:	141b      	asrs	r3, r3, #16
 8014a9a:	f53f ae6b 	bmi.w	8014774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014a9e:	3a01      	subs	r2, #1
 8014aa0:	4293      	cmp	r3, r2
 8014aa2:	f6bf ae67 	bge.w	8014774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8014aa6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014aaa:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8014aae:	f1bb 0f00 	cmp.w	fp, #0
 8014ab2:	dc70      	bgt.n	8014b96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4da>
 8014ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ab6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014aba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014abc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8014ac0:	930c      	str	r3, [sp, #48]	; 0x30
 8014ac2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014ac4:	2b00      	cmp	r3, #0
 8014ac6:	f340 81be 	ble.w	8014e46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78a>
 8014aca:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014ace:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ad2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014ad6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014ad8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014adc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014ae0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014ae4:	eef0 6a48 	vmov.f32	s13, s16
 8014ae8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014aec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014af0:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014af4:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8014af8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014afc:	eef0 6a68 	vmov.f32	s13, s17
 8014b00:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014b04:	ee18 2a10 	vmov	r2, s16
 8014b08:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014b0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b10:	ee18 2a90 	vmov	r2, s17
 8014b14:	9333      	str	r3, [sp, #204]	; 0xcc
 8014b16:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014b18:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b1c:	9334      	str	r3, [sp, #208]	; 0xd0
 8014b1e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014b20:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8014b22:	3b01      	subs	r3, #1
 8014b24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b28:	9319      	str	r3, [sp, #100]	; 0x64
 8014b2a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014b2c:	bf08      	it	eq
 8014b2e:	4613      	moveq	r3, r2
 8014b30:	ee16 5a90 	vmov	r5, s13
 8014b34:	9309      	str	r3, [sp, #36]	; 0x24
 8014b36:	eef0 8a67 	vmov.f32	s17, s15
 8014b3a:	eeb0 8a47 	vmov.f32	s16, s14
 8014b3e:	e5ed      	b.n	801471c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014b40:	2900      	cmp	r1, #0
 8014b42:	f43f ae60 	beq.w	8014806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014b46:	f818 0000 	ldrb.w	r0, [r8, r0]
 8014b4a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8014b4e:	900a      	str	r0, [sp, #40]	; 0x28
 8014b50:	0e00      	lsrs	r0, r0, #24
 8014b52:	9013      	str	r0, [sp, #76]	; 0x4c
 8014b54:	e657      	b.n	8014806 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8014b56:	f113 0801 	adds.w	r8, r3, #1
 8014b5a:	f53f af74 	bmi.w	8014a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014b5e:	4540      	cmp	r0, r8
 8014b60:	f6ff af71 	blt.w	8014a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014b64:	f11c 0801 	adds.w	r8, ip, #1
 8014b68:	f53f af6d 	bmi.w	8014a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014b6c:	45c6      	cmp	lr, r8
 8014b6e:	f6ff af6a 	blt.w	8014a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014b72:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8014b74:	9302      	str	r3, [sp, #8]
 8014b76:	b200      	sxth	r0, r0
 8014b78:	fa0f f38e 	sxth.w	r3, lr
 8014b7c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014b80:	e9cd c203 	strd	ip, r2, [sp, #12]
 8014b84:	9301      	str	r3, [sp, #4]
 8014b86:	9000      	str	r0, [sp, #0]
 8014b88:	4633      	mov	r3, r6
 8014b8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014b8c:	981d      	ldr	r0, [sp, #116]	; 0x74
 8014b8e:	4639      	mov	r1, r7
 8014b90:	f7ff fc2c 	bl	80143ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8014b94:	e757      	b.n	8014a46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014b96:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8014b98:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014b9a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014b9e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8014ba0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014ba4:	1427      	asrs	r7, r4, #16
 8014ba6:	142b      	asrs	r3, r5, #16
 8014ba8:	fb01 7303 	mla	r3, r1, r3, r7
 8014bac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014bae:	18e7      	adds	r7, r4, r3
 8014bb0:	5ce3      	ldrb	r3, [r4, r3]
 8014bb2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8014bb6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014bba:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8014bbe:	2a00      	cmp	r2, #0
 8014bc0:	f000 8137 	beq.w	8014e32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x776>
 8014bc4:	f897 e001 	ldrb.w	lr, [r7, #1]
 8014bc8:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8014bcc:	9410      	str	r4, [sp, #64]	; 0x40
 8014bce:	0e24      	lsrs	r4, r4, #24
 8014bd0:	9417      	str	r4, [sp, #92]	; 0x5c
 8014bd2:	b170      	cbz	r0, 8014bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8014bd4:	eb07 0e01 	add.w	lr, r7, r1
 8014bd8:	5c79      	ldrb	r1, [r7, r1]
 8014bda:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014bde:	910b      	str	r1, [sp, #44]	; 0x2c
 8014be0:	0e09      	lsrs	r1, r1, #24
 8014be2:	9114      	str	r1, [sp, #80]	; 0x50
 8014be4:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8014be8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014bec:	9111      	str	r1, [sp, #68]	; 0x44
 8014bee:	0e09      	lsrs	r1, r1, #24
 8014bf0:	9118      	str	r1, [sp, #96]	; 0x60
 8014bf2:	b292      	uxth	r2, r2
 8014bf4:	b280      	uxth	r0, r0
 8014bf6:	fb02 f800 	mul.w	r8, r2, r0
 8014bfa:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8014bfe:	0112      	lsls	r2, r2, #4
 8014c00:	eba2 0e08 	sub.w	lr, r2, r8
 8014c04:	b280      	uxth	r0, r0
 8014c06:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8014c0a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8014c0c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014c0e:	fa1f fe8e 	uxth.w	lr, lr
 8014c12:	1a12      	subs	r2, r2, r0
 8014c14:	b292      	uxth	r2, r2
 8014c16:	fb0e f101 	mul.w	r1, lr, r1
 8014c1a:	fb02 110c 	mla	r1, r2, ip, r1
 8014c1e:	fb00 1104 	mla	r1, r0, r4, r1
 8014c22:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014c24:	fb08 1104 	mla	r1, r8, r4, r1
 8014c28:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014c2c:	2900      	cmp	r1, #0
 8014c2e:	f000 80f5 	beq.w	8014e1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 8014c32:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014c36:	d019      	beq.n	8014c6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b0>
 8014c38:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8014c3c:	fb0c fa0a 	mul.w	sl, ip, sl
 8014c40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014c44:	fb0c fc03 	mul.w	ip, ip, r3
 8014c48:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8014c4c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014c50:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014c54:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8014c58:	4453      	add	r3, sl
 8014c5a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014c5e:	0a1b      	lsrs	r3, r3, #8
 8014c60:	0a3f      	lsrs	r7, r7, #8
 8014c62:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014c66:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014c6a:	433b      	orrs	r3, r7
 8014c6c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014c6e:	2cff      	cmp	r4, #255	; 0xff
 8014c70:	d020      	beq.n	8014cb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f8>
 8014c72:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014c74:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014c78:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014c7a:	4367      	muls	r7, r4
 8014c7c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014c7e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014c82:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014c84:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014c88:	fb04 fa0a 	mul.w	sl, r4, sl
 8014c8c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014c90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014c94:	44bc      	add	ip, r7
 8014c96:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014c9a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014c9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014ca2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014ca6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014caa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014cae:	ea4c 040a 	orr.w	r4, ip, sl
 8014cb2:	9410      	str	r4, [sp, #64]	; 0x40
 8014cb4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014cb6:	2cff      	cmp	r4, #255	; 0xff
 8014cb8:	d020      	beq.n	8014cfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x640>
 8014cba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014cbc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014cc0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014cc2:	4367      	muls	r7, r4
 8014cc4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014cc6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014cca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014ccc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014cd0:	fb04 fa0a 	mul.w	sl, r4, sl
 8014cd4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014cd8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014cdc:	44bc      	add	ip, r7
 8014cde:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014ce2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014ce6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014cea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014cee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014cf2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014cf6:	ea4c 040a 	orr.w	r4, ip, sl
 8014cfa:	940b      	str	r4, [sp, #44]	; 0x2c
 8014cfc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014cfe:	2cff      	cmp	r4, #255	; 0xff
 8014d00:	d020      	beq.n	8014d44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8014d02:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014d04:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014d08:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014d0a:	4367      	muls	r7, r4
 8014d0c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014d0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014d12:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014d14:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014d18:	fb04 fa0a 	mul.w	sl, r4, sl
 8014d1c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014d20:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d24:	44bc      	add	ip, r7
 8014d26:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014d2a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014d2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014d32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014d36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014d3e:	ea4c 040a 	orr.w	r4, ip, sl
 8014d42:	9411      	str	r4, [sp, #68]	; 0x44
 8014d44:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014d46:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014d4a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014d4c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014d50:	fb0e f707 	mul.w	r7, lr, r7
 8014d54:	fb02 770c 	mla	r7, r2, ip, r7
 8014d58:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014d5c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014d5e:	fb00 770c 	mla	r7, r0, ip, r7
 8014d62:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014d66:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014d68:	fb08 770c 	mla	r7, r8, ip, r7
 8014d6c:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8014d70:	fb0e fe0c 	mul.w	lr, lr, ip
 8014d74:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014d78:	fb02 e303 	mla	r3, r2, r3, lr
 8014d7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014d7e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014d80:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8014d84:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014d86:	fb00 330a 	mla	r3, r0, sl, r3
 8014d8a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014d8e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8014d92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d94:	f8b9 0000 	ldrh.w	r0, [r9]
 8014d98:	434b      	muls	r3, r1
 8014d9a:	0a3f      	lsrs	r7, r7, #8
 8014d9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014da0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014da4:	1c59      	adds	r1, r3, #1
 8014da6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014daa:	ea47 070c 	orr.w	r7, r7, ip
 8014dae:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8014db2:	1202      	asrs	r2, r0, #8
 8014db4:	0c3b      	lsrs	r3, r7, #16
 8014db6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8014dba:	b2c9      	uxtb	r1, r1
 8014dbc:	fb13 f304 	smulbb	r3, r3, r4
 8014dc0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014dc4:	fb02 3201 	mla	r2, r2, r1, r3
 8014dc8:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8014dcc:	10c3      	asrs	r3, r0, #3
 8014dce:	b2ff      	uxtb	r7, r7
 8014dd0:	00c0      	lsls	r0, r0, #3
 8014dd2:	b292      	uxth	r2, r2
 8014dd4:	fb1c fc04 	smulbb	ip, ip, r4
 8014dd8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8014ddc:	b2c0      	uxtb	r0, r0
 8014dde:	fb17 f704 	smulbb	r7, r7, r4
 8014de2:	fb03 c301 	mla	r3, r3, r1, ip
 8014de6:	fb00 7001 	mla	r0, r0, r1, r7
 8014dea:	f102 0c01 	add.w	ip, r2, #1
 8014dee:	b280      	uxth	r0, r0
 8014df0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8014df4:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8014df8:	1c42      	adds	r2, r0, #1
 8014dfa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014dfe:	b29b      	uxth	r3, r3
 8014e00:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8014e04:	ea4c 0200 	orr.w	r2, ip, r0
 8014e08:	f103 0c01 	add.w	ip, r3, #1
 8014e0c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8014e10:	095b      	lsrs	r3, r3, #5
 8014e12:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014e16:	431a      	orrs	r2, r3
 8014e18:	f8a9 2000 	strh.w	r2, [r9]
 8014e1c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014e1e:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014e20:	441a      	add	r2, r3
 8014e22:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014e24:	9231      	str	r2, [sp, #196]	; 0xc4
 8014e26:	f109 0902 	add.w	r9, r9, #2
 8014e2a:	441d      	add	r5, r3
 8014e2c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014e30:	e63d      	b.n	8014aae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8014e32:	2800      	cmp	r0, #0
 8014e34:	f43f aedd 	beq.w	8014bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8014e38:	5c79      	ldrb	r1, [r7, r1]
 8014e3a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014e3e:	910b      	str	r1, [sp, #44]	; 0x2c
 8014e40:	0e09      	lsrs	r1, r1, #24
 8014e42:	9114      	str	r1, [sp, #80]	; 0x50
 8014e44:	e6d5      	b.n	8014bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x536>
 8014e46:	b01f      	add	sp, #124	; 0x7c
 8014e48:	ecbd 8b08 	vpop	{d8-d11}
 8014e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8014e50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e54:	880e      	ldrh	r6, [r1, #0]
 8014e56:	b085      	sub	sp, #20
 8014e58:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8014e5c:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014e60:	4691      	mov	r9, r2
 8014e62:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014e66:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014e6a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8014e6e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014e72:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8014e76:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8014e7a:	9200      	str	r2, [sp, #0]
 8014e7c:	00f6      	lsls	r6, r6, #3
 8014e7e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8014e82:	9201      	str	r2, [sp, #4]
 8014e84:	2c00      	cmp	r4, #0
 8014e86:	b2f2      	uxtb	r2, r6
 8014e88:	fb04 560c 	mla	r6, r4, ip, r5
 8014e8c:	9202      	str	r2, [sp, #8]
 8014e8e:	eb09 0e06 	add.w	lr, r9, r6
 8014e92:	db3e      	blt.n	8014f12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8014e94:	45a0      	cmp	r8, r4
 8014e96:	dd3c      	ble.n	8014f12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8014e98:	2d00      	cmp	r5, #0
 8014e9a:	db38      	blt.n	8014f0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8014e9c:	45ac      	cmp	ip, r5
 8014e9e:	dd36      	ble.n	8014f0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8014ea0:	f819 2006 	ldrb.w	r2, [r9, r6]
 8014ea4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8014ea8:	1c6e      	adds	r6, r5, #1
 8014eaa:	d435      	bmi.n	8014f18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8014eac:	45b4      	cmp	ip, r6
 8014eae:	dd33      	ble.n	8014f18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8014eb0:	b3a0      	cbz	r0, 8014f1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8014eb2:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014eb6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8014eba:	3401      	adds	r4, #1
 8014ebc:	d432      	bmi.n	8014f24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8014ebe:	45a0      	cmp	r8, r4
 8014ec0:	dd30      	ble.n	8014f24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8014ec2:	b397      	cbz	r7, 8014f2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8014ec4:	2d00      	cmp	r5, #0
 8014ec6:	db2b      	blt.n	8014f20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8014ec8:	45ac      	cmp	ip, r5
 8014eca:	dd29      	ble.n	8014f20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8014ecc:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8014ed0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8014ed4:	3501      	adds	r5, #1
 8014ed6:	d42b      	bmi.n	8014f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8014ed8:	45ac      	cmp	ip, r5
 8014eda:	dd29      	ble.n	8014f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8014edc:	b350      	cbz	r0, 8014f34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 8014ede:	44f4      	add	ip, lr
 8014ee0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8014ee4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8014ee8:	280f      	cmp	r0, #15
 8014eea:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014eee:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014ef2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014ef6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8014efa:	d801      	bhi.n	8014f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 8014efc:	2f0f      	cmp	r7, #15
 8014efe:	d91b      	bls.n	8014f38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 8014f00:	4b7d      	ldr	r3, [pc, #500]	; (80150f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8014f02:	4a7e      	ldr	r2, [pc, #504]	; (80150fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8014f04:	487e      	ldr	r0, [pc, #504]	; (8015100 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8014f06:	f240 210d 	movw	r1, #525	; 0x20d
 8014f0a:	f004 ff99 	bl	8019e40 <__assert_func>
 8014f0e:	2200      	movs	r2, #0
 8014f10:	e7ca      	b.n	8014ea8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8014f12:	2600      	movs	r6, #0
 8014f14:	4632      	mov	r2, r6
 8014f16:	e7d0      	b.n	8014eba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014f18:	2600      	movs	r6, #0
 8014f1a:	e7ce      	b.n	8014eba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014f1c:	4606      	mov	r6, r0
 8014f1e:	e7cc      	b.n	8014eba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014f20:	2400      	movs	r4, #0
 8014f22:	e7d7      	b.n	8014ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 8014f24:	2300      	movs	r3, #0
 8014f26:	461c      	mov	r4, r3
 8014f28:	e7de      	b.n	8014ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8014f2a:	463b      	mov	r3, r7
 8014f2c:	463c      	mov	r4, r7
 8014f2e:	e7db      	b.n	8014ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8014f30:	2300      	movs	r3, #0
 8014f32:	e7d9      	b.n	8014ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8014f34:	4603      	mov	r3, r0
 8014f36:	e7d7      	b.n	8014ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 8014f38:	b280      	uxth	r0, r0
 8014f3a:	b2bf      	uxth	r7, r7
 8014f3c:	fb00 fe07 	mul.w	lr, r0, r7
 8014f40:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014f44:	0100      	lsls	r0, r0, #4
 8014f46:	eba0 0c0e 	sub.w	ip, r0, lr
 8014f4a:	b2bf      	uxth	r7, r7
 8014f4c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8014f50:	fa1f fc8c 	uxth.w	ip, ip
 8014f54:	1bed      	subs	r5, r5, r7
 8014f56:	b2ad      	uxth	r5, r5
 8014f58:	fb0c f00a 	mul.w	r0, ip, sl
 8014f5c:	fb05 000b 	mla	r0, r5, fp, r0
 8014f60:	fb07 0009 	mla	r0, r7, r9, r0
 8014f64:	fb0e 0008 	mla	r0, lr, r8, r0
 8014f68:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014f6c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014f70:	9003      	str	r0, [sp, #12]
 8014f72:	d018      	beq.n	8014fa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x156>
 8014f74:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014f78:	fb0b f000 	mul.w	r0, fp, r0
 8014f7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014f80:	fb0b fb02 	mul.w	fp, fp, r2
 8014f84:	0a02      	lsrs	r2, r0, #8
 8014f86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014f8a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8014f8e:	4402      	add	r2, r0
 8014f90:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8014f94:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8014f98:	0a12      	lsrs	r2, r2, #8
 8014f9a:	0a00      	lsrs	r0, r0, #8
 8014f9c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014fa0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014fa4:	4302      	orrs	r2, r0
 8014fa6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014faa:	d019      	beq.n	8014fe0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x190>
 8014fac:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014fb0:	fb0a fb0b 	mul.w	fp, sl, fp
 8014fb4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014fb8:	fb0a fa06 	mul.w	sl, sl, r6
 8014fbc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8014fc0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014fc4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014fc8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8014fcc:	445e      	add	r6, fp
 8014fce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8014fd2:	0a36      	lsrs	r6, r6, #8
 8014fd4:	0a00      	lsrs	r0, r0, #8
 8014fd6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014fda:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014fde:	4306      	orrs	r6, r0
 8014fe0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014fe4:	d019      	beq.n	801501a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ca>
 8014fe6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014fea:	fb09 fa0a 	mul.w	sl, r9, sl
 8014fee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014ff2:	fb09 f904 	mul.w	r9, r9, r4
 8014ff6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014ffa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014ffe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015002:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8015006:	4454      	add	r4, sl
 8015008:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 801500c:	0a24      	lsrs	r4, r4, #8
 801500e:	0a00      	lsrs	r0, r0, #8
 8015010:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015014:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015018:	4304      	orrs	r4, r0
 801501a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801501e:	d019      	beq.n	8015054 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x204>
 8015020:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8015024:	fb08 f909 	mul.w	r9, r8, r9
 8015028:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801502c:	fb08 f803 	mul.w	r8, r8, r3
 8015030:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8015034:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015038:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801503c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8015040:	444b      	add	r3, r9
 8015042:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8015046:	0a1b      	lsrs	r3, r3, #8
 8015048:	0a00      	lsrs	r0, r0, #8
 801504a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801504e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015052:	4303      	orrs	r3, r0
 8015054:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015058:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801505c:	fb0c f808 	mul.w	r8, ip, r8
 8015060:	fb05 8800 	mla	r8, r5, r0, r8
 8015064:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8015068:	fb07 8800 	mla	r8, r7, r0, r8
 801506c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8015070:	fb0e 8000 	mla	r0, lr, r0, r8
 8015074:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015078:	0a00      	lsrs	r0, r0, #8
 801507a:	fb0c f606 	mul.w	r6, ip, r6
 801507e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015082:	fb05 6202 	mla	r2, r5, r2, r6
 8015086:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 801508a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 801508e:	fb07 2700 	mla	r7, r7, r0, r2
 8015092:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8015096:	9b03      	ldr	r3, [sp, #12]
 8015098:	9c02      	ldr	r4, [sp, #8]
 801509a:	9d01      	ldr	r5, [sp, #4]
 801509c:	fb0e 7000 	mla	r0, lr, r0, r7
 80150a0:	43da      	mvns	r2, r3
 80150a2:	9b00      	ldr	r3, [sp, #0]
 80150a4:	b2d2      	uxtb	r2, r2
 80150a6:	0a00      	lsrs	r0, r0, #8
 80150a8:	4353      	muls	r3, r2
 80150aa:	4354      	muls	r4, r2
 80150ac:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80150b0:	ea48 0000 	orr.w	r0, r8, r0
 80150b4:	4355      	muls	r5, r2
 80150b6:	4622      	mov	r2, r4
 80150b8:	1c5c      	adds	r4, r3, #1
 80150ba:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 80150be:	0c03      	lsrs	r3, r0, #16
 80150c0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80150c4:	4b0f      	ldr	r3, [pc, #60]	; (8015104 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 80150c6:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 80150ca:	1c54      	adds	r4, r2, #1
 80150cc:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80150d0:	b2c2      	uxtb	r2, r0
 80150d2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80150d6:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80150da:	1c6a      	adds	r2, r5, #1
 80150dc:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80150e0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80150e4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80150e8:	00c0      	lsls	r0, r0, #3
 80150ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80150ee:	4318      	orrs	r0, r3
 80150f0:	8008      	strh	r0, [r1, #0]
 80150f2:	b005      	add	sp, #20
 80150f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150f8:	0801d907 	.word	0x0801d907
 80150fc:	0801dec5 	.word	0x0801dec5
 8015100:	0801d9f0 	.word	0x0801d9f0
 8015104:	fffff800 	.word	0xfffff800

08015108 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801510c:	ed2d 8b08 	vpush	{d8-d11}
 8015110:	b09b      	sub	sp, #108	; 0x6c
 8015112:	eeb0 aa40 	vmov.f32	s20, s0
 8015116:	9218      	str	r2, [sp, #96]	; 0x60
 8015118:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801511a:	9116      	str	r1, [sp, #88]	; 0x58
 801511c:	9307      	str	r3, [sp, #28]
 801511e:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8015122:	9019      	str	r0, [sp, #100]	; 0x64
 8015124:	6850      	ldr	r0, [r2, #4]
 8015126:	6812      	ldr	r2, [r2, #0]
 8015128:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801512a:	fb00 1303 	mla	r3, r0, r3, r1
 801512e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015132:	930a      	str	r3, [sp, #40]	; 0x28
 8015134:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8015136:	681b      	ldr	r3, [r3, #0]
 8015138:	930f      	str	r3, [sp, #60]	; 0x3c
 801513a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801513c:	685e      	ldr	r6, [r3, #4]
 801513e:	eef0 9a60 	vmov.f32	s19, s1
 8015142:	eeb0 9a41 	vmov.f32	s18, s2
 8015146:	eeb0 8a62 	vmov.f32	s16, s5
 801514a:	eef0 8a43 	vmov.f32	s17, s6
 801514e:	eef0 ba44 	vmov.f32	s23, s8
 8015152:	eeb0 ba64 	vmov.f32	s22, s9
 8015156:	eef0 aa45 	vmov.f32	s21, s10
 801515a:	3604      	adds	r6, #4
 801515c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801515e:	2b00      	cmp	r3, #0
 8015160:	dc03      	bgt.n	801516a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8015162:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015164:	2b00      	cmp	r3, #0
 8015166:	f340 8371 	ble.w	801584c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801516a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801516c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015170:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015174:	1e48      	subs	r0, r1, #1
 8015176:	1e57      	subs	r7, r2, #1
 8015178:	9b07      	ldr	r3, [sp, #28]
 801517a:	2b00      	cmp	r3, #0
 801517c:	f340 8189 	ble.w	8015492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8015180:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8015182:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8015186:	ea4f 4325 	mov.w	r3, r5, asr #16
 801518a:	d406      	bmi.n	801519a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801518c:	4584      	cmp	ip, r0
 801518e:	da04      	bge.n	801519a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015190:	2b00      	cmp	r3, #0
 8015192:	db02      	blt.n	801519a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015194:	42bb      	cmp	r3, r7
 8015196:	f2c0 817d 	blt.w	8015494 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801519a:	f11c 0c01 	adds.w	ip, ip, #1
 801519e:	f100 816b 	bmi.w	8015478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80151a2:	4561      	cmp	r1, ip
 80151a4:	f2c0 8168 	blt.w	8015478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80151a8:	3301      	adds	r3, #1
 80151aa:	f100 8165 	bmi.w	8015478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80151ae:	429a      	cmp	r2, r3
 80151b0:	f2c0 8162 	blt.w	8015478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80151b4:	9b07      	ldr	r3, [sp, #28]
 80151b6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80151b8:	9317      	str	r3, [sp, #92]	; 0x5c
 80151ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80151bc:	2b00      	cmp	r3, #0
 80151be:	f340 8187 	ble.w	80154d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80151c2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80151c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80151c8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80151ca:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80151ce:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80151d0:	141b      	asrs	r3, r3, #16
 80151d2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80151d6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80151da:	f100 81ca 	bmi.w	8015572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80151de:	f101 38ff 	add.w	r8, r1, #4294967295
 80151e2:	4543      	cmp	r3, r8
 80151e4:	f280 81c5 	bge.w	8015572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80151e8:	f1bc 0f00 	cmp.w	ip, #0
 80151ec:	f2c0 81c1 	blt.w	8015572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80151f0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80151f4:	45c4      	cmp	ip, r8
 80151f6:	f280 81bc 	bge.w	8015572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80151fa:	b209      	sxth	r1, r1
 80151fc:	fb0c 3301 	mla	r3, ip, r1, r3
 8015200:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015202:	eb04 0803 	add.w	r8, r4, r3
 8015206:	5ce3      	ldrb	r3, [r4, r3]
 8015208:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801520c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8015210:	2a00      	cmp	r2, #0
 8015212:	f000 81a3 	beq.w	801555c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8015216:	f898 c001 	ldrb.w	ip, [r8, #1]
 801521a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801521e:	940b      	str	r4, [sp, #44]	; 0x2c
 8015220:	0e24      	lsrs	r4, r4, #24
 8015222:	9412      	str	r4, [sp, #72]	; 0x48
 8015224:	b178      	cbz	r0, 8015246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015226:	eb08 0c01 	add.w	ip, r8, r1
 801522a:	f818 1001 	ldrb.w	r1, [r8, r1]
 801522e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015232:	9108      	str	r1, [sp, #32]
 8015234:	0e09      	lsrs	r1, r1, #24
 8015236:	9110      	str	r1, [sp, #64]	; 0x40
 8015238:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801523c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015240:	910c      	str	r1, [sp, #48]	; 0x30
 8015242:	0e09      	lsrs	r1, r1, #24
 8015244:	9113      	str	r1, [sp, #76]	; 0x4c
 8015246:	b292      	uxth	r2, r2
 8015248:	b280      	uxth	r0, r0
 801524a:	fb02 f900 	mul.w	r9, r2, r0
 801524e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8015252:	0112      	lsls	r2, r2, #4
 8015254:	eba2 0809 	sub.w	r8, r2, r9
 8015258:	b280      	uxth	r0, r0
 801525a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801525e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015260:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015262:	fa1f f888 	uxth.w	r8, r8
 8015266:	1a12      	subs	r2, r2, r0
 8015268:	b292      	uxth	r2, r2
 801526a:	fb08 f101 	mul.w	r1, r8, r1
 801526e:	fb02 110e 	mla	r1, r2, lr, r1
 8015272:	fb00 1104 	mla	r1, r0, r4, r1
 8015276:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015278:	fb09 1104 	mla	r1, r9, r4, r1
 801527c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015280:	2900      	cmp	r1, #0
 8015282:	f000 80ee 	beq.w	8015462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8015286:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801528a:	d01b      	beq.n	80152c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801528c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8015290:	fb0e fa0a 	mul.w	sl, lr, sl
 8015294:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015298:	fb0e fe03 	mul.w	lr, lr, r3
 801529c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80152a0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80152a4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80152a8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80152ac:	4453      	add	r3, sl
 80152ae:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80152b2:	0a1b      	lsrs	r3, r3, #8
 80152b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80152b8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80152bc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80152c0:	ea43 030c 	orr.w	r3, r3, ip
 80152c4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80152c6:	2cff      	cmp	r4, #255	; 0xff
 80152c8:	d021      	beq.n	801530e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80152ca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80152cc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80152d0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80152d2:	fb04 fb0b 	mul.w	fp, r4, fp
 80152d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80152d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80152dc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80152de:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80152e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80152e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80152ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80152ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80152f2:	44de      	add	lr, fp
 80152f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80152f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80152fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015300:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015304:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015308:	ea4e 040a 	orr.w	r4, lr, sl
 801530c:	940b      	str	r4, [sp, #44]	; 0x2c
 801530e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015310:	2cff      	cmp	r4, #255	; 0xff
 8015312:	d021      	beq.n	8015358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015314:	9c08      	ldr	r4, [sp, #32]
 8015316:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801531a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801531c:	fb04 fb0b 	mul.w	fp, r4, fp
 8015320:	9c08      	ldr	r4, [sp, #32]
 8015322:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015326:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015328:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801532c:	fb04 fa0a 	mul.w	sl, r4, sl
 8015330:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015334:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015338:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801533c:	44de      	add	lr, fp
 801533e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8015342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015346:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801534a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801534e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015352:	ea4e 040a 	orr.w	r4, lr, sl
 8015356:	9408      	str	r4, [sp, #32]
 8015358:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801535a:	2cff      	cmp	r4, #255	; 0xff
 801535c:	d021      	beq.n	80153a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801535e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015360:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8015364:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015366:	fb04 fb0b 	mul.w	fp, r4, fp
 801536a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801536c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015370:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015372:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8015376:	fb04 fa0a 	mul.w	sl, r4, sl
 801537a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801537e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015382:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015386:	44de      	add	lr, fp
 8015388:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801538c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015390:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015394:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015398:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801539c:	ea4e 040a 	orr.w	r4, lr, sl
 80153a0:	940c      	str	r4, [sp, #48]	; 0x30
 80153a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80153a4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80153a8:	9c08      	ldr	r4, [sp, #32]
 80153aa:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80153ae:	fb08 fc0c 	mul.w	ip, r8, ip
 80153b2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80153b6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80153ba:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80153bc:	fb00 cc0e 	mla	ip, r0, lr, ip
 80153c0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80153c4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80153c6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80153ca:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80153ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80153d2:	fb08 f80e 	mul.w	r8, r8, lr
 80153d6:	fb02 8303 	mla	r3, r2, r3, r8
 80153da:	9a08      	ldr	r2, [sp, #32]
 80153dc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80153e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80153e2:	fb00 330a 	mla	r3, r0, sl, r3
 80153e6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80153ea:	fb09 3900 	mla	r9, r9, r0, r3
 80153ee:	883b      	ldrh	r3, [r7, #0]
 80153f0:	43c9      	mvns	r1, r1
 80153f2:	1218      	asrs	r0, r3, #8
 80153f4:	b2c9      	uxtb	r1, r1
 80153f6:	10da      	asrs	r2, r3, #3
 80153f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80153fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015400:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015404:	00db      	lsls	r3, r3, #3
 8015406:	4348      	muls	r0, r1
 8015408:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801540c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015410:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015414:	b2db      	uxtb	r3, r3
 8015416:	434b      	muls	r3, r1
 8015418:	ea4c 0c09 	orr.w	ip, ip, r9
 801541c:	434a      	muls	r2, r1
 801541e:	1c41      	adds	r1, r0, #1
 8015420:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015424:	ea4f 401c 	mov.w	r0, ip, lsr #16
 8015428:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801542c:	4960      	ldr	r1, [pc, #384]	; (80155b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>)
 801542e:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8015432:	1c59      	adds	r1, r3, #1
 8015434:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015438:	fa5f f38c 	uxtb.w	r3, ip
 801543c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015440:	1c51      	adds	r1, r2, #1
 8015442:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015446:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801544a:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801544e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015452:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 8015456:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801545a:	ea43 0c0c 	orr.w	ip, r3, ip
 801545e:	f8a7 c000 	strh.w	ip, [r7]
 8015462:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015464:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015466:	441a      	add	r2, r3
 8015468:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801546a:	922d      	str	r2, [sp, #180]	; 0xb4
 801546c:	441d      	add	r5, r3
 801546e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8015470:	3b01      	subs	r3, #1
 8015472:	3702      	adds	r7, #2
 8015474:	9317      	str	r3, [sp, #92]	; 0x5c
 8015476:	e6a0      	b.n	80151ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015478:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801547a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801547c:	441c      	add	r4, r3
 801547e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015480:	942d      	str	r4, [sp, #180]	; 0xb4
 8015482:	441d      	add	r5, r3
 8015484:	9b07      	ldr	r3, [sp, #28]
 8015486:	3b01      	subs	r3, #1
 8015488:	9307      	str	r3, [sp, #28]
 801548a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801548c:	3302      	adds	r3, #2
 801548e:	930a      	str	r3, [sp, #40]	; 0x28
 8015490:	e672      	b.n	8015178 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015492:	d024      	beq.n	80154de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8015494:	9b07      	ldr	r3, [sp, #28]
 8015496:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8015498:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 801549a:	3b01      	subs	r3, #1
 801549c:	fb00 4003 	mla	r0, r0, r3, r4
 80154a0:	1400      	asrs	r0, r0, #16
 80154a2:	f53f ae87 	bmi.w	80151b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80154a6:	3901      	subs	r1, #1
 80154a8:	4288      	cmp	r0, r1
 80154aa:	f6bf ae83 	bge.w	80151b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80154ae:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80154b0:	fb01 5303 	mla	r3, r1, r3, r5
 80154b4:	141b      	asrs	r3, r3, #16
 80154b6:	f53f ae7d 	bmi.w	80151b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80154ba:	3a01      	subs	r2, #1
 80154bc:	4293      	cmp	r3, r2
 80154be:	f6bf ae79 	bge.w	80151b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80154c2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80154c6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80154ca:	f1bb 0f00 	cmp.w	fp, #0
 80154ce:	dc71      	bgt.n	80155b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80154d0:	9b07      	ldr	r3, [sp, #28]
 80154d2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80154d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80154d8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80154dc:	930a      	str	r3, [sp, #40]	; 0x28
 80154de:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80154e0:	2b00      	cmp	r3, #0
 80154e2:	f340 81b3 	ble.w	801584c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 80154e6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80154ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80154ee:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80154f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80154f4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80154f8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80154fc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015500:	eef0 6a48 	vmov.f32	s13, s16
 8015504:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015508:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801550c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015510:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8015514:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015518:	eef0 6a68 	vmov.f32	s13, s17
 801551c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015520:	ee18 2a10 	vmov	r2, s16
 8015524:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015528:	fb92 f3f3 	sdiv	r3, r2, r3
 801552c:	ee18 2a90 	vmov	r2, s17
 8015530:	932f      	str	r3, [sp, #188]	; 0xbc
 8015532:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015534:	fb92 f3f3 	sdiv	r3, r2, r3
 8015538:	9330      	str	r3, [sp, #192]	; 0xc0
 801553a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801553c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801553e:	3b01      	subs	r3, #1
 8015540:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015544:	9316      	str	r3, [sp, #88]	; 0x58
 8015546:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015548:	bf08      	it	eq
 801554a:	4613      	moveq	r3, r2
 801554c:	ee16 5a90 	vmov	r5, s13
 8015550:	9307      	str	r3, [sp, #28]
 8015552:	eef0 8a67 	vmov.f32	s17, s15
 8015556:	eeb0 8a47 	vmov.f32	s16, s14
 801555a:	e5ff      	b.n	801515c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801555c:	2800      	cmp	r0, #0
 801555e:	f43f ae72 	beq.w	8015246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015562:	f818 1001 	ldrb.w	r1, [r8, r1]
 8015566:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801556a:	9108      	str	r1, [sp, #32]
 801556c:	0e09      	lsrs	r1, r1, #24
 801556e:	9110      	str	r1, [sp, #64]	; 0x40
 8015570:	e669      	b.n	8015246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015572:	f113 0801 	adds.w	r8, r3, #1
 8015576:	f53f af74 	bmi.w	8015462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801557a:	4541      	cmp	r1, r8
 801557c:	f6ff af71 	blt.w	8015462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8015580:	f11c 0801 	adds.w	r8, ip, #1
 8015584:	f53f af6d 	bmi.w	8015462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8015588:	45c6      	cmp	lr, r8
 801558a:	f6ff af6a 	blt.w	8015462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801558e:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8015592:	b209      	sxth	r1, r1
 8015594:	fa0f f38e 	sxth.w	r3, lr
 8015598:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801559c:	9301      	str	r3, [sp, #4]
 801559e:	9100      	str	r1, [sp, #0]
 80155a0:	4633      	mov	r3, r6
 80155a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80155a4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80155a6:	4639      	mov	r1, r7
 80155a8:	f7ff fc52 	bl	8014e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80155ac:	e759      	b.n	8015462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80155ae:	bf00      	nop
 80155b0:	fffff800 	.word	0xfffff800
 80155b4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80155b6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80155b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80155bc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80155be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80155c2:	1427      	asrs	r7, r4, #16
 80155c4:	142b      	asrs	r3, r5, #16
 80155c6:	fb01 7303 	mla	r3, r1, r3, r7
 80155ca:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80155cc:	18e7      	adds	r7, r4, r3
 80155ce:	5ce3      	ldrb	r3, [r4, r3]
 80155d0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80155d4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80155d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80155dc:	2a00      	cmp	r2, #0
 80155de:	f000 812b 	beq.w	8015838 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80155e2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80155e6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80155ea:	940d      	str	r4, [sp, #52]	; 0x34
 80155ec:	0e24      	lsrs	r4, r4, #24
 80155ee:	9414      	str	r4, [sp, #80]	; 0x50
 80155f0:	b170      	cbz	r0, 8015610 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 80155f2:	eb07 0e01 	add.w	lr, r7, r1
 80155f6:	5c79      	ldrb	r1, [r7, r1]
 80155f8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80155fc:	9109      	str	r1, [sp, #36]	; 0x24
 80155fe:	0e09      	lsrs	r1, r1, #24
 8015600:	9111      	str	r1, [sp, #68]	; 0x44
 8015602:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8015606:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801560a:	910e      	str	r1, [sp, #56]	; 0x38
 801560c:	0e09      	lsrs	r1, r1, #24
 801560e:	9115      	str	r1, [sp, #84]	; 0x54
 8015610:	b292      	uxth	r2, r2
 8015612:	b280      	uxth	r0, r0
 8015614:	fb02 f800 	mul.w	r8, r2, r0
 8015618:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801561c:	0112      	lsls	r2, r2, #4
 801561e:	eba2 0e08 	sub.w	lr, r2, r8
 8015622:	b280      	uxth	r0, r0
 8015624:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8015628:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801562a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801562c:	fa1f fe8e 	uxth.w	lr, lr
 8015630:	1a09      	subs	r1, r1, r0
 8015632:	b289      	uxth	r1, r1
 8015634:	fb0e f202 	mul.w	r2, lr, r2
 8015638:	fb01 220c 	mla	r2, r1, ip, r2
 801563c:	fb00 2204 	mla	r2, r0, r4, r2
 8015640:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015642:	fb08 2204 	mla	r2, r8, r4, r2
 8015646:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801564a:	2a00      	cmp	r2, #0
 801564c:	f000 80e9 	beq.w	8015822 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71a>
 8015650:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015654:	d019      	beq.n	801568a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x582>
 8015656:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801565a:	fb0c fa0a 	mul.w	sl, ip, sl
 801565e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015662:	fb0c fc03 	mul.w	ip, ip, r3
 8015666:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801566a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801566e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015672:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8015676:	4453      	add	r3, sl
 8015678:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801567c:	0a1b      	lsrs	r3, r3, #8
 801567e:	0a3f      	lsrs	r7, r7, #8
 8015680:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015684:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015688:	433b      	orrs	r3, r7
 801568a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801568c:	2cff      	cmp	r4, #255	; 0xff
 801568e:	d020      	beq.n	80156d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8015690:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015692:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015696:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015698:	4367      	muls	r7, r4
 801569a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801569c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80156a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80156a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80156a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80156aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80156ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80156b2:	44bc      	add	ip, r7
 80156b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80156b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80156bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80156c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80156c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80156cc:	ea4c 040a 	orr.w	r4, ip, sl
 80156d0:	940d      	str	r4, [sp, #52]	; 0x34
 80156d2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80156d4:	2cff      	cmp	r4, #255	; 0xff
 80156d6:	d020      	beq.n	801571a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x612>
 80156d8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80156da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80156de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80156e0:	4367      	muls	r7, r4
 80156e2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80156e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80156e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80156ea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80156ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80156f2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80156f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80156fa:	44bc      	add	ip, r7
 80156fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015700:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8015704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015708:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801570c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015710:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015714:	ea4c 040a 	orr.w	r4, ip, sl
 8015718:	9409      	str	r4, [sp, #36]	; 0x24
 801571a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801571c:	2cff      	cmp	r4, #255	; 0xff
 801571e:	d020      	beq.n	8015762 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65a>
 8015720:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015722:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015726:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015728:	4367      	muls	r7, r4
 801572a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801572c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8015730:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015732:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8015736:	fb04 fa0a 	mul.w	sl, r4, sl
 801573a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801573e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015742:	44bc      	add	ip, r7
 8015744:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8015748:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801574c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015750:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015754:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015758:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801575c:	ea4c 040a 	orr.w	r4, ip, sl
 8015760:	940e      	str	r4, [sp, #56]	; 0x38
 8015762:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015764:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8015768:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801576a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801576e:	fb0e f707 	mul.w	r7, lr, r7
 8015772:	fb01 770c 	mla	r7, r1, ip, r7
 8015776:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801577a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801577c:	fb00 770c 	mla	r7, r0, ip, r7
 8015780:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8015784:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015786:	fb08 770c 	mla	r7, r8, ip, r7
 801578a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801578e:	fb0e fe0c 	mul.w	lr, lr, ip
 8015792:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015796:	fb01 e303 	mla	r3, r1, r3, lr
 801579a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801579c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80157a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80157a2:	fb00 330a 	mla	r3, r0, sl, r3
 80157a6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80157aa:	fb08 3c0c 	mla	ip, r8, ip, r3
 80157ae:	f8b9 3000 	ldrh.w	r3, [r9]
 80157b2:	43d2      	mvns	r2, r2
 80157b4:	1218      	asrs	r0, r3, #8
 80157b6:	b2d2      	uxtb	r2, r2
 80157b8:	0a3f      	lsrs	r7, r7, #8
 80157ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80157be:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80157c2:	4350      	muls	r0, r2
 80157c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80157c8:	10d9      	asrs	r1, r3, #3
 80157ca:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80157ce:	00db      	lsls	r3, r3, #3
 80157d0:	ea47 070c 	orr.w	r7, r7, ip
 80157d4:	b2db      	uxtb	r3, r3
 80157d6:	f100 0c01 	add.w	ip, r0, #1
 80157da:	4353      	muls	r3, r2
 80157dc:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 80157e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80157e4:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80157e8:	4351      	muls	r1, r2
 80157ea:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 80157ee:	4a1a      	ldr	r2, [pc, #104]	; (8015858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 80157f0:	f103 0c01 	add.w	ip, r3, #1
 80157f4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80157f8:	fa5f fc87 	uxtb.w	ip, r7
 80157fc:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8015800:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8015804:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8015808:	1c4b      	adds	r3, r1, #1
 801580a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801580e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015812:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8015816:	00ff      	lsls	r7, r7, #3
 8015818:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801581c:	4338      	orrs	r0, r7
 801581e:	f8a9 0000 	strh.w	r0, [r9]
 8015822:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8015824:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015826:	441a      	add	r2, r3
 8015828:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801582a:	922d      	str	r2, [sp, #180]	; 0xb4
 801582c:	f109 0902 	add.w	r9, r9, #2
 8015830:	441d      	add	r5, r3
 8015832:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015836:	e648      	b.n	80154ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8015838:	2800      	cmp	r0, #0
 801583a:	f43f aee9 	beq.w	8015610 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801583e:	5c79      	ldrb	r1, [r7, r1]
 8015840:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8015844:	9109      	str	r1, [sp, #36]	; 0x24
 8015846:	0e09      	lsrs	r1, r1, #24
 8015848:	9111      	str	r1, [sp, #68]	; 0x44
 801584a:	e6e1      	b.n	8015610 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 801584c:	b01b      	add	sp, #108	; 0x6c
 801584e:	ecbd 8b08 	vpop	{d8-d11}
 8015852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015856:	bf00      	nop
 8015858:	fffff800 	.word	0xfffff800

0801585c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801585c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015860:	b085      	sub	sp, #20
 8015862:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8015866:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801586a:	9103      	str	r1, [sp, #12]
 801586c:	fb05 7106 	mla	r1, r5, r6, r7
 8015870:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8015874:	2d00      	cmp	r5, #0
 8015876:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801587a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801587e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8015882:	9401      	str	r4, [sp, #4]
 8015884:	eb03 0901 	add.w	r9, r3, r1
 8015888:	f2c0 80c0 	blt.w	8015a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 801588c:	45a8      	cmp	r8, r5
 801588e:	f340 80bd 	ble.w	8015a0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8015892:	2f00      	cmp	r7, #0
 8015894:	f2c0 80b6 	blt.w	8015a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8015898:	42be      	cmp	r6, r7
 801589a:	f340 80b3 	ble.w	8015a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 801589e:	f813 c001 	ldrb.w	ip, [r3, r1]
 80158a2:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 80158a6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80158aa:	d019      	beq.n	80158e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 80158ac:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 80158b0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80158b4:	435a      	muls	r2, r3
 80158b6:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 80158ba:	f64f 011f 	movw	r1, #63519	; 0xf81f
 80158be:	fb0c f403 	mul.w	r4, ip, r3
 80158c2:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80158c6:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80158ca:	441a      	add	r2, r3
 80158cc:	f104 0320 	add.w	r3, r4, #32
 80158d0:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80158d4:	0a1b      	lsrs	r3, r3, #8
 80158d6:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80158da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80158de:	4319      	orrs	r1, r3
 80158e0:	b289      	uxth	r1, r1
 80158e2:	1c7b      	adds	r3, r7, #1
 80158e4:	f100 8097 	bmi.w	8015a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80158e8:	429e      	cmp	r6, r3
 80158ea:	f340 8094 	ble.w	8015a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 80158ee:	2800      	cmp	r0, #0
 80158f0:	f000 8094 	beq.w	8015a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 80158f4:	f899 4001 	ldrb.w	r4, [r9, #1]
 80158f8:	9b01      	ldr	r3, [sp, #4]
 80158fa:	2cff      	cmp	r4, #255	; 0xff
 80158fc:	885b      	ldrh	r3, [r3, #2]
 80158fe:	d01b      	beq.n	8015938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8015900:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015904:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015908:	fb0a f202 	mul.w	r2, sl, r2
 801590c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015910:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015914:	fb04 fa03 	mul.w	sl, r4, r3
 8015918:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801591c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015920:	441a      	add	r2, r3
 8015922:	f10a 0320 	add.w	r3, sl, #32
 8015926:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801592a:	0a1b      	lsrs	r3, r3, #8
 801592c:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8015930:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015934:	ea4b 0303 	orr.w	r3, fp, r3
 8015938:	b29b      	uxth	r3, r3
 801593a:	3501      	adds	r5, #1
 801593c:	d474      	bmi.n	8015a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 801593e:	45a8      	cmp	r8, r5
 8015940:	dd72      	ble.n	8015a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8015942:	f1be 0f00 	cmp.w	lr, #0
 8015946:	f000 8120 	beq.w	8015b8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 801594a:	2f00      	cmp	r7, #0
 801594c:	db69      	blt.n	8015a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 801594e:	42be      	cmp	r6, r7
 8015950:	dd67      	ble.n	8015a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8015952:	f819 5006 	ldrb.w	r5, [r9, r6]
 8015956:	9a01      	ldr	r2, [sp, #4]
 8015958:	2dff      	cmp	r5, #255	; 0xff
 801595a:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 801595e:	d01c      	beq.n	801599a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8015960:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8015964:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015968:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801596c:	fb05 fa0b 	mul.w	sl, r5, fp
 8015970:	fb08 f802 	mul.w	r8, r8, r2
 8015974:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015978:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 801597c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015980:	4490      	add	r8, r2
 8015982:	f10a 0220 	add.w	r2, sl, #32
 8015986:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 801598a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801598e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8015992:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015996:	ea4b 0b0a 	orr.w	fp, fp, sl
 801599a:	fa1f fb8b 	uxth.w	fp, fp
 801599e:	3701      	adds	r7, #1
 80159a0:	d447      	bmi.n	8015a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80159a2:	42be      	cmp	r6, r7
 80159a4:	dd45      	ble.n	8015a32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 80159a6:	2800      	cmp	r0, #0
 80159a8:	d046      	beq.n	8015a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 80159aa:	3601      	adds	r6, #1
 80159ac:	9a01      	ldr	r2, [sp, #4]
 80159ae:	f819 7006 	ldrb.w	r7, [r9, r6]
 80159b2:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 80159b6:	2fff      	cmp	r7, #255	; 0xff
 80159b8:	d01a      	beq.n	80159f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 80159ba:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 80159be:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80159c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80159c6:	fb07 f902 	mul.w	r9, r7, r2
 80159ca:	fb08 f806 	mul.w	r8, r8, r6
 80159ce:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80159d2:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80159d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80159da:	44b0      	add	r8, r6
 80159dc:	f109 0620 	add.w	r6, r9, #32
 80159e0:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80159e4:	0a36      	lsrs	r6, r6, #8
 80159e6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80159ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80159ee:	4332      	orrs	r2, r6
 80159f0:	b292      	uxth	r2, r2
 80159f2:	280f      	cmp	r0, #15
 80159f4:	d922      	bls.n	8015a3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80159f6:	4b69      	ldr	r3, [pc, #420]	; (8015b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 80159f8:	4a69      	ldr	r2, [pc, #420]	; (8015ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 80159fa:	486a      	ldr	r0, [pc, #424]	; (8015ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 80159fc:	f240 210d 	movw	r1, #525	; 0x20d
 8015a00:	f004 fa1e 	bl	8019e40 <__assert_func>
 8015a04:	f04f 0c00 	mov.w	ip, #0
 8015a08:	4661      	mov	r1, ip
 8015a0a:	e76a      	b.n	80158e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8015a0c:	2400      	movs	r4, #0
 8015a0e:	46a4      	mov	ip, r4
 8015a10:	4623      	mov	r3, r4
 8015a12:	4621      	mov	r1, r4
 8015a14:	e791      	b.n	801593a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015a16:	2400      	movs	r4, #0
 8015a18:	4623      	mov	r3, r4
 8015a1a:	e78e      	b.n	801593a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015a1c:	4604      	mov	r4, r0
 8015a1e:	4603      	mov	r3, r0
 8015a20:	e78b      	b.n	801593a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015a22:	2500      	movs	r5, #0
 8015a24:	46ab      	mov	fp, r5
 8015a26:	e7ba      	b.n	801599e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8015a28:	2700      	movs	r7, #0
 8015a2a:	463d      	mov	r5, r7
 8015a2c:	463a      	mov	r2, r7
 8015a2e:	46bb      	mov	fp, r7
 8015a30:	e7df      	b.n	80159f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8015a32:	2700      	movs	r7, #0
 8015a34:	463a      	mov	r2, r7
 8015a36:	e7dc      	b.n	80159f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8015a38:	4607      	mov	r7, r0
 8015a3a:	4602      	mov	r2, r0
 8015a3c:	f1be 0f0f 	cmp.w	lr, #15
 8015a40:	d8d9      	bhi.n	80159f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8015a42:	b286      	uxth	r6, r0
 8015a44:	fa1f f98e 	uxth.w	r9, lr
 8015a48:	fb06 f809 	mul.w	r8, r6, r9
 8015a4c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8015a50:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8015a54:	0136      	lsls	r6, r6, #4
 8015a56:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a5a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015a5e:	9601      	str	r6, [sp, #4]
 8015a60:	ea4a 0101 	orr.w	r1, sl, r1
 8015a64:	fa1f f689 	uxth.w	r6, r9
 8015a68:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8015a6c:	fb10 f90e 	smulbb	r9, r0, lr
 8015a70:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8015a74:	9602      	str	r6, [sp, #8]
 8015a76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015a7a:	460e      	mov	r6, r1
 8015a7c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015a80:	f1ce 0110 	rsb	r1, lr, #16
 8015a84:	1a09      	subs	r1, r1, r0
 8015a86:	ea4a 0303 	orr.w	r3, sl, r3
 8015a8a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8015a8e:	4343      	muls	r3, r0
 8015a90:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8015a94:	9801      	ldr	r0, [sp, #4]
 8015a96:	fb01 3106 	mla	r1, r1, r6, r3
 8015a9a:	9e02      	ldr	r6, [sp, #8]
 8015a9c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8015aa0:	1b80      	subs	r0, r0, r6
 8015aa2:	9e01      	ldr	r6, [sp, #4]
 8015aa4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8015aa8:	eba6 0608 	sub.w	r6, r6, r8
 8015aac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015ab0:	b2b6      	uxth	r6, r6
 8015ab2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015ab6:	ea4a 0202 	orr.w	r2, sl, r2
 8015aba:	b280      	uxth	r0, r0
 8015abc:	4374      	muls	r4, r6
 8015abe:	fb09 1302 	mla	r3, r9, r2, r1
 8015ac2:	fb0c 4400 	mla	r4, ip, r0, r4
 8015ac6:	9a03      	ldr	r2, [sp, #12]
 8015ac8:	9802      	ldr	r0, [sp, #8]
 8015aca:	8811      	ldrh	r1, [r2, #0]
 8015acc:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015ad0:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8015ad4:	fb00 4505 	mla	r5, r0, r5, r4
 8015ad8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015adc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8015ae0:	fb08 5707 	mla	r7, r8, r7, r5
 8015ae4:	ea4a 0b0b 	orr.w	fp, sl, fp
 8015ae8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8015aec:	b292      	uxth	r2, r2
 8015aee:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8015af2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015af6:	4357      	muls	r7, r2
 8015af8:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015afc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015b00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015b04:	f107 0801 	add.w	r8, r7, #1
 8015b08:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015b0c:	ea43 0e0e 	orr.w	lr, r3, lr
 8015b10:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8015b14:	fa1f f38e 	uxth.w	r3, lr
 8015b18:	1208      	asrs	r0, r1, #8
 8015b1a:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8015b1e:	b2ff      	uxtb	r7, r7
 8015b20:	121c      	asrs	r4, r3, #8
 8015b22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015b26:	fb10 f007 	smulbb	r0, r0, r7
 8015b2a:	10cd      	asrs	r5, r1, #3
 8015b2c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8015b30:	00c9      	lsls	r1, r1, #3
 8015b32:	fb04 0402 	mla	r4, r4, r2, r0
 8015b36:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015b3a:	10d8      	asrs	r0, r3, #3
 8015b3c:	b2c9      	uxtb	r1, r1
 8015b3e:	00db      	lsls	r3, r3, #3
 8015b40:	fb11 f107 	smulbb	r1, r1, r7
 8015b44:	fb15 f507 	smulbb	r5, r5, r7
 8015b48:	b2db      	uxtb	r3, r3
 8015b4a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015b4e:	fb00 5002 	mla	r0, r0, r2, r5
 8015b52:	fb03 1202 	mla	r2, r3, r2, r1
 8015b56:	b2a4      	uxth	r4, r4
 8015b58:	b292      	uxth	r2, r2
 8015b5a:	1c63      	adds	r3, r4, #1
 8015b5c:	1c51      	adds	r1, r2, #1
 8015b5e:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8015b62:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015b66:	b280      	uxth	r0, r0
 8015b68:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015b6c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015b70:	4313      	orrs	r3, r2
 8015b72:	1c42      	adds	r2, r0, #1
 8015b74:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015b78:	0940      	lsrs	r0, r0, #5
 8015b7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015b7e:	9a03      	ldr	r2, [sp, #12]
 8015b80:	4303      	orrs	r3, r0
 8015b82:	8013      	strh	r3, [r2, #0]
 8015b84:	b005      	add	sp, #20
 8015b86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b8a:	280f      	cmp	r0, #15
 8015b8c:	f63f af33 	bhi.w	80159f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8015b90:	4677      	mov	r7, lr
 8015b92:	4675      	mov	r5, lr
 8015b94:	4672      	mov	r2, lr
 8015b96:	46f3      	mov	fp, lr
 8015b98:	e753      	b.n	8015a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 8015b9a:	bf00      	nop
 8015b9c:	0801d907 	.word	0x0801d907
 8015ba0:	0801dec5 	.word	0x0801dec5
 8015ba4:	0801d9f0 	.word	0x0801d9f0

08015ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bac:	ed2d 8b08 	vpush	{d8-d11}
 8015bb0:	b097      	sub	sp, #92	; 0x5c
 8015bb2:	eeb0 aa40 	vmov.f32	s20, s0
 8015bb6:	9214      	str	r2, [sp, #80]	; 0x50
 8015bb8:	9308      	str	r3, [sp, #32]
 8015bba:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015bbc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8015bc0:	9312      	str	r3, [sp, #72]	; 0x48
 8015bc2:	9111      	str	r1, [sp, #68]	; 0x44
 8015bc4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015bc8:	9015      	str	r0, [sp, #84]	; 0x54
 8015bca:	6850      	ldr	r0, [r2, #4]
 8015bcc:	6812      	ldr	r2, [r2, #0]
 8015bce:	fb00 1303 	mla	r3, r0, r3, r1
 8015bd2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015bd6:	9309      	str	r3, [sp, #36]	; 0x24
 8015bd8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015bda:	681b      	ldr	r3, [r3, #0]
 8015bdc:	930b      	str	r3, [sp, #44]	; 0x2c
 8015bde:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015be0:	685b      	ldr	r3, [r3, #4]
 8015be2:	930c      	str	r3, [sp, #48]	; 0x30
 8015be4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8015be8:	930a      	str	r3, [sp, #40]	; 0x28
 8015bea:	eef0 9a60 	vmov.f32	s19, s1
 8015bee:	eeb0 9a41 	vmov.f32	s18, s2
 8015bf2:	eeb0 8a62 	vmov.f32	s16, s5
 8015bf6:	eef0 8a43 	vmov.f32	s17, s6
 8015bfa:	eef0 ba44 	vmov.f32	s23, s8
 8015bfe:	eeb0 ba64 	vmov.f32	s22, s9
 8015c02:	eef0 aa45 	vmov.f32	s21, s10
 8015c06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015c08:	2b00      	cmp	r3, #0
 8015c0a:	dc03      	bgt.n	8015c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015c0c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015c0e:	2b00      	cmp	r3, #0
 8015c10:	f340 83cb 	ble.w	80163aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8015c14:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015c16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015c1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015c1e:	1e48      	subs	r0, r1, #1
 8015c20:	1e55      	subs	r5, r2, #1
 8015c22:	9b08      	ldr	r3, [sp, #32]
 8015c24:	2b00      	cmp	r3, #0
 8015c26:	f340 81a3 	ble.w	8015f70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8015c2a:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8015c2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c2e:	1436      	asrs	r6, r6, #16
 8015c30:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015c34:	d406      	bmi.n	8015c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015c36:	4286      	cmp	r6, r0
 8015c38:	da04      	bge.n	8015c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015c3a:	2b00      	cmp	r3, #0
 8015c3c:	db02      	blt.n	8015c44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015c3e:	42ab      	cmp	r3, r5
 8015c40:	f2c0 8197 	blt.w	8015f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8015c44:	3601      	adds	r6, #1
 8015c46:	f100 8184 	bmi.w	8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015c4a:	42b1      	cmp	r1, r6
 8015c4c:	f2c0 8181 	blt.w	8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015c50:	3301      	adds	r3, #1
 8015c52:	f100 817e 	bmi.w	8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015c56:	429a      	cmp	r2, r3
 8015c58:	f2c0 817b 	blt.w	8015f52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015c5c:	9b08      	ldr	r3, [sp, #32]
 8015c5e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015c60:	9313      	str	r3, [sp, #76]	; 0x4c
 8015c62:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015c66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015c68:	2b00      	cmp	r3, #0
 8015c6a:	f340 81a4 	ble.w	8015fb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8015c6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c70:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8015c72:	1418      	asrs	r0, r3, #16
 8015c74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015c76:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015c7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c7c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015c80:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015c82:	142d      	asrs	r5, r5, #16
 8015c84:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8015c88:	f100 81f8 	bmi.w	801607c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c8c:	f102 3eff 	add.w	lr, r2, #4294967295
 8015c90:	4575      	cmp	r5, lr
 8015c92:	f280 81f3 	bge.w	801607c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c96:	2800      	cmp	r0, #0
 8015c98:	f2c0 81f0 	blt.w	801607c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015c9c:	f103 3eff 	add.w	lr, r3, #4294967295
 8015ca0:	4570      	cmp	r0, lr
 8015ca2:	f280 81eb 	bge.w	801607c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8015ca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015ca8:	b212      	sxth	r2, r2
 8015caa:	fb00 5002 	mla	r0, r0, r2, r5
 8015cae:	fa1f fe81 	uxth.w	lr, r1
 8015cb2:	eb03 0a00 	add.w	sl, r3, r0
 8015cb6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8015cba:	f813 9000 	ldrb.w	r9, [r3, r0]
 8015cbe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015cc2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8015cc6:	b29b      	uxth	r3, r3
 8015cc8:	f1bc 0f00 	cmp.w	ip, #0
 8015ccc:	f000 81b9 	beq.w	8016042 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8015cd0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015cd4:	940d      	str	r4, [sp, #52]	; 0x34
 8015cd6:	eb0a 0b02 	add.w	fp, sl, r2
 8015cda:	fa1f fa8c 	uxth.w	sl, ip
 8015cde:	fb0a fe0e 	mul.w	lr, sl, lr
 8015ce2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8015ce6:	fa1f fa8a 	uxth.w	sl, sl
 8015cea:	eba5 050e 	sub.w	r5, r5, lr
 8015cee:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015cf2:	940e      	str	r4, [sp, #56]	; 0x38
 8015cf4:	eba3 030a 	sub.w	r3, r3, sl
 8015cf8:	b2ad      	uxth	r5, r5
 8015cfa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015cfc:	b29b      	uxth	r3, r3
 8015cfe:	fb08 f505 	mul.w	r5, r8, r5
 8015d02:	fb09 5303 	mla	r3, r9, r3, r5
 8015d06:	fb0a 3304 	mla	r3, sl, r4, r3
 8015d0a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015d0c:	fb0e 3304 	mla	r3, lr, r4, r3
 8015d10:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015d14:	2b00      	cmp	r3, #0
 8015d16:	f000 810f 	beq.w	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8015d1a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015d1c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015d20:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8015d24:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8015d28:	f000 8190 	beq.w	801604c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8015d2c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015d30:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015d34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d38:	fb09 f000 	mul.w	r0, r9, r0
 8015d3c:	fb0a fe0e 	mul.w	lr, sl, lr
 8015d40:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8015d44:	f100 0b20 	add.w	fp, r0, #32
 8015d48:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015d4c:	44ce      	add	lr, r9
 8015d4e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8015d52:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015d56:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015d5a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015d5e:	ea4e 0909 	orr.w	r9, lr, r9
 8015d62:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015d66:	8868      	ldrh	r0, [r5, #2]
 8015d68:	d019      	beq.n	8015d9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015d6a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015d6e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015d72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d76:	fb08 f800 	mul.w	r8, r8, r0
 8015d7a:	fb0a fe0e 	mul.w	lr, sl, lr
 8015d7e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8015d82:	f108 0b20 	add.w	fp, r8, #32
 8015d86:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015d8a:	4486      	add	lr, r0
 8015d8c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8015d90:	0a00      	lsrs	r0, r0, #8
 8015d92:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015d96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d9a:	ea4e 0000 	orr.w	r0, lr, r0
 8015d9e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015da2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8015da6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015daa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015dae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015db2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015db6:	ea4e 0909 	orr.w	r9, lr, r9
 8015dba:	ea4a 0000 	orr.w	r0, sl, r0
 8015dbe:	f1bc 0f00 	cmp.w	ip, #0
 8015dc2:	f000 8145 	beq.w	8016050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8015dc6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8015dca:	3a01      	subs	r2, #1
 8015dcc:	0052      	lsls	r2, r2, #1
 8015dce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015dd0:	3202      	adds	r2, #2
 8015dd2:	2cff      	cmp	r4, #255	; 0xff
 8015dd4:	eb05 0e02 	add.w	lr, r5, r2
 8015dd8:	5aaa      	ldrh	r2, [r5, r2]
 8015dda:	d018      	beq.n	8015e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015ddc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8015de0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015de4:	fb04 fa02 	mul.w	sl, r4, r2
 8015de8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015dec:	fb08 f805 	mul.w	r8, r8, r5
 8015df0:	f10a 0520 	add.w	r5, sl, #32
 8015df4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8015df8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8015dfc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015e00:	4442      	add	r2, r8
 8015e02:	0a2d      	lsrs	r5, r5, #8
 8015e04:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8015e08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015e0c:	432a      	orrs	r2, r5
 8015e0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015e10:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8015e14:	2cff      	cmp	r4, #255	; 0xff
 8015e16:	d01a      	beq.n	8015e4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015e18:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8015e1c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015e20:	fb04 fa05 	mul.w	sl, r4, r5
 8015e24:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015e28:	fb08 f80e 	mul.w	r8, r8, lr
 8015e2c:	f10a 0e20 	add.w	lr, sl, #32
 8015e30:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8015e34:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8015e38:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015e3c:	4445      	add	r5, r8
 8015e3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015e42:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8015e46:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015e4a:	ea45 050e 	orr.w	r5, r5, lr
 8015e4e:	fb1c fe01 	smulbb	lr, ip, r1
 8015e52:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015e56:	f1cc 0810 	rsb	r8, ip, #16
 8015e5a:	eba8 0801 	sub.w	r8, r8, r1
 8015e5e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8015e62:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8015e66:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8015e6a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8015e6e:	4341      	muls	r1, r0
 8015e70:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015e74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015e78:	ea4a 0202 	orr.w	r2, sl, r2
 8015e7c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8015e80:	fb09 1108 	mla	r1, r9, r8, r1
 8015e84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015e88:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015e8c:	fb0c 1102 	mla	r1, ip, r2, r1
 8015e90:	ea4b 0505 	orr.w	r5, fp, r5
 8015e94:	fb0e 1e05 	mla	lr, lr, r5, r1
 8015e98:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8015e9c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015ea0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ea4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015ea8:	ea42 0e0e 	orr.w	lr, r2, lr
 8015eac:	fa1f f28e 	uxth.w	r2, lr
 8015eb0:	2bff      	cmp	r3, #255	; 0xff
 8015eb2:	d103      	bne.n	8015ebc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8015eb4:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015eb6:	29ff      	cmp	r1, #255	; 0xff
 8015eb8:	f000 80de 	beq.w	8016078 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 8015ebc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015ebe:	8838      	ldrh	r0, [r7, #0]
 8015ec0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015ec2:	434b      	muls	r3, r1
 8015ec4:	f103 0c01 	add.w	ip, r3, #1
 8015ec8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8015ecc:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 8015ed0:	1205      	asrs	r5, r0, #8
 8015ed2:	fa5f fc8c 	uxtb.w	ip, ip
 8015ed6:	1213      	asrs	r3, r2, #8
 8015ed8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015edc:	fb15 f50c 	smulbb	r5, r5, ip
 8015ee0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015ee4:	fb03 5301 	mla	r3, r3, r1, r5
 8015ee8:	b29d      	uxth	r5, r3
 8015eea:	10c3      	asrs	r3, r0, #3
 8015eec:	00c0      	lsls	r0, r0, #3
 8015eee:	10d1      	asrs	r1, r2, #3
 8015ef0:	b2c0      	uxtb	r0, r0
 8015ef2:	00d2      	lsls	r2, r2, #3
 8015ef4:	fb10 f00c 	smulbb	r0, r0, ip
 8015ef8:	b2d2      	uxtb	r2, r2
 8015efa:	fb02 0204 	mla	r2, r2, r4, r0
 8015efe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015f02:	fb13 f30c 	smulbb	r3, r3, ip
 8015f06:	b292      	uxth	r2, r2
 8015f08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015f0c:	fb01 3104 	mla	r1, r1, r4, r3
 8015f10:	1c50      	adds	r0, r2, #1
 8015f12:	1c6b      	adds	r3, r5, #1
 8015f14:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8015f18:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015f1c:	b289      	uxth	r1, r1
 8015f1e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015f22:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015f26:	4313      	orrs	r3, r2
 8015f28:	1c4a      	adds	r2, r1, #1
 8015f2a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015f2e:	0949      	lsrs	r1, r1, #5
 8015f30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015f34:	430b      	orrs	r3, r1
 8015f36:	803b      	strh	r3, [r7, #0]
 8015f38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015f3a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015f3c:	4413      	add	r3, r2
 8015f3e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015f40:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015f42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015f44:	441a      	add	r2, r3
 8015f46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015f48:	922a      	str	r2, [sp, #168]	; 0xa8
 8015f4a:	3b01      	subs	r3, #1
 8015f4c:	3702      	adds	r7, #2
 8015f4e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015f50:	e689      	b.n	8015c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8015f52:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015f54:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8015f56:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8015f58:	4433      	add	r3, r6
 8015f5a:	9329      	str	r3, [sp, #164]	; 0xa4
 8015f5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015f5e:	441c      	add	r4, r3
 8015f60:	9b08      	ldr	r3, [sp, #32]
 8015f62:	942a      	str	r4, [sp, #168]	; 0xa8
 8015f64:	3b01      	subs	r3, #1
 8015f66:	9308      	str	r3, [sp, #32]
 8015f68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f6a:	3302      	adds	r3, #2
 8015f6c:	9309      	str	r3, [sp, #36]	; 0x24
 8015f6e:	e658      	b.n	8015c22 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015f70:	d028      	beq.n	8015fc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 8015f72:	9b08      	ldr	r3, [sp, #32]
 8015f74:	982b      	ldr	r0, [sp, #172]	; 0xac
 8015f76:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 8015f78:	3b01      	subs	r3, #1
 8015f7a:	fb00 5003 	mla	r0, r0, r3, r5
 8015f7e:	1400      	asrs	r0, r0, #16
 8015f80:	f53f ae6c 	bmi.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f84:	3901      	subs	r1, #1
 8015f86:	4288      	cmp	r0, r1
 8015f88:	f6bf ae68 	bge.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f8c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8015f8e:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8015f90:	fb01 0303 	mla	r3, r1, r3, r0
 8015f94:	141b      	asrs	r3, r3, #16
 8015f96:	f53f ae61 	bmi.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015f9a:	3a01      	subs	r2, #1
 8015f9c:	4293      	cmp	r3, r2
 8015f9e:	f6bf ae5d 	bge.w	8015c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8015fa2:	9b08      	ldr	r3, [sp, #32]
 8015fa4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8015fa8:	9313      	str	r3, [sp, #76]	; 0x4c
 8015faa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015fae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015fb0:	2b00      	cmp	r3, #0
 8015fb2:	f300 8082 	bgt.w	80160ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8015fb6:	9b08      	ldr	r3, [sp, #32]
 8015fb8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015fbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fbe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015fc2:	9309      	str	r3, [sp, #36]	; 0x24
 8015fc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015fc6:	2b00      	cmp	r3, #0
 8015fc8:	f340 81ef 	ble.w	80163aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 8015fcc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015fd0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015fd4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015fd8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015fda:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015fde:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015fe2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015fe6:	eef0 6a48 	vmov.f32	s13, s16
 8015fea:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015fee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015ff2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015ff6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015ffa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015ffe:	eef0 6a68 	vmov.f32	s13, s17
 8016002:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016006:	ee18 2a10 	vmov	r2, s16
 801600a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801600e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016012:	ee18 2a90 	vmov	r2, s17
 8016016:	932b      	str	r3, [sp, #172]	; 0xac
 8016018:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801601a:	fb92 f3f3 	sdiv	r3, r2, r3
 801601e:	932c      	str	r3, [sp, #176]	; 0xb0
 8016020:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016022:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016024:	3b01      	subs	r3, #1
 8016026:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801602a:	9311      	str	r3, [sp, #68]	; 0x44
 801602c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801602e:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8016032:	bf08      	it	eq
 8016034:	4613      	moveq	r3, r2
 8016036:	9308      	str	r3, [sp, #32]
 8016038:	eef0 8a67 	vmov.f32	s17, s15
 801603c:	eeb0 8a47 	vmov.f32	s16, s14
 8016040:	e5e1      	b.n	8015c06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016042:	fb08 f505 	mul.w	r5, r8, r5
 8016046:	fb09 5303 	mla	r3, r9, r3, r5
 801604a:	e661      	b.n	8015d10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 801604c:	4681      	mov	r9, r0
 801604e:	e688      	b.n	8015d62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8016050:	f1c1 0210 	rsb	r2, r1, #16
 8016054:	4341      	muls	r1, r0
 8016056:	fb09 1902 	mla	r9, r9, r2, r1
 801605a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801605e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016062:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016066:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801606a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801606e:	ea42 0909 	orr.w	r9, r2, r9
 8016072:	fa1f f289 	uxth.w	r2, r9
 8016076:	e71b      	b.n	8015eb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 8016078:	803a      	strh	r2, [r7, #0]
 801607a:	e75d      	b.n	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801607c:	f115 0e01 	adds.w	lr, r5, #1
 8016080:	f53f af5a 	bmi.w	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016084:	4572      	cmp	r2, lr
 8016086:	f6ff af57 	blt.w	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 801608a:	f110 0e01 	adds.w	lr, r0, #1
 801608e:	f53f af53 	bmi.w	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016092:	4573      	cmp	r3, lr
 8016094:	f6ff af50 	blt.w	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8016098:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801609a:	9502      	str	r5, [sp, #8]
 801609c:	b21b      	sxth	r3, r3
 801609e:	b212      	sxth	r2, r2
 80160a0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80160a4:	9301      	str	r3, [sp, #4]
 80160a6:	9200      	str	r2, [sp, #0]
 80160a8:	e9cd c405 	strd	ip, r4, [sp, #20]
 80160ac:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80160b0:	4639      	mov	r1, r7
 80160b2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80160b4:	f7ff fbd2 	bl	801585c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80160b8:	e73e      	b.n	8015f38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80160ba:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80160c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160c2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80160c6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80160c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80160cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80160ce:	141f      	asrs	r7, r3, #16
 80160d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160d2:	141b      	asrs	r3, r3, #16
 80160d4:	fb01 3707 	mla	r7, r1, r7, r3
 80160d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80160da:	fa1f fc82 	uxth.w	ip, r2
 80160de:	eb03 0a07 	add.w	sl, r3, r7
 80160e2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80160e6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80160ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80160ee:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80160f2:	b29b      	uxth	r3, r3
 80160f4:	2d00      	cmp	r5, #0
 80160f6:	f000 813d 	beq.w	8016374 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 80160fa:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80160fe:	940f      	str	r4, [sp, #60]	; 0x3c
 8016100:	eb0a 0b01 	add.w	fp, sl, r1
 8016104:	fa1f fa85 	uxth.w	sl, r5
 8016108:	fb0a fc0c 	mul.w	ip, sl, ip
 801610c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016110:	fa1f fa8a 	uxth.w	sl, sl
 8016114:	eba0 000c 	sub.w	r0, r0, ip
 8016118:	eba3 030a 	sub.w	r3, r3, sl
 801611c:	b280      	uxth	r0, r0
 801611e:	fb08 f000 	mul.w	r0, r8, r0
 8016122:	b29b      	uxth	r3, r3
 8016124:	fb09 0303 	mla	r3, r9, r3, r0
 8016128:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801612a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801612e:	9410      	str	r4, [sp, #64]	; 0x40
 8016130:	fb0a 3300 	mla	r3, sl, r0, r3
 8016134:	fb0c 3304 	mla	r3, ip, r4, r3
 8016138:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801613c:	2b00      	cmp	r3, #0
 801613e:	f000 810b 	beq.w	8016358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 8016142:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016144:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016146:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801614a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801614e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016152:	f000 8114 	beq.w	801637e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 8016156:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801615a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801615e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016162:	fb09 f707 	mul.w	r7, r9, r7
 8016166:	fb0a fc0c 	mul.w	ip, sl, ip
 801616a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801616e:	f107 0b20 	add.w	fp, r7, #32
 8016172:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016176:	44cc      	add	ip, r9
 8016178:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801617c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016180:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016184:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016188:	ea4c 0909 	orr.w	r9, ip, r9
 801618c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016190:	8847      	ldrh	r7, [r0, #2]
 8016192:	d019      	beq.n	80161c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 8016194:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016198:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801619c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80161a0:	fb08 f807 	mul.w	r8, r8, r7
 80161a4:	fb0a fc0c 	mul.w	ip, sl, ip
 80161a8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80161ac:	f108 0b20 	add.w	fp, r8, #32
 80161b0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80161b4:	44bc      	add	ip, r7
 80161b6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80161ba:	0a3f      	lsrs	r7, r7, #8
 80161bc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80161c0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80161c4:	ea4c 0707 	orr.w	r7, ip, r7
 80161c8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80161cc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80161d0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80161d4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80161d8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80161dc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80161e0:	ea4c 0909 	orr.w	r9, ip, r9
 80161e4:	ea4a 0707 	orr.w	r7, sl, r7
 80161e8:	2d00      	cmp	r5, #0
 80161ea:	f000 80ca 	beq.w	8016382 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 80161ee:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80161f2:	3901      	subs	r1, #1
 80161f4:	0049      	lsls	r1, r1, #1
 80161f6:	3102      	adds	r1, #2
 80161f8:	eb00 0c01 	add.w	ip, r0, r1
 80161fc:	5a41      	ldrh	r1, [r0, r1]
 80161fe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8016200:	28ff      	cmp	r0, #255	; 0xff
 8016202:	d019      	beq.n	8016238 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 8016204:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016206:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801620a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801620e:	fb04 fa01 	mul.w	sl, r4, r1
 8016212:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016216:	fb08 f800 	mul.w	r8, r8, r0
 801621a:	f10a 0020 	add.w	r0, sl, #32
 801621e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8016222:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016226:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801622a:	4441      	add	r1, r8
 801622c:	0a00      	lsrs	r0, r0, #8
 801622e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016232:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016236:	4301      	orrs	r1, r0
 8016238:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801623a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801623e:	2cff      	cmp	r4, #255	; 0xff
 8016240:	d01a      	beq.n	8016278 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 8016242:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8016246:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801624a:	fb04 fa00 	mul.w	sl, r4, r0
 801624e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016252:	fb08 f80c 	mul.w	r8, r8, ip
 8016256:	f10a 0c20 	add.w	ip, sl, #32
 801625a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801625e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8016262:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016266:	4440      	add	r0, r8
 8016268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801626c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016270:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016274:	ea40 000c 	orr.w	r0, r0, ip
 8016278:	fb15 fc02 	smulbb	ip, r5, r2
 801627c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016280:	f1c5 0810 	rsb	r8, r5, #16
 8016284:	eba8 0802 	sub.w	r8, r8, r2
 8016288:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801628c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016290:	437a      	muls	r2, r7
 8016292:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8016296:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801629a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801629e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80162a2:	fb09 2208 	mla	r2, r9, r8, r2
 80162a6:	ea4a 0101 	orr.w	r1, sl, r1
 80162aa:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80162ae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80162b2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80162b6:	fb05 2201 	mla	r2, r5, r1, r2
 80162ba:	ea4b 0000 	orr.w	r0, fp, r0
 80162be:	fb0c 2200 	mla	r2, ip, r0, r2
 80162c2:	0d57      	lsrs	r7, r2, #21
 80162c4:	0952      	lsrs	r2, r2, #5
 80162c6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80162ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80162ce:	433a      	orrs	r2, r7
 80162d0:	2bff      	cmp	r3, #255	; 0xff
 80162d2:	b292      	uxth	r2, r2
 80162d4:	d102      	bne.n	80162dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80162d6:	9912      	ldr	r1, [sp, #72]	; 0x48
 80162d8:	29ff      	cmp	r1, #255	; 0xff
 80162da:	d063      	beq.n	80163a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 80162dc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80162de:	f8be 1000 	ldrh.w	r1, [lr]
 80162e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80162e4:	4343      	muls	r3, r0
 80162e6:	1c58      	adds	r0, r3, #1
 80162e8:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80162ec:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80162f0:	1208      	asrs	r0, r1, #8
 80162f2:	b2db      	uxtb	r3, r3
 80162f4:	1215      	asrs	r5, r2, #8
 80162f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80162fa:	fb10 f003 	smulbb	r0, r0, r3
 80162fe:	10cf      	asrs	r7, r1, #3
 8016300:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016304:	00c9      	lsls	r1, r1, #3
 8016306:	fb05 0504 	mla	r5, r5, r4, r0
 801630a:	b2c9      	uxtb	r1, r1
 801630c:	10d0      	asrs	r0, r2, #3
 801630e:	00d2      	lsls	r2, r2, #3
 8016310:	fb11 f103 	smulbb	r1, r1, r3
 8016314:	b2d2      	uxtb	r2, r2
 8016316:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801631a:	fb02 1204 	mla	r2, r2, r4, r1
 801631e:	fb17 f703 	smulbb	r7, r7, r3
 8016322:	b2ad      	uxth	r5, r5
 8016324:	b292      	uxth	r2, r2
 8016326:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801632a:	fb00 7004 	mla	r0, r0, r4, r7
 801632e:	1c6b      	adds	r3, r5, #1
 8016330:	1c57      	adds	r7, r2, #1
 8016332:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8016336:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801633a:	b280      	uxth	r0, r0
 801633c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016340:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8016344:	433d      	orrs	r5, r7
 8016346:	1c47      	adds	r7, r0, #1
 8016348:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801634c:	097f      	lsrs	r7, r7, #5
 801634e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016352:	433d      	orrs	r5, r7
 8016354:	f8ae 5000 	strh.w	r5, [lr]
 8016358:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801635a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801635c:	4413      	add	r3, r2
 801635e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016360:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016362:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016364:	441a      	add	r2, r3
 8016366:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016368:	922a      	str	r2, [sp, #168]	; 0xa8
 801636a:	3b01      	subs	r3, #1
 801636c:	f10e 0e02 	add.w	lr, lr, #2
 8016370:	9313      	str	r3, [sp, #76]	; 0x4c
 8016372:	e61c      	b.n	8015fae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 8016374:	fb08 f000 	mul.w	r0, r8, r0
 8016378:	fb09 0303 	mla	r3, r9, r3, r0
 801637c:	e6dc      	b.n	8016138 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 801637e:	46b9      	mov	r9, r7
 8016380:	e704      	b.n	801618c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 8016382:	f1c2 0110 	rsb	r1, r2, #16
 8016386:	437a      	muls	r2, r7
 8016388:	fb09 2901 	mla	r9, r9, r1, r2
 801638c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016390:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016394:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016398:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801639c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80163a0:	4302      	orrs	r2, r0
 80163a2:	e795      	b.n	80162d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 80163a4:	f8ae 2000 	strh.w	r2, [lr]
 80163a8:	e7d6      	b.n	8016358 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80163aa:	b017      	add	sp, #92	; 0x5c
 80163ac:	ecbd 8b08 	vpop	{d8-d11}
 80163b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080163b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80163b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163b8:	b085      	sub	sp, #20
 80163ba:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80163be:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80163c2:	9103      	str	r1, [sp, #12]
 80163c4:	fb05 7106 	mla	r1, r5, r6, r7
 80163c8:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 80163cc:	2d00      	cmp	r5, #0
 80163ce:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80163d2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80163d6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80163da:	9401      	str	r4, [sp, #4]
 80163dc:	eb02 0901 	add.w	r9, r2, r1
 80163e0:	f2c0 80c0 	blt.w	8016564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80163e4:	45a8      	cmp	r8, r5
 80163e6:	f340 80bd 	ble.w	8016564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 80163ea:	2f00      	cmp	r7, #0
 80163ec:	f2c0 80b6 	blt.w	801655c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80163f0:	42be      	cmp	r6, r7
 80163f2:	f340 80b3 	ble.w	801655c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 80163f6:	f812 c001 	ldrb.w	ip, [r2, r1]
 80163fa:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 80163fe:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016402:	d019      	beq.n	8016438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8016404:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8016408:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801640c:	435a      	muls	r2, r3
 801640e:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8016412:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8016416:	fb0c f403 	mul.w	r4, ip, r3
 801641a:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 801641e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016422:	441a      	add	r2, r3
 8016424:	f104 0320 	add.w	r3, r4, #32
 8016428:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 801642c:	0a1b      	lsrs	r3, r3, #8
 801642e:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8016432:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016436:	4319      	orrs	r1, r3
 8016438:	b289      	uxth	r1, r1
 801643a:	1c7b      	adds	r3, r7, #1
 801643c:	f100 8097 	bmi.w	801656e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8016440:	429e      	cmp	r6, r3
 8016442:	f340 8094 	ble.w	801656e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8016446:	2800      	cmp	r0, #0
 8016448:	f000 8094 	beq.w	8016574 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 801644c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8016450:	9b01      	ldr	r3, [sp, #4]
 8016452:	2cff      	cmp	r4, #255	; 0xff
 8016454:	885b      	ldrh	r3, [r3, #2]
 8016456:	d01b      	beq.n	8016490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8016458:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 801645c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016460:	fb0a f202 	mul.w	r2, sl, r2
 8016464:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016468:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801646c:	fb04 fa03 	mul.w	sl, r4, r3
 8016470:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016474:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016478:	441a      	add	r2, r3
 801647a:	f10a 0320 	add.w	r3, sl, #32
 801647e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016482:	0a1b      	lsrs	r3, r3, #8
 8016484:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016488:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801648c:	ea4b 0303 	orr.w	r3, fp, r3
 8016490:	b29b      	uxth	r3, r3
 8016492:	3501      	adds	r5, #1
 8016494:	d474      	bmi.n	8016580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8016496:	45a8      	cmp	r8, r5
 8016498:	dd72      	ble.n	8016580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 801649a:	f1be 0f00 	cmp.w	lr, #0
 801649e:	f000 8111 	beq.w	80166c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 80164a2:	2f00      	cmp	r7, #0
 80164a4:	db69      	blt.n	801657a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80164a6:	42be      	cmp	r6, r7
 80164a8:	dd67      	ble.n	801657a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 80164aa:	f819 5006 	ldrb.w	r5, [r9, r6]
 80164ae:	9a01      	ldr	r2, [sp, #4]
 80164b0:	2dff      	cmp	r5, #255	; 0xff
 80164b2:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 80164b6:	d01c      	beq.n	80164f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 80164b8:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 80164bc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80164c0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80164c4:	fb05 fa0b 	mul.w	sl, r5, fp
 80164c8:	fb08 f802 	mul.w	r8, r8, r2
 80164cc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80164d0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 80164d4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80164d8:	4490      	add	r8, r2
 80164da:	f10a 0220 	add.w	r2, sl, #32
 80164de:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 80164e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80164e6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 80164ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80164ee:	ea4b 0b0a 	orr.w	fp, fp, sl
 80164f2:	fa1f fb8b 	uxth.w	fp, fp
 80164f6:	3701      	adds	r7, #1
 80164f8:	d447      	bmi.n	801658a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80164fa:	42be      	cmp	r6, r7
 80164fc:	dd45      	ble.n	801658a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 80164fe:	2800      	cmp	r0, #0
 8016500:	d046      	beq.n	8016590 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8016502:	3601      	adds	r6, #1
 8016504:	9a01      	ldr	r2, [sp, #4]
 8016506:	f819 7006 	ldrb.w	r7, [r9, r6]
 801650a:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 801650e:	2fff      	cmp	r7, #255	; 0xff
 8016510:	d01a      	beq.n	8016548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8016512:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8016516:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801651a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801651e:	fb07 f902 	mul.w	r9, r7, r2
 8016522:	fb08 f806 	mul.w	r8, r8, r6
 8016526:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801652a:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 801652e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016532:	44b0      	add	r8, r6
 8016534:	f109 0620 	add.w	r6, r9, #32
 8016538:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801653c:	0a36      	lsrs	r6, r6, #8
 801653e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8016542:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016546:	4332      	orrs	r2, r6
 8016548:	b292      	uxth	r2, r2
 801654a:	280f      	cmp	r0, #15
 801654c:	d922      	bls.n	8016594 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 801654e:	4b61      	ldr	r3, [pc, #388]	; (80166d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8016550:	4a61      	ldr	r2, [pc, #388]	; (80166d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8016552:	4862      	ldr	r0, [pc, #392]	; (80166dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8016554:	f240 210d 	movw	r1, #525	; 0x20d
 8016558:	f003 fc72 	bl	8019e40 <__assert_func>
 801655c:	f04f 0c00 	mov.w	ip, #0
 8016560:	4661      	mov	r1, ip
 8016562:	e76a      	b.n	801643a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8016564:	2400      	movs	r4, #0
 8016566:	46a4      	mov	ip, r4
 8016568:	4623      	mov	r3, r4
 801656a:	4621      	mov	r1, r4
 801656c:	e791      	b.n	8016492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801656e:	2400      	movs	r4, #0
 8016570:	4623      	mov	r3, r4
 8016572:	e78e      	b.n	8016492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8016574:	4604      	mov	r4, r0
 8016576:	4603      	mov	r3, r0
 8016578:	e78b      	b.n	8016492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 801657a:	2500      	movs	r5, #0
 801657c:	46ab      	mov	fp, r5
 801657e:	e7ba      	b.n	80164f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8016580:	2700      	movs	r7, #0
 8016582:	463d      	mov	r5, r7
 8016584:	463a      	mov	r2, r7
 8016586:	46bb      	mov	fp, r7
 8016588:	e7df      	b.n	801654a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 801658a:	2700      	movs	r7, #0
 801658c:	463a      	mov	r2, r7
 801658e:	e7dc      	b.n	801654a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8016590:	4607      	mov	r7, r0
 8016592:	4602      	mov	r2, r0
 8016594:	f1be 0f0f 	cmp.w	lr, #15
 8016598:	d8d9      	bhi.n	801654e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 801659a:	b286      	uxth	r6, r0
 801659c:	fa1f f98e 	uxth.w	r9, lr
 80165a0:	fb06 f809 	mul.w	r8, r6, r9
 80165a4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80165a8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80165ac:	0136      	lsls	r6, r6, #4
 80165ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80165b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80165b6:	9601      	str	r6, [sp, #4]
 80165b8:	ea4a 0101 	orr.w	r1, sl, r1
 80165bc:	fa1f f689 	uxth.w	r6, r9
 80165c0:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 80165c4:	fb10 f90e 	smulbb	r9, r0, lr
 80165c8:	ea4f 09e9 	mov.w	r9, r9, asr #3
 80165cc:	9602      	str	r6, [sp, #8]
 80165ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80165d2:	460e      	mov	r6, r1
 80165d4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80165d8:	f1ce 0110 	rsb	r1, lr, #16
 80165dc:	1a09      	subs	r1, r1, r0
 80165de:	ea4a 0303 	orr.w	r3, sl, r3
 80165e2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80165e6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80165ea:	4343      	muls	r3, r0
 80165ec:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80165f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80165f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80165f8:	fb01 3106 	mla	r1, r1, r6, r3
 80165fc:	ea4a 0202 	orr.w	r2, sl, r2
 8016600:	fb09 1302 	mla	r3, r9, r2, r1
 8016604:	9901      	ldr	r1, [sp, #4]
 8016606:	9802      	ldr	r0, [sp, #8]
 8016608:	9a03      	ldr	r2, [sp, #12]
 801660a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801660e:	1a09      	subs	r1, r1, r0
 8016610:	9801      	ldr	r0, [sp, #4]
 8016612:	8812      	ldrh	r2, [r2, #0]
 8016614:	eba0 0608 	sub.w	r6, r0, r8
 8016618:	b2b6      	uxth	r6, r6
 801661a:	b289      	uxth	r1, r1
 801661c:	4374      	muls	r4, r6
 801661e:	fb0c 4401 	mla	r4, ip, r1, r4
 8016622:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8016626:	9902      	ldr	r1, [sp, #8]
 8016628:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801662c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8016630:	fb01 4505 	mla	r5, r1, r5, r4
 8016634:	ea4a 0b0b 	orr.w	fp, sl, fp
 8016638:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801663c:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8016640:	fb08 5707 	mla	r7, r8, r7, r5
 8016644:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016648:	1211      	asrs	r1, r2, #8
 801664a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801664e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8016652:	b2ff      	uxtb	r7, r7
 8016654:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016658:	10d0      	asrs	r0, r2, #3
 801665a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801665e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016662:	00d2      	lsls	r2, r2, #3
 8016664:	4379      	muls	r1, r7
 8016666:	ea43 0e0e 	orr.w	lr, r3, lr
 801666a:	b2d2      	uxtb	r2, r2
 801666c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016670:	fa1f f38e 	uxth.w	r3, lr
 8016674:	4378      	muls	r0, r7
 8016676:	4357      	muls	r7, r2
 8016678:	1c4a      	adds	r2, r1, #1
 801667a:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801667e:	1219      	asrs	r1, r3, #8
 8016680:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016684:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8016688:	4a15      	ldr	r2, [pc, #84]	; (80166e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 801668a:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801668e:	1c42      	adds	r2, r0, #1
 8016690:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016694:	10da      	asrs	r2, r3, #3
 8016696:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801669a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801669e:	00d2      	lsls	r2, r2, #3
 80166a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166a4:	430a      	orrs	r2, r1
 80166a6:	00db      	lsls	r3, r3, #3
 80166a8:	1c79      	adds	r1, r7, #1
 80166aa:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80166ae:	b2db      	uxtb	r3, r3
 80166b0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80166b4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80166b8:	4313      	orrs	r3, r2
 80166ba:	9a03      	ldr	r2, [sp, #12]
 80166bc:	8013      	strh	r3, [r2, #0]
 80166be:	b005      	add	sp, #20
 80166c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166c4:	280f      	cmp	r0, #15
 80166c6:	f63f af42 	bhi.w	801654e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 80166ca:	4677      	mov	r7, lr
 80166cc:	4675      	mov	r5, lr
 80166ce:	4672      	mov	r2, lr
 80166d0:	46f3      	mov	fp, lr
 80166d2:	e762      	b.n	801659a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 80166d4:	0801d907 	.word	0x0801d907
 80166d8:	0801dec5 	.word	0x0801dec5
 80166dc:	0801d9f0 	.word	0x0801d9f0
 80166e0:	fffff800 	.word	0xfffff800

080166e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80166e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166e8:	ed2d 8b08 	vpush	{d8-d11}
 80166ec:	b093      	sub	sp, #76	; 0x4c
 80166ee:	eeb0 aa40 	vmov.f32	s20, s0
 80166f2:	9210      	str	r2, [sp, #64]	; 0x40
 80166f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80166f6:	910e      	str	r1, [sp, #56]	; 0x38
 80166f8:	9306      	str	r3, [sp, #24]
 80166fa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80166fe:	9011      	str	r0, [sp, #68]	; 0x44
 8016700:	6850      	ldr	r0, [r2, #4]
 8016702:	6812      	ldr	r2, [r2, #0]
 8016704:	fb00 1303 	mla	r3, r0, r3, r1
 8016708:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801670c:	9307      	str	r3, [sp, #28]
 801670e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016710:	681b      	ldr	r3, [r3, #0]
 8016712:	9308      	str	r3, [sp, #32]
 8016714:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016716:	685b      	ldr	r3, [r3, #4]
 8016718:	9309      	str	r3, [sp, #36]	; 0x24
 801671a:	eef0 9a60 	vmov.f32	s19, s1
 801671e:	eeb0 9a41 	vmov.f32	s18, s2
 8016722:	eeb0 8a62 	vmov.f32	s16, s5
 8016726:	eef0 8a43 	vmov.f32	s17, s6
 801672a:	eef0 ba44 	vmov.f32	s23, s8
 801672e:	eeb0 ba64 	vmov.f32	s22, s9
 8016732:	eef0 aa45 	vmov.f32	s21, s10
 8016736:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016738:	2b00      	cmp	r3, #0
 801673a:	dc03      	bgt.n	8016744 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801673c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801673e:	2b00      	cmp	r3, #0
 8016740:	f340 83b6 	ble.w	8016eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8016744:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016746:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801674a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801674e:	1e48      	subs	r0, r1, #1
 8016750:	1e55      	subs	r5, r2, #1
 8016752:	9b06      	ldr	r3, [sp, #24]
 8016754:	2b00      	cmp	r3, #0
 8016756:	f340 8199 	ble.w	8016a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801675a:	9e25      	ldr	r6, [sp, #148]	; 0x94
 801675c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801675e:	1436      	asrs	r6, r6, #16
 8016760:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016764:	d406      	bmi.n	8016774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016766:	4286      	cmp	r6, r0
 8016768:	da04      	bge.n	8016774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801676a:	2b00      	cmp	r3, #0
 801676c:	db02      	blt.n	8016774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801676e:	42ab      	cmp	r3, r5
 8016770:	f2c0 818d 	blt.w	8016a8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8016774:	3601      	adds	r6, #1
 8016776:	f100 817a 	bmi.w	8016a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801677a:	42b1      	cmp	r1, r6
 801677c:	f2c0 8177 	blt.w	8016a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016780:	3301      	adds	r3, #1
 8016782:	f100 8174 	bmi.w	8016a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016786:	429a      	cmp	r2, r3
 8016788:	f2c0 8171 	blt.w	8016a6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801678c:	9b06      	ldr	r3, [sp, #24]
 801678e:	9f07      	ldr	r7, [sp, #28]
 8016790:	930f      	str	r3, [sp, #60]	; 0x3c
 8016792:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016796:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016798:	2b00      	cmp	r3, #0
 801679a:	f340 819a 	ble.w	8016ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801679e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80167a0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80167a2:	1418      	asrs	r0, r3, #16
 80167a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80167a6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80167aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80167ac:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80167b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80167b2:	142d      	asrs	r5, r5, #16
 80167b4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80167b8:	f100 81ee 	bmi.w	8016b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80167bc:	f102 3eff 	add.w	lr, r2, #4294967295
 80167c0:	4575      	cmp	r5, lr
 80167c2:	f280 81e9 	bge.w	8016b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80167c6:	2800      	cmp	r0, #0
 80167c8:	f2c0 81e6 	blt.w	8016b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80167cc:	f103 3eff 	add.w	lr, r3, #4294967295
 80167d0:	4570      	cmp	r0, lr
 80167d2:	f280 81e1 	bge.w	8016b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 80167d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167d8:	b212      	sxth	r2, r2
 80167da:	fb00 5002 	mla	r0, r0, r2, r5
 80167de:	fa1f fe81 	uxth.w	lr, r1
 80167e2:	eb03 0a00 	add.w	sl, r3, r0
 80167e6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80167ea:	f813 9000 	ldrb.w	r9, [r3, r0]
 80167ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80167f2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80167f6:	b29b      	uxth	r3, r3
 80167f8:	f1bc 0f00 	cmp.w	ip, #0
 80167fc:	f000 81af 	beq.w	8016b5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8016800:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016804:	940a      	str	r4, [sp, #40]	; 0x28
 8016806:	eb0a 0b02 	add.w	fp, sl, r2
 801680a:	fa1f fa8c 	uxth.w	sl, ip
 801680e:	fb0a fe0e 	mul.w	lr, sl, lr
 8016812:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016816:	fa1f fa8a 	uxth.w	sl, sl
 801681a:	eba5 050e 	sub.w	r5, r5, lr
 801681e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016822:	940b      	str	r4, [sp, #44]	; 0x2c
 8016824:	eba3 030a 	sub.w	r3, r3, sl
 8016828:	b2ad      	uxth	r5, r5
 801682a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801682c:	b29b      	uxth	r3, r3
 801682e:	fb08 f505 	mul.w	r5, r8, r5
 8016832:	fb09 5303 	mla	r3, r9, r3, r5
 8016836:	fb0a 3304 	mla	r3, sl, r4, r3
 801683a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801683c:	fb0e 3304 	mla	r3, lr, r4, r3
 8016840:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016844:	2b00      	cmp	r3, #0
 8016846:	f000 8105 	beq.w	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801684a:	9c08      	ldr	r4, [sp, #32]
 801684c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016850:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8016854:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8016858:	f000 8186 	beq.w	8016b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801685c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8016860:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016864:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016868:	fb09 f000 	mul.w	r0, r9, r0
 801686c:	fb0a fe0e 	mul.w	lr, sl, lr
 8016870:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016874:	f100 0b20 	add.w	fp, r0, #32
 8016878:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801687c:	44ce      	add	lr, r9
 801687e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8016882:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016886:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801688a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801688e:	ea4e 0909 	orr.w	r9, lr, r9
 8016892:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016896:	8868      	ldrh	r0, [r5, #2]
 8016898:	d019      	beq.n	80168ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801689a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801689e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80168a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80168a6:	fb08 f800 	mul.w	r8, r8, r0
 80168aa:	fb0a fe0e 	mul.w	lr, sl, lr
 80168ae:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80168b2:	f108 0b20 	add.w	fp, r8, #32
 80168b6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80168ba:	4486      	add	lr, r0
 80168bc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80168c0:	0a00      	lsrs	r0, r0, #8
 80168c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80168c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80168ca:	ea4e 0000 	orr.w	r0, lr, r0
 80168ce:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80168d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80168d6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80168da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80168de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80168e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80168e6:	ea4e 0909 	orr.w	r9, lr, r9
 80168ea:	ea4a 0000 	orr.w	r0, sl, r0
 80168ee:	f1bc 0f00 	cmp.w	ip, #0
 80168f2:	f000 813b 	beq.w	8016b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 80168f6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80168fa:	3a01      	subs	r2, #1
 80168fc:	0052      	lsls	r2, r2, #1
 80168fe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016900:	3202      	adds	r2, #2
 8016902:	2cff      	cmp	r4, #255	; 0xff
 8016904:	eb05 0e02 	add.w	lr, r5, r2
 8016908:	5aaa      	ldrh	r2, [r5, r2]
 801690a:	d018      	beq.n	801693e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801690c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8016910:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016914:	fb04 fa02 	mul.w	sl, r4, r2
 8016918:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801691c:	fb08 f805 	mul.w	r8, r8, r5
 8016920:	f10a 0520 	add.w	r5, sl, #32
 8016924:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8016928:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801692c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016930:	4442      	add	r2, r8
 8016932:	0a2d      	lsrs	r5, r5, #8
 8016934:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8016938:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801693c:	432a      	orrs	r2, r5
 801693e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016940:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8016944:	2cff      	cmp	r4, #255	; 0xff
 8016946:	d01a      	beq.n	801697e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8016948:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801694c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016950:	fb04 fa05 	mul.w	sl, r4, r5
 8016954:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016958:	fb08 f80e 	mul.w	r8, r8, lr
 801695c:	f10a 0e20 	add.w	lr, sl, #32
 8016960:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8016964:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8016968:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801696c:	4445      	add	r5, r8
 801696e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016972:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8016976:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801697a:	ea45 050e 	orr.w	r5, r5, lr
 801697e:	fb1c fe01 	smulbb	lr, ip, r1
 8016982:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016986:	f1cc 0810 	rsb	r8, ip, #16
 801698a:	eba8 0801 	sub.w	r8, r8, r1
 801698e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8016992:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8016996:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801699a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801699e:	4341      	muls	r1, r0
 80169a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80169a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80169a8:	ea4a 0202 	orr.w	r2, sl, r2
 80169ac:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80169b0:	fb09 1108 	mla	r1, r9, r8, r1
 80169b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80169b8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80169bc:	fb0c 1102 	mla	r1, ip, r2, r1
 80169c0:	ea4b 0505 	orr.w	r5, fp, r5
 80169c4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80169c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80169cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80169d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169d4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80169d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80169dc:	fa1f f28e 	uxth.w	r2, lr
 80169e0:	2bff      	cmp	r3, #255	; 0xff
 80169e2:	f000 80d7 	beq.w	8016b94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80169e6:	f8b7 c000 	ldrh.w	ip, [r7]
 80169ea:	43db      	mvns	r3, r3
 80169ec:	ea4f 202c 	mov.w	r0, ip, asr #8
 80169f0:	fa5f fe83 	uxtb.w	lr, r3
 80169f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80169f8:	fb00 f00e 	mul.w	r0, r0, lr
 80169fc:	1c41      	adds	r1, r0, #1
 80169fe:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016a02:	1210      	asrs	r0, r2, #8
 8016a04:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016a08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016a0c:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8016a10:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016a14:	496f      	ldr	r1, [pc, #444]	; (8016bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 8016a16:	fb05 f50e 	mul.w	r5, r5, lr
 8016a1a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8016a1e:	1c69      	adds	r1, r5, #1
 8016a20:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8016a24:	10d1      	asrs	r1, r2, #3
 8016a26:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016a2a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8016a2e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8016a32:	b2db      	uxtb	r3, r3
 8016a34:	00c9      	lsls	r1, r1, #3
 8016a36:	fb03 f30e 	mul.w	r3, r3, lr
 8016a3a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a3e:	4301      	orrs	r1, r0
 8016a40:	1c58      	adds	r0, r3, #1
 8016a42:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016a46:	00d3      	lsls	r3, r2, #3
 8016a48:	b2db      	uxtb	r3, r3
 8016a4a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016a4e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8016a52:	803b      	strh	r3, [r7, #0]
 8016a54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016a56:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016a58:	4413      	add	r3, r2
 8016a5a:	9325      	str	r3, [sp, #148]	; 0x94
 8016a5c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016a5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a60:	441a      	add	r2, r3
 8016a62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a64:	9226      	str	r2, [sp, #152]	; 0x98
 8016a66:	3b01      	subs	r3, #1
 8016a68:	3702      	adds	r7, #2
 8016a6a:	930f      	str	r3, [sp, #60]	; 0x3c
 8016a6c:	e693      	b.n	8016796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016a6e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016a70:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8016a72:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8016a74:	4433      	add	r3, r6
 8016a76:	9325      	str	r3, [sp, #148]	; 0x94
 8016a78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016a7a:	441c      	add	r4, r3
 8016a7c:	9b06      	ldr	r3, [sp, #24]
 8016a7e:	9426      	str	r4, [sp, #152]	; 0x98
 8016a80:	3b01      	subs	r3, #1
 8016a82:	9306      	str	r3, [sp, #24]
 8016a84:	9b07      	ldr	r3, [sp, #28]
 8016a86:	3302      	adds	r3, #2
 8016a88:	9307      	str	r3, [sp, #28]
 8016a8a:	e662      	b.n	8016752 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016a8c:	d028      	beq.n	8016ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 8016a8e:	9b06      	ldr	r3, [sp, #24]
 8016a90:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8016a92:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8016a94:	3b01      	subs	r3, #1
 8016a96:	fb00 5003 	mla	r0, r0, r3, r5
 8016a9a:	1400      	asrs	r0, r0, #16
 8016a9c:	f53f ae76 	bmi.w	801678c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016aa0:	3901      	subs	r1, #1
 8016aa2:	4288      	cmp	r0, r1
 8016aa4:	f6bf ae72 	bge.w	801678c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016aa8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8016aaa:	9826      	ldr	r0, [sp, #152]	; 0x98
 8016aac:	fb01 0303 	mla	r3, r1, r3, r0
 8016ab0:	141b      	asrs	r3, r3, #16
 8016ab2:	f53f ae6b 	bmi.w	801678c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016ab6:	3a01      	subs	r2, #1
 8016ab8:	4293      	cmp	r3, r2
 8016aba:	f6bf ae67 	bge.w	801678c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016abe:	9b06      	ldr	r3, [sp, #24]
 8016ac0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8016ac4:	930f      	str	r3, [sp, #60]	; 0x3c
 8016ac6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016aca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016acc:	2b00      	cmp	r3, #0
 8016ace:	f300 8083 	bgt.w	8016bd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8016ad2:	9b06      	ldr	r3, [sp, #24]
 8016ad4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016ad8:	9b07      	ldr	r3, [sp, #28]
 8016ada:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016ade:	9307      	str	r3, [sp, #28]
 8016ae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ae2:	2b00      	cmp	r3, #0
 8016ae4:	f340 81e4 	ble.w	8016eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8016ae8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016aec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016af0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016af4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016af6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016afa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016afe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016b02:	eef0 6a48 	vmov.f32	s13, s16
 8016b06:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016b0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b0e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016b12:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8016b16:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016b1a:	eef0 6a68 	vmov.f32	s13, s17
 8016b1e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016b22:	ee18 2a10 	vmov	r2, s16
 8016b26:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016b2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b2e:	ee18 2a90 	vmov	r2, s17
 8016b32:	9327      	str	r3, [sp, #156]	; 0x9c
 8016b34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016b36:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b3a:	9328      	str	r3, [sp, #160]	; 0xa0
 8016b3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016b40:	3b01      	subs	r3, #1
 8016b42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016b46:	930e      	str	r3, [sp, #56]	; 0x38
 8016b48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016b4a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8016b4e:	bf08      	it	eq
 8016b50:	4613      	moveq	r3, r2
 8016b52:	9306      	str	r3, [sp, #24]
 8016b54:	eef0 8a67 	vmov.f32	s17, s15
 8016b58:	eeb0 8a47 	vmov.f32	s16, s14
 8016b5c:	e5eb      	b.n	8016736 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016b5e:	fb08 f505 	mul.w	r5, r8, r5
 8016b62:	fb09 5303 	mla	r3, r9, r3, r5
 8016b66:	e66b      	b.n	8016840 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8016b68:	4681      	mov	r9, r0
 8016b6a:	e692      	b.n	8016892 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016b6c:	f1c1 0210 	rsb	r2, r1, #16
 8016b70:	4341      	muls	r1, r0
 8016b72:	fb09 1902 	mla	r9, r9, r2, r1
 8016b76:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016b7a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016b7e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016b82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016b86:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016b8a:	ea42 0909 	orr.w	r9, r2, r9
 8016b8e:	fa1f f289 	uxth.w	r2, r9
 8016b92:	e725      	b.n	80169e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8016b94:	803a      	strh	r2, [r7, #0]
 8016b96:	e75d      	b.n	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016b98:	f115 0e01 	adds.w	lr, r5, #1
 8016b9c:	f53f af5a 	bmi.w	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016ba0:	4572      	cmp	r2, lr
 8016ba2:	f6ff af57 	blt.w	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016ba6:	f110 0e01 	adds.w	lr, r0, #1
 8016baa:	f53f af53 	bmi.w	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016bae:	4573      	cmp	r3, lr
 8016bb0:	f6ff af50 	blt.w	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016bb4:	b21b      	sxth	r3, r3
 8016bb6:	b212      	sxth	r2, r2
 8016bb8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8016bbc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8016bc0:	9301      	str	r3, [sp, #4]
 8016bc2:	9200      	str	r2, [sp, #0]
 8016bc4:	4639      	mov	r1, r7
 8016bc6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8016bca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016bcc:	f7ff fbf2 	bl	80163b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016bd0:	e740      	b.n	8016a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016bd2:	bf00      	nop
 8016bd4:	fffff800 	.word	0xfffff800
 8016bd8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016bda:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016bde:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016be0:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8016be4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016be6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016bea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016bec:	141f      	asrs	r7, r3, #16
 8016bee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016bf0:	141b      	asrs	r3, r3, #16
 8016bf2:	fb01 3707 	mla	r7, r1, r7, r3
 8016bf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016bf8:	fa1f fc82 	uxth.w	ip, r2
 8016bfc:	eb03 0a07 	add.w	sl, r3, r7
 8016c00:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8016c04:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016c08:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016c0c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016c10:	b29b      	uxth	r3, r3
 8016c12:	2d00      	cmp	r5, #0
 8016c14:	f000 8131 	beq.w	8016e7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x796>
 8016c18:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8016c1c:	940c      	str	r4, [sp, #48]	; 0x30
 8016c1e:	eb0a 0b01 	add.w	fp, sl, r1
 8016c22:	fa1f fa85 	uxth.w	sl, r5
 8016c26:	fb0a fc0c 	mul.w	ip, sl, ip
 8016c2a:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016c2e:	fa1f fa8a 	uxth.w	sl, sl
 8016c32:	eba0 000c 	sub.w	r0, r0, ip
 8016c36:	eba3 030a 	sub.w	r3, r3, sl
 8016c3a:	b280      	uxth	r0, r0
 8016c3c:	fb08 f000 	mul.w	r0, r8, r0
 8016c40:	b29b      	uxth	r3, r3
 8016c42:	fb09 0303 	mla	r3, r9, r3, r0
 8016c46:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016c48:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016c4c:	940d      	str	r4, [sp, #52]	; 0x34
 8016c4e:	fb0a 3300 	mla	r3, sl, r0, r3
 8016c52:	fb0c 3304 	mla	r3, ip, r4, r3
 8016c56:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016c5a:	2b00      	cmp	r3, #0
 8016c5c:	f000 80ff 	beq.w	8016e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 8016c60:	9808      	ldr	r0, [sp, #32]
 8016c62:	9c08      	ldr	r4, [sp, #32]
 8016c64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016c68:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8016c6c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016c70:	f000 8108 	beq.w	8016e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a0>
 8016c74:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016c78:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016c7c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016c80:	fb09 f707 	mul.w	r7, r9, r7
 8016c84:	fb0a fc0c 	mul.w	ip, sl, ip
 8016c88:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016c8c:	f107 0b20 	add.w	fp, r7, #32
 8016c90:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016c94:	44cc      	add	ip, r9
 8016c96:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016c9a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016c9e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016ca2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016ca6:	ea4c 0909 	orr.w	r9, ip, r9
 8016caa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016cae:	8847      	ldrh	r7, [r0, #2]
 8016cb0:	d019      	beq.n	8016ce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 8016cb2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016cb6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016cba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016cbe:	fb08 f807 	mul.w	r8, r8, r7
 8016cc2:	fb0a fc0c 	mul.w	ip, sl, ip
 8016cc6:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016cca:	f108 0b20 	add.w	fp, r8, #32
 8016cce:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016cd2:	44bc      	add	ip, r7
 8016cd4:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016cd8:	0a3f      	lsrs	r7, r7, #8
 8016cda:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016cde:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016ce2:	ea4c 0707 	orr.w	r7, ip, r7
 8016ce6:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016cea:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016cee:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016cf2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016cf6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016cfa:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016cfe:	ea4c 0909 	orr.w	r9, ip, r9
 8016d02:	ea4a 0707 	orr.w	r7, sl, r7
 8016d06:	2d00      	cmp	r5, #0
 8016d08:	f000 80be 	beq.w	8016e88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8016d0c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8016d10:	3901      	subs	r1, #1
 8016d12:	0049      	lsls	r1, r1, #1
 8016d14:	3102      	adds	r1, #2
 8016d16:	eb00 0c01 	add.w	ip, r0, r1
 8016d1a:	5a41      	ldrh	r1, [r0, r1]
 8016d1c:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016d1e:	28ff      	cmp	r0, #255	; 0xff
 8016d20:	d019      	beq.n	8016d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 8016d22:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016d24:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8016d28:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d2c:	fb04 fa01 	mul.w	sl, r4, r1
 8016d30:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016d34:	fb08 f800 	mul.w	r8, r8, r0
 8016d38:	f10a 0020 	add.w	r0, sl, #32
 8016d3c:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8016d40:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016d44:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016d48:	4441      	add	r1, r8
 8016d4a:	0a00      	lsrs	r0, r0, #8
 8016d4c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016d50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016d54:	4301      	orrs	r1, r0
 8016d56:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016d58:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8016d5c:	2cff      	cmp	r4, #255	; 0xff
 8016d5e:	d01a      	beq.n	8016d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 8016d60:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8016d64:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016d68:	fb04 fa00 	mul.w	sl, r4, r0
 8016d6c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016d70:	fb08 f80c 	mul.w	r8, r8, ip
 8016d74:	f10a 0c20 	add.w	ip, sl, #32
 8016d78:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8016d7c:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8016d80:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016d84:	4440      	add	r0, r8
 8016d86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d8a:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016d8e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016d92:	ea40 000c 	orr.w	r0, r0, ip
 8016d96:	fb15 fc02 	smulbb	ip, r5, r2
 8016d9a:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016d9e:	f1c5 0810 	rsb	r8, r5, #16
 8016da2:	eba8 0802 	sub.w	r8, r8, r2
 8016da6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016daa:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016dae:	437a      	muls	r2, r7
 8016db0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8016db4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8016db8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016dbc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016dc0:	fb09 2208 	mla	r2, r9, r8, r2
 8016dc4:	ea4a 0101 	orr.w	r1, sl, r1
 8016dc8:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8016dcc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016dd0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016dd4:	fb05 2201 	mla	r2, r5, r1, r2
 8016dd8:	ea4b 0000 	orr.w	r0, fp, r0
 8016ddc:	fb0c 2200 	mla	r2, ip, r0, r2
 8016de0:	0d57      	lsrs	r7, r2, #21
 8016de2:	0952      	lsrs	r2, r2, #5
 8016de4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016de8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016dec:	433a      	orrs	r2, r7
 8016dee:	2bff      	cmp	r3, #255	; 0xff
 8016df0:	b292      	uxth	r2, r2
 8016df2:	d05a      	beq.n	8016eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c6>
 8016df4:	f8be 7000 	ldrh.w	r7, [lr]
 8016df8:	4c30      	ldr	r4, [pc, #192]	; (8016ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 8016dfa:	43db      	mvns	r3, r3
 8016dfc:	1238      	asrs	r0, r7, #8
 8016dfe:	fa5f fc83 	uxtb.w	ip, r3
 8016e02:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016e06:	10fd      	asrs	r5, r7, #3
 8016e08:	fb00 f00c 	mul.w	r0, r0, ip
 8016e0c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016e10:	fb05 f10c 	mul.w	r1, r5, ip
 8016e14:	1c45      	adds	r5, r0, #1
 8016e16:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8016e1a:	1215      	asrs	r5, r2, #8
 8016e1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016e20:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8016e24:	1c4d      	adds	r5, r1, #1
 8016e26:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8016e2a:	10d1      	asrs	r1, r2, #3
 8016e2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016e30:	00fb      	lsls	r3, r7, #3
 8016e32:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8016e36:	b2db      	uxtb	r3, r3
 8016e38:	00c9      	lsls	r1, r1, #3
 8016e3a:	fb03 f30c 	mul.w	r3, r3, ip
 8016e3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016e42:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8016e46:	4308      	orrs	r0, r1
 8016e48:	00d2      	lsls	r2, r2, #3
 8016e4a:	1c59      	adds	r1, r3, #1
 8016e4c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016e50:	b2d1      	uxtb	r1, r2
 8016e52:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016e56:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016e5a:	f8ae 0000 	strh.w	r0, [lr]
 8016e5e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016e60:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016e62:	4413      	add	r3, r2
 8016e64:	9325      	str	r3, [sp, #148]	; 0x94
 8016e66:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016e68:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016e6a:	441a      	add	r2, r3
 8016e6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016e6e:	9226      	str	r2, [sp, #152]	; 0x98
 8016e70:	3b01      	subs	r3, #1
 8016e72:	f10e 0e02 	add.w	lr, lr, #2
 8016e76:	930f      	str	r3, [sp, #60]	; 0x3c
 8016e78:	e627      	b.n	8016aca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016e7a:	fb08 f000 	mul.w	r0, r8, r0
 8016e7e:	fb09 0303 	mla	r3, r9, r3, r0
 8016e82:	e6e8      	b.n	8016c56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 8016e84:	46b9      	mov	r9, r7
 8016e86:	e710      	b.n	8016caa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8016e88:	f1c2 0110 	rsb	r1, r2, #16
 8016e8c:	437a      	muls	r2, r7
 8016e8e:	fb09 2901 	mla	r9, r9, r1, r2
 8016e92:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016e96:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016e9a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016e9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016ea2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016ea6:	4302      	orrs	r2, r0
 8016ea8:	e7a1      	b.n	8016dee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8016eaa:	f8ae 2000 	strh.w	r2, [lr]
 8016eae:	e7d6      	b.n	8016e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77a>
 8016eb0:	b013      	add	sp, #76	; 0x4c
 8016eb2:	ecbd 8b08 	vpop	{d8-d11}
 8016eb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016eba:	bf00      	nop
 8016ebc:	fffff800 	.word	0xfffff800

08016ec0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8016ec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016ec4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8016ec8:	fb0c 4e03 	mla	lr, ip, r3, r4
 8016ecc:	f1bc 0f00 	cmp.w	ip, #0
 8016ed0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8016ed4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8016ed8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8016edc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8016ee0:	8808      	ldrh	r0, [r1, #0]
 8016ee2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8016ee6:	db2f      	blt.n	8016f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016ee8:	45e2      	cmp	sl, ip
 8016eea:	dd2d      	ble.n	8016f48 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016eec:	2c00      	cmp	r4, #0
 8016eee:	db29      	blt.n	8016f44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016ef0:	42a3      	cmp	r3, r4
 8016ef2:	dd27      	ble.n	8016f44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016ef4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8016ef8:	1c62      	adds	r2, r4, #1
 8016efa:	d428      	bmi.n	8016f4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016efc:	4293      	cmp	r3, r2
 8016efe:	dd26      	ble.n	8016f4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016f00:	b32f      	cbz	r7, 8016f4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016f02:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8016f06:	f11c 0c01 	adds.w	ip, ip, #1
 8016f0a:	d424      	bmi.n	8016f56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016f0c:	45e2      	cmp	sl, ip
 8016f0e:	dd22      	ble.n	8016f56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016f10:	2e00      	cmp	r6, #0
 8016f12:	f000 809c 	beq.w	801704e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8016f16:	2c00      	cmp	r4, #0
 8016f18:	db1b      	blt.n	8016f52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016f1a:	42a3      	cmp	r3, r4
 8016f1c:	dd19      	ble.n	8016f52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016f1e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8016f22:	3401      	adds	r4, #1
 8016f24:	d41a      	bmi.n	8016f5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016f26:	42a3      	cmp	r3, r4
 8016f28:	dd18      	ble.n	8016f5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016f2a:	b1cf      	cbz	r7, 8016f60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8016f2c:	3301      	adds	r3, #1
 8016f2e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8016f32:	2f0f      	cmp	r7, #15
 8016f34:	d915      	bls.n	8016f62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8016f36:	4b49      	ldr	r3, [pc, #292]	; (801705c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8016f38:	4a49      	ldr	r2, [pc, #292]	; (8017060 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8016f3a:	484a      	ldr	r0, [pc, #296]	; (8017064 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8016f3c:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016f40:	f002 ff7e 	bl	8019e40 <__assert_func>
 8016f44:	4681      	mov	r9, r0
 8016f46:	e7d7      	b.n	8016ef8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8016f48:	4686      	mov	lr, r0
 8016f4a:	4681      	mov	r9, r0
 8016f4c:	e7db      	b.n	8016f06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016f4e:	4686      	mov	lr, r0
 8016f50:	e7d9      	b.n	8016f06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016f52:	4684      	mov	ip, r0
 8016f54:	e7e5      	b.n	8016f22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8016f56:	4603      	mov	r3, r0
 8016f58:	4684      	mov	ip, r0
 8016f5a:	e7ea      	b.n	8016f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016f5c:	4603      	mov	r3, r0
 8016f5e:	e7e8      	b.n	8016f32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016f60:	4603      	mov	r3, r0
 8016f62:	2e0f      	cmp	r6, #15
 8016f64:	d8e7      	bhi.n	8016f36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016f66:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8016f6a:	fb17 f806 	smulbb	r8, r7, r6
 8016f6e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016f72:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8016f76:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016f7a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016f7e:	ea44 0909 	orr.w	r9, r4, r9
 8016f82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016f86:	f1c6 0410 	rsb	r4, r6, #16
 8016f8a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016f8e:	1be4      	subs	r4, r4, r7
 8016f90:	041a      	lsls	r2, r3, #16
 8016f92:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8016f96:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016f9a:	fb07 fe0e 	mul.w	lr, r7, lr
 8016f9e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016fa2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8016fa6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016faa:	fb04 e409 	mla	r4, r4, r9, lr
 8016fae:	4313      	orrs	r3, r2
 8016fb0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8016fb4:	fb08 4303 	mla	r3, r8, r3, r4
 8016fb8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016fbc:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8016fc0:	4322      	orrs	r2, r4
 8016fc2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8016fc6:	fb06 3202 	mla	r2, r6, r2, r3
 8016fca:	0d53      	lsrs	r3, r2, #21
 8016fcc:	0952      	lsrs	r2, r2, #5
 8016fce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016fd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016fd6:	431a      	orrs	r2, r3
 8016fd8:	b293      	uxth	r3, r2
 8016fda:	b2af      	uxth	r7, r5
 8016fdc:	1202      	asrs	r2, r0, #8
 8016fde:	43ed      	mvns	r5, r5
 8016fe0:	b2ed      	uxtb	r5, r5
 8016fe2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016fe6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016fea:	fb12 f205 	smulbb	r2, r2, r5
 8016fee:	10c6      	asrs	r6, r0, #3
 8016ff0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ff4:	fb0c 2c07 	mla	ip, ip, r7, r2
 8016ff8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016ffc:	10da      	asrs	r2, r3, #3
 8016ffe:	fb16 f605 	smulbb	r6, r6, r5
 8017002:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017006:	fb02 6207 	mla	r2, r2, r7, r6
 801700a:	b296      	uxth	r6, r2
 801700c:	00c2      	lsls	r2, r0, #3
 801700e:	00dc      	lsls	r4, r3, #3
 8017010:	b2d2      	uxtb	r2, r2
 8017012:	b2e4      	uxtb	r4, r4
 8017014:	fb12 f205 	smulbb	r2, r2, r5
 8017018:	fb04 2207 	mla	r2, r4, r7, r2
 801701c:	fa1f fc8c 	uxth.w	ip, ip
 8017020:	b292      	uxth	r2, r2
 8017022:	f10c 0301 	add.w	r3, ip, #1
 8017026:	1c50      	adds	r0, r2, #1
 8017028:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801702c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017030:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017034:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017038:	4313      	orrs	r3, r2
 801703a:	1c72      	adds	r2, r6, #1
 801703c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017040:	0952      	lsrs	r2, r2, #5
 8017042:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017046:	4313      	orrs	r3, r2
 8017048:	800b      	strh	r3, [r1, #0]
 801704a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801704e:	2f0f      	cmp	r7, #15
 8017050:	f63f af71 	bhi.w	8016f36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017054:	4603      	mov	r3, r0
 8017056:	4684      	mov	ip, r0
 8017058:	e785      	b.n	8016f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801705a:	bf00      	nop
 801705c:	0801d907 	.word	0x0801d907
 8017060:	0801df6e 	.word	0x0801df6e
 8017064:	0801d9f0 	.word	0x0801d9f0

08017068 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801706c:	ed2d 8b08 	vpush	{d8-d11}
 8017070:	b093      	sub	sp, #76	; 0x4c
 8017072:	461d      	mov	r5, r3
 8017074:	9210      	str	r2, [sp, #64]	; 0x40
 8017076:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017078:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 801707c:	920b      	str	r2, [sp, #44]	; 0x2c
 801707e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8017082:	910a      	str	r1, [sp, #40]	; 0x28
 8017084:	6859      	ldr	r1, [r3, #4]
 8017086:	681b      	ldr	r3, [r3, #0]
 8017088:	9011      	str	r0, [sp, #68]	; 0x44
 801708a:	fb01 2707 	mla	r7, r1, r7, r2
 801708e:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8017092:	9307      	str	r3, [sp, #28]
 8017094:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017096:	681b      	ldr	r3, [r3, #0]
 8017098:	9309      	str	r3, [sp, #36]	; 0x24
 801709a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801709c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80170a0:	43db      	mvns	r3, r3
 80170a2:	b2db      	uxtb	r3, r3
 80170a4:	eeb0 aa40 	vmov.f32	s20, s0
 80170a8:	eef0 9a60 	vmov.f32	s19, s1
 80170ac:	eeb0 9a41 	vmov.f32	s18, s2
 80170b0:	eeb0 8a62 	vmov.f32	s16, s5
 80170b4:	eef0 8a43 	vmov.f32	s17, s6
 80170b8:	eef0 ba44 	vmov.f32	s23, s8
 80170bc:	eeb0 ba64 	vmov.f32	s22, s9
 80170c0:	eef0 aa45 	vmov.f32	s21, s10
 80170c4:	9308      	str	r3, [sp, #32]
 80170c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80170c8:	2b00      	cmp	r3, #0
 80170ca:	dc03      	bgt.n	80170d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80170cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80170ce:	2b00      	cmp	r3, #0
 80170d0:	f340 8203 	ble.w	80174da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80170d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80170da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80170de:	1e48      	subs	r0, r1, #1
 80170e0:	f102 3cff 	add.w	ip, r2, #4294967295
 80170e4:	2d00      	cmp	r5, #0
 80170e6:	f340 80da 	ble.w	801729e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80170ea:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80170ee:	ea4f 4326 	mov.w	r3, r6, asr #16
 80170f2:	d406      	bmi.n	8017102 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80170f4:	4586      	cmp	lr, r0
 80170f6:	da04      	bge.n	8017102 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80170f8:	2b00      	cmp	r3, #0
 80170fa:	db02      	blt.n	8017102 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80170fc:	4563      	cmp	r3, ip
 80170fe:	f2c0 80cf 	blt.w	80172a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8017102:	f11e 0e01 	adds.w	lr, lr, #1
 8017106:	f100 80c1 	bmi.w	801728c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801710a:	4571      	cmp	r1, lr
 801710c:	f2c0 80be 	blt.w	801728c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017110:	3301      	adds	r3, #1
 8017112:	f100 80bb 	bmi.w	801728c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8017116:	429a      	cmp	r2, r3
 8017118:	f2c0 80b8 	blt.w	801728c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801711c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8017120:	46a9      	mov	r9, r5
 8017122:	f1b9 0f00 	cmp.w	r9, #0
 8017126:	f340 80d8 	ble.w	80172da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801712a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801712c:	1421      	asrs	r1, r4, #16
 801712e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8017132:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017136:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801713a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801713e:	f100 8111 	bmi.w	8017364 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017142:	f10e 3aff 	add.w	sl, lr, #4294967295
 8017146:	4551      	cmp	r1, sl
 8017148:	f280 810c 	bge.w	8017364 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801714c:	2800      	cmp	r0, #0
 801714e:	f2c0 8109 	blt.w	8017364 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8017152:	f103 3aff 	add.w	sl, r3, #4294967295
 8017156:	4550      	cmp	r0, sl
 8017158:	f280 8104 	bge.w	8017364 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 801715c:	fa0f f38e 	sxth.w	r3, lr
 8017160:	fb00 1103 	mla	r1, r0, r3, r1
 8017164:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017166:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801716a:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801716e:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8017172:	f1bc 0f00 	cmp.w	ip, #0
 8017176:	d007      	beq.n	8017188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8017178:	005b      	lsls	r3, r3, #1
 801717a:	eb0a 0003 	add.w	r0, sl, r3
 801717e:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8017182:	930c      	str	r3, [sp, #48]	; 0x30
 8017184:	8843      	ldrh	r3, [r0, #2]
 8017186:	930d      	str	r3, [sp, #52]	; 0x34
 8017188:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801718c:	fb12 f30c 	smulbb	r3, r2, ip
 8017190:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017194:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017198:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801719c:	10db      	asrs	r3, r3, #3
 801719e:	ea40 000e 	orr.w	r0, r0, lr
 80171a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80171a6:	f1cc 0e10 	rsb	lr, ip, #16
 80171aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80171ae:	ebae 0e02 	sub.w	lr, lr, r2
 80171b2:	ea4a 0101 	orr.w	r1, sl, r1
 80171b6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80171ba:	4351      	muls	r1, r2
 80171bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80171be:	9f08      	ldr	r7, [sp, #32]
 80171c0:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80171c4:	fb0e 1e00 	mla	lr, lr, r0, r1
 80171c8:	0410      	lsls	r0, r2, #16
 80171ca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80171ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80171d2:	4310      	orrs	r0, r2
 80171d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80171d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80171d8:	0412      	lsls	r2, r2, #16
 80171da:	fb03 e000 	mla	r0, r3, r0, lr
 80171de:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80171e2:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80171e6:	ea42 020e 	orr.w	r2, r2, lr
 80171ea:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80171ee:	fb03 0302 	mla	r3, r3, r2, r0
 80171f2:	0d5a      	lsrs	r2, r3, #21
 80171f4:	095b      	lsrs	r3, r3, #5
 80171f6:	f8b8 c000 	ldrh.w	ip, [r8]
 80171fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80171fe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017202:	4313      	orrs	r3, r2
 8017204:	b29b      	uxth	r3, r3
 8017206:	ea4f 212c 	mov.w	r1, ip, asr #8
 801720a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801720e:	1218      	asrs	r0, r3, #8
 8017210:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017214:	fb11 f107 	smulbb	r1, r1, r7
 8017218:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801721c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017220:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017224:	fb00 1002 	mla	r0, r0, r2, r1
 8017228:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801722c:	10d9      	asrs	r1, r3, #3
 801722e:	fa5f fc8c 	uxtb.w	ip, ip
 8017232:	00db      	lsls	r3, r3, #3
 8017234:	b2db      	uxtb	r3, r3
 8017236:	fb1c fc07 	smulbb	ip, ip, r7
 801723a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801723e:	fb1e fe07 	smulbb	lr, lr, r7
 8017242:	fb01 e102 	mla	r1, r1, r2, lr
 8017246:	fb03 c202 	mla	r2, r3, r2, ip
 801724a:	b280      	uxth	r0, r0
 801724c:	b292      	uxth	r2, r2
 801724e:	1c43      	adds	r3, r0, #1
 8017250:	f102 0c01 	add.w	ip, r2, #1
 8017254:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017258:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801725c:	b289      	uxth	r1, r1
 801725e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017262:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017266:	4313      	orrs	r3, r2
 8017268:	1c4a      	adds	r2, r1, #1
 801726a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801726e:	0949      	lsrs	r1, r1, #5
 8017270:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017274:	430b      	orrs	r3, r1
 8017276:	f8a8 3000 	strh.w	r3, [r8]
 801727a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801727c:	441c      	add	r4, r3
 801727e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017280:	f108 0802 	add.w	r8, r8, #2
 8017284:	441e      	add	r6, r3
 8017286:	f109 39ff 	add.w	r9, r9, #4294967295
 801728a:	e74a      	b.n	8017122 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 801728c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801728e:	441c      	add	r4, r3
 8017290:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017292:	441e      	add	r6, r3
 8017294:	9b07      	ldr	r3, [sp, #28]
 8017296:	3302      	adds	r3, #2
 8017298:	3d01      	subs	r5, #1
 801729a:	9307      	str	r3, [sp, #28]
 801729c:	e722      	b.n	80170e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801729e:	d022      	beq.n	80172e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80172a0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80172a2:	1e6b      	subs	r3, r5, #1
 80172a4:	fb00 4003 	mla	r0, r0, r3, r4
 80172a8:	1400      	asrs	r0, r0, #16
 80172aa:	f53f af37 	bmi.w	801711c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80172ae:	3901      	subs	r1, #1
 80172b0:	4288      	cmp	r0, r1
 80172b2:	f6bf af33 	bge.w	801711c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80172b6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80172b8:	fb01 6303 	mla	r3, r1, r3, r6
 80172bc:	141b      	asrs	r3, r3, #16
 80172be:	f53f af2d 	bmi.w	801711c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80172c2:	3a01      	subs	r2, #1
 80172c4:	4293      	cmp	r3, r2
 80172c6:	f6bf af29 	bge.w	801711c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80172ca:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80172ce:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80172d2:	46a8      	mov	r8, r5
 80172d4:	f1b8 0f00 	cmp.w	r8, #0
 80172d8:	dc5e      	bgt.n	8017398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80172da:	9b07      	ldr	r3, [sp, #28]
 80172dc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80172e0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80172e4:	9307      	str	r3, [sp, #28]
 80172e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80172e8:	2b00      	cmp	r3, #0
 80172ea:	f340 80f6 	ble.w	80174da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80172ee:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80172f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80172f6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80172fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80172fc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017300:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017304:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017308:	eef0 6a48 	vmov.f32	s13, s16
 801730c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017310:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017314:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017318:	ee16 4a90 	vmov	r4, s13
 801731c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017320:	eef0 6a68 	vmov.f32	s13, s17
 8017324:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017328:	ee18 2a10 	vmov	r2, s16
 801732c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017330:	fb92 f3f3 	sdiv	r3, r2, r3
 8017334:	ee18 2a90 	vmov	r2, s17
 8017338:	9327      	str	r3, [sp, #156]	; 0x9c
 801733a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801733c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017340:	9328      	str	r3, [sp, #160]	; 0xa0
 8017342:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017344:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017346:	3b01      	subs	r3, #1
 8017348:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801734c:	930a      	str	r3, [sp, #40]	; 0x28
 801734e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017350:	ee16 6a90 	vmov	r6, s13
 8017354:	bf14      	ite	ne
 8017356:	461d      	movne	r5, r3
 8017358:	4615      	moveq	r5, r2
 801735a:	eef0 8a67 	vmov.f32	s17, s15
 801735e:	eeb0 8a47 	vmov.f32	s16, s14
 8017362:	e6b0      	b.n	80170c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017364:	f111 0a01 	adds.w	sl, r1, #1
 8017368:	d487      	bmi.n	801727a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801736a:	45d6      	cmp	lr, sl
 801736c:	db85      	blt.n	801727a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801736e:	f110 0a01 	adds.w	sl, r0, #1
 8017372:	d482      	bmi.n	801727a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017374:	4553      	cmp	r3, sl
 8017376:	db80      	blt.n	801727a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017378:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801737a:	9101      	str	r1, [sp, #4]
 801737c:	b21b      	sxth	r3, r3
 801737e:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8017382:	9300      	str	r3, [sp, #0]
 8017384:	e9cd c704 	strd	ip, r7, [sp, #16]
 8017388:	fa0f f38e 	sxth.w	r3, lr
 801738c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801738e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017390:	4641      	mov	r1, r8
 8017392:	f7ff fd95 	bl	8016ec0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8017396:	e770      	b.n	801727a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8017398:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801739a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801739c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80173a0:	1430      	asrs	r0, r6, #16
 80173a2:	1423      	asrs	r3, r4, #16
 80173a4:	fb01 3000 	mla	r0, r1, r0, r3
 80173a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80173aa:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80173ae:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80173b2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80173b6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80173ba:	8858      	ldrh	r0, [r3, #2]
 80173bc:	f1be 0f00 	cmp.w	lr, #0
 80173c0:	d00b      	beq.n	80173da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80173c2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80173c6:	3901      	subs	r1, #1
 80173c8:	0049      	lsls	r1, r1, #1
 80173ca:	3102      	adds	r1, #2
 80173cc:	eb03 0b01 	add.w	fp, r3, r1
 80173d0:	5a5b      	ldrh	r3, [r3, r1]
 80173d2:	930e      	str	r3, [sp, #56]	; 0x38
 80173d4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80173d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80173da:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80173de:	fb12 f30e 	smulbb	r3, r2, lr
 80173e2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80173e6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80173ea:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80173ee:	10db      	asrs	r3, r3, #3
 80173f0:	ea41 010c 	orr.w	r1, r1, ip
 80173f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80173f8:	f1ce 0c10 	rsb	ip, lr, #16
 80173fc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017400:	ebac 0c02 	sub.w	ip, ip, r2
 8017404:	ea4b 0000 	orr.w	r0, fp, r0
 8017408:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801740c:	4350      	muls	r0, r2
 801740e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017410:	9f08      	ldr	r7, [sp, #32]
 8017412:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8017416:	fb0c 0c01 	mla	ip, ip, r1, r0
 801741a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801741e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8017422:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017424:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017426:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801742a:	0412      	lsls	r2, r2, #16
 801742c:	ea4b 0101 	orr.w	r1, fp, r1
 8017430:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017434:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017438:	fb03 c101 	mla	r1, r3, r1, ip
 801743c:	4302      	orrs	r2, r0
 801743e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8017442:	fb03 1202 	mla	r2, r3, r2, r1
 8017446:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801744a:	0952      	lsrs	r2, r2, #5
 801744c:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8017450:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8017454:	f8b9 2000 	ldrh.w	r2, [r9]
 8017458:	ea4b 0303 	orr.w	r3, fp, r3
 801745c:	b29b      	uxth	r3, r3
 801745e:	1211      	asrs	r1, r2, #8
 8017460:	1218      	asrs	r0, r3, #8
 8017462:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017466:	fb11 f107 	smulbb	r1, r1, r7
 801746a:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801746e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017472:	00d2      	lsls	r2, r2, #3
 8017474:	fb00 100a 	mla	r0, r0, sl, r1
 8017478:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801747c:	10d9      	asrs	r1, r3, #3
 801747e:	b2d2      	uxtb	r2, r2
 8017480:	00db      	lsls	r3, r3, #3
 8017482:	fb1c fc07 	smulbb	ip, ip, r7
 8017486:	fb12 f207 	smulbb	r2, r2, r7
 801748a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801748e:	b2db      	uxtb	r3, r3
 8017490:	b280      	uxth	r0, r0
 8017492:	fb01 c10a 	mla	r1, r1, sl, ip
 8017496:	fb03 230a 	mla	r3, r3, sl, r2
 801749a:	b29b      	uxth	r3, r3
 801749c:	b289      	uxth	r1, r1
 801749e:	1c42      	adds	r2, r0, #1
 80174a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80174a4:	f101 0c01 	add.w	ip, r1, #1
 80174a8:	1c5a      	adds	r2, r3, #1
 80174aa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80174ae:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80174b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80174b4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80174b8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80174bc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80174c0:	4310      	orrs	r0, r2
 80174c2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80174c6:	441c      	add	r4, r3
 80174c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80174ca:	ea40 000c 	orr.w	r0, r0, ip
 80174ce:	f829 0b02 	strh.w	r0, [r9], #2
 80174d2:	441e      	add	r6, r3
 80174d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80174d8:	e6fc      	b.n	80172d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80174da:	b013      	add	sp, #76	; 0x4c
 80174dc:	ecbd 8b08 	vpop	{d8-d11}
 80174e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080174e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80174e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80174e8:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80174ec:	fb06 5c03 	mla	ip, r6, r3, r5
 80174f0:	2e00      	cmp	r6, #0
 80174f2:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80174f6:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80174fa:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80174fe:	8808      	ldrh	r0, [r1, #0]
 8017500:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8017504:	db2e      	blt.n	8017564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8017506:	45b0      	cmp	r8, r6
 8017508:	dd2c      	ble.n	8017564 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 801750a:	2d00      	cmp	r5, #0
 801750c:	db28      	blt.n	8017560 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801750e:	42ab      	cmp	r3, r5
 8017510:	dd26      	ble.n	8017560 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8017512:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8017516:	1c6a      	adds	r2, r5, #1
 8017518:	d427      	bmi.n	801756a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801751a:	4293      	cmp	r3, r2
 801751c:	dd25      	ble.n	801756a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 801751e:	b324      	cbz	r4, 801756a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8017520:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8017524:	3601      	adds	r6, #1
 8017526:	d424      	bmi.n	8017572 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8017528:	45b0      	cmp	r8, r6
 801752a:	dd22      	ble.n	8017572 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 801752c:	b31f      	cbz	r7, 8017576 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801752e:	2d00      	cmp	r5, #0
 8017530:	db1d      	blt.n	801756e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017532:	42ab      	cmp	r3, r5
 8017534:	dd1b      	ble.n	801756e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8017536:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 801753a:	3501      	adds	r5, #1
 801753c:	d405      	bmi.n	801754a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801753e:	42ab      	cmp	r3, r5
 8017540:	dd03      	ble.n	801754a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017542:	b124      	cbz	r4, 801754e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8017544:	3301      	adds	r3, #1
 8017546:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 801754a:	2c0f      	cmp	r4, #15
 801754c:	d801      	bhi.n	8017552 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801754e:	2f0f      	cmp	r7, #15
 8017550:	d914      	bls.n	801757c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8017552:	4b27      	ldr	r3, [pc, #156]	; (80175f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8017554:	4a27      	ldr	r2, [pc, #156]	; (80175f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8017556:	4828      	ldr	r0, [pc, #160]	; (80175f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8017558:	f240 11ef 	movw	r1, #495	; 0x1ef
 801755c:	f002 fc70 	bl	8019e40 <__assert_func>
 8017560:	4684      	mov	ip, r0
 8017562:	e7d8      	b.n	8017516 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8017564:	4602      	mov	r2, r0
 8017566:	4684      	mov	ip, r0
 8017568:	e7dc      	b.n	8017524 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801756a:	4602      	mov	r2, r0
 801756c:	e7da      	b.n	8017524 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801756e:	4606      	mov	r6, r0
 8017570:	e7e3      	b.n	801753a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8017572:	4606      	mov	r6, r0
 8017574:	e7e9      	b.n	801754a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017576:	2c0f      	cmp	r4, #15
 8017578:	d8eb      	bhi.n	8017552 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801757a:	4606      	mov	r6, r0
 801757c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8017580:	fb14 f307 	smulbb	r3, r4, r7
 8017584:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017588:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 801758c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017590:	10db      	asrs	r3, r3, #3
 8017592:	ea45 0c0c 	orr.w	ip, r5, ip
 8017596:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801759a:	f1c7 0510 	rsb	r5, r7, #16
 801759e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80175a2:	1b2d      	subs	r5, r5, r4
 80175a4:	ea4e 0202 	orr.w	r2, lr, r2
 80175a8:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80175ac:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80175b0:	4354      	muls	r4, r2
 80175b2:	fb05 450c 	mla	r5, r5, ip, r4
 80175b6:	0404      	lsls	r4, r0, #16
 80175b8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80175bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80175c0:	4320      	orrs	r0, r4
 80175c2:	fb03 5400 	mla	r4, r3, r0, r5
 80175c6:	0430      	lsls	r0, r6, #16
 80175c8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80175cc:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80175d0:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80175d4:	4330      	orrs	r0, r6
 80175d6:	fb07 4000 	mla	r0, r7, r0, r4
 80175da:	0d43      	lsrs	r3, r0, #21
 80175dc:	0940      	lsrs	r0, r0, #5
 80175de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80175e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80175e6:	4318      	orrs	r0, r3
 80175e8:	8008      	strh	r0, [r1, #0]
 80175ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80175ee:	bf00      	nop
 80175f0:	0801d907 	.word	0x0801d907
 80175f4:	0801df6e 	.word	0x0801df6e
 80175f8:	0801d9f0 	.word	0x0801d9f0

080175fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80175fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017600:	ed2d 8b08 	vpush	{d8-d11}
 8017604:	b08f      	sub	sp, #60	; 0x3c
 8017606:	461d      	mov	r5, r3
 8017608:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801760a:	920c      	str	r2, [sp, #48]	; 0x30
 801760c:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8017610:	9107      	str	r1, [sp, #28]
 8017612:	6859      	ldr	r1, [r3, #4]
 8017614:	681b      	ldr	r3, [r3, #0]
 8017616:	900d      	str	r0, [sp, #52]	; 0x34
 8017618:	fb01 2707 	mla	r7, r1, r7, r2
 801761c:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8017620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017622:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8017626:	f8d3 8000 	ldr.w	r8, [r3]
 801762a:	eeb0 aa40 	vmov.f32	s20, s0
 801762e:	eef0 9a60 	vmov.f32	s19, s1
 8017632:	eeb0 9a41 	vmov.f32	s18, s2
 8017636:	eeb0 8a62 	vmov.f32	s16, s5
 801763a:	eef0 8a43 	vmov.f32	s17, s6
 801763e:	eef0 ba44 	vmov.f32	s23, s8
 8017642:	eeb0 ba64 	vmov.f32	s22, s9
 8017646:	eef0 aa45 	vmov.f32	s21, s10
 801764a:	9b07      	ldr	r3, [sp, #28]
 801764c:	2b00      	cmp	r3, #0
 801764e:	dc03      	bgt.n	8017658 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017650:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017652:	2b00      	cmp	r3, #0
 8017654:	f340 8181 	ble.w	801795a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8017658:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801765a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801765e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017662:	1e48      	subs	r0, r1, #1
 8017664:	f102 3cff 	add.w	ip, r2, #4294967295
 8017668:	2d00      	cmp	r5, #0
 801766a:	f340 809b 	ble.w	80177a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 801766e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8017672:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017676:	d406      	bmi.n	8017686 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017678:	4586      	cmp	lr, r0
 801767a:	da04      	bge.n	8017686 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801767c:	2b00      	cmp	r3, #0
 801767e:	db02      	blt.n	8017686 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017680:	4563      	cmp	r3, ip
 8017682:	f2c0 8090 	blt.w	80177a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8017686:	f11e 0e01 	adds.w	lr, lr, #1
 801768a:	f100 8084 	bmi.w	8017796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801768e:	4571      	cmp	r1, lr
 8017690:	f2c0 8081 	blt.w	8017796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017694:	3301      	adds	r3, #1
 8017696:	d47e      	bmi.n	8017796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8017698:	429a      	cmp	r2, r3
 801769a:	db7c      	blt.n	8017796 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801769c:	46aa      	mov	sl, r5
 801769e:	46b9      	mov	r9, r7
 80176a0:	f1ba 0f00 	cmp.w	sl, #0
 80176a4:	f340 8099 	ble.w	80177da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 80176a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80176aa:	1421      	asrs	r1, r4, #16
 80176ac:	ea4f 4026 	mov.w	r0, r6, asr #16
 80176b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80176b4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80176b8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80176bc:	f100 80d0 	bmi.w	8017860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80176c0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80176c4:	4559      	cmp	r1, fp
 80176c6:	f280 80cb 	bge.w	8017860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80176ca:	2800      	cmp	r0, #0
 80176cc:	f2c0 80c8 	blt.w	8017860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80176d0:	f103 3bff 	add.w	fp, r3, #4294967295
 80176d4:	4558      	cmp	r0, fp
 80176d6:	f280 80c3 	bge.w	8017860 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80176da:	fa0f fe8e 	sxth.w	lr, lr
 80176de:	fb00 110e 	mla	r1, r0, lr, r1
 80176e2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80176e6:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80176ea:	8841      	ldrh	r1, [r0, #2]
 80176ec:	f1bc 0f00 	cmp.w	ip, #0
 80176f0:	d00b      	beq.n	801770a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80176f2:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80176f6:	3b01      	subs	r3, #1
 80176f8:	005b      	lsls	r3, r3, #1
 80176fa:	3302      	adds	r3, #2
 80176fc:	eb00 0e03 	add.w	lr, r0, r3
 8017700:	5ac3      	ldrh	r3, [r0, r3]
 8017702:	9308      	str	r3, [sp, #32]
 8017704:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8017708:	9309      	str	r3, [sp, #36]	; 0x24
 801770a:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801770e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017712:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8017716:	ea40 000b 	orr.w	r0, r0, fp
 801771a:	fb12 f30c 	smulbb	r3, r2, ip
 801771e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017722:	10db      	asrs	r3, r3, #3
 8017724:	f1cc 0e10 	rsb	lr, ip, #16
 8017728:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801772c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017730:	ebae 0e02 	sub.w	lr, lr, r2
 8017734:	ea4b 0101 	orr.w	r1, fp, r1
 8017738:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801773c:	4351      	muls	r1, r2
 801773e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017740:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8017744:	fb0e 1e00 	mla	lr, lr, r0, r1
 8017748:	0410      	lsls	r0, r2, #16
 801774a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801774e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017752:	4310      	orrs	r0, r2
 8017754:	9a08      	ldr	r2, [sp, #32]
 8017756:	9908      	ldr	r1, [sp, #32]
 8017758:	0412      	lsls	r2, r2, #16
 801775a:	fb03 e000 	mla	r0, r3, r0, lr
 801775e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017762:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017766:	ea42 020e 	orr.w	r2, r2, lr
 801776a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801776e:	fb03 0302 	mla	r3, r3, r2, r0
 8017772:	0d5a      	lsrs	r2, r3, #21
 8017774:	095b      	lsrs	r3, r3, #5
 8017776:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801777a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801777e:	4313      	orrs	r3, r2
 8017780:	f8a9 3000 	strh.w	r3, [r9]
 8017784:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017786:	441c      	add	r4, r3
 8017788:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801778a:	f109 0902 	add.w	r9, r9, #2
 801778e:	441e      	add	r6, r3
 8017790:	f10a 3aff 	add.w	sl, sl, #4294967295
 8017794:	e784      	b.n	80176a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017796:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8017798:	441c      	add	r4, r3
 801779a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801779c:	3d01      	subs	r5, #1
 801779e:	441e      	add	r6, r3
 80177a0:	3702      	adds	r7, #2
 80177a2:	e761      	b.n	8017668 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80177a4:	d01d      	beq.n	80177e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80177a6:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80177a8:	1e6b      	subs	r3, r5, #1
 80177aa:	fb00 4003 	mla	r0, r0, r3, r4
 80177ae:	1400      	asrs	r0, r0, #16
 80177b0:	f53f af74 	bmi.w	801769c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80177b4:	3901      	subs	r1, #1
 80177b6:	4288      	cmp	r0, r1
 80177b8:	f6bf af70 	bge.w	801769c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80177bc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80177be:	fb01 6303 	mla	r3, r1, r3, r6
 80177c2:	141b      	asrs	r3, r3, #16
 80177c4:	f53f af6a 	bmi.w	801769c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80177c8:	3a01      	subs	r2, #1
 80177ca:	4293      	cmp	r3, r2
 80177cc:	f6bf af66 	bge.w	801769c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80177d0:	46a9      	mov	r9, r5
 80177d2:	46ba      	mov	sl, r7
 80177d4:	f1b9 0f00 	cmp.w	r9, #0
 80177d8:	dc5a      	bgt.n	8017890 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80177da:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80177de:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80177e2:	9b07      	ldr	r3, [sp, #28]
 80177e4:	2b00      	cmp	r3, #0
 80177e6:	f340 80b8 	ble.w	801795a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80177ea:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80177ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80177f2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80177f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80177f8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80177fc:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017800:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017804:	eef0 6a48 	vmov.f32	s13, s16
 8017808:	ee69 7a27 	vmul.f32	s15, s18, s15
 801780c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017810:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017814:	ee16 4a90 	vmov	r4, s13
 8017818:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801781c:	eef0 6a68 	vmov.f32	s13, s17
 8017820:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017824:	ee18 2a10 	vmov	r2, s16
 8017828:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801782c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017830:	ee18 2a90 	vmov	r2, s17
 8017834:	9323      	str	r3, [sp, #140]	; 0x8c
 8017836:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017838:	fb92 f3f3 	sdiv	r3, r2, r3
 801783c:	9324      	str	r3, [sp, #144]	; 0x90
 801783e:	9b07      	ldr	r3, [sp, #28]
 8017840:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017842:	3b01      	subs	r3, #1
 8017844:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017848:	9307      	str	r3, [sp, #28]
 801784a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801784c:	ee16 6a90 	vmov	r6, s13
 8017850:	bf14      	ite	ne
 8017852:	461d      	movne	r5, r3
 8017854:	4615      	moveq	r5, r2
 8017856:	eef0 8a67 	vmov.f32	s17, s15
 801785a:	eeb0 8a47 	vmov.f32	s16, s14
 801785e:	e6f4      	b.n	801764a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8017860:	f111 0b01 	adds.w	fp, r1, #1
 8017864:	d48e      	bmi.n	8017784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017866:	45de      	cmp	lr, fp
 8017868:	db8c      	blt.n	8017784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801786a:	f110 0b01 	adds.w	fp, r0, #1
 801786e:	d489      	bmi.n	8017784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017870:	455b      	cmp	r3, fp
 8017872:	db87      	blt.n	8017784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017874:	b21b      	sxth	r3, r3
 8017876:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801787a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801787e:	9300      	str	r3, [sp, #0]
 8017880:	4642      	mov	r2, r8
 8017882:	fa0f f38e 	sxth.w	r3, lr
 8017886:	4649      	mov	r1, r9
 8017888:	980d      	ldr	r0, [sp, #52]	; 0x34
 801788a:	f7ff fe2b 	bl	80174e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801788e:	e779      	b.n	8017784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8017890:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017892:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8017896:	1420      	asrs	r0, r4, #16
 8017898:	1431      	asrs	r1, r6, #16
 801789a:	fb03 0101 	mla	r1, r3, r1, r0
 801789e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80178a2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80178a6:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80178aa:	8841      	ldrh	r1, [r0, #2]
 80178ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80178b0:	f1be 0f00 	cmp.w	lr, #0
 80178b4:	d00b      	beq.n	80178ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 80178b6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80178ba:	3b01      	subs	r3, #1
 80178bc:	005b      	lsls	r3, r3, #1
 80178be:	3302      	adds	r3, #2
 80178c0:	eb00 0b03 	add.w	fp, r0, r3
 80178c4:	5ac3      	ldrh	r3, [r0, r3]
 80178c6:	930a      	str	r3, [sp, #40]	; 0x28
 80178c8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80178cc:	930b      	str	r3, [sp, #44]	; 0x2c
 80178ce:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80178d2:	fb12 f30e 	smulbb	r3, r2, lr
 80178d6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80178da:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80178de:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80178e2:	10db      	asrs	r3, r3, #3
 80178e4:	ea40 000c 	orr.w	r0, r0, ip
 80178e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80178ec:	f1ce 0c10 	rsb	ip, lr, #16
 80178f0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80178f4:	ebac 0c02 	sub.w	ip, ip, r2
 80178f8:	ea4b 0101 	orr.w	r1, fp, r1
 80178fc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8017900:	4351      	muls	r1, r2
 8017902:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017904:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8017908:	fb0c 1c00 	mla	ip, ip, r0, r1
 801790c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8017910:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8017914:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017916:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017918:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801791c:	0412      	lsls	r2, r2, #16
 801791e:	ea4b 0000 	orr.w	r0, fp, r0
 8017922:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017926:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801792a:	fb03 c000 	mla	r0, r3, r0, ip
 801792e:	ea42 0b0b 	orr.w	fp, r2, fp
 8017932:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8017936:	fb03 000b 	mla	r0, r3, fp, r0
 801793a:	0d43      	lsrs	r3, r0, #21
 801793c:	0940      	lsrs	r0, r0, #5
 801793e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017942:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017946:	4318      	orrs	r0, r3
 8017948:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801794a:	f82a 0b02 	strh.w	r0, [sl], #2
 801794e:	441c      	add	r4, r3
 8017950:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017952:	f109 39ff 	add.w	r9, r9, #4294967295
 8017956:	441e      	add	r6, r3
 8017958:	e73c      	b.n	80177d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801795a:	b00f      	add	sp, #60	; 0x3c
 801795c:	ecbd 8b08 	vpop	{d8-d11}
 8017960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8017964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017968:	880e      	ldrh	r6, [r1, #0]
 801796a:	b085      	sub	sp, #20
 801796c:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8017970:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8017974:	4690      	mov	r8, r2
 8017976:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 801797a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 801797e:	9200      	str	r2, [sp, #0]
 8017980:	00f6      	lsls	r6, r6, #3
 8017982:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8017986:	9201      	str	r2, [sp, #4]
 8017988:	2c00      	cmp	r4, #0
 801798a:	b2f2      	uxtb	r2, r6
 801798c:	fb04 5603 	mla	r6, r4, r3, r5
 8017990:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8017994:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8017998:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801799c:	9202      	str	r2, [sp, #8]
 801799e:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 80179a2:	db36      	blt.n	8017a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 80179a4:	45a6      	cmp	lr, r4
 80179a6:	dd34      	ble.n	8017a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 80179a8:	2d00      	cmp	r5, #0
 80179aa:	db30      	blt.n	8017a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 80179ac:	42ab      	cmp	r3, r5
 80179ae:	dd2e      	ble.n	8017a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 80179b0:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 80179b4:	1c6e      	adds	r6, r5, #1
 80179b6:	d42f      	bmi.n	8017a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80179b8:	42b3      	cmp	r3, r6
 80179ba:	dd2d      	ble.n	8017a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 80179bc:	b370      	cbz	r0, 8017a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 80179be:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80179c2:	3401      	adds	r4, #1
 80179c4:	d42e      	bmi.n	8017a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 80179c6:	45a6      	cmp	lr, r4
 80179c8:	dd2c      	ble.n	8017a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 80179ca:	b377      	cbz	r7, 8017a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 80179cc:	2d00      	cmp	r5, #0
 80179ce:	db27      	blt.n	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 80179d0:	42ab      	cmp	r3, r5
 80179d2:	dd25      	ble.n	8017a20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 80179d4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80179d8:	3501      	adds	r5, #1
 80179da:	d429      	bmi.n	8017a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80179dc:	42ab      	cmp	r3, r5
 80179de:	dd27      	ble.n	8017a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 80179e0:	b340      	cbz	r0, 8017a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 80179e2:	3301      	adds	r3, #1
 80179e4:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80179e8:	280f      	cmp	r0, #15
 80179ea:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80179ee:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80179f2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80179f6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80179fa:	d801      	bhi.n	8017a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 80179fc:	2f0f      	cmp	r7, #15
 80179fe:	d91b      	bls.n	8017a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8017a00:	4b84      	ldr	r3, [pc, #528]	; (8017c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 8017a02:	4a85      	ldr	r2, [pc, #532]	; (8017c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8017a04:	4885      	ldr	r0, [pc, #532]	; (8017c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8017a06:	f240 210d 	movw	r1, #525	; 0x20d
 8017a0a:	f002 fa19 	bl	8019e40 <__assert_func>
 8017a0e:	2200      	movs	r2, #0
 8017a10:	e7d0      	b.n	80179b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 8017a12:	2600      	movs	r6, #0
 8017a14:	4632      	mov	r2, r6
 8017a16:	e7d4      	b.n	80179c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017a18:	2600      	movs	r6, #0
 8017a1a:	e7d2      	b.n	80179c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017a1c:	4606      	mov	r6, r0
 8017a1e:	e7d0      	b.n	80179c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017a20:	2400      	movs	r4, #0
 8017a22:	e7d9      	b.n	80179d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8017a24:	2300      	movs	r3, #0
 8017a26:	461c      	mov	r4, r3
 8017a28:	e7de      	b.n	80179e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017a2a:	463b      	mov	r3, r7
 8017a2c:	463c      	mov	r4, r7
 8017a2e:	e7db      	b.n	80179e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017a30:	2300      	movs	r3, #0
 8017a32:	e7d9      	b.n	80179e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017a34:	4603      	mov	r3, r0
 8017a36:	e7d7      	b.n	80179e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017a38:	b280      	uxth	r0, r0
 8017a3a:	b2bf      	uxth	r7, r7
 8017a3c:	fb00 fe07 	mul.w	lr, r0, r7
 8017a40:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017a44:	0100      	lsls	r0, r0, #4
 8017a46:	eba0 0c0e 	sub.w	ip, r0, lr
 8017a4a:	b2bf      	uxth	r7, r7
 8017a4c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017a50:	fa1f fc8c 	uxth.w	ip, ip
 8017a54:	1bed      	subs	r5, r5, r7
 8017a56:	b2ad      	uxth	r5, r5
 8017a58:	fb0c f00a 	mul.w	r0, ip, sl
 8017a5c:	fb05 000b 	mla	r0, r5, fp, r0
 8017a60:	fb07 0009 	mla	r0, r7, r9, r0
 8017a64:	fb0e 0008 	mla	r0, lr, r8, r0
 8017a68:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017a6c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017a70:	9003      	str	r0, [sp, #12]
 8017a72:	d018      	beq.n	8017aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8017a74:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017a78:	fb0b f000 	mul.w	r0, fp, r0
 8017a7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017a80:	fb0b fb02 	mul.w	fp, fp, r2
 8017a84:	0a02      	lsrs	r2, r0, #8
 8017a86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017a8a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017a8e:	4402      	add	r2, r0
 8017a90:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017a94:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017a98:	0a12      	lsrs	r2, r2, #8
 8017a9a:	0a00      	lsrs	r0, r0, #8
 8017a9c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017aa0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017aa4:	4302      	orrs	r2, r0
 8017aa6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017aaa:	d019      	beq.n	8017ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8017aac:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017ab0:	fb0a fb0b 	mul.w	fp, sl, fp
 8017ab4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017ab8:	fb0a fa06 	mul.w	sl, sl, r6
 8017abc:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017ac0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017ac4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017ac8:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017acc:	445e      	add	r6, fp
 8017ace:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017ad2:	0a36      	lsrs	r6, r6, #8
 8017ad4:	0a00      	lsrs	r0, r0, #8
 8017ad6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017ada:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017ade:	4306      	orrs	r6, r0
 8017ae0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017ae4:	d019      	beq.n	8017b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8017ae6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017aea:	fb09 fa0a 	mul.w	sl, r9, sl
 8017aee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017af2:	fb09 f904 	mul.w	r9, r9, r4
 8017af6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017afa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017afe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017b02:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8017b06:	4454      	add	r4, sl
 8017b08:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017b0c:	0a24      	lsrs	r4, r4, #8
 8017b0e:	0a00      	lsrs	r0, r0, #8
 8017b10:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017b14:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b18:	4304      	orrs	r4, r0
 8017b1a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017b1e:	d019      	beq.n	8017b54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8017b20:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017b24:	fb08 f909 	mul.w	r9, r8, r9
 8017b28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017b2c:	fb08 f803 	mul.w	r8, r8, r3
 8017b30:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017b34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017b38:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017b3c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8017b40:	444b      	add	r3, r9
 8017b42:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017b46:	0a1b      	lsrs	r3, r3, #8
 8017b48:	0a00      	lsrs	r0, r0, #8
 8017b4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017b4e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b52:	4303      	orrs	r3, r0
 8017b54:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017b58:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017b5c:	fb0c f808 	mul.w	r8, ip, r8
 8017b60:	fb05 8800 	mla	r8, r5, r0, r8
 8017b64:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8017b68:	fb07 8800 	mla	r8, r7, r0, r8
 8017b6c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8017b70:	fb0e 8000 	mla	r0, lr, r0, r8
 8017b74:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017b78:	fb0c f606 	mul.w	r6, ip, r6
 8017b7c:	0a00      	lsrs	r0, r0, #8
 8017b7e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017b82:	fb05 6202 	mla	r2, r5, r2, r6
 8017b86:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8017b8a:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8017b8e:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8017b92:	fb07 2700 	mla	r7, r7, r0, r2
 8017b96:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8017b9a:	9b03      	ldr	r3, [sp, #12]
 8017b9c:	9c00      	ldr	r4, [sp, #0]
 8017b9e:	b2ad      	uxth	r5, r5
 8017ba0:	436b      	muls	r3, r5
 8017ba2:	fb0e 7000 	mla	r0, lr, r0, r7
 8017ba6:	1c5a      	adds	r2, r3, #1
 8017ba8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8017bac:	0a00      	lsrs	r0, r0, #8
 8017bae:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017bb2:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8017bb6:	ea48 0000 	orr.w	r0, r8, r0
 8017bba:	b2d2      	uxtb	r2, r2
 8017bbc:	fb14 f602 	smulbb	r6, r4, r2
 8017bc0:	0c03      	lsrs	r3, r0, #16
 8017bc2:	fb03 6305 	mla	r3, r3, r5, r6
 8017bc6:	b29e      	uxth	r6, r3
 8017bc8:	9b01      	ldr	r3, [sp, #4]
 8017bca:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8017bce:	fb13 f302 	smulbb	r3, r3, r2
 8017bd2:	fb04 3405 	mla	r4, r4, r5, r3
 8017bd6:	9b02      	ldr	r3, [sp, #8]
 8017bd8:	b2c0      	uxtb	r0, r0
 8017bda:	fb13 f202 	smulbb	r2, r3, r2
 8017bde:	fb00 2005 	mla	r0, r0, r5, r2
 8017be2:	b280      	uxth	r0, r0
 8017be4:	b2a4      	uxth	r4, r4
 8017be6:	1c42      	adds	r2, r0, #1
 8017be8:	1c73      	adds	r3, r6, #1
 8017bea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017bee:	1c62      	adds	r2, r4, #1
 8017bf0:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8017bf4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017bf8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017bfc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017c00:	0952      	lsrs	r2, r2, #5
 8017c02:	4303      	orrs	r3, r0
 8017c04:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c08:	4313      	orrs	r3, r2
 8017c0a:	800b      	strh	r3, [r1, #0]
 8017c0c:	b005      	add	sp, #20
 8017c0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c12:	bf00      	nop
 8017c14:	0801d907 	.word	0x0801d907
 8017c18:	0801dec5 	.word	0x0801dec5
 8017c1c:	0801d9f0 	.word	0x0801d9f0

08017c20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c24:	ed2d 8b08 	vpush	{d8-d11}
 8017c28:	b09d      	sub	sp, #116	; 0x74
 8017c2a:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8017c2e:	9219      	str	r2, [sp, #100]	; 0x64
 8017c30:	9307      	str	r3, [sp, #28]
 8017c32:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017c34:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8017c38:	931a      	str	r3, [sp, #104]	; 0x68
 8017c3a:	9117      	str	r1, [sp, #92]	; 0x5c
 8017c3c:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8017c40:	901b      	str	r0, [sp, #108]	; 0x6c
 8017c42:	6850      	ldr	r0, [r2, #4]
 8017c44:	6812      	ldr	r2, [r2, #0]
 8017c46:	fb00 1303 	mla	r3, r0, r3, r1
 8017c4a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c4e:	930a      	str	r3, [sp, #40]	; 0x28
 8017c50:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017c52:	681b      	ldr	r3, [r3, #0]
 8017c54:	9310      	str	r3, [sp, #64]	; 0x40
 8017c56:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8017c5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8017c5c:	eeb0 aa40 	vmov.f32	s20, s0
 8017c60:	eef0 9a60 	vmov.f32	s19, s1
 8017c64:	eeb0 9a41 	vmov.f32	s18, s2
 8017c68:	eeb0 8a62 	vmov.f32	s16, s5
 8017c6c:	eef0 8a43 	vmov.f32	s17, s6
 8017c70:	eef0 ba44 	vmov.f32	s23, s8
 8017c74:	eeb0 ba64 	vmov.f32	s22, s9
 8017c78:	eef0 aa45 	vmov.f32	s21, s10
 8017c7c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017c7e:	2b00      	cmp	r3, #0
 8017c80:	dc03      	bgt.n	8017c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8017c82:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017c84:	2b00      	cmp	r3, #0
 8017c86:	f340 837b 	ble.w	8018380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 8017c8a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017c8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017c90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017c94:	1e48      	subs	r0, r1, #1
 8017c96:	1e57      	subs	r7, r2, #1
 8017c98:	9b07      	ldr	r3, [sp, #28]
 8017c9a:	2b00      	cmp	r3, #0
 8017c9c:	f340 8194 	ble.w	8017fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8017ca0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017ca4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017ca8:	d406      	bmi.n	8017cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017caa:	4584      	cmp	ip, r0
 8017cac:	da04      	bge.n	8017cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017cae:	2b00      	cmp	r3, #0
 8017cb0:	db02      	blt.n	8017cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017cb2:	42bb      	cmp	r3, r7
 8017cb4:	f2c0 8189 	blt.w	8017fca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8017cb8:	f11c 0c01 	adds.w	ip, ip, #1
 8017cbc:	f100 8179 	bmi.w	8017fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8017cc0:	4561      	cmp	r1, ip
 8017cc2:	f2c0 8176 	blt.w	8017fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8017cc6:	3301      	adds	r3, #1
 8017cc8:	f100 8173 	bmi.w	8017fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8017ccc:	429a      	cmp	r2, r3
 8017cce:	f2c0 8170 	blt.w	8017fb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8017cd2:	9b07      	ldr	r3, [sp, #28]
 8017cd4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017cd6:	9318      	str	r3, [sp, #96]	; 0x60
 8017cd8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017cda:	2b00      	cmp	r3, #0
 8017cdc:	f340 8192 	ble.w	8018004 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8017ce0:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8017ce2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017ce4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017ce8:	689b      	ldr	r3, [r3, #8]
 8017cea:	1422      	asrs	r2, r4, #16
 8017cec:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8017cf0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017cf4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8017cf8:	f100 81d3 	bmi.w	80180a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8017cfc:	f103 38ff 	add.w	r8, r3, #4294967295
 8017d00:	4542      	cmp	r2, r8
 8017d02:	f280 81ce 	bge.w	80180a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8017d06:	f1bc 0f00 	cmp.w	ip, #0
 8017d0a:	f2c0 81ca 	blt.w	80180a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8017d0e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017d12:	45c4      	cmp	ip, r8
 8017d14:	f280 81c5 	bge.w	80180a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8017d18:	b21b      	sxth	r3, r3
 8017d1a:	fb0c 2203 	mla	r2, ip, r3, r2
 8017d1e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017d20:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8017d24:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017d28:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8017d2c:	2800      	cmp	r0, #0
 8017d2e:	f000 81af 	beq.w	8018090 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 8017d32:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017d36:	950c      	str	r5, [sp, #48]	; 0x30
 8017d38:	0e2d      	lsrs	r5, r5, #24
 8017d3a:	9513      	str	r5, [sp, #76]	; 0x4c
 8017d3c:	b181      	cbz	r1, 8017d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8017d3e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8017d42:	3b01      	subs	r3, #1
 8017d44:	009b      	lsls	r3, r3, #2
 8017d46:	3304      	adds	r3, #4
 8017d48:	eb08 0c03 	add.w	ip, r8, r3
 8017d4c:	f858 3003 	ldr.w	r3, [r8, r3]
 8017d50:	9308      	str	r3, [sp, #32]
 8017d52:	0e1b      	lsrs	r3, r3, #24
 8017d54:	9311      	str	r3, [sp, #68]	; 0x44
 8017d56:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8017d5a:	930d      	str	r3, [sp, #52]	; 0x34
 8017d5c:	0e1b      	lsrs	r3, r3, #24
 8017d5e:	9314      	str	r3, [sp, #80]	; 0x50
 8017d60:	b280      	uxth	r0, r0
 8017d62:	b289      	uxth	r1, r1
 8017d64:	fb00 f901 	mul.w	r9, r0, r1
 8017d68:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017d6c:	0100      	lsls	r0, r0, #4
 8017d6e:	eba0 0809 	sub.w	r8, r0, r9
 8017d72:	b289      	uxth	r1, r1
 8017d74:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017d78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017d7a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017d7c:	fa1f f888 	uxth.w	r8, r8
 8017d80:	1a5b      	subs	r3, r3, r1
 8017d82:	b29b      	uxth	r3, r3
 8017d84:	fb08 f000 	mul.w	r0, r8, r0
 8017d88:	fb03 000e 	mla	r0, r3, lr, r0
 8017d8c:	fb01 0005 	mla	r0, r1, r5, r0
 8017d90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017d92:	fb09 0005 	mla	r0, r9, r5, r0
 8017d96:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017d9a:	2800      	cmp	r0, #0
 8017d9c:	f000 8100 	beq.w	8017fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8017da0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017da4:	d01b      	beq.n	8017dde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 8017da6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8017daa:	fb0e fa0a 	mul.w	sl, lr, sl
 8017dae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017db2:	fb0e fe02 	mul.w	lr, lr, r2
 8017db6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8017dba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017dbe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017dc2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017dc6:	4452      	add	r2, sl
 8017dc8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017dcc:	0a12      	lsrs	r2, r2, #8
 8017dce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017dd2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017dd6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017dda:	ea42 020c 	orr.w	r2, r2, ip
 8017dde:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017de0:	2dff      	cmp	r5, #255	; 0xff
 8017de2:	d021      	beq.n	8017e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017de4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017de6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017dea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017dec:	fb05 fb0b 	mul.w	fp, r5, fp
 8017df0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017df2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017df6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017df8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017dfc:	fb05 fa0a 	mul.w	sl, r5, sl
 8017e00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e04:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e08:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e0c:	44de      	add	lr, fp
 8017e0e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e12:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e22:	ea4e 050a 	orr.w	r5, lr, sl
 8017e26:	950c      	str	r5, [sp, #48]	; 0x30
 8017e28:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017e2a:	2dff      	cmp	r5, #255	; 0xff
 8017e2c:	d021      	beq.n	8017e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017e2e:	9d08      	ldr	r5, [sp, #32]
 8017e30:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017e34:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017e36:	fb05 fb0b 	mul.w	fp, r5, fp
 8017e3a:	9d08      	ldr	r5, [sp, #32]
 8017e3c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017e40:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017e42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e46:	fb05 fa0a 	mul.w	sl, r5, sl
 8017e4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e4e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e52:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e56:	44de      	add	lr, fp
 8017e58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e68:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e6c:	ea4e 050a 	orr.w	r5, lr, sl
 8017e70:	9508      	str	r5, [sp, #32]
 8017e72:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e74:	2dff      	cmp	r5, #255	; 0xff
 8017e76:	d021      	beq.n	8017ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8017e78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017e7a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017e7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e80:	fb05 fb0b 	mul.w	fp, r5, fp
 8017e84:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017e86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017e8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017e8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e90:	fb05 fa0a 	mul.w	sl, r5, sl
 8017e94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e9c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017ea0:	44de      	add	lr, fp
 8017ea2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017ea6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017eaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017eae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017eb2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017eb6:	ea4e 050a 	orr.w	r5, lr, sl
 8017eba:	950d      	str	r5, [sp, #52]	; 0x34
 8017ebc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017ebe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8017ec2:	9d08      	ldr	r5, [sp, #32]
 8017ec4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8017ec8:	fb08 fc0c 	mul.w	ip, r8, ip
 8017ecc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8017ed0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017ed4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017ed6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017eda:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017ede:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017ee0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017ee4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8017ee8:	fb08 f80e 	mul.w	r8, r8, lr
 8017eec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017ef0:	fb03 8202 	mla	r2, r3, r2, r8
 8017ef4:	9b08      	ldr	r3, [sp, #32]
 8017ef6:	f8b7 e000 	ldrh.w	lr, [r7]
 8017efa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017efc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8017f00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f02:	fb01 220a 	mla	r2, r1, sl, r2
 8017f06:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8017f0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017f0c:	fb09 2901 	mla	r9, r9, r1, r2
 8017f10:	4343      	muls	r3, r0
 8017f12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017f16:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017f1a:	1c58      	adds	r0, r3, #1
 8017f1c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017f20:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017f24:	ea4c 0c09 	orr.w	ip, ip, r9
 8017f28:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017f2c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017f2e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8017f32:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017f36:	ea4f 232e 	mov.w	r3, lr, asr #8
 8017f3a:	b2c0      	uxtb	r0, r0
 8017f3c:	fb11 f102 	smulbb	r1, r1, r2
 8017f40:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017f44:	fb03 1300 	mla	r3, r3, r0, r1
 8017f48:	b299      	uxth	r1, r3
 8017f4a:	ea4f 02ee 	mov.w	r2, lr, asr #3
 8017f4e:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8017f52:	fb13 f305 	smulbb	r3, r3, r5
 8017f56:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017f5a:	fb02 3200 	mla	r2, r2, r0, r3
 8017f5e:	fa5f fc8c 	uxtb.w	ip, ip
 8017f62:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8017f66:	b2db      	uxtb	r3, r3
 8017f68:	fb1c fc05 	smulbb	ip, ip, r5
 8017f6c:	fb03 cc00 	mla	ip, r3, r0, ip
 8017f70:	b292      	uxth	r2, r2
 8017f72:	fa1f fc8c 	uxth.w	ip, ip
 8017f76:	1c4b      	adds	r3, r1, #1
 8017f78:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017f7c:	f10c 0001 	add.w	r0, ip, #1
 8017f80:	1c51      	adds	r1, r2, #1
 8017f82:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8017f86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f8a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017f8e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017f92:	0952      	lsrs	r2, r2, #5
 8017f94:	ea43 030c 	orr.w	r3, r3, ip
 8017f98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f9c:	4313      	orrs	r3, r2
 8017f9e:	803b      	strh	r3, [r7, #0]
 8017fa0:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017fa2:	441c      	add	r4, r3
 8017fa4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017fa6:	441e      	add	r6, r3
 8017fa8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017faa:	3b01      	subs	r3, #1
 8017fac:	3702      	adds	r7, #2
 8017fae:	9318      	str	r3, [sp, #96]	; 0x60
 8017fb0:	e692      	b.n	8017cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8017fb2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017fb4:	441c      	add	r4, r3
 8017fb6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017fb8:	441e      	add	r6, r3
 8017fba:	9b07      	ldr	r3, [sp, #28]
 8017fbc:	3b01      	subs	r3, #1
 8017fbe:	9307      	str	r3, [sp, #28]
 8017fc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017fc2:	3302      	adds	r3, #2
 8017fc4:	930a      	str	r3, [sp, #40]	; 0x28
 8017fc6:	e667      	b.n	8017c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017fc8:	d023      	beq.n	8018012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8017fca:	9b07      	ldr	r3, [sp, #28]
 8017fcc:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8017fce:	3b01      	subs	r3, #1
 8017fd0:	fb00 4003 	mla	r0, r0, r3, r4
 8017fd4:	1400      	asrs	r0, r0, #16
 8017fd6:	f53f ae7c 	bmi.w	8017cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017fda:	3901      	subs	r1, #1
 8017fdc:	4288      	cmp	r0, r1
 8017fde:	f6bf ae78 	bge.w	8017cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017fe2:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8017fe4:	fb01 6303 	mla	r3, r1, r3, r6
 8017fe8:	141b      	asrs	r3, r3, #16
 8017fea:	f53f ae72 	bmi.w	8017cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017fee:	3a01      	subs	r2, #1
 8017ff0:	4293      	cmp	r3, r2
 8017ff2:	f6bf ae6e 	bge.w	8017cd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017ff6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017ffa:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017ffe:	f1bb 0f00 	cmp.w	fp, #0
 8018002:	dc6c      	bgt.n	80180de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8018004:	9b07      	ldr	r3, [sp, #28]
 8018006:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801800a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801800c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018010:	930a      	str	r3, [sp, #40]	; 0x28
 8018012:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018014:	2b00      	cmp	r3, #0
 8018016:	f340 81b3 	ble.w	8018380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 801801a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801801e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018022:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018026:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018028:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801802c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018030:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018034:	eef0 6a48 	vmov.f32	s13, s16
 8018038:	ee69 7a27 	vmul.f32	s15, s18, s15
 801803c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018040:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018044:	ee16 4a90 	vmov	r4, s13
 8018048:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801804c:	eef0 6a68 	vmov.f32	s13, s17
 8018050:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018054:	ee18 2a10 	vmov	r2, s16
 8018058:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801805c:	fb92 f3f3 	sdiv	r3, r2, r3
 8018060:	ee18 2a90 	vmov	r2, s17
 8018064:	9331      	str	r3, [sp, #196]	; 0xc4
 8018066:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018068:	fb92 f3f3 	sdiv	r3, r2, r3
 801806c:	9332      	str	r3, [sp, #200]	; 0xc8
 801806e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018070:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8018072:	3b01      	subs	r3, #1
 8018074:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018078:	9317      	str	r3, [sp, #92]	; 0x5c
 801807a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801807c:	bf08      	it	eq
 801807e:	4613      	moveq	r3, r2
 8018080:	ee16 6a90 	vmov	r6, s13
 8018084:	9307      	str	r3, [sp, #28]
 8018086:	eef0 8a67 	vmov.f32	s17, s15
 801808a:	eeb0 8a47 	vmov.f32	s16, s14
 801808e:	e5f5      	b.n	8017c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018090:	2900      	cmp	r1, #0
 8018092:	f43f ae65 	beq.w	8017d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8018096:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801809a:	9308      	str	r3, [sp, #32]
 801809c:	0e1b      	lsrs	r3, r3, #24
 801809e:	9311      	str	r3, [sp, #68]	; 0x44
 80180a0:	e65e      	b.n	8017d60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80180a2:	f112 0801 	adds.w	r8, r2, #1
 80180a6:	f53f af7b 	bmi.w	8017fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 80180aa:	4543      	cmp	r3, r8
 80180ac:	f6ff af78 	blt.w	8017fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 80180b0:	f11c 0801 	adds.w	r8, ip, #1
 80180b4:	f53f af74 	bmi.w	8017fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 80180b8:	45c6      	cmp	lr, r8
 80180ba:	f6ff af71 	blt.w	8017fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 80180be:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80180c0:	9201      	str	r2, [sp, #4]
 80180c2:	fa0f f28e 	sxth.w	r2, lr
 80180c6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80180ca:	e9cd c002 	strd	ip, r0, [sp, #8]
 80180ce:	9200      	str	r2, [sp, #0]
 80180d0:	b21b      	sxth	r3, r3
 80180d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80180d4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80180d6:	4639      	mov	r1, r7
 80180d8:	f7ff fc44 	bl	8017964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80180dc:	e760      	b.n	8017fa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 80180de:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80180e0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80180e2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80180e6:	1427      	asrs	r7, r4, #16
 80180e8:	1433      	asrs	r3, r6, #16
 80180ea:	fb01 7303 	mla	r3, r1, r3, r7
 80180ee:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80180f2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80180f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80180fa:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80180fe:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018102:	2a00      	cmp	r2, #0
 8018104:	f000 8133 	beq.w	801836e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 8018108:	687d      	ldr	r5, [r7, #4]
 801810a:	950e      	str	r5, [sp, #56]	; 0x38
 801810c:	0e2d      	lsrs	r5, r5, #24
 801810e:	9515      	str	r5, [sp, #84]	; 0x54
 8018110:	b178      	cbz	r0, 8018132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018112:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8018116:	3901      	subs	r1, #1
 8018118:	0089      	lsls	r1, r1, #2
 801811a:	3104      	adds	r1, #4
 801811c:	eb07 0e01 	add.w	lr, r7, r1
 8018120:	5879      	ldr	r1, [r7, r1]
 8018122:	9109      	str	r1, [sp, #36]	; 0x24
 8018124:	0e09      	lsrs	r1, r1, #24
 8018126:	9112      	str	r1, [sp, #72]	; 0x48
 8018128:	f8de 1004 	ldr.w	r1, [lr, #4]
 801812c:	910f      	str	r1, [sp, #60]	; 0x3c
 801812e:	0e09      	lsrs	r1, r1, #24
 8018130:	9116      	str	r1, [sp, #88]	; 0x58
 8018132:	b292      	uxth	r2, r2
 8018134:	b280      	uxth	r0, r0
 8018136:	fb02 f800 	mul.w	r8, r2, r0
 801813a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801813e:	0112      	lsls	r2, r2, #4
 8018140:	eba2 0e08 	sub.w	lr, r2, r8
 8018144:	b280      	uxth	r0, r0
 8018146:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801814a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801814c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801814e:	fa1f fe8e 	uxth.w	lr, lr
 8018152:	1a12      	subs	r2, r2, r0
 8018154:	b292      	uxth	r2, r2
 8018156:	fb0e f101 	mul.w	r1, lr, r1
 801815a:	fb02 110c 	mla	r1, r2, ip, r1
 801815e:	fb00 1105 	mla	r1, r0, r5, r1
 8018162:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018164:	fb08 1105 	mla	r1, r8, r5, r1
 8018168:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801816c:	2900      	cmp	r1, #0
 801816e:	f000 80f5 	beq.w	801835c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 8018172:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018176:	d019      	beq.n	80181ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 8018178:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801817c:	fb0c fa0a 	mul.w	sl, ip, sl
 8018180:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018184:	fb0c fc03 	mul.w	ip, ip, r3
 8018188:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801818c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018190:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018194:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018198:	4453      	add	r3, sl
 801819a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801819e:	0a1b      	lsrs	r3, r3, #8
 80181a0:	0a3f      	lsrs	r7, r7, #8
 80181a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181a6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80181aa:	433b      	orrs	r3, r7
 80181ac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80181ae:	2dff      	cmp	r5, #255	; 0xff
 80181b0:	d020      	beq.n	80181f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 80181b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80181b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80181b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80181ba:	436f      	muls	r7, r5
 80181bc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80181be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80181c2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80181c4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80181c8:	fb05 fa0a 	mul.w	sl, r5, sl
 80181cc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80181d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181d4:	44bc      	add	ip, r7
 80181d6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80181da:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80181de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80181e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80181ee:	ea4c 050a 	orr.w	r5, ip, sl
 80181f2:	950e      	str	r5, [sp, #56]	; 0x38
 80181f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80181f6:	2dff      	cmp	r5, #255	; 0xff
 80181f8:	d020      	beq.n	801823c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 80181fa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80181fc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018200:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018202:	436f      	muls	r7, r5
 8018204:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018206:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801820a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801820c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018210:	fb05 fa0a 	mul.w	sl, r5, sl
 8018214:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018218:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801821c:	44bc      	add	ip, r7
 801821e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018222:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018226:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801822a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801822e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018232:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018236:	ea4c 050a 	orr.w	r5, ip, sl
 801823a:	9509      	str	r5, [sp, #36]	; 0x24
 801823c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801823e:	2dff      	cmp	r5, #255	; 0xff
 8018240:	d020      	beq.n	8018284 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 8018242:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018244:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018248:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801824a:	436f      	muls	r7, r5
 801824c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801824e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018252:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018254:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018258:	fb05 fa0a 	mul.w	sl, r5, sl
 801825c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018260:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018264:	44bc      	add	ip, r7
 8018266:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801826a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801826e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018272:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018276:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801827a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801827e:	ea4c 050a 	orr.w	r5, ip, sl
 8018282:	950f      	str	r5, [sp, #60]	; 0x3c
 8018284:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018286:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801828a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801828c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018290:	fb0e f707 	mul.w	r7, lr, r7
 8018294:	fb02 770c 	mla	r7, r2, ip, r7
 8018298:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801829c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801829e:	fb00 770c 	mla	r7, r0, ip, r7
 80182a2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80182a6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80182a8:	fb08 770c 	mla	r7, r8, ip, r7
 80182ac:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80182b0:	fb0e fe0c 	mul.w	lr, lr, ip
 80182b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80182b8:	fb02 e303 	mla	r3, r2, r3, lr
 80182bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80182be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80182c0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80182c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80182c6:	fb00 330a 	mla	r3, r0, sl, r3
 80182ca:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80182ce:	fb08 3c0c 	mla	ip, r8, ip, r3
 80182d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80182d4:	f8b9 0000 	ldrh.w	r0, [r9]
 80182d8:	4359      	muls	r1, r3
 80182da:	0a3f      	lsrs	r7, r7, #8
 80182dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182e0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80182e4:	1c4b      	adds	r3, r1, #1
 80182e6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80182ea:	ea47 070c 	orr.w	r7, r7, ip
 80182ee:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80182f2:	1202      	asrs	r2, r0, #8
 80182f4:	0c3b      	lsrs	r3, r7, #16
 80182f6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80182fa:	b2c9      	uxtb	r1, r1
 80182fc:	fb13 f305 	smulbb	r3, r3, r5
 8018300:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018304:	fb02 3201 	mla	r2, r2, r1, r3
 8018308:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801830c:	10c3      	asrs	r3, r0, #3
 801830e:	b2ff      	uxtb	r7, r7
 8018310:	00c0      	lsls	r0, r0, #3
 8018312:	b2c0      	uxtb	r0, r0
 8018314:	fb17 f705 	smulbb	r7, r7, r5
 8018318:	fb00 7001 	mla	r0, r0, r1, r7
 801831c:	b292      	uxth	r2, r2
 801831e:	fb1c fc05 	smulbb	ip, ip, r5
 8018322:	b280      	uxth	r0, r0
 8018324:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018328:	fb03 c301 	mla	r3, r3, r1, ip
 801832c:	1c51      	adds	r1, r2, #1
 801832e:	f100 0c01 	add.w	ip, r0, #1
 8018332:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018336:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801833a:	b29b      	uxth	r3, r3
 801833c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018340:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8018344:	ea42 020c 	orr.w	r2, r2, ip
 8018348:	f103 0c01 	add.w	ip, r3, #1
 801834c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8018350:	095b      	lsrs	r3, r3, #5
 8018352:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018356:	431a      	orrs	r2, r3
 8018358:	f8a9 2000 	strh.w	r2, [r9]
 801835c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801835e:	441c      	add	r4, r3
 8018360:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8018362:	f109 0902 	add.w	r9, r9, #2
 8018366:	441e      	add	r6, r3
 8018368:	f10b 3bff 	add.w	fp, fp, #4294967295
 801836c:	e647      	b.n	8017ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801836e:	2800      	cmp	r0, #0
 8018370:	f43f aedf 	beq.w	8018132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018374:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8018378:	9109      	str	r1, [sp, #36]	; 0x24
 801837a:	0e09      	lsrs	r1, r1, #24
 801837c:	9112      	str	r1, [sp, #72]	; 0x48
 801837e:	e6d8      	b.n	8018132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018380:	b01d      	add	sp, #116	; 0x74
 8018382:	ecbd 8b08 	vpop	{d8-d11}
 8018386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801838c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801838c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018390:	880e      	ldrh	r6, [r1, #0]
 8018392:	b085      	sub	sp, #20
 8018394:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8018398:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 801839c:	4690      	mov	r8, r2
 801839e:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 80183a2:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 80183a6:	9200      	str	r2, [sp, #0]
 80183a8:	00f6      	lsls	r6, r6, #3
 80183aa:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 80183ae:	9201      	str	r2, [sp, #4]
 80183b0:	2c00      	cmp	r4, #0
 80183b2:	b2f2      	uxtb	r2, r6
 80183b4:	fb04 5603 	mla	r6, r4, r3, r5
 80183b8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80183bc:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 80183c0:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80183c4:	9202      	str	r2, [sp, #8]
 80183c6:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 80183ca:	db36      	blt.n	801843a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 80183cc:	45a6      	cmp	lr, r4
 80183ce:	dd34      	ble.n	801843a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 80183d0:	2d00      	cmp	r5, #0
 80183d2:	db30      	blt.n	8018436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 80183d4:	42ab      	cmp	r3, r5
 80183d6:	dd2e      	ble.n	8018436 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 80183d8:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 80183dc:	1c6e      	adds	r6, r5, #1
 80183de:	d42f      	bmi.n	8018440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 80183e0:	42b3      	cmp	r3, r6
 80183e2:	dd2d      	ble.n	8018440 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 80183e4:	b370      	cbz	r0, 8018444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 80183e6:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80183ea:	3401      	adds	r4, #1
 80183ec:	d42e      	bmi.n	801844c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 80183ee:	45a6      	cmp	lr, r4
 80183f0:	dd2c      	ble.n	801844c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 80183f2:	b377      	cbz	r7, 8018452 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 80183f4:	2d00      	cmp	r5, #0
 80183f6:	db27      	blt.n	8018448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 80183f8:	42ab      	cmp	r3, r5
 80183fa:	dd25      	ble.n	8018448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 80183fc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8018400:	3501      	adds	r5, #1
 8018402:	d429      	bmi.n	8018458 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018404:	42ab      	cmp	r3, r5
 8018406:	dd27      	ble.n	8018458 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018408:	b340      	cbz	r0, 801845c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801840a:	3301      	adds	r3, #1
 801840c:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8018410:	280f      	cmp	r0, #15
 8018412:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018416:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801841a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801841e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8018422:	d801      	bhi.n	8018428 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 8018424:	2f0f      	cmp	r7, #15
 8018426:	d91b      	bls.n	8018460 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8018428:	4b7d      	ldr	r3, [pc, #500]	; (8018620 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 801842a:	4a7e      	ldr	r2, [pc, #504]	; (8018624 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 801842c:	487e      	ldr	r0, [pc, #504]	; (8018628 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 801842e:	f240 210d 	movw	r1, #525	; 0x20d
 8018432:	f001 fd05 	bl	8019e40 <__assert_func>
 8018436:	2200      	movs	r2, #0
 8018438:	e7d0      	b.n	80183dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 801843a:	2600      	movs	r6, #0
 801843c:	4632      	mov	r2, r6
 801843e:	e7d4      	b.n	80183ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8018440:	2600      	movs	r6, #0
 8018442:	e7d2      	b.n	80183ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8018444:	4606      	mov	r6, r0
 8018446:	e7d0      	b.n	80183ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8018448:	2400      	movs	r4, #0
 801844a:	e7d9      	b.n	8018400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 801844c:	2300      	movs	r3, #0
 801844e:	461c      	mov	r4, r3
 8018450:	e7de      	b.n	8018410 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8018452:	463b      	mov	r3, r7
 8018454:	463c      	mov	r4, r7
 8018456:	e7db      	b.n	8018410 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8018458:	2300      	movs	r3, #0
 801845a:	e7d9      	b.n	8018410 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 801845c:	4603      	mov	r3, r0
 801845e:	e7d7      	b.n	8018410 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 8018460:	b280      	uxth	r0, r0
 8018462:	b2bf      	uxth	r7, r7
 8018464:	fb00 fe07 	mul.w	lr, r0, r7
 8018468:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801846c:	0100      	lsls	r0, r0, #4
 801846e:	eba0 0c0e 	sub.w	ip, r0, lr
 8018472:	b2bf      	uxth	r7, r7
 8018474:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8018478:	fa1f fc8c 	uxth.w	ip, ip
 801847c:	1bed      	subs	r5, r5, r7
 801847e:	b2ad      	uxth	r5, r5
 8018480:	fb0c f00a 	mul.w	r0, ip, sl
 8018484:	fb05 000b 	mla	r0, r5, fp, r0
 8018488:	fb07 0009 	mla	r0, r7, r9, r0
 801848c:	fb0e 0008 	mla	r0, lr, r8, r0
 8018490:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018494:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018498:	9003      	str	r0, [sp, #12]
 801849a:	d018      	beq.n	80184ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 801849c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80184a0:	fb0b f000 	mul.w	r0, fp, r0
 80184a4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80184a8:	fb0b fb02 	mul.w	fp, fp, r2
 80184ac:	0a02      	lsrs	r2, r0, #8
 80184ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80184b2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80184b6:	4402      	add	r2, r0
 80184b8:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80184bc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80184c0:	0a12      	lsrs	r2, r2, #8
 80184c2:	0a00      	lsrs	r0, r0, #8
 80184c4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80184c8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80184cc:	4302      	orrs	r2, r0
 80184ce:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80184d2:	d019      	beq.n	8018508 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 80184d4:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80184d8:	fb0a fb0b 	mul.w	fp, sl, fp
 80184dc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80184e0:	fb0a fa06 	mul.w	sl, sl, r6
 80184e4:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80184e8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80184ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80184f0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80184f4:	445e      	add	r6, fp
 80184f6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80184fa:	0a36      	lsrs	r6, r6, #8
 80184fc:	0a00      	lsrs	r0, r0, #8
 80184fe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018502:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018506:	4306      	orrs	r6, r0
 8018508:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801850c:	d019      	beq.n	8018542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801850e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018512:	fb09 fa0a 	mul.w	sl, r9, sl
 8018516:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801851a:	fb09 f904 	mul.w	r9, r9, r4
 801851e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018522:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018526:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801852a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801852e:	4454      	add	r4, sl
 8018530:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8018534:	0a24      	lsrs	r4, r4, #8
 8018536:	0a00      	lsrs	r0, r0, #8
 8018538:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801853c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018540:	4304      	orrs	r4, r0
 8018542:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018546:	d019      	beq.n	801857c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8018548:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801854c:	fb08 f909 	mul.w	r9, r8, r9
 8018550:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018554:	fb08 f803 	mul.w	r8, r8, r3
 8018558:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801855c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018560:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018564:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8018568:	444b      	add	r3, r9
 801856a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801856e:	0a1b      	lsrs	r3, r3, #8
 8018570:	0a00      	lsrs	r0, r0, #8
 8018572:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018576:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801857a:	4303      	orrs	r3, r0
 801857c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018580:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8018584:	fb0c f808 	mul.w	r8, ip, r8
 8018588:	fb05 8800 	mla	r8, r5, r0, r8
 801858c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8018590:	fb07 8800 	mla	r8, r7, r0, r8
 8018594:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8018598:	fb0e 8000 	mla	r0, lr, r0, r8
 801859c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80185a0:	0a00      	lsrs	r0, r0, #8
 80185a2:	fb0c f606 	mul.w	r6, ip, r6
 80185a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80185aa:	fb05 6202 	mla	r2, r5, r2, r6
 80185ae:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80185b2:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80185b6:	fb07 2700 	mla	r7, r7, r0, r2
 80185ba:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80185be:	9b03      	ldr	r3, [sp, #12]
 80185c0:	9c02      	ldr	r4, [sp, #8]
 80185c2:	9d01      	ldr	r5, [sp, #4]
 80185c4:	fb0e 7000 	mla	r0, lr, r0, r7
 80185c8:	43da      	mvns	r2, r3
 80185ca:	9b00      	ldr	r3, [sp, #0]
 80185cc:	b2d2      	uxtb	r2, r2
 80185ce:	0a00      	lsrs	r0, r0, #8
 80185d0:	4353      	muls	r3, r2
 80185d2:	4354      	muls	r4, r2
 80185d4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80185d8:	ea48 0000 	orr.w	r0, r8, r0
 80185dc:	4355      	muls	r5, r2
 80185de:	4622      	mov	r2, r4
 80185e0:	1c5c      	adds	r4, r3, #1
 80185e2:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 80185e6:	0c03      	lsrs	r3, r0, #16
 80185e8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80185ec:	4b0f      	ldr	r3, [pc, #60]	; (801862c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80185ee:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 80185f2:	1c54      	adds	r4, r2, #1
 80185f4:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80185f8:	b2c2      	uxtb	r2, r0
 80185fa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80185fe:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8018602:	1c6a      	adds	r2, r5, #1
 8018604:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8018608:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801860c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018610:	00c0      	lsls	r0, r0, #3
 8018612:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018616:	4318      	orrs	r0, r3
 8018618:	8008      	strh	r0, [r1, #0]
 801861a:	b005      	add	sp, #20
 801861c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018620:	0801d907 	.word	0x0801d907
 8018624:	0801dec5 	.word	0x0801dec5
 8018628:	0801d9f0 	.word	0x0801d9f0
 801862c:	fffff800 	.word	0xfffff800

08018630 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018634:	ed2d 8b08 	vpush	{d8-d11}
 8018638:	b09b      	sub	sp, #108	; 0x6c
 801863a:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 801863e:	9218      	str	r2, [sp, #96]	; 0x60
 8018640:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8018642:	9116      	str	r1, [sp, #88]	; 0x58
 8018644:	9307      	str	r3, [sp, #28]
 8018646:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801864a:	9019      	str	r0, [sp, #100]	; 0x64
 801864c:	6850      	ldr	r0, [r2, #4]
 801864e:	6812      	ldr	r2, [r2, #0]
 8018650:	fb00 1303 	mla	r3, r0, r3, r1
 8018654:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018658:	930a      	str	r3, [sp, #40]	; 0x28
 801865a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801865c:	681b      	ldr	r3, [r3, #0]
 801865e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018660:	eeb0 aa40 	vmov.f32	s20, s0
 8018664:	eef0 9a60 	vmov.f32	s19, s1
 8018668:	eeb0 9a41 	vmov.f32	s18, s2
 801866c:	eeb0 8a62 	vmov.f32	s16, s5
 8018670:	eef0 8a43 	vmov.f32	s17, s6
 8018674:	eef0 ba44 	vmov.f32	s23, s8
 8018678:	eeb0 ba64 	vmov.f32	s22, s9
 801867c:	eef0 aa45 	vmov.f32	s21, s10
 8018680:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018682:	2b00      	cmp	r3, #0
 8018684:	dc03      	bgt.n	801868e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018686:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018688:	2b00      	cmp	r3, #0
 801868a:	f340 838a 	ble.w	8018da2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 801868e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018690:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018694:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018698:	1e48      	subs	r0, r1, #1
 801869a:	1e57      	subs	r7, r2, #1
 801869c:	9b07      	ldr	r3, [sp, #28]
 801869e:	2b00      	cmp	r3, #0
 80186a0:	f340 818b 	ble.w	80189ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80186a4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80186a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80186ac:	d406      	bmi.n	80186bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80186ae:	4584      	cmp	ip, r0
 80186b0:	da04      	bge.n	80186bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80186b2:	2b00      	cmp	r3, #0
 80186b4:	db02      	blt.n	80186bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80186b6:	42bb      	cmp	r3, r7
 80186b8:	f2c0 8180 	blt.w	80189bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80186bc:	f11c 0c01 	adds.w	ip, ip, #1
 80186c0:	f100 8170 	bmi.w	80189a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80186c4:	4561      	cmp	r1, ip
 80186c6:	f2c0 816d 	blt.w	80189a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80186ca:	3301      	adds	r3, #1
 80186cc:	f100 816a 	bmi.w	80189a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80186d0:	429a      	cmp	r2, r3
 80186d2:	f2c0 8167 	blt.w	80189a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80186d6:	9b07      	ldr	r3, [sp, #28]
 80186d8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80186da:	9317      	str	r3, [sp, #92]	; 0x5c
 80186dc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80186de:	2b00      	cmp	r3, #0
 80186e0:	f340 8189 	ble.w	80189f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 80186e4:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80186e6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80186e8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80186ec:	689b      	ldr	r3, [r3, #8]
 80186ee:	1422      	asrs	r2, r4, #16
 80186f0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80186f4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80186f8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80186fc:	f100 81d8 	bmi.w	8018ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8018700:	f103 38ff 	add.w	r8, r3, #4294967295
 8018704:	4542      	cmp	r2, r8
 8018706:	f280 81d3 	bge.w	8018ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801870a:	f1bc 0f00 	cmp.w	ip, #0
 801870e:	f2c0 81cf 	blt.w	8018ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8018712:	f10e 38ff 	add.w	r8, lr, #4294967295
 8018716:	45c4      	cmp	ip, r8
 8018718:	f280 81ca 	bge.w	8018ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801871c:	b21b      	sxth	r3, r3
 801871e:	fb0c 2203 	mla	r2, ip, r3, r2
 8018722:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018724:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8018728:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801872c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8018730:	2900      	cmp	r1, #0
 8018732:	f000 81a6 	beq.w	8018a82 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8018736:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801873a:	950b      	str	r5, [sp, #44]	; 0x2c
 801873c:	0e2d      	lsrs	r5, r5, #24
 801873e:	9512      	str	r5, [sp, #72]	; 0x48
 8018740:	b180      	cbz	r0, 8018764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8018742:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8018746:	3b01      	subs	r3, #1
 8018748:	009b      	lsls	r3, r3, #2
 801874a:	3304      	adds	r3, #4
 801874c:	eb08 0c03 	add.w	ip, r8, r3
 8018750:	f858 3003 	ldr.w	r3, [r8, r3]
 8018754:	9308      	str	r3, [sp, #32]
 8018756:	0e1b      	lsrs	r3, r3, #24
 8018758:	9310      	str	r3, [sp, #64]	; 0x40
 801875a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801875e:	930c      	str	r3, [sp, #48]	; 0x30
 8018760:	0e1b      	lsrs	r3, r3, #24
 8018762:	9313      	str	r3, [sp, #76]	; 0x4c
 8018764:	b289      	uxth	r1, r1
 8018766:	b280      	uxth	r0, r0
 8018768:	fb01 f900 	mul.w	r9, r1, r0
 801876c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018770:	0109      	lsls	r1, r1, #4
 8018772:	eba1 0809 	sub.w	r8, r1, r9
 8018776:	b280      	uxth	r0, r0
 8018778:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801877c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801877e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018780:	fa1f f888 	uxth.w	r8, r8
 8018784:	1a09      	subs	r1, r1, r0
 8018786:	b289      	uxth	r1, r1
 8018788:	fb08 f303 	mul.w	r3, r8, r3
 801878c:	fb01 330e 	mla	r3, r1, lr, r3
 8018790:	fb00 3305 	mla	r3, r0, r5, r3
 8018794:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018796:	fb09 3305 	mla	r3, r9, r5, r3
 801879a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801879e:	2b00      	cmp	r3, #0
 80187a0:	f000 80f7 	beq.w	8018992 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80187a4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80187a8:	d01b      	beq.n	80187e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 80187aa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80187ae:	fb0e fa0a 	mul.w	sl, lr, sl
 80187b2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80187b6:	fb0e fe02 	mul.w	lr, lr, r2
 80187ba:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80187be:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80187c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80187c6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80187ca:	4452      	add	r2, sl
 80187cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80187d0:	0a12      	lsrs	r2, r2, #8
 80187d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187d6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80187da:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80187de:	ea42 020c 	orr.w	r2, r2, ip
 80187e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80187e4:	2dff      	cmp	r5, #255	; 0xff
 80187e6:	d021      	beq.n	801882c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80187e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80187ea:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80187ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80187f0:	fb05 fb0b 	mul.w	fp, r5, fp
 80187f4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80187f6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80187fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80187fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018800:	fb05 fa0a 	mul.w	sl, r5, sl
 8018804:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018808:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801880c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018810:	44de      	add	lr, fp
 8018812:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018816:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801881a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801881e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018822:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018826:	ea4e 050a 	orr.w	r5, lr, sl
 801882a:	950b      	str	r5, [sp, #44]	; 0x2c
 801882c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801882e:	2dff      	cmp	r5, #255	; 0xff
 8018830:	d021      	beq.n	8018876 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8018832:	9d08      	ldr	r5, [sp, #32]
 8018834:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018838:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801883a:	fb05 fb0b 	mul.w	fp, r5, fp
 801883e:	9d08      	ldr	r5, [sp, #32]
 8018840:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8018844:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018846:	fb05 fa0e 	mul.w	sl, r5, lr
 801884a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801884e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018852:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018856:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801885a:	44de      	add	lr, fp
 801885c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018860:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018864:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018868:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801886c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018870:	ea4e 050a 	orr.w	r5, lr, sl
 8018874:	9508      	str	r5, [sp, #32]
 8018876:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018878:	2dff      	cmp	r5, #255	; 0xff
 801887a:	d021      	beq.n	80188c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801887c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801887e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8018882:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018884:	fb05 fb0b 	mul.w	fp, r5, fp
 8018888:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801888a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801888e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018890:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018894:	fb05 fa0a 	mul.w	sl, r5, sl
 8018898:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801889c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80188a0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80188a4:	44de      	add	lr, fp
 80188a6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80188aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80188ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80188b2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80188b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80188ba:	ea4e 050a 	orr.w	r5, lr, sl
 80188be:	950c      	str	r5, [sp, #48]	; 0x30
 80188c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80188c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80188c6:	9d08      	ldr	r5, [sp, #32]
 80188c8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80188cc:	fb08 fc0c 	mul.w	ip, r8, ip
 80188d0:	fb01 cc0e 	mla	ip, r1, lr, ip
 80188d4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80188d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80188da:	fb00 cc0e 	mla	ip, r0, lr, ip
 80188de:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80188e2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80188e4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80188e8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80188ec:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80188f0:	fb08 f80e 	mul.w	r8, r8, lr
 80188f4:	fb01 8202 	mla	r2, r1, r2, r8
 80188f8:	9908      	ldr	r1, [sp, #32]
 80188fa:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80188fe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018900:	fb00 220a 	mla	r2, r0, sl, r2
 8018904:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8018908:	fb09 2900 	mla	r9, r9, r0, r2
 801890c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018910:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018914:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018918:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801891c:	ea4c 0c09 	orr.w	ip, ip, r9
 8018920:	2bff      	cmp	r3, #255	; 0xff
 8018922:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8018926:	f000 80b5 	beq.w	8018a94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 801892a:	8839      	ldrh	r1, [r7, #0]
 801892c:	43db      	mvns	r3, r3
 801892e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8018932:	fa5f f883 	uxtb.w	r8, r3
 8018936:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801893a:	fb0e fe08 	mul.w	lr, lr, r8
 801893e:	10c8      	asrs	r0, r1, #3
 8018940:	00cb      	lsls	r3, r1, #3
 8018942:	f10e 0101 	add.w	r1, lr, #1
 8018946:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801894a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 801894e:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 8018952:	b2db      	uxtb	r3, r3
 8018954:	4964      	ldr	r1, [pc, #400]	; (8018ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 8018956:	fb03 f308 	mul.w	r3, r3, r8
 801895a:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 801895e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018962:	1c59      	adds	r1, r3, #1
 8018964:	fb00 f008 	mul.w	r0, r0, r8
 8018968:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801896c:	fa5f fc8c 	uxtb.w	ip, ip
 8018970:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018974:	1c43      	adds	r3, r0, #1
 8018976:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801897a:	b2d3      	uxtb	r3, r2
 801897c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018980:	00db      	lsls	r3, r3, #3
 8018982:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 8018986:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801898a:	ea4c 0c03 	orr.w	ip, ip, r3
 801898e:	f8a7 c000 	strh.w	ip, [r7]
 8018992:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018994:	441c      	add	r4, r3
 8018996:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018998:	441e      	add	r6, r3
 801899a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801899c:	3b01      	subs	r3, #1
 801899e:	3702      	adds	r7, #2
 80189a0:	9317      	str	r3, [sp, #92]	; 0x5c
 80189a2:	e69b      	b.n	80186dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 80189a4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80189a6:	441c      	add	r4, r3
 80189a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80189aa:	441e      	add	r6, r3
 80189ac:	9b07      	ldr	r3, [sp, #28]
 80189ae:	3b01      	subs	r3, #1
 80189b0:	9307      	str	r3, [sp, #28]
 80189b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189b4:	3302      	adds	r3, #2
 80189b6:	930a      	str	r3, [sp, #40]	; 0x28
 80189b8:	e670      	b.n	801869c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80189ba:	d023      	beq.n	8018a04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 80189bc:	9b07      	ldr	r3, [sp, #28]
 80189be:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80189c0:	3b01      	subs	r3, #1
 80189c2:	fb00 4003 	mla	r0, r0, r3, r4
 80189c6:	1400      	asrs	r0, r0, #16
 80189c8:	f53f ae85 	bmi.w	80186d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80189cc:	3901      	subs	r1, #1
 80189ce:	4288      	cmp	r0, r1
 80189d0:	f6bf ae81 	bge.w	80186d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80189d4:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80189d6:	fb01 6303 	mla	r3, r1, r3, r6
 80189da:	141b      	asrs	r3, r3, #16
 80189dc:	f53f ae7b 	bmi.w	80186d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80189e0:	3a01      	subs	r2, #1
 80189e2:	4293      	cmp	r3, r2
 80189e4:	f6bf ae77 	bge.w	80186d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80189e8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80189ec:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80189f0:	f1bb 0f00 	cmp.w	fp, #0
 80189f4:	dc7a      	bgt.n	8018aec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80189f6:	9b07      	ldr	r3, [sp, #28]
 80189f8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80189fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80189fe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018a02:	930a      	str	r3, [sp, #40]	; 0x28
 8018a04:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018a06:	2b00      	cmp	r3, #0
 8018a08:	f340 81cb 	ble.w	8018da2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x772>
 8018a0c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018a10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a14:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018a18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a1a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018a1e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018a22:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018a26:	eef0 6a48 	vmov.f32	s13, s16
 8018a2a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018a2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a32:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018a36:	ee16 4a90 	vmov	r4, s13
 8018a3a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018a3e:	eef0 6a68 	vmov.f32	s13, s17
 8018a42:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018a46:	ee18 2a10 	vmov	r2, s16
 8018a4a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018a4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a52:	ee18 2a90 	vmov	r2, s17
 8018a56:	932f      	str	r3, [sp, #188]	; 0xbc
 8018a58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a5e:	9330      	str	r3, [sp, #192]	; 0xc0
 8018a60:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018a62:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018a64:	3b01      	subs	r3, #1
 8018a66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a6a:	9316      	str	r3, [sp, #88]	; 0x58
 8018a6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a6e:	bf08      	it	eq
 8018a70:	4613      	moveq	r3, r2
 8018a72:	ee16 6a90 	vmov	r6, s13
 8018a76:	9307      	str	r3, [sp, #28]
 8018a78:	eef0 8a67 	vmov.f32	s17, s15
 8018a7c:	eeb0 8a47 	vmov.f32	s16, s14
 8018a80:	e5fe      	b.n	8018680 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018a82:	2800      	cmp	r0, #0
 8018a84:	f43f ae6e 	beq.w	8018764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8018a88:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8018a8c:	9308      	str	r3, [sp, #32]
 8018a8e:	0e1b      	lsrs	r3, r3, #24
 8018a90:	9310      	str	r3, [sp, #64]	; 0x40
 8018a92:	e667      	b.n	8018764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8018a94:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8018a98:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8018a9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018aa0:	f022 0207 	bic.w	r2, r2, #7
 8018aa4:	431a      	orrs	r2, r3
 8018aa6:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8018aaa:	ea42 0c0c 	orr.w	ip, r2, ip
 8018aae:	e76e      	b.n	801898e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8018ab0:	f112 0801 	adds.w	r8, r2, #1
 8018ab4:	f53f af6d 	bmi.w	8018992 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018ab8:	4543      	cmp	r3, r8
 8018aba:	f6ff af6a 	blt.w	8018992 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018abe:	f11c 0801 	adds.w	r8, ip, #1
 8018ac2:	f53f af66 	bmi.w	8018992 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018ac6:	45c6      	cmp	lr, r8
 8018ac8:	f6ff af63 	blt.w	8018992 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018acc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8018ad0:	fa0f f28e 	sxth.w	r2, lr
 8018ad4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8018ad8:	9200      	str	r2, [sp, #0]
 8018ada:	b21b      	sxth	r3, r3
 8018adc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018ade:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018ae0:	4639      	mov	r1, r7
 8018ae2:	f7ff fc53 	bl	801838c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8018ae6:	e754      	b.n	8018992 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8018ae8:	fffff800 	.word	0xfffff800
 8018aec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018aee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8018af0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8018af4:	1421      	asrs	r1, r4, #16
 8018af6:	1433      	asrs	r3, r6, #16
 8018af8:	fb07 1303 	mla	r3, r7, r3, r1
 8018afc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8018afe:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8018b02:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8018b06:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018b0a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018b0e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018b12:	2a00      	cmp	r2, #0
 8018b14:	f000 812e 	beq.w	8018d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8018b18:	684d      	ldr	r5, [r1, #4]
 8018b1a:	950d      	str	r5, [sp, #52]	; 0x34
 8018b1c:	0e2d      	lsrs	r5, r5, #24
 8018b1e:	9514      	str	r5, [sp, #80]	; 0x50
 8018b20:	b178      	cbz	r0, 8018b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018b22:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8018b26:	3f01      	subs	r7, #1
 8018b28:	00bf      	lsls	r7, r7, #2
 8018b2a:	3704      	adds	r7, #4
 8018b2c:	eb01 0e07 	add.w	lr, r1, r7
 8018b30:	59c9      	ldr	r1, [r1, r7]
 8018b32:	9109      	str	r1, [sp, #36]	; 0x24
 8018b34:	0e09      	lsrs	r1, r1, #24
 8018b36:	9111      	str	r1, [sp, #68]	; 0x44
 8018b38:	f8de 1004 	ldr.w	r1, [lr, #4]
 8018b3c:	910e      	str	r1, [sp, #56]	; 0x38
 8018b3e:	0e09      	lsrs	r1, r1, #24
 8018b40:	9115      	str	r1, [sp, #84]	; 0x54
 8018b42:	b292      	uxth	r2, r2
 8018b44:	b280      	uxth	r0, r0
 8018b46:	fb02 f900 	mul.w	r9, r2, r0
 8018b4a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018b4e:	0112      	lsls	r2, r2, #4
 8018b50:	eba2 0e09 	sub.w	lr, r2, r9
 8018b54:	b280      	uxth	r0, r0
 8018b56:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018b5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018b5c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018b5e:	fa1f fe8e 	uxth.w	lr, lr
 8018b62:	1a09      	subs	r1, r1, r0
 8018b64:	b289      	uxth	r1, r1
 8018b66:	fb0e f202 	mul.w	r2, lr, r2
 8018b6a:	fb01 220c 	mla	r2, r1, ip, r2
 8018b6e:	fb00 2205 	mla	r2, r0, r5, r2
 8018b72:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018b74:	fb09 2205 	mla	r2, r9, r5, r2
 8018b78:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018b7c:	2a00      	cmp	r2, #0
 8018b7e:	f000 80f0 	beq.w	8018d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 8018b82:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018b86:	d019      	beq.n	8018bbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 8018b88:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018b8c:	fb0c fa0a 	mul.w	sl, ip, sl
 8018b90:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b94:	fb0c fc03 	mul.w	ip, ip, r3
 8018b98:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018b9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018ba0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018ba4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018ba8:	4453      	add	r3, sl
 8018baa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018bae:	0a1b      	lsrs	r3, r3, #8
 8018bb0:	0a3f      	lsrs	r7, r7, #8
 8018bb2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018bb6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018bba:	433b      	orrs	r3, r7
 8018bbc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018bbe:	2dff      	cmp	r5, #255	; 0xff
 8018bc0:	d020      	beq.n	8018c04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 8018bc2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018bc4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018bc8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018bca:	436f      	muls	r7, r5
 8018bcc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018bce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018bd2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018bd4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018bd8:	fb05 fa0a 	mul.w	sl, r5, sl
 8018bdc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018be0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018be4:	44bc      	add	ip, r7
 8018be6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018bea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018bee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018bf2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018bf6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018bfa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018bfe:	ea4c 050a 	orr.w	r5, ip, sl
 8018c02:	950d      	str	r5, [sp, #52]	; 0x34
 8018c04:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018c06:	2dff      	cmp	r5, #255	; 0xff
 8018c08:	d020      	beq.n	8018c4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 8018c0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018c0c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018c10:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018c12:	436f      	muls	r7, r5
 8018c14:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018c16:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018c1a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018c1c:	fb05 fa0c 	mul.w	sl, r5, ip
 8018c20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018c24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c28:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018c2c:	44bc      	add	ip, r7
 8018c2e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018c32:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018c36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c46:	ea4c 050a 	orr.w	r5, ip, sl
 8018c4a:	9509      	str	r5, [sp, #36]	; 0x24
 8018c4c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018c4e:	2dff      	cmp	r5, #255	; 0xff
 8018c50:	d020      	beq.n	8018c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 8018c52:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018c54:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018c58:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018c5a:	436f      	muls	r7, r5
 8018c5c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018c5e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8018c62:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018c64:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018c68:	fb05 fa0a 	mul.w	sl, r5, sl
 8018c6c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018c70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c74:	44bc      	add	ip, r7
 8018c76:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018c7a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018c7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018c82:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c86:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018c8a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c8e:	ea4c 050a 	orr.w	r5, ip, sl
 8018c92:	950e      	str	r5, [sp, #56]	; 0x38
 8018c94:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018c96:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018c9a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018c9c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018ca0:	fb0e f707 	mul.w	r7, lr, r7
 8018ca4:	fb01 770c 	mla	r7, r1, ip, r7
 8018ca8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018cac:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018cae:	fb00 770c 	mla	r7, r0, ip, r7
 8018cb2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8018cb6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018cb8:	fb09 770c 	mla	r7, r9, ip, r7
 8018cbc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018cc0:	fb0e fe0c 	mul.w	lr, lr, ip
 8018cc4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018cc8:	fb01 e303 	mla	r3, r1, r3, lr
 8018ccc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018cce:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8018cd2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018cd4:	fb00 330a 	mla	r3, r0, sl, r3
 8018cd8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8018cdc:	fb09 3c0c 	mla	ip, r9, ip, r3
 8018ce0:	0a3f      	lsrs	r7, r7, #8
 8018ce2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018ce6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018cea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018cee:	ea47 070c 	orr.w	r7, r7, ip
 8018cf2:	2aff      	cmp	r2, #255	; 0xff
 8018cf4:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8018cf8:	d045      	beq.n	8018d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x756>
 8018cfa:	f8b8 1000 	ldrh.w	r1, [r8]
 8018cfe:	43d2      	mvns	r2, r2
 8018d00:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8018d04:	fa5f fe82 	uxtb.w	lr, r2
 8018d08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d0c:	fb0c fc0e 	mul.w	ip, ip, lr
 8018d10:	10c8      	asrs	r0, r1, #3
 8018d12:	00ca      	lsls	r2, r1, #3
 8018d14:	f10c 0101 	add.w	r1, ip, #1
 8018d18:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8018d1c:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8018d20:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018d24:	b2d2      	uxtb	r2, r2
 8018d26:	4921      	ldr	r1, [pc, #132]	; (8018dac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 8018d28:	fb02 f20e 	mul.w	r2, r2, lr
 8018d2c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8018d30:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018d34:	1c51      	adds	r1, r2, #1
 8018d36:	fb00 f00e 	mul.w	r0, r0, lr
 8018d3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018d3e:	b2ff      	uxtb	r7, r7
 8018d40:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018d44:	1c42      	adds	r2, r0, #1
 8018d46:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 8018d4a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018d4e:	b2df      	uxtb	r7, r3
 8018d50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8018d54:	00ff      	lsls	r7, r7, #3
 8018d56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018d5a:	ea4c 0c07 	orr.w	ip, ip, r7
 8018d5e:	f8a8 c000 	strh.w	ip, [r8]
 8018d62:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018d64:	441c      	add	r4, r3
 8018d66:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018d68:	f108 0802 	add.w	r8, r8, #2
 8018d6c:	441e      	add	r6, r3
 8018d6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018d72:	e63d      	b.n	80189f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8018d74:	2800      	cmp	r0, #0
 8018d76:	f43f aee4 	beq.w	8018b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018d7a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8018d7e:	9109      	str	r1, [sp, #36]	; 0x24
 8018d80:	0e09      	lsrs	r1, r1, #24
 8018d82:	9111      	str	r1, [sp, #68]	; 0x44
 8018d84:	e6dd      	b.n	8018b42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8018d86:	097a      	lsrs	r2, r7, #5
 8018d88:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8018d8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d90:	f023 0307 	bic.w	r3, r3, #7
 8018d94:	4313      	orrs	r3, r2
 8018d96:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8018d9a:	431f      	orrs	r7, r3
 8018d9c:	f8a8 7000 	strh.w	r7, [r8]
 8018da0:	e7df      	b.n	8018d62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x732>
 8018da2:	b01b      	add	sp, #108	; 0x6c
 8018da4:	ecbd 8b08 	vpop	{d8-d11}
 8018da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dac:	fffff800 	.word	0xfffff800

08018db0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8018db0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018db4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8018db8:	2c00      	cmp	r4, #0
 8018dba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018dbe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018dc2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8018dc6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018dca:	fb04 ce03 	mla	lr, r4, r3, ip
 8018dce:	db60      	blt.n	8018e92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8018dd0:	45a1      	cmp	r9, r4
 8018dd2:	dd5e      	ble.n	8018e92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8018dd4:	f1bc 0f00 	cmp.w	ip, #0
 8018dd8:	db59      	blt.n	8018e8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8018dda:	45e0      	cmp	r8, ip
 8018ddc:	dd57      	ble.n	8018e8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8018dde:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8018de2:	f01e 0f01 	tst.w	lr, #1
 8018de6:	5c16      	ldrb	r6, [r2, r0]
 8018de8:	bf0c      	ite	eq
 8018dea:	f006 060f 	andeq.w	r6, r6, #15
 8018dee:	1136      	asrne	r6, r6, #4
 8018df0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018df4:	b2f6      	uxtb	r6, r6
 8018df6:	f11c 0001 	adds.w	r0, ip, #1
 8018dfa:	d44d      	bmi.n	8018e98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018dfc:	4580      	cmp	r8, r0
 8018dfe:	dd4b      	ble.n	8018e98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018e00:	2d00      	cmp	r5, #0
 8018e02:	d04b      	beq.n	8018e9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8018e04:	f10e 0a01 	add.w	sl, lr, #1
 8018e08:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018e0c:	f01a 0f01 	tst.w	sl, #1
 8018e10:	5c10      	ldrb	r0, [r2, r0]
 8018e12:	bf0c      	ite	eq
 8018e14:	f000 000f 	andeq.w	r0, r0, #15
 8018e18:	1100      	asrne	r0, r0, #4
 8018e1a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018e1e:	b2c0      	uxtb	r0, r0
 8018e20:	3401      	adds	r4, #1
 8018e22:	d43f      	bmi.n	8018ea4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018e24:	45a1      	cmp	r9, r4
 8018e26:	dd3d      	ble.n	8018ea4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018e28:	2f00      	cmp	r7, #0
 8018e2a:	f000 809e 	beq.w	8018f6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8018e2e:	f1bc 0f00 	cmp.w	ip, #0
 8018e32:	db35      	blt.n	8018ea0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018e34:	45e0      	cmp	r8, ip
 8018e36:	dd33      	ble.n	8018ea0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018e38:	eb03 090e 	add.w	r9, r3, lr
 8018e3c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018e40:	f019 0f01 	tst.w	r9, #1
 8018e44:	5d14      	ldrb	r4, [r2, r4]
 8018e46:	bf0c      	ite	eq
 8018e48:	f004 040f 	andeq.w	r4, r4, #15
 8018e4c:	1124      	asrne	r4, r4, #4
 8018e4e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018e52:	b2e4      	uxtb	r4, r4
 8018e54:	f11c 0c01 	adds.w	ip, ip, #1
 8018e58:	d427      	bmi.n	8018eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018e5a:	45e0      	cmp	r8, ip
 8018e5c:	dd25      	ble.n	8018eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018e5e:	b335      	cbz	r5, 8018eae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8018e60:	3301      	adds	r3, #1
 8018e62:	449e      	add	lr, r3
 8018e64:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8018e68:	f01e 0f01 	tst.w	lr, #1
 8018e6c:	5cd2      	ldrb	r2, [r2, r3]
 8018e6e:	bf0c      	ite	eq
 8018e70:	f002 020f 	andeq.w	r2, r2, #15
 8018e74:	1112      	asrne	r2, r2, #4
 8018e76:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018e7a:	b2d3      	uxtb	r3, r2
 8018e7c:	2d0f      	cmp	r5, #15
 8018e7e:	d917      	bls.n	8018eb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8018e80:	4b3c      	ldr	r3, [pc, #240]	; (8018f74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8018e82:	4a3d      	ldr	r2, [pc, #244]	; (8018f78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8018e84:	483d      	ldr	r0, [pc, #244]	; (8018f7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8018e86:	f240 210d 	movw	r1, #525	; 0x20d
 8018e8a:	f000 ffd9 	bl	8019e40 <__assert_func>
 8018e8e:	2600      	movs	r6, #0
 8018e90:	e7b1      	b.n	8018df6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8018e92:	2000      	movs	r0, #0
 8018e94:	4606      	mov	r6, r0
 8018e96:	e7c3      	b.n	8018e20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018e98:	2000      	movs	r0, #0
 8018e9a:	e7c1      	b.n	8018e20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018e9c:	4628      	mov	r0, r5
 8018e9e:	e7bf      	b.n	8018e20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018ea0:	2400      	movs	r4, #0
 8018ea2:	e7d7      	b.n	8018e54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8018ea4:	2300      	movs	r3, #0
 8018ea6:	461c      	mov	r4, r3
 8018ea8:	e7e8      	b.n	8018e7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018eaa:	2300      	movs	r3, #0
 8018eac:	e7e6      	b.n	8018e7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018eae:	462b      	mov	r3, r5
 8018eb0:	2f0f      	cmp	r7, #15
 8018eb2:	d8e5      	bhi.n	8018e80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018eb4:	b2ad      	uxth	r5, r5
 8018eb6:	b2bf      	uxth	r7, r7
 8018eb8:	fb05 fc07 	mul.w	ip, r5, r7
 8018ebc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018ec0:	012d      	lsls	r5, r5, #4
 8018ec2:	b2bf      	uxth	r7, r7
 8018ec4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018ec8:	eba5 050c 	sub.w	r5, r5, ip
 8018ecc:	1bd2      	subs	r2, r2, r7
 8018ece:	b2ad      	uxth	r5, r5
 8018ed0:	b292      	uxth	r2, r2
 8018ed2:	4368      	muls	r0, r5
 8018ed4:	fb06 0002 	mla	r0, r6, r2, r0
 8018ed8:	fb07 0404 	mla	r4, r7, r4, r0
 8018edc:	fb0c 4303 	mla	r3, ip, r3, r4
 8018ee0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018ee4:	2b00      	cmp	r3, #0
 8018ee6:	d03e      	beq.n	8018f66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 8018ee8:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8018eec:	4a24      	ldr	r2, [pc, #144]	; (8018f80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8018eee:	4343      	muls	r3, r0
 8018ef0:	1c58      	adds	r0, r3, #1
 8018ef2:	6816      	ldr	r6, [r2, #0]
 8018ef4:	880a      	ldrh	r2, [r1, #0]
 8018ef6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018efa:	1200      	asrs	r0, r0, #8
 8018efc:	b284      	uxth	r4, r0
 8018efe:	1215      	asrs	r5, r2, #8
 8018f00:	43c0      	mvns	r0, r0
 8018f02:	b2c3      	uxtb	r3, r0
 8018f04:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018f08:	0a30      	lsrs	r0, r6, #8
 8018f0a:	fb15 f503 	smulbb	r5, r5, r3
 8018f0e:	10d7      	asrs	r7, r2, #3
 8018f10:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018f14:	fb00 5004 	mla	r0, r0, r4, r5
 8018f18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018f1c:	08f5      	lsrs	r5, r6, #3
 8018f1e:	00d2      	lsls	r2, r2, #3
 8018f20:	fb17 f703 	smulbb	r7, r7, r3
 8018f24:	b2d2      	uxtb	r2, r2
 8018f26:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018f2a:	00f6      	lsls	r6, r6, #3
 8018f2c:	fb05 7504 	mla	r5, r5, r4, r7
 8018f30:	fb12 f303 	smulbb	r3, r2, r3
 8018f34:	b2f6      	uxtb	r6, r6
 8018f36:	fb06 3304 	mla	r3, r6, r4, r3
 8018f3a:	b2ad      	uxth	r5, r5
 8018f3c:	b29a      	uxth	r2, r3
 8018f3e:	b280      	uxth	r0, r0
 8018f40:	1c6b      	adds	r3, r5, #1
 8018f42:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018f46:	1c44      	adds	r4, r0, #1
 8018f48:	095b      	lsrs	r3, r3, #5
 8018f4a:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8018f4e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018f52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018f56:	4303      	orrs	r3, r0
 8018f58:	1c50      	adds	r0, r2, #1
 8018f5a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018f5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018f62:	4313      	orrs	r3, r2
 8018f64:	800b      	strh	r3, [r1, #0]
 8018f66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018f6a:	2d0f      	cmp	r5, #15
 8018f6c:	d888      	bhi.n	8018e80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018f6e:	463b      	mov	r3, r7
 8018f70:	463c      	mov	r4, r7
 8018f72:	e79f      	b.n	8018eb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8018f74:	0801d907 	.word	0x0801d907
 8018f78:	0801dec5 	.word	0x0801dec5
 8018f7c:	0801d9f0 	.word	0x0801d9f0
 8018f80:	2000a3a4 	.word	0x2000a3a4

08018f84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f88:	ed2d 8b08 	vpush	{d8-d11}
 8018f8c:	b097      	sub	sp, #92	; 0x5c
 8018f8e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8018f92:	9214      	str	r2, [sp, #80]	; 0x50
 8018f94:	9309      	str	r3, [sp, #36]	; 0x24
 8018f96:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018f98:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018f9c:	910d      	str	r1, [sp, #52]	; 0x34
 8018f9e:	930e      	str	r3, [sp, #56]	; 0x38
 8018fa0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8018fa4:	9015      	str	r0, [sp, #84]	; 0x54
 8018fa6:	6850      	ldr	r0, [r2, #4]
 8018fa8:	6812      	ldr	r2, [r2, #0]
 8018faa:	fb00 1303 	mla	r3, r0, r3, r1
 8018fae:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8018fb2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018fb4:	689b      	ldr	r3, [r3, #8]
 8018fb6:	3301      	adds	r3, #1
 8018fb8:	f023 0301 	bic.w	r3, r3, #1
 8018fbc:	930a      	str	r3, [sp, #40]	; 0x28
 8018fbe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018fc0:	681f      	ldr	r7, [r3, #0]
 8018fc2:	eeb0 aa40 	vmov.f32	s20, s0
 8018fc6:	eef0 9a60 	vmov.f32	s19, s1
 8018fca:	eeb0 9a41 	vmov.f32	s18, s2
 8018fce:	eeb0 8a62 	vmov.f32	s16, s5
 8018fd2:	eef0 8a43 	vmov.f32	s17, s6
 8018fd6:	eef0 ba44 	vmov.f32	s23, s8
 8018fda:	eeb0 ba64 	vmov.f32	s22, s9
 8018fde:	eef0 aa45 	vmov.f32	s21, s10
 8018fe2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018fe4:	2b00      	cmp	r3, #0
 8018fe6:	dc03      	bgt.n	8018ff0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018fe8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018fea:	2b00      	cmp	r3, #0
 8018fec:	f340 826a 	ble.w	80194c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 8018ff0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018ff2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018ff6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018ffa:	1e48      	subs	r0, r1, #1
 8018ffc:	f102 3cff 	add.w	ip, r2, #4294967295
 8019000:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019002:	2b00      	cmp	r3, #0
 8019004:	f340 80f3 	ble.w	80191ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019008:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801900c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019010:	d406      	bmi.n	8019020 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019012:	4586      	cmp	lr, r0
 8019014:	da04      	bge.n	8019020 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019016:	2b00      	cmp	r3, #0
 8019018:	db02      	blt.n	8019020 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801901a:	4563      	cmp	r3, ip
 801901c:	f2c0 80e8 	blt.w	80191f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8019020:	f11e 0e01 	adds.w	lr, lr, #1
 8019024:	f100 80d9 	bmi.w	80191da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 8019028:	4571      	cmp	r1, lr
 801902a:	f2c0 80d6 	blt.w	80191da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801902e:	3301      	adds	r3, #1
 8019030:	f100 80d3 	bmi.w	80191da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 8019034:	429a      	cmp	r2, r3
 8019036:	f2c0 80d0 	blt.w	80191da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x256>
 801903a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801903e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8019042:	930f      	str	r3, [sp, #60]	; 0x3c
 8019044:	46d0      	mov	r8, sl
 8019046:	f1b9 0f00 	cmp.w	r9, #0
 801904a:	f340 80f0 	ble.w	801922e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 801904e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8019050:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8019054:	1423      	asrs	r3, r4, #16
 8019056:	ea4f 4026 	mov.w	r0, r6, asr #16
 801905a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801905e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019062:	f100 8139 	bmi.w	80192d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019066:	f10c 3bff 	add.w	fp, ip, #4294967295
 801906a:	455b      	cmp	r3, fp
 801906c:	f280 8134 	bge.w	80192d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019070:	2800      	cmp	r0, #0
 8019072:	f2c0 8131 	blt.w	80192d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019076:	f10e 3bff 	add.w	fp, lr, #4294967295
 801907a:	4558      	cmp	r0, fp
 801907c:	f280 812c 	bge.w	80192d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x354>
 8019080:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019082:	fb00 3305 	mla	r3, r0, r5, r3
 8019086:	0858      	lsrs	r0, r3, #1
 8019088:	07dd      	lsls	r5, r3, #31
 801908a:	f817 c000 	ldrb.w	ip, [r7, r0]
 801908e:	bf54      	ite	pl
 8019090:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019094:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019098:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801909c:	fa5f fc8c 	uxtb.w	ip, ip
 80190a0:	2a00      	cmp	r2, #0
 80190a2:	f000 8108 	beq.w	80192b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80190a6:	1c58      	adds	r0, r3, #1
 80190a8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80190ac:	07c0      	lsls	r0, r0, #31
 80190ae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80190b2:	bf54      	ite	pl
 80190b4:	f00e 0e0f 	andpl.w	lr, lr, #15
 80190b8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80190bc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80190c0:	fa5f f08e 	uxtb.w	r0, lr
 80190c4:	9010      	str	r0, [sp, #64]	; 0x40
 80190c6:	b1d1      	cbz	r1, 80190fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 80190c8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80190ca:	4403      	add	r3, r0
 80190cc:	0858      	lsrs	r0, r3, #1
 80190ce:	07dd      	lsls	r5, r3, #31
 80190d0:	5c38      	ldrb	r0, [r7, r0]
 80190d2:	bf54      	ite	pl
 80190d4:	f000 000f 	andpl.w	r0, r0, #15
 80190d8:	1100      	asrmi	r0, r0, #4
 80190da:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80190de:	3301      	adds	r3, #1
 80190e0:	b2c0      	uxtb	r0, r0
 80190e2:	900b      	str	r0, [sp, #44]	; 0x2c
 80190e4:	0858      	lsrs	r0, r3, #1
 80190e6:	07dd      	lsls	r5, r3, #31
 80190e8:	f817 e000 	ldrb.w	lr, [r7, r0]
 80190ec:	bf54      	ite	pl
 80190ee:	f00e 030f 	andpl.w	r3, lr, #15
 80190f2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80190f6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80190fa:	b2db      	uxtb	r3, r3
 80190fc:	9311      	str	r3, [sp, #68]	; 0x44
 80190fe:	b292      	uxth	r2, r2
 8019100:	b289      	uxth	r1, r1
 8019102:	fb02 f301 	mul.w	r3, r2, r1
 8019106:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801910a:	0112      	lsls	r2, r2, #4
 801910c:	b289      	uxth	r1, r1
 801910e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8019112:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019114:	1ad2      	subs	r2, r2, r3
 8019116:	1a40      	subs	r0, r0, r1
 8019118:	b292      	uxth	r2, r2
 801911a:	436a      	muls	r2, r5
 801911c:	b280      	uxth	r0, r0
 801911e:	fb0c 2c00 	mla	ip, ip, r0, r2
 8019122:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019124:	fb01 c102 	mla	r1, r1, r2, ip
 8019128:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801912a:	fb03 1302 	mla	r3, r3, r2, r1
 801912e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019132:	2b00      	cmp	r3, #0
 8019134:	d048      	beq.n	80191c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 8019136:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019138:	4a78      	ldr	r2, [pc, #480]	; (801931c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 801913a:	434b      	muls	r3, r1
 801913c:	1c59      	adds	r1, r3, #1
 801913e:	f8d2 e000 	ldr.w	lr, [r2]
 8019142:	f8b8 2000 	ldrh.w	r2, [r8]
 8019146:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801914a:	121b      	asrs	r3, r3, #8
 801914c:	b299      	uxth	r1, r3
 801914e:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019152:	43db      	mvns	r3, r3
 8019154:	b2db      	uxtb	r3, r3
 8019156:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801915a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801915e:	fb1c fc03 	smulbb	ip, ip, r3
 8019162:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8019166:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801916a:	fb00 c001 	mla	r0, r0, r1, ip
 801916e:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019172:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8019176:	fb1b fb03 	smulbb	fp, fp, r3
 801917a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801917e:	00d2      	lsls	r2, r2, #3
 8019180:	fb0c bc01 	mla	ip, ip, r1, fp
 8019184:	b2d2      	uxtb	r2, r2
 8019186:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801918a:	fb12 f303 	smulbb	r3, r2, r3
 801918e:	fa1f fc8c 	uxth.w	ip, ip
 8019192:	fa5f fe8e 	uxtb.w	lr, lr
 8019196:	b280      	uxth	r0, r0
 8019198:	fb0e 3101 	mla	r1, lr, r1, r3
 801919c:	f10c 0201 	add.w	r2, ip, #1
 80191a0:	b289      	uxth	r1, r1
 80191a2:	1c43      	adds	r3, r0, #1
 80191a4:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 80191a8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80191ac:	0952      	lsrs	r2, r2, #5
 80191ae:	1c4b      	adds	r3, r1, #1
 80191b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80191b4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80191b8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80191bc:	4310      	orrs	r0, r2
 80191be:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80191c2:	4308      	orrs	r0, r1
 80191c4:	f8a8 0000 	strh.w	r0, [r8]
 80191c8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80191ca:	441c      	add	r4, r3
 80191cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80191ce:	f108 0802 	add.w	r8, r8, #2
 80191d2:	441e      	add	r6, r3
 80191d4:	f109 39ff 	add.w	r9, r9, #4294967295
 80191d8:	e735      	b.n	8019046 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 80191da:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80191dc:	441c      	add	r4, r3
 80191de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80191e0:	441e      	add	r6, r3
 80191e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191e4:	3b01      	subs	r3, #1
 80191e6:	9309      	str	r3, [sp, #36]	; 0x24
 80191e8:	f10a 0a02 	add.w	sl, sl, #2
 80191ec:	e708      	b.n	8019000 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191ee:	d023      	beq.n	8019238 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 80191f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80191f2:	982b      	ldr	r0, [sp, #172]	; 0xac
 80191f4:	3b01      	subs	r3, #1
 80191f6:	fb00 4003 	mla	r0, r0, r3, r4
 80191fa:	1400      	asrs	r0, r0, #16
 80191fc:	f53f af1d 	bmi.w	801903a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019200:	3901      	subs	r1, #1
 8019202:	4288      	cmp	r0, r1
 8019204:	f6bf af19 	bge.w	801903a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019208:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801920a:	fb01 6303 	mla	r3, r1, r3, r6
 801920e:	141b      	asrs	r3, r3, #16
 8019210:	f53f af13 	bmi.w	801903a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8019214:	3a01      	subs	r2, #1
 8019216:	4293      	cmp	r3, r2
 8019218:	f6bf af0f 	bge.w	801903a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 801921c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8019220:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019224:	930f      	str	r3, [sp, #60]	; 0x3c
 8019226:	46d1      	mov	r9, sl
 8019228:	f1bb 0f00 	cmp.w	fp, #0
 801922c:	dc78      	bgt.n	8019320 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 801922e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019230:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019234:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8019238:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801923a:	2b00      	cmp	r3, #0
 801923c:	f340 8142 	ble.w	80194c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>
 8019240:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019244:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019248:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801924c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801924e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019252:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019256:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801925a:	eef0 6a48 	vmov.f32	s13, s16
 801925e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019262:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019266:	ee37 8a48 	vsub.f32	s16, s14, s16
 801926a:	ee16 4a90 	vmov	r4, s13
 801926e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019272:	eef0 6a68 	vmov.f32	s13, s17
 8019276:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801927a:	ee18 2a10 	vmov	r2, s16
 801927e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019282:	fb92 f3f3 	sdiv	r3, r2, r3
 8019286:	ee18 2a90 	vmov	r2, s17
 801928a:	932b      	str	r3, [sp, #172]	; 0xac
 801928c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801928e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019292:	932c      	str	r3, [sp, #176]	; 0xb0
 8019294:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019296:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019298:	3b01      	subs	r3, #1
 801929a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801929e:	930d      	str	r3, [sp, #52]	; 0x34
 80192a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80192a2:	bf08      	it	eq
 80192a4:	4613      	moveq	r3, r2
 80192a6:	ee16 6a90 	vmov	r6, s13
 80192aa:	9309      	str	r3, [sp, #36]	; 0x24
 80192ac:	eef0 8a67 	vmov.f32	s17, s15
 80192b0:	eeb0 8a47 	vmov.f32	s16, s14
 80192b4:	e695      	b.n	8018fe2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80192b6:	2900      	cmp	r1, #0
 80192b8:	f43f af21 	beq.w	80190fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 80192bc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80192be:	4418      	add	r0, r3
 80192c0:	0843      	lsrs	r3, r0, #1
 80192c2:	07c0      	lsls	r0, r0, #31
 80192c4:	5cfb      	ldrb	r3, [r7, r3]
 80192c6:	bf54      	ite	pl
 80192c8:	f003 030f 	andpl.w	r3, r3, #15
 80192cc:	111b      	asrmi	r3, r3, #4
 80192ce:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80192d2:	b2db      	uxtb	r3, r3
 80192d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80192d6:	e712      	b.n	80190fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17a>
 80192d8:	f113 0b01 	adds.w	fp, r3, #1
 80192dc:	f53f af74 	bmi.w	80191c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 80192e0:	45dc      	cmp	ip, fp
 80192e2:	f6ff af71 	blt.w	80191c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 80192e6:	f110 0b01 	adds.w	fp, r0, #1
 80192ea:	f53f af6d 	bmi.w	80191c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 80192ee:	45de      	cmp	lr, fp
 80192f0:	f6ff af6a 	blt.w	80191c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 80192f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80192f6:	9302      	str	r3, [sp, #8]
 80192f8:	fa0f f38e 	sxth.w	r3, lr
 80192fc:	9301      	str	r3, [sp, #4]
 80192fe:	fa0f f38c 	sxth.w	r3, ip
 8019302:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8019306:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801930a:	9300      	str	r3, [sp, #0]
 801930c:	463a      	mov	r2, r7
 801930e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019310:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019312:	4641      	mov	r1, r8
 8019314:	f7ff fd4c 	bl	8018db0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8019318:	e756      	b.n	80191c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x244>
 801931a:	bf00      	nop
 801931c:	2000a3a4 	.word	0x2000a3a4
 8019320:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019322:	1422      	asrs	r2, r4, #16
 8019324:	1433      	asrs	r3, r6, #16
 8019326:	fb05 2303 	mla	r3, r5, r3, r2
 801932a:	085a      	lsrs	r2, r3, #1
 801932c:	07dd      	lsls	r5, r3, #31
 801932e:	5cba      	ldrb	r2, [r7, r2]
 8019330:	bf54      	ite	pl
 8019332:	f002 020f 	andpl.w	r2, r2, #15
 8019336:	1112      	asrmi	r2, r2, #4
 8019338:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801933c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8019340:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019344:	b2d2      	uxtb	r2, r2
 8019346:	2900      	cmp	r1, #0
 8019348:	f000 80a8 	beq.w	801949c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 801934c:	f103 0e01 	add.w	lr, r3, #1
 8019350:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019354:	f01e 0f01 	tst.w	lr, #1
 8019358:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801935c:	bf0c      	ite	eq
 801935e:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019362:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019366:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801936a:	fa5f f58c 	uxtb.w	r5, ip
 801936e:	9512      	str	r5, [sp, #72]	; 0x48
 8019370:	b300      	cbz	r0, 80193b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 8019372:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019374:	442b      	add	r3, r5
 8019376:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801937a:	07dd      	lsls	r5, r3, #31
 801937c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019380:	bf54      	ite	pl
 8019382:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019386:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801938a:	3301      	adds	r3, #1
 801938c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019390:	fa5f f58c 	uxtb.w	r5, ip
 8019394:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019398:	950c      	str	r5, [sp, #48]	; 0x30
 801939a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801939e:	07dd      	lsls	r5, r3, #31
 80193a0:	bf54      	ite	pl
 80193a2:	f00c 0c0f 	andpl.w	ip, ip, #15
 80193a6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80193aa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80193ae:	fa5f f38c 	uxtb.w	r3, ip
 80193b2:	9313      	str	r3, [sp, #76]	; 0x4c
 80193b4:	b289      	uxth	r1, r1
 80193b6:	b280      	uxth	r0, r0
 80193b8:	fb01 f300 	mul.w	r3, r1, r0
 80193bc:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80193c0:	0109      	lsls	r1, r1, #4
 80193c2:	b280      	uxth	r0, r0
 80193c4:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80193c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80193ca:	1ac9      	subs	r1, r1, r3
 80193cc:	ebac 0c00 	sub.w	ip, ip, r0
 80193d0:	b289      	uxth	r1, r1
 80193d2:	4369      	muls	r1, r5
 80193d4:	fa1f fc8c 	uxth.w	ip, ip
 80193d8:	fb02 120c 	mla	r2, r2, ip, r1
 80193dc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80193de:	fb00 2001 	mla	r0, r0, r1, r2
 80193e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80193e4:	fb03 0302 	mla	r3, r3, r2, r0
 80193e8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80193ec:	2b00      	cmp	r3, #0
 80193ee:	d04c      	beq.n	801948a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80193f0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80193f2:	4a37      	ldr	r2, [pc, #220]	; (80194d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 80193f4:	434b      	muls	r3, r1
 80193f6:	1c59      	adds	r1, r3, #1
 80193f8:	f8d2 e000 	ldr.w	lr, [r2]
 80193fc:	f8b9 2000 	ldrh.w	r2, [r9]
 8019400:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019404:	121b      	asrs	r3, r3, #8
 8019406:	b299      	uxth	r1, r3
 8019408:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801940c:	43db      	mvns	r3, r3
 801940e:	b2db      	uxtb	r3, r3
 8019410:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8019414:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019418:	fb1c fc03 	smulbb	ip, ip, r3
 801941c:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8019420:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019424:	fb00 c001 	mla	r0, r0, r1, ip
 8019428:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801942c:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8019430:	fb18 f803 	smulbb	r8, r8, r3
 8019434:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019438:	00d2      	lsls	r2, r2, #3
 801943a:	fb0c 8c01 	mla	ip, ip, r1, r8
 801943e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019442:	b2d2      	uxtb	r2, r2
 8019444:	fa1f fc8c 	uxth.w	ip, ip
 8019448:	fa5f fe8e 	uxtb.w	lr, lr
 801944c:	fb12 f203 	smulbb	r2, r2, r3
 8019450:	b280      	uxth	r0, r0
 8019452:	fb0e 2201 	mla	r2, lr, r1, r2
 8019456:	f10c 0801 	add.w	r8, ip, #1
 801945a:	b292      	uxth	r2, r2
 801945c:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8019460:	f100 0801 	add.w	r8, r0, #1
 8019464:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019468:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801946c:	1c51      	adds	r1, r2, #1
 801946e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019472:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019476:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801947a:	ea4c 0c00 	orr.w	ip, ip, r0
 801947e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019482:	ea4c 0c02 	orr.w	ip, ip, r2
 8019486:	f8a9 c000 	strh.w	ip, [r9]
 801948a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801948c:	441c      	add	r4, r3
 801948e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019490:	f109 0902 	add.w	r9, r9, #2
 8019494:	441e      	add	r6, r3
 8019496:	f10b 3bff 	add.w	fp, fp, #4294967295
 801949a:	e6c5      	b.n	8019228 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801949c:	2800      	cmp	r0, #0
 801949e:	d089      	beq.n	80193b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 80194a0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80194a2:	442b      	add	r3, r5
 80194a4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80194a8:	07db      	lsls	r3, r3, #31
 80194aa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80194ae:	bf54      	ite	pl
 80194b0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80194b4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80194b8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80194bc:	fa5f f38c 	uxtb.w	r3, ip
 80194c0:	930c      	str	r3, [sp, #48]	; 0x30
 80194c2:	e777      	b.n	80193b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x430>
 80194c4:	b017      	add	sp, #92	; 0x5c
 80194c6:	ecbd 8b08 	vpop	{d8-d11}
 80194ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194ce:	bf00      	nop
 80194d0:	2000a3a4 	.word	0x2000a3a4

080194d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80194d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80194d8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80194dc:	2c00      	cmp	r4, #0
 80194de:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80194e2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80194e6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80194ea:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80194ee:	fb04 ce03 	mla	lr, r4, r3, ip
 80194f2:	db60      	blt.n	80195b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80194f4:	45a1      	cmp	r9, r4
 80194f6:	dd5e      	ble.n	80195b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 80194f8:	f1bc 0f00 	cmp.w	ip, #0
 80194fc:	db59      	blt.n	80195b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 80194fe:	45e0      	cmp	r8, ip
 8019500:	dd57      	ble.n	80195b2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019502:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019506:	f01e 0f01 	tst.w	lr, #1
 801950a:	5c16      	ldrb	r6, [r2, r0]
 801950c:	bf0c      	ite	eq
 801950e:	f006 060f 	andeq.w	r6, r6, #15
 8019512:	1136      	asrne	r6, r6, #4
 8019514:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019518:	b2f6      	uxtb	r6, r6
 801951a:	f11c 0001 	adds.w	r0, ip, #1
 801951e:	d44d      	bmi.n	80195bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019520:	4580      	cmp	r8, r0
 8019522:	dd4b      	ble.n	80195bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019524:	2d00      	cmp	r5, #0
 8019526:	d04b      	beq.n	80195c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8019528:	f10e 0a01 	add.w	sl, lr, #1
 801952c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019530:	f01a 0f01 	tst.w	sl, #1
 8019534:	5c10      	ldrb	r0, [r2, r0]
 8019536:	bf0c      	ite	eq
 8019538:	f000 000f 	andeq.w	r0, r0, #15
 801953c:	1100      	asrne	r0, r0, #4
 801953e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019542:	b2c0      	uxtb	r0, r0
 8019544:	3401      	adds	r4, #1
 8019546:	d43f      	bmi.n	80195c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019548:	45a1      	cmp	r9, r4
 801954a:	dd3d      	ble.n	80195c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801954c:	2f00      	cmp	r7, #0
 801954e:	f000 8097 	beq.w	8019680 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 8019552:	f1bc 0f00 	cmp.w	ip, #0
 8019556:	db35      	blt.n	80195c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019558:	45e0      	cmp	r8, ip
 801955a:	dd33      	ble.n	80195c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801955c:	eb03 090e 	add.w	r9, r3, lr
 8019560:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019564:	f019 0f01 	tst.w	r9, #1
 8019568:	5d14      	ldrb	r4, [r2, r4]
 801956a:	bf0c      	ite	eq
 801956c:	f004 040f 	andeq.w	r4, r4, #15
 8019570:	1124      	asrne	r4, r4, #4
 8019572:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019576:	b2e4      	uxtb	r4, r4
 8019578:	f11c 0c01 	adds.w	ip, ip, #1
 801957c:	d427      	bmi.n	80195ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801957e:	45e0      	cmp	r8, ip
 8019580:	dd25      	ble.n	80195ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019582:	b335      	cbz	r5, 80195d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8019584:	3301      	adds	r3, #1
 8019586:	449e      	add	lr, r3
 8019588:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801958c:	f01e 0f01 	tst.w	lr, #1
 8019590:	5cd2      	ldrb	r2, [r2, r3]
 8019592:	bf0c      	ite	eq
 8019594:	f002 020f 	andeq.w	r2, r2, #15
 8019598:	1112      	asrne	r2, r2, #4
 801959a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801959e:	b2d3      	uxtb	r3, r2
 80195a0:	2d0f      	cmp	r5, #15
 80195a2:	d917      	bls.n	80195d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 80195a4:	4b39      	ldr	r3, [pc, #228]	; (801968c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 80195a6:	4a3a      	ldr	r2, [pc, #232]	; (8019690 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 80195a8:	483a      	ldr	r0, [pc, #232]	; (8019694 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 80195aa:	f240 210d 	movw	r1, #525	; 0x20d
 80195ae:	f000 fc47 	bl	8019e40 <__assert_func>
 80195b2:	2600      	movs	r6, #0
 80195b4:	e7b1      	b.n	801951a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 80195b6:	2000      	movs	r0, #0
 80195b8:	4606      	mov	r6, r0
 80195ba:	e7c3      	b.n	8019544 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80195bc:	2000      	movs	r0, #0
 80195be:	e7c1      	b.n	8019544 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80195c0:	4628      	mov	r0, r5
 80195c2:	e7bf      	b.n	8019544 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80195c4:	2400      	movs	r4, #0
 80195c6:	e7d7      	b.n	8019578 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 80195c8:	2300      	movs	r3, #0
 80195ca:	461c      	mov	r4, r3
 80195cc:	e7e8      	b.n	80195a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80195ce:	2300      	movs	r3, #0
 80195d0:	e7e6      	b.n	80195a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80195d2:	462b      	mov	r3, r5
 80195d4:	2f0f      	cmp	r7, #15
 80195d6:	d8e5      	bhi.n	80195a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80195d8:	b2ad      	uxth	r5, r5
 80195da:	b2bf      	uxth	r7, r7
 80195dc:	fb05 fc07 	mul.w	ip, r5, r7
 80195e0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80195e4:	012d      	lsls	r5, r5, #4
 80195e6:	b2bf      	uxth	r7, r7
 80195e8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80195ec:	eba5 050c 	sub.w	r5, r5, ip
 80195f0:	1bd2      	subs	r2, r2, r7
 80195f2:	b2ad      	uxth	r5, r5
 80195f4:	b292      	uxth	r2, r2
 80195f6:	4368      	muls	r0, r5
 80195f8:	fb06 0002 	mla	r0, r6, r2, r0
 80195fc:	fb07 0404 	mla	r4, r7, r4, r0
 8019600:	fb0c 4303 	mla	r3, ip, r3, r4
 8019604:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019608:	2b00      	cmp	r3, #0
 801960a:	d037      	beq.n	801967c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 801960c:	4a22      	ldr	r2, [pc, #136]	; (8019698 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801960e:	6816      	ldr	r6, [r2, #0]
 8019610:	880a      	ldrh	r2, [r1, #0]
 8019612:	b298      	uxth	r0, r3
 8019614:	1215      	asrs	r5, r2, #8
 8019616:	43db      	mvns	r3, r3
 8019618:	b2db      	uxtb	r3, r3
 801961a:	0a34      	lsrs	r4, r6, #8
 801961c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019620:	fb15 f503 	smulbb	r5, r5, r3
 8019624:	10d7      	asrs	r7, r2, #3
 8019626:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801962a:	fb04 5400 	mla	r4, r4, r0, r5
 801962e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019632:	08f5      	lsrs	r5, r6, #3
 8019634:	fb17 f703 	smulbb	r7, r7, r3
 8019638:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801963c:	00d2      	lsls	r2, r2, #3
 801963e:	fb05 7500 	mla	r5, r5, r0, r7
 8019642:	b2d2      	uxtb	r2, r2
 8019644:	00f6      	lsls	r6, r6, #3
 8019646:	fb12 f303 	smulbb	r3, r2, r3
 801964a:	b2ad      	uxth	r5, r5
 801964c:	b2f6      	uxtb	r6, r6
 801964e:	b2a4      	uxth	r4, r4
 8019650:	fb06 3000 	mla	r0, r6, r0, r3
 8019654:	1c6b      	adds	r3, r5, #1
 8019656:	b280      	uxth	r0, r0
 8019658:	1c62      	adds	r2, r4, #1
 801965a:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801965e:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8019662:	095b      	lsrs	r3, r3, #5
 8019664:	1c42      	adds	r2, r0, #1
 8019666:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801966a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801966e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019672:	4323      	orrs	r3, r4
 8019674:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019678:	4303      	orrs	r3, r0
 801967a:	800b      	strh	r3, [r1, #0]
 801967c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019680:	2d0f      	cmp	r5, #15
 8019682:	d88f      	bhi.n	80195a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8019684:	463b      	mov	r3, r7
 8019686:	463c      	mov	r4, r7
 8019688:	e7a6      	b.n	80195d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801968a:	bf00      	nop
 801968c:	0801d907 	.word	0x0801d907
 8019690:	0801dec5 	.word	0x0801dec5
 8019694:	0801d9f0 	.word	0x0801d9f0
 8019698:	2000a3a4 	.word	0x2000a3a4

0801969c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801969c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196a0:	ed2d 8b08 	vpush	{d8-d11}
 80196a4:	b093      	sub	sp, #76	; 0x4c
 80196a6:	461d      	mov	r5, r3
 80196a8:	920c      	str	r2, [sp, #48]	; 0x30
 80196aa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80196ac:	9107      	str	r1, [sp, #28]
 80196ae:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80196b2:	9011      	str	r0, [sp, #68]	; 0x44
 80196b4:	6850      	ldr	r0, [r2, #4]
 80196b6:	6812      	ldr	r2, [r2, #0]
 80196b8:	fb00 1303 	mla	r3, r0, r3, r1
 80196bc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80196c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196c2:	689b      	ldr	r3, [r3, #8]
 80196c4:	3301      	adds	r3, #1
 80196c6:	f023 0301 	bic.w	r3, r3, #1
 80196ca:	9306      	str	r3, [sp, #24]
 80196cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196ce:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80196d2:	681f      	ldr	r7, [r3, #0]
 80196d4:	eeb0 aa40 	vmov.f32	s20, s0
 80196d8:	eef0 9a60 	vmov.f32	s19, s1
 80196dc:	eeb0 9a41 	vmov.f32	s18, s2
 80196e0:	eeb0 8a62 	vmov.f32	s16, s5
 80196e4:	eef0 8a43 	vmov.f32	s17, s6
 80196e8:	eef0 ba44 	vmov.f32	s23, s8
 80196ec:	eeb0 ba64 	vmov.f32	s22, s9
 80196f0:	eef0 aa45 	vmov.f32	s21, s10
 80196f4:	9b07      	ldr	r3, [sp, #28]
 80196f6:	2b00      	cmp	r3, #0
 80196f8:	dc03      	bgt.n	8019702 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80196fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196fc:	2b00      	cmp	r3, #0
 80196fe:	f340 8261 	ble.w	8019bc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 8019702:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019704:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019708:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801970c:	1e48      	subs	r0, r1, #1
 801970e:	f102 3cff 	add.w	ip, r2, #4294967295
 8019712:	2d00      	cmp	r5, #0
 8019714:	f340 80ef 	ble.w	80198f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8019718:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801971c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019720:	d406      	bmi.n	8019730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019722:	4586      	cmp	lr, r0
 8019724:	da04      	bge.n	8019730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019726:	2b00      	cmp	r3, #0
 8019728:	db02      	blt.n	8019730 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801972a:	4563      	cmp	r3, ip
 801972c:	f2c0 80e4 	blt.w	80198f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8019730:	f11e 0e01 	adds.w	lr, lr, #1
 8019734:	f100 80d7 	bmi.w	80198e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 8019738:	4571      	cmp	r1, lr
 801973a:	f2c0 80d4 	blt.w	80198e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801973e:	3301      	adds	r3, #1
 8019740:	f100 80d1 	bmi.w	80198e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 8019744:	429a      	cmp	r2, r3
 8019746:	f2c0 80ce 	blt.w	80198e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24a>
 801974a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801974e:	9509      	str	r5, [sp, #36]	; 0x24
 8019750:	46c8      	mov	r8, r9
 8019752:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019754:	2b00      	cmp	r3, #0
 8019756:	f340 80ec 	ble.w	8019932 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801975a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801975e:	9308      	str	r3, [sp, #32]
 8019760:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019762:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8019766:	1423      	asrs	r3, r4, #16
 8019768:	ea4f 4026 	mov.w	r0, r6, asr #16
 801976c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019770:	f100 813b 	bmi.w	80199ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8019774:	f10c 3bff 	add.w	fp, ip, #4294967295
 8019778:	455b      	cmp	r3, fp
 801977a:	f280 8136 	bge.w	80199ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801977e:	2800      	cmp	r0, #0
 8019780:	f2c0 8133 	blt.w	80199ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8019784:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019788:	4558      	cmp	r0, fp
 801978a:	f280 812e 	bge.w	80199ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801978e:	9a06      	ldr	r2, [sp, #24]
 8019790:	fb00 3302 	mla	r3, r0, r2, r3
 8019794:	0858      	lsrs	r0, r3, #1
 8019796:	07da      	lsls	r2, r3, #31
 8019798:	f817 c000 	ldrb.w	ip, [r7, r0]
 801979c:	9a08      	ldr	r2, [sp, #32]
 801979e:	bf54      	ite	pl
 80197a0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80197a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80197a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80197ac:	fa5f fc8c 	uxtb.w	ip, ip
 80197b0:	2a00      	cmp	r2, #0
 80197b2:	f000 8101 	beq.w	80199b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80197b6:	1c58      	adds	r0, r3, #1
 80197b8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80197bc:	07c0      	lsls	r0, r0, #31
 80197be:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80197c2:	bf54      	ite	pl
 80197c4:	f00e 0e0f 	andpl.w	lr, lr, #15
 80197c8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80197cc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80197d0:	fa5f fe8e 	uxtb.w	lr, lr
 80197d4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 80197d8:	b1b9      	cbz	r1, 801980a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80197da:	4453      	add	r3, sl
 80197dc:	0858      	lsrs	r0, r3, #1
 80197de:	07da      	lsls	r2, r3, #31
 80197e0:	5c38      	ldrb	r0, [r7, r0]
 80197e2:	bf54      	ite	pl
 80197e4:	f000 000f 	andpl.w	r0, r0, #15
 80197e8:	1100      	asrmi	r0, r0, #4
 80197ea:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80197ee:	b2c0      	uxtb	r0, r0
 80197f0:	900a      	str	r0, [sp, #40]	; 0x28
 80197f2:	1c58      	adds	r0, r3, #1
 80197f4:	0843      	lsrs	r3, r0, #1
 80197f6:	07c2      	lsls	r2, r0, #31
 80197f8:	5cfb      	ldrb	r3, [r7, r3]
 80197fa:	bf54      	ite	pl
 80197fc:	f003 030f 	andpl.w	r3, r3, #15
 8019800:	111b      	asrmi	r3, r3, #4
 8019802:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019806:	b2db      	uxtb	r3, r3
 8019808:	930e      	str	r3, [sp, #56]	; 0x38
 801980a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801980e:	b289      	uxth	r1, r1
 8019810:	fb02 f301 	mul.w	r3, r2, r1
 8019814:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019818:	0112      	lsls	r2, r2, #4
 801981a:	b289      	uxth	r1, r1
 801981c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8019820:	1a40      	subs	r0, r0, r1
 8019822:	fa1f fe80 	uxth.w	lr, r0
 8019826:	1ad2      	subs	r2, r2, r3
 8019828:	980d      	ldr	r0, [sp, #52]	; 0x34
 801982a:	b292      	uxth	r2, r2
 801982c:	4342      	muls	r2, r0
 801982e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8019832:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019834:	fb01 c102 	mla	r1, r1, r2, ip
 8019838:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801983a:	fb03 1302 	mla	r3, r3, r2, r1
 801983e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019842:	2b00      	cmp	r3, #0
 8019844:	d045      	beq.n	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019846:	4a79      	ldr	r2, [pc, #484]	; (8019a2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 8019848:	6811      	ldr	r1, [r2, #0]
 801984a:	2bff      	cmp	r3, #255	; 0xff
 801984c:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8019850:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8019854:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8019858:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801985c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019860:	b2c9      	uxtb	r1, r1
 8019862:	f000 80ba 	beq.w	80199da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8019866:	f8b8 c000 	ldrh.w	ip, [r8]
 801986a:	fa1f fb83 	uxth.w	fp, r3
 801986e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019872:	43db      	mvns	r3, r3
 8019874:	b2db      	uxtb	r3, r3
 8019876:	fb1e fe0b 	smulbb	lr, lr, fp
 801987a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801987e:	fb00 e003 	mla	r0, r0, r3, lr
 8019882:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8019886:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801988a:	fb12 f20b 	smulbb	r2, r2, fp
 801988e:	fb0e 2203 	mla	r2, lr, r3, r2
 8019892:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019896:	b292      	uxth	r2, r2
 8019898:	fb11 f10b 	smulbb	r1, r1, fp
 801989c:	fa5f fc8c 	uxtb.w	ip, ip
 80198a0:	b280      	uxth	r0, r0
 80198a2:	fb0c 1303 	mla	r3, ip, r3, r1
 80198a6:	f102 0e01 	add.w	lr, r2, #1
 80198aa:	b29b      	uxth	r3, r3
 80198ac:	1c41      	adds	r1, r0, #1
 80198ae:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 80198b2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80198b6:	0952      	lsrs	r2, r2, #5
 80198b8:	1c59      	adds	r1, r3, #1
 80198ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80198be:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80198c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80198c6:	4310      	orrs	r0, r2
 80198c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80198cc:	4318      	orrs	r0, r3
 80198ce:	f8a8 0000 	strh.w	r0, [r8]
 80198d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80198d4:	441c      	add	r4, r3
 80198d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80198d8:	441e      	add	r6, r3
 80198da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80198dc:	3b01      	subs	r3, #1
 80198de:	f108 0802 	add.w	r8, r8, #2
 80198e2:	9309      	str	r3, [sp, #36]	; 0x24
 80198e4:	e735      	b.n	8019752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80198e6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80198e8:	441c      	add	r4, r3
 80198ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80198ec:	3d01      	subs	r5, #1
 80198ee:	441e      	add	r6, r3
 80198f0:	f109 0902 	add.w	r9, r9, #2
 80198f4:	e70d      	b.n	8019712 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80198f6:	d020      	beq.n	801993a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 80198f8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80198fa:	1e6b      	subs	r3, r5, #1
 80198fc:	fb00 4003 	mla	r0, r0, r3, r4
 8019900:	1400      	asrs	r0, r0, #16
 8019902:	f53f af22 	bmi.w	801974a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019906:	3901      	subs	r1, #1
 8019908:	4288      	cmp	r0, r1
 801990a:	f6bf af1e 	bge.w	801974a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801990e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8019910:	fb01 6303 	mla	r3, r1, r3, r6
 8019914:	141b      	asrs	r3, r3, #16
 8019916:	f53f af18 	bmi.w	801974a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801991a:	3a01      	subs	r2, #1
 801991c:	4293      	cmp	r3, r2
 801991e:	f6bf af14 	bge.w	801974a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019922:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8019926:	9308      	str	r3, [sp, #32]
 8019928:	46aa      	mov	sl, r5
 801992a:	46c8      	mov	r8, r9
 801992c:	f1ba 0f00 	cmp.w	sl, #0
 8019930:	dc7e      	bgt.n	8019a30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8019932:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8019936:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801993a:	9b07      	ldr	r3, [sp, #28]
 801993c:	2b00      	cmp	r3, #0
 801993e:	f340 8141 	ble.w	8019bc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>
 8019942:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019946:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801994a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801994e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019950:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019954:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019958:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801995c:	eef0 6a48 	vmov.f32	s13, s16
 8019960:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019964:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019968:	ee37 8a48 	vsub.f32	s16, s14, s16
 801996c:	ee16 4a90 	vmov	r4, s13
 8019970:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019974:	eef0 6a68 	vmov.f32	s13, s17
 8019978:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801997c:	ee18 2a10 	vmov	r2, s16
 8019980:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019984:	fb92 f3f3 	sdiv	r3, r2, r3
 8019988:	ee18 2a90 	vmov	r2, s17
 801998c:	9327      	str	r3, [sp, #156]	; 0x9c
 801998e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019990:	fb92 f3f3 	sdiv	r3, r2, r3
 8019994:	9328      	str	r3, [sp, #160]	; 0xa0
 8019996:	9b07      	ldr	r3, [sp, #28]
 8019998:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801999a:	3b01      	subs	r3, #1
 801999c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199a0:	9307      	str	r3, [sp, #28]
 80199a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80199a4:	ee16 6a90 	vmov	r6, s13
 80199a8:	bf14      	ite	ne
 80199aa:	461d      	movne	r5, r3
 80199ac:	4615      	moveq	r5, r2
 80199ae:	eef0 8a67 	vmov.f32	s17, s15
 80199b2:	eeb0 8a47 	vmov.f32	s16, s14
 80199b6:	e69d      	b.n	80196f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80199b8:	2900      	cmp	r1, #0
 80199ba:	f43f af26 	beq.w	801980a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80199be:	eb0a 0003 	add.w	r0, sl, r3
 80199c2:	0843      	lsrs	r3, r0, #1
 80199c4:	07c0      	lsls	r0, r0, #31
 80199c6:	5cfb      	ldrb	r3, [r7, r3]
 80199c8:	bf54      	ite	pl
 80199ca:	f003 030f 	andpl.w	r3, r3, #15
 80199ce:	111b      	asrmi	r3, r3, #4
 80199d0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80199d4:	b2db      	uxtb	r3, r3
 80199d6:	930a      	str	r3, [sp, #40]	; 0x28
 80199d8:	e717      	b.n	801980a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80199da:	00d2      	lsls	r2, r2, #3
 80199dc:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 80199e0:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 80199e4:	f8a8 1000 	strh.w	r1, [r8]
 80199e8:	e773      	b.n	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80199ea:	f113 0b01 	adds.w	fp, r3, #1
 80199ee:	f53f af70 	bmi.w	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80199f2:	45dc      	cmp	ip, fp
 80199f4:	f6ff af6d 	blt.w	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80199f8:	f110 0b01 	adds.w	fp, r0, #1
 80199fc:	f53f af69 	bmi.w	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019a00:	45de      	cmp	lr, fp
 8019a02:	f6ff af66 	blt.w	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019a06:	9a08      	ldr	r2, [sp, #32]
 8019a08:	9302      	str	r3, [sp, #8]
 8019a0a:	fa0f f38e 	sxth.w	r3, lr
 8019a0e:	9301      	str	r3, [sp, #4]
 8019a10:	fa0f f38c 	sxth.w	r3, ip
 8019a14:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8019a18:	9105      	str	r1, [sp, #20]
 8019a1a:	9300      	str	r3, [sp, #0]
 8019a1c:	463a      	mov	r2, r7
 8019a1e:	4653      	mov	r3, sl
 8019a20:	4641      	mov	r1, r8
 8019a22:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019a24:	f7ff fd56 	bl	80194d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019a28:	e753      	b.n	80198d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019a2a:	bf00      	nop
 8019a2c:	2000a3a4 	.word	0x2000a3a4
 8019a30:	9906      	ldr	r1, [sp, #24]
 8019a32:	1422      	asrs	r2, r4, #16
 8019a34:	1433      	asrs	r3, r6, #16
 8019a36:	fb01 2303 	mla	r3, r1, r3, r2
 8019a3a:	085a      	lsrs	r2, r3, #1
 8019a3c:	07d9      	lsls	r1, r3, #31
 8019a3e:	5cba      	ldrb	r2, [r7, r2]
 8019a40:	bf54      	ite	pl
 8019a42:	f002 020f 	andpl.w	r2, r2, #15
 8019a46:	1112      	asrmi	r2, r2, #4
 8019a48:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a4c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019a50:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019a54:	b2d2      	uxtb	r2, r2
 8019a56:	2800      	cmp	r0, #0
 8019a58:	f000 809b 	beq.w	8019b92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 8019a5c:	f103 0e01 	add.w	lr, r3, #1
 8019a60:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8019a64:	f01e 0f01 	tst.w	lr, #1
 8019a68:	5c79      	ldrb	r1, [r7, r1]
 8019a6a:	bf0c      	ite	eq
 8019a6c:	f001 010f 	andeq.w	r1, r1, #15
 8019a70:	1109      	asrne	r1, r1, #4
 8019a72:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019a76:	b2c9      	uxtb	r1, r1
 8019a78:	910f      	str	r1, [sp, #60]	; 0x3c
 8019a7a:	f1bc 0f00 	cmp.w	ip, #0
 8019a7e:	d019      	beq.n	8019ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8019a80:	9908      	ldr	r1, [sp, #32]
 8019a82:	440b      	add	r3, r1
 8019a84:	0859      	lsrs	r1, r3, #1
 8019a86:	f013 0f01 	tst.w	r3, #1
 8019a8a:	5c79      	ldrb	r1, [r7, r1]
 8019a8c:	bf0c      	ite	eq
 8019a8e:	f001 010f 	andeq.w	r1, r1, #15
 8019a92:	1109      	asrne	r1, r1, #4
 8019a94:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019a98:	b2c9      	uxtb	r1, r1
 8019a9a:	3301      	adds	r3, #1
 8019a9c:	910b      	str	r1, [sp, #44]	; 0x2c
 8019a9e:	0859      	lsrs	r1, r3, #1
 8019aa0:	07db      	lsls	r3, r3, #31
 8019aa2:	5c79      	ldrb	r1, [r7, r1]
 8019aa4:	bf54      	ite	pl
 8019aa6:	f001 010f 	andpl.w	r1, r1, #15
 8019aaa:	1109      	asrmi	r1, r1, #4
 8019aac:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019ab0:	b2c9      	uxtb	r1, r1
 8019ab2:	9110      	str	r1, [sp, #64]	; 0x40
 8019ab4:	b280      	uxth	r0, r0
 8019ab6:	fa1f fc8c 	uxth.w	ip, ip
 8019aba:	fb00 f30c 	mul.w	r3, r0, ip
 8019abe:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8019ac2:	0100      	lsls	r0, r0, #4
 8019ac4:	fa1f fc8c 	uxth.w	ip, ip
 8019ac8:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8019acc:	eba1 010c 	sub.w	r1, r1, ip
 8019ad0:	fa1f fe81 	uxth.w	lr, r1
 8019ad4:	1ac0      	subs	r0, r0, r3
 8019ad6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8019ad8:	b280      	uxth	r0, r0
 8019ada:	4348      	muls	r0, r1
 8019adc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8019ade:	fb02 020e 	mla	r2, r2, lr, r0
 8019ae2:	fb0c 2c01 	mla	ip, ip, r1, r2
 8019ae6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ae8:	fb03 c302 	mla	r3, r3, r2, ip
 8019aec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019af0:	2b00      	cmp	r3, #0
 8019af2:	d045      	beq.n	8019b80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019af4:	4a36      	ldr	r2, [pc, #216]	; (8019bd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 8019af6:	6811      	ldr	r1, [r2, #0]
 8019af8:	2bff      	cmp	r3, #255	; 0xff
 8019afa:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8019afe:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8019b02:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8019b06:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019b0a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019b0e:	b2c9      	uxtb	r1, r1
 8019b10:	d050      	beq.n	8019bb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8019b12:	f8b8 c000 	ldrh.w	ip, [r8]
 8019b16:	fa1f fb83 	uxth.w	fp, r3
 8019b1a:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019b1e:	43db      	mvns	r3, r3
 8019b20:	b2db      	uxtb	r3, r3
 8019b22:	fb1e fe0b 	smulbb	lr, lr, fp
 8019b26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019b2a:	fb00 e003 	mla	r0, r0, r3, lr
 8019b2e:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8019b32:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019b36:	fb12 f20b 	smulbb	r2, r2, fp
 8019b3a:	fb0e 2203 	mla	r2, lr, r3, r2
 8019b3e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019b42:	b292      	uxth	r2, r2
 8019b44:	fa5f fc8c 	uxtb.w	ip, ip
 8019b48:	fb11 f10b 	smulbb	r1, r1, fp
 8019b4c:	b280      	uxth	r0, r0
 8019b4e:	fb0c 1103 	mla	r1, ip, r3, r1
 8019b52:	f102 0e01 	add.w	lr, r2, #1
 8019b56:	b289      	uxth	r1, r1
 8019b58:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019b5c:	f100 0e01 	add.w	lr, r0, #1
 8019b60:	0952      	lsrs	r2, r2, #5
 8019b62:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8019b66:	1c4b      	adds	r3, r1, #1
 8019b68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019b6c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019b70:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019b74:	4302      	orrs	r2, r0
 8019b76:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019b7a:	430a      	orrs	r2, r1
 8019b7c:	f8a8 2000 	strh.w	r2, [r8]
 8019b80:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019b82:	441c      	add	r4, r3
 8019b84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019b86:	f108 0802 	add.w	r8, r8, #2
 8019b8a:	441e      	add	r6, r3
 8019b8c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019b90:	e6cc      	b.n	801992c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8019b92:	f1bc 0f00 	cmp.w	ip, #0
 8019b96:	d08d      	beq.n	8019ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8019b98:	9908      	ldr	r1, [sp, #32]
 8019b9a:	440b      	add	r3, r1
 8019b9c:	0859      	lsrs	r1, r3, #1
 8019b9e:	07db      	lsls	r3, r3, #31
 8019ba0:	5c79      	ldrb	r1, [r7, r1]
 8019ba2:	bf54      	ite	pl
 8019ba4:	f001 010f 	andpl.w	r1, r1, #15
 8019ba8:	1109      	asrmi	r1, r1, #4
 8019baa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019bae:	b2c9      	uxtb	r1, r1
 8019bb0:	910b      	str	r1, [sp, #44]	; 0x2c
 8019bb2:	e77f      	b.n	8019ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x418>
 8019bb4:	00d2      	lsls	r2, r2, #3
 8019bb6:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8019bba:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8019bbe:	f8a8 1000 	strh.w	r1, [r8]
 8019bc2:	e7dd      	b.n	8019b80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8019bc4:	b013      	add	sp, #76	; 0x4c
 8019bc6:	ecbd 8b08 	vpop	{d8-d11}
 8019bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bce:	bf00      	nop
 8019bd0:	2000a3a4 	.word	0x2000a3a4

08019bd4 <CRC_Lock>:
 8019bd4:	b530      	push	{r4, r5, lr}
 8019bd6:	4a1d      	ldr	r2, [pc, #116]	; (8019c4c <CRC_Lock+0x78>)
 8019bd8:	6813      	ldr	r3, [r2, #0]
 8019bda:	f023 0301 	bic.w	r3, r3, #1
 8019bde:	6013      	str	r3, [r2, #0]
 8019be0:	4b1b      	ldr	r3, [pc, #108]	; (8019c50 <CRC_Lock+0x7c>)
 8019be2:	681a      	ldr	r2, [r3, #0]
 8019be4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8019be8:	4022      	ands	r2, r4
 8019bea:	f24c 2540 	movw	r5, #49728	; 0xc240
 8019bee:	42aa      	cmp	r2, r5
 8019bf0:	d005      	beq.n	8019bfe <CRC_Lock+0x2a>
 8019bf2:	681b      	ldr	r3, [r3, #0]
 8019bf4:	f24c 2270 	movw	r2, #49776	; 0xc270
 8019bf8:	4023      	ands	r3, r4
 8019bfa:	4293      	cmp	r3, r2
 8019bfc:	d11d      	bne.n	8019c3a <CRC_Lock+0x66>
 8019bfe:	4b15      	ldr	r3, [pc, #84]	; (8019c54 <CRC_Lock+0x80>)
 8019c00:	681b      	ldr	r3, [r3, #0]
 8019c02:	b9d3      	cbnz	r3, 8019c3a <CRC_Lock+0x66>
 8019c04:	4a14      	ldr	r2, [pc, #80]	; (8019c58 <CRC_Lock+0x84>)
 8019c06:	6813      	ldr	r3, [r2, #0]
 8019c08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8019c0c:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8019c10:	d006      	beq.n	8019c20 <CRC_Lock+0x4c>
 8019c12:	6813      	ldr	r3, [r2, #0]
 8019c14:	f240 4283 	movw	r2, #1155	; 0x483
 8019c18:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8019c1c:	4293      	cmp	r3, r2
 8019c1e:	d10c      	bne.n	8019c3a <CRC_Lock+0x66>
 8019c20:	4b0e      	ldr	r3, [pc, #56]	; (8019c5c <CRC_Lock+0x88>)
 8019c22:	2201      	movs	r2, #1
 8019c24:	601a      	str	r2, [r3, #0]
 8019c26:	681a      	ldr	r2, [r3, #0]
 8019c28:	2a00      	cmp	r2, #0
 8019c2a:	d1fc      	bne.n	8019c26 <CRC_Lock+0x52>
 8019c2c:	4b0c      	ldr	r3, [pc, #48]	; (8019c60 <CRC_Lock+0x8c>)
 8019c2e:	6018      	str	r0, [r3, #0]
 8019c30:	6818      	ldr	r0, [r3, #0]
 8019c32:	1a43      	subs	r3, r0, r1
 8019c34:	4258      	negs	r0, r3
 8019c36:	4158      	adcs	r0, r3
 8019c38:	bd30      	pop	{r4, r5, pc}
 8019c3a:	4b0a      	ldr	r3, [pc, #40]	; (8019c64 <CRC_Lock+0x90>)
 8019c3c:	2201      	movs	r2, #1
 8019c3e:	601a      	str	r2, [r3, #0]
 8019c40:	681a      	ldr	r2, [r3, #0]
 8019c42:	2a00      	cmp	r2, #0
 8019c44:	d1fc      	bne.n	8019c40 <CRC_Lock+0x6c>
 8019c46:	4b08      	ldr	r3, [pc, #32]	; (8019c68 <CRC_Lock+0x94>)
 8019c48:	e7f1      	b.n	8019c2e <CRC_Lock+0x5a>
 8019c4a:	bf00      	nop
 8019c4c:	e0002000 	.word	0xe0002000
 8019c50:	e000ed00 	.word	0xe000ed00
 8019c54:	e0042000 	.word	0xe0042000
 8019c58:	5c001000 	.word	0x5c001000
 8019c5c:	58024c08 	.word	0x58024c08
 8019c60:	58024c00 	.word	0x58024c00
 8019c64:	40023008 	.word	0x40023008
 8019c68:	40023000 	.word	0x40023000

08019c6c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8019c6c:	6101      	str	r1, [r0, #16]
 8019c6e:	4770      	bx	lr

08019c70 <_ZN8touchgfx8Gestures4tickEv>:
 8019c70:	7b83      	ldrb	r3, [r0, #14]
 8019c72:	b14b      	cbz	r3, 8019c88 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8019c74:	8903      	ldrh	r3, [r0, #8]
 8019c76:	3301      	adds	r3, #1
 8019c78:	b29b      	uxth	r3, r3
 8019c7a:	2b07      	cmp	r3, #7
 8019c7c:	8103      	strh	r3, [r0, #8]
 8019c7e:	bf81      	itttt	hi
 8019c80:	2300      	movhi	r3, #0
 8019c82:	8143      	strhhi	r3, [r0, #10]
 8019c84:	8183      	strhhi	r3, [r0, #12]
 8019c86:	7383      	strbhi	r3, [r0, #14]
 8019c88:	4770      	bx	lr
	...

08019c8c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8019c8c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8019c90:	4604      	mov	r4, r0
 8019c92:	8880      	ldrh	r0, [r0, #4]
 8019c94:	f8ad 0006 	strh.w	r0, [sp, #6]
 8019c98:	4698      	mov	r8, r3
 8019c9a:	eba8 0000 	sub.w	r0, r8, r0
 8019c9e:	4b1c      	ldr	r3, [pc, #112]	; (8019d10 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 8019ca0:	9300      	str	r3, [sp, #0]
 8019ca2:	b280      	uxth	r0, r0
 8019ca4:	2300      	movs	r3, #0
 8019ca6:	f88d 3004 	strb.w	r3, [sp, #4]
 8019caa:	b203      	sxth	r3, r0
 8019cac:	2b00      	cmp	r3, #0
 8019cae:	bfb8      	it	lt
 8019cb0:	4240      	neglt	r0, r0
 8019cb2:	4617      	mov	r7, r2
 8019cb4:	8aa2      	ldrh	r2, [r4, #20]
 8019cb6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8019cba:	f8ad 800a 	strh.w	r8, [sp, #10]
 8019cbe:	bfb8      	it	lt
 8019cc0:	b203      	sxthlt	r3, r0
 8019cc2:	460e      	mov	r6, r1
 8019cc4:	4293      	cmp	r3, r2
 8019cc6:	88e1      	ldrh	r1, [r4, #6]
 8019cc8:	f8ad 1008 	strh.w	r1, [sp, #8]
 8019ccc:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019cd0:	dc08      	bgt.n	8019ce4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 8019cd2:	1a69      	subs	r1, r5, r1
 8019cd4:	b289      	uxth	r1, r1
 8019cd6:	b20b      	sxth	r3, r1
 8019cd8:	2b00      	cmp	r3, #0
 8019cda:	bfbc      	itt	lt
 8019cdc:	4249      	neglt	r1, r1
 8019cde:	b20b      	sxthlt	r3, r1
 8019ce0:	429a      	cmp	r2, r3
 8019ce2:	da13      	bge.n	8019d0c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 8019ce4:	6920      	ldr	r0, [r4, #16]
 8019ce6:	6803      	ldr	r3, [r0, #0]
 8019ce8:	4669      	mov	r1, sp
 8019cea:	685b      	ldr	r3, [r3, #4]
 8019cec:	4798      	blx	r3
 8019cee:	eba8 0606 	sub.w	r6, r8, r6
 8019cf2:	2300      	movs	r3, #0
 8019cf4:	1bef      	subs	r7, r5, r7
 8019cf6:	2001      	movs	r0, #1
 8019cf8:	8123      	strh	r3, [r4, #8]
 8019cfa:	8166      	strh	r6, [r4, #10]
 8019cfc:	81a7      	strh	r7, [r4, #12]
 8019cfe:	f8a4 8004 	strh.w	r8, [r4, #4]
 8019d02:	80e5      	strh	r5, [r4, #6]
 8019d04:	73a0      	strb	r0, [r4, #14]
 8019d06:	b004      	add	sp, #16
 8019d08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019d0c:	2000      	movs	r0, #0
 8019d0e:	e7fa      	b.n	8019d06 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8019d10:	0801cd8c 	.word	0x0801cd8c

08019d14 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8019d14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019d16:	461e      	mov	r6, r3
 8019d18:	1e4b      	subs	r3, r1, #1
 8019d1a:	2b01      	cmp	r3, #1
 8019d1c:	b085      	sub	sp, #20
 8019d1e:	4604      	mov	r4, r0
 8019d20:	460d      	mov	r5, r1
 8019d22:	4617      	mov	r7, r2
 8019d24:	d84b      	bhi.n	8019dbe <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8019d26:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019d2a:	1cd3      	adds	r3, r2, #3
 8019d2c:	b29b      	uxth	r3, r3
 8019d2e:	2b06      	cmp	r3, #6
 8019d30:	d916      	bls.n	8019d60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8019d32:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8019dd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019d36:	f8cd c004 	str.w	ip, [sp, #4]
 8019d3a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019d3e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d42:	6900      	ldr	r0, [r0, #16]
 8019d44:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019d48:	f04f 0c00 	mov.w	ip, #0
 8019d4c:	f88d c008 	strb.w	ip, [sp, #8]
 8019d50:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019d54:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019d58:	6803      	ldr	r3, [r0, #0]
 8019d5a:	a901      	add	r1, sp, #4
 8019d5c:	689b      	ldr	r3, [r3, #8]
 8019d5e:	4798      	blx	r3
 8019d60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8019d64:	1cd3      	adds	r3, r2, #3
 8019d66:	b29b      	uxth	r3, r3
 8019d68:	2b06      	cmp	r3, #6
 8019d6a:	d916      	bls.n	8019d9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019d6c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8019dd4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019d70:	f8cd c004 	str.w	ip, [sp, #4]
 8019d74:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019d78:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019d7c:	6920      	ldr	r0, [r4, #16]
 8019d7e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019d82:	f04f 0c01 	mov.w	ip, #1
 8019d86:	f88d c008 	strb.w	ip, [sp, #8]
 8019d8a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019d8e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019d92:	6803      	ldr	r3, [r0, #0]
 8019d94:	a901      	add	r1, sp, #4
 8019d96:	689b      	ldr	r3, [r3, #8]
 8019d98:	4798      	blx	r3
 8019d9a:	4b0d      	ldr	r3, [pc, #52]	; (8019dd0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8019d9c:	9301      	str	r3, [sp, #4]
 8019d9e:	6920      	ldr	r0, [r4, #16]
 8019da0:	f88d 5008 	strb.w	r5, [sp, #8]
 8019da4:	2300      	movs	r3, #0
 8019da6:	f8ad 700a 	strh.w	r7, [sp, #10]
 8019daa:	f8ad 600c 	strh.w	r6, [sp, #12]
 8019dae:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019db2:	6803      	ldr	r3, [r0, #0]
 8019db4:	a901      	add	r1, sp, #4
 8019db6:	681b      	ldr	r3, [r3, #0]
 8019db8:	4798      	blx	r3
 8019dba:	b005      	add	sp, #20
 8019dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019dbe:	2900      	cmp	r1, #0
 8019dc0:	d1eb      	bne.n	8019d9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019dc2:	80a2      	strh	r2, [r4, #4]
 8019dc4:	80c6      	strh	r6, [r0, #6]
 8019dc6:	60a1      	str	r1, [r4, #8]
 8019dc8:	81a1      	strh	r1, [r4, #12]
 8019dca:	73a1      	strb	r1, [r4, #14]
 8019dcc:	e7e5      	b.n	8019d9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019dce:	bf00      	nop
 8019dd0:	0801cd78 	.word	0x0801cd78
 8019dd4:	0801cda0 	.word	0x0801cda0

08019dd8 <__aeabi_atexit>:
 8019dd8:	460b      	mov	r3, r1
 8019dda:	4601      	mov	r1, r0
 8019ddc:	4618      	mov	r0, r3
 8019dde:	f000 b853 	b.w	8019e88 <__cxa_atexit>

08019de2 <_ZdlPvj>:
 8019de2:	f000 b812 	b.w	8019e0a <_ZdlPv>

08019de6 <__cxa_guard_acquire>:
 8019de6:	6803      	ldr	r3, [r0, #0]
 8019de8:	07db      	lsls	r3, r3, #31
 8019dea:	d406      	bmi.n	8019dfa <__cxa_guard_acquire+0x14>
 8019dec:	7843      	ldrb	r3, [r0, #1]
 8019dee:	b103      	cbz	r3, 8019df2 <__cxa_guard_acquire+0xc>
 8019df0:	deff      	udf	#255	; 0xff
 8019df2:	2301      	movs	r3, #1
 8019df4:	7043      	strb	r3, [r0, #1]
 8019df6:	4618      	mov	r0, r3
 8019df8:	4770      	bx	lr
 8019dfa:	2000      	movs	r0, #0
 8019dfc:	4770      	bx	lr

08019dfe <__cxa_guard_release>:
 8019dfe:	2301      	movs	r3, #1
 8019e00:	6003      	str	r3, [r0, #0]
 8019e02:	4770      	bx	lr

08019e04 <__cxa_pure_virtual>:
 8019e04:	b508      	push	{r3, lr}
 8019e06:	f000 f80f 	bl	8019e28 <_ZSt9terminatev>

08019e0a <_ZdlPv>:
 8019e0a:	f000 b88f 	b.w	8019f2c <free>

08019e0e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8019e0e:	b508      	push	{r3, lr}
 8019e10:	4780      	blx	r0
 8019e12:	f000 f80e 	bl	8019e32 <abort>
	...

08019e18 <_ZSt13get_terminatev>:
 8019e18:	4b02      	ldr	r3, [pc, #8]	; (8019e24 <_ZSt13get_terminatev+0xc>)
 8019e1a:	6818      	ldr	r0, [r3, #0]
 8019e1c:	f3bf 8f5b 	dmb	ish
 8019e20:	4770      	bx	lr
 8019e22:	bf00      	nop
 8019e24:	200000d4 	.word	0x200000d4

08019e28 <_ZSt9terminatev>:
 8019e28:	b508      	push	{r3, lr}
 8019e2a:	f7ff fff5 	bl	8019e18 <_ZSt13get_terminatev>
 8019e2e:	f7ff ffee 	bl	8019e0e <_ZN10__cxxabiv111__terminateEPFvvE>

08019e32 <abort>:
 8019e32:	b508      	push	{r3, lr}
 8019e34:	2006      	movs	r0, #6
 8019e36:	f000 fc9d 	bl	801a774 <raise>
 8019e3a:	2001      	movs	r0, #1
 8019e3c:	f7e8 f88e 	bl	8001f5c <_exit>

08019e40 <__assert_func>:
 8019e40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019e42:	4614      	mov	r4, r2
 8019e44:	461a      	mov	r2, r3
 8019e46:	4b09      	ldr	r3, [pc, #36]	; (8019e6c <__assert_func+0x2c>)
 8019e48:	681b      	ldr	r3, [r3, #0]
 8019e4a:	4605      	mov	r5, r0
 8019e4c:	68d8      	ldr	r0, [r3, #12]
 8019e4e:	b14c      	cbz	r4, 8019e64 <__assert_func+0x24>
 8019e50:	4b07      	ldr	r3, [pc, #28]	; (8019e70 <__assert_func+0x30>)
 8019e52:	9100      	str	r1, [sp, #0]
 8019e54:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8019e58:	4906      	ldr	r1, [pc, #24]	; (8019e74 <__assert_func+0x34>)
 8019e5a:	462b      	mov	r3, r5
 8019e5c:	f000 f828 	bl	8019eb0 <fiprintf>
 8019e60:	f7ff ffe7 	bl	8019e32 <abort>
 8019e64:	4b04      	ldr	r3, [pc, #16]	; (8019e78 <__assert_func+0x38>)
 8019e66:	461c      	mov	r4, r3
 8019e68:	e7f3      	b.n	8019e52 <__assert_func+0x12>
 8019e6a:	bf00      	nop
 8019e6c:	200000d8 	.word	0x200000d8
 8019e70:	0801e15f 	.word	0x0801e15f
 8019e74:	0801e16c 	.word	0x0801e16c
 8019e78:	0801e19a 	.word	0x0801e19a

08019e7c <atexit>:
 8019e7c:	2300      	movs	r3, #0
 8019e7e:	4601      	mov	r1, r0
 8019e80:	461a      	mov	r2, r3
 8019e82:	4618      	mov	r0, r3
 8019e84:	f000 bd52 	b.w	801a92c <__register_exitproc>

08019e88 <__cxa_atexit>:
 8019e88:	b510      	push	{r4, lr}
 8019e8a:	4c05      	ldr	r4, [pc, #20]	; (8019ea0 <__cxa_atexit+0x18>)
 8019e8c:	4613      	mov	r3, r2
 8019e8e:	b12c      	cbz	r4, 8019e9c <__cxa_atexit+0x14>
 8019e90:	460a      	mov	r2, r1
 8019e92:	4601      	mov	r1, r0
 8019e94:	2002      	movs	r0, #2
 8019e96:	f000 fd49 	bl	801a92c <__register_exitproc>
 8019e9a:	bd10      	pop	{r4, pc}
 8019e9c:	4620      	mov	r0, r4
 8019e9e:	e7fc      	b.n	8019e9a <__cxa_atexit+0x12>
 8019ea0:	0801a92d 	.word	0x0801a92d

08019ea4 <__errno>:
 8019ea4:	4b01      	ldr	r3, [pc, #4]	; (8019eac <__errno+0x8>)
 8019ea6:	6818      	ldr	r0, [r3, #0]
 8019ea8:	4770      	bx	lr
 8019eaa:	bf00      	nop
 8019eac:	200000d8 	.word	0x200000d8

08019eb0 <fiprintf>:
 8019eb0:	b40e      	push	{r1, r2, r3}
 8019eb2:	b503      	push	{r0, r1, lr}
 8019eb4:	4601      	mov	r1, r0
 8019eb6:	ab03      	add	r3, sp, #12
 8019eb8:	4805      	ldr	r0, [pc, #20]	; (8019ed0 <fiprintf+0x20>)
 8019eba:	f853 2b04 	ldr.w	r2, [r3], #4
 8019ebe:	6800      	ldr	r0, [r0, #0]
 8019ec0:	9301      	str	r3, [sp, #4]
 8019ec2:	f000 f95b 	bl	801a17c <_vfiprintf_r>
 8019ec6:	b002      	add	sp, #8
 8019ec8:	f85d eb04 	ldr.w	lr, [sp], #4
 8019ecc:	b003      	add	sp, #12
 8019ece:	4770      	bx	lr
 8019ed0:	200000d8 	.word	0x200000d8

08019ed4 <__libc_init_array>:
 8019ed4:	b570      	push	{r4, r5, r6, lr}
 8019ed6:	4d0d      	ldr	r5, [pc, #52]	; (8019f0c <__libc_init_array+0x38>)
 8019ed8:	4c0d      	ldr	r4, [pc, #52]	; (8019f10 <__libc_init_array+0x3c>)
 8019eda:	1b64      	subs	r4, r4, r5
 8019edc:	10a4      	asrs	r4, r4, #2
 8019ede:	2600      	movs	r6, #0
 8019ee0:	42a6      	cmp	r6, r4
 8019ee2:	d109      	bne.n	8019ef8 <__libc_init_array+0x24>
 8019ee4:	4d0b      	ldr	r5, [pc, #44]	; (8019f14 <__libc_init_array+0x40>)
 8019ee6:	4c0c      	ldr	r4, [pc, #48]	; (8019f18 <__libc_init_array+0x44>)
 8019ee8:	f001 f85a 	bl	801afa0 <_init>
 8019eec:	1b64      	subs	r4, r4, r5
 8019eee:	10a4      	asrs	r4, r4, #2
 8019ef0:	2600      	movs	r6, #0
 8019ef2:	42a6      	cmp	r6, r4
 8019ef4:	d105      	bne.n	8019f02 <__libc_init_array+0x2e>
 8019ef6:	bd70      	pop	{r4, r5, r6, pc}
 8019ef8:	f855 3b04 	ldr.w	r3, [r5], #4
 8019efc:	4798      	blx	r3
 8019efe:	3601      	adds	r6, #1
 8019f00:	e7ee      	b.n	8019ee0 <__libc_init_array+0xc>
 8019f02:	f855 3b04 	ldr.w	r3, [r5], #4
 8019f06:	4798      	blx	r3
 8019f08:	3601      	adds	r6, #1
 8019f0a:	e7f2      	b.n	8019ef2 <__libc_init_array+0x1e>
 8019f0c:	0801e24c 	.word	0x0801e24c
 8019f10:	0801e24c 	.word	0x0801e24c
 8019f14:	0801e24c 	.word	0x0801e24c
 8019f18:	0801e264 	.word	0x0801e264

08019f1c <malloc>:
 8019f1c:	4b02      	ldr	r3, [pc, #8]	; (8019f28 <malloc+0xc>)
 8019f1e:	4601      	mov	r1, r0
 8019f20:	6818      	ldr	r0, [r3, #0]
 8019f22:	f000 b88d 	b.w	801a040 <_malloc_r>
 8019f26:	bf00      	nop
 8019f28:	200000d8 	.word	0x200000d8

08019f2c <free>:
 8019f2c:	4b02      	ldr	r3, [pc, #8]	; (8019f38 <free+0xc>)
 8019f2e:	4601      	mov	r1, r0
 8019f30:	6818      	ldr	r0, [r3, #0]
 8019f32:	f000 b819 	b.w	8019f68 <_free_r>
 8019f36:	bf00      	nop
 8019f38:	200000d8 	.word	0x200000d8

08019f3c <memcpy>:
 8019f3c:	440a      	add	r2, r1
 8019f3e:	4291      	cmp	r1, r2
 8019f40:	f100 33ff 	add.w	r3, r0, #4294967295
 8019f44:	d100      	bne.n	8019f48 <memcpy+0xc>
 8019f46:	4770      	bx	lr
 8019f48:	b510      	push	{r4, lr}
 8019f4a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019f4e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8019f52:	4291      	cmp	r1, r2
 8019f54:	d1f9      	bne.n	8019f4a <memcpy+0xe>
 8019f56:	bd10      	pop	{r4, pc}

08019f58 <memset>:
 8019f58:	4402      	add	r2, r0
 8019f5a:	4603      	mov	r3, r0
 8019f5c:	4293      	cmp	r3, r2
 8019f5e:	d100      	bne.n	8019f62 <memset+0xa>
 8019f60:	4770      	bx	lr
 8019f62:	f803 1b01 	strb.w	r1, [r3], #1
 8019f66:	e7f9      	b.n	8019f5c <memset+0x4>

08019f68 <_free_r>:
 8019f68:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019f6a:	2900      	cmp	r1, #0
 8019f6c:	d044      	beq.n	8019ff8 <_free_r+0x90>
 8019f6e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8019f72:	9001      	str	r0, [sp, #4]
 8019f74:	2b00      	cmp	r3, #0
 8019f76:	f1a1 0404 	sub.w	r4, r1, #4
 8019f7a:	bfb8      	it	lt
 8019f7c:	18e4      	addlt	r4, r4, r3
 8019f7e:	f000 ff57 	bl	801ae30 <__malloc_lock>
 8019f82:	4a1e      	ldr	r2, [pc, #120]	; (8019ffc <_free_r+0x94>)
 8019f84:	9801      	ldr	r0, [sp, #4]
 8019f86:	6813      	ldr	r3, [r2, #0]
 8019f88:	b933      	cbnz	r3, 8019f98 <_free_r+0x30>
 8019f8a:	6063      	str	r3, [r4, #4]
 8019f8c:	6014      	str	r4, [r2, #0]
 8019f8e:	b003      	add	sp, #12
 8019f90:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019f94:	f000 bf52 	b.w	801ae3c <__malloc_unlock>
 8019f98:	42a3      	cmp	r3, r4
 8019f9a:	d908      	bls.n	8019fae <_free_r+0x46>
 8019f9c:	6825      	ldr	r5, [r4, #0]
 8019f9e:	1961      	adds	r1, r4, r5
 8019fa0:	428b      	cmp	r3, r1
 8019fa2:	bf01      	itttt	eq
 8019fa4:	6819      	ldreq	r1, [r3, #0]
 8019fa6:	685b      	ldreq	r3, [r3, #4]
 8019fa8:	1949      	addeq	r1, r1, r5
 8019faa:	6021      	streq	r1, [r4, #0]
 8019fac:	e7ed      	b.n	8019f8a <_free_r+0x22>
 8019fae:	461a      	mov	r2, r3
 8019fb0:	685b      	ldr	r3, [r3, #4]
 8019fb2:	b10b      	cbz	r3, 8019fb8 <_free_r+0x50>
 8019fb4:	42a3      	cmp	r3, r4
 8019fb6:	d9fa      	bls.n	8019fae <_free_r+0x46>
 8019fb8:	6811      	ldr	r1, [r2, #0]
 8019fba:	1855      	adds	r5, r2, r1
 8019fbc:	42a5      	cmp	r5, r4
 8019fbe:	d10b      	bne.n	8019fd8 <_free_r+0x70>
 8019fc0:	6824      	ldr	r4, [r4, #0]
 8019fc2:	4421      	add	r1, r4
 8019fc4:	1854      	adds	r4, r2, r1
 8019fc6:	42a3      	cmp	r3, r4
 8019fc8:	6011      	str	r1, [r2, #0]
 8019fca:	d1e0      	bne.n	8019f8e <_free_r+0x26>
 8019fcc:	681c      	ldr	r4, [r3, #0]
 8019fce:	685b      	ldr	r3, [r3, #4]
 8019fd0:	6053      	str	r3, [r2, #4]
 8019fd2:	4421      	add	r1, r4
 8019fd4:	6011      	str	r1, [r2, #0]
 8019fd6:	e7da      	b.n	8019f8e <_free_r+0x26>
 8019fd8:	d902      	bls.n	8019fe0 <_free_r+0x78>
 8019fda:	230c      	movs	r3, #12
 8019fdc:	6003      	str	r3, [r0, #0]
 8019fde:	e7d6      	b.n	8019f8e <_free_r+0x26>
 8019fe0:	6825      	ldr	r5, [r4, #0]
 8019fe2:	1961      	adds	r1, r4, r5
 8019fe4:	428b      	cmp	r3, r1
 8019fe6:	bf04      	itt	eq
 8019fe8:	6819      	ldreq	r1, [r3, #0]
 8019fea:	685b      	ldreq	r3, [r3, #4]
 8019fec:	6063      	str	r3, [r4, #4]
 8019fee:	bf04      	itt	eq
 8019ff0:	1949      	addeq	r1, r1, r5
 8019ff2:	6021      	streq	r1, [r4, #0]
 8019ff4:	6054      	str	r4, [r2, #4]
 8019ff6:	e7ca      	b.n	8019f8e <_free_r+0x26>
 8019ff8:	b003      	add	sp, #12
 8019ffa:	bd30      	pop	{r4, r5, pc}
 8019ffc:	2000a498 	.word	0x2000a498

0801a000 <sbrk_aligned>:
 801a000:	b570      	push	{r4, r5, r6, lr}
 801a002:	4e0e      	ldr	r6, [pc, #56]	; (801a03c <sbrk_aligned+0x3c>)
 801a004:	460c      	mov	r4, r1
 801a006:	6831      	ldr	r1, [r6, #0]
 801a008:	4605      	mov	r5, r0
 801a00a:	b911      	cbnz	r1, 801a012 <sbrk_aligned+0x12>
 801a00c:	f000 fb7a 	bl	801a704 <_sbrk_r>
 801a010:	6030      	str	r0, [r6, #0]
 801a012:	4621      	mov	r1, r4
 801a014:	4628      	mov	r0, r5
 801a016:	f000 fb75 	bl	801a704 <_sbrk_r>
 801a01a:	1c43      	adds	r3, r0, #1
 801a01c:	d00a      	beq.n	801a034 <sbrk_aligned+0x34>
 801a01e:	1cc4      	adds	r4, r0, #3
 801a020:	f024 0403 	bic.w	r4, r4, #3
 801a024:	42a0      	cmp	r0, r4
 801a026:	d007      	beq.n	801a038 <sbrk_aligned+0x38>
 801a028:	1a21      	subs	r1, r4, r0
 801a02a:	4628      	mov	r0, r5
 801a02c:	f000 fb6a 	bl	801a704 <_sbrk_r>
 801a030:	3001      	adds	r0, #1
 801a032:	d101      	bne.n	801a038 <sbrk_aligned+0x38>
 801a034:	f04f 34ff 	mov.w	r4, #4294967295
 801a038:	4620      	mov	r0, r4
 801a03a:	bd70      	pop	{r4, r5, r6, pc}
 801a03c:	2000a49c 	.word	0x2000a49c

0801a040 <_malloc_r>:
 801a040:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a044:	1ccd      	adds	r5, r1, #3
 801a046:	f025 0503 	bic.w	r5, r5, #3
 801a04a:	3508      	adds	r5, #8
 801a04c:	2d0c      	cmp	r5, #12
 801a04e:	bf38      	it	cc
 801a050:	250c      	movcc	r5, #12
 801a052:	2d00      	cmp	r5, #0
 801a054:	4607      	mov	r7, r0
 801a056:	db01      	blt.n	801a05c <_malloc_r+0x1c>
 801a058:	42a9      	cmp	r1, r5
 801a05a:	d905      	bls.n	801a068 <_malloc_r+0x28>
 801a05c:	230c      	movs	r3, #12
 801a05e:	603b      	str	r3, [r7, #0]
 801a060:	2600      	movs	r6, #0
 801a062:	4630      	mov	r0, r6
 801a064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a068:	4e2e      	ldr	r6, [pc, #184]	; (801a124 <_malloc_r+0xe4>)
 801a06a:	f000 fee1 	bl	801ae30 <__malloc_lock>
 801a06e:	6833      	ldr	r3, [r6, #0]
 801a070:	461c      	mov	r4, r3
 801a072:	bb34      	cbnz	r4, 801a0c2 <_malloc_r+0x82>
 801a074:	4629      	mov	r1, r5
 801a076:	4638      	mov	r0, r7
 801a078:	f7ff ffc2 	bl	801a000 <sbrk_aligned>
 801a07c:	1c43      	adds	r3, r0, #1
 801a07e:	4604      	mov	r4, r0
 801a080:	d14d      	bne.n	801a11e <_malloc_r+0xde>
 801a082:	6834      	ldr	r4, [r6, #0]
 801a084:	4626      	mov	r6, r4
 801a086:	2e00      	cmp	r6, #0
 801a088:	d140      	bne.n	801a10c <_malloc_r+0xcc>
 801a08a:	6823      	ldr	r3, [r4, #0]
 801a08c:	4631      	mov	r1, r6
 801a08e:	4638      	mov	r0, r7
 801a090:	eb04 0803 	add.w	r8, r4, r3
 801a094:	f000 fb36 	bl	801a704 <_sbrk_r>
 801a098:	4580      	cmp	r8, r0
 801a09a:	d13a      	bne.n	801a112 <_malloc_r+0xd2>
 801a09c:	6821      	ldr	r1, [r4, #0]
 801a09e:	3503      	adds	r5, #3
 801a0a0:	1a6d      	subs	r5, r5, r1
 801a0a2:	f025 0503 	bic.w	r5, r5, #3
 801a0a6:	3508      	adds	r5, #8
 801a0a8:	2d0c      	cmp	r5, #12
 801a0aa:	bf38      	it	cc
 801a0ac:	250c      	movcc	r5, #12
 801a0ae:	4629      	mov	r1, r5
 801a0b0:	4638      	mov	r0, r7
 801a0b2:	f7ff ffa5 	bl	801a000 <sbrk_aligned>
 801a0b6:	3001      	adds	r0, #1
 801a0b8:	d02b      	beq.n	801a112 <_malloc_r+0xd2>
 801a0ba:	6823      	ldr	r3, [r4, #0]
 801a0bc:	442b      	add	r3, r5
 801a0be:	6023      	str	r3, [r4, #0]
 801a0c0:	e00e      	b.n	801a0e0 <_malloc_r+0xa0>
 801a0c2:	6822      	ldr	r2, [r4, #0]
 801a0c4:	1b52      	subs	r2, r2, r5
 801a0c6:	d41e      	bmi.n	801a106 <_malloc_r+0xc6>
 801a0c8:	2a0b      	cmp	r2, #11
 801a0ca:	d916      	bls.n	801a0fa <_malloc_r+0xba>
 801a0cc:	1961      	adds	r1, r4, r5
 801a0ce:	42a3      	cmp	r3, r4
 801a0d0:	6025      	str	r5, [r4, #0]
 801a0d2:	bf18      	it	ne
 801a0d4:	6059      	strne	r1, [r3, #4]
 801a0d6:	6863      	ldr	r3, [r4, #4]
 801a0d8:	bf08      	it	eq
 801a0da:	6031      	streq	r1, [r6, #0]
 801a0dc:	5162      	str	r2, [r4, r5]
 801a0de:	604b      	str	r3, [r1, #4]
 801a0e0:	4638      	mov	r0, r7
 801a0e2:	f104 060b 	add.w	r6, r4, #11
 801a0e6:	f000 fea9 	bl	801ae3c <__malloc_unlock>
 801a0ea:	f026 0607 	bic.w	r6, r6, #7
 801a0ee:	1d23      	adds	r3, r4, #4
 801a0f0:	1af2      	subs	r2, r6, r3
 801a0f2:	d0b6      	beq.n	801a062 <_malloc_r+0x22>
 801a0f4:	1b9b      	subs	r3, r3, r6
 801a0f6:	50a3      	str	r3, [r4, r2]
 801a0f8:	e7b3      	b.n	801a062 <_malloc_r+0x22>
 801a0fa:	6862      	ldr	r2, [r4, #4]
 801a0fc:	42a3      	cmp	r3, r4
 801a0fe:	bf0c      	ite	eq
 801a100:	6032      	streq	r2, [r6, #0]
 801a102:	605a      	strne	r2, [r3, #4]
 801a104:	e7ec      	b.n	801a0e0 <_malloc_r+0xa0>
 801a106:	4623      	mov	r3, r4
 801a108:	6864      	ldr	r4, [r4, #4]
 801a10a:	e7b2      	b.n	801a072 <_malloc_r+0x32>
 801a10c:	4634      	mov	r4, r6
 801a10e:	6876      	ldr	r6, [r6, #4]
 801a110:	e7b9      	b.n	801a086 <_malloc_r+0x46>
 801a112:	230c      	movs	r3, #12
 801a114:	603b      	str	r3, [r7, #0]
 801a116:	4638      	mov	r0, r7
 801a118:	f000 fe90 	bl	801ae3c <__malloc_unlock>
 801a11c:	e7a1      	b.n	801a062 <_malloc_r+0x22>
 801a11e:	6025      	str	r5, [r4, #0]
 801a120:	e7de      	b.n	801a0e0 <_malloc_r+0xa0>
 801a122:	bf00      	nop
 801a124:	2000a498 	.word	0x2000a498

0801a128 <__sfputc_r>:
 801a128:	6893      	ldr	r3, [r2, #8]
 801a12a:	3b01      	subs	r3, #1
 801a12c:	2b00      	cmp	r3, #0
 801a12e:	b410      	push	{r4}
 801a130:	6093      	str	r3, [r2, #8]
 801a132:	da08      	bge.n	801a146 <__sfputc_r+0x1e>
 801a134:	6994      	ldr	r4, [r2, #24]
 801a136:	42a3      	cmp	r3, r4
 801a138:	db01      	blt.n	801a13e <__sfputc_r+0x16>
 801a13a:	290a      	cmp	r1, #10
 801a13c:	d103      	bne.n	801a146 <__sfputc_r+0x1e>
 801a13e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a142:	f000 bb33 	b.w	801a7ac <__swbuf_r>
 801a146:	6813      	ldr	r3, [r2, #0]
 801a148:	1c58      	adds	r0, r3, #1
 801a14a:	6010      	str	r0, [r2, #0]
 801a14c:	7019      	strb	r1, [r3, #0]
 801a14e:	4608      	mov	r0, r1
 801a150:	f85d 4b04 	ldr.w	r4, [sp], #4
 801a154:	4770      	bx	lr

0801a156 <__sfputs_r>:
 801a156:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a158:	4606      	mov	r6, r0
 801a15a:	460f      	mov	r7, r1
 801a15c:	4614      	mov	r4, r2
 801a15e:	18d5      	adds	r5, r2, r3
 801a160:	42ac      	cmp	r4, r5
 801a162:	d101      	bne.n	801a168 <__sfputs_r+0x12>
 801a164:	2000      	movs	r0, #0
 801a166:	e007      	b.n	801a178 <__sfputs_r+0x22>
 801a168:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a16c:	463a      	mov	r2, r7
 801a16e:	4630      	mov	r0, r6
 801a170:	f7ff ffda 	bl	801a128 <__sfputc_r>
 801a174:	1c43      	adds	r3, r0, #1
 801a176:	d1f3      	bne.n	801a160 <__sfputs_r+0xa>
 801a178:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801a17c <_vfiprintf_r>:
 801a17c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a180:	460d      	mov	r5, r1
 801a182:	b09d      	sub	sp, #116	; 0x74
 801a184:	4614      	mov	r4, r2
 801a186:	4698      	mov	r8, r3
 801a188:	4606      	mov	r6, r0
 801a18a:	b118      	cbz	r0, 801a194 <_vfiprintf_r+0x18>
 801a18c:	6983      	ldr	r3, [r0, #24]
 801a18e:	b90b      	cbnz	r3, 801a194 <_vfiprintf_r+0x18>
 801a190:	f000 fd48 	bl	801ac24 <__sinit>
 801a194:	4b89      	ldr	r3, [pc, #548]	; (801a3bc <_vfiprintf_r+0x240>)
 801a196:	429d      	cmp	r5, r3
 801a198:	d11b      	bne.n	801a1d2 <_vfiprintf_r+0x56>
 801a19a:	6875      	ldr	r5, [r6, #4]
 801a19c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a19e:	07d9      	lsls	r1, r3, #31
 801a1a0:	d405      	bmi.n	801a1ae <_vfiprintf_r+0x32>
 801a1a2:	89ab      	ldrh	r3, [r5, #12]
 801a1a4:	059a      	lsls	r2, r3, #22
 801a1a6:	d402      	bmi.n	801a1ae <_vfiprintf_r+0x32>
 801a1a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a1aa:	f000 fdd9 	bl	801ad60 <__retarget_lock_acquire_recursive>
 801a1ae:	89ab      	ldrh	r3, [r5, #12]
 801a1b0:	071b      	lsls	r3, r3, #28
 801a1b2:	d501      	bpl.n	801a1b8 <_vfiprintf_r+0x3c>
 801a1b4:	692b      	ldr	r3, [r5, #16]
 801a1b6:	b9eb      	cbnz	r3, 801a1f4 <_vfiprintf_r+0x78>
 801a1b8:	4629      	mov	r1, r5
 801a1ba:	4630      	mov	r0, r6
 801a1bc:	f000 fb48 	bl	801a850 <__swsetup_r>
 801a1c0:	b1c0      	cbz	r0, 801a1f4 <_vfiprintf_r+0x78>
 801a1c2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a1c4:	07dc      	lsls	r4, r3, #31
 801a1c6:	d50e      	bpl.n	801a1e6 <_vfiprintf_r+0x6a>
 801a1c8:	f04f 30ff 	mov.w	r0, #4294967295
 801a1cc:	b01d      	add	sp, #116	; 0x74
 801a1ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1d2:	4b7b      	ldr	r3, [pc, #492]	; (801a3c0 <_vfiprintf_r+0x244>)
 801a1d4:	429d      	cmp	r5, r3
 801a1d6:	d101      	bne.n	801a1dc <_vfiprintf_r+0x60>
 801a1d8:	68b5      	ldr	r5, [r6, #8]
 801a1da:	e7df      	b.n	801a19c <_vfiprintf_r+0x20>
 801a1dc:	4b79      	ldr	r3, [pc, #484]	; (801a3c4 <_vfiprintf_r+0x248>)
 801a1de:	429d      	cmp	r5, r3
 801a1e0:	bf08      	it	eq
 801a1e2:	68f5      	ldreq	r5, [r6, #12]
 801a1e4:	e7da      	b.n	801a19c <_vfiprintf_r+0x20>
 801a1e6:	89ab      	ldrh	r3, [r5, #12]
 801a1e8:	0598      	lsls	r0, r3, #22
 801a1ea:	d4ed      	bmi.n	801a1c8 <_vfiprintf_r+0x4c>
 801a1ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a1ee:	f000 fdb9 	bl	801ad64 <__retarget_lock_release_recursive>
 801a1f2:	e7e9      	b.n	801a1c8 <_vfiprintf_r+0x4c>
 801a1f4:	2300      	movs	r3, #0
 801a1f6:	9309      	str	r3, [sp, #36]	; 0x24
 801a1f8:	2320      	movs	r3, #32
 801a1fa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801a1fe:	f8cd 800c 	str.w	r8, [sp, #12]
 801a202:	2330      	movs	r3, #48	; 0x30
 801a204:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801a3c8 <_vfiprintf_r+0x24c>
 801a208:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801a20c:	f04f 0901 	mov.w	r9, #1
 801a210:	4623      	mov	r3, r4
 801a212:	469a      	mov	sl, r3
 801a214:	f813 2b01 	ldrb.w	r2, [r3], #1
 801a218:	b10a      	cbz	r2, 801a21e <_vfiprintf_r+0xa2>
 801a21a:	2a25      	cmp	r2, #37	; 0x25
 801a21c:	d1f9      	bne.n	801a212 <_vfiprintf_r+0x96>
 801a21e:	ebba 0b04 	subs.w	fp, sl, r4
 801a222:	d00b      	beq.n	801a23c <_vfiprintf_r+0xc0>
 801a224:	465b      	mov	r3, fp
 801a226:	4622      	mov	r2, r4
 801a228:	4629      	mov	r1, r5
 801a22a:	4630      	mov	r0, r6
 801a22c:	f7ff ff93 	bl	801a156 <__sfputs_r>
 801a230:	3001      	adds	r0, #1
 801a232:	f000 80aa 	beq.w	801a38a <_vfiprintf_r+0x20e>
 801a236:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a238:	445a      	add	r2, fp
 801a23a:	9209      	str	r2, [sp, #36]	; 0x24
 801a23c:	f89a 3000 	ldrb.w	r3, [sl]
 801a240:	2b00      	cmp	r3, #0
 801a242:	f000 80a2 	beq.w	801a38a <_vfiprintf_r+0x20e>
 801a246:	2300      	movs	r3, #0
 801a248:	f04f 32ff 	mov.w	r2, #4294967295
 801a24c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801a250:	f10a 0a01 	add.w	sl, sl, #1
 801a254:	9304      	str	r3, [sp, #16]
 801a256:	9307      	str	r3, [sp, #28]
 801a258:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801a25c:	931a      	str	r3, [sp, #104]	; 0x68
 801a25e:	4654      	mov	r4, sl
 801a260:	2205      	movs	r2, #5
 801a262:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a266:	4858      	ldr	r0, [pc, #352]	; (801a3c8 <_vfiprintf_r+0x24c>)
 801a268:	f7e5 ffca 	bl	8000200 <memchr>
 801a26c:	9a04      	ldr	r2, [sp, #16]
 801a26e:	b9d8      	cbnz	r0, 801a2a8 <_vfiprintf_r+0x12c>
 801a270:	06d1      	lsls	r1, r2, #27
 801a272:	bf44      	itt	mi
 801a274:	2320      	movmi	r3, #32
 801a276:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801a27a:	0713      	lsls	r3, r2, #28
 801a27c:	bf44      	itt	mi
 801a27e:	232b      	movmi	r3, #43	; 0x2b
 801a280:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801a284:	f89a 3000 	ldrb.w	r3, [sl]
 801a288:	2b2a      	cmp	r3, #42	; 0x2a
 801a28a:	d015      	beq.n	801a2b8 <_vfiprintf_r+0x13c>
 801a28c:	9a07      	ldr	r2, [sp, #28]
 801a28e:	4654      	mov	r4, sl
 801a290:	2000      	movs	r0, #0
 801a292:	f04f 0c0a 	mov.w	ip, #10
 801a296:	4621      	mov	r1, r4
 801a298:	f811 3b01 	ldrb.w	r3, [r1], #1
 801a29c:	3b30      	subs	r3, #48	; 0x30
 801a29e:	2b09      	cmp	r3, #9
 801a2a0:	d94e      	bls.n	801a340 <_vfiprintf_r+0x1c4>
 801a2a2:	b1b0      	cbz	r0, 801a2d2 <_vfiprintf_r+0x156>
 801a2a4:	9207      	str	r2, [sp, #28]
 801a2a6:	e014      	b.n	801a2d2 <_vfiprintf_r+0x156>
 801a2a8:	eba0 0308 	sub.w	r3, r0, r8
 801a2ac:	fa09 f303 	lsl.w	r3, r9, r3
 801a2b0:	4313      	orrs	r3, r2
 801a2b2:	9304      	str	r3, [sp, #16]
 801a2b4:	46a2      	mov	sl, r4
 801a2b6:	e7d2      	b.n	801a25e <_vfiprintf_r+0xe2>
 801a2b8:	9b03      	ldr	r3, [sp, #12]
 801a2ba:	1d19      	adds	r1, r3, #4
 801a2bc:	681b      	ldr	r3, [r3, #0]
 801a2be:	9103      	str	r1, [sp, #12]
 801a2c0:	2b00      	cmp	r3, #0
 801a2c2:	bfbb      	ittet	lt
 801a2c4:	425b      	neglt	r3, r3
 801a2c6:	f042 0202 	orrlt.w	r2, r2, #2
 801a2ca:	9307      	strge	r3, [sp, #28]
 801a2cc:	9307      	strlt	r3, [sp, #28]
 801a2ce:	bfb8      	it	lt
 801a2d0:	9204      	strlt	r2, [sp, #16]
 801a2d2:	7823      	ldrb	r3, [r4, #0]
 801a2d4:	2b2e      	cmp	r3, #46	; 0x2e
 801a2d6:	d10c      	bne.n	801a2f2 <_vfiprintf_r+0x176>
 801a2d8:	7863      	ldrb	r3, [r4, #1]
 801a2da:	2b2a      	cmp	r3, #42	; 0x2a
 801a2dc:	d135      	bne.n	801a34a <_vfiprintf_r+0x1ce>
 801a2de:	9b03      	ldr	r3, [sp, #12]
 801a2e0:	1d1a      	adds	r2, r3, #4
 801a2e2:	681b      	ldr	r3, [r3, #0]
 801a2e4:	9203      	str	r2, [sp, #12]
 801a2e6:	2b00      	cmp	r3, #0
 801a2e8:	bfb8      	it	lt
 801a2ea:	f04f 33ff 	movlt.w	r3, #4294967295
 801a2ee:	3402      	adds	r4, #2
 801a2f0:	9305      	str	r3, [sp, #20]
 801a2f2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801a3d8 <_vfiprintf_r+0x25c>
 801a2f6:	7821      	ldrb	r1, [r4, #0]
 801a2f8:	2203      	movs	r2, #3
 801a2fa:	4650      	mov	r0, sl
 801a2fc:	f7e5 ff80 	bl	8000200 <memchr>
 801a300:	b140      	cbz	r0, 801a314 <_vfiprintf_r+0x198>
 801a302:	2340      	movs	r3, #64	; 0x40
 801a304:	eba0 000a 	sub.w	r0, r0, sl
 801a308:	fa03 f000 	lsl.w	r0, r3, r0
 801a30c:	9b04      	ldr	r3, [sp, #16]
 801a30e:	4303      	orrs	r3, r0
 801a310:	3401      	adds	r4, #1
 801a312:	9304      	str	r3, [sp, #16]
 801a314:	f814 1b01 	ldrb.w	r1, [r4], #1
 801a318:	482c      	ldr	r0, [pc, #176]	; (801a3cc <_vfiprintf_r+0x250>)
 801a31a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801a31e:	2206      	movs	r2, #6
 801a320:	f7e5 ff6e 	bl	8000200 <memchr>
 801a324:	2800      	cmp	r0, #0
 801a326:	d03f      	beq.n	801a3a8 <_vfiprintf_r+0x22c>
 801a328:	4b29      	ldr	r3, [pc, #164]	; (801a3d0 <_vfiprintf_r+0x254>)
 801a32a:	bb1b      	cbnz	r3, 801a374 <_vfiprintf_r+0x1f8>
 801a32c:	9b03      	ldr	r3, [sp, #12]
 801a32e:	3307      	adds	r3, #7
 801a330:	f023 0307 	bic.w	r3, r3, #7
 801a334:	3308      	adds	r3, #8
 801a336:	9303      	str	r3, [sp, #12]
 801a338:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a33a:	443b      	add	r3, r7
 801a33c:	9309      	str	r3, [sp, #36]	; 0x24
 801a33e:	e767      	b.n	801a210 <_vfiprintf_r+0x94>
 801a340:	fb0c 3202 	mla	r2, ip, r2, r3
 801a344:	460c      	mov	r4, r1
 801a346:	2001      	movs	r0, #1
 801a348:	e7a5      	b.n	801a296 <_vfiprintf_r+0x11a>
 801a34a:	2300      	movs	r3, #0
 801a34c:	3401      	adds	r4, #1
 801a34e:	9305      	str	r3, [sp, #20]
 801a350:	4619      	mov	r1, r3
 801a352:	f04f 0c0a 	mov.w	ip, #10
 801a356:	4620      	mov	r0, r4
 801a358:	f810 2b01 	ldrb.w	r2, [r0], #1
 801a35c:	3a30      	subs	r2, #48	; 0x30
 801a35e:	2a09      	cmp	r2, #9
 801a360:	d903      	bls.n	801a36a <_vfiprintf_r+0x1ee>
 801a362:	2b00      	cmp	r3, #0
 801a364:	d0c5      	beq.n	801a2f2 <_vfiprintf_r+0x176>
 801a366:	9105      	str	r1, [sp, #20]
 801a368:	e7c3      	b.n	801a2f2 <_vfiprintf_r+0x176>
 801a36a:	fb0c 2101 	mla	r1, ip, r1, r2
 801a36e:	4604      	mov	r4, r0
 801a370:	2301      	movs	r3, #1
 801a372:	e7f0      	b.n	801a356 <_vfiprintf_r+0x1da>
 801a374:	ab03      	add	r3, sp, #12
 801a376:	9300      	str	r3, [sp, #0]
 801a378:	462a      	mov	r2, r5
 801a37a:	4b16      	ldr	r3, [pc, #88]	; (801a3d4 <_vfiprintf_r+0x258>)
 801a37c:	a904      	add	r1, sp, #16
 801a37e:	4630      	mov	r0, r6
 801a380:	f3af 8000 	nop.w
 801a384:	4607      	mov	r7, r0
 801a386:	1c78      	adds	r0, r7, #1
 801a388:	d1d6      	bne.n	801a338 <_vfiprintf_r+0x1bc>
 801a38a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801a38c:	07d9      	lsls	r1, r3, #31
 801a38e:	d405      	bmi.n	801a39c <_vfiprintf_r+0x220>
 801a390:	89ab      	ldrh	r3, [r5, #12]
 801a392:	059a      	lsls	r2, r3, #22
 801a394:	d402      	bmi.n	801a39c <_vfiprintf_r+0x220>
 801a396:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801a398:	f000 fce4 	bl	801ad64 <__retarget_lock_release_recursive>
 801a39c:	89ab      	ldrh	r3, [r5, #12]
 801a39e:	065b      	lsls	r3, r3, #25
 801a3a0:	f53f af12 	bmi.w	801a1c8 <_vfiprintf_r+0x4c>
 801a3a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a3a6:	e711      	b.n	801a1cc <_vfiprintf_r+0x50>
 801a3a8:	ab03      	add	r3, sp, #12
 801a3aa:	9300      	str	r3, [sp, #0]
 801a3ac:	462a      	mov	r2, r5
 801a3ae:	4b09      	ldr	r3, [pc, #36]	; (801a3d4 <_vfiprintf_r+0x258>)
 801a3b0:	a904      	add	r1, sp, #16
 801a3b2:	4630      	mov	r0, r6
 801a3b4:	f000 f880 	bl	801a4b8 <_printf_i>
 801a3b8:	e7e4      	b.n	801a384 <_vfiprintf_r+0x208>
 801a3ba:	bf00      	nop
 801a3bc:	0801e1f8 	.word	0x0801e1f8
 801a3c0:	0801e218 	.word	0x0801e218
 801a3c4:	0801e1d8 	.word	0x0801e1d8
 801a3c8:	0801e1a0 	.word	0x0801e1a0
 801a3cc:	0801e1aa 	.word	0x0801e1aa
 801a3d0:	00000000 	.word	0x00000000
 801a3d4:	0801a157 	.word	0x0801a157
 801a3d8:	0801e1a6 	.word	0x0801e1a6

0801a3dc <_printf_common>:
 801a3dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a3e0:	4616      	mov	r6, r2
 801a3e2:	4699      	mov	r9, r3
 801a3e4:	688a      	ldr	r2, [r1, #8]
 801a3e6:	690b      	ldr	r3, [r1, #16]
 801a3e8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801a3ec:	4293      	cmp	r3, r2
 801a3ee:	bfb8      	it	lt
 801a3f0:	4613      	movlt	r3, r2
 801a3f2:	6033      	str	r3, [r6, #0]
 801a3f4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801a3f8:	4607      	mov	r7, r0
 801a3fa:	460c      	mov	r4, r1
 801a3fc:	b10a      	cbz	r2, 801a402 <_printf_common+0x26>
 801a3fe:	3301      	adds	r3, #1
 801a400:	6033      	str	r3, [r6, #0]
 801a402:	6823      	ldr	r3, [r4, #0]
 801a404:	0699      	lsls	r1, r3, #26
 801a406:	bf42      	ittt	mi
 801a408:	6833      	ldrmi	r3, [r6, #0]
 801a40a:	3302      	addmi	r3, #2
 801a40c:	6033      	strmi	r3, [r6, #0]
 801a40e:	6825      	ldr	r5, [r4, #0]
 801a410:	f015 0506 	ands.w	r5, r5, #6
 801a414:	d106      	bne.n	801a424 <_printf_common+0x48>
 801a416:	f104 0a19 	add.w	sl, r4, #25
 801a41a:	68e3      	ldr	r3, [r4, #12]
 801a41c:	6832      	ldr	r2, [r6, #0]
 801a41e:	1a9b      	subs	r3, r3, r2
 801a420:	42ab      	cmp	r3, r5
 801a422:	dc26      	bgt.n	801a472 <_printf_common+0x96>
 801a424:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801a428:	1e13      	subs	r3, r2, #0
 801a42a:	6822      	ldr	r2, [r4, #0]
 801a42c:	bf18      	it	ne
 801a42e:	2301      	movne	r3, #1
 801a430:	0692      	lsls	r2, r2, #26
 801a432:	d42b      	bmi.n	801a48c <_printf_common+0xb0>
 801a434:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801a438:	4649      	mov	r1, r9
 801a43a:	4638      	mov	r0, r7
 801a43c:	47c0      	blx	r8
 801a43e:	3001      	adds	r0, #1
 801a440:	d01e      	beq.n	801a480 <_printf_common+0xa4>
 801a442:	6823      	ldr	r3, [r4, #0]
 801a444:	68e5      	ldr	r5, [r4, #12]
 801a446:	6832      	ldr	r2, [r6, #0]
 801a448:	f003 0306 	and.w	r3, r3, #6
 801a44c:	2b04      	cmp	r3, #4
 801a44e:	bf08      	it	eq
 801a450:	1aad      	subeq	r5, r5, r2
 801a452:	68a3      	ldr	r3, [r4, #8]
 801a454:	6922      	ldr	r2, [r4, #16]
 801a456:	bf0c      	ite	eq
 801a458:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801a45c:	2500      	movne	r5, #0
 801a45e:	4293      	cmp	r3, r2
 801a460:	bfc4      	itt	gt
 801a462:	1a9b      	subgt	r3, r3, r2
 801a464:	18ed      	addgt	r5, r5, r3
 801a466:	2600      	movs	r6, #0
 801a468:	341a      	adds	r4, #26
 801a46a:	42b5      	cmp	r5, r6
 801a46c:	d11a      	bne.n	801a4a4 <_printf_common+0xc8>
 801a46e:	2000      	movs	r0, #0
 801a470:	e008      	b.n	801a484 <_printf_common+0xa8>
 801a472:	2301      	movs	r3, #1
 801a474:	4652      	mov	r2, sl
 801a476:	4649      	mov	r1, r9
 801a478:	4638      	mov	r0, r7
 801a47a:	47c0      	blx	r8
 801a47c:	3001      	adds	r0, #1
 801a47e:	d103      	bne.n	801a488 <_printf_common+0xac>
 801a480:	f04f 30ff 	mov.w	r0, #4294967295
 801a484:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a488:	3501      	adds	r5, #1
 801a48a:	e7c6      	b.n	801a41a <_printf_common+0x3e>
 801a48c:	18e1      	adds	r1, r4, r3
 801a48e:	1c5a      	adds	r2, r3, #1
 801a490:	2030      	movs	r0, #48	; 0x30
 801a492:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801a496:	4422      	add	r2, r4
 801a498:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801a49c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801a4a0:	3302      	adds	r3, #2
 801a4a2:	e7c7      	b.n	801a434 <_printf_common+0x58>
 801a4a4:	2301      	movs	r3, #1
 801a4a6:	4622      	mov	r2, r4
 801a4a8:	4649      	mov	r1, r9
 801a4aa:	4638      	mov	r0, r7
 801a4ac:	47c0      	blx	r8
 801a4ae:	3001      	adds	r0, #1
 801a4b0:	d0e6      	beq.n	801a480 <_printf_common+0xa4>
 801a4b2:	3601      	adds	r6, #1
 801a4b4:	e7d9      	b.n	801a46a <_printf_common+0x8e>
	...

0801a4b8 <_printf_i>:
 801a4b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a4bc:	7e0f      	ldrb	r7, [r1, #24]
 801a4be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a4c0:	2f78      	cmp	r7, #120	; 0x78
 801a4c2:	4691      	mov	r9, r2
 801a4c4:	4680      	mov	r8, r0
 801a4c6:	460c      	mov	r4, r1
 801a4c8:	469a      	mov	sl, r3
 801a4ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801a4ce:	d807      	bhi.n	801a4e0 <_printf_i+0x28>
 801a4d0:	2f62      	cmp	r7, #98	; 0x62
 801a4d2:	d80a      	bhi.n	801a4ea <_printf_i+0x32>
 801a4d4:	2f00      	cmp	r7, #0
 801a4d6:	f000 80d8 	beq.w	801a68a <_printf_i+0x1d2>
 801a4da:	2f58      	cmp	r7, #88	; 0x58
 801a4dc:	f000 80a3 	beq.w	801a626 <_printf_i+0x16e>
 801a4e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a4e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801a4e8:	e03a      	b.n	801a560 <_printf_i+0xa8>
 801a4ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801a4ee:	2b15      	cmp	r3, #21
 801a4f0:	d8f6      	bhi.n	801a4e0 <_printf_i+0x28>
 801a4f2:	a101      	add	r1, pc, #4	; (adr r1, 801a4f8 <_printf_i+0x40>)
 801a4f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801a4f8:	0801a551 	.word	0x0801a551
 801a4fc:	0801a565 	.word	0x0801a565
 801a500:	0801a4e1 	.word	0x0801a4e1
 801a504:	0801a4e1 	.word	0x0801a4e1
 801a508:	0801a4e1 	.word	0x0801a4e1
 801a50c:	0801a4e1 	.word	0x0801a4e1
 801a510:	0801a565 	.word	0x0801a565
 801a514:	0801a4e1 	.word	0x0801a4e1
 801a518:	0801a4e1 	.word	0x0801a4e1
 801a51c:	0801a4e1 	.word	0x0801a4e1
 801a520:	0801a4e1 	.word	0x0801a4e1
 801a524:	0801a671 	.word	0x0801a671
 801a528:	0801a595 	.word	0x0801a595
 801a52c:	0801a653 	.word	0x0801a653
 801a530:	0801a4e1 	.word	0x0801a4e1
 801a534:	0801a4e1 	.word	0x0801a4e1
 801a538:	0801a693 	.word	0x0801a693
 801a53c:	0801a4e1 	.word	0x0801a4e1
 801a540:	0801a595 	.word	0x0801a595
 801a544:	0801a4e1 	.word	0x0801a4e1
 801a548:	0801a4e1 	.word	0x0801a4e1
 801a54c:	0801a65b 	.word	0x0801a65b
 801a550:	682b      	ldr	r3, [r5, #0]
 801a552:	1d1a      	adds	r2, r3, #4
 801a554:	681b      	ldr	r3, [r3, #0]
 801a556:	602a      	str	r2, [r5, #0]
 801a558:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a55c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a560:	2301      	movs	r3, #1
 801a562:	e0a3      	b.n	801a6ac <_printf_i+0x1f4>
 801a564:	6820      	ldr	r0, [r4, #0]
 801a566:	6829      	ldr	r1, [r5, #0]
 801a568:	0606      	lsls	r6, r0, #24
 801a56a:	f101 0304 	add.w	r3, r1, #4
 801a56e:	d50a      	bpl.n	801a586 <_printf_i+0xce>
 801a570:	680e      	ldr	r6, [r1, #0]
 801a572:	602b      	str	r3, [r5, #0]
 801a574:	2e00      	cmp	r6, #0
 801a576:	da03      	bge.n	801a580 <_printf_i+0xc8>
 801a578:	232d      	movs	r3, #45	; 0x2d
 801a57a:	4276      	negs	r6, r6
 801a57c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801a580:	485e      	ldr	r0, [pc, #376]	; (801a6fc <_printf_i+0x244>)
 801a582:	230a      	movs	r3, #10
 801a584:	e019      	b.n	801a5ba <_printf_i+0x102>
 801a586:	680e      	ldr	r6, [r1, #0]
 801a588:	602b      	str	r3, [r5, #0]
 801a58a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a58e:	bf18      	it	ne
 801a590:	b236      	sxthne	r6, r6
 801a592:	e7ef      	b.n	801a574 <_printf_i+0xbc>
 801a594:	682b      	ldr	r3, [r5, #0]
 801a596:	6820      	ldr	r0, [r4, #0]
 801a598:	1d19      	adds	r1, r3, #4
 801a59a:	6029      	str	r1, [r5, #0]
 801a59c:	0601      	lsls	r1, r0, #24
 801a59e:	d501      	bpl.n	801a5a4 <_printf_i+0xec>
 801a5a0:	681e      	ldr	r6, [r3, #0]
 801a5a2:	e002      	b.n	801a5aa <_printf_i+0xf2>
 801a5a4:	0646      	lsls	r6, r0, #25
 801a5a6:	d5fb      	bpl.n	801a5a0 <_printf_i+0xe8>
 801a5a8:	881e      	ldrh	r6, [r3, #0]
 801a5aa:	4854      	ldr	r0, [pc, #336]	; (801a6fc <_printf_i+0x244>)
 801a5ac:	2f6f      	cmp	r7, #111	; 0x6f
 801a5ae:	bf0c      	ite	eq
 801a5b0:	2308      	moveq	r3, #8
 801a5b2:	230a      	movne	r3, #10
 801a5b4:	2100      	movs	r1, #0
 801a5b6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801a5ba:	6865      	ldr	r5, [r4, #4]
 801a5bc:	60a5      	str	r5, [r4, #8]
 801a5be:	2d00      	cmp	r5, #0
 801a5c0:	bfa2      	ittt	ge
 801a5c2:	6821      	ldrge	r1, [r4, #0]
 801a5c4:	f021 0104 	bicge.w	r1, r1, #4
 801a5c8:	6021      	strge	r1, [r4, #0]
 801a5ca:	b90e      	cbnz	r6, 801a5d0 <_printf_i+0x118>
 801a5cc:	2d00      	cmp	r5, #0
 801a5ce:	d04d      	beq.n	801a66c <_printf_i+0x1b4>
 801a5d0:	4615      	mov	r5, r2
 801a5d2:	fbb6 f1f3 	udiv	r1, r6, r3
 801a5d6:	fb03 6711 	mls	r7, r3, r1, r6
 801a5da:	5dc7      	ldrb	r7, [r0, r7]
 801a5dc:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801a5e0:	4637      	mov	r7, r6
 801a5e2:	42bb      	cmp	r3, r7
 801a5e4:	460e      	mov	r6, r1
 801a5e6:	d9f4      	bls.n	801a5d2 <_printf_i+0x11a>
 801a5e8:	2b08      	cmp	r3, #8
 801a5ea:	d10b      	bne.n	801a604 <_printf_i+0x14c>
 801a5ec:	6823      	ldr	r3, [r4, #0]
 801a5ee:	07de      	lsls	r6, r3, #31
 801a5f0:	d508      	bpl.n	801a604 <_printf_i+0x14c>
 801a5f2:	6923      	ldr	r3, [r4, #16]
 801a5f4:	6861      	ldr	r1, [r4, #4]
 801a5f6:	4299      	cmp	r1, r3
 801a5f8:	bfde      	ittt	le
 801a5fa:	2330      	movle	r3, #48	; 0x30
 801a5fc:	f805 3c01 	strble.w	r3, [r5, #-1]
 801a600:	f105 35ff 	addle.w	r5, r5, #4294967295
 801a604:	1b52      	subs	r2, r2, r5
 801a606:	6122      	str	r2, [r4, #16]
 801a608:	f8cd a000 	str.w	sl, [sp]
 801a60c:	464b      	mov	r3, r9
 801a60e:	aa03      	add	r2, sp, #12
 801a610:	4621      	mov	r1, r4
 801a612:	4640      	mov	r0, r8
 801a614:	f7ff fee2 	bl	801a3dc <_printf_common>
 801a618:	3001      	adds	r0, #1
 801a61a:	d14c      	bne.n	801a6b6 <_printf_i+0x1fe>
 801a61c:	f04f 30ff 	mov.w	r0, #4294967295
 801a620:	b004      	add	sp, #16
 801a622:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a626:	4835      	ldr	r0, [pc, #212]	; (801a6fc <_printf_i+0x244>)
 801a628:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801a62c:	6829      	ldr	r1, [r5, #0]
 801a62e:	6823      	ldr	r3, [r4, #0]
 801a630:	f851 6b04 	ldr.w	r6, [r1], #4
 801a634:	6029      	str	r1, [r5, #0]
 801a636:	061d      	lsls	r5, r3, #24
 801a638:	d514      	bpl.n	801a664 <_printf_i+0x1ac>
 801a63a:	07df      	lsls	r7, r3, #31
 801a63c:	bf44      	itt	mi
 801a63e:	f043 0320 	orrmi.w	r3, r3, #32
 801a642:	6023      	strmi	r3, [r4, #0]
 801a644:	b91e      	cbnz	r6, 801a64e <_printf_i+0x196>
 801a646:	6823      	ldr	r3, [r4, #0]
 801a648:	f023 0320 	bic.w	r3, r3, #32
 801a64c:	6023      	str	r3, [r4, #0]
 801a64e:	2310      	movs	r3, #16
 801a650:	e7b0      	b.n	801a5b4 <_printf_i+0xfc>
 801a652:	6823      	ldr	r3, [r4, #0]
 801a654:	f043 0320 	orr.w	r3, r3, #32
 801a658:	6023      	str	r3, [r4, #0]
 801a65a:	2378      	movs	r3, #120	; 0x78
 801a65c:	4828      	ldr	r0, [pc, #160]	; (801a700 <_printf_i+0x248>)
 801a65e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801a662:	e7e3      	b.n	801a62c <_printf_i+0x174>
 801a664:	0659      	lsls	r1, r3, #25
 801a666:	bf48      	it	mi
 801a668:	b2b6      	uxthmi	r6, r6
 801a66a:	e7e6      	b.n	801a63a <_printf_i+0x182>
 801a66c:	4615      	mov	r5, r2
 801a66e:	e7bb      	b.n	801a5e8 <_printf_i+0x130>
 801a670:	682b      	ldr	r3, [r5, #0]
 801a672:	6826      	ldr	r6, [r4, #0]
 801a674:	6961      	ldr	r1, [r4, #20]
 801a676:	1d18      	adds	r0, r3, #4
 801a678:	6028      	str	r0, [r5, #0]
 801a67a:	0635      	lsls	r5, r6, #24
 801a67c:	681b      	ldr	r3, [r3, #0]
 801a67e:	d501      	bpl.n	801a684 <_printf_i+0x1cc>
 801a680:	6019      	str	r1, [r3, #0]
 801a682:	e002      	b.n	801a68a <_printf_i+0x1d2>
 801a684:	0670      	lsls	r0, r6, #25
 801a686:	d5fb      	bpl.n	801a680 <_printf_i+0x1c8>
 801a688:	8019      	strh	r1, [r3, #0]
 801a68a:	2300      	movs	r3, #0
 801a68c:	6123      	str	r3, [r4, #16]
 801a68e:	4615      	mov	r5, r2
 801a690:	e7ba      	b.n	801a608 <_printf_i+0x150>
 801a692:	682b      	ldr	r3, [r5, #0]
 801a694:	1d1a      	adds	r2, r3, #4
 801a696:	602a      	str	r2, [r5, #0]
 801a698:	681d      	ldr	r5, [r3, #0]
 801a69a:	6862      	ldr	r2, [r4, #4]
 801a69c:	2100      	movs	r1, #0
 801a69e:	4628      	mov	r0, r5
 801a6a0:	f7e5 fdae 	bl	8000200 <memchr>
 801a6a4:	b108      	cbz	r0, 801a6aa <_printf_i+0x1f2>
 801a6a6:	1b40      	subs	r0, r0, r5
 801a6a8:	6060      	str	r0, [r4, #4]
 801a6aa:	6863      	ldr	r3, [r4, #4]
 801a6ac:	6123      	str	r3, [r4, #16]
 801a6ae:	2300      	movs	r3, #0
 801a6b0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801a6b4:	e7a8      	b.n	801a608 <_printf_i+0x150>
 801a6b6:	6923      	ldr	r3, [r4, #16]
 801a6b8:	462a      	mov	r2, r5
 801a6ba:	4649      	mov	r1, r9
 801a6bc:	4640      	mov	r0, r8
 801a6be:	47d0      	blx	sl
 801a6c0:	3001      	adds	r0, #1
 801a6c2:	d0ab      	beq.n	801a61c <_printf_i+0x164>
 801a6c4:	6823      	ldr	r3, [r4, #0]
 801a6c6:	079b      	lsls	r3, r3, #30
 801a6c8:	d413      	bmi.n	801a6f2 <_printf_i+0x23a>
 801a6ca:	68e0      	ldr	r0, [r4, #12]
 801a6cc:	9b03      	ldr	r3, [sp, #12]
 801a6ce:	4298      	cmp	r0, r3
 801a6d0:	bfb8      	it	lt
 801a6d2:	4618      	movlt	r0, r3
 801a6d4:	e7a4      	b.n	801a620 <_printf_i+0x168>
 801a6d6:	2301      	movs	r3, #1
 801a6d8:	4632      	mov	r2, r6
 801a6da:	4649      	mov	r1, r9
 801a6dc:	4640      	mov	r0, r8
 801a6de:	47d0      	blx	sl
 801a6e0:	3001      	adds	r0, #1
 801a6e2:	d09b      	beq.n	801a61c <_printf_i+0x164>
 801a6e4:	3501      	adds	r5, #1
 801a6e6:	68e3      	ldr	r3, [r4, #12]
 801a6e8:	9903      	ldr	r1, [sp, #12]
 801a6ea:	1a5b      	subs	r3, r3, r1
 801a6ec:	42ab      	cmp	r3, r5
 801a6ee:	dcf2      	bgt.n	801a6d6 <_printf_i+0x21e>
 801a6f0:	e7eb      	b.n	801a6ca <_printf_i+0x212>
 801a6f2:	2500      	movs	r5, #0
 801a6f4:	f104 0619 	add.w	r6, r4, #25
 801a6f8:	e7f5      	b.n	801a6e6 <_printf_i+0x22e>
 801a6fa:	bf00      	nop
 801a6fc:	0801e1b1 	.word	0x0801e1b1
 801a700:	0801e1c2 	.word	0x0801e1c2

0801a704 <_sbrk_r>:
 801a704:	b538      	push	{r3, r4, r5, lr}
 801a706:	4d06      	ldr	r5, [pc, #24]	; (801a720 <_sbrk_r+0x1c>)
 801a708:	2300      	movs	r3, #0
 801a70a:	4604      	mov	r4, r0
 801a70c:	4608      	mov	r0, r1
 801a70e:	602b      	str	r3, [r5, #0]
 801a710:	f7e7 fc52 	bl	8001fb8 <_sbrk>
 801a714:	1c43      	adds	r3, r0, #1
 801a716:	d102      	bne.n	801a71e <_sbrk_r+0x1a>
 801a718:	682b      	ldr	r3, [r5, #0]
 801a71a:	b103      	cbz	r3, 801a71e <_sbrk_r+0x1a>
 801a71c:	6023      	str	r3, [r4, #0]
 801a71e:	bd38      	pop	{r3, r4, r5, pc}
 801a720:	2000a63c 	.word	0x2000a63c

0801a724 <_raise_r>:
 801a724:	291f      	cmp	r1, #31
 801a726:	b538      	push	{r3, r4, r5, lr}
 801a728:	4604      	mov	r4, r0
 801a72a:	460d      	mov	r5, r1
 801a72c:	d904      	bls.n	801a738 <_raise_r+0x14>
 801a72e:	2316      	movs	r3, #22
 801a730:	6003      	str	r3, [r0, #0]
 801a732:	f04f 30ff 	mov.w	r0, #4294967295
 801a736:	bd38      	pop	{r3, r4, r5, pc}
 801a738:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801a73a:	b112      	cbz	r2, 801a742 <_raise_r+0x1e>
 801a73c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801a740:	b94b      	cbnz	r3, 801a756 <_raise_r+0x32>
 801a742:	4620      	mov	r0, r4
 801a744:	f000 f830 	bl	801a7a8 <_getpid_r>
 801a748:	462a      	mov	r2, r5
 801a74a:	4601      	mov	r1, r0
 801a74c:	4620      	mov	r0, r4
 801a74e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a752:	f000 b817 	b.w	801a784 <_kill_r>
 801a756:	2b01      	cmp	r3, #1
 801a758:	d00a      	beq.n	801a770 <_raise_r+0x4c>
 801a75a:	1c59      	adds	r1, r3, #1
 801a75c:	d103      	bne.n	801a766 <_raise_r+0x42>
 801a75e:	2316      	movs	r3, #22
 801a760:	6003      	str	r3, [r0, #0]
 801a762:	2001      	movs	r0, #1
 801a764:	e7e7      	b.n	801a736 <_raise_r+0x12>
 801a766:	2400      	movs	r4, #0
 801a768:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801a76c:	4628      	mov	r0, r5
 801a76e:	4798      	blx	r3
 801a770:	2000      	movs	r0, #0
 801a772:	e7e0      	b.n	801a736 <_raise_r+0x12>

0801a774 <raise>:
 801a774:	4b02      	ldr	r3, [pc, #8]	; (801a780 <raise+0xc>)
 801a776:	4601      	mov	r1, r0
 801a778:	6818      	ldr	r0, [r3, #0]
 801a77a:	f7ff bfd3 	b.w	801a724 <_raise_r>
 801a77e:	bf00      	nop
 801a780:	200000d8 	.word	0x200000d8

0801a784 <_kill_r>:
 801a784:	b538      	push	{r3, r4, r5, lr}
 801a786:	4d07      	ldr	r5, [pc, #28]	; (801a7a4 <_kill_r+0x20>)
 801a788:	2300      	movs	r3, #0
 801a78a:	4604      	mov	r4, r0
 801a78c:	4608      	mov	r0, r1
 801a78e:	4611      	mov	r1, r2
 801a790:	602b      	str	r3, [r5, #0]
 801a792:	f7e7 fbdb 	bl	8001f4c <_kill>
 801a796:	1c43      	adds	r3, r0, #1
 801a798:	d102      	bne.n	801a7a0 <_kill_r+0x1c>
 801a79a:	682b      	ldr	r3, [r5, #0]
 801a79c:	b103      	cbz	r3, 801a7a0 <_kill_r+0x1c>
 801a79e:	6023      	str	r3, [r4, #0]
 801a7a0:	bd38      	pop	{r3, r4, r5, pc}
 801a7a2:	bf00      	nop
 801a7a4:	2000a63c 	.word	0x2000a63c

0801a7a8 <_getpid_r>:
 801a7a8:	f7e7 bbce 	b.w	8001f48 <_getpid>

0801a7ac <__swbuf_r>:
 801a7ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a7ae:	460e      	mov	r6, r1
 801a7b0:	4614      	mov	r4, r2
 801a7b2:	4605      	mov	r5, r0
 801a7b4:	b118      	cbz	r0, 801a7be <__swbuf_r+0x12>
 801a7b6:	6983      	ldr	r3, [r0, #24]
 801a7b8:	b90b      	cbnz	r3, 801a7be <__swbuf_r+0x12>
 801a7ba:	f000 fa33 	bl	801ac24 <__sinit>
 801a7be:	4b21      	ldr	r3, [pc, #132]	; (801a844 <__swbuf_r+0x98>)
 801a7c0:	429c      	cmp	r4, r3
 801a7c2:	d12b      	bne.n	801a81c <__swbuf_r+0x70>
 801a7c4:	686c      	ldr	r4, [r5, #4]
 801a7c6:	69a3      	ldr	r3, [r4, #24]
 801a7c8:	60a3      	str	r3, [r4, #8]
 801a7ca:	89a3      	ldrh	r3, [r4, #12]
 801a7cc:	071a      	lsls	r2, r3, #28
 801a7ce:	d52f      	bpl.n	801a830 <__swbuf_r+0x84>
 801a7d0:	6923      	ldr	r3, [r4, #16]
 801a7d2:	b36b      	cbz	r3, 801a830 <__swbuf_r+0x84>
 801a7d4:	6923      	ldr	r3, [r4, #16]
 801a7d6:	6820      	ldr	r0, [r4, #0]
 801a7d8:	1ac0      	subs	r0, r0, r3
 801a7da:	6963      	ldr	r3, [r4, #20]
 801a7dc:	b2f6      	uxtb	r6, r6
 801a7de:	4283      	cmp	r3, r0
 801a7e0:	4637      	mov	r7, r6
 801a7e2:	dc04      	bgt.n	801a7ee <__swbuf_r+0x42>
 801a7e4:	4621      	mov	r1, r4
 801a7e6:	4628      	mov	r0, r5
 801a7e8:	f000 f988 	bl	801aafc <_fflush_r>
 801a7ec:	bb30      	cbnz	r0, 801a83c <__swbuf_r+0x90>
 801a7ee:	68a3      	ldr	r3, [r4, #8]
 801a7f0:	3b01      	subs	r3, #1
 801a7f2:	60a3      	str	r3, [r4, #8]
 801a7f4:	6823      	ldr	r3, [r4, #0]
 801a7f6:	1c5a      	adds	r2, r3, #1
 801a7f8:	6022      	str	r2, [r4, #0]
 801a7fa:	701e      	strb	r6, [r3, #0]
 801a7fc:	6963      	ldr	r3, [r4, #20]
 801a7fe:	3001      	adds	r0, #1
 801a800:	4283      	cmp	r3, r0
 801a802:	d004      	beq.n	801a80e <__swbuf_r+0x62>
 801a804:	89a3      	ldrh	r3, [r4, #12]
 801a806:	07db      	lsls	r3, r3, #31
 801a808:	d506      	bpl.n	801a818 <__swbuf_r+0x6c>
 801a80a:	2e0a      	cmp	r6, #10
 801a80c:	d104      	bne.n	801a818 <__swbuf_r+0x6c>
 801a80e:	4621      	mov	r1, r4
 801a810:	4628      	mov	r0, r5
 801a812:	f000 f973 	bl	801aafc <_fflush_r>
 801a816:	b988      	cbnz	r0, 801a83c <__swbuf_r+0x90>
 801a818:	4638      	mov	r0, r7
 801a81a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a81c:	4b0a      	ldr	r3, [pc, #40]	; (801a848 <__swbuf_r+0x9c>)
 801a81e:	429c      	cmp	r4, r3
 801a820:	d101      	bne.n	801a826 <__swbuf_r+0x7a>
 801a822:	68ac      	ldr	r4, [r5, #8]
 801a824:	e7cf      	b.n	801a7c6 <__swbuf_r+0x1a>
 801a826:	4b09      	ldr	r3, [pc, #36]	; (801a84c <__swbuf_r+0xa0>)
 801a828:	429c      	cmp	r4, r3
 801a82a:	bf08      	it	eq
 801a82c:	68ec      	ldreq	r4, [r5, #12]
 801a82e:	e7ca      	b.n	801a7c6 <__swbuf_r+0x1a>
 801a830:	4621      	mov	r1, r4
 801a832:	4628      	mov	r0, r5
 801a834:	f000 f80c 	bl	801a850 <__swsetup_r>
 801a838:	2800      	cmp	r0, #0
 801a83a:	d0cb      	beq.n	801a7d4 <__swbuf_r+0x28>
 801a83c:	f04f 37ff 	mov.w	r7, #4294967295
 801a840:	e7ea      	b.n	801a818 <__swbuf_r+0x6c>
 801a842:	bf00      	nop
 801a844:	0801e1f8 	.word	0x0801e1f8
 801a848:	0801e218 	.word	0x0801e218
 801a84c:	0801e1d8 	.word	0x0801e1d8

0801a850 <__swsetup_r>:
 801a850:	4b32      	ldr	r3, [pc, #200]	; (801a91c <__swsetup_r+0xcc>)
 801a852:	b570      	push	{r4, r5, r6, lr}
 801a854:	681d      	ldr	r5, [r3, #0]
 801a856:	4606      	mov	r6, r0
 801a858:	460c      	mov	r4, r1
 801a85a:	b125      	cbz	r5, 801a866 <__swsetup_r+0x16>
 801a85c:	69ab      	ldr	r3, [r5, #24]
 801a85e:	b913      	cbnz	r3, 801a866 <__swsetup_r+0x16>
 801a860:	4628      	mov	r0, r5
 801a862:	f000 f9df 	bl	801ac24 <__sinit>
 801a866:	4b2e      	ldr	r3, [pc, #184]	; (801a920 <__swsetup_r+0xd0>)
 801a868:	429c      	cmp	r4, r3
 801a86a:	d10f      	bne.n	801a88c <__swsetup_r+0x3c>
 801a86c:	686c      	ldr	r4, [r5, #4]
 801a86e:	89a3      	ldrh	r3, [r4, #12]
 801a870:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a874:	0719      	lsls	r1, r3, #28
 801a876:	d42c      	bmi.n	801a8d2 <__swsetup_r+0x82>
 801a878:	06dd      	lsls	r5, r3, #27
 801a87a:	d411      	bmi.n	801a8a0 <__swsetup_r+0x50>
 801a87c:	2309      	movs	r3, #9
 801a87e:	6033      	str	r3, [r6, #0]
 801a880:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801a884:	81a3      	strh	r3, [r4, #12]
 801a886:	f04f 30ff 	mov.w	r0, #4294967295
 801a88a:	e03e      	b.n	801a90a <__swsetup_r+0xba>
 801a88c:	4b25      	ldr	r3, [pc, #148]	; (801a924 <__swsetup_r+0xd4>)
 801a88e:	429c      	cmp	r4, r3
 801a890:	d101      	bne.n	801a896 <__swsetup_r+0x46>
 801a892:	68ac      	ldr	r4, [r5, #8]
 801a894:	e7eb      	b.n	801a86e <__swsetup_r+0x1e>
 801a896:	4b24      	ldr	r3, [pc, #144]	; (801a928 <__swsetup_r+0xd8>)
 801a898:	429c      	cmp	r4, r3
 801a89a:	bf08      	it	eq
 801a89c:	68ec      	ldreq	r4, [r5, #12]
 801a89e:	e7e6      	b.n	801a86e <__swsetup_r+0x1e>
 801a8a0:	0758      	lsls	r0, r3, #29
 801a8a2:	d512      	bpl.n	801a8ca <__swsetup_r+0x7a>
 801a8a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a8a6:	b141      	cbz	r1, 801a8ba <__swsetup_r+0x6a>
 801a8a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a8ac:	4299      	cmp	r1, r3
 801a8ae:	d002      	beq.n	801a8b6 <__swsetup_r+0x66>
 801a8b0:	4630      	mov	r0, r6
 801a8b2:	f7ff fb59 	bl	8019f68 <_free_r>
 801a8b6:	2300      	movs	r3, #0
 801a8b8:	6363      	str	r3, [r4, #52]	; 0x34
 801a8ba:	89a3      	ldrh	r3, [r4, #12]
 801a8bc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801a8c0:	81a3      	strh	r3, [r4, #12]
 801a8c2:	2300      	movs	r3, #0
 801a8c4:	6063      	str	r3, [r4, #4]
 801a8c6:	6923      	ldr	r3, [r4, #16]
 801a8c8:	6023      	str	r3, [r4, #0]
 801a8ca:	89a3      	ldrh	r3, [r4, #12]
 801a8cc:	f043 0308 	orr.w	r3, r3, #8
 801a8d0:	81a3      	strh	r3, [r4, #12]
 801a8d2:	6923      	ldr	r3, [r4, #16]
 801a8d4:	b94b      	cbnz	r3, 801a8ea <__swsetup_r+0x9a>
 801a8d6:	89a3      	ldrh	r3, [r4, #12]
 801a8d8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801a8dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801a8e0:	d003      	beq.n	801a8ea <__swsetup_r+0x9a>
 801a8e2:	4621      	mov	r1, r4
 801a8e4:	4630      	mov	r0, r6
 801a8e6:	f000 fa63 	bl	801adb0 <__smakebuf_r>
 801a8ea:	89a0      	ldrh	r0, [r4, #12]
 801a8ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a8f0:	f010 0301 	ands.w	r3, r0, #1
 801a8f4:	d00a      	beq.n	801a90c <__swsetup_r+0xbc>
 801a8f6:	2300      	movs	r3, #0
 801a8f8:	60a3      	str	r3, [r4, #8]
 801a8fa:	6963      	ldr	r3, [r4, #20]
 801a8fc:	425b      	negs	r3, r3
 801a8fe:	61a3      	str	r3, [r4, #24]
 801a900:	6923      	ldr	r3, [r4, #16]
 801a902:	b943      	cbnz	r3, 801a916 <__swsetup_r+0xc6>
 801a904:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801a908:	d1ba      	bne.n	801a880 <__swsetup_r+0x30>
 801a90a:	bd70      	pop	{r4, r5, r6, pc}
 801a90c:	0781      	lsls	r1, r0, #30
 801a90e:	bf58      	it	pl
 801a910:	6963      	ldrpl	r3, [r4, #20]
 801a912:	60a3      	str	r3, [r4, #8]
 801a914:	e7f4      	b.n	801a900 <__swsetup_r+0xb0>
 801a916:	2000      	movs	r0, #0
 801a918:	e7f7      	b.n	801a90a <__swsetup_r+0xba>
 801a91a:	bf00      	nop
 801a91c:	200000d8 	.word	0x200000d8
 801a920:	0801e1f8 	.word	0x0801e1f8
 801a924:	0801e218 	.word	0x0801e218
 801a928:	0801e1d8 	.word	0x0801e1d8

0801a92c <__register_exitproc>:
 801a92c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a930:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801a9ec <__register_exitproc+0xc0>
 801a934:	4606      	mov	r6, r0
 801a936:	f8d8 0000 	ldr.w	r0, [r8]
 801a93a:	461f      	mov	r7, r3
 801a93c:	460d      	mov	r5, r1
 801a93e:	4691      	mov	r9, r2
 801a940:	f000 fa0e 	bl	801ad60 <__retarget_lock_acquire_recursive>
 801a944:	4b25      	ldr	r3, [pc, #148]	; (801a9dc <__register_exitproc+0xb0>)
 801a946:	681c      	ldr	r4, [r3, #0]
 801a948:	b934      	cbnz	r4, 801a958 <__register_exitproc+0x2c>
 801a94a:	4c25      	ldr	r4, [pc, #148]	; (801a9e0 <__register_exitproc+0xb4>)
 801a94c:	601c      	str	r4, [r3, #0]
 801a94e:	4b25      	ldr	r3, [pc, #148]	; (801a9e4 <__register_exitproc+0xb8>)
 801a950:	b113      	cbz	r3, 801a958 <__register_exitproc+0x2c>
 801a952:	681b      	ldr	r3, [r3, #0]
 801a954:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801a958:	6863      	ldr	r3, [r4, #4]
 801a95a:	2b1f      	cmp	r3, #31
 801a95c:	dd07      	ble.n	801a96e <__register_exitproc+0x42>
 801a95e:	f8d8 0000 	ldr.w	r0, [r8]
 801a962:	f000 f9ff 	bl	801ad64 <__retarget_lock_release_recursive>
 801a966:	f04f 30ff 	mov.w	r0, #4294967295
 801a96a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a96e:	b34e      	cbz	r6, 801a9c4 <__register_exitproc+0x98>
 801a970:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801a974:	b988      	cbnz	r0, 801a99a <__register_exitproc+0x6e>
 801a976:	4b1c      	ldr	r3, [pc, #112]	; (801a9e8 <__register_exitproc+0xbc>)
 801a978:	b923      	cbnz	r3, 801a984 <__register_exitproc+0x58>
 801a97a:	f8d8 0000 	ldr.w	r0, [r8]
 801a97e:	f000 f9f0 	bl	801ad62 <__retarget_lock_release>
 801a982:	e7f0      	b.n	801a966 <__register_exitproc+0x3a>
 801a984:	f44f 7084 	mov.w	r0, #264	; 0x108
 801a988:	f7ff fac8 	bl	8019f1c <malloc>
 801a98c:	2800      	cmp	r0, #0
 801a98e:	d0f4      	beq.n	801a97a <__register_exitproc+0x4e>
 801a990:	2300      	movs	r3, #0
 801a992:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801a996:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801a99a:	6863      	ldr	r3, [r4, #4]
 801a99c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801a9a0:	2201      	movs	r2, #1
 801a9a2:	409a      	lsls	r2, r3
 801a9a4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801a9a8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801a9ac:	4313      	orrs	r3, r2
 801a9ae:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801a9b2:	2e02      	cmp	r6, #2
 801a9b4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801a9b8:	bf02      	ittt	eq
 801a9ba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801a9be:	4313      	orreq	r3, r2
 801a9c0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801a9c4:	6863      	ldr	r3, [r4, #4]
 801a9c6:	f8d8 0000 	ldr.w	r0, [r8]
 801a9ca:	1c5a      	adds	r2, r3, #1
 801a9cc:	3302      	adds	r3, #2
 801a9ce:	6062      	str	r2, [r4, #4]
 801a9d0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801a9d4:	f000 f9c6 	bl	801ad64 <__retarget_lock_release_recursive>
 801a9d8:	2000      	movs	r0, #0
 801a9da:	e7c6      	b.n	801a96a <__register_exitproc+0x3e>
 801a9dc:	2000a634 	.word	0x2000a634
 801a9e0:	2000a5a8 	.word	0x2000a5a8
 801a9e4:	0801e1d4 	.word	0x0801e1d4
 801a9e8:	08019f1d 	.word	0x08019f1d
 801a9ec:	2000013c 	.word	0x2000013c

0801a9f0 <__sflush_r>:
 801a9f0:	898a      	ldrh	r2, [r1, #12]
 801a9f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a9f6:	4605      	mov	r5, r0
 801a9f8:	0710      	lsls	r0, r2, #28
 801a9fa:	460c      	mov	r4, r1
 801a9fc:	d458      	bmi.n	801aab0 <__sflush_r+0xc0>
 801a9fe:	684b      	ldr	r3, [r1, #4]
 801aa00:	2b00      	cmp	r3, #0
 801aa02:	dc05      	bgt.n	801aa10 <__sflush_r+0x20>
 801aa04:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801aa06:	2b00      	cmp	r3, #0
 801aa08:	dc02      	bgt.n	801aa10 <__sflush_r+0x20>
 801aa0a:	2000      	movs	r0, #0
 801aa0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aa10:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801aa12:	2e00      	cmp	r6, #0
 801aa14:	d0f9      	beq.n	801aa0a <__sflush_r+0x1a>
 801aa16:	2300      	movs	r3, #0
 801aa18:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801aa1c:	682f      	ldr	r7, [r5, #0]
 801aa1e:	602b      	str	r3, [r5, #0]
 801aa20:	d032      	beq.n	801aa88 <__sflush_r+0x98>
 801aa22:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801aa24:	89a3      	ldrh	r3, [r4, #12]
 801aa26:	075a      	lsls	r2, r3, #29
 801aa28:	d505      	bpl.n	801aa36 <__sflush_r+0x46>
 801aa2a:	6863      	ldr	r3, [r4, #4]
 801aa2c:	1ac0      	subs	r0, r0, r3
 801aa2e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801aa30:	b10b      	cbz	r3, 801aa36 <__sflush_r+0x46>
 801aa32:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801aa34:	1ac0      	subs	r0, r0, r3
 801aa36:	2300      	movs	r3, #0
 801aa38:	4602      	mov	r2, r0
 801aa3a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801aa3c:	6a21      	ldr	r1, [r4, #32]
 801aa3e:	4628      	mov	r0, r5
 801aa40:	47b0      	blx	r6
 801aa42:	1c43      	adds	r3, r0, #1
 801aa44:	89a3      	ldrh	r3, [r4, #12]
 801aa46:	d106      	bne.n	801aa56 <__sflush_r+0x66>
 801aa48:	6829      	ldr	r1, [r5, #0]
 801aa4a:	291d      	cmp	r1, #29
 801aa4c:	d82c      	bhi.n	801aaa8 <__sflush_r+0xb8>
 801aa4e:	4a2a      	ldr	r2, [pc, #168]	; (801aaf8 <__sflush_r+0x108>)
 801aa50:	40ca      	lsrs	r2, r1
 801aa52:	07d6      	lsls	r6, r2, #31
 801aa54:	d528      	bpl.n	801aaa8 <__sflush_r+0xb8>
 801aa56:	2200      	movs	r2, #0
 801aa58:	6062      	str	r2, [r4, #4]
 801aa5a:	04d9      	lsls	r1, r3, #19
 801aa5c:	6922      	ldr	r2, [r4, #16]
 801aa5e:	6022      	str	r2, [r4, #0]
 801aa60:	d504      	bpl.n	801aa6c <__sflush_r+0x7c>
 801aa62:	1c42      	adds	r2, r0, #1
 801aa64:	d101      	bne.n	801aa6a <__sflush_r+0x7a>
 801aa66:	682b      	ldr	r3, [r5, #0]
 801aa68:	b903      	cbnz	r3, 801aa6c <__sflush_r+0x7c>
 801aa6a:	6560      	str	r0, [r4, #84]	; 0x54
 801aa6c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801aa6e:	602f      	str	r7, [r5, #0]
 801aa70:	2900      	cmp	r1, #0
 801aa72:	d0ca      	beq.n	801aa0a <__sflush_r+0x1a>
 801aa74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801aa78:	4299      	cmp	r1, r3
 801aa7a:	d002      	beq.n	801aa82 <__sflush_r+0x92>
 801aa7c:	4628      	mov	r0, r5
 801aa7e:	f7ff fa73 	bl	8019f68 <_free_r>
 801aa82:	2000      	movs	r0, #0
 801aa84:	6360      	str	r0, [r4, #52]	; 0x34
 801aa86:	e7c1      	b.n	801aa0c <__sflush_r+0x1c>
 801aa88:	6a21      	ldr	r1, [r4, #32]
 801aa8a:	2301      	movs	r3, #1
 801aa8c:	4628      	mov	r0, r5
 801aa8e:	47b0      	blx	r6
 801aa90:	1c41      	adds	r1, r0, #1
 801aa92:	d1c7      	bne.n	801aa24 <__sflush_r+0x34>
 801aa94:	682b      	ldr	r3, [r5, #0]
 801aa96:	2b00      	cmp	r3, #0
 801aa98:	d0c4      	beq.n	801aa24 <__sflush_r+0x34>
 801aa9a:	2b1d      	cmp	r3, #29
 801aa9c:	d001      	beq.n	801aaa2 <__sflush_r+0xb2>
 801aa9e:	2b16      	cmp	r3, #22
 801aaa0:	d101      	bne.n	801aaa6 <__sflush_r+0xb6>
 801aaa2:	602f      	str	r7, [r5, #0]
 801aaa4:	e7b1      	b.n	801aa0a <__sflush_r+0x1a>
 801aaa6:	89a3      	ldrh	r3, [r4, #12]
 801aaa8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801aaac:	81a3      	strh	r3, [r4, #12]
 801aaae:	e7ad      	b.n	801aa0c <__sflush_r+0x1c>
 801aab0:	690f      	ldr	r7, [r1, #16]
 801aab2:	2f00      	cmp	r7, #0
 801aab4:	d0a9      	beq.n	801aa0a <__sflush_r+0x1a>
 801aab6:	0793      	lsls	r3, r2, #30
 801aab8:	680e      	ldr	r6, [r1, #0]
 801aaba:	bf08      	it	eq
 801aabc:	694b      	ldreq	r3, [r1, #20]
 801aabe:	600f      	str	r7, [r1, #0]
 801aac0:	bf18      	it	ne
 801aac2:	2300      	movne	r3, #0
 801aac4:	eba6 0807 	sub.w	r8, r6, r7
 801aac8:	608b      	str	r3, [r1, #8]
 801aaca:	f1b8 0f00 	cmp.w	r8, #0
 801aace:	dd9c      	ble.n	801aa0a <__sflush_r+0x1a>
 801aad0:	6a21      	ldr	r1, [r4, #32]
 801aad2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801aad4:	4643      	mov	r3, r8
 801aad6:	463a      	mov	r2, r7
 801aad8:	4628      	mov	r0, r5
 801aada:	47b0      	blx	r6
 801aadc:	2800      	cmp	r0, #0
 801aade:	dc06      	bgt.n	801aaee <__sflush_r+0xfe>
 801aae0:	89a3      	ldrh	r3, [r4, #12]
 801aae2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801aae6:	81a3      	strh	r3, [r4, #12]
 801aae8:	f04f 30ff 	mov.w	r0, #4294967295
 801aaec:	e78e      	b.n	801aa0c <__sflush_r+0x1c>
 801aaee:	4407      	add	r7, r0
 801aaf0:	eba8 0800 	sub.w	r8, r8, r0
 801aaf4:	e7e9      	b.n	801aaca <__sflush_r+0xda>
 801aaf6:	bf00      	nop
 801aaf8:	20400001 	.word	0x20400001

0801aafc <_fflush_r>:
 801aafc:	b538      	push	{r3, r4, r5, lr}
 801aafe:	690b      	ldr	r3, [r1, #16]
 801ab00:	4605      	mov	r5, r0
 801ab02:	460c      	mov	r4, r1
 801ab04:	b913      	cbnz	r3, 801ab0c <_fflush_r+0x10>
 801ab06:	2500      	movs	r5, #0
 801ab08:	4628      	mov	r0, r5
 801ab0a:	bd38      	pop	{r3, r4, r5, pc}
 801ab0c:	b118      	cbz	r0, 801ab16 <_fflush_r+0x1a>
 801ab0e:	6983      	ldr	r3, [r0, #24]
 801ab10:	b90b      	cbnz	r3, 801ab16 <_fflush_r+0x1a>
 801ab12:	f000 f887 	bl	801ac24 <__sinit>
 801ab16:	4b14      	ldr	r3, [pc, #80]	; (801ab68 <_fflush_r+0x6c>)
 801ab18:	429c      	cmp	r4, r3
 801ab1a:	d11b      	bne.n	801ab54 <_fflush_r+0x58>
 801ab1c:	686c      	ldr	r4, [r5, #4]
 801ab1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ab22:	2b00      	cmp	r3, #0
 801ab24:	d0ef      	beq.n	801ab06 <_fflush_r+0xa>
 801ab26:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801ab28:	07d0      	lsls	r0, r2, #31
 801ab2a:	d404      	bmi.n	801ab36 <_fflush_r+0x3a>
 801ab2c:	0599      	lsls	r1, r3, #22
 801ab2e:	d402      	bmi.n	801ab36 <_fflush_r+0x3a>
 801ab30:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ab32:	f000 f915 	bl	801ad60 <__retarget_lock_acquire_recursive>
 801ab36:	4628      	mov	r0, r5
 801ab38:	4621      	mov	r1, r4
 801ab3a:	f7ff ff59 	bl	801a9f0 <__sflush_r>
 801ab3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801ab40:	07da      	lsls	r2, r3, #31
 801ab42:	4605      	mov	r5, r0
 801ab44:	d4e0      	bmi.n	801ab08 <_fflush_r+0xc>
 801ab46:	89a3      	ldrh	r3, [r4, #12]
 801ab48:	059b      	lsls	r3, r3, #22
 801ab4a:	d4dd      	bmi.n	801ab08 <_fflush_r+0xc>
 801ab4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801ab4e:	f000 f909 	bl	801ad64 <__retarget_lock_release_recursive>
 801ab52:	e7d9      	b.n	801ab08 <_fflush_r+0xc>
 801ab54:	4b05      	ldr	r3, [pc, #20]	; (801ab6c <_fflush_r+0x70>)
 801ab56:	429c      	cmp	r4, r3
 801ab58:	d101      	bne.n	801ab5e <_fflush_r+0x62>
 801ab5a:	68ac      	ldr	r4, [r5, #8]
 801ab5c:	e7df      	b.n	801ab1e <_fflush_r+0x22>
 801ab5e:	4b04      	ldr	r3, [pc, #16]	; (801ab70 <_fflush_r+0x74>)
 801ab60:	429c      	cmp	r4, r3
 801ab62:	bf08      	it	eq
 801ab64:	68ec      	ldreq	r4, [r5, #12]
 801ab66:	e7da      	b.n	801ab1e <_fflush_r+0x22>
 801ab68:	0801e1f8 	.word	0x0801e1f8
 801ab6c:	0801e218 	.word	0x0801e218
 801ab70:	0801e1d8 	.word	0x0801e1d8

0801ab74 <std>:
 801ab74:	2300      	movs	r3, #0
 801ab76:	b510      	push	{r4, lr}
 801ab78:	4604      	mov	r4, r0
 801ab7a:	e9c0 3300 	strd	r3, r3, [r0]
 801ab7e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801ab82:	6083      	str	r3, [r0, #8]
 801ab84:	8181      	strh	r1, [r0, #12]
 801ab86:	6643      	str	r3, [r0, #100]	; 0x64
 801ab88:	81c2      	strh	r2, [r0, #14]
 801ab8a:	6183      	str	r3, [r0, #24]
 801ab8c:	4619      	mov	r1, r3
 801ab8e:	2208      	movs	r2, #8
 801ab90:	305c      	adds	r0, #92	; 0x5c
 801ab92:	f7ff f9e1 	bl	8019f58 <memset>
 801ab96:	4b05      	ldr	r3, [pc, #20]	; (801abac <std+0x38>)
 801ab98:	6263      	str	r3, [r4, #36]	; 0x24
 801ab9a:	4b05      	ldr	r3, [pc, #20]	; (801abb0 <std+0x3c>)
 801ab9c:	62a3      	str	r3, [r4, #40]	; 0x28
 801ab9e:	4b05      	ldr	r3, [pc, #20]	; (801abb4 <std+0x40>)
 801aba0:	62e3      	str	r3, [r4, #44]	; 0x2c
 801aba2:	4b05      	ldr	r3, [pc, #20]	; (801abb8 <std+0x44>)
 801aba4:	6224      	str	r4, [r4, #32]
 801aba6:	6323      	str	r3, [r4, #48]	; 0x30
 801aba8:	bd10      	pop	{r4, pc}
 801abaa:	bf00      	nop
 801abac:	0801ae49 	.word	0x0801ae49
 801abb0:	0801ae6b 	.word	0x0801ae6b
 801abb4:	0801aea3 	.word	0x0801aea3
 801abb8:	0801aec7 	.word	0x0801aec7

0801abbc <_cleanup_r>:
 801abbc:	4901      	ldr	r1, [pc, #4]	; (801abc4 <_cleanup_r+0x8>)
 801abbe:	f000 b8af 	b.w	801ad20 <_fwalk_reent>
 801abc2:	bf00      	nop
 801abc4:	0801aafd 	.word	0x0801aafd

0801abc8 <__sfmoreglue>:
 801abc8:	b570      	push	{r4, r5, r6, lr}
 801abca:	2268      	movs	r2, #104	; 0x68
 801abcc:	1e4d      	subs	r5, r1, #1
 801abce:	4355      	muls	r5, r2
 801abd0:	460e      	mov	r6, r1
 801abd2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801abd6:	f7ff fa33 	bl	801a040 <_malloc_r>
 801abda:	4604      	mov	r4, r0
 801abdc:	b140      	cbz	r0, 801abf0 <__sfmoreglue+0x28>
 801abde:	2100      	movs	r1, #0
 801abe0:	e9c0 1600 	strd	r1, r6, [r0]
 801abe4:	300c      	adds	r0, #12
 801abe6:	60a0      	str	r0, [r4, #8]
 801abe8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801abec:	f7ff f9b4 	bl	8019f58 <memset>
 801abf0:	4620      	mov	r0, r4
 801abf2:	bd70      	pop	{r4, r5, r6, pc}

0801abf4 <__sfp_lock_acquire>:
 801abf4:	4801      	ldr	r0, [pc, #4]	; (801abfc <__sfp_lock_acquire+0x8>)
 801abf6:	f000 b8b3 	b.w	801ad60 <__retarget_lock_acquire_recursive>
 801abfa:	bf00      	nop
 801abfc:	2000a63a 	.word	0x2000a63a

0801ac00 <__sfp_lock_release>:
 801ac00:	4801      	ldr	r0, [pc, #4]	; (801ac08 <__sfp_lock_release+0x8>)
 801ac02:	f000 b8af 	b.w	801ad64 <__retarget_lock_release_recursive>
 801ac06:	bf00      	nop
 801ac08:	2000a63a 	.word	0x2000a63a

0801ac0c <__sinit_lock_acquire>:
 801ac0c:	4801      	ldr	r0, [pc, #4]	; (801ac14 <__sinit_lock_acquire+0x8>)
 801ac0e:	f000 b8a7 	b.w	801ad60 <__retarget_lock_acquire_recursive>
 801ac12:	bf00      	nop
 801ac14:	2000a63b 	.word	0x2000a63b

0801ac18 <__sinit_lock_release>:
 801ac18:	4801      	ldr	r0, [pc, #4]	; (801ac20 <__sinit_lock_release+0x8>)
 801ac1a:	f000 b8a3 	b.w	801ad64 <__retarget_lock_release_recursive>
 801ac1e:	bf00      	nop
 801ac20:	2000a63b 	.word	0x2000a63b

0801ac24 <__sinit>:
 801ac24:	b510      	push	{r4, lr}
 801ac26:	4604      	mov	r4, r0
 801ac28:	f7ff fff0 	bl	801ac0c <__sinit_lock_acquire>
 801ac2c:	69a3      	ldr	r3, [r4, #24]
 801ac2e:	b11b      	cbz	r3, 801ac38 <__sinit+0x14>
 801ac30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ac34:	f7ff bff0 	b.w	801ac18 <__sinit_lock_release>
 801ac38:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801ac3c:	6523      	str	r3, [r4, #80]	; 0x50
 801ac3e:	4b13      	ldr	r3, [pc, #76]	; (801ac8c <__sinit+0x68>)
 801ac40:	4a13      	ldr	r2, [pc, #76]	; (801ac90 <__sinit+0x6c>)
 801ac42:	681b      	ldr	r3, [r3, #0]
 801ac44:	62a2      	str	r2, [r4, #40]	; 0x28
 801ac46:	42a3      	cmp	r3, r4
 801ac48:	bf04      	itt	eq
 801ac4a:	2301      	moveq	r3, #1
 801ac4c:	61a3      	streq	r3, [r4, #24]
 801ac4e:	4620      	mov	r0, r4
 801ac50:	f000 f820 	bl	801ac94 <__sfp>
 801ac54:	6060      	str	r0, [r4, #4]
 801ac56:	4620      	mov	r0, r4
 801ac58:	f000 f81c 	bl	801ac94 <__sfp>
 801ac5c:	60a0      	str	r0, [r4, #8]
 801ac5e:	4620      	mov	r0, r4
 801ac60:	f000 f818 	bl	801ac94 <__sfp>
 801ac64:	2200      	movs	r2, #0
 801ac66:	60e0      	str	r0, [r4, #12]
 801ac68:	2104      	movs	r1, #4
 801ac6a:	6860      	ldr	r0, [r4, #4]
 801ac6c:	f7ff ff82 	bl	801ab74 <std>
 801ac70:	68a0      	ldr	r0, [r4, #8]
 801ac72:	2201      	movs	r2, #1
 801ac74:	2109      	movs	r1, #9
 801ac76:	f7ff ff7d 	bl	801ab74 <std>
 801ac7a:	68e0      	ldr	r0, [r4, #12]
 801ac7c:	2202      	movs	r2, #2
 801ac7e:	2112      	movs	r1, #18
 801ac80:	f7ff ff78 	bl	801ab74 <std>
 801ac84:	2301      	movs	r3, #1
 801ac86:	61a3      	str	r3, [r4, #24]
 801ac88:	e7d2      	b.n	801ac30 <__sinit+0xc>
 801ac8a:	bf00      	nop
 801ac8c:	0801e19c 	.word	0x0801e19c
 801ac90:	0801abbd 	.word	0x0801abbd

0801ac94 <__sfp>:
 801ac94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ac96:	4607      	mov	r7, r0
 801ac98:	f7ff ffac 	bl	801abf4 <__sfp_lock_acquire>
 801ac9c:	4b1e      	ldr	r3, [pc, #120]	; (801ad18 <__sfp+0x84>)
 801ac9e:	681e      	ldr	r6, [r3, #0]
 801aca0:	69b3      	ldr	r3, [r6, #24]
 801aca2:	b913      	cbnz	r3, 801acaa <__sfp+0x16>
 801aca4:	4630      	mov	r0, r6
 801aca6:	f7ff ffbd 	bl	801ac24 <__sinit>
 801acaa:	3648      	adds	r6, #72	; 0x48
 801acac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801acb0:	3b01      	subs	r3, #1
 801acb2:	d503      	bpl.n	801acbc <__sfp+0x28>
 801acb4:	6833      	ldr	r3, [r6, #0]
 801acb6:	b30b      	cbz	r3, 801acfc <__sfp+0x68>
 801acb8:	6836      	ldr	r6, [r6, #0]
 801acba:	e7f7      	b.n	801acac <__sfp+0x18>
 801acbc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801acc0:	b9d5      	cbnz	r5, 801acf8 <__sfp+0x64>
 801acc2:	4b16      	ldr	r3, [pc, #88]	; (801ad1c <__sfp+0x88>)
 801acc4:	60e3      	str	r3, [r4, #12]
 801acc6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801acca:	6665      	str	r5, [r4, #100]	; 0x64
 801accc:	f000 f847 	bl	801ad5e <__retarget_lock_init_recursive>
 801acd0:	f7ff ff96 	bl	801ac00 <__sfp_lock_release>
 801acd4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801acd8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801acdc:	6025      	str	r5, [r4, #0]
 801acde:	61a5      	str	r5, [r4, #24]
 801ace0:	2208      	movs	r2, #8
 801ace2:	4629      	mov	r1, r5
 801ace4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801ace8:	f7ff f936 	bl	8019f58 <memset>
 801acec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801acf0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801acf4:	4620      	mov	r0, r4
 801acf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801acf8:	3468      	adds	r4, #104	; 0x68
 801acfa:	e7d9      	b.n	801acb0 <__sfp+0x1c>
 801acfc:	2104      	movs	r1, #4
 801acfe:	4638      	mov	r0, r7
 801ad00:	f7ff ff62 	bl	801abc8 <__sfmoreglue>
 801ad04:	4604      	mov	r4, r0
 801ad06:	6030      	str	r0, [r6, #0]
 801ad08:	2800      	cmp	r0, #0
 801ad0a:	d1d5      	bne.n	801acb8 <__sfp+0x24>
 801ad0c:	f7ff ff78 	bl	801ac00 <__sfp_lock_release>
 801ad10:	230c      	movs	r3, #12
 801ad12:	603b      	str	r3, [r7, #0]
 801ad14:	e7ee      	b.n	801acf4 <__sfp+0x60>
 801ad16:	bf00      	nop
 801ad18:	0801e19c 	.word	0x0801e19c
 801ad1c:	ffff0001 	.word	0xffff0001

0801ad20 <_fwalk_reent>:
 801ad20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ad24:	4606      	mov	r6, r0
 801ad26:	4688      	mov	r8, r1
 801ad28:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801ad2c:	2700      	movs	r7, #0
 801ad2e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801ad32:	f1b9 0901 	subs.w	r9, r9, #1
 801ad36:	d505      	bpl.n	801ad44 <_fwalk_reent+0x24>
 801ad38:	6824      	ldr	r4, [r4, #0]
 801ad3a:	2c00      	cmp	r4, #0
 801ad3c:	d1f7      	bne.n	801ad2e <_fwalk_reent+0xe>
 801ad3e:	4638      	mov	r0, r7
 801ad40:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ad44:	89ab      	ldrh	r3, [r5, #12]
 801ad46:	2b01      	cmp	r3, #1
 801ad48:	d907      	bls.n	801ad5a <_fwalk_reent+0x3a>
 801ad4a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ad4e:	3301      	adds	r3, #1
 801ad50:	d003      	beq.n	801ad5a <_fwalk_reent+0x3a>
 801ad52:	4629      	mov	r1, r5
 801ad54:	4630      	mov	r0, r6
 801ad56:	47c0      	blx	r8
 801ad58:	4307      	orrs	r7, r0
 801ad5a:	3568      	adds	r5, #104	; 0x68
 801ad5c:	e7e9      	b.n	801ad32 <_fwalk_reent+0x12>

0801ad5e <__retarget_lock_init_recursive>:
 801ad5e:	4770      	bx	lr

0801ad60 <__retarget_lock_acquire_recursive>:
 801ad60:	4770      	bx	lr

0801ad62 <__retarget_lock_release>:
 801ad62:	4770      	bx	lr

0801ad64 <__retarget_lock_release_recursive>:
 801ad64:	4770      	bx	lr

0801ad66 <__swhatbuf_r>:
 801ad66:	b570      	push	{r4, r5, r6, lr}
 801ad68:	460e      	mov	r6, r1
 801ad6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ad6e:	2900      	cmp	r1, #0
 801ad70:	b096      	sub	sp, #88	; 0x58
 801ad72:	4614      	mov	r4, r2
 801ad74:	461d      	mov	r5, r3
 801ad76:	da08      	bge.n	801ad8a <__swhatbuf_r+0x24>
 801ad78:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801ad7c:	2200      	movs	r2, #0
 801ad7e:	602a      	str	r2, [r5, #0]
 801ad80:	061a      	lsls	r2, r3, #24
 801ad82:	d410      	bmi.n	801ada6 <__swhatbuf_r+0x40>
 801ad84:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ad88:	e00e      	b.n	801ada8 <__swhatbuf_r+0x42>
 801ad8a:	466a      	mov	r2, sp
 801ad8c:	f000 f8c2 	bl	801af14 <_fstat_r>
 801ad90:	2800      	cmp	r0, #0
 801ad92:	dbf1      	blt.n	801ad78 <__swhatbuf_r+0x12>
 801ad94:	9a01      	ldr	r2, [sp, #4]
 801ad96:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801ad9a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801ad9e:	425a      	negs	r2, r3
 801ada0:	415a      	adcs	r2, r3
 801ada2:	602a      	str	r2, [r5, #0]
 801ada4:	e7ee      	b.n	801ad84 <__swhatbuf_r+0x1e>
 801ada6:	2340      	movs	r3, #64	; 0x40
 801ada8:	2000      	movs	r0, #0
 801adaa:	6023      	str	r3, [r4, #0]
 801adac:	b016      	add	sp, #88	; 0x58
 801adae:	bd70      	pop	{r4, r5, r6, pc}

0801adb0 <__smakebuf_r>:
 801adb0:	898b      	ldrh	r3, [r1, #12]
 801adb2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801adb4:	079d      	lsls	r5, r3, #30
 801adb6:	4606      	mov	r6, r0
 801adb8:	460c      	mov	r4, r1
 801adba:	d507      	bpl.n	801adcc <__smakebuf_r+0x1c>
 801adbc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801adc0:	6023      	str	r3, [r4, #0]
 801adc2:	6123      	str	r3, [r4, #16]
 801adc4:	2301      	movs	r3, #1
 801adc6:	6163      	str	r3, [r4, #20]
 801adc8:	b002      	add	sp, #8
 801adca:	bd70      	pop	{r4, r5, r6, pc}
 801adcc:	ab01      	add	r3, sp, #4
 801adce:	466a      	mov	r2, sp
 801add0:	f7ff ffc9 	bl	801ad66 <__swhatbuf_r>
 801add4:	9900      	ldr	r1, [sp, #0]
 801add6:	4605      	mov	r5, r0
 801add8:	4630      	mov	r0, r6
 801adda:	f7ff f931 	bl	801a040 <_malloc_r>
 801adde:	b948      	cbnz	r0, 801adf4 <__smakebuf_r+0x44>
 801ade0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ade4:	059a      	lsls	r2, r3, #22
 801ade6:	d4ef      	bmi.n	801adc8 <__smakebuf_r+0x18>
 801ade8:	f023 0303 	bic.w	r3, r3, #3
 801adec:	f043 0302 	orr.w	r3, r3, #2
 801adf0:	81a3      	strh	r3, [r4, #12]
 801adf2:	e7e3      	b.n	801adbc <__smakebuf_r+0xc>
 801adf4:	4b0d      	ldr	r3, [pc, #52]	; (801ae2c <__smakebuf_r+0x7c>)
 801adf6:	62b3      	str	r3, [r6, #40]	; 0x28
 801adf8:	89a3      	ldrh	r3, [r4, #12]
 801adfa:	6020      	str	r0, [r4, #0]
 801adfc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ae00:	81a3      	strh	r3, [r4, #12]
 801ae02:	9b00      	ldr	r3, [sp, #0]
 801ae04:	6163      	str	r3, [r4, #20]
 801ae06:	9b01      	ldr	r3, [sp, #4]
 801ae08:	6120      	str	r0, [r4, #16]
 801ae0a:	b15b      	cbz	r3, 801ae24 <__smakebuf_r+0x74>
 801ae0c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ae10:	4630      	mov	r0, r6
 801ae12:	f000 f891 	bl	801af38 <_isatty_r>
 801ae16:	b128      	cbz	r0, 801ae24 <__smakebuf_r+0x74>
 801ae18:	89a3      	ldrh	r3, [r4, #12]
 801ae1a:	f023 0303 	bic.w	r3, r3, #3
 801ae1e:	f043 0301 	orr.w	r3, r3, #1
 801ae22:	81a3      	strh	r3, [r4, #12]
 801ae24:	89a0      	ldrh	r0, [r4, #12]
 801ae26:	4305      	orrs	r5, r0
 801ae28:	81a5      	strh	r5, [r4, #12]
 801ae2a:	e7cd      	b.n	801adc8 <__smakebuf_r+0x18>
 801ae2c:	0801abbd 	.word	0x0801abbd

0801ae30 <__malloc_lock>:
 801ae30:	4801      	ldr	r0, [pc, #4]	; (801ae38 <__malloc_lock+0x8>)
 801ae32:	f7ff bf95 	b.w	801ad60 <__retarget_lock_acquire_recursive>
 801ae36:	bf00      	nop
 801ae38:	2000a639 	.word	0x2000a639

0801ae3c <__malloc_unlock>:
 801ae3c:	4801      	ldr	r0, [pc, #4]	; (801ae44 <__malloc_unlock+0x8>)
 801ae3e:	f7ff bf91 	b.w	801ad64 <__retarget_lock_release_recursive>
 801ae42:	bf00      	nop
 801ae44:	2000a639 	.word	0x2000a639

0801ae48 <__sread>:
 801ae48:	b510      	push	{r4, lr}
 801ae4a:	460c      	mov	r4, r1
 801ae4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae50:	f000 f894 	bl	801af7c <_read_r>
 801ae54:	2800      	cmp	r0, #0
 801ae56:	bfab      	itete	ge
 801ae58:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801ae5a:	89a3      	ldrhlt	r3, [r4, #12]
 801ae5c:	181b      	addge	r3, r3, r0
 801ae5e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801ae62:	bfac      	ite	ge
 801ae64:	6563      	strge	r3, [r4, #84]	; 0x54
 801ae66:	81a3      	strhlt	r3, [r4, #12]
 801ae68:	bd10      	pop	{r4, pc}

0801ae6a <__swrite>:
 801ae6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae6e:	461f      	mov	r7, r3
 801ae70:	898b      	ldrh	r3, [r1, #12]
 801ae72:	05db      	lsls	r3, r3, #23
 801ae74:	4605      	mov	r5, r0
 801ae76:	460c      	mov	r4, r1
 801ae78:	4616      	mov	r6, r2
 801ae7a:	d505      	bpl.n	801ae88 <__swrite+0x1e>
 801ae7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ae80:	2302      	movs	r3, #2
 801ae82:	2200      	movs	r2, #0
 801ae84:	f000 f868 	bl	801af58 <_lseek_r>
 801ae88:	89a3      	ldrh	r3, [r4, #12]
 801ae8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ae8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801ae92:	81a3      	strh	r3, [r4, #12]
 801ae94:	4632      	mov	r2, r6
 801ae96:	463b      	mov	r3, r7
 801ae98:	4628      	mov	r0, r5
 801ae9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801ae9e:	f000 b817 	b.w	801aed0 <_write_r>

0801aea2 <__sseek>:
 801aea2:	b510      	push	{r4, lr}
 801aea4:	460c      	mov	r4, r1
 801aea6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801aeaa:	f000 f855 	bl	801af58 <_lseek_r>
 801aeae:	1c43      	adds	r3, r0, #1
 801aeb0:	89a3      	ldrh	r3, [r4, #12]
 801aeb2:	bf15      	itete	ne
 801aeb4:	6560      	strne	r0, [r4, #84]	; 0x54
 801aeb6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801aeba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801aebe:	81a3      	strheq	r3, [r4, #12]
 801aec0:	bf18      	it	ne
 801aec2:	81a3      	strhne	r3, [r4, #12]
 801aec4:	bd10      	pop	{r4, pc}

0801aec6 <__sclose>:
 801aec6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801aeca:	f000 b813 	b.w	801aef4 <_close_r>
	...

0801aed0 <_write_r>:
 801aed0:	b538      	push	{r3, r4, r5, lr}
 801aed2:	4d07      	ldr	r5, [pc, #28]	; (801aef0 <_write_r+0x20>)
 801aed4:	4604      	mov	r4, r0
 801aed6:	4608      	mov	r0, r1
 801aed8:	4611      	mov	r1, r2
 801aeda:	2200      	movs	r2, #0
 801aedc:	602a      	str	r2, [r5, #0]
 801aede:	461a      	mov	r2, r3
 801aee0:	f7e7 f850 	bl	8001f84 <_write>
 801aee4:	1c43      	adds	r3, r0, #1
 801aee6:	d102      	bne.n	801aeee <_write_r+0x1e>
 801aee8:	682b      	ldr	r3, [r5, #0]
 801aeea:	b103      	cbz	r3, 801aeee <_write_r+0x1e>
 801aeec:	6023      	str	r3, [r4, #0]
 801aeee:	bd38      	pop	{r3, r4, r5, pc}
 801aef0:	2000a63c 	.word	0x2000a63c

0801aef4 <_close_r>:
 801aef4:	b538      	push	{r3, r4, r5, lr}
 801aef6:	4d06      	ldr	r5, [pc, #24]	; (801af10 <_close_r+0x1c>)
 801aef8:	2300      	movs	r3, #0
 801aefa:	4604      	mov	r4, r0
 801aefc:	4608      	mov	r0, r1
 801aefe:	602b      	str	r3, [r5, #0]
 801af00:	f7e7 f84e 	bl	8001fa0 <_close>
 801af04:	1c43      	adds	r3, r0, #1
 801af06:	d102      	bne.n	801af0e <_close_r+0x1a>
 801af08:	682b      	ldr	r3, [r5, #0]
 801af0a:	b103      	cbz	r3, 801af0e <_close_r+0x1a>
 801af0c:	6023      	str	r3, [r4, #0]
 801af0e:	bd38      	pop	{r3, r4, r5, pc}
 801af10:	2000a63c 	.word	0x2000a63c

0801af14 <_fstat_r>:
 801af14:	b538      	push	{r3, r4, r5, lr}
 801af16:	4d07      	ldr	r5, [pc, #28]	; (801af34 <_fstat_r+0x20>)
 801af18:	2300      	movs	r3, #0
 801af1a:	4604      	mov	r4, r0
 801af1c:	4608      	mov	r0, r1
 801af1e:	4611      	mov	r1, r2
 801af20:	602b      	str	r3, [r5, #0]
 801af22:	f7e7 f840 	bl	8001fa6 <_fstat>
 801af26:	1c43      	adds	r3, r0, #1
 801af28:	d102      	bne.n	801af30 <_fstat_r+0x1c>
 801af2a:	682b      	ldr	r3, [r5, #0]
 801af2c:	b103      	cbz	r3, 801af30 <_fstat_r+0x1c>
 801af2e:	6023      	str	r3, [r4, #0]
 801af30:	bd38      	pop	{r3, r4, r5, pc}
 801af32:	bf00      	nop
 801af34:	2000a63c 	.word	0x2000a63c

0801af38 <_isatty_r>:
 801af38:	b538      	push	{r3, r4, r5, lr}
 801af3a:	4d06      	ldr	r5, [pc, #24]	; (801af54 <_isatty_r+0x1c>)
 801af3c:	2300      	movs	r3, #0
 801af3e:	4604      	mov	r4, r0
 801af40:	4608      	mov	r0, r1
 801af42:	602b      	str	r3, [r5, #0]
 801af44:	f7e7 f834 	bl	8001fb0 <_isatty>
 801af48:	1c43      	adds	r3, r0, #1
 801af4a:	d102      	bne.n	801af52 <_isatty_r+0x1a>
 801af4c:	682b      	ldr	r3, [r5, #0]
 801af4e:	b103      	cbz	r3, 801af52 <_isatty_r+0x1a>
 801af50:	6023      	str	r3, [r4, #0]
 801af52:	bd38      	pop	{r3, r4, r5, pc}
 801af54:	2000a63c 	.word	0x2000a63c

0801af58 <_lseek_r>:
 801af58:	b538      	push	{r3, r4, r5, lr}
 801af5a:	4d07      	ldr	r5, [pc, #28]	; (801af78 <_lseek_r+0x20>)
 801af5c:	4604      	mov	r4, r0
 801af5e:	4608      	mov	r0, r1
 801af60:	4611      	mov	r1, r2
 801af62:	2200      	movs	r2, #0
 801af64:	602a      	str	r2, [r5, #0]
 801af66:	461a      	mov	r2, r3
 801af68:	f7e7 f824 	bl	8001fb4 <_lseek>
 801af6c:	1c43      	adds	r3, r0, #1
 801af6e:	d102      	bne.n	801af76 <_lseek_r+0x1e>
 801af70:	682b      	ldr	r3, [r5, #0]
 801af72:	b103      	cbz	r3, 801af76 <_lseek_r+0x1e>
 801af74:	6023      	str	r3, [r4, #0]
 801af76:	bd38      	pop	{r3, r4, r5, pc}
 801af78:	2000a63c 	.word	0x2000a63c

0801af7c <_read_r>:
 801af7c:	b538      	push	{r3, r4, r5, lr}
 801af7e:	4d07      	ldr	r5, [pc, #28]	; (801af9c <_read_r+0x20>)
 801af80:	4604      	mov	r4, r0
 801af82:	4608      	mov	r0, r1
 801af84:	4611      	mov	r1, r2
 801af86:	2200      	movs	r2, #0
 801af88:	602a      	str	r2, [r5, #0]
 801af8a:	461a      	mov	r2, r3
 801af8c:	f7e6 ffec 	bl	8001f68 <_read>
 801af90:	1c43      	adds	r3, r0, #1
 801af92:	d102      	bne.n	801af9a <_read_r+0x1e>
 801af94:	682b      	ldr	r3, [r5, #0]
 801af96:	b103      	cbz	r3, 801af9a <_read_r+0x1e>
 801af98:	6023      	str	r3, [r4, #0]
 801af9a:	bd38      	pop	{r3, r4, r5, pc}
 801af9c:	2000a63c 	.word	0x2000a63c

0801afa0 <_init>:
 801afa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801afa2:	bf00      	nop
 801afa4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801afa6:	bc08      	pop	{r3}
 801afa8:	469e      	mov	lr, r3
 801afaa:	4770      	bx	lr

0801afac <_fini>:
 801afac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801afae:	bf00      	nop
 801afb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801afb2:	bc08      	pop	{r3}
 801afb4:	469e      	mov	lr, r3
 801afb6:	4770      	bx	lr
